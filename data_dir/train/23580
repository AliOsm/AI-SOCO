/* 489D */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

typedef struct {
	int v, next;
} Edge_t;

const int maxn = 3005;
const int maxm = 30005;
Edge_t E[maxm];
int head[maxn], L = 0;
int c[maxn][maxn];

void init() {
	memset(head, -1, sizeof(head));
	memset(c, 0, sizeof(c));
	L = 0;
}

void addEdge(int u, int v) {
	E[L].v = v;
	E[L].next = head[u];
	head[u] = L++;
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	int n, m;
	int u, v, v_;
	__int64 ans = 0;
	
	init();
	scanf("%d %d", &n, &m);
	rep(i, 0, m) {
		scanf("%d %d", &u, &v);
		addEdge(u, v);
	}
	
	int i, j, k;
	// Edge_t e;
	
	for (u=1; u<=n; ++u) {
		for (j=head[u]; j!=-1; j=E[j].next) {
			v = E[j].v;
			for (k=head[v]; k!=-1; k=E[k].next) {
				v_ = E[k].v;
				++c[u][v_];
			}
		}
	}
	
	for (i=1; i<=n; ++i) {
		for (j=1; j<=n; ++j) {
			if (i == j)
				continue;
			ans += c[i][j]*(c[i][j]-1)/2;
		}
	}
	
	printf("%I64d\n", ans);
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
