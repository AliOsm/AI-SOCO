#include<bits/stdc++.h>
using namespace std;
#define ll unsigned long long int 
#define mod 1000000007
#define mkp make_pair
#define pb push_back

ll modexpo(ll x,ll y){if(y==0)return 1;if(y%2){ll viky=modexpo(x,y/2);
return (((x*viky)%mod)*viky)%mod;}else{ll viky=modexpo(x,y/2);return (viky*viky)%mod;
}}
vector<pair<ll,ll> >v[2000];
bool vp[2000][1001];
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t,i,j,k,s,m,l,n,r;
    cin>>n>>m;
    cin>>s>>t;
    ll ans=0;
    for(i=0;i<m;i++)
    {
    	cin>>l>>r;
    	v[l].pb(mkp(r,1));
    	v[r].pb(mkp(l,1));
    	vp[l][r]=true;
    	vp[r][l]=true;
    }
    set<pair<ll,ll> >vikas;
	ll ds[1001];
	for(i=0;i<1001;i++)
	{
	  ds[i]=(ll)1e18;
	}

	vikas.insert(make_pair(0,s));

	ds[s]=0;

	while(vikas.size())
	{
	   set<pair<ll,ll> >::iterator it=vikas.begin();
	   ll u=(*it).second;
	   vikas.erase(it);
	   vector<pair<ll,ll> >::iterator i;
	   for(i=v[u].begin();i!=v[u].end();i++)
	   {
	      ll v=(*i).first;
	      ll cost=(*i).second;
	      if(ds[v]>ds[u]+cost)
	      {
	        ds[v]=ds[u]+cost;
	       // cout<<ds[v]<<" ";
	        vikas.insert(make_pair(ds[v],v));
	      }
	    }
	}
	vikas.erase(vikas.begin(),vikas.end());
	ll dt[1001];
	for(i=0;i<1001;i++)
	{
	  dt[i]=(ll)1e18;
	}

	vikas.insert(make_pair(0,t));

	dt[t]=0;
	while(vikas.size())
	{
	   set<pair<ll,ll> >::iterator it=vikas.begin();
	   ll u=(*it).second;
	   vikas.erase(it);
	   vector<pair<ll,ll> >::iterator i;
	   for(i=v[u].begin();i!=v[u].end();i++)
	   {
	      ll v=(*i).first;
	      ll cost=(*i).second;
	      if(dt[v]>dt[u]+cost)
	      {
	        dt[v]=dt[u]+cost;
	       // cout<<dt[v]<<" ";
	        vikas.insert(make_pair(dt[v],v));
	      }
	    }
	}
	// for(i=1;i<=n;i++)
	// 	cout<<dt[i]<<" ";
	// cout<<ds[t]<<" ";
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			if((i!=j)&&(!vp[i][j]))
			{
				// cout<<i<<" "<<j<<" "<<(ds[i]+dt[j])<<"\n";
				if((dt[i]+ds[j]+1)>=ds[t]&&(dt[j]+ds[i]+1)>=ds[t])
					ans++;
			}
		}
	}
	cout<<(ans/2);
return 0;
}