///Bismillahir Rahmanir Rahim
#include<bits/stdc++.h>
#define int long long
#define M 5005
using namespace std;
int n,m;
vector<int>adj[M+2];
int dis[M+2][M+2];
struct store
{
    int city_no;
    int shovel;
    int price;

};
int w;
store s[M+2];
const int inf=1e15+5;
void bfs(int root)
{
    queue<int>q;
    q.push(root);
    dis[root][root]=0;
    while(!q.empty())
    {
        int u=q.front();
        q.pop();
        for(auto v:adj[u])
        {
            if(dis[root][u]+1<dis[root][v])
            {
                dis[root][v]=dis[root][u]+1;
                q.push(v);
            }
        }
    }
}
int total_cost(int ami,int mx_tym,int lagbe)
{
     int cost=0;
     for(int i=1;i<=w;i++)
     {

         if(dis[ami][s[i].city_no]<=mx_tym)
         {
            cost+=s[i].price*min(s[i].shovel,lagbe);
            lagbe-=min(s[i].shovel,lagbe);
            //cout<<dis[ami][s[i].city_no]<<"eta distance"<<endl;
         }
     }
     if(lagbe)return inf;
        return cost;
}
bool cmp(store ob1,store ob2)
{
    if(ob1.price==ob2.price)return ob1.shovel>ob2.shovel;
    return ob1.price<ob2.price;
}
main()
{
   ios_base::sync_with_stdio(false);
   cin.tie(0);
   for(int i=0;i<=M;i++)for(int j=0;j<=M;j++)dis[i][j]=inf;
   //cout<<"shuru "<<endl;
    cin>>n>>m;
    for(int i=1;i<=m;i++)
    {
        int u,v;
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    //cout<<"edg input nisi "<<endl;
    for(int i=1;i<=n;i++)bfs(i);
    //cout<<"sob bfs ses "<<endl;
    cin>>w;
    for(int i=1;i<=w;i++)
    {
        cin>>s[i].city_no>>s[i].shovel>>s[i].price;
    }
    sort(s+1,s+w+1,cmp);
    //cout<<"ok 1"<<endl;
    int q;
    cin>>q;
    while(q--)
    {
        int g,r,a;
        cin>>g>>r>>a;
        //cout<<"eta cost "<<total_cost(g,n,r)<<endl;
        if(total_cost(g,n,r)>a)
        {
            cout<<"-1"<<endl;
            continue;
        }
        int lo,hi,mid;
        lo=-1;hi=n-1;
        while(hi-lo>=2)
        {
            int mid=(lo+hi)>>1;
            if(total_cost(g,mid,r)<=a)hi=mid;
            else lo=mid+1;

        }
        int ans;
        for(int i=lo;i<=hi;i++)
        {
            if(total_cost(g,i,r)<=a)
            {
                ans=i;
                break;
            }
        }
       cout<<ans<<endl;
    }
    return 0;
}
























