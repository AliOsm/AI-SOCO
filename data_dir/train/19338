#include <bits/stdc++.h>

//#pragma GCC optimize("Ofast")

using namespace std;

typedef long long ll;

typedef long double ld;

typedef unsigned long long ull;

const long long N = 2001;

const long long M = 1000000007;

ll q;

map < ll , ll > m;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    m[3]=1;
    m[7]=1;
    m[15]=5;
    m[31]=1;
    m[63]=21;
    m[127]=1;
    m[255]=85;
    m[511]=73;
    m[1023]=341;
    m[2047]=89;
    m[4095]=1365;
    m[8191]=1;
    m[16383]=5461;
    m[32767]=4681;
    m[65535]=21845;
    m[131071]=1;
    m[262143]=87381;
    m[524287]=1;
    m[1048575]=349525;
    m[2097151]=299593;
    m[4194303]=1398101;
    m[8388607]=178481;
    m[16777215]=5592405;
    m[33554431]=1082401;
    cin >> q;
    while (q--) {
        ll a;
        cin >> a;
        vector < ll > b;
        ll c = a;
        while (c > 0) {
            b.push_back(c % 2);
            c /= 2;
        }
        if ((int)b.size() == __builtin_popcountll(a)) {
            cout << m[a] << endl;
        } else {
            ll x = 0;
            for (ll i = 0; i < (int)b.size(); i++) {
                if (b[i] == 0) {
                    x += (1 << i);
                }
            }
            cout << __gcd(a & x , a ^ x) << endl;
        }
    }
    return 0;
}
