#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <cmath>
using namespace std;

/*
#define cin in
#define cout out
ifstream in("input.txt");
ofstream out("output.txt");
/**/

vector<int> g[223456];
int a[223456];
long long answer;
bool used[223456];
int skl[223456];
bool isMark[223456];
void dfs(int v)
{
	used[v] = 1;
	for(int i = 0; i < g[v].size(); ++i)
	{
		int to = g[v][i];
		if(used[to])
			continue;
		//v -> to
		dfs(to);
		skl[v] += skl[to];
	}
	if(isMark[v])
		skl[v]++;
}

int n, k;
void dfs2(int v)
{
	used[v] = 0;
	for(int i = 0; i < g[v].size(); ++i)
	{
		int to = g[v][i];
		if(!used[to])
			continue;
		answer += min(2*k - skl[to], skl[to]);
		dfs2(to);
	}
}

int main()
{
	cin >> n >> k;
	for(int i = 0; i < 2*k; ++i)
	{
		cin >> a[i];
		isMark[a[i]] = 1;
	}

	for(int i = 1; i < n; ++i)
	{
		int u, v;
		cin >> u >> v;
		g[u].push_back(v);
		g[v].push_back(u);
	}

	dfs(1);
	dfs2(1);
	cout << answer;
	return 0;
}