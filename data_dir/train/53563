#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <fstream>
using namespace std;
#define ll long long
#define mp make_pair
#define pb push_back
//#define ld long double
const double sn = 1e-6;
ll b, q, l, m;
map <ll, bool> ma;
bool isPower(ll x, ll y)
{
	if (x == 1)
		return (y == 1);
	ll pow = 1;
	while (abs(pow) < abs(y))
		pow *= x;
	return (pow == y);
}
ll howMuch(ll b, ll q, ll l) {
	ll p = b;
	ll ret = 0;
	while (abs(p) <= l) {
		p *= q;
		ret++;
	}
	return ret;
}
int main() {
	scanf("%I64d%I64d%I64d%I64d", &b, &q, &l, &m);
	ll rem = 0;
	for (int i = 0; i < m; i++) {
		ll t;
		scanf("%I64d", &t);
		ma[t] = true;
		if (t == 0 || abs(q) <=1 || b == 0) {
			continue;
		}
		if (abs(t) <= l && t%b==0 && isPower(q,t/b))
			rem++;
	}
	if (abs(b) > l) {
		printf("0\n");
		return 0;
	}
	if (b == 0) {
		if (ma[0])
			printf("0\n");
		else
			printf("inf\n");
		return 0;
	}
	if (q == 1) {
		if (ma[b]) {
			printf("0\n");
		}
		else {
			printf("inf\n");
		}
		return 0;
	}
	if (q == -1) {
		if (ma[b] && ma[-b]) {
			printf("0\n");
		}
		else {
			printf("inf\n");
		}
		return 0;
	}
	if (q == 0) {
		if (ma[0]) {
			if (abs(b) <= l && !ma[b])
				printf("1\n");
			else
				printf("0\n");
		}
		else {
			printf("inf\n");
		}
		return 0;
	}
	printf("%I64d\n", howMuch(b,q,l)-rem);
	return 0;
}