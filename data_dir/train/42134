#include <bits/stdc++.h>
#define M_PI    3.14159265358979323846  /* pi */
#define ff(i,s,n) for(int i=(s);i<(n);i++)
#define fr(i,s,n) for(int i=(n-1);i>=(s);i--)
#define FF(i,s,n) for(int i=(s);i<=(n);i++)
#define Fr(i,s,n) for(int i=(n);i>=(s);i--)
#define FR(i,s,n) for(int i=(n);i>=(s);i--)
#define all(a) a.begin(),a.end()
#define endl '\n'
#define tnm typename
#define invd inline void
#define templ1 template<tnm T>
#define btempl templ1 invd
#define ln prln()
#define sp prsp()
using namespace std;typedef long long ll; 
invd scan(int&i){scanf("%d",&i);}invd scan(double&i){scanf("%lf",&i);}invd scan(ll&i){scanf("%" PRId64 ,&i);}invd scan(string&s){cin>>s;}invd pr(string&s){cout<<s;}
invd pr(int i){printf("%d",i);}invd pr(double d){printf("%.9lf",d);}invd prln(){putchar('\n');}invd prsp(){putchar(' ');}invd pr(long long i){printf("%" PRId64 ,i);}
btempl prln(T i){pr(i),prln();}btempl prsp(T i){pr(i),sp;}btempl scan(vector<T>&v){for(T&t:v)scan(t);}btempl scan(T*a,int n){while(n--)scan(*a++);}
btempl prsp(vector<T>&v){for(T&t:v)prsp(t);}btempl prsp(T*a,int n){while(n--)prsp(*a++);}btempl prln(vector<T>&v){for(T&t:v)prln(t);}
btempl prln(T*a,int n){while(n--)prln(*a++);}btempl prln(vector<vector<T> >&v){for(vector<T>&t:v)prsp(t),putchar('\n');}
template<typename T, typename... Args>invd scan(T&first, Args (&... args)) {scan(first),scan(args...);}
template<typename T, typename... Args>invd prsp(T first, Args... args) {prsp(first),prsp(args...);}
template<typename T, typename... Args>invd prln(T first, Args... args) {prln(first),prln(args...);}
template<typename T, typename... Args>invd pr(T first, Args... args) {pr(first),sp,pr(args...);}
templ1 vector<T>& operator+=(vector<T>& v,T x) {v.push_back(x);return v;}
templ1 vector<T>& operator--(vector<T>& v) {v.pop_back();return v;}templ1 vector<T>& operator--(vector<T>& v,int) {v.pop_back();return v;}
templ1 bool operator!(stack<T>&q) {return !q.empty();}templ1 stack<T>& operator+=(stack<T>& v,T x) {v.push(x);return v;}
templ1 T operator--(stack<T>& v) {v.pop();return v.top();}templ1 T operator--(stack<T>& v,int) {T t=v.top();v.pop();return t;}
templ1 bool operator!(queue<T>&q) {return !q.empty();}templ1 queue<T>& operator+=(queue<T>& v,T x) {v.push(x);return v;}
templ1 T operator--(queue<T>& v) {v.pop();return v.front();}templ1 T operator--(queue<T>& v,int) {T t=v.front();v.pop();return t;}
template<tnm T,tnm U>invd smax(T&a,U b){if(b>a)a=b;}template<tnm T,tnm U>invd smin(T&a,U b){if(b<a)a=b;}
template<tnm T,tnm U>inline T gcd(T a, U b){return __gcd(a,b);}typedef unsigned long long ull;typedef vector<int> vi;typedef vector<ll> vll;
typedef vector<vll > vvll;typedef pair<vi, vi> pvi;typedef vector<vi > vvi;typedef pair<int, int> pii;
typedef pair<ll, ll> pll;typedef vector<pair<string, string> > vpss;typedef vector<pii > vpii;typedef vector<pll > vpll;
typedef vector<vpii > vvpii;invd init();
const int MOD = 1E9+7;


struct knut{
  vi v;
  string st;
  int a;
  knut(string&s){
    v.resize(s.length()+1,-1);
    a=-1;
    st.assign(s);
    int p1,p2;p1=0,p2=-1;
    for(;p1<s.length();){
      while(p2>=0&&s[p1]!=s[p2])p2=v[p2];
      ++p1,++p2;
      v[p1]=p2;
    }
  }
  
  bool next(char c){
    if(st[++a]!=c)
      while(a>=0&&st[a]!=c)a=v[a];
    return a+1==st.length();
  }
  
  int indexin(string&s,int k){
    if(k<0)return -1;
    a=-1;
    for(;k<s.length();k++){
      if(next(s[k]))return k-a;
    }
    return -1;
  }
};

int main(){
  init();
  string s, f, b;
  int k=-1, k2=-1;
  cin>>s>>f>>b;
  knut a1(f),a2(b);
  k=a1.indexin(s,0);
  k2=a2.indexin(s,k+f.length());
  bool forward=k!=-1&&k2!=-1;
  int n=s.length();
  fr(i,0,n/2){
    swap(s[i],s[n-i-1]);
  }
  k=a1.indexin(s,0);
  k2=a2.indexin(s,k+f.length());
  bool backward=k!=-1&&k2!=-1;
  if(backward&&forward)puts("both");
  else if(backward)puts("backward");
  else if(forward)puts("forward");
  else puts("fantasy");
    
    
}

invd init(){
#ifndef ONLINE_JUDGE
    freopen("xx/1.txt","r",stdin);
#endif
}