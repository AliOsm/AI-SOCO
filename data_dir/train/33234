#include<bits/stdc++.h>

using namespace std;

const int N = 1e6 + 1, MOD = 1e9 + 7, mod = 998244353;

int INF = 1e7;

#define ss second
#define ff first
#define int long long
//#define double long double
#define pb push_back

mt19937 Flash_new_51(51515);

using vi = vector <int>;
using vp = vector <pair <int, int>>;

int r[N], w[N];

int step(int x, int p) {
    if (x == 0) return 1;
    int k = step(x / 2, p);
    k%= MOD;
    k*= k;
    k%= MOD;
    int p1 = p % MOD;
    if (x % 2) k*= p1;
    k%= MOD;
    return k;
}


signed main() {
   // freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    cin.tie(0);
    ios_base::sync_with_stdio(0);
    int n, x, x1;
    vi ans;
    cin >> x >> n;
    x1 = x;
    for (int i = 2;  i * i <= x; i++) {
        if (x1 % i == 0) {
            int kol = 0;
           while (x1 % i == 0) {
                x1/= i;
                kol++;
           }
           ans.pb(i);
        }
    }
    if (x1 > 1) ans.pb(x1);
    int ans1 = 1;
    for (auto to : ans) {
        int o = to, k = 1;
        vp mem;
        while (n >= o) {
            if (k != 1)
                mem.pb({k, n / k});

             k = o;
             if (n / o / to == 0) break;
             o*= to;
        }
        mem.pb({k, n / k});
        for (int  i = 0; i < mem.size(); i++) {
            int kol = 0, sum = 0;
            if (i + 1 < mem.size()) kol = mem[i + 1].ss;
            int o1 = mem[i].ss - kol;
            ans1*= step(o1, mem[i].ff);
            ans1%= MOD;
        }
    }
    cout << ans1;
}
