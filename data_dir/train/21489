#include <iostream>
#include <vector>
#include <string.h>
#include <deque>
#include <queue>
#include <algorithm>
#include <set>
#include <map>
#include <sstream>
#include <stack>
#include <iomanip>
#include <cmath>
#include <climits>
#include <complex>
#include <cmath>
#define fi first
#define se second
#define th second
#define FI first
#define SE second.first
#define TH second.second
#define maxi(a, b) ((a > b)? a: b)


using namespace std;

typedef long long ll;
typedef pair<ll, int> ii;
typedef pair<int, ii> iii;
typedef long double ld;
typedef complex<double> cd;

const int maxN = 5e3 + 9, lg = 19;

ll arr[maxN];

int n, k, x;

deque<ii> dqs[maxN];

int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    //cout << maxi(-1, 3) << '\n';
    
    cin >> n >> k >> x;
    
    for(int i = 0; i < n; i++)
        cin >> arr[i];
    
    n++;
    
    dqs[0].push_back(ii(0, n - 1));
    
    for(int i = n - 2; i >= 0; i--){
        for(int j = 0; j <= x; j++){
            while(dqs[j].size() && i + k < dqs[j].back().se) dqs[j].pop_back();
        }
        for(int j = x - 1; j >= 0; j--){
            if(dqs[j].size()){
                ll cr = dqs[j].back().fi + arr[i];
                while(dqs[j + 1].size() && cr >= dqs[j + 1].front().fi) dqs[j + 1].pop_front();
                dqs[j + 1].push_front(ii(cr, i));
            }
        }
        
    }
    for(int j = 0; j <= x; j++){
        while(dqs[j].size() && k - 1 < dqs[j].back().se) dqs[j].pop_back();
    }
    if(dqs[x].size()){
        cout << dqs[x].back().fi << '\n';
    }
    else{
        cout << "-1\n";
    }
}
