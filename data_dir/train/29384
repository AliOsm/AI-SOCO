#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define int long long int
#define pb push_back
#define fi first
#define se second
#define fr(i, a, b) for(int i = a; i <= b; i++)
#define all(x) x.begin(), x.end()
#define IO ios :: sync_with_stdio(0), cin.tie(0), cout.tie(0)
#define pii pair<int,int>
const int mod = 1e9 + 7;
typedef long double f80;
#define endl '\n'
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

vector<int> v[2];
const int N = 3e5 + 5;
int x[N];
char ch[N];
signed main(){
    //freopen("inp.txt", "r", stdin);
    IO;
    int n;
    cin >> n;
    int idx = 0;
    int ans = 0;
    int min1 = 1e12, max1 = 0, min2 = 1e12, max2 = 0;
    fr(i, 1, n){
        cin >> x[i] >> ch[i];
        if(ch[i] == 'G'){
            idx = i;
        }
        if(ch[i] == 'R')
        {
            min1 = min(min1, x[i]);
            max1 = max(max1, x[i]);
        }
        if(ch[i] == 'B')
        {
            min2 = min(min2, x[i]);
            max2 = max(max2, x[i]);
        }
    }
    if(!idx){
        int ans = 0;
        if(max2 >= min2)
            ans += max2 - min2;
        if(max1 >= min1)
            ans += max1 - min1;
        cout << ans;
        return 0;
    }
    idx = 0;
    fr(i, 1, n){
        if(ch[i] == 'G'){
            if(idx){
                v[0].clear();
                v[1].clear();
                int tot = x[i] - x[idx];
                fr(j, idx, i){
                    if(ch[j] == 'R' || ch[j] == 'G')
                        v[0].pb(x[j]);
                    if(ch[j] == 'B' || ch[j] == 'G')
                        v[1].pb(x[j]);
                }
                int sz = v[0].size();
                int max1 = 0, max2 = 0;
                fr(j, 0, sz - 2){
                    max1 = max(max1, v[0][j + 1] - v[0][j]);
                }
                sz = v[1].size();
                fr(j, 0, sz - 2){
                    max2 = max(max2, v[1][j + 1] - v[1][j]);
                }
                tot += 2 * (x[i] - x[idx]) - max1 - max2;
                tot = min(tot, 2 * (x[i] - x[idx]));
                ans += tot;
            }
            else{
                fr(j, 1, i - 1){
                    if(ch[j] == 'B')
                    {
                        ans += x[i] - x[j];
                        break;
                    }
                }
                fr(j, 1, i - 1){
                    if(ch[j] == 'R')
                    {
                        ans += x[i] - x[j];
                        break;
                    }
                }
            }
            idx = i;
        }
    }
    for(int j = n; j > idx; j--){
        if(ch[j] == 'R')
        {
            ans += x[j] - x[idx];
            break;
        }
    }
    for(int j = n; j > idx; j--){
        if(ch[j] == 'B')
        {
            ans += x[j] - x[idx];
            break;
        }
    }
    cout << ans;
    return 0;
}