#include <bits/stdc++.h> 
using namespace std;
#define int long long
#define ld long double
#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define all(x) (x).begin(), (x).end()
const int MOD = 1e9+7;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1;}return res%p;}
const int N=1e5+3;

int32_t main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	#ifdef LOCAL
	freopen("input.txt", "r", stdin);
	// freopen("out10.txt","w",stdout);
	#endif
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		bool vis[n+2];
		bool vis1[n+2];
		for(int i=1;i<=n;i++) vis[i]=vis1[i]=false;
		for(int i=1;i<=n;i++)
		{
			int k;
			cin>>k;
			vector<int> lol;
			for(int j=0;j<k;j++)
			{
				int x;
				cin>>x;
				if(!vis[x])
				lol.pb(x);
			}
			sort(all(lol));
			if(lol.size()==0)
			{
				vis1[i]=false;
			}
			else{
				vis1[i]=true;
				vis[lol[0]]=true;
			}
		}
		bool ok=false;
		int p=-1;
		bool ok1=false;
		int p1=-1;
		for(int i=1;i<=n;i++)
		{
			if(!vis[i])
			{
				p1=i;
				ok=true;
			}
			if(!vis1[i])
			{
				p=i;
				ok1=true;
			}
		}
		if(ok&&ok1)
		{
			cout<<"IMPROVE\n";
			cout<<p<<" "<<p1<<"\n";
		}
		else{
			cout<<"OPTIMAL\n";
		}
		// int n,k;
		// cin>>n>>k;
		// if(n%k==0)
		// {
		// 	cout<<"YES\n";
		// }
		// else cout<<"NO\n";
	}
}
// 1+3+5+7
// k*(2*1+(k-1)*2)/2
// k*k
// Don't be afraid to fail. Be afraid not to try.
// "Become grindian instead of greendian" - aryanc403
// When you want to succeed as bad as you want to breathe, only then you’ll Be Successful!
// No Matter,How Fast You Are Driving If You Are Driving in a Wrong Direction You Will Never Reach Your Destination
// When failures hit you, you hit the failures back with Bounce Back!
// When you face failures, Don’t change your goal, Change your strategy!