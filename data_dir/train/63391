#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>

#define ll long long
#define ld long double
#define ull unsigned ll
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vvi vector<vector<int>>
//#define endl '\n';
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 2e9;
const int  mod = 1e9 + 7;
ll LINF = (ll)4e18;
using namespace std;
#define M_PI       3.14159265358979323846   // pi

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("cities.in", "r", stdin);
	//freopen("cities.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n;
	cin >> n;
	vi a, b, c, ab, ac, bc, abc;
	forn(i, 0, n) {
		int x;
		cin >> x;
		string s;
		cin >> s;
		sort(all(s));
		if (s == "ABC") {
			abc.push_back(x);
			ac.push_back(x);
			bc.push_back(x);
			ab.push_back(x);
			a.push_back(x);
			b.push_back(x);
			c.push_back(x);
		}
		if (s == "AB") {
			ab.push_back(x);
			a.push_back(x);
			b.push_back(x);
		}
		if (s == "AC") {
			ac.push_back(x);
			a.push_back(x);
			c.push_back(x);
		}
		if (s == "BC") {
			bc.push_back(x);
			b.push_back(x);
			c.push_back(x);
		}
		if (s == "A") {
			a.push_back(x);
		}
		if (s == "B") {
			b.push_back(x);
		}
		if (s == "C") {
			c.push_back(x);
		}
	}
	if (a.size() == 0 || b.size() == 0 || c.size() == 0) {
		cout << -1;
		return 0;
	}
	sort(all(a));
	sort(all(b));
	sort(all(c));
	sort(all(ab));
	sort(all(ac));
	sort(all(bc));
	sort(all(abc));
	int ans = 2e9;
	if (abc.size() != 0) {
		ans = min(ans, abc[0]);
	}
	if (ab.size() != 0) {
		ans = min(ans, ab[0] + c[0]);
	}
	if (ac.size() != 0) {
		ans = min(ans, ac[0] + b[0]);
	}	
	if (bc.size() != 0) {
		ans = min(ans, bc[0] + a[0]);
	}
	ans = min(ans, a[0] + b[0] + c[0]);
	cout << ans;
	return 0;
}