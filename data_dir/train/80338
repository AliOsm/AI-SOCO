#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define f(i, x, n) for(int i = x; i < (int)(n); ++i)

int const N = 500000, md = 1e9 + 7;

ll x[N + 1];
map<ll, vector<int> > g[N + 1], nd;
int vis[N + 1], vs;

inline void ad(int &x, int y) { if ((x += y) >= md)x -= md; }
inline void sb(int &x, int y) { if ((x -= y)  < 0 )x += md; }

int go(int v, ll x){
	vis[v] = vs;
	vector<int> &vc = g[v][x];
	int an = 1;
	f(i, 0, vc.size()){
		int u = vc[i];
		if (vis[u] == vs)continue;
		an += go(u, x);
	}
	return an;
}

int pw(int x, ll p){
	int an = 1;
	while (p){
		if (p & 1)an = (ll)an * x % md;
		x = (ll)x * x % md;
		p >>= 1;
	}
	return an;
}

int main(){
	int n, m, k;
	scanf("%d%d%d", &n, &m, &k);
	f(i, 1, n + 1)scanf("%lld", x + i);
	f(i, 0, m){
		int a, b;
		scanf("%d%d", &a, &b);
		ll v = x[a] ^ x[b];
		g[a][v].push_back(b);
		g[b][v].push_back(a);
		nd[v].push_back(a);
	}
	int an = (ll)pw(2, k) * pw(2, n) % md;
	
	for (map<ll, vector<int> >::iterator it = nd.begin(); it != nd.end(); ++it){
		++vs;
		int z = 1, sz = 0;
		f(i, 0, it->second.size()){
			int v = it->second[i];
			if (vis[v] == vs)continue;
			int t = go(v, it->first);
			sz += t;
			ad(z, z);
		}
		sb(an, (ll)pw(2, sz) * pw(2, n - sz) % md);
		ad(an, (ll)z * pw(2, n - sz) % md);
	}
	printf("%d\n", an);
}