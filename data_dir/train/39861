#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define F first
#define S second
#define pb push_back
#define mp make_pair
#define pp pair<ll, ll>
int E=1e9+7;
const int MX=1234567;
const double PI = acos(-1.0), EPS = 1e-9;
int N,M;
int arr[MX], arr1[MX], arr2[MX];
multiset<int> ms1, ms2, ms3, ms12, ms13, ms23;
bool ok(int a, int b, int c)
{
    if(a != E) return 1;
    if(b != E) return 1;
    if(c != E) return 1;
    return 0;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin>>N; for(int i=0;i<N;i++){cin>>arr[i];}
    for(int i=0;i<N;i++) cin>>arr1[i]; for(int i=0;i<N;i++) cin>>arr2[i];
    for(int i=0;i<N;i++)
    {
        if(arr1[i] == arr2[i])
        {
            if(arr1[i] == 1) ms1.insert(arr[i]);
            else if(arr1[i] == 2) ms2.insert(arr[i]);
            else ms3.insert(arr[i]);
        }
        else
        {
            if(arr1[i] > arr2[i]) swap(arr1[i], arr2[i]); /// small big
            if(arr1[i] == 1 && arr2[i] == 2) ms12.insert(arr[i]);
            else if(arr1[i] == 2 && arr2[i] == 3) ms23.insert(arr[i]);
            else ms13.insert(arr[i]);
        }
    }
    cin>>M;
    for(int i=0;i<M;i++)
    {
        int x;
        cin>>x;
        if(x == 1)
        {
            int c1, c12, c13; c1=c12=c13=E;
            if(ms1.size()) c1=*ms1.begin();
            if(ms12.size()) c12=*ms12.begin();
            if(ms13.size()) c13=*ms13.begin();
            int mm=min(c1, min(c12, c13));
            if(ok(c1, c12, c13)) cout<<mm<<" ";
            else{ cout<<-1<<" "; continue;}
            if(mm == c1) ms1.erase(ms1.find(c1));
            else if(mm == c12) ms12.erase(ms12.find(c12));
            else if(mm == c13) ms13.erase(ms13.find(c13));
        }
        else if(x == 2)
        {
            int c2, c12, c23; c2=c12=c23=E;
            if(ms2.size()) c2=*ms2.begin();
            if(ms12.size()) c12=*ms12.begin();
            if(ms23.size()) c23=*ms23.begin();
            int mm=min(c2, min(c12, c23));
            if(ok(c2, c12, c23)) cout<<mm<<" ";
            else {cout<<-1<<" "; continue;}
            if(mm == c2) ms2.erase(ms2.find(c2));
            else if(mm == c12) ms12.erase(ms12.find(c12));
            else if(mm == c23) ms23.erase(ms23.find(c23));
        }
        else
        {
            int c3, c13, c23; c3=c13=c23=E;
            if(ms3.size()) c3=*ms3.begin();
            if(ms13.size()) c13=*ms13.begin();
            if(ms23.size()) c23=*ms23.begin();
            int mm=min(c3, min(c13, c23));
            if(ok(c3, c13, c23)) cout<<mm<<" ";
            else {cout<<-1<<" "; continue;};
            if(mm == c3) ms3.erase(ms3.find(c3));
            else if(mm == c23) ms23.erase(ms23.find(c23));
            else if(mm == c13) ms13.erase(ms13.find(c13));
        }
    }
    return 0;
}
