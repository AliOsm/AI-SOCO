#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
using namespace std;
using namespace __gnu_pbds;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
bool isS(char c){return (c >= 'a' && c <= 'z');}
bool isB(char c){return (c >= 'A' && c <= 'Z');}
bool isD(char c){return (c >= '0' && c <= '9');}
map<long long,int> ff;
int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
   long long k,l;
   cin >> k >> l;
   long long start = 1;
   int c = 0;
   while(start <= 1e18/k)
        start *= k,ff[start] = c,c++;
    if(ff.find(l) != ff.end())
        cout << "YES\n" << ff[l];
    else
        cout << "NO";
}
