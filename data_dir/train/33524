#include<bits/stdc++.h>
#define fr first
#define sc second
#define pb push_back
#define maxheap priority_queue<int>
#define minheap priority_queue<int, vector<int>, greater<int> >
#define ll long long
const ll INF = 1e18;
const int inf = 1e9;
const int MAXN = 3e5 + 200;
const  long double eps = 1e-16;
const long double pi = acos(-1.0);
using namespace std;

int dx[] = {0, 1, 1, 1, -1, -1, -1};
int dy[] = {1, -1, 0, 1, -1, 0, 1, -1};

int n, m;
ll a[MAXN], H[MAXN];
int M[MAXN];
vector <int> g[MAXN];
void dfs(int v){

    set <int> st;
    int kol = 1;
    for (int i = 0; i < g[v].size(); i++){
        int to = g[v][i];
        if (M[to]){
            st.insert(M[to]);
            continue;
        }
        dfs(to);
        st.insert(M[to]);
    }
    while (st.find(kol) != st.end())
        kol++;
    M[v] = kol;
}
void solve() {
    cin >> n >> m;
    for (int i = 0; i < n; i++)
        cin >> a[i];
    for (int i = 0; i < m; i++){
        int x, y;
        cin >> x >> y;
        x--; y--;
        g[x].pb(y);
    }
    for (int i = 0; i < n; i++)
        if (!M[i])
            dfs(i);

        for (int i = 0; i < n; i++)
            H[M[i]] ^= a[i];

        int top = 0;
        for (int i = 0; i < MAXN; i++)
            if (H[i])
                top = i;
            if (top == 0){
                cout << "LOSE\n";
                return;
            }
            cout << "WIN\n";
            int ind = -1;
            for (int i = 0; i < n; i++){
                if (M[i] == top){
                    if ((a[i] ^ H[top]) < a[i]) {
                        ind = i;
                        break;
                    }
                }
            }
            a[ind] ^= H[top];

            for (int i = 0; i < g[ind].size(); i++){
                int to = g[ind][i];
                H[M[to]] ^= a[to];
                a[to] = H[M[to]];
                H[M[to]] = 0;
            }
    for (int i = 0; i < n; i++)
        cout << a[i] << " ";
}

int main() {
    ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);
    // cout.setf(ios::fixed), cout.precision(4);
    //freopen("input.in", "r", stdin);
// freopen("output.out", "w", stdout);
    int step;
    step = 1;
    //cin >> step;
    for (int i = 1; i <= step; i++){
        solve();
    }
}
