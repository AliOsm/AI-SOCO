//besmellah
#include <bits/stdc++.h>
using namespace std;

#define int long long
const int maxn = 1e5 + 5;
int dp[maxn][2], pd[maxn][2], a[maxn];

int32_t main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n;
	cin >> n;
	for (int i = 0; i < n - 1; i++) {
		cin >> a[i];
	}
	for (int i = 1; i < n; i++) {
		if (!a[i - 1])
			continue;
		if (a[i - 1] % 2)
			dp[i][0] = a[i - 1] + dp[i - 1][0];
		else
			dp[i][0] = max(a[i - 1] - 1 + dp[i - 1][0], a[i - 1] + dp[i - 1][1]);
		if (a[i - 1] > 1)
			dp[i][1] = a[i - 1] / 2 * 2 + dp[i - 1][1];
//		cout << i << ' ' << dp[i][0] << ' ' << dp[i][1] << endl;
	}
	for (int i = n - 2; ~i; i--) {
		if (!a[i])
			continue;
		if (a[i] % 2)
			pd[i][0] = a[i] + pd[i + 1][0];
		else
			pd[i][0] = max(a[i] - 1 + pd[i + 1][0], a[i] + pd[i + 1][1]);
		if (a[i] > 1)
			pd[i][1] = a[i] / 2 * 2 + pd[i + 1][1];
//		cout << i << ' ' << pd[i][0] << ' ' << pd[i][1] << endl;
	}
	int ans = 0;
	for (int i = 0; i < n; i++) {
		ans = max(ans, max(dp[i][0] + pd[i][1], dp[i][1] + pd[i][0]));
	}
	cout << ans;
}
