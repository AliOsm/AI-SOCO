# include <bits/stdc++.h>

# define pb push_back
# define sz(x) (int)((x).size())
# define whole(x) (x).begin(), (x).end()

using namespace std;

typedef long long ll;

int n, q, tin[100005], tout[100005],
up[100005][25], h[100005], timer;
vector < int > g[100005];

void dfs (int v, int p = 0)
{
 tin[v] = timer++;
 up[v][0] = p;
 h[v] = h[p] + 1;
 for (int i = 1; i <= 20; ++i) up[v][i] = up[up[v][i - 1]][i - 1];
 for (int to : g[v])
 {
  if (to == p) continue;
  dfs(to, v);
 }
 tout[v] = timer++;
}

bool isanc (int u, int v){return tin[u] <= tin[v] && tout[v] <= tout[u];}

int lca (int u, int v)
{
 if (isanc(u, v)) return u;
 if (isanc(v, u)) return v;
 for (int i = 20; i >= 0; --i)
 {
  if (!up[u][i]) continue;
  if (!isanc(up[u][i], v)) u = up[u][i];
 }
 return up[u][0];
}

int dist (int u, int v) {return h[u] + h[v] - 2 * h[lca(u, v)];}

bool ok (int x, int y, int a, int b, int k)
{
 if (dist(a, b) % 2 == k % 2 && dist(a, b) <= k) return 1;
 int len1 = dist(a, x) + dist(b, y) + 1, len2 = dist(a, y) + dist(b, x) + 1;
 if (len1 <= k && len1 % 2 == k % 2) return 1;
 if (len2 <= k && len2 % 2 == k % 2) return 1;
 return 0;
}

int main(){
 scanf ("%d", &n);
 for (int i = 1; i < n; ++i)
 {
  int u, v;
  scanf ("%d %d", &u, &v);
  g[u].pb(v);
  g[v].pb(u);
 }
 dfs(1);
 scanf ("%d", &q);
 for (int i = 1; i <= q; ++i)
 {
  int x, y, a, b, k;
  scanf ("%d %d %d %d %d", &x, &y, &a, &b, &k);
  if (ok(x, y, a, b, k)) printf ("YES\n");
  else printf ("NO\n");
 }
 return 0;
}
