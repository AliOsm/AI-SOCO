//#include <cstdio>
#include <iostream>

#include <cstring>

#include <string>
#include <vector>
#include <algorithm>
//#include <map>
//#include <set>
#include <queue>
//#include <stack>

using namespace std;

#define SZ(a) int((a).size())
#define REP(i,n) for(int i=0,_n=(n);i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)

typedef long long llong;
typedef vector<int> VI;
typedef vector<VI> VVI;

int N;
string str;

string solve() {
   VI freq(3);
   for (char c : str)
      freq[c-'0']++;

   VI changes[3];

   VI freq_orig = freq;
   const int N3 = N/3;
   REP(from, 3) {
      while (freq[from] > N3) {
         REP(to, 3) {
            if (from == to) continue;
            if (freq[to] < N3) {
               ++freq[to];
               --freq[from];
               changes[from].push_back(to);
               break;
            }
         }
      }
   }

   freq = freq_orig;
   REP(from, 3) {
      while (SZ(changes[from]) < freq[from]) {
         changes[from].push_back(from);
      }
      sort(changes[from].begin(), changes[from].end());
   }

   queue<char> Q[3];
   REP(k, 3) {
      for (int to : changes[k])
         Q[k].push('0' + to);
   }

   string res = str;
   for (char& c : res) {
      int k = c-'0';
      c = Q[k].front();
      Q[k].pop();
   }

   return res;
}

int main(int argc, char* argv[]) {
   ios_base::sync_with_stdio(false); 
   cin.tie(nullptr);

   cin >> N;
   cin >> str;

   string res = solve();
   cout << res << '\n';

   return 0;
}
