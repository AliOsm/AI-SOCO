#include <bits/stdc++.h>
using namespace std;
typedef long long ll;


struct trie{
    int cnt;
    trie *zero,*one;
    trie(){ cnt=0; zero=one=0; }
};

int getCount(trie *tr){
    if( tr == 0 )return 0;
    else         return tr->cnt;
}

void Add(trie *tr,int num,int bit,int val){

    tr->cnt+=val;
    if( bit == -1 )return;

    if( (num&(1<<bit)) == 0 ){

            if( tr->zero == 0 )tr->zero = new trie();
            Add(tr->zero,num,bit-1,val);

    }else{

            if( tr->one == 0 )tr->one = new trie();
            Add(tr->one ,num,bit-1,val);
    }

}

int solve(trie *tr,int num,int bit){
    if( bit == -1 )return 0;

    if( (num&(1<<bit)) == 0 ){
        if( getCount(tr->one) == 0 )
            return   solve(tr->zero,num,bit-1);
        else
            return (1<<bit)+solve(tr->one,num,bit-1);
    }
    else{
        if( getCount(tr->zero) == 0 )
            return solve(tr->one,num,bit-1);
        else
            return (1<<bit)+solve(tr->zero,num,bit-1);
    }
}

int main(){

trie *root = new trie();
Add(root,0,30,+1);

int Q;
scanf("%d",&Q);
while( Q-- ){

    char s[2];
    int x;
    scanf("%s %d",s,&x);

    if( s[0] == '+' ){
            Add(root,x,30,+1);
    }else
    if( s[0] == '-' ){
            Add(root,x,30,-1);
    }else
    if( s[0] == '?' ){
            int ans = solve(root,x,30);
            printf("%d\n",ans);
    }
}

return 0;
}
