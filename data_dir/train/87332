#include <algorithm>
#include <cstdio>
#include <sstream>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <iostream>
#include <fstream>
#include <numeric>
#include <string>
#include <vector>
#include <cstring>
#include <map>
#include <iterator>
#include <deque>
#include <climits>
#include <complex>
#include <bitset>
#include <limits>
#define x first
#define y second

using namespace std;

#define mx 200000ll
#define ll long long
#define  SET(a)  memset(a,0,sizeof a)


pair<int,int> arr[mx+2];
int l;
int ma[mx+2];
int qu(int an)
{
    int ans=-1;

    if(l<=1)return ans;
    sort(arr+1,arr+l+1);

    SET(ma);
    for(int i=1; i<=l; i++)
    {
        ma[i]=max(ma[i-1],arr[i].y);
    }

    for(int i=1; i<=l; i++)
    {
        int co=an-arr[i].x;

        int f=upper_bound(arr+1,arr+l+1,make_pair(co,20000000))-arr;
        // cout<<arr[i].x<<" "<<f<<co<<endl;
        f=min(f-1,i-1);


        if(f<1)continue;
      //  cout<<arr[i].y<<" "<<arr[i].x<<" "<<f<<" "<<ma[f]<<endl;
        ans=max(ans,arr[i].y+ma[f]);

    }

    return ans;
}
int main()
{
    int n,m,k;
    scanf("%d%d%d",&n,&m,&k);

    int res=-1,sum=-1;

    pair<int,int>a[n+2];
    char ch[n+2][3];
    pair<int,int>ar[n+2],br[n+2];
    int sz=0;
    int l1=0;
    for(int i=1; i<=n; i++)
    {
        scanf("%d%d",&a[i].x,&a[i].y);
        scanf("%s",ch[i]+1);


        if(ch[i][1]=='C'&&a[i].y<=m)

        {
            res=max(res,a[i].x);
            ar[++sz]=a[i];
        }
        if(ch[i][1]=='D'&&a[i].y<=k)
        {
            sum=max(sum,a[i].x);
            br[++l1]=a[i];
        }

    }


    int ans=0;


    if(sum>-1&&res>-1)ans=sum+res;

    l=0;
    for(int i=1; i<=sz; i++)
    {
        arr[++l]=ar[i];

        swap(arr[l].x,arr[l].y);
    }

    int dop=qu(m);

    if(dop>-1)ans=max(ans,dop);

   // cout<<ans<<endl;

    l=0;
    for(int i=1; i<=l1; i++)
    {
        arr[++l]=br[i];

        swap(arr[l].x,arr[l].y);
    }

    dop=qu(k);

    if(dop>-1)ans=max(ans,dop);


    cout<<ans<<endl;




    return 0;
}
