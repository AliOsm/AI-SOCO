#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define read(x) scanf( "%lld" , &x )
#define forq(i , a , b) for (int i = (a); i <= (b); ++i)
#define forr(i , b) forq( i , 0 , b - 1 )
#define carr( n , array ) forr(i , n) read(array[i])
#define coutarr(n , array ) cout << "\n" ; forr (i , n) printf("%lld " , array[i]) ; cout << "\n" ;
#define F first
#define S second
#define IF ->first
#define IS ->second
#define qqmemset(array , val) memset (array , val , sizeof(array))
#define ALLV(vect) vect.begin() , vect.end()
#define sizee(vec) (ll)vec.size()

ll R = 7 + 1e9 , NUMTESTCASE ;
const int NN = 10 + 1e5 ;
const double pi = acos(-1.0) ;
int di [4] = {1 , 0 , -1 , 0} , dj [4] = {0 , 1 , 0 , -1} , DI [8] = {1 , 1 , 0 , -1 , -1 , -1 , 0 , 1} , DJ [8] = {0 , 1 , 1 , 1 , 0 , -1 , -1 , -1} ;
using namespace std;
ll toint (string s) {
    ll res = 0 , base = 1 ;
    reverse(ALLV(s)) ;
    forr (i , s.size()) {res += ( s[i] - 'A' + 1 ) * base ; base *= 26 ; }
    return res ;
}
string tostring (string s) {
    ll n = 0 , base = 1 ;
    reverse(ALLV(s)) ;
    forr (i , s.size()) {n += (s[i] - '0') * base ; base *= 10 ; }
    string res = "" ; base = 1 ;
    while (n) {
        res += (char) ((n % 26 ? n % 26 : 26) - 1 + 'A') ;
        (n % 26 ? n /= 26 : n ? n /= 26 , n -- : 0 ) ;
    }
    reverse(ALLV(res)) ;
    return res ;
}
int main()
{
    for (cin >> NUMTESTCASE ; NUMTESTCASE ; NUMTESTCASE --) {
        string s ; cin >> s ; int st = 0 , en ;
        while (s[st] < '0' || s[st] > '9') st ++ ; en = st ;
        while (en < s.size() && s[en] >= '0' && s[en] <= '9') en ++ ;
        if (en == s.size()) {
            cout << "R" << s.substr (st , NN) << "C" << toint(s.substr (0 , st)) << endl ;
        }
        else {
            cout << tostring(s.substr (en + 1 , NN)) << s.substr (1 , en - 1) << endl ;
        }
    }
    return 0;
}
/*
RZ228
R228C494
*/
