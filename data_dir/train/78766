#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<cmath>
using namespace std;
const int N=5e5+100;
typedef __int64 LL;
struct Node {
    LL c,a,w;
    bool operator<(const Node & th)const {
        return c*th.w<th.c*w;
    }
}node[N];
double dot;LL ans;
char buff[100];
int main(){
    #ifdef DouBi
    freopen("in.cpp","r",stdin);
    #endif // DouBi
    int n,m,w;
    while(scanf("%d%d%d",&n,&m,&w)!=EOF){
        for(int i=0;i<m;i++)scanf("%I64d",&node[i].w);
        for(int i=0;i<m;i++)scanf("%I64d",&node[i].c);
        for(int i=0;i<m;i++)scanf("%I64d",&node[i].a);
        ans=0;
        dot=0;
        for(int i=0;i<n;i++){
            if(i){
                for(int j=0;j<m;j++){
                    node[j].c-=node[j].a;
                }
            }
            int l=0,r=m-1;
            LL tw=w;
            while(l+1<=r){
                int mid=(l+r)/2;
                nth_element(node+l,node+mid,node+r+1);
                LL tmp=0,bns=0;
                for(int j=l;j<=mid;j++){
                    tmp+=node[j].w;
                    bns+=node[j].c;
                }
                if(tw>tmp){
                    ans+=bns;
                    tw-=tmp;
                    l=mid+1;
                }
                else {
                    r=mid;
                }
            }
            tw=tw*node[l].c;
            ans+=tw/node[l].w;
            dot+=tw%node[l].w*1.0/node[l].w;
            ans+=(int)dot;
            dot-=(int)dot;
        }
        sprintf(buff,"%.15f",dot);
        printf("%I64d%s\n",ans,buff+1);
        //printf("%I64d %.15lf\n",ans,dot);
    }
    return 0;
}
