#include<bits/stdc++.h>

using namespace std;

#define fRead(x)  freopen(x,"r",stdin)
#define fWrite(x) freopen (x,"w",stdout)

#define LL long long
#define ULL unsigned long long
#define ff first
#define ss second
#define pb push_back
#define INF 2e16
#define PI acos(-1.0)
#define mk make_pair

#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define min4(a,b,c,d) min(a,min(b,min(c,d)))
#define max4(a,b,c,d) max(a,max(b,max(c,d)))
#define SQR(a) ((a)*(a))
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define REP(i,b) for(int i=0;i<b;i++)
#define ROF(i,a,b) for(int i=a;i>=b;i--)
#define MEM(a,x) memset(a,x,sizeof(a))
#define ABS(x) ((x)<0?-(x):(x))

#define scanI(a) scanf("%d",&a)
#define scanI2(a,b) scanI(a) , scanI(b)
#define scanI3(a,b,c) scanI(a), scanI(b), scanI(c)
#define scanI4(a,b,c,d) scanI(a), scanI(b), scanI(c), scanI(d)

#define scanL(a) scanf("%I64d",&a)
#define scanL2(a,b) scanL(a) , scanL(b)
#define scanL3(a,b,c) scanL(a), scanL(b), scanL(c)
#define scanL4(a,b,c,d) scanL(a), scanL(b), scanL(c), scanL(d)

#define SORT(v) sort(v.begin(),v.end())
#define REV(v) reverse(v.begin(),v.end())

#define FastRead ios_base::sync_with_stdio(0);cin.tie(nullptr);

const int N = 300005;

int n;
int A[N],B[N];
set<pair<pair<int,int>,int>>s1,s2;
int main()
{
    scanf("%d",&n);
    FOR(i,1,n)
    {
        int a,b;
        scanf("%d %d",&a,&b);
        if(a < b)s1.insert(mk(mk(-b,-a),i));///second element first
        if(a > b)s2.insert(mk(mk(-a,-b),i));
    }
    vector<int>v1,v2;

    while(s1.size() > 0){
        auto it = s1.begin();
        pair<pair<int,int>,int>P = *it;
        v1.push_back(P.second);

        while(1){
            if(s1.empty())break;
            auto pt = s1.begin();
            pair<pair<int,int>,int>Q = *pt;
            if(Q.first.first == P.first.first)s1.erase(s1.begin());
            else break;
        }
    }

    while(s2.size() > 0){
        auto it = s2.begin();
        pair<pair<int,int>,int>P = *it;
        v2.push_back(P.second);

        while(1){
            if(s2.empty())break;
            auto pt = s2.begin();
            pair<pair<int,int>,int>Q = *pt;
            if(Q.first.first == P.first.first)s2.erase(s2.begin());
            else break;
        }
    }
    REV(v2);
    if(v1.size() > v2.size()){
        printf("%d\n",v1.size());
        for(int i = 0;i  < v1.size();i++)printf("%d ",v1[i]);
    }else{
        printf("%d\n",v2.size());
        for(int i = 0;i  < v2.size();i++)printf("%d ",v2[i]);
    }


}
