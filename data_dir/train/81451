#include <bits/stdc++.h>
#define err(args...) {}
#ifdef DEBUG
#include "_debug.cpp"
#endif
using namespace std;
using ll = long long;
using ld = long double;
template <typename T> using lim = numeric_limits<T>;
template <typename T> istream& operator>>(istream& is, vector<T>& a) { for(T& x : a) { is >> x; } return is; }
template <typename X, typename Y> istream& operator>>(istream& is, pair<X, Y>& p) { return is >> p.first >> p.second; }
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin >> t;
    while(t--) {
        int n, k;
        cin >> n >> k;
        vector<int> a(n);
        cin >> a;
        vector<int> ks;
        for(int i = 0; i < n; i++) {
            if(a[i] >= k) {
                ks.push_back(i);
            }
        }
        bool can = a.size() == 1;
        for(int j = 1; j < ks.size() and not can; j++) {
            can |= ks[j] - ks[j - 1] <= 2;
        }
        cout << (can and count(a.begin(), a.end(), k) ? "yes" : "no") << endl;
    }
    return 0;
}
