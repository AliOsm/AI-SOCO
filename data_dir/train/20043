#include <bits/stdc++.h>

using namespace std;
const int N = 1e5 + 5;
int n, a[N];
string s[N];
string reversed[N];
long long memo[N][2];
long long go(int i, bool prev) {
	if (i == n) {
		return 0;
	}
	if (memo[i][prev] != -1)
		return memo[i][prev];

	long long ret = 1e18;

	if (!i || prev && reversed[i - 1] <= reversed[i] || !prev && s[i - 1] <= reversed[i]) {
		ret = min(ret, go(i + 1, true) + a[i]);
	}
	if (!i || prev && reversed[i - 1] <= s[i] || !prev && s[i - 1] <= s[i]) {
		ret = min(ret, go(i + 1, false));
	}

	return memo[i][prev] = ret;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif
	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
		scanf("%d", a + i);
	for (int i = 0; i < n; ++i) {
		char buffer[N];
		scanf("%s", buffer);
		s[i] = reversed[i] = string(buffer);
		reverse(reversed[i].begin(), reversed[i].end());
	}

	memset(memo, -1, sizeof memo);
	long long result = go(0, 0);
	if (result != 1e18)
		printf("%I64d\n", result);
	else
		printf("-1\n");


	return 0;
}