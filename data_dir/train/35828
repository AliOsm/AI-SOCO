#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int, int> pi;
constexpr int inf = 0x3f3f3f3f;
constexpr double EPS = 1e-30;
constexpr double PI = atan(1) * 4;

template <typename T> inline bool chmax(T& x, T y) {return x < y ? x = y, 1 : 0;}
template <typename T> inline bool chmin(T& x, T y) {return x > y ? x = y, 1 : 0;}
inline int LSB(int i) {return (i & -i);}

constexpr int MOD = 1e9+7;
constexpr int maxn = 1e6+5;

ll fact[maxn << 1], inv[maxn << 1], q, x, y, res;

ll fastpow(ll a, ll b){
    ll ret = 1;
    while (b){
        if (b & 1) ret = (ret * a) % MOD;
        a = (a * a) % MOD;
        b >>= 1;
    }

    return ret;
}

//n choose k
ll C(ll n, ll k){
    return (((fact[n] * inv[k]) % MOD) * inv[n - k]) % MOD;
}

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);

    int n = int(2e6);
    fact[0] = 1;
    for (int i = 1; i <= n; i++) fact[i] = (fact[i - 1] * i) % MOD;
    inv[n] = fastpow(fact[n], MOD - 2);
    for (int i = n; i; i--) inv[i - 1] = (inv[i] * i) % MOD;

    cin >> q;
    while (q--){
        cin >> x >> y;
        res = fastpow(2, y - 1);
        for (int i = 2; i * i <= x; i++){
            if (x % i == 0){
                ll pw = 0;
                while (x % i == 0) x /= i, pw++;
                //How many different ways to make 'pw' with 'y' numbers (Stars and Bars)
                res = (res * C(pw + y - 1, pw)) % MOD;
            }
        }

        //Has another prime factor left
        if (x > 1) res = (res * y) % MOD;
        printf("%I64d\n", res);
    }
    return 0;
}
