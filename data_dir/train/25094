#include <cstdlib> 
#include <ctime> 
#include <cstdio>
#include <cstdlib>
#include <iostream>

using namespace std;

int genrand(int n)
{
  return (rand()%n)+1; 
}

const int limit=1000005;

int n;
int seen[limit];

int numcycles(int p[limit])
{
  for (int u=1;u<=n;u++)
    seen[u]=0;
  int c=0;
  for (int u=1;u<=n;u++) {
    if (not seen[u]) {
      c++;
      for (int v=u;not seen[v];v=p[v])
	seen[v]=1;
    }
  }
  return c;
}

int costrepair(int p[limit])
{
  for (int u=1;u<=n;u++)
    seen[u]=0;
  int c=0;
  for (int u=1;u<=n;u++) {
    if (not seen[u]) {
      for (int v=u;not seen[v];v=p[v]) {
	seen[v]=1;
	c++;
      }
      c--;
    }
  }
  return c;
}

int numids(int p[limit])
{
  int c=0;
  for (int u=1;u<=n;u++)
    c+=p[u]==u;
  return c;
}
	   
int maxcycle(int p[limit])
{
  for (int u=1;u<=n;u++)
    seen[u]=0;
  int sol=0;
  for (int u=1;u<=n;u++) {
    if (not seen[u]) {
      int c=0;
      for (int v=u;not seen[v];v=p[v]) {
	seen[v]=1;
	c++;
      }
      sol=max(sol,c);
    }
  }
  return sol;
}

int inversions(int p[limit])
{
  int c=0;
  for (int i=1;i<=n;i++)
    for (int j=i+1;j<=n;j++)
      c+=p[i]>p[j];
  return c;
}

int p[limit];
int P[limit];

int main() 
{
  /*
  srand((unsigned)time(0));
  n=1000;
  for (int i=1;i<=n;i++)
    P[i]=i;
  for (int steps=0;steps<7*n;steps++) {
    int i=genrand(n);
    int j=genrand(n);
    while (i==j) j=genrand(n);
    swap(P[i],P[j]);
  }
  cout<<numids(P)<<endl;
  cout<<numcycles(P)<<endl;
  cout<<costrepair(P)<<endl;
  cout<<maxcycle(P)<<endl;
  cout<<inversions(P)<<endl;
  */
  
  //srand((unsigned)time(0));
  scanf("%d",&n);
  for (int i=1;i<=n;i++)
    scanf("%d",p+i);
  
  if (n<1000) {
    printf("Petr\n");
    exit(0);
  }
  /*
  for (int i=1;i<=n;i++)
    P[i]=i;
  for (int steps=0;steps<5*n;steps++) {
    int i=genrand(n);
    int j=genrand(n);
    while (i==j) j=genrand(n);
    swap(P[i],P[j]);
  }
  cout<<numcycles(p)<<endl;
  cout<<numcycles(P)<<endl;
  if (numcycles(P)<numcycles(p))
    printf("Petr\n");
  else
    printf("Um_nik\n");
  */
  if (3<=numids(p))
    printf("Petr\n");
  else
    printf("Um_nik\n");
  
}
