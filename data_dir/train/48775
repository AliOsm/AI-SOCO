#include <bits/stdc++.h>

using namespace std;

int n, m, s;
vector<int> g[5010];
vector<int> bg[5010];
int comp[5010];
char used[5010];
vector<int> order;
int cnt;
int a[5010][5010];
int sz[5010];

void dfs1(int v){
    used[v] = true;
    for(auto to: g[v]) if(!used[to]) dfs1(to);
    order.push_back(v);
}

void dfs2(int v){
    used[v] = true;
    comp[v] = cnt;
    for(auto to: bg[v]) if(!used[to]) dfs2(to);
}

main()
{
    ios_base::sync_with_stdio(false);
    cin >> n >> m >> s;
    for(int i = 0; i < m; i++){
        int from, to;
        cin >> from >> to;
        g[from-1].push_back(to-1);
        bg[to-1].push_back(from-1);
    }
    for(int i = 0; i < n; i++){
        if(!used[i]) dfs1(i);
    }
    memset(used, 0, sizeof(used));
    for(int i = 0; i < n; i++){
        int v = order[n-1-i];
        if(!used[v]){
            dfs2(v);
            cnt++;
        }
    }
    for(int i = 0; i < n; i++){
        for(auto to: g[i]){
            int v = comp[i];
            int u = comp[to];
            if(v != u && !a[v][u]){
                a[v][u] = 1;
                sz[u]++;
            }
        }
    }
    int an = 0;
    for(int i = 0; i < cnt; i++){
        if(comp[s-1] == i) continue;
        if(sz[i] == 0) an++;
    }
    cout << an << endl;
}
