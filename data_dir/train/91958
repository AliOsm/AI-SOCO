#include <bits/stdc++.h>

#define pb push_back
#define fi first
#define se second
#define mk make_pair

using namespace std;

int cc[200002];

int solve(vector < pair < int , int > > A,int D) {
    if (A.size() < 1) return 0;
    sort(A.begin(),A.end());
    reverse(A.begin(),A.end());
    cc[0]=A[0].se;
    for (int i=1;i<A.size();i++)
        cc[i]=min(cc[i-1],A[i].se);
    int ret=0;
    for (int i=A.size()-1;i>=1;i--) {
        int l=0,r=i-1,m,p=-1;
        while (l <= r) {
            m=(l+r)/2;
            if (cc[m]+A[i].se <= D) {
                p=m;
                r=m-1;
            } else l=m+1;
        }
        if (p == -1) continue;
        ret=max(ret,A[p].fi+A[i].fi);
    }
    return ret;
}

int cs[3],res[3];
int ans,i,n,b,p;
char ch;
vector < pair < int , int > > all[3];

int main() {
   cin>>n>>cs[1]>>cs[2];
   for (i=1;i<=n;i++) {
        scanf("%d %d %c",&b,&p,&ch);
        if (ch == 'C') ch=1; else
                        ch=2;
        all[ch].push_back(mk(b,p));
        if (cs[ch] >= p) res[ch]=max(res[ch],b);
   }

  int ans=0;
  if (res[1] && res[2]) ans=res[1]+res[2];
  ans=max(ans,solve(all[1],cs[1]));
  ans=max(ans,solve(all[2],cs[2]));
  cout<<ans<<endl;
}
