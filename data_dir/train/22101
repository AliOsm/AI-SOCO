#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;

#define x first
#define y second

#define sz(a) (int)(a).size()
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()

#define debug(x) cerr << #x << " = " << x << '\n'

mt19937 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());

template<typename T = int>
inline T read() {
    T res = 0, sig = 1;
    char c = getchar();
    while ((c < '0' || c > '9') && c != '-') {
        c = getchar();
    }
    if (c == '-') {
        sig = -1;
        c = getchar();
    }
    while (c >= '0' && c <= '9') {
        res = res * 10 + c - '0';
        c = getchar();
    }
    return res * sig;
}

void setio(const char *in, const char *out) {
	freopen(in, "r", stdin);
	freopen(out, "w", stdout);
}

void fastio() {
	ios::sync_with_stdio(false);
	cin.tie(0);
}

const int N = 220;

int l[N], r[N];
bool dead[N];

bool in(int p, int a, int b) {
    return p >= a && p <= b;
}

bool cmp(const int &i, const int &j) {
    return r[i] < r[j];
}

int main() {
    fastio();
    int n, k;
    cin >> n >> k;
    for (int i = 0; i < n; ++i) {
        cin >> l[i] >> r[i];
        dead[i] = false;
    }
    vector<int> ans;
    for (int p = 0; p < N; ++p) {
        vector<int> on;
        for (int i = 0; i < n; ++i) {
            if (!dead[i] && in(p, l[i], r[i])) {
                on.push_back(i);
            }
        }
        sort(all(on), cmp);
        for (int i = k; i < sz(on); ++i) {
            dead[on[i]] = true;
            ans.push_back(on[i] + 1);
        }
    }
    cout << sz(ans) << '\n';
    for (auto &q : ans) {
        cout << q << " ";
    }
    return 0;
}
