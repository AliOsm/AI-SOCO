#include <bits/stdc++.h>
 
using namespace std;
 
#define maxn 100010
#define INF 1e15
#define ff first
#define ss second
#define endl '\n'
typedef long long ll;

int n, m;
char g[511][511];
bool vis[511][511];
int l[511][511], r[511][511], u[511][511], d[511][511];

bool check(int x, int y) {
  if (l[x][y] && r[x][y] && u[x][y] && d[x][y]) {
    int tmpx = x, tmpy = y;
    while (tmpx >= 0 && g[tmpx][tmpy] == '*') {
      vis[tmpx][tmpy] = 1;
      tmpx--;
    }
    tmpx = x;
    while (tmpx < n && g[tmpx][tmpy] == '*') {
      vis[tmpx][tmpy] = 1;
      tmpx++;
    }
    tmpx = x;
    while (tmpy >= 0 && g[tmpx][tmpy] == '*') {
      vis[tmpx][tmpy] = 1;
      tmpy--;
    }
    tmpy = y;
    while (tmpy < m && g[tmpx][tmpy] == '*') {
      vis[tmpx][tmpy] = 1;
      tmpy++;
    }
    tmpy = y;
    vis[tmpx][tmpy] = 1;
    return true;
  }
  return false;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cin >> n >> m;
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < m; ++j) cin >> g[i][j];
  }
  for (int i = 0; i < n; ++i) {
    for (int j = 1; j < m; ++j) l[i][j] = l[i][j - 1] + (g[i][j - 1] == '*');
  }
  for (int i = 0; i < n; ++i) {
    for (int j = m - 2; j >= 0; --j) r[i][j] = r[i][j + 1] + (g[i][j + 1] == '*');
  }
  for (int j = 0; j < m; ++j) {
    for (int i = 1; i < n; ++i) u[i][j] = u[i - 1][j] + (g[i - 1][j] == '*');
  }
  for (int j = 0; j < m; ++j) {
    for (int i = n - 2; i >= 0; --i) d[i][j] = d[i + 1][j] + (g[i + 1][j] == '*');
  }
  int cnt = 0;
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < m; ++j) {
      if (!vis[i][j] && g[i][j] == '*') {
        if (check(i, j)) {
          cnt++;
        }
      }
    }
  }
  if (cnt > 1 || cnt == 0) {
    cout << "NO" << endl;
    return 0;
  }
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < m; ++j) {
      if (!vis[i][j] && g[i][j] == '*') {
        cout << "NO" << endl;
        return 0;
      }
    }
  }
  cout << "YES" << endl;
  return 0;
}