#include<iostream>
#include<algorithm>
#include<vector>
#include<string.h>
#include<math.h>
#include<iomanip>
#include<string.h>
#include<limits>
#include<queue>
#include<set>
#include<cstdio>
using namespace std;
typedef long long int llt;
typedef long double double1;
vector< vector<llt> > v;
llt n,l,x,y;
llt ans;
bool comp(vector<llt> v1,vector<llt> v2){
	return (v1[0]*v2[1]>v1[1]*v2[0]);
}
llt find(int i,llt l){
	if(v[i][0]==1){
		return ans+(floor((l/v[i][0]))*v[i][1]);
	}
	ans+=(floor((l/v[i][0]))*v[i][1]);
	l-=(floor((l/v[i][0]))*v[i][0]);
	if(l==0){
		return ans;
	}
	return min(find(i+1,l),ans+v[i][1]);
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	y=1;
	cin>>n>>l;
	llt i;
	ans=0;
	v.resize(n);
	for(i=0;i<n;i++){
		v[i].push_back(y);
		cin>>x;
		v[i].push_back(x);
		v[i].push_back(x/y);
		y=y*2;
	}
	sort(v.begin(),v.end(),comp);
	printf("%lld\n",(find(0,l)));
}
