#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll long long
#define ld float
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define hell (ll)1000000007
#define f first
#define s second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree< ll , null_type , less<ll> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t = 1 ;
const ll N = 41 ;
ll mat[N][N] , dp[N][N][N][N] , up[N][N] ;
void solve()
{
    memset(dp,0,sizeof(dp));
    memset(dp,0,sizeof(up));
	ll n , m , q ;
    cin >> n >> m >> q ;
    rep( i , 1 , n + 1 ){
        rep( j , 1 , m + 1 ){
            char c ;
            cin >> c ;
            mat[i][j] = c == '1' ;
            up[i][j] = mat[i][j] == 0 ?  up[i-1][j] + 1 : 0 ;
			//cout << up[i][j] << ' ' ;
        }
        //cout << "\n" ;
    }
    

    rep( i , 1 , m + 1 ){
        rep( j , i , m + 1 ){
            rep( k , 1 , n + 1){
                rep( l , k , n + 1 ){
                    dp[k][i][l][j] = dp[k][i][l-1][j] ;
                    rep( _ , i , j + 1 ){
                        ll mn = l - k + 1 ;
                        rep( __ , _ , j + 1 ){
                            mn = min( mn , up[l][__]);
                            dp[k][i][l][j] += mn ;
                            if(mn==0)break;
                        }
                    }
                }
            }
        }
    }
    while(q--){
        ll xa , xb , ya , yb ;
        cin >> xa >> ya >> xb >> yb ;
        cout << dp[xa][ya][xb][yb] << '\n';
    }
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
