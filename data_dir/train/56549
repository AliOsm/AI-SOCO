#include <iostream>
#include <stack>
#include <algorithm>
#include <queue>
#include <math.h>
#include <set>
#include <vector>
#include <queue>
#include <map>
#include <string.h>
#include <stdio.h>
#define sf scanf
#define pf printf
#define ll long long

#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i )

using namespace std;

int g[200][200];
int n,m;

int check( int x, int y, int len )
{
    if( x + len > n || y + len > m ) return 1;
    for( int i = 0; i < len; ++i )
    {
        if( g[x+i][y] >= 0 || g[x+i][y+len-1] >= 0 || g[x][y+i] >= 0 || g[x+len-1][y+i]>=0 ) 
        {
            printf("x = %d y = %d len = %d i = %d\n",x,y,len,i);
            return 1;
        }
    }
        //printf("done x = %d y = %d len = %d\n",x,y,len);
    return 0;
}

int v[300];
int d[4][2] = {-1,0,1,0,0,1,0,-1};

void findcol( int x, int y )
{
    for( int i = 0; i < 4; ++i )
    {
        int xx = x + d[i][0];
        int yy = y + d[i][1];
        if( xx >= 0 && xx < n && yy >= 0 && yy < m )
        {
            if( g[xx][yy] >= 0 )
            {
                v[g[xx][yy]] = 1;
            }
        }
    }
}


int findcol( int x, int y, int len )
{
    if( x + len > n || y + len > m ) return -1;
    if( g[x][y+len-1] >= 0 ) return -1;
    clr ( v );
    findcol( x, y+len-1 );
    findcol( x+len-1, y );
    findcol( x+len-1, y+len-1 );

    for( int i = 0; i < 256; ++i )
        if( !v[i] ) return i;
    return -1;
}

int findcol2( int x, int y, int len )
{
    if( x + len > n || y + len > m ) return -1;
    if( g[x+len-1][y] >= 0 ) return -1;
    clr ( v );
    findcol( x, y+len-1 );

    for( int i = 0; i < 256; ++i )
        if( !v[i] ) return i;
    return -1;
}



void fill( int x, int y, int len )
{
    int col = findcol( x, y, len );
    //pf("x = %d y = %d len = %d col = %d\n",x,y,len, col);
    for( int i = x; i < x + len; ++i )
    {
        for( int j = y; j < y + len; ++j )
        {
            g[i][j] = col;
        }
    }
}


int main()
{
    while( cin>>n>>m )
    {
        _clr( g );
        for( int i = 0; i < n; ++i )
        {
            for( int j = 0; j < m; ++j )
            {
                if( g[i][j] >= 0 ) continue;

                int col = findcol( i,j, 1 );
            //  printf("%d %d find col %d\n",i,j,col);

                int len = 1;
                for( int l = 2; l <= 101; ++l )
                {
                    int colx = findcol( i,j,l ); 
                    int col2 = findcol2( i, j,l );
                    if( colx >= col && col2 == col )continue;
                    len = l-1;
                    break;
                }
                fill( i, j, len );
            }
        }

        for( int i = 0; i < n; ++i )
        {
            for( int j = 0; j < m; ++j )
                pf("%c",g[i][j] + 'A');
            pf("\n");
        }
    }
}