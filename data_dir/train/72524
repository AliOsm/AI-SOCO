# include <bits/stdc++.h>

# define pb push_back
# define whole(x) (x).begin(), (x).end()
 
using namespace std; 

typedef long long ll;
const ll INF = (ll)1000000000000002;
const int N = 20005;

int n, m, s, t;
ll L;
vector<pair<int, int>> g[N];

struct edge{
  int a, b, w;
}e[N];

ll calc(int s, int t){
  vector<ll> d(n, INF);
  set<pair<int, int>> q;
  d[s] = 0;
  q.insert({d[s], s});
  while(!q.empty()){
    int v = q.begin() -> second;
    q.erase(q.begin());
    for(pair<int, int> c : g[v]){
      int to = c.first,
      weight = e[c.second].w;
      if (d[to] > d[v] + weight){
        q.erase({d[to], to});
        d[to] = d[v] + weight;
        q.insert({d[to], to});
      }
    }
  }
  return d[t];
}

int main(){
  scanf("%d %d %lld %d %d", &n, &m, &L, &s, &t);
  vector<int> bad;
  for(int i = 0; i < m; ++i){
    scanf("%d %d %d", &e[i].a, &e[i].b, &e[i].w);
    g[e[i].a].pb({e[i].b, i});
    g[e[i].b].pb({e[i].a, i});
    if (e[i].w == 0) bad.pb(i), e[i].w = L + 1;
  }
  if (calc(s, t) < L) return !printf("NO\n"); 
  if (calc(s, t) == L){
    printf("YES\n");
    for(int i = 0; i < m; ++i) printf("%d %d %d\n", e[i].a, e[i].b, e[i].w);
    return 0;
  }
  bool found = false;
  for(int j : bad){
    e[j].w = 1;
    if (calc(s, t) <= L){
      e[j].w += L - calc(s, t);
      found = true;
      break;
    }
  }
  if(!found) return !printf("NO\n");
  printf("YES\n");
  for(int i = 0; i < m; ++i) printf("%d %d %d\n", e[i].a, e[i].b, e[i].w);
  return 0;
}