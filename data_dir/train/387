#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vvi;
typedef vector<pii> vii;
typedef vector<vector<pii> > vvii;
typedef long double ld;
typedef map<int, int> mapii;
typedef map<string, int> mapsi;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(int i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pi  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-9)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) {x, {y, z}}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n, k;
	cin >> n >> k;
	string x;
	cin >> x;

	stack<pair<char, int>> st;
	vi res(n);

	rep(i, 0, sz(x))
	{
		if (st.empty())
			st.push(
			{ x[i], i });
		else
		{
			if (x[i] == ')' && st.top().first == '(')
			{
				int idx = st.top().second;
				st.pop();
				res[idx] = i - idx + 1;
			}
			else
				st.push(
				{ x[i], i });
		}
	}

	set<pii> sett;
	rep(i, 0, n)
		if (res[i])
			sett.insert(
			{ res[i], i });

	vb taken(n);

	while (!sett.empty() && k)
	{
		auto it = sett.end();
		it--;
		int v = it->first, idx = it->second;
		if (v <= k)
		{
			taken[idx] = true;
			rep(i, idx, idx + v)
				if (sett.find(
				{ res[i], i }) != sett.end())
					sett.erase(
					{ res[i], i });
			k -= v;
		}
		else
			sett.erase(it);
	}

	rep(i, 0, n)
	{
		if (taken[i])
		{
			rep(j, i, i + res[i])
				cout << x[j];
		}
	}

	return 0;
}
