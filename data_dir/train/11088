#include <iostream>
#include <fstream>
#include <algorithm>
#include <bitset>
#include <cmath>
#include <vector>
#include <iomanip>
#include <cstring>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <ctime>
#include <random>
#include <stack>

#define ll long long
#define ull unsigned long long
#define ld long double
#define pll pair<ll, ll>
#define pb push_back
#define fast_io cin.tie(0), cout.tie(0), ios_base::sync_with_stdio(0)
#define GCC optimize("Ofast")
using namespace std;

ll gcd(ll a, ll b) { return a ? gcd(b % a, a) : b; }
unordered_map<ll, ll> mp;

int main()
{
    //freopen("rescue.in", "r", stdin), freopen("rescue.out", "w", stdout);
    fast_io;
    ll n, i, t, x = 0, lim = 4294967295;
    vector<ll> zn;
    string a;
    cin >> n;
    for (i = 0; i < n; i++)
    {
        cin >> a;
        if (a == "for")
        {
            cin >> t;
            auto f = mp.find(t);
            if (f != mp.end()) f->second++;
            else mp.insert({t, 1});
            zn.pb(t);
        }
        else if (a == "end")
        {
            mp[zn.back()]--;
            if (mp[zn.back()] < 1) mp.erase(zn.back());
            zn.pop_back();
        }
        else
        {
            ll pr = 1;
            for (auto f = mp.begin(); f != mp.end(); f++)
            {
                if (f->first == 1) continue;
                ll tmp = f->second;
                while (tmp > 0)
                {
                    pr *= f->first;
                    if (pr > lim) cout << "OVERFLOW!!!", exit(0);
                    tmp--;
                }
            }
            x += pr;
            if (x > lim) cout << "OVERFLOW!!!", exit(0);
        }
    }
    cout << x;
    return 0;
}