#include <bits/stdc++.h>
using namespace std;
#define ll long long
vector<pair<int,pair<int,int > > > merge_sort(vector<pair<int,pair<int,int > > >v){
    if(v.size()==1)
        return v;
    int sz=v.size()/2;
    vector<pair<int,pair<int,int > > >l,r;
    for(int i=0;i<v.size();i++)
        if(i<sz)
            l.push_back(v[i]);
        else r.push_back(v[i]);
        l=merge_sort(l);
        r=merge_sort(r);
        v.clear();
        int i=0,j=0;
        int last1=0;
        while(i<l.size()&&j<r.size()){
            if(l[i].first<r[j].first)
            {
                l[i].second.second+=last1;
                v.push_back(l[i]);
                i++;
            }
            else if(l[i].first>r[j].first)
            {
                last1++;
                r[j].second.first+=(l.size()-i);
                v.push_back(r[j]);
                j++;
            }
            else {
                l[i].second.second+=last1;
                v.push_back(l[i]);
                i++;
            }
        }
        while(i<l.size()){
                l[i].second.second+=last1;
                v.push_back(l[i]);
                i++;
        }
        while(j<r.size()){
                v.push_back(r[j]);
                j++;
        }
        return v;
};
int main()
{
    int n;
    scanf("%d",&n);
    vector<pair<int,pair<int,int> > >v(n);
    for(int i=0;i<n;i++)
        scanf("%d",&v[i].first);
	auto v2=merge_sort(v);
	ll sum=0;
	for(int i=0;i<v2.size();i++){
        sum+=(1LL*v2[i].second.first*v2[i].second.second);
    //    cout<<v2[i].first<<" "<<v2[i].second.first<<" "<<v2[i].second.second<<endl;
	}
	cout<<sum<<endl;
	return 0;
}
