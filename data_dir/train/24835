#include <bits/stdc++.h>
using namespace std;
const int N = 1e5 + 10;
int n, m, a[510][510];
bool prime[N];
vector<int> prime_list;
void Build(){
	for (int i=2; i<=N-5; i++){
		prime[i] = true;
	}
	for (int i=2; i<=N-5; i++){
		if (prime[i] == true){
			for (int j=i; j<=N-5; j+=i){
				prime[j] = false;
			}
			prime[i] = true;
			prime_list.push_back(i);
		}
	}
}
int main(){
	// freopen("input.txt", "r", stdin);
	// freopen("output.txt", "w", stdout);
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin>>n>>m;
	for (int i=1; i<=n; i++){
		for (int j=1; j<=m; j++){
			cin>>a[i][j];
		}
	}
	Build();
	int ans = 1e9;
	for (int i=1; i<=n; i++){
		int ans_temp = 0;
		for (int j=1; j<=m; j++){
			int left = -1, right = prime_list.size() - 1;
			while (right - left > 1){
				int mid = (left + right) / 2;
				if (prime_list[mid] >= a[i][j]){
					right = mid;
				}
				else{
					left = mid;
				}
			}
			ans_temp = ans_temp + prime_list[right] - a[i][j];
		}
		ans = min(ans, ans_temp);
	}
	for (int j=1; j<=m; j++){
		int ans_temp = 0;
		for (int i=1; i<=n; i++){
			int left = -1, right = prime_list.size() - 1;
			while (right - left > 1){
				int mid = (left + right) / 2;
				if (prime_list[mid] >= a[i][j]){
					right = mid;
				}
				else{
					left = mid;
				}
			}
			ans_temp = ans_temp + prime_list[right] - a[i][j];
		}
		ans = min(ans, ans_temp);
	}
	cout<<ans;
}