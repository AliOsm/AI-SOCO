#include <bits/stdc++.h>

using namespace std;

typedef long long int LL;

const int MAXN = 1e5;
const LL INF = 1LL * 1e9 * 1e9;

int c[MAXN];

LL dp[MAXN][2];

string s[MAXN][2];

int main() {
	ios_base::sync_with_stdio(false);
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> c[i];
	for (int i = 0; i < n; i++) {
		cin >> s[i][0];
		s[i][1] = s[i][0];
		reverse(s[i][1].begin(), s[i][1].end());
	}

	for (int i = 0; i < n; i++)
		dp[i][0] = dp[i][1] = INF;

	dp[0][0] = 0;
	dp[0][1] = c[0];

	for (int i = 1; i < n; i++) {
		if (s[i][0] >= s[i - 1][0])
			dp[i][0] = min(dp[i][0], dp[i - 1][0]);
		if (s[i][0] >= s[i - 1][1])
			dp[i][0] = min(dp[i][0], dp[i - 1][1]);
		if (s[i][1] >= s[i - 1][0])
			dp[i][1] = min(dp[i][1], dp[i - 1][0] + c[i]);
		if (s[i][1] >= s[i - 1][1])
			dp[i][1] = min(dp[i][1], dp[i - 1][1] + c[i]);
	}
	LL ans = min(dp[n - 1][0], dp[n - 1][1]);
	cout << ((ans == INF) ? -1 : ans) << endl;

	return 0;
}
