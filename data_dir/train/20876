#include <cstdlib> 
#include <cctype> 
#include <cstring> 
#include <cstdio> 
#include <cmath> 
#include <algorithm> 
#include <vector> 
#include <string> 
#include <iostream> 
#include <sstream> 
#include <map> 
#include <set> 
#include <queue> 
#include <stack> 
#include <fstream> 
#include <numeric> 
#include <iomanip> 
#include <bitset> 
#include <list> 
#include <stdexcept> 
#include <functional> 
#include <utility> 
#include <ctime> 
using namespace std; 

#define PB push_back 
#define MP make_pair 

#define rep(i,n) for(int i=0;i<(n);++i) 
#define FOR(i,l,h) for(int i=(l);i<=(h);++i) 
#define FORD(i,h,l) for(int i=(h);i>=(l);--i) 
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl

typedef vector<int> VI; 
typedef vector<string> VS; 
typedef vector<double> VD; 
typedef long long int64; 
typedef pair<int,int> pii; 

int64 pt[20]={};
int Getp(int64 t)
{
	int res=0;
	while(t > 0)
	{
		t /= 10;
		res++;
	}
	return res-1;
}

int64 Getmax(int64 l, int64 r, int p)
{
	int64 mid = (pt[p+1] >> 1);
	if(l < mid && r < mid) return r * (pt[p+1]-1-r);
	if(l >= mid && r >= mid) return l * (pt[p+1]-1-l);
	return (mid-1) * mid;
}

int main(void)
{
	pt[0] = 1;
	FOR(i,1,10) pt[i] = pt[i-1] * 10;
	int64 l,r;
	int pl,pr;
	int64 ans=0;
	cin>>l>>r;
	pl = Getp(l);
	pr = Getp(r);
	while(pl <= pr)
	{
		if(pl == pr) { ans = max(ans,Getmax(l,r,pl)); break;}
		ans = max(ans,Getmax(l,pt[pl+1]-1,pl));
		pl++;
		l = pt[pl];
	}
	cout<<ans<<endl;
	return 0;
}