#include <cstdio>
#include <cmath>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <queue>
#include <vector>
#include <map>
#include <set>
using namespace std;

typedef long long LL;

int n,w,k,a[200005],t[200005],ans;
multiset<int> part,full;

int main()
{
	scanf("%d%d%d",&n,&w,&k);
	for (int i=1;i<=n;++i) scanf("%d",&a[i]);
	for (int i=1;i<=n;++i) scanf("%d",&t[i]);
	ans=0;
	for (int i=1;i<=n;++i) a[i]+=a[i-1];
	for (int l=1,r=0;l<=n;++l)
	{
		while (k>=0&&r<=n)
		{
			++r;
			if (r>n) break;
			k-=(t[r]+1)/2;
			part.insert(t[r]);
			while ((int)part.size()>w)
			{
				k+=(*part.begin()+1)/2;
				k-=*part.begin();
				full.insert(*part.begin());
				part.erase(part.begin());
			}
		}
		ans=max(ans,a[r-1]-a[l-1]);
		if (full.find(t[l])!=full.end())
		{
			full.erase(full.find(t[l]));
			k+=t[l];
		}
		else
		{
			part.erase(part.find(t[l]));
			k+=(t[l]+1)/2;
			while ((int)part.size()<w&&!full.empty())
			{
				k+=*(--full.end());
				k-=(*(--full.end())+1)/2;
				part.insert(*(--full.end()));
				full.erase(--full.end());
			}
		}
	}
	printf("%d\n",ans);
	return 0;
}