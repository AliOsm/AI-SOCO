#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)   for(long long i=a;i<=b;i++)
#define fr(i,a)     for(long long i=0;i<a;i++)
#define fd(i,a,b)   for(long long i=b;i>=a;i--)
#define clr(x)      memset(x,0,sizeof(x))
#define cln(x)      memset(x,-1,sizeof(x))
#define __          printf(" ")
#define _           printf("\n")
#define _o          printf("1\n")
#define stree       long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define mod         1000000007
#define read()      freopen("in.txt","r",stdin)
#define write()     freopen("out.txt","w",stdout)

long long t[105],d[105],p[105],ix[105],n;
long long mem[105][2222];

bool com(long long a,long long b){
    return d[a]<d[b];
}

long long dp(long long cur,long long T){
    if(cur>n) return 0;
    long long &ret=mem[cur][T];
    if(ret!=-1) return ret;
    ret=dp(cur+1,T);
    if(T+t[ix[cur]]<d[ix[cur]]) ret=max(p[ix[cur]]+dp(cur+1,T+t[ix[cur]]),ret);
    return ret;
}


vector<long long>ans;

void find_(long long cur,long long T){
    if(cur>n) return;
    long long ret=dp(cur+1,T),ret1=0;
    if(T+t[ix[cur]]<d[ix[cur]]) ret1=p[ix[cur]]+dp(cur+1,T+t[ix[cur]]);
    if(ret1>ret) {
            ans.push_back(ix[cur]);
            find_(cur+1,T+t[ix[cur]]);
    }
    else find_(cur+1,T);
    return;
}


main(){
    cin>>n;
    fi(i,1,n) scanf("%lld %lld %lld",t+i,d+i,p+i),ix[i]=i;
    sort(ix+1,ix+n+1,com);
    cln(mem);
    cout<<dp(1,0)<<endl;
    find_(1,0);
    long long Size=ans.size();
    cout<<Size<<endl;
    fr(i,Size) printf(i==Size-1?"%lld\n":"%lld ",ans[i]);
    return 0;
}
