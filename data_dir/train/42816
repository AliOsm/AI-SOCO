#include <cstdio>

#include <cmath>

#include <cstring>

#include <iostream>

#include <algorithm>

#include <queue>

#include <vector>

#include <map>



using namespace std;



typedef long long LL;


LL n,m;
int a[200005];
struct Node
{
	int l,r,id;
}f[200005];
LL ans;
int nn;
LL s[1000005];
LL sum[200005];
int dql,dqr,l,r;
LL dqn,dq;
bool cmp(Node a,Node b)
{
	if (a.l/nn!=b.l/nn) return a.l<b.l;
	return a.r<b.r;
}

int main()

{

	scanf("%I64d%I64d",&n,&m);
	for (int i=1;i<=n;++i) scanf("%d",&a[i]);
	ans=0;
	for (int i=1;i<=m;++i) scanf("%d%d",&f[i].l,&f[i].r);
	for (int i=1;i<=m;++i) f[i].id=i;
	nn=(int)sqrt(n*n/m);
	nn=max(nn,1);
	sort(f+1,f+m+1,cmp);
	dql=1;dqr=0;
	for (int i=1;i<=m;++i)
	{
		l=f[i].l;r=f[i].r;
		if (dqr<r)
		{
			for (int j=dqr+1;j<=r;++j)
			{
				dq=a[j];
				dq=dq*((s[dq]<<1)+1);
				ans=ans+dq;
				s[a[j]]++;
			}
			dqr=r;
		}
		if (l<dql)
		{
			for (int j=l;j<=dql-1;++j)
			{
				dq=a[j];
				dq=dq*((s[dq]<<1)+1);
				ans=ans+dq;
				s[a[j]]++;
			}
			dql=l;
		}
		if (r<dqr)
		{
			for (int j=r+1;j<=dqr;++j)
			{
				dq=a[j];
				dq=dq*((s[dq]<<1)-1);
				ans=ans-dq;
				s[a[j]]--;
			}
			dqr=r;
		}
		if (dql<l)
		{
			for (int j=dql;j<=l-1;++j)
			{
				dq=a[j];
				dq=dq*((s[dq]<<1)-1);
				ans=ans-dq;
				s[a[j]]--;
			}
			dql=l;
		}
		sum[f[i].id]=ans;
	}
	for (int i=1;i<=m;++i) printf("%I64d\n",sum[i]);
	return 0;

}