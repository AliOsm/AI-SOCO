#include <bits/stdc++.h> 
using namespace std;
#define fl(i,a,b) for(int i=a;i<b;i++)
#define endl '\n'
#define pb push_back
#define ff first
#define ff first
#define ss second
#define inf 4e18
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
#define mx 200005
#define int long long
#define ll long long
set<int> v[mx];
bool vis[mx];
int d[mx];
void dfs(int x,int p)
{
    d[x] = d[p] + 1;
    for(auto i : v[x])
    {
        if(i != p)
        dfs(i,x);
    }
}
main()
{
    fast;
    int n;
    cin >> n;
    if(n % 2 == 0)
    {
        cout << "NO";
        return 0;
    }
    fl(i,1,n+1)
    {
        int x;
        cin >> x;
        if(x == 0)
            continue;
        v[x].insert(i);
        v[i].insert(x);
    }
    dfs(1,0);
    set<pair<int,int >> ans;
    fl(i,1,n+1)
    {
        int sz = v[i].size();
        if(sz % 2 == 0)
        {
            vis[i] = 1;
            ans.insert({-d[i],i});
        }
    }
    vector<int> op;
    while(ans.size() > 0)
    {
        auto x = *ans.begin();
        ans.erase(x);
        op.pb(x.ss);
    //    cout << x.ss << endl;
        for(auto i : v[x.ss])
        {
            if(v[i].find(x.ss) != v[i].end())
            v[i].erase(x.ss);
            int sz = v[i].size();
        //    cout << i << " " << sz << endl;
            if(sz % 2 == 0 && vis[i] == 0)
            {
                vis[i] = 1;
                ans.insert({-d[i],i});
            }
            else if(sz % 2 == 1 && vis[i] == 1 && ans.find({-d[i],i}) != ans.end())
            {
                vis[i] = 0;
                ans.erase({-d[i],i});
            }
        }
    }
    fl(i,1,n+1)
    {
        if(vis[i] == 0)
        {
         //   assert(0);
            cout << "NO";
            return 0;
        }
    }
    cout << "YES" << endl;
    for(auto i : op)
        cout << i << endl;
 
}