//http://codeforces.com/problemset/problem/599/B

#include <iostream>
#include <string>
#include <cmath>
#include <vector>
#include <algorithm>
#include <iterator>
#include <cstdlib>
#include <cstdio>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <list>

using namespace std;

#define pii pair <int, int>
#define vvi vector <int>
#define ll long long

int size_n, size_m;
string result = "Possible";
vector <int> elF(0), elB(0), resultA(0);
int usedF[100005], usedB[100005], usedFEl[100005];

int main()
{
	int ii, jj;
	map <int, vvi>::iterator it;

	cin >> size_n >> size_m;

	elF.resize(size_n);
	elB.resize(size_m);
	resultA.resize(size_m);

	fill(usedF, (usedF + size_m), 0);

	for (ii = 0; ii < size_n; ii++)
	{
		cin >> elF[ii];

		usedF[elF[ii]]++;
		usedFEl[elF[ii]] = ii + 1;
	}

	for (ii = 0; ii < size_m; ii++)
		cin >> elB[ii];

	for (ii = 0; (ii < size_m) && (result != "Impossible"); ii++)
	{
		if (usedF[elB[ii]] == 0)
			result = "Impossible";
		else if (usedF[elB[ii]] > 1)
			result = "Ambiguity";
	}

	if (result == "Possible")
	{
		for (ii = 0; ii < size_m; ii++)
			resultA[ii] = usedFEl[elB[ii]];
	}

	cout << result << endl;

	if (result == "Possible")
	{
		for (ii = 0; ii < size_m; ii++)
			cout << resultA[ii] << " ";
	}

	return 0;
}