#include <bits/stdc++.h>
#define endl '\n'

//#pragma GCC optimize ("O3")
//#pragma GCC target ("sse4")

#define SZ(x) ((int)x.size())
#define ALL(V) V.begin(), V.end()
#define L_B lower_bound
#define U_B upper_bound
#define pb push_back
#define y1 asdasdsadsad

using namespace std;
template<class T, class T2> inline int chkmax(T &x, const T2 &y) { return x < y ? x = y, 1 : 0; }
template<class T, class T2> inline int chkmin(T &x, const T2 &y) { return x > y ? x = y, 1 : 0; }
const int MAXN = (1 << 20);

int x1, y1;
int x2, y2;
int x3, y3;

void read()
{
	cin >> x1 >> y1;
	cin >> x2 >> y2;
	cin >> x3 >> y3;
}

int dist(int x1, int y1, int x2, int y2) { return abs(x1 - x2) + abs(y1 - y2); }

set<pair<int, int> > answer;

void get_path(int x1, int y1, int x2, int y2)
{
	while(x1 < x2)
	{
		answer.insert({x1, y1});
		x1++;
	}

	while(y1 < y2)
	{
		answer.insert({x1, y1});
		y1++;
	}

	while(x1 > x2)
	{
		answer.insert({x1, y1});
		x1--;
	}

	while(y1 > y2)
	{
		answer.insert({x1, y1});
		y1--;
	}

	answer.insert({x1, y1});
}

void solve()
{
	pair<int, pair<int, int> > perfect = {(int)1e9, {-1, -1}};
	for(int mx = 0; mx <= 1000; mx++)
		for(int my = 0; my <= 1000; my++)
		{
			int val1 = dist(x1, y1, mx, my);
			int val2 = dist(x2, y2, mx, my);
			int val3 = dist(x3, y3, mx, my);
			chkmin(perfect, make_pair(1 + val1 + val2 + val3, make_pair(mx, my)));
		}

	get_path(x1, y1, perfect.second.first, perfect.second.second);
	get_path(x2, y2, perfect.second.first, perfect.second.second);
	get_path(x3, y3, perfect.second.first, perfect.second.second);

	cout << SZ(answer) << endl;
	for(auto it: answer)
		cout << it.first << " " << it.second << endl;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	read();
	solve();
	return 0;
}

