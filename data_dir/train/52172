#include<bits/stdc++.h>
using namespace std;
const int MAXN = 100000;

vector<int>skills[MAXN+7];
vector<int>sizes[MAXN+7];
int skillnow[MAXN+7];

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int n, m;
    cin >> n >> m;

    for (int i = 1; i <= n; i++) {
        int s, r;
        cin >> s >> r;
        skills[s].push_back(r);
    }

    for (int i = 1; i <= m; i++) {
        sort(skills[i].rbegin(), skills[i].rend());
        sizes[skills[i].size()].push_back(i);
    }

    vector<int>active;
    int ans = 0;
    int tmp = 0;
    for (int i = n; i > 0; i--) {
        vector<int>vc;
        for (int s : active) {
            if (skillnow[s] > 0) tmp -= skillnow[s];
            skillnow[s] -= skills[s].back();
            if (skillnow[s] > 0) tmp += skillnow[s];
            skills[s].pop_back();
            if (skills[s].size()) vc.push_back(s);
        }
//        cout << tmp << endl;
        active = vc;

        for (int s : sizes[i]) {
            for (int r : skills[s]) {
                skillnow[s] += r;
            }
            if (skillnow[s] > 0) tmp += skillnow[s];
            active.push_back(s);
        }

//        cout << tmp << " for taking " << i << endl;
        ans = max(ans, tmp);
    }


    cout << ans << endl;


    return 0;
}
