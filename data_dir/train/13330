#include <bits/stdc++.h>

typedef long long ll;
using namespace std;

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(int i = (a); i <= (b); i++)
#define fd(i,a,b) for(int i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<int,int>
#define SZ(x) ((int)x.size())
#define vii vector<pair<int,int>>

const int INF = 2000000005;
const ll INFLL = 1000000000000000002ll;
const ll MOD = 1000000009;

inline ll min(ll a, ll b, ll c){return min(min(a,b),c);}
inline ll min(ll a, ll b, ll c, ll d){return min(min(min(a,b),c),d);}
inline ll max(ll a, ll b, ll c){return max(max(a,b),c);}
inline ll max(ll a, ll b, ll c, ll d){return max(max(max(a,b),c),d);}

// -------------------------------------------------------------------------------------------------------------

ll N, Q;

/*bool op()
{
    bool found = false;
    f(i,1,N) if(A[i] == 0) found = true;
    if(!found) return false;
    int last_num = 0, last_empty = 0;
    f(i,1,2*N) if(A[i] != 0) last_num = i;
    f(i,1,last_num-1) if(A[i] == 0) last_empty = i;
    swap(A[last_num], A[last_empty]);
    return true;
}

bool eq()
{
    f(i,1,N) if(A[i] != B[i]) return false;
    return true;
}*/

ll query(ll b, ll idx)
{
    //cout << b << " " << idx << "\n";
    //getchar();
    if(b == 0) return 0;
    if(idx%2 == 0) return idx/2 + (1ll<<(b-2)) - 1;
    else return query(b-1,idx/2 + 1);
}

int main()
{
    //faster_io();

    cin >> N >> Q;
    /*f(i,1,N) A[2*i-1] = i;
    while(op());*/
    while(Q--)
    {
        ll k;
        cin >> k;
        ll init = k;
        if(k&1)
        {
            cout << k/2 + 1 << "\n";
            continue;
        }
        ll e = 2*N-1;
        k = (e-k) / 2 + 1;
        for(ll b = 1; b <= 62; b++)
        {
            ll x = (1ll<<b) - 1;
            if(k <= x)
            {
                //cout << b << "\n";
                ll b2 = (1ll<<(b-1)) - 1;
                ll idx = k - b2;
                ll sub = query(b,k-b2);
                //cout << b << " " << idx << "\n";
                cout << N - sub << "\n";
                //if(N-sub != A[init]) cout << "ERROROROROROR\n";
                break;
            }
        }
    }
}
