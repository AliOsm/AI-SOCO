#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
using namespace std;
const int maxn=1e5+10;
int n,p,k;
long long dp[150][maxn];
struct da{int s[10],v;}a[maxn];
bool cmp(da aa,da bb){return aa.v>bb.v;}
int main()
{
	scanf("%d%d%d",&n,&p,&k);
	for (int i=1;i<=n;i++) scanf("%d",&a[i].v);
	for (int i=1;i<=n;i++)
	 for (int j=1;j<=p;j++) scanf("%d",&a[i].s[j]);
	sort(a+1,a+n+1,cmp);
	for (int i=1;i<=k;i++) dp[0][0]+=a[i].v;
	for (int i=1;i<=n;i++)
	 for (int j=0;j<(1<<p);j++)
	 if (dp[j][i-1])
	 {
	 	dp[j][i]=max(dp[j][i],dp[j][i-1]);
	 	for (int kk=0;kk<p;kk++)
	 	if ((j&(1<<kk))==0)
	 	{
	 		long long now=dp[j][i-1]+a[i].s[kk+1];
	 		int num=__builtin_popcount(j);
	 		if (k+num>=i) now+=a[k+num+1].v-a[i].v;
	 		dp[j|(1<<kk)][i]=max(dp[j|(1<<kk)][i],now);
	 	}
	 }
	printf("%lld\n",dp[(1<<p)-1][n]);
return 0;
}