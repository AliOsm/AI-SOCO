#include<bits/stdc++.h>

using namespace std;

//#define double long double

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
typedef pair<int,ii> iii2;
typedef pair<ii,ii> iiii;

long long mod = 1000000007LL;
long long large = 2000000000000000000LL;


vector<long long> per;

long long power(long long a,long long x){
	long long ans = 1;
	while(x){
		if(x&1) ans = ans*a%mod;
		a = a*a%mod;
		x>>=1;
	}
	return ans;
}

long long C(long long n,long long m){
	if(m<0||m>n) return 0;
	return per[n]*power(per[m]*per[n-m]%mod,mod-2)%mod;
}

int main(){

	ios::sync_with_stdio(false);

	mod = 998244353LL;
	per.assign(4000010,1);
	for(int i=1;i<4000010;i++) per[i] = 1LL*i*per[i-1]%mod;


	int n;
	cin>>n;
	long long k;
	cin>>k;
	vector<int> h(n,0);
	for(int i=0;i<n;i++) cin>>h[i];
	int c=0;
	for(int i=0;i<n;i++){
		if(h[i]!=h[(i+1)%n]) c++;
	}

	long long inv2 = (mod+1)/2;

	long long ans = 0;
	for(int i=1;i<=c;i++){
		long long temp = power(k-2,c-i)%mod;
		temp = temp*C(c,i)%mod;
		if(i%2){
			temp = temp*power(2,i-1)%mod;
		}else{
			temp = temp*(power(2,i)+mod-C(i,i/2))%mod*inv2%mod;
		}
		ans+=temp;
		ans%=mod;
	}
	ans = ans*power(k,n-c)%mod;
	cout<<ans<<endl;

    return 0;
}
