#include <bits/stdc++.h>
using namespace std;
#define ll long long
const ll alf = 26;
const ll sz = 500000*2.8;
ll fr = 1;
ll k,ans = 0;
 string s, s1, v;

struct node
{
    vector <ll> p;
    ll total;
};

vector <node> a(sz+1);

void init()
{
    ll i,j;
    for(i=0; i<sz; i++)
    {
        for(j=0; j<alf; j++)
            a[i].p.push_back(0);
            a[i].total = 0;
    }
    
}


void add(string ss)
{
    ll i=0,next = ss[i]-'a',num=0;
    if (!a[num].p[next])// cоздаём узел
        {
        a[num].p[next] = fr;
        fr++;
        }
    //cout<<"next = "<<next<<endl;
    for(i=1; i<ss.size(); i++)
    {

        // переходим в новый узел
        num = a[num].p[next];
        a[num].total++;

        next = ss[i]-'a';
      //  cout<<"next = "<<next<<endl;
        if (!a[num].p[next])// cоздаём узел
        {
        a[num].p[next] = fr;
        fr++;
        }

    }
        num = a[num].p[next];
        a[num].total++;


}

void dfs(ll start, ll cnt)
{
    ll i;
    if (cnt>k) return;
    ll odin = 1;
     ans+=min(odin, a[start].total);

    for(i=0; i<alf; i++)
    {
        if (a[start].p[i]!=0)
            if (v[i]=='0' ) dfs(a[start].p[i],cnt+1);
        else
            dfs(a[start].p[i],cnt);
    }
}

int main()
{
    init();
    //freopen("input.txt","r",stdin);
    ll i,j;
    cin>>s;
    cin>>v;
    cin>>k;
    for(i=0; i<s.size(); i++)
    {
        s1 = "";
        for(j=i; j<s.size(); j++)
            s1+=s[j];
        add(s1);
    }
/*
    for(i=0; i<20; i++)
        cout<<a[i].total<<" ";
    cout<<endl;
*/
    dfs(0,0);
    cout<<ans;


    return 0;
}