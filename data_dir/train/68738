#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int, int> pi;
const int inf = 0x3f3f3f3f;
const long double PI = 3.14159265;

inline void chmax(int& x, int y) {if (x < y) x = y;}
inline void chmin(int& x, int y) {if (x > y) x = y;}
inline int LSB(int i) {return (i & -i);}

struct point{
    int a, b, c, d, e;
    point(){}
    point(int A, int B, int C, int D, int E){
        a = A, b = B, c = C, d = D, e = E;
    }

} p[1005];

int n, res;
vector <int> v;

ll sq(int n){
    return 1LL * n * n;
}

ll length(point a){
    ll sum = sq(a.a) + sq(a.b) + sq(a.c) + sq(a.d) + sq(a.e);
    return sum;
}

long double angle(point a, point b){
    ll dot = a.a*b.a + a.b*b.b + a.c*b.c + a.d*b.d + a.e*b.e;
    return acos(dot/sqrt(length(a) * length(b))) * 1LL * 180 / PI;
}

bool check(point a, point b){
    return (a.a == b.a && a.b == b.b && a.c == b.c && a.d == b.d && a.e == b.e);
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);

    cin >> n;
    for (int i = 0; i < n; i++) cin >> p[i].a >> p[i].b >> p[i].c >> p[i].d >> p[i].e;
    if (n <= 2){
        cout << n << endl;
        for (int i = 0; i < n; i++) cout << i + 1 << endl;
        return 0;
    }

    for (int i = 0; i < n; i++){
        bool flag = false;
        for (int j = 0; j < n; j++){
            for (int k = 0; k < n; k++){
                if (i == j || i == k || j == k || check(p[i], p[j]) || check(p[i], p[k])) continue;
                if (angle(point(p[j].a - p[i].a, p[j].b - p[i].b, p[j].c - p[i].c, p[j].d - p[i].d, p[j].e - p[i].e),
                          point(p[k].a - p[i].a, p[k].b - p[i].b, p[k].c - p[i].c, p[k].d - p[i].d, p[k].e - p[i].e)) - 90 <= 0.0000000000001){
                            flag = true;
                            goto skip;
                }
            }
        }
        skip:
        if (!flag){
            res++, v.push_back(i + 1);
        }
    }

    cout << res << endl;
    for (int i : v) printf("%d\n", i);
	return 0;
}
