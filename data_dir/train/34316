#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 1e5 + 10;

int a[N];
int dp_min[N][100];
void rmq(int n) {
	for(int i = 1; i <= n; i++)
		dp_min[i][0] = a[i];
	for(int j = 1; (1 << j) <= n; j++)
	for(int i = 1; i + (1 << j) - 1 <= n; i++)
		dp_min[i][j] = min(dp_min[i][j - 1], dp_min[i + (1 << (j - 1))][j - 1]);
}
int query(int l, int r) {
	int k = log2(r - l + 1);
	return min(dp_min[l][k], dp_min[r - (1 << k) + 1][k]);
}
ll dp[N], sum[N];
int main() {
	int n, c;
	scanf("%d %d", &n, &c);
	for(int i = 1; i <= n; i++) {
		scanf("%d", a + i);
		sum[i] = sum[i - 1] + a[i];
	}
	rmq(n);
	for(int i = 1; i < c; i++)
		dp[i] = sum[i];
	for(int i = c; i <= n; i++)
		dp[i] = min(dp[i - 1] + a[i], dp[i - c] + sum[i] - sum[i - c] - query(i - c + 1, i));
	return 0 * printf("%lld\n", dp[n]);
}