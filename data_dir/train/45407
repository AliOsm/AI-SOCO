#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
#define N 300005
#define ll long long 
#define ld long double
#define pb push_back
#define ff first
#define ss second

vector < pair <ll, ll> > v[N];
int vis[N] = {0};
ll ans = 0, a[N], h[N], n, x, y, wi, i;

void dfs(int node){
	vis[node] = 1;
	h[node] = a[node];
	vector <ll> temp;
	for(auto it : v[node]){
		if(!vis[it.ff]){
			dfs(it.ff);
			temp.pb(h[it.ff] - it.ss);
		}
	}
	sort(temp.rbegin(), temp.rend());
	if(temp.size() == 0)
		return;
	ans = max(ans, a[node] + temp[0]);
	if(temp.size() >= 2){
		ans = max(ans, a[node] + temp[0] + temp[1]);
	}
	if(temp.size()){
		h[node] = max(a[node], a[node] + temp[0]);
	}
} 

int main(){
	ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	cin>>n;
	for(i=1; i<=n; i++){
		cin>>a[i];
		ans = max(ans, a[i]);
	}
	for(i=1; i<n; i++){
		cin>>x>>y>>wi;
		v[x].pb({y, wi});
		v[y].pb({x, wi});
	}
	dfs(1);
	cout<<ans;
	return 0;
}