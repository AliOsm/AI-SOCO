#include <bits/stdc++.h>
using namespace std;
#define input freopen("C:\\cp\\in.txt","r",stdin)
#define output freopen("C:\\cp\\out.txt","w",stdout)
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(), (x).end()
#define f first
#define s second
#define pb push_back
#define mp make_pair
const double PI = acos(-1.0);
typedef pair<int,int> pii;
typedef long long ll;

const int MAX = 300001;

int n,m;
pair<vector<int>,int> g[MAX];
int group[MAX];
set<int> G[MAX];
int res[MAX];

int main()
{
    scanf("%d%d",&n,&m);
    for(int i=0;i<m;i++){
        int u,v;
        scanf("%d%d",&u,&v);
        u--; v--;
        g[u].f.pb(v);
        g[v].f.pb(u);
    }
    for(int i=0;i<n;i++){
        g[i].f.pb(i);
        g[i].s = i;
        sort(all(g[i].f));
    }
    sort(g,g+n);
    int c = 1;
    for(int i=1;i<n;i++){
        if(g[i].f == g[i-1].f)
            group[g[i].s] = group[g[i-1].s];
        else group[g[i].s] = c++;
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<(int)g[i].f.size();j++){
            int u = group[g[i].s];
            int v = group[g[i].f[j]];
            if(u!=v){
                G[u].insert(v);
                G[v].insert(u);
            }
        }
    }
    if(c == 1){
        res[0] = 1;
    }else{
        vector<int> root;
        for(int i=0;i<c;i++){
            if(G[i].size() > 2){
                cout << "NO" << endl;
                return 0;
            }
            if(G[i].size() == 1)
                root.pb(i);
        }
        if(root.size() == 0){
            cout << "NO" << endl;
            return 0;
        }
        int val = 1;
        int par = -1;
        int cur = root[0];
        while(true){
            res[cur] = val++;
            if(cur == root.back())
                break;
            for(auto node: G[cur]){
                if(node != par){
                    par = cur;
                    cur = node;
                    break;
                }
            }
        }
    }

    cout << "YES" << endl;
    for(int i=0;i<n;i++)
        cout << res[group[i]] << " ";
    return 0;
}








