#include <bits/stdc++.h>
using namespace std;

const int N = 2e5 + 100;
const int B = 29;

struct nd {
  int l, r, cnt;
};

int sz = 1;
nd tr[B * N];

void addrem(int x, int m) {
  for (int v = 0, i = B; i >= 0; --i) {
    if ((1 << i) & x) {
      if (!tr[v].r) tr[v].r = sz++;
      v = tr[v].r;
    } else {
      if (!tr[v].l) tr[v].l = sz++;
      v = tr[v].l;
    }
    tr[v].cnt += m;
  }
}

int getxr(int x) {
  int ans = 0;
  for (int v = 0, i = B; i >= 0; --i) {
    int le = tr[v].l, rg = tr[v].r;
    if ((1 << i) & x) {
      if (le and tr[le].cnt) {
        ans += (1 << i);
        v = le;
      } else {
        v = rg;
      }
    } else {
      if (rg and tr[rg].cnt) {
        ans += (1 << i);
        v = rg;
      } else {
        v = le;
      }
    }
  }
  return ans;
}

int main()
{
  ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
  addrem(0, 1);
  int q;
  cin >> q;
  while (q--) {
    char c; int x;
    cin >> c >> x;
    if (c == '+') addrem(x, 1);
    else if (c == '-') addrem(x, -1);
    else cout << getxr(x) << '\n';
  }
}
// g++ -W -Wall -Wextra -pedantic -std=c++0x -o p main.cpp
