
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
#include <bitset>
using namespace std;
#define rep(i, n) for (int (i) = 0, j123 = n; (i) < j123; (i) ++)
#define rep1(i, n) for (int (i) = 1, j123 = n; (i) <= j123; (i) ++)
#define db(x) {cout << #x << " = " << (x) << endl;}
#define dba(a, x, y) {cout << #a << " :";for(int i123=(x);i123<=(y);i123++) cout<<setw(4)<<(a)[i123];cout<<endl;}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define sz(x) int(x.size())
#define endl '\n'
typedef long long ll;
typedef long double ld;
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const ld pi = acos(-1);
// const int MOD = ;

int N;
int A[500100];
int main()
{
  ios_base::sync_with_stdio(0); cout.precision(15); cout << fixed; cout.tie(0); cin.tie(0);
  cin >> N;
  rep1(i,N) cin >> A[i];
  vector<int> v;
  rep1(i,100) v.pb(A[1]);
  rep1(i,N) v.pb(A[i]);
  rep1(i,100) v.pb(A[N]);
  int answer = 0;
//  int ccc = 0;
  for (int i = 0; i < N + 150;)
  {
    int left = i;
    while (left < N + 150 && v[left] == v[left + 1]) left ++;
    if (left == N + 150) break;
    int right = left + 1;
    while (right < N + 150 && v[right] != v[right + 1]) right ++;
    int numinside = right - left - 1;
    int half = (numinside + 1) / 2;
    answer = max(answer, half);
    rep1(ii,half) v[left + ii] = v[left];
    rep1(ii,half) v[right - ii] = v[right];
    i = right;
  }
  cout << answer << endl;
  for (int i = 100; i < N + 100; i++)
    cout << v[i] << (i + 1 < N + 100 ? ' ' : '\n');
}
