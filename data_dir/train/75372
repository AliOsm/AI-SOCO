#include <bits/stdc++.h>
#define endl '\n'

using namespace std;
template<class T, class T2> inline void chkmax(T &x, const T2 &y) { if(x < y) x = y; }
template<class T, class T2> inline void chkmin(T &x, const T2 &y) { if(x > y) x = y; }
const int MAXN = (1 << 18);

int n;
string s, t;

void read()
{
	cin >> s >> t;
	n = s.size();
	s = " " + s;
}

int pref[MAXN], suff[MAXN];
int pr[MAXN][26], sf[MAXN][26];

void solve()
{
	int po = 0;
	for(int i = 1; i <= n; i++)
	{
		if(po < (int)t.size() && s[i] == t[po]) po++;
		pref[i] = po;
	}

	po = t.size() - 1;
	suff[n + 1] = po + 2;
	for(int i = n; i >= 1; i--)
	{
		if(po >= 0 && s[i] == t[po]) po--;
		suff[i] = po + 2; 
	}

	memset(pr, -1, sizeof(pr));
	memset(sf, -1, sizeof(sf));
	for(int i = 1; i <= (int)t.size(); i++)
	{
		for(int ii = 0; ii < 26; ii++) pr[i][ii] = pr[i - 1][ii];
		pr[i][t[i - 1] - 'a'] = i;
	}
	
	for(int i = t.size(); i >= 1; i--)
	{
		for(int ii = 0; ii < 26; ii++) sf[i][ii] = sf[i + 1][ii];
		sf[i][t[i - 1] - 'a'] = i;
	}

	for(int i = 1; i <= n; i++)
	{
		int frs = pr[pref[i]][s[i] - 'a'];
		int lst = sf[suff[i]][s[i] - 'a'];		
		
		if(frs == -1 && lst == -1) { cout << "No" << endl; return; }
		if(frs == -1 && lst != (int)t.size()) { cout << "No" << endl; return; }
		if(frs != (int)t.size() && lst == -1) { cout << "No" << endl; return; }
		if(frs < lst) { cout << "No" << endl; return; }
	}

	cout << "Yes" << endl;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	read();
	solve();
	return 0;
}

