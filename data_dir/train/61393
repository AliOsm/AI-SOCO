#include <bits/stdc++.h>
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
using namespace std;
using ll = long long;
using ld = long double;
using pii = pair<int, int>;

int main() {
  ios_base::sync_with_stdio(false);

  int n, m;
  cin >> n >> m;
  vector<vector<char>> a(n, vector<char>(m));
  vector<vector<int>> dp(n, vector<int>(m));
  vector<vector<int>> dp2(n, vector<int>(m));
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < m; ++j) {
      cin >> a[i][j];
    }
  }
  dp[0][0] = 1;
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < m; ++j) {
      if (a[i][j] == '#') dp[i][j] = 0;
      if (i + 1 < n) dp[i + 1][j] |= dp[i][j];
      if (j + 1 < m) dp[i][j + 1] |= dp[i][j];
    }
  }
  dp2[n - 1][m - 1] = 1;
  for (int i = n - 1; i >= 0; --i) {
    for (int j = m - 1; j >= 0; --j) {
      if (a[i][j] == '#') dp2[i][j] = 0;
      if (i > 0) dp2[i - 1][j] |= dp2[i][j];
      if (j > 0) dp2[i][j - 1] |= dp2[i][j];
    }
  }
  if (!dp[n - 1][m - 1]) {
    cout << 0 << endl;
    return 0;
  }

  vector<vector<int>> cnt(n, vector<int>(m));
  int x = 0, y = 0;
  while (!(x == n - 1 && y == m- 1)) {
    cnt[x][y]++;
    if (x + 1 < n && dp2[x + 1][y]) {
      x++;
      continue;
    } else {
      y++;
    }
  }
  x = 0; y = 0;
  while (!(x == n - 1 && y == m- 1)) {
    if (cnt[x][y] && x + y > 0) {
      cout << 1 << endl;
      return 0;
    }
    if (y  + 1 < m && dp2[x][y + 1]) {
      y++;
    } else {
      x++;
    }
  }

  cout << 2 << endl;
}