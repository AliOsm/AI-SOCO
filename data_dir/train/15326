#include<iostream>
#include<cstdio>
#include<cstring>
#include<vector>
#include<algorithm>
#define N 2002
using namespace std;
typedef long long ll;
const ll mod = 1000000007;
int n;
ll a[N];
ll g[N],f[N][N];
ll p[N];
ll init(ll x){
   if(g[x]>=0)return g[x];
   if(x==1)return g[x]=0;
   if(x==2)return g[x] =1;
   return g[x] = (x-1+mod)%mod*((init(x-1)+init(x-2))%mod)%mod;
}
ll dfs(ll x, ll y){
   if(f[x][y]>=0)return f[x][y];
   if(y==0)return f[x][y] = p[x];
   if(x>y){
           f[x][y] = ((x-y+mod)%mod*dfs(x-1,y)%mod+y%mod*dfs(x-1,y-1)%mod)%mod;
           return f[x][y];
   }
   return f[x][y] = g[x];
}
int main(){
    p[0] = 1;
    for(ll i = 1;i<=2000;++i)
           p[i]= p[i-1]*i%mod;
    while(cin>>n){
                  memset(g,-1,sizeof(g));
                  memset(f,-1,sizeof(f));
                  ll ans = init(n);
                  for(int i =1;i<=n;++i)
                          scanf("%I64d",a+i);
                  int tot1 = 0;
                  int tot2 = 0;
                  for(int i = 1;i<=n;++i){
                          if(a[i]==-1){
                                       tot1++;
                                       
                          }
                          else if(a[a[i]]==-1)tot2++;
                  }
                  dfs(tot1,tot1-tot2);
                  cout<<f[tot1][tot1-tot2]<<endl;
    }
    return 0;
}
