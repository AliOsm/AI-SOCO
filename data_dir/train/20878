#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define pb push_back
#define mp make_pair
#define ld long double

const int MAXN=100005;

vector<ll>adj[MAXN],a[MAXN],res;
bool done[MAXN],done2[MAXN],valid=true;

bool comp(ll x, ll y)
{
	if(done[x] && !done[y]) return false;
	if(!done[x] && done[y]) return true;
	if((!done[x] && !done[y]) || (done[x] && done[y]))
	{
		if(x>y) return true;
		return false;
	}
}

void dfs(ll node)
{
	done[node]=true;
	if(done2[node])
	{
		valid=false;
		return;
	}
	for(auto it:adj[node])
		if(!done[it])
			dfs(it);	
}

int main()
{
    std::ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    ll n,m;
    cin>>n>>m;
    for(int i=0;i<n;i++)
    {
    	ll h,f;
    	cin>>h;
    	for(int j=0;j<h;j++)
    	{
    		cin>>f;
    		a[i].pb(f);
    	}
    }
    for(int i=0;i<n-1;i++)
    {
    	bool flag=false;
    	for(int j=0;j<min(a[i].size(),a[i+1].size());j++)
    	{
    		if(a[i][j]!=a[i+1][j])
    		{
    			flag=true;
    			if(comp(a[i][j],a[i+1][j]))
    			{
    				done2[a[i+1][j]]=true;
    				done[a[i][j]]=true;
    				dfs(a[i][j]);
    				if(comp(a[i][j],a[i+1][j]) || !valid)
    				{
    					cout<<"No"<<endl;
    					return 0;
    				}
    			}
    			else
    			{
    				adj[a[i+1][j]].pb(a[i][j]);
    			}
    			break;
    		}
    	}
    	if(!flag)
    	{
    		if(a[i].size()>a[i+1].size())
    		{
    			cout<<"No"<<endl;
    			return 0;
    		}
    	}
    }
    if(valid==false)
    {
    	cout<<"No"<<endl;
    	return 0;
    }
    for(int i=1;i<=m;i++)
    {
    	if(done[i]) res.pb(i);
    }
    cout<<"Yes"<<endl;
    cout<<res.size()<<endl;
    for(auto it:res)
    	cout<<it<<" ";
    cout<<endl;
    return 0;
}    