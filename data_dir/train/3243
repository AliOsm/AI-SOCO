#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>
#include <deque>
#include <map>
#include <stack>
#include<bitset>
#include<list>
#include<cassert>
#include<numeric>
#include <iomanip>

using namespace std;

int n;
const int N = 3 * 10 * 1000 + 5;
int l[N];
int cost[N];
struct C
{
    int l, c;
    bool operator < (C b) const
    {
        return c > b.c;    
    }
    C(int a, int b)
    {
        c = a;
        l = b;
    }
};
 
 
int main() 
{
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> l[i];
    }
    for (int i = 0; i < n; i++)
    {
        cin >> cost[i];
    }
    priority_queue<C> q;
    for (int i = 0; i < n; i++)
    {
        q.push( C(cost[i], l[i]) );    
    } 
    set<int> s;
    while(!q.empty())
    {
        C p = q.top();
        q.pop();
        if(s.find(p.l) != s.end()) 
        {
            continue;
        }
        s.insert(p.l);
        if(p.l==1)
        {    
        	cout<< p.c; 
        	exit(0);
        }
        int t = n - 1;
        for(int i = 0; i < n; i++)
        {
            q.push(C(cost[i]+p.c, __gcd(l[i], p.l)) );
            t++; 
            l[t]= __gcd(l[i], p.l);
            cost[t] = cost[i] + p.c;
        }
    }
    cout << -1;              
}

























