#include<cstdio>
#include<iostream>
#include<vector>
#include<map>
using namespace std;
const int p = 47;
map<int , vector<int> > hasha;
int a[100005],f[1100010],n,k,g;
bool b[100005];
char s[1100005],ss[2000005];

bool check(int x, int y){
    for( int i = 0; i < k; ++i)
        if(s[x+i]!=ss[y+i])return 0;
    return 1;
}

int main(){
    scanf("%d%d\n%s%d\n",&n,&k,s+1,&g);
    int len = n*k;
    for (int i = 1; i < k; ++i) s[len+i] = s[i];
    for (int i = 1; i < len + k; ++i)f[i] = f[i-1]*p + s[i] - 'a'+1;//hash
    int st = 0;
    for (int i = 1; i <= g; ++i){
        scanf("%s",ss+st);int h = 0;
        for (int j = 0; j < k; j++)h = h*p+ss[st+j] - 'a' +1;//单个hash
        hasha[h].push_back(i);st+=k;
    }
    int pow = 1;
    for (int i = 1; i <= k; i++) pow*=p;
    for (int i = 1,j; i <= k; i++){
        int m = 0;
        for(j = i;j<=len; j+=k){
            int x = f[j+k-1] - pow*f[j-1],y=hasha[x].size(),z=0;//x为一段的hash值
            if(y==0)break;
            if (y==1)z = hasha[x][0];
            if (y>1){           //出现多个hash值
                for (int l = 0; l < y; l++)
                if(check(j, (hasha[x][l]-1)*k)){//判断
                    z = hasha[x][l];break;
                }
            }
            if(!z || b[z])break;//个人觉得前面没有必要，去了也能a
            b[a[++m]=z] = true;//记录ubstring的位置
        }
        if(j>len){//j==i+len
            puts("YES");
            for (j = 1; j <= m; j++)printf("%d ",a[j]);
            return 0;
        }
        for(j = 1; j <= m; j++)b[a[j]] = false;//错误，重来。
    }
    puts("NO");
    return 0;
}