/***************************************************************************
 * #######                    #                                            *
 *    #     #    #  ######   # #    #    #   ####   #    #  #    #  #      *
 *    #     #    #  #       #   #   ##   #  #       #    #  #    #  #      *
 *    #     ######  #####  #     #  # #  #   ####   ######  #    #  #      *
 *    #     #    #  #      #######  #  # #       #  #    #  #    #  #      *
 *    #     #    #  #      #     #  #   ##  #    #  #    #  #    #  #      *
 *    #     #    #  ###### #     #  #    #   ####   #    #   ####   ###### *
 ***************************************************************************/
#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define	endl		'\n'
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
using namespace std;
#define N  100005
map<ll,ll>mp;
ll check(ll m,ll n)
{
	if(m==0)
		return 1;
	ll val=0;
	for(map<ll,ll> :: iterator it=mp.begin();it!=mp.end();it++)
	{
		val+=(it->S)/m;
	}
	if(val>=n)
		return 1;
	else
		return 0;
}
ll binarySearch(ll l, ll r, ll x)
{
    while (l <= r)
    {
        ll m = l + (r-l)/2;
 
        // Check if x is present at mid
        ll z=check(m,x);
 
        // If x greater, ignore left half
        if (z)
            l = m + 1;
 
        // If x is smaller, ignore right half
        else
            r = m - 1;
    }
 
    // if we reach here, then element was
    // not present
    return l-1;
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		ll n,m,x;
		cin>>n>>m;
		rep(i,0,m)
		{
			cin>>x;
			mp[x]++;
		}
		if(n>m)
		{
			cout<<0;
			exit(0);
		}
		cout<<binarySearch(0,m,n);
	}
	return 0;
}