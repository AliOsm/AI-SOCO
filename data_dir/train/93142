// inplace_merge(T + beg, T + mid + 1, T + end + 1);
// unsigned Long hash[maxn],p = 999999999989; hash[0] = 1; fo(i,1,maxn)hash[i] = hash[i-1] * p;
// __builtin_popcount(n);
/*
ID: Tariqul
PROG:
LANG: C++
*/

#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>
#include <unistd.h> // sleep(1)

using namespace std;

#define fo(i,j,n) for(i=j;i<n;++i)
#define Fo(i,j,n) for(i=n-1;i>=j;--i)
#define foo(i,j,v) fo(i,j,sz(v))
#define Foo(i,j,v) Fo(i,j,sz(v))
#define li(v) v.begin(),v.end()
#define sz(v) ((int)v.size())
#define CLR(a,v) memset((a),(v),sizeof(a))
#define inf 1e9 + 10
#ifdef localhost
#define Long long long
#else
typedef __int64 Long;
#endif // localhost
#define pi (2*acos(0))
#define eps 1e-9

#define two(X) (1<<(X))
#define twoL(X) (((Long)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)

char BUFFER[100000 + 5];
bool readn(int &n)	{ return scanf("%d",&n) == 1; }
#ifdef localhost
bool readl(Long &n)	{ return scanf("%lld",&n) == 1; }
#else
bool readl(Long &n)	{ return scanf("%I64d",&n) == 1; }
#endif // localhost
bool readd(double &n){ return scanf("%lf",&n) == 1; }
bool reads(string &s){ s = ""; int n = scanf("%s",BUFFER); if(n == 1)s = BUFFER; return n == 1; }
bool readln(string &s){ char *valid = gets(BUFFER); if(valid)s = BUFFER; return ((bool)valid); }
#ifdef localhost
void Print(Long &n, bool printNewLine = true)	{ printNewLine ? printf("%lld\n",n) : printf("%lld",n);  }
#else
void Print(Long &n, bool printNewLine = true)	{ printNewLine ? printf("%I64d\n",n) :  printf("%I64d",n); }
#endif // localhost

const int maxn = 1005;
vector<string> v;
deque<pair<int,pair<int,int> > > q;
int dp[maxn][maxn];

void findExit(int &i, int &j)
{
    foo(i,0,v)foo(j,0,v[0])if(v[i][j] == 'E')return;
}

void findStart(int &i, int &j)
{
    foo(i,0,v)foo(j,0,v[0])if(v[i][j] == 'S')return;
}

void Push(int i,int j, int val)
{
    if(i < 0 || j < 0 || i >= sz(v) || j >= sz(v[0]))return;
    if(dp[i][j] != inf || v[i][j] == 'T')return;
    dp[i][j] = val;
    q.push_back({val,{i,j}});
}

void Pop(int &i, int &j, int &val)
{
    val = q.front().first;
    i = q.front().second.first;
    j = q.front().second.second;
    q.pop_front();
}

int bfs(int i, int j)
{
    int ans = 0,val;
    if(i < 0 || j < 0 || i >= sz(v) || j >= sz(v[0]))return inf;
    if(v[i][j] == 'T')return inf;

    q.clear(); int ti = i, tj = j; foo(i,0,v)foo(j,0,v[i])dp[i][j] = inf;
    Push(ti,tj,0);
    while(sz(q))
    {
        Pop(i,j,val); val++;
        Push(i+1,j,val);
        Push(i-1,j,val);
        Push(i,j+1,val);
        Push(i,j-1,val);
    }

    findStart(i,j); val = dp[i][j];

    foo(i,0,v)foo(j,0,v[i])if(isdigit(v[i][j]) && dp[i][j] <= val)
    {
        ans += v[i][j] - '0';
    }


    return ans;
}

int main()
{
	#ifdef localhost
    freopen("/home/tariqul/APC/Contest/input.txt","r",stdin);
    //freopen("/home/tariqul/APC/Contest/output.txt","w",stdout);
	#else
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	#endif

    int i,j,n,m; cin >> n >> m; v.resize(n);
    foo(i,0,v)cin >> v[i];

    findExit(i,j);

    cout << bfs(i,j) << endl;

    return 0;
}
