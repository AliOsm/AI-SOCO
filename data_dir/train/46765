#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

int sum1[1010][1010];
int sum2[1010][1010];
int a[1010][1010];

int main()
{
#ifdef Fcdkbear
    freopen("in.txt","r",stdin);
    //freopen("in.txt","w",stdout);
    double beg=clock();
#endif
	/*printf("796 983 191\n");
	FOR(i,0,796)
	{
		FOR(j,0,983)
		{
			printf("%d ",rand());
		}
		printf("\n");
	}
	return 0;*/
	int n,m,k;
	scanf("%d%d%d",&n,&m,&k);
	FOR(i,0,n)
		FOR(j,0,m)
			scanf("%d",&a[i][j]);
	FOR(i,0,n)
		FOR(j,0,m)
		{
			sum1[i][j]=sum2[i][j]=a[i][j];
			if ((i) && (j))
				sum1[i][j]+=sum1[i-1][j-1];
			if ((i) && (j!=m-1))
				sum2[i][j]+=sum2[i-1][j+1];
		}
	int v1=-1,v2=-1;
	LL max1=-1000000000000000000ll;
	FOR(i,k-1,n-k+1)
		FOR(j,k-1,m-k+1)
		{
			LL val=a[i][j];
			LL sum=val;
			FOR(it,1,k)
			{
				val+=sum1[i+it][j];
				if (j>=it+1)
					val-=sum1[i-1][j-it-1];
				val+=sum1[i][j+it];
				if (i>=it+1)
					val-=sum1[i-it-1][j-1];
				val+=sum2[i][j-it];
				if (i>=it+1)
					val-=sum2[i-it-1][j+1];
				val+=sum2[i+it][j];
				if (j+it+1<m)
					val-=sum2[i-1][j+it+1];
				val-=(a[i][j+it]+a[i][j-it]+a[i-it][j]+a[i+it][j]);
				sum+=val;
			}
			if (sum>max1)
			{
				max1=sum;
				v1=i+1;
				v2=j+1;
			}
		}
	cout<<v1<<" "<<v2<<endl;
#ifdef Fcdkbear
    double end=clock();
    fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
	return 0;
}