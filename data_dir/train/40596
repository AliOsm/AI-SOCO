#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define sz(v) (int)v.size()
#define up_b upper_bound
#define low_b lower_bound
#define nl '\n'

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;

const int N=1e6+11;
const int M=2e6+11;
const int W=1e3+11;
const int inf=1e9;
const ll INF=1e18;
const ll mod=1e9+7;
const ld EPS=1e-9;

vector<int>x[N];
int ans[N+N];
string t[N];

int main(){
  ios_base::sync_with_stdio(0);
  cin.tie(0),cout.tie(0);
  int n;
  cin>>n;
  int len=0;
  for(int i=1;i<=n;i++){
    cin>>t[i];
    int k;
    cin>>k;
    for(int j=1;j<=k;j++){
      int pos;
      cin>>pos;
      x[i].pb(pos);
      len=max(len,pos+sz(t[i])-1);
    }
  }
  set<int>st;
  for(int i=1;i<=len;i++){
    st.insert(i);
  }
  for(int i=1;i<=n;i++){
    for(int j=0;j<sz(x[i]);j++){
      int px=x[i][j];
      while(!st.empty()){
        auto it=st.low_b(px);
        if(it==st.end())break;
        int qx=*it;
        if(qx-px>=sz(t[i]))break;
        ans[qx]=t[i][qx-px];
        st.erase(qx);
      }
    }
  }
  while(!st.empty()){
    int px=*st.begin();
    st.erase(px);
    ans[px]='a';
  }
  for(int i=1;i<=len;i++){
    cout<<char(ans[i]);
  }
}
