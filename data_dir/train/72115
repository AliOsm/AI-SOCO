/****************************************************************************
 *                                                                          *
 *                    ==>> BG_PeaceMind(BISHAL)                             *
 *                   try=0; while(!success) try++;                          *
 ****************************************************************************/
#include<bits/stdc++.h>
#define PI acos(-1.0)
#define nl cout<<endl;
#define SZ(x) x.size()
#define pb(x) push_back(x)
#define X first
#define Y second
#define pii pair<int,int>
#define all(v) v.begin(),v.end()
#define CLR(a) memset(a,0,sizeof(a))
#define SET(a) memset(a,-1,sizeof(a))
#define fr(i,a,n) for(i=a;i<=n;i++)
#define rf(i,n,a) for(i=n;i>=a;i--)
#define LB(v,k) lower_bound(v.begin(),v.end(),k)
#define _cin ios_base::sync_with_stdio(0),cin.tie(0)
#define ct(x) cerr<<__LINE__<< ":: "<<#x<<"= "<<x<<endl
#define fi(it,n) for(__typeof(n.begin()) it=n.begin();it!=n.end();it++)
using namespace std;
typedef long long ll;
/// atoi( str.c_str() ); // char string to int
/// sprintf(str,"%d",num);// num to char string
///int month[]={-1,31,28,31,30,31,30,31,31,30,31,30,31}; //Not Leap Yr
///int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Dir
///int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 Dir
///int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Kngt
/************************************************************************
 * /////////////////////////////////////////////////////////////////////*
 ************************************************************************/
/// [ Look at my code below, My code is so amazing !! :P ]
///Dgt       0123456789
#define MX   5000004
#define inf  100000009
#define eps  1e-9
#define MD   1000000007


struct data {
    string s;
    int p;
    data() {};
    data(string a,int b) {
        s=a,p=b;
    }
    bool friend operator <(data A,data B) {
        if(A.p==B.p) return A.s<B.s;
        else return A.p>B.p;
    }
};

int main() {
    string s,me;
    cin>>me;
    int n,i,j,k,m;
    cin>>n;
    map<string,int>mp;
    // mpp["wall"]=15;
    vector< data >v;
    getchar();
    fr(i,1,n) {
        getline(cin,s);
        m=SZ(s);
        string a="",b="";
        //string pt=s.substr(m-4);
        for(j=0; j<m; j++) {
            if(s[j]==' ')break;
            a+=s[j];
        }
        int pt=0;
        if( s[j+1] =='p' )pt=15;
        if( s[j+1] =='c' )pt=10;
        if( s[j+1] =='l' )pt=5;

//        if(a!=me) {
//            mp[ a ]+=pt;
//        }

        for(j=m-8; j>=0; j--) {
            if(s[j]==' ')break;
            b+=s[j];
        }
        reverse(all(b));
//        if(b!=me) {
//            mp[ b ]+=pt;
//        }
        mp[a];
        mp[b];
        if(a==me) {
            mp[b]+=pt;
        } else if(b==me) {
            mp[a]+=pt;
        }

        //   cout<<a<< " & "<<b<<" => "<<pt<<endl;
    }

    fi(it,mp) {
        v.pb( data( (*it).X,(*it).Y ) );
    }
    sort(all(v));

    int sz=SZ(v);

    fr(i,0,sz-1) {
        if(v[i].s!=me)cout<< v[i].s<< "\n";
    }

    return 0;
}



