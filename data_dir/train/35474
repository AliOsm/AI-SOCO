#include <bits/stdc++.h>

//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>

//using namespace __gnu_pbds;
using namespace std;

//template<typename T>
//using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef vector<int> vi;
typedef long long ll;

#define pb push_back
#define inf 0x3f3f3f3f
#define all(v) (v).begin() , (v).end()
#define ones(n) __builtin_popcount(n)
#define ONES(n) __builtin_popcountll(n)
#define watch(x) cout << (#x) << " is " << (x) << endl

int di[] = {0, 0, 1, -1, 1, 1, -1, -1};
int dj[] = {1, -1, 0, 0, -1, 1, 1, -1};

const int N = 1e5 + 5;
int n;
int arr[N];
vi adj[N];
int memo[N];
bool winning(int i) {
    int &ret = memo[i];
    if(~ret)
        return ret;

    for (int c : adj[i])
        if(!winning(c))
            return ret = 1;

    return ret = 0;
}
int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    scanf("%d" , &n);

    for (int i = 0 ;i < n ;i++)
        scanf("%d" , arr + i);

    for (int i = 0 ;i < n ;i++) {
        for (int j = i + arr[i] ;j < n ;j += arr[i])
            if(arr[j] > arr[i])
                adj[i].pb(j);
        for (int j = i - arr[i] ;j >= 0 ;j -= arr[i])
            if(arr[j] > arr[i])
                adj[i].pb(j);
    }


    memset(memo , -1 , sizeof memo);
    for (int i = 0 ;i < n ;i++) {
        if(winning(i))
            putchar('A');
        else
            putchar('B');
    }
}