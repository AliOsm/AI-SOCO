#include <bits/stdc++.h>

using namespace std;

const int N = 1000;
int x[N], y[N], t[N];
double p[N];
double dp[N + 1];

void sort(int l, int r) {
  int i = l, j = r;
  int xx = t[(l + r) / 2];
  do
  {
    while(t[i] < xx) ++i;
    while(xx < t[j]) --j;
    if(i <= j) {
      int tm = x[i]; x[i] = x[j]; x[j] = tm;
      tm = y[i]; y[i] = y[j]; y[j] = tm;
      tm = t[i]; t[i] = t[j]; t[j] = tm;
      double ttm = p[i]; p[i] = p[j]; p[j] = ttm;
      ++i; --j;
    }
  }while(i <= j);
  if(l < j) sort(l, j);
  if(i < r) sort(i, r);
}

int main() {
  int n;
  scanf("%d", &n);
  for(int i = 0; i < n; ++i) {
    scanf("%d %d %d %lf", x + i, y + i, t + i, p + i);
  }
  sort(0, n - 1);
  for(int i = n - 1; i >= 0; --i) {
    dp[i] = 0;
    for(int j = i + 1; j < n; ++j) {
      double d = hypot(x[i] - x[j], y[i] - y[j]);
      if(!(d - (t[j] - t[i]) > 1e-9)) {
        dp[i] = max(dp[i], dp[j]);
      }
    }
    dp[i] += p[i];
  }
  double ans = 0;
  for(int i = 0; i < n; ++i) {
    if(dp[i] - ans > 1e-9) {
      ans = dp[i];
    }
  }
  printf("%.17lf\n", ans);
  return 0;
}