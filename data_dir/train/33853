#include <bits/stdc++.h>
using namespace std;
typedef long long Long;

const Long MX = 1e5 + 10;

bool rdy[MX];
bool used[MX];
vector<Long> reino[MX];

void solve(){
	Long n, cn, x;
	cin >> n;
	for(Long i = 1; i <= n; i++){
		rdy[i] = false;
		used[i] = false;
		reino[i].clear();
		cin >> cn;
		for(Long j = 0; j < cn; j++){
			cin >> x;
			reino[i].push_back(x);
		}
	}
	
	for(Long i = 1; i <= n; i++){
		for(Long x : reino[i]){
			if(!used[x]){
				rdy[i] = true;
				used[x] = true;
				break;
			}
		}
	}
	
	Long L = -1, R = -1;
	for(Long i = 1; i <= n; i++){
		if(!rdy[i]){
			L = i;
			break;
		}
	}
	
	for(Long i = 1; i <= n; i++){
		if(!used[i]){
			R = i;
			break;
		}
	}
	if(L == -1){
		cout << "OPTIMAL\n";
	}else{
		cout << "IMPROVE\n";
		cout << L << " " << R << "\n";
	}
	return;
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	cout.precision(10);
	cout << fixed;
	
	Long t;
	cin >> t;
	while(t--) solve();
	return 0;
}
