#include <bits/stdc++.h>

using namespace std;

typedef long double LD;
typedef long long int LL;
typedef pair <int,int> pii;

#define L first
#define R second

const int maxn = 1e6;
int n, a[maxn], seg[4 * maxn];

void add(int idx,int L=0,int R=n,int id=1) {
    if (L == R - 1) {
        seg[id]++;
        return;
    }
    int mid = (L + R) >> 1;
    if (idx < mid)
        add(idx, L, mid, id * 2 + 0);
    else
        add(idx, mid, R, id * 2 + 1);
    seg[id] = seg[id * 2 + 0] + seg[id * 2 + 1];
}

int get(int l,int r,int L=0,int R=n,int id=1) {
    if (l == L && r == R)
        return seg[id];
    int mid = (L + R) >> 1, ret = 0;
    if (l < mid)
        ret += get(l, min(mid, r), L, mid, id * 2 + 0);
    if (r > mid)
        ret += get(max(l, mid), r, mid, R, id * 2 + 1);
    return ret;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i], a[i]--;
    LL cnt = 0;
    for (int i = 0; i < n; i++) {
        cnt += get(a[i], n);
        add(a[i]);
    }
    if (n % 2 == 0 && cnt % 2 == 0)
        cout << "Petr" << endl;
    if (n % 2 == 0 && cnt % 2 == 1)
        cout << "Um_nik" << endl;
    if (n % 2 == 1 && cnt % 2 == 0)
        cout << "Um_nik" << endl;
    if (n % 2 == 1 && cnt % 2 == 1)
        cout << "Petr" << endl;
    return 0;
}

