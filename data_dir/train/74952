/** 
 * Dont raise your voice, improve your argument.
 * --Desmond Tutu
 */

#include <bits/stdc++.h>
using namespace std;

#define DEBUG
#ifndef DEBUG
#define endl "\n"
#endif

const double PI=3.1415926535897932384626433;
typedef long long ll;
#define fori(n) for(ll i=0; i<(n); i++)

#define cins(s) string s; cin>>s;
#define cini(i) int i; cin>>i;
#define cinll(l) ll l; cin>>l;
#define cind(d) double d; cin>>d;
#define cinai(a, n) vi a(n); fori(n) { cin>>a[i]; }
#define cinall(a, n) vll a(n); fori(n) { cin>>a[i]; }
#define cinas(s, n) vs s(n); fori(n) { cin>>s[i]; }
#define cinad(a, n) vd a(n); fori(n) { cin>>a[i]; }

typedef pair<int, int> pii;
typedef pair<double,double> pdd;
typedef vector<double> vd;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<string> vs;
typedef vector<ll> vll;

void solve() {
    const string one="one";
    const string two="two";
    const string twoone="twone";
    cins(s);
//cout<<"search "<<s<<endl;

    vi vans;
    set<size_t> ptwoone;

    vi av;
    int ans=0;
    size_t pos=0;
    size_t np=pos;
    while(pos!=string::npos) {
        pos=s.find(twoone,np);
        if(pos==string::npos)
            break;
        np=pos;
        ptwoone.insert(np);
        vans.push_back(np+2);

        np++;
        ans++;
    }

//cout<<"search 1"<<endl;
    pos=0;
    int ans2=0;
    np=pos;
    while(pos!=string::npos) {
        pos=s.find(one,np);
        if(pos==string::npos)
            break;

        np=pos;

        if(ptwoone.count(np-2)==0)
            vans.push_back(np+1);

        np++;
        ans2++;
    }
    ans2-=ans;

//cout<<"search 2"<<endl;
    pos=0;
    int ans3=0;
    np=pos;
    while(pos!=string::npos) {
        pos=s.find(two,np);
        if(pos==string::npos)
            break;

        np=pos;
        if(ptwoone.count(np)==0)
            vans.push_back(np+1);

        np++;
        ans3++;
    }
    ans3-=ans;

//cout<<"search3"<<endl;
    //sort(vans.begin(), vans.end());
    cout<<ans+ans2+ans3<<endl;
    for(int i : vans) 
        cout<<i+1<<" ";
    cout<<endl;
}

int main() {
cin.tie(nullptr);
std::ios::sync_with_stdio(false);
    cini(t);
    while(t--)
        solve();
}

