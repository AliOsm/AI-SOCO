#include <bits/stdc++.h>
using namespace std;
long long contSum[100005];
bool comp(int a,int b)
{
    if(a > b)
        return true;

    return false;
}
int main()
{
    int n,k;
    cin >> n >> k;
    vector<int> num(n);
    long long sum = 0;
    for(int i = 0;i < n;i++)
        scanf("%d",&num[i]);
    sort(num.begin(),num.end(),comp);
    for(int i = 0;i < n;i++)
    {
        sum += num[i];
        contSum[i+1] = sum;
    }
    contSum[n+1] = sum;
    int maxe = 0;
    int lowest = 1e9 + 2;
    for(int i = 0;i < n;i++)
    {
        long long lo = 0;
        long long hi = n-i;
        while(lo != hi)
        {
            long long mid = (lo + hi) / 2;
            long long neededSum = 1LL * mid * num[i];
            long long sumC = contSum[i+mid+1] - contSum[i+1];
            long long totalCost = neededSum - sumC;
            if(totalCost <= k)
                lo = mid + 1;
            else
                hi = mid;
        }
        if(lo > maxe)
        {
            maxe = lo;
            lowest = num[i];
        } else if(lo == maxe)
        {
            lowest = min(lowest,num[i]);
        }
    }
    cout << maxe << " " << lowest;
}