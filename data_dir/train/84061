#include <bits/stdc++.h>
using namespace std;

const int mod = int(1e9) + 7;

int n, ans = 1, cnt[26];
char s[1001];
vector<int> dp, new_dp;

int main (int argc, char *argv[])
{
	//FILE *in = freopen("input.txt", "r", stdin);
	scanf("%d", &n);
	scanf("%s", s);
	for(int i = 0; i < 26; ++i) {
		scanf("%d", &cnt[i]);
	}
	dp.resize(n, 0);
	new_dp.resize(n, int(2e9));
	dp[0] = 1;
	new_dp[0] = 1;
	for(int i = 1; i < n; ++i) {
		bool yes = true;
		bool is[26];
		memset(is, false, sizeof(is));
		is[s[i] - 'a'] = true;
		for(int j = i - 1; j >= 0; --j) {
			for(int q = 0; q < 26; ++q) {
				if(is[q] && cnt[q] < i - j) {
					yes = false;
					break;
				}
			}
			if(!yes) {
				break;
			}
			ans = max(ans, i - j);
			new_dp[i] = min(new_dp[i], new_dp[j] + 1);
			dp[i] += dp[j];
			dp[i] %= mod;
			is[s[j] - 'a'] = true;
		}
		for(int q = 0; q < 26; ++q) {
			if(is[q] && cnt[q] < i + 1) {
				yes = false;
				break;
			}
		}
		if(yes) {
			ans = max(ans, i + 1);
			dp[i]++;
			dp[i] %= mod;
			new_dp[i] = 1;
		}
	}
	printf("%d\n", dp.back());
	printf("%d\n", ans);
	printf("%d", new_dp.back());

	return 0;
}

