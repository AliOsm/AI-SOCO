#include<bits/stdc++.h>
using namespace std;
int a[505 * 505];
int ans[505];
map<int, int> duty;
priority_queue<int> pq;

int getMax() {
	while (!pq.empty()) {
		int x = pq.top(); pq.pop();
		if (duty.find(x) == duty.end())
			return x;
		duty[x]--;
		if (duty[x] == 0)
			duty.erase(x);
	}
	assert(0);
	return -1;
}

int main() {
	ios::sync_with_stdio(false);
	int n; scanf("%d", &n);
	for (int i = 0; i < n * n; i++) {
		scanf("%d", a + i);
		pq.push(a[i]);
	}

	ans[0] = pq.top(); pq.pop();

	for (int i = 1; i < n; i++) {
		ans[i] = getMax();
		for (int j = 0; j < i; j++)
			duty[__gcd(ans[j], ans[i])] += 2;
		duty[ans[i]] += 1;
	}

	for (int i = 0; i < n; i++)
		cout << ans[i] << " ";
	cout << endl;


	return 0;
}

