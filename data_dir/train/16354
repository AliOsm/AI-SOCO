#include <bits/stdc++.h>
using namespace std;

const int MAXN=2e5+5;

int N, X, Y;
long long H;
long long D[MAXN];
long long P[MAXN];
vector <int> V[MAXN];

void sfd(int par,int now) {
	H=max(H,P[now]);
	
	for (int next : V[now]) {
		if (next==par) {
			continue;
		}
		
		P[next]=N+P[now]-2*D[next];
		sfd(now,next);
	}
	
	return;
}

void dfs(int par,int now) {
	for (int next : V[now]) {
		if (next==par) {
			continue;
		}
		
		dfs(now,next);
		D[now]+=D[next];
		P[now]+=P[next];
	}
	
	D[now]++;
	P[now]+=D[now];
	return;
}

int main () {
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	
	cin>>N;
	
	for (int i=1;i<N;i++) {
		cin>>X>>Y;
		V[X].push_back(Y);
		V[Y].push_back(X);
	}
	
	dfs(0,1);
	sfd(0,1);
	
	cout<<H<<'\n';
	return 0;
}
