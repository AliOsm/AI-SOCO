#include<iostream>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<math.h>
#include<queue>
#include<iterator>
#include<bitset>
#include<cstring>
#include<stdio.h>
#include<list>
using namespace std;

#pragma warning(disable : 4996)
#define ll long long int

const int R = 4600;


ll up(ll x, ll y) {
	if (x > 0)
		return x / y + 1;
	return (x + 1) / y;
}

pair<ll, ll> f(ll x, ll y, ll lb, ll rb) {
	lb -= x;
	rb -= x;
	return { up(lb - 1, y), up(rb, y) - 1 };
}

ll getAns(ll lx, ll rx, ll ly, ll ry, ll t, ll s) {
	if (s < 0)
		return -1;
	if (t == 0) {
		if (s >= lx && s <= rx)
			return s + ry;
		return -1;
	}
	pair<ll, ll> sa = f(s, t, lx, rx),
		sb = f(-s, t + 1, ly, ry), g;
	swap(sb.first, sb.second);
	sb.first = -sb.first;
	sb.second = -sb.second;

	g.first = max(sa.first, sb.first);
	g.second = min(sa.second, sb.second);

	if (g.first <= g.second) {
		return max(s + g.first * t - s - g.first * (t + 1),
			s + g.second * t - s - g.second * (t + 1));
	}
	return -1;
}

int main() {
#ifdef HOME
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ll n, l, r, k;
	scanf("%lld%lld%lld%lld", &n, &l, &r, &k);

	r = (r >= l ? r - l + 1 : r + n - l + 1);

	ll ans = -1;

	if (n < R) {
		for (int x = 0; x <= r; x++) {
			for (int y = 0; y <= n - r; y++) {
				ll p = k - r - x, q = n + x + y;
				
				if (p >= 0 && p % q == 0)
					ans = max(ans, (ll)(x + y));
				p++;
				if (x && p >= 0 && p % q == 0)
					ans = max(ans, (ll)(x + y));
			}
		}
	}
	else {
		for (ll t = 0;; t++) {
			ll s = k - r - n * t;
			if (s < -1)
				break;
			ans = max(ans, getAns(0, r, 0, n - r, t, s));
			ans = max(ans, getAns(1, r, 0, n - r, t, s + 1));
		}
	}

	printf("%lld", ans);




	return 0;
}