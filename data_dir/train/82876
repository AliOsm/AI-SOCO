#include <bits/stdc++.h>

using namespace std;

#define ll long long

const int N = 2e3+15,M = 1e4+5;

int dp[N][M];

vector<int> go[M];
int Height[M];

void cal(int x){
    int tmp = x;

    while(tmp>0){

        int u = tmp%10;
        tmp/=10;

        if(tmp==0)Height[x]= u;
        else
            go[x].push_back(u);
    }
}

int nst(vector<int> &tmp,int h){
    int ret=h;


    for(int i=0;i<tmp.size();++i){
        if(tmp[i]!=h){
            ret= ret*10+tmp[i];
        }
    }
    return ret;
}
int a[N],b[N];

int sol(int ind,int st,int n){

    if(ind==n && go[st].size()==0){
        return 0;
    }

    int &ret= dp[ind][st];

    if(ret!=-1)return ret;

    ret= 1e9;

    int h = Height[st];

    vector<int> tmp = go[st];

    while(ind<n && tmp.size()<4){
        if(a[ind]!=h)break;
        tmp.push_back(b[ind++]);
    }
    int ngo[5],pos=0;

    if(ind!=n && tmp.size()<4)
        ngo[pos++]= a[ind];
    for(int i=0;i<tmp.size();++i)
        ngo[pos++]= tmp[i];
    for(int i=0;i<pos;++i){
        int nnst = nst(tmp,ngo[i]);
        ret= min(ret, sol(ind,nnst,n) + abs(h-ngo[i]));
    }

    return ret;
}

int main(){

    //freopen("input.txt","r",stdin);

    for(int i=1;i<M;++i)cal(i);
    memset(dp,-1,sizeof(dp));

    int n;
    scanf("%d",&n);
    for(int i=0;i<n;++i){
        scanf("%d%d",&a[i],&b[i]);
    }
    cout<<sol(0,0,n)-1+n*2<<endl;
    return 0;
}