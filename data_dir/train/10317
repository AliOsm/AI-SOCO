//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back

const int maxn=(int)(3e5+5);
const ll mod=(ll)(1e9+7);
vector<int> al[maxn];
static int tin[maxn],tout[maxn];
static int curr=-1;
int parent[maxn],s_size[maxn];

static void dfs(int u,int p)
{
    tin[u]=++curr;

    parent[u]=p;s_size[u]=1;

    for(int x:al[u])
    {
        if(x!=p)
        {
            dfs(x,u);

           s_size[u]+=s_size[x];
        }
    }

    tout[u]=curr;
}

int main()
{
    ios_base::sync_with_stdio(0);

    int n,x,y;cin>>n>>x>>y;

    x--;y--;

    for(int i=1;i<n;i++)
    {
        int u,v;

        cin>>u>>v;

        u--;v--;

        al[u].pb(v);al[v].pb(u);
    }

    dfs(0,-1);

    if((tin[x]>=tin[y] && tout[x]<=tout[y]))
    {
        ll val1=s_size[x],val2=0;

        while(x!=y)
        {
            val2=n-s_size[x];

            x=parent[x];
        }

        ll res=(n*1ll*(n-1))-(val1*val2);

        cout<<res<<endl;
    }

    else if(tin[y]>=tin[x] && tout[y]<=tout[x])
    {
        ll val1=s_size[y],val2=0;

        while(y!=x)
        {
            val2=n-s_size[y];

            y=parent[y];
        }

        ll res=(n*1ll*(n-1))-(val1*val2);

        cout<<res<<endl;
    }

    else
    {
        ll res=(n*1ll*(n-1))-(s_size[x]*1ll*s_size[y]);

        cout<<res<<endl;
    }

    return 0;

}
