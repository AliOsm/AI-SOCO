#include<bits/stdc++.h>
using namespace std;
int n,SQ=300;
class BUCKET{
    public:
    int l , r , pops;
    vector < int > oper , v;
    BUCKET(){
        l = r = pops = 0;
        oper.clear();
        v.clear();
    }
    BUCKET(int a , int b){
        l = a , r = b; pops = 0;
        v.clear();
        for(int j = 0 ; j < b - a + 1 ; j++)
            oper.push_back(0);
    }
    void update(int pos , int type){
        oper[pos - l] = type;
        pops = 0;
        v.clear();
        for(auto o : oper){
            if(o > 0) v.push_back(o);
            else
            if(o == -1){
                if(v.empty()) pops++;
                else v.pop_back();
            }
        }
    }
};
vector<BUCKET>buckets;
int p,t;
int main(){
    cin>>n;
    for(int i=1;i<=n;i+=SQ){
        int b=min(n,i+SQ-1);
        buckets.push_back(BUCKET(i,b));
    }
    for(int i=1;i<=n;i++){
        scanf("%d%d",&p,&t);
        if(t==0)t=-1;
        else scanf("%d",&t);
        for(auto &B:buckets){
            if(B.l<=p&&p<=B.r){
             B.update(p,t);
            }
        }
        int popped=0,ans=0;
        for(int j=buckets.size()-1;j>=0;j--){
            auto &B=buckets[j];
            if(popped<B.v.size()){
                cout<<B.v[B.v.size()-popped-1]<<endl;
                ans=1;
                break;
            }
            popped-=B.v.size();
            popped+=B.pops;
        }
        if(!ans)puts("-1");
    }
}
