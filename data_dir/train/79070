#include <bits/stdc++.h>

using namespace std;

#define FOR(i,a,b) for(int i=(a);i<(b);i++)
#define sz(v) (int)v.size()

const int N = 100005;
int n, m, k;

bool isK[N];

int rnk[N], par[N], ncm, groups[N];

void init() {
  // iota(par, par + n, 0)
  FOR (i , 0 , n)
    par[i] = i, rnk[i] = groups[i] = 1;
  ncm = n;
}

int find(int e) {
  return par[e] == e ? e : par[e] = find(par[e]);
}

bool join(int e1, int e2) {
  int x = find(e1), y = find(e2);
  if (x == y)
    return false;
  if (rnk[x] == rnk[y])
    rnk[x]++;
  if (rnk[x] < rnk[y])
    swap(x, y);
  groups[x] += groups[y], groups[y] = 0;
  par[y] = par[x];
  ncm--;
  return true;
}

int ks[N];

bool check() {
  int p = find(ks[0]);
  for (int i = 0; i < k; ++i)
    if (find(ks[i]) != p)
      return false;
  return true;
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("test.in", "rt", stdin);
//  freopen("o.txt", "wt", stdout);
#endif
  cin >> n >> m >> k;
  for (int i = 0; i < k; ++i) {
    cin >> ks[i], ks[i]--;
  }
  vector<pair<int, pair<int, int>>> e(m);
  for (int i = 0; i < m; ++i) {
    cin >> e[i].second.first >> e[i].second.second >> e[i].first;
    e[i].second.first--, e[i].second.second--;
  }
  sort(e.begin(), e.end());
  int st = 0, end = m, mid = -1, res = -1;
  while (st <= end) {
    mid = st + (end - st) / 2;
    init();
    int r = 0;
    for (int i = 0; i < mid; ++i) {
      r = e[i].first;
      join(e[i].second.first, e[i].second.second);
    }
    if (check())
      end = mid - 1, res = r;
    else
      st = mid + 1;
  }
  for (int i = 0; i < k; ++i)
    cout << res << " ";
  return 0;
}
