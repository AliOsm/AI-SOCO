#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define rep(i,a,b) for(int i = (a); i < (b); i++)
#define iter(it,c) for(auto it = (c).begin(); it != (c).end();++it)
#define pb push_back
#define fs first
#define sc second
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vii> vvii;

const int INF = ~(1<<31);
const double pi = acos(-1);
const double EPS = 1e-9;
typedef unsigned long long ull;

template <class T> T smod(T a, T b) {
  return (a % b + b) % b; }

int main() {
    cin.sync_with_stdio(false);
    int t;
    cin >> t;
    rep(test,0,t) {
        int n,m,k;
        cin >> n >> m >> k;
        bool good = true;
        vi A(n);
        rep(i,0,n) cin >> A[i];
        rep(i,0,n-1) {
            if(A[i] > A[i+1]) {
                m += (A[i]-A[i+1]) + min(k,A[i+1]);
            } else if(A[i] <= A[i+1]) {
                int need = max(A[i+1]-k,0);
                if(A[i] >= need) m += A[i]-need;
                else {
                    if(need-A[i] > m) {
                        good = false;
                    } else {
                        m -= (need-A[i]);
                    }
                }
            }
        }
        if(good) cout << "YES" << endl;
        else cout << "NO" << endl;
    }
    return 0;
}


