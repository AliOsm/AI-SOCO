#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

int N;
int a[10];

void take(int x){
    int i;
    for(i=x;i<8;i++) if(a[i] > 0){
        a[i]--;
        return;
    }
}

int b[10];

int func(void){
    int i;
    REP(i,8) b[i] = a[i];
    
    int ans = b[1] + b[2];
    b[7] -= b[2];
    b[6] += max(b[7], 0);
    ans += b[3];
    b[6] -= b[3];
    b[5] += max(b[6], 0);
    ans += max(b[4], (b[4] + b[5] + 1) / 2);
    
    return ans;
}

int main(void){
    int i,j,k;
    
    cin >> N;
    int x[3];
    REP(i,3) cin >> x[i];
    sort(x, x+3);
    
    REP(i,N){
        int y;
        scanf("%d", &y);
        int cnt = 0;
        REP(j,8){
            int sum = 0;
            REP(k,3) if(j&(1<<k)) sum += x[k];
            if(sum >= y) cnt++;
        }
        a[cnt]++;
    }
    
    if(a[0] > 0){
        cout << -1 << endl;
        return 0;
    }
    
    int ans = N;
    
    REP(i,N+1){
        int tmp = func();
        ans = min(ans, tmp + i);
        take(7);
        take(6);
        take((x[0] + x[1] > x[2]) ? 5 : 4);
    }
    
    cout << ans << endl;
    
    return 0;
}
