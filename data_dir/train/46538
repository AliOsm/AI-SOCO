#pragma GCC optimize("O3")

#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES
#include <iostream>
#include <vector>
#include <algorithm>
#include <stack>
#include <string>
#include <assert.h>
#include <queue>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <random>
#include <cmath>
#include <chrono>
#include <bitset>

#define ld long double
#define pb push_back
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()

#define int long long
using namespace std;

const int INF = 2e9;
const int MOD = 1e9 + 7;
const int MB = 20;

void solve() {
	int n, m, k;
	cin >> n >> m >> k;
	vector<int> a(n);
	vector<bool> good(n);
	map<int, vector<int>> mp;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		mp[a[i]].pb(i);
	}
	int sum = 0;
	for (int i = 0; i < m * k; i++) {
		int id = mp.rbegin()->second.back();
		good[id] = true;
		sum += a[id];
		mp.rbegin()->second.pop_back();
		if (mp.rbegin()->second.empty()) mp.erase(mp.rbegin()->first);
	}

	int count = 0;
	vector<int> res;

	for (int i = 0; i < n && res.size() < k - 1; i++) {
		if (good[i]) count++;
		if (count == m) {
			res.pb(i + 1);
			count = 0;
		}
	}
	cout << sum << '\n';
	for (int i : res) cout << i << " ";
}
signed main() {
	/*
	freopen("search.in", "r", stdin);
	freopen("search.out", "w", stdout);
	*/
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	cout.precision(12);
	solve();
}