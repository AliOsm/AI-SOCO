#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define pb push_back
#define f first
#define s second
#define mod 1000000007
#define inf 1e8

#define pi pair<ll,ll>
#define pii pair<pi,ll>
#define f first
#define mp make_pair
#define s second
#define rep(i,n) for(int i=0;i<n;i++)
#define forup(i,a,b) for(int i=a;i<=b;i++)
int tree[4000011];
void update(int ind,int val,int l,int r,int node){
	if(l>r) return ;
	if(l==r){
		tree[node]=max(val,tree[node]);
		return;
	}
	int mid=(l+r)/2;
	if(ind<=mid){
		update(ind,val,l,mid,2*node);
	}
	else{
		update(ind,val,mid+1,r,2*node+1);
	}
	tree[node]=max(tree[2*node],tree[2*node+1]);
}
int query(int l,int r,int node,int s,int e){
	if(r<s or e<l or l>r) return 0;
	if(s<=l and r<=e) return tree[node];
	int mid=(l+r)/2;
	return max(query(l,mid,2*node,s,e),query(mid+1,r,2*node+1,s,e));
}
map<ll,ll>c;

int main(){
	int n;
	cin>>n;
	pi x[n];
	vector<int>v;
	rep(i,n)
		cin>>x[i].f>>x[i].s,v.pb(x[i].f),v.pb(x[i].f-x[i].s),v.pb(x[i].f+x[i].s);
	sort(v.begin(),v.end());
	int cnt=1;
	sort(x,x+n);
	for(auto x:v){
		if(!c[x]){
			c[x]=cnt++;
		}
	}
	cnt--;
	int ans;
	int fans=0;
	rep(i,n){
		ans=0;

		ans=query(1,cnt,1,1,c[x[i].f-x[i].s]-1);
		ans++;
		if(i==0 or (i!=0 and x[i].f-x[i].s>x[i-1].f))
		update(c[x[i].f],ans,1,cnt,1);

		ans=query(1,cnt,1,1,c[x[i].f]-1);
		ans++;
		if(i==n-1 or (i!=n-1 and x[i].f+x[i].s<x[i+1].f))
		update(c[x[i].f+x[i].s],ans,1,cnt,1);

		ans=query(1,cnt,1,1,c[x[i].f]-1);
        update(c[x[i].f],ans,1,cnt,1);
	}
	fans=query(1,cnt,1,1,cnt);
	cout<<fans;
}
