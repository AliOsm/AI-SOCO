#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

int solve(string a, string b)
{
    int n = sz(a), ans = 0;
    for (int i = 0; i + 1 < n; i++)
    {
        if (a[i] == '0' && a[i + 1] == '1' && b[i] == '1' && b[i + 1] == '0')
        {
            swap(a[i], a[i + 1]);
            ans++;
        }
        if (a[i] == '1' && a[i + 1] == '0' && b[i] == '0' && b[i + 1] == '1')
        {
            swap(a[i], a[i + 1]);
            ans++;
        }
    }
    for (int i = 0; i < n; i++)
        if (a[i] != b[i])
            ans++;
    return ans;
}

int n;
string a, b;

int main()
{
    _upgrade
    cin >> n >> a >> b;
    int ans = solve(a, b);
    reverse(all(a));
    reverse(all(b));
    ans = min(ans, solve(a, b));
    cout << ans << "\n";
	return 0;
}
