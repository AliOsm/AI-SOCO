#include<bits/stdc++.h>
#define MEM(dp,i) memset(dp,i,sizeof(dp))
#define F first
#define C continue
#define pb push_back
#define S second
#define R return
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef double D;
const int MX=1e6+9;
const ll inf=(1ll<<60);
const ll mod=1e9+7;
ll is(char c){
    if(c=='0')R 0;
    if(c=='1')R 1;
    if(c=='2')R 2;
    if(c=='*')R 3;
}
ll n,dp[MX][6];
string s;
ll DP(ll x,ll y){
    if(x==n)R (y!=2&&y!=1);
    ll &ret=dp[x][y];if(ret!=-1)R ret;
    ret=0;
    if(y==0){
        if(s[x]=='0')ret+=DP(x+1,0)%mod;
        if(s[x]=='1')ret+=DP(x+1,1)%mod;
        if(s[x]=='?')ret+=DP(x+1,0)%mod+DP(x+1,1)%mod;
    }
    if(y==1){
        if(s[x]=='*')ret+=DP(x+1,3)%mod;
        if(s[x]=='?')ret+=DP(x+1,3)%mod;
    }
    if(y==2){
        if(s[x]=='*')ret+=DP(x+1,3)%mod;
        if(s[x]=='?')ret+=DP(x+1,3)%mod;
    }
    if(y==3){
        if(s[x]=='*')ret+=DP(x+1,3)%mod;
        if(s[x]=='1')ret+=DP(x+1,4)%mod;
        if(s[x]=='2')ret+=DP(x+1,2)%mod;
        if(s[x]=='?'){
            ret+=DP(x+1,3)%mod+DP(x+1,4)%mod+DP(x+1,2)%mod;
            ret%=mod;
        }
    }
    if(y==4){
        if(s[x]=='0')ret+=DP(x+1,0)%mod;
        if(s[x]=='1')ret+=DP(x+1,1)%mod;
        if(s[x]=='?')ret+=DP(x+1,0)%mod+DP(x+1,1)%mod;
    }
    R ret%mod;
}
int main(){
    cin>>s;
    n=s.size();
    MEM(dp,-1);
    if(s[0]=='2'||s[n-1]=='2'){
        puts("0");
        R 0;
    }
    if(s[0]=='0')cout<<DP(1,0)%mod<<endl;
    else if(s[0]=='1')cout<<DP(1,1)%mod<<endl;
    else if(s[0]=='*')cout<<DP(1,3)%mod<<endl;
    else{
        ll ans=DP(1,0)%mod;
        ans+=DP(1,1)%mod;
        ans+=DP(1,3)%mod;
        cout<<ans%mod<<endl;
    }
}
