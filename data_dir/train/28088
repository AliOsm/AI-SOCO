#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

typedef long long int64;
typedef long double real;

#ifdef DEBUG
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#else
#define eprintf(...) assert (true)
#endif

#ifdef WIN32
#define INT64 "%I64d"
#else
#define INT64 "%lld"
#endif

using namespace std;

const int MaxN = 2007, NA = -1, MaxC = 0x3F3F3F3F;

char s [MaxN] [MaxN];
int u [MaxN];
int v [MaxN];
int n;

int main (void)
{
 int b, i, j, res;

 while (scanf (" %d", &n) != EOF)
 {
  for (i = 0; i < n; i++)
  {
   scanf (" %s", s[i]);
   assert ((int) strlen (s[i]) == n);
   for (j = 0; j < n; j++)
    s[i][j] -= '0';
  }
  res = 0;

  memset (u, 0, sizeof (u));
  memset (v, 0, sizeof (v));
  for (i = n - 1; i >= 0; i--)
  {
   b = 0;
   for (j = 0; j < i; j++)
   {
    if (b ^ u[j] ^ s[i][j])
    {
     res++;
     b ^= 1;
     u[j] ^= 1;
    }
   }
   s[i][i] ^= b;

   b = 0;
   for (j = 0; j < i; j++)
   {
    if (b ^ v[j] ^ s[j][i])
    {
     res++;
     b ^= 1;
     v[j] ^= 1;
    }
   }
   s[i][i] ^= b;

   if (s[i][i] ^ u[i] ^ v[i])
    res++;
  }

  printf ("%d\n", res);
 }

 return 0;
}
