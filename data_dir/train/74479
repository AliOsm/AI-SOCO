// 30.08.2014   264 A
// WA - 3

/*
A. Caisa � �����
Caisa ���������� �������� ��������� � ����� ����������� ������� ���������� ���� ��� ���.
��� ����� �� ������ � ����� ������� ����������� ������.
� ������������ ����� ������� n ��������� ����� ������.
Caisa ���������� ������ ���� �� ���� �����, ��� ����� � ���� ���� s ��������. �� ��� ��� �� ���!
���������, ��� � ������������ ����� ��������� �������� ������ �����:
������ ������ �������� ���� �������� ����������� � �������� ����� (1 �������� = 1 ����).
�������, ���������� �������� � �������� ����� �������� ������� �� ��������� 99,
��������� �������� ������ ��������� ���� ��� ����� ������ �������� � ����� (100 ������ ����� �������� ����� ��������).
����� ������������ ���������� �������� � �������� ����� Caisa ����� ��������, ���� ����� ����� ���� ��� ������?
�������� ��������, ��� Caisa �� ��������� �������������� ��������� �������, ��� ����� �������� ��� ����� ������ ������.
������� ������
� ������ ������ ���������� ��� ����� ����� n, s (1 <= n, s <= 100).
� i-� �� n ��������� ����� ���������� ��� ����� ����� xi, yi (1 <= xi <= 100; 0 <= yi < 100),
��� xi ���������� ���������� ��������, � yi - ���������� ������, ��������� ��� ������� ������ i-�� ����.
�������� ������
�������� ������������ ����� ����� - ������������ ���������� ��������, ������� ����� ��������,
���� -1, ���� Caisa �� ������ ������, �� ���� ��� ������.
������� ������
������� ������
5 10
3 90
12 0
9 70
5 50
7 0
�������� ������
50
������� ������
5 5
10 10
20 20
30 30
40 40
50 50
�������� ������
-1
����������
� ������ �������� �������, ���� Caisa ����� ��������� ��� ������, �� � �������� ����� ��� ������� 50 ������.



*/


# include <stdio.h>
# include <math.h>
# include <string.h>
# include <memory.h>



/*



# include <iostream>
# include <iomanip>
# include <cmath>
# include <cstring>
# include <cstdio>

*/

# include <iostream>

//# include <set>

// set <type> S;
// void erase (type)
// void insert (type)
// void clear ()
// ptr * find (type)


//# include <map>

// mat <keytype, valtype> M;
// void erase (keytype)
// void insert (keytype)
// void clear ()
// ptr * find (keytype)


//# include <queue>

// queue <type> Q;
// priority_queue <type> PQ;

// void erase (type) ???
// void push (type)
// type top ()       type front ()
//                   type back ()
// void pop ()
// bool empty ()
// int size ()





//# include <vector>

// int size ()
// resize (int)
// void clear ()
// void push_back (type)
// void insert (int, type)


//# include <algorithm>


//using namespace std;



# define iabs(x) ( (x) < 0 ? (-(x)) : (x) )
# define imax(x,y) ( (x) < (y) ? (y) : (x) )
# define imin(x,y) ( (x) > (y) ? (y) : (x) )
# define sqr(x) ((x)*(x))

# define isalpha(c) ( (c) >= 'a' && (c) <= 'z' )
# define isAlpha(c) ( (c) >= 'A' && (c) <= 'Z' )

# define isdigit(c) ( (c) >= '0' && (c) <= '9' )
# define digit(c) ( (c) - '0' )

# define alpha(c) ( isalpha (c) ? (c) : ( isAlpha (c) ? (c) - 'A' + 'a' : (c) ) )
# define Alpha(c) ( isAlpha (c) ? (c) : ( isalpha (c) ? (c) - 'a' + 'A' : (c) ) )

//# define alpha(c) ( (c) - 'A' + 'a' )
//# define Alpha(c) ( (c) - 'a' + 'A' )

# define NUM(r,c) ( ((r) << 8) + (c) )
# define ROW(n) ( (n) >> 8 )
# define COL(n) ( (n) & 0XFF )

# define CHECK(r,c) ( (r) >= 0 && (r) < n && (c) >= 0 && (c) < m )


# define between(a,b,c) ( (a) > (b) && (a) < (c) )
# define Between(a,b,c) ( (a) >= (b) && (a) <= (c) )




# define x  X
# define y  Y
# define x1 X1
# define y1 Y1
# define x2 X2
# define y2 Y2


//typedef pair <int, int>          Pair;
typedef long long int            Long;
typedef unsigned int             uint;
typedef unsigned long long int   ULong;
typedef unsigned char            uchar;




struct Point
{
/*
   int x, y;
   void Input () { scanf ("%d %d", &x, &y); }
   void Print () { printf ("x=%d y=%d\n", x, y); }
   double Dist (Point p) { return sqrt ((double)(sqr (x-p.x) + sqr (y-p.y))); }
   int Dist2 (Point p) { return (sqr (x-p.x) + sqr (y-p.y)); }
*/
   double x, y;
   void Input () { scanf ("%lf %lf", &x, &y); }
   void Print () { printf ("x=%10.3lf y=%10.3lf\n", x, y); }
   double Dist (Point p) { return sqrt (sqr (x-p.x) + sqr (y-p.y)); }
};

struct Line
{
/*
   int A, B, C;
   void Create (Point a, Point b) { A = b.y - a.y, B = a.x - b.x, C = -A*a.x - B*a.y; }
   double Dist (Point p) { return fabs ((double)(A*p.x+B*p.y+C))/sqrt ((double)(A*A + B*B)); }
   void Print () { printf ("A=%d B=%d C=%d\n", A, B, C); }
*/
   double A, B, C;
   void Create (Point a, Point b) { A = b.y - a.y, B = a.x - b.x, C = -A*a.x - B*a.y; }
   double Dist (Point p) { return fabs ((A*p.x+B*p.y+C)/sqrt (A*A + B*B)); }
   void Print () { printf ("A=%10.3lf B=%10.3lf C=%10.3lf\n", A, B, C); }
};



//+++++++++++++++++++++++++++++++++++++++++++++
/*
// ������� ���� ����� !!!
//
//
//
//
//
//
//
//
*/
//+++++++++++++++++++++++++++++++++++++++++++++




const int N = 104;
const int M = 100000;
const int INF = 2000000000;

//const double eps = 1e-7;
//const double PI = 3.14159265358979323846 ;

int n, m, k, l, s, a, b;
bool ok;
bool ok1, ok2;

//int c [N];

//int a [N], h [N];

//bool mark [N];
//int a [N][N];

int x [N], y [N];

//bool mark [N][N];
//char s [N][N];

//int dr [] = {-1, 0, 1,  0};
//int dc [] = { 0, 1, 0, -1};
//int dr [] = {-2, -1, 1, 2,  2,  1, -1, -2};
//int dc [] = { 1,  2, 2, 1, -1, -2, -2, -1};
//int q [M], qlen [M], qe;
//int p [N], kp;
//double d;
// double a, b, c;


void PrintData (int par=0);
void Input ();
void Output ();
void Main ();
void Init ();
/*
void Primes ();
int BinSearch (int * b, int n, int x);
void BFS (int num);
void BFS ();
void Temp ();
void Swap (int & a, int & b);
bool mystrcmp (char *, char *);
Long combination (int n, int k);
*/


int main ()
{
# ifndef ONLINE_JUDGE
   freopen ("A.TXT", "r", stdin);
   freopen ("A.OUT", "w", stdout);
# endif


# ifndef ONLINE_JUDGE
   int nnn;
   scanf ("%d\n", &nnn);
   for ( int iii=1; iii <= nnn; iii++ )
   {
      ok = false;
/*
      for ( i=0; i < N; i++ )
         mark [i] = false;
*/
//      memset (a, 0, sizeof (a));
//      memset (kol, 0, sizeof (kol));

      printf ("\n\n\nSAMPLE %d\n", iii);
# endif



//+++++++++++++++++++++++++++++++++++++++++++++
//
// ��������� ������������� ���������� ����� !!!
//
//+++++++++++++++++++++++++++++++++++++++++++++

      Init ();


      Input ();

      Main ();

      Output ();

# ifndef ONLINE_JUDGE
   }
# endif

   return 0;
}

void Init ()
{
   n = 0, m = 0, k = 0;
}

void Main ()
{
   k = 0;
   ok = false;
   for ( int i=0; i < n; i++ )
   {
/*
      m = s % x [i];
      m %= 100;
*/
      if ( x [i] <= s )
      {
         m = 100 - y [i];
         ok = true;

         if ( m > k && m < 100 )
            k = m;
      }
   }

# ifndef ONLINE_JUDGE
   PrintData (1);
# endif
}

void Input ()
{
   scanf ("%d %d", &n, &s);
   s *= 100;
   for ( int i=0; i < n; i++ )
   {
      scanf ("%d %d", &x [i], &y [i]);
      x [i] = x [i]*100 + y [i];
   }

# ifndef ONLINE_JUDGE
   PrintData ();
# endif
}

void Output ()
{
   if ( ok )
      printf ("%d", k);
   else
      printf ("-1");
}

void PrintData (int par)
{
   if ( par == 0 )
   {
      printf ("n=%d s=%d\n", n, s);
      for ( int j, i=0; i < n; i++ )
         printf ("x=%d y=%d\n", x [i], y [i]);
   }
   else
   {
   }
   printf ("\n");
}
