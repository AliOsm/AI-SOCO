#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;
int mark[210];
vector<int> A[210];
void DFS(int x)
{
    for(int i=0; i<A[x].size(); i++)
    {
        if(mark[A[x][i]]==0)
        {
            mark[A[x][i]]=1;
            DFS(A[x][i]);
        }
    }
}
int main(){
   int n;
   int m;
   int t;
   int khas=0;
   cin >> n;
   cin >> m;
   for(int i=0; i<n; i++)
   {
       cin >> t;
       if(t>0)
       {
           khas=1;
       }
       for(int j=0; j<t; j++)
       {
           int lang;
           cin >> lang;
           A[i].push_back(lang-1+n);
           A[lang-1+n].push_back(i);
       }
   }
   int hambandi=0;
   for(int i=0; i<n; i++)
   {
       if(mark[i]==0)
       {
           DFS(i);
           hambandi++;
       }
   }
   if(khas==0)
   {
       hambandi++;
   }
   cout << hambandi-1;
}