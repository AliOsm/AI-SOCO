
// Target Expert 

/*
 * Author    : raj1307 - Raj Singh
 * Institute : Jalpaiguri Government Engineering College
 * Date      : 19.08.19
 */

#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#define _CRT_SECURE_NO_WARNINGS
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <iomanip>
#include <memory.h>
#include <assert.h>
using namespace std;


//#define DEBUG
#ifdef DEBUG
#define deb(...) cerr<<"Line:"<<__LINE__<<" "; __f(#__VA_ARGS__, __VA_ARGS__)
#define debarr(a,n) cerr<<#a<<" : ";for(int i=0;i<n;i++) cerr<<a[i]<<" "; cerr<<endl;
#define debmat(mat,row,col) cerr<<#mat<<" :\n";for(int i=0;i<row;i++) {for(int j=0;j<col;j++) cerr<<mat[i][j]<<" ";cerr<<endl;}
template<typename Arg1>
void __f(const char *name, Arg1 &&arg1) {
	cerr<<name<<" : "<<arg1<<endl;
}
template<typename Arg1, typename ... Args>
void __f(const char *names, Arg1 &&arg1, Args &&... args) {
	const char *comma=strchr(names+1,',');
	cerr.write(names,comma-names)<<" : "<<arg1<<" | ";
	__f(comma+1,args...);
}

#else
#define deb(...) {}
#define debarr(a,n) {}
#define debmat(mat,row,col) {}
#define endl "\n"
#endif

#define fio ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define fr(i, a, b) for(int i = (a); i < (b); ++i)
#define fb(i, b, a) for(int i = (b); i > (a); --i)
#define rep(i, a, b) for(int i = (a); i <= (b); ++i)
#define rr return 
#define int long long
#define pb push_back
#define sz(x) ((int)x.size())
int max(int a,int b){if(a>b) return a; else return b;}
int min(int a,int b){if(a>b) return b; else return a;}

const int mod = 1000*1000*1000+7;
const int INF = 1e18 +5;

int powm(int a, int b) {
	int res=1;
	while(b) {
		if(b&1)
			res=(res*a)%mod;
		a=(a*a)%mod;
		b>>=1;
	}
	return res;
}


const int N = 1e5 + 5;
int n,k;


int a[N];

int ans=INF;

int dp[201][201];

int m[N],mp[201][201];

void floyd(int n){     // floyd warshall 


	for(int k = 1; k <= n; k++)	{

		for(int i = 1; i <= n; i++)
			for(int j = i+1; j <= n; j++)
				ans=min(ans,dp[i][j]+mp[k][j]+mp[i][k]);


		for(int i = 1; i <= n; i++)
			for(int j = 1; j <= n; j++)
					dp[i][j] = dp[j][i] = min(dp[i][k] + dp[k][j], dp[i][j]);
	}



}









void solve(){
 
 	cin>>n;
 	int k=0;
 	fr(i,0,n){
		cin>>a[i];
		if(a[i]!=0)
			m[++k]=a[i];
 	}

 	if(k>200){
 		cout<<"3";
 		rr;
 	}

 	n=k;

 	fr(i,0,201) fr(j,0,201) dp[i][j]=dp[j][i]=mp[i][j]=mp[j][i]=INF;


 	fr(i,1,n+1){
 		fr(j,1,n+1){
 			if((m[i]&m[j])!=0 && i!=j)
 				mp[i][j]=mp[j][i]=dp[i][j]=dp[j][i]=1;
 		}
 	}

 	floyd(n);

 	if(ans>=INF)
 		cout<<"-1";
 	else
 		cout<<ans;





	





















 
}
 



signed main() {
	fio;
	#ifndef ONLINE_JUDGE 
    	freopen("input.txt", "r", stdin); 
    	freopen("output.txt", "w", stdout); 
    	freopen("error.txt", "w", stderr); 
	#endif 
	cout<<fixed<<setprecision(10);
	int t=1;
//	cin>>t;
	while(t--) {
		solve();
	}

	
	return 0;
}
