#define  _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<map>
#include<cmath>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<cmath> 
#include<stack>
#include<math.h>
#include<set>
#include<string>
#include<cstring>
#include<queue>
#include<complex>	
#include<math.h>
#include<memory.h>
#include<sstream>	
#include<cstdio>
using namespace std;

#define PI acos(-1.0)
#define rep(i,n) for(int i=0;i<n;i++)
#define repi(i,a,n) for(int i=a;i<n;i++)
#define INF (0x7fffffff)
#define mp make_pair
#define fastIO ios::sync_with_stdio(false)
#define read freopen("in.in","r",stdin)
#define write freopen("out.out","w",stdout)
#define scf(xx) scanf("%d",&xx)
#define All(a) a.begin(), a.end()

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef long double ld;





int n, m;
vi g[3333];
bool G[3333][3333];
int c[3333][3333];
int main(){
	
	fastIO;
	cin >> n >> m;
	int x, y;
	while (m--){
		cin >> x >> y;
		g[x].push_back(y);
		G[x][y] = 1;
	}
	int res = 0;
	repi(i, 1, n + 1){
		repi(j, i + 1, n + 1){
			rep(k, g[i].size())
				c[i][j] += int(G[j][g[i][k]]);
		}
	}

	repi(i, 1, n + 1){
		rep(j, g[i].size()){
			repi(k, j + 1, g[i].size()){
				res += c[min(g[i][j], g[i][k])][max(g[i][j], g[i][k])] - int(G[g[i][j]][i] && G[g[i][k]][i]);
			}
		}
	}
	cout << res;
	return 0;
}