#include <bits/stdc++.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define mod 1000000007
#define int long long
#define ll long long
#define EPS 0.00000000000001
#define ld long double
#define inf 200000000
const int N = 200000;

ll fastexpom(ll a,ll b,ll m)
{
  ll res=1;
      while(b>0)
      {
        if(b%2==1)
          res=(((res)%m)*((a)%m))%m;
        a=(((a)%m)*((a)%m))%m;
        b/=2;
      }
      return res;
}

vector<int> v;

int func(int x)
{
	int n = v.size();
	vector<int> a;
	vector<int> b;
	for(int i = 1;i*i <= x;i++)
	{
		if(x % i == 0)
		{
			a.push_back(i);
			if(x / i != i)
				b.push_back(x / i);
		}
	}
	reverse(b.begin(),b.end());
	int prev;
	int lans = 1;
	int nums = 0;
	for(int i = 0;i < a.size();i++)
	{
		if(i != 0)
		{
			int nw = v.end() - lower_bound(v.begin(),v.end(),a[i]);
			int pw = v.end() - lower_bound(v.begin(),v.end(),prev);
			if(nw != pw)
			{
				lans =(lans * fastexpom(nums,pw-nw,mod))%mod;

			}
		}
		nums++;		
		prev = a[i];
	}
	for(int i = 0;i < b.size();i++)
	{
		int nw = v.end() - lower_bound(v.begin(),v.end(),b[i]);
		int pw = v.end() - lower_bound(v.begin(),v.end(),prev);
		if(nw != pw)
		{
			lans = (lans * fastexpom(nums,pw-nw,mod))%mod;

		}
		nums++;
		prev = b[i];
	}
	int nw = v.end() - lower_bound(v.begin(),v.end(),x);
	

	int ans = (lans * (fastexpom(nums,nw,mod) - fastexpom(nums-1,nw,mod) + mod)%mod)%mod;
	return ans;
}

int32_t main()
{
	IOS;
	#ifndef ONLINE_JUDGE
	freopen("int.txt","r",stdin);
	freopen("out.txt","w",stdout);
	#endif
	int n;
	cin >> n;
	v.resize(n);
	for(int i = 0;i < n;i++)
		cin >> v[i];
	sort(v.begin(),v.end());
	int ans = 1;
	for(int i = 2;i <= v[n-1];i++)
	{
		ans = (ans +  func(i))%mod;
	}
	cout << ans << endl;

    return 0;
}
 
