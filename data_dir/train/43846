/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
#define f(i,n) for(int i=0;i<n;i++)
#define rep(i,a,b) for(int i=a;i<=b;i++)
using namespace std;
typedef vector<int> vi;
typedef long long int ll;
vector<vector<int>> adj;

class TaskC {
public:
	ll fastpow(ll x, ll y){
		ll res = 1;
		while(y){
			if(y&1) res*=x;
			x*=x;
			y>>=1;
		}
		return res;
	}
	void solve(std::istream& in, std::ostream& out) {
		set<ll> s;
		int n,k; in>>n>>k;
		ll arr[n+1];
		arr[0]=0;
		f(i, n) in>>arr[i+1];
		if(k==1){
			s.insert(1);
		}
		else if(k==-1) s.insert(1), s.insert(-1);
		else {
			ll i = 0, it = pow(k, i);
			while (it <= (ll)1e14) {
				s.insert(it);
				++i;
				it = pow(k, i);
			}
		}
		map<ll, ll> m;
		m[0]=1;
		ll res = 0;
		rep(i, 1, n){
			arr[i]+=arr[i-1];
			for(ll x: s){
				res+=m[arr[i]-x];
			}
			m[arr[i]]++;
		}
		out<<res;

	}
    void inG(int m, istream& in){ int u,v; adj = vector<vi>(200005);f(i, m){ in>>u>>v; adj[u].push_back(v); adj[v].push_back(u); }}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	TaskC solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
