#include <iostream>
#include <vector>
#include <algorithm>
#include <memory>
#include <map>
#include <unordered_map>
#include <set>
#include <queue>
#include <unordered_set>
#include <functional>
#include <climits>
#include <cstring>
#include <cmath>
#include <numeric>
#include <random>
#include <tuple>

using namespace std;
using ll = long long;
const int oo = numeric_limits<int>::max() / 2;

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie();
  int n;
  cin >> n;
  vector<int> a(n);
  for(int i = 0; i < n; ++i) {
    cin >> a[i];
  }
  int ret = 0;
  for(int i = 0; i < n; ++i) {
    for(int j = i + 1; j < n; ++j) {
      bool valid = true;
      for(int k = i + 1; k <= j; ++k) {
        if (a[k] != a[k - 1] + 1) {
          valid = false;
          break;
        }
      }
      if (valid) {
        if (i == 0 && j == n - 1) {
          if (a[i] == 1 || a[j] == 1000) {
            ret = max(ret, n - 1);
          } else {
            ret = max(ret, n - 2);
          }
        } else if (i == 0) {
          if (a[i] == 1) {
            ret = max(ret, j - i);
          } else {
            ret = max(ret, j - i - 1);
          }
        } else if (j == n - 1) {
          if (a[n - 1] == 1000) {
            ret = max(ret, j - i);
          } else {
            ret = max(ret, j - i - 1);
          }
        } else {
          ret = max(ret, j - i - 1);
        }
      }
    }
  }

  cout << ret << endl;
	return 0;
}
