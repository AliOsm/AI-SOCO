#include<bits/stdc++.h>
using namespace std;
#include<ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
#define ll long long

template<class T> ostream& operator<<(ostream &os,vector<T> V){
	os<<"[ ";for(auto v:V)os<<v<<" ";return os<<" ]";
}
template<class L,class R> ostream& operator<<(ostream &os,pair<L,R> P){
	return os<<"("<<P.first<<","<<P.second<<")";
}
ll mxm(){return LLONG_MIN;}
template<typename... Args>
ll mxm(ll a,Args... args){return max(a,mxm(args...));}
ll mnm(){return LLONG_MAX;}
template<typename... Args>
ll mnm(ll a,Args... args){return min(a,mnm(args...));}
void C(){return;}
template<typename Arg1,typename... Args>
void C(Arg1& arg1,Args&&... args){cin>>arg1;C(args...);}
void P(){return;}
template<typename Arg1,typename... Args>
void P(Arg1& arg1,Args&&... args){cout<<arg1<<' ';P(args...);}

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
template<typename Arg1>
void __f(const char* name,Arg1&& arg1){
	cout<<name<<" : "<<arg1<<endl;
}
template<typename Arg1,typename... Args>
void __f(const char* names,Arg1&& arg1,Args&&... args){
		const char* comma=strchr(names+1,',');cout.write(names,comma-names)<<" : "<<arg1<<" | ";__f(comma+1,args...);
}
#else
#define trace(...) 1
#endif

#define ld long double
#define vll vector<ll>
#define pll pair<ll,ll>
#define pii pair<int,int>
#define vi vector<int>
#define vpll vector<pll>
#define vpii vector<pii>
#define vvi vector<vi>
#define vvll vector<vll>
#define vvpll vector<vpll>
#define vvpii vector<vpii>
#define vld vector<ld>
#define vvld vector<vld>
#define I insert
#define F first
#define S second
#define pb push_back
#define all(x) x.begin(),x.end()
#define endl "\n"
#define siz(a)	((int)(a).size())
#define fl cout<<endl

const int mod=1e9+7;
inline int add(int a,int b){a+=b;if(a>=mod)a-=mod;return a;}
inline int sub(int a,int b){a-=b;if(a<0)a+=mod;return a;}
inline int mul(int a,int b){return (a*1ll*b)%mod;}
inline int power(int a,int b){int rt=1;while(b>0){if(b&1)rt=mul(rt,a);a=mul(a,a);b>>=1;}return rt;}
inline int inv(int a){return power(a,mod-2);}

const int N=1e5+5;

int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);cout<<setprecision(25);
	int n;cin>>n;
	vi v(n),idx(n+1);
	for(int i=0;i<n;i++)cin>>v[i],idx[v[i]]=i;
	vpii ans;
	for(int i=1;i<=n;i++){
		if(idx[i]==i-1)continue;
		// trace(i,v);
		if(2*(idx[i]-i+1)>=n)
			ans.pb({i-1,idx[i]}),v[idx[i]]=v[i-1],v[i-1]=i,idx[v[idx[i]]]=idx[i],idx[i]=i-1;
		else{
			if(i<=n/2){
				if(idx[i]<n/2){
					int a=i,b=v[i-1],c=v[n-1],j=idx[i];
					// if(i==2)trace(j);
					ans.pb({j,n-1});ans.pb({n-1,i-1});
					v[i-1]=a;v[j]=c;v[n-1]=b;
					idx[a]=i-1;idx[b]=n-1;idx[c]=j;
				}
				else{
					int a=i,b=v[i-1],c=v[n-1],j=idx[i];
					ans.pb({0,j});ans.pb({0,n-1});ans.pb({i-1,n-1});ans.pb({0,j});
					v[i-1]=i;v[j]=c;v[n-1]=b;
					idx[c]=j;idx[i]=i-1;idx[b]=n-1;
				}
			}
			else{
				if(idx[i]>=n/2){
					int a=i,b=v[i-1],c=v[n-1],j=idx[i];
					ans.pb({0,j});ans.pb({0,i-1});
					if(i>1)ans.pb({0,j});
					swap(v[i-1],v[j]);
					idx[b]=j;idx[a]=i-1;
				}
				else{
					int a=i,b=v[i-1],c=v[n-1],j=idx[i];
					ans.pb({j,n-1});ans.pb({n-1,0});ans.pb({0,i-1});
					if(i>1)ans.pb({0,n-1});
					v[i-1]=a;v[j]=c;v[n-1]=b;
					idx[a]=i-1;idx[b]=n-1;idx[c]=j;
				}
			}
		}
	}
	// for(int i=1;i<n;i++)assert
	// trace(v);
	for(int i=1;i<n;i++)assert(v[i]>=v[i-1]);
	assert(ans.size()<=5*n);
	cout<<ans.size()<<endl;
	for(auto i:ans)cout<<i.F+1<<' '<<i.S+1<<endl,assert(2*abs(i.F-i.S)>=n);
}