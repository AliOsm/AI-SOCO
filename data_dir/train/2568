#include<bits/stdc++.h>
#define F first
#define S second
#define pii pair<int,int>
#define pb push_back
typedef long long ll;
using namespace std;
const int N = 1e5 + 10;
map<pii , int> mp;
vector<int> adj[N] , comp[N];
vector<pii> col[N];
int num = 0;
bool mark[N];

void dfs(int v , int cnt){
    comp[v].pb(cnt);
    mark[v] = true;
    for(auto u : adj[v]){
        if(!mark[u])dfs(u , cnt);
    }
}

int main(){
    ios_base::sync_with_stdio(0); cin.tie(0);
    int n , m; cin >> n >> m;
    for(int i=0;i<m;i++){
        int u , v , c; cin >> u >> v >> c;
        col[c].pb(pii(u , v));
    }
    for(int i=1;i<=m;i++){
        for(auto e : col[i]){
            int u = e.first , v = e.second;
            adj[u].pb(v);
            adj[v].pb(u);
        }
        for(auto e : col[i]){
            int u = e.first , v = e.second;
            if(!mark[u])dfs(u , num++);
            adj[u].clear();
            adj[v].clear();
            mark[v] = mark[u] = false;
        }
    }
    int q; cin >> q;
    while(q--){
        int u , v , ans = 0; cin >> u >> v;
        if(mp[{u , v}] > 0){
            cout << mp[{u , v}] - 1<< '\n';
            continue;
        }
        if(comp[u].size() > comp[v].size())swap(u , v);
        for(auto t : comp[u]){
            int ind = lower_bound(comp[v].begin() , comp[v].end() , t) - comp[v].begin();
            if(ind == comp[v].size())continue;
            if(comp[v][ind] == t)ans++;
        }
        mp[{u , v}] = mp[{v , u}] = ans + 1;
        cout << ans << '\n';
    }
}

