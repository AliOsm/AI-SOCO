#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
int main()
{
	ios::sync_with_stdio(false);
	string s; cin >> s;
	int n = s.length();
	vector<int> cntSuffA(n);
	cntSuffA[n - 1] = s[n - 1] == 'a' ? 1 : 0;
	for (int i = n - 2; i >= 0; i--)
		cntSuffA[i] = cntSuffA[i + 1] + (s[i] == 'a' ? 1 : 0);
	vector<int> cntSuffBA(n);
	for (int i = 0; i < n; i++)
	{
		if (s[i] == 'a')
		{
			cntSuffBA[i] = cntSuffA[i];
			continue;
		}
		int currCntB = 0;
		for (int j = i; j < n; j++)
		{
			if (s[j] == 'a')
				continue;
			currCntB++;
			cntSuffBA[i] = max(cntSuffBA[i], currCntB + (j + 1 >= n ? 0 : cntSuffA[j + 1]));
		}
	}
	int result = cntSuffBA[0], currCntA = 0;
	for (int i = 0; i < n; i++)
	{
		if (s[i] == 'b')
			continue;
		currCntA++;
		result = max(result, currCntA + (i + 1 >= n ? 0 : cntSuffBA[i + 1]));
	}
	cout << result << endl;
}