#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <memory.h>
#include <fstream>
#include <unordered_map>
#include <random>
#include <stack>
#include <stdio.h>
#include <algorithm>
#include <random>
#include <cmath>
#include <ctime>
#include <Windows.h>

using namespace std;
#define du do
#define hast while
#define ll long long
#define MOD 1000000007
#define mp(a, b) make_pair(a, b)
#define PI 3.1415926535
#define EPS 0.00000001
#define pii pair<int, int>
#define INF 1000000000
#define null NULL

#define DEBUG 41

#ifndef DEBUG

ifstream in("input.txt");
ofstream out("output.txt");

#define cin in
#define cout out

#endif

ll for1[5234567];
ll for2[5234567];

ll gcd(ll a, ll b)
{
    while(a && b)
        if(a >= b)
            a %= b;
        else
            b %= a;
    return a + b;
    
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    ll x1,x2,y1,y2, a1,a2,m, h1,h2;
    cin >> m >> h1 >> a1 >> x1 >> y1 >> h2 >> a2 >> x2 >> y2;
    unordered_map<ll, int> f1, f2;
    f1[h1] = 0;
    f2[h2] = 0;
    ll c1, c2;
    ll hh1 = h1;
    ll hh2 = h2;

    bool ok1 = false;
    for(int i = 1; i <= m+1; ++i)
    {
        hh1 = (hh1 * x1 + y1) % m;
        if(f1.find(hh1) == f1.end())
        {
            f1[hh1] = i;
        }
        else
        {
            c1 = i - f1[hh1];
            ok1 = true;
            break;
        }
    }
    bool ok2 = true;
    for(int i = 1; i <= m+1; ++i)
    {
        hh2 = (hh2 * x2 + y2) % m;
        if(f2.find(hh2) == f2.end())
        {
            f2[hh2] = i;
        }
        else
        {
            c2 = i - f2[hh2];
            ok2 = true;
            break;
        }
    }

    if(f1.find(a1) == f1.end() || f2.find(a2) == f2.end())
    {
        cout << -1;
        return 0;
    }

    if(f1[a1] < f1[hh1])
    {
        if(f2[a2] < f2[hh2])
        {
            if(f1[a1] != f2[a2])
            {
                cout << -1;
            }
            else
            {
                cout << f1[a1];
                return 0;
            }
        }
        else
        {
            ll kt = f1[a1] - f2[a2];
            if(kt < 0)
            {
                cout << -1;
                return 0;
            }
            if(kt % c2)
            {
                cout << -1;
                return 0;
            }
            cout << f1[a1];
            return 0;
        }
    }
    else
    {
        if(f2[a2] < f2[hh2])
        {
            ll kt = f2[a2] - f1[a1];
            if(kt < 0)
            {
                cout << -1;
                return 0;
            }
            if(kt % c1)
            {
                cout << -1;
                return 0;
            }
            cout << f2[a2];
            return 0;

            
        }
        else
        {
            ll t = f1[a1] - f2[a2];
            if(t == 0)
            {
                cout << f1[a1];
                return 0;
            }

            for(ll k2 = 0; k2 < 10000000; ++k2)
            {
                if((t - c2*k2) % c1 == 0)
                {
                    cout << f2[a2] + c2*k2;
                    return 0;
                }
            }
            cout << -1;
            return 0;
        }
    }
}