//#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <stack>
#include <set>
#include <iomanip>
#include <queue>
#include <map>
#include <functional>
#include <list>
#include <sstream>
#include <ctime>
#include <climits>
#include <bitset>
#include <list>
#include <cassert>
#include <complex>

using namespace std;

/* Constants begin */
const long long inf = 2e18 + 7;
const long long mod = 1e9 + 7;
const double eps = 1e-9;
const double PI = 2*acos(0.0);
const double E = 2.71828;
/* Constants end */

/* Defines begin */
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define forn(i, n) for (int (i)=0; (i)<(n); ++(i))
#define random (rand()<<16|rand())
#define sqr(x) (x)*(x)
#define base complex<double>
/* Defines end */

int n;
int cnt[15];

int dd[] = {2, 3, 5, 7};

int main(void) {
    #ifdef nobik
        freopen("input.txt", "rt", stdin);
        freopen("output.txt", "wt", stdout);
    #endif
    scanf("%d", &n);
    for (int i = 0; i < n; ++i) {
        char c; scanf(" %c", &c);
        int x = c - '0';
        for (int a = 2; a <= x; ++a) {
            int w = a;
            for (int b = 2; b <= a; ++b) {
                while ((w % b) == 0) {
                    w = (w / b);
                    ++cnt[b];
                }
            }
        }
    }
    while (true) {
        int d = -1;
        for (int i = 0; i < 4; ++i) {
            if (cnt[dd[i]] > 0) d = i;
        }
        if (d == -1) break;
        cout << dd[d];
        for (int i = 2; i <= dd[d]; ++i) {
            int x = i;
            for (int j = 2; j <= x; ++j) {
                while (x % j == 0) {
                    x /= j;
                    --cnt[j];
                }
            }
        }
    }
    return 0;
}
