#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
ll mod = 1000000007;
int x[100005],y[100005];
vector<int> fir[200005],sec[200005];
int fa[100005],si[100005];
vector<int> points[200005];
ll po[200005];
int get(int x)
{
    if(fa[x]==x)return x;
    return fa[x] = get(fa[x]);
}
void unite(int x, int y)
{
    x = get(x);
    y = get(y);
    if(x==y)return;
    if(si[x] < si[y])swap(x,y);
    fa[y] = x;
    si[x] += si[y];
}
int main()
{
    int n,i,rax=1,ray=1;
    po[0] = 1;
    for(n=1;n<=200003;n++)
    {
        po[n] = 2*po[n-1];
        if(po[n]>=mod)po[n]-=mod;
    }
    set<int> s,t;
    map<int,int> ranx,rany;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        scanf("%d%d",&x[i],&y[i]);
        s.insert(x[i]);
        t.insert(y[i]);
        fa[i] = i;
        si[i] = 1;
    }
    set<int>::iterator I;
    for(I=s.begin();I!=s.end();I++)
        ranx[*I] = rax++;
    for(I=t.begin();I!=t.end();I++)
        rany[*I] = ray++;
    for(i=1;i<=n;i++)
    {
        x[i] = ranx[x[i]];
        y[i] = rany[y[i]];
        fir[x[i]].push_back(i);
        sec[y[i]].push_back(i);
    }
    int l,j;
    for(i=1;i<rax;i++)
    {
       l =  fir[i].size();
       for(j=0;j<l-1;j++)
           unite(fir[i][j],fir[i][j+1]);
    }
    for(i=1;i<ray;i++)
    {
        l =  sec[i].size();
       for(j=0;j<l-1;j++)
           unite(sec[i][j],sec[i][j+1]);
    }
    int ma = 0;
    for(i=1;i<=n;i++)
    {
       j = get(i);
        if(j>ma)ma = j;
       points[j].push_back(i);
    }
    ll ans = 1;
    for(i=1; i<=ma; i++)
    {
        set<int> xx,yy;
        for(j=0;j<points[i].size();j++)
        {
            int ff = x[points[i][j]],gg=y[points[i][j]];
            xx.insert(ff);
            yy.insert(gg);
        }
        int taken = si[i];
        int lines = xx.size() + yy.size();
       // printf("%d group with points %d and lines %d\n",i,taken,lines);
        ll cur = po[lines]-1;
        if(lines<=taken)cur++;
        ans = (ans*cur)%mod;
    }
    cout<<ans<<endl;
}