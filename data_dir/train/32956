#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(s) ((int)(s.size()))
#define all(s) s.begin(),s.end()
#define rep(i,a,n) for(int i=a;i<=n;++i)
#define per(i,n,a) for(int i=n;i>=a;--i)

typedef long long ll;
typedef unsigned long long ull;

using namespace std;

const int MAXN = 3e5 + 2;
const char nxtl = '\n';
const double eps = (double)1e-9;
template<typename T> inline bool updmin(T &a, const T &b) {return a > b ? a = b, 1 : 0;}
template<typename T> inline bool updmax(T &a, const T &b) {return a < b ? a = b, 1 : 0;}

int sz = 550, n, a[MAXN], p;
ll res[MAXN], dp[MAXN];
pair < pair < int, int >, int > q[MAXN];

int main() {
	#ifdef accepted
		freopen(".in", "r", stdin);
		freopen(".out", "w", stdout);
	#endif
	scanf("%d", &n);
	rep(i, 1, n) scanf("%d", a+i);
	scanf("%d", &p);
	rep(i, 1, p) {
		int x, y; scanf("%d%d", &x, &y);
		q[i] = mp(mp(y, x), i);
	}
	int lst = -1;
	sort(q+1, q+1+p);
	rep(i, 1, p) {
		if(q[i].first.first > sz) {
			ll sum = 0ll;
			int x = q[i].first.second;
			for(x; x <= n; x += q[i].first.first) sum += a[x];
			res[q[i].second] = sum;
		} else {
			if(lst != q[i].first.first) {
				lst = q[i].first.first;
				per(i, n, 1) {
					dp[i] = a[i];
					if(i+lst <= n) dp[i] += dp[i+lst];
				}
			}
			res[q[i].second] = dp[q[i].first.second];
		}
	}
	rep(i, 1, p) printf("%lld\n", res[i]);
	return 0;
}