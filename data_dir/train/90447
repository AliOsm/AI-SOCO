#include <bits/stdc++.h>
using namespace std;
 
#define pb push_back
#define ff first
#define ss second
 
typedef long long ll;
typedef pair<int, int> pii;
 
const int MAXN = 500 + 17;
 
string s1, s2, p;
int n, d[30][30], ans;
vector<pair<pii, int>> e;
 
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> s1 >> s2;
	cin >> n;
	for (int i = 0; i < 30; i++)
		fill(d[i], d[i] + 30, 1e9);
	for (int i = 0; i < 26; i++)
		d[i][i] = 0;
	for (int i = 1; i <= n; i++) {
		char t1, t2;
		int w;
		cin >> t1 >> t2 >> w;
		e.pb({{t1 - 'a', t2 - 'a'}, w});
		d[t1 - 'a'][t2 - 'a'] = min(d[t1 - 'a'][t2 - 'a'], w);
	}
	if (s1.size() != s2.size()) {
		cout << -1 << endl;
		return 0;
	}
	for (int k = 0; k < 26; k++)
		for (int i = 0; i < 26; i++)
			for (int j = 0; j < 26; j++)
				d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
	for (int i = 0; i < s1.size(); i++) {
		int t1 = s1[i] - 'a', t2 = s2[i] - 'a';
		int res = 1e9, k = 0;
		for (int j = 0; j < 26; j++) {
			res = min(res, d[t1][j] + d[t2][j]);
			if (res == d[t1][j] + d[t2][j])
				k = j;
		}
		if (res > 1e8) {
			cout << -1 << endl;
			return 0;
		}
		p += char(k + 'a');
		ans += res;
	}
	cout << ans << endl;
	cout << p << endl;
	return 0;
}
