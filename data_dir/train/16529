#include <bits/stdc++.h>
using namespace std;

int n, m;
char t[1500][1500];
int x_0, y_0;
pair<int, int> b[1500][1500];

int mod(int a, int b) {
	while(a < 0) {
		a += b;
	}
	return a %= b;
}

void dfs() {
	queue<pair<int, int> > q;
	q.push(make_pair(x_0, y_0));
	while(!q.empty()) {
		int x = q.front().first, y = q.front().second;
		q.pop();
		if(b[mod(x, n)][mod(y, m)].first == x && b[mod(x, n)][mod(y, m)].second == y) {
			continue;
		}
		if(b[mod(x, n)][mod(y, m)].first == -1) {
			b[mod(x, n)][mod(y, m)].first = x;
			b[mod(x, n)][mod(y, m)].second = y;
		} else {
			printf("Yes");
			exit(0);
		}
		if(t[mod(x + 1, n)][mod(y, m)] == '.') {
			q.push(make_pair(x + 1, y));
   		}
		if(t[mod(x - 1, n)][mod(y, m)] == '.') {
			q.push(make_pair(x - 1, y));
		}
		if(t[mod(x, n)][mod(y + 1, m)] == '.') {
			q.push(make_pair(x, y + 1));
		}
		if(t[mod(x, n)][mod(y - 1, m)] == '.') {
			q.push(make_pair(x, y - 1));
		}
	}
}

int main (int argc, char *argv[])
{
	for(int i = 0; i < 1500; ++i) {
		for(int j = 0; j < 1500; ++j) {
			b[i][j].first = -1;
			b[i][j].second = -1;
		}
	}
	scanf("%d%d", &n, &m);
	for(int i = 0; i < n; ++i) {
		for(int j = 0; j < m; ++j) {
			scanf(" %c", &t[i][j]);
			if(t[i][j] == 'S') {
				x_0 = i;
				y_0 = j;
				t[i][j] = '.';
			}
		}
	}
	dfs();
	printf("No");

	return 0;
}

