#include<bits/stdc++.h>
using namespace std;

#define ll             long long
#define LL             long long
#define gcd(a,b)       __gcd(a,b)
#define lcm(a,b)       a*(b/gcd(a,b))
#define pii            pair<int, int>
#define pll            pair<ll, ll>
#define pil            pair<int, ll>
#define pli            pair<ll, int>
#define vi             vector<int>
#define vl             vector<ll>
#define vii            vector<pii>
#define vll            vector<pll>
#define vil            vector<pil>
#define vli            vector<pli>
#define pb             push_back
#define ppb            pop_back
#define mp             make_pair
#define ff             first
#define ss             second
#define all(v)         v.begin(),v.end()
#define fill(a,b)      memset(a,b,sizeof a)
#define smax(a, b)     a=max(a, b)
#define smin(a, b)     a=min(a, b)
#define sqr(x)         x*x
#define cube(x)        x*x*x
#define endl           '\n'

int in() {
    int n;
    scanf("%d",&n);
    return n;
}

ll Lin() {
    ll n;
    scanf("%lld",&n);
    return n;
}

double Din() {
    double n;
    scanf("%lf",&n);
    return n;
}

const ll inf = 1e17;
const ll mod = 1e9 + 7;
const int N = 3e3 + 5;

vi g[N];
bool vis[N], ok;
int dis[N];

void unvisit(int n) {
    for(int i=1; i<=n; i++)
        vis[i]=false;
}

void cycle(int u, int v, int p) {
    vis[v]=true;
    for(auto  x: g[v]) {
        if(!vis[x]) cycle(u, x, v);
        else if(x!=p && x==u) ok=true;
    }
}

void dfs(int u, int d=0) {
    vis[u]=true;
    dis[u]=d;
    for(auto v : g[u]) {
        if(!vis[v]) dfs(v, d+1);
    }
}

int main() {
    int n=in();
    for(int i=1; i<=n; i++) {
        int u=in(), v=in();
        g[u].pb(v);
        g[v].pb(u);
    }
    vi cl;
    for(int i=1; i<=n; i++) {
        ok=false;
        cycle(i, i, i);
        if(ok) cl.pb(i);
        unvisit(n);
    }
    for(auto v : cl) {
        vis[v]=true;
    }
    for(auto v : cl) {
        dfs(v);
    }
    for(int i=1; i<=n; i++) {
        printf("%d ", dis[i]);
    }
    printf("\n");
    return 0;
}








