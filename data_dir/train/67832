
// ~/SolverToBe/Developers/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <functional>
#include <assert.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 200005, M = 1000005;
const ll MOD = 1e9 + 7;
const double eps = 1e-9;

int m = 998244353;
int n,a[N],b[N];
map<int, vector<int> > mp;

void fill(int x) {
    int l = mp[x][0],r = mp[x].back();
    while(1) {
        int mx = r;
        for(int i=l; i<=r; i++) {
            b[i] = 1;
            mx = max(mx, mp[a[i]].back());
        }
        if(mx==r) break;
        l = r;
        r = mx;
    }
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
#endif
    scanf("%d",&n);
    for(int i=0; i<n; i++) {
        scanf("%d",a+i);
        if(mp.find(a[i])==mp.end())
            mp[a[i]] = vector<int>(1,i);
        else mp[a[i]].push_back(i);
    }
    fill(a[0]);
    int ans = 1;
    for(int i=1; i<n; i++)
        if(!b[i]) {
            ans = (1ll * ans * 2)%m;
            fill(a[i]);
        }
    printf("%d\n", ans);
    return 0;
}