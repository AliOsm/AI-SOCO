#include <cstdio>
#include <vector>
#include <algorithm>
#include <utility>
#include <map>
#include <iostream>

using namespace std;

const int N = 1'509;

int a[N];
vector<pair<int, int>> g[N * N];

int main() {
  int n;
  scanf("%d", &n);
  for (int i = 0; i < n; ++i) {
    scanf("%d", a + i);
  }
  for (int i = 0; i < n * n; ++i) {
    g[i].clear();
  }
  map<int, int> w;
  int ids = 0;
  for (int i = 0; i < n; ++i) {
    int sum = 0;
    for (int j = i; j < n; ++j) {
      sum += a[j];
      if (w.count(sum) == 0) {
        w[sum] = ids++;
      }
      g[w[sum]].emplace_back(i, j);
    }
  }
  vector<pair<int, int>> ans;
  for (int i = 0; i < ids; ++i) {
    sort(g[i].begin(), g[i].end(), [](auto &x, auto &y) {
      return x.second < y.second;
    });
    vector<pair<int, int>> cur;
    int r = -1;
    for (auto &e : g[i]) {
      if (e.first > r) {
        r = e.second;
        cur.push_back(e);
      }
    }
    if ((int)cur.size() > (int)ans.size()) {
      ans = cur;
    }
  }
  printf("%d\n", (int)ans.size());
  for (auto &e : ans) {
    printf("%d %d\n", e.first + 1, e.second + 1);
  }
}
