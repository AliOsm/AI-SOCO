#include<bits/stdc++.h>

using namespace std;

#define fRead(x)  freopen(x,"r",stdin)
#define fWrite(x) freopen (x,"w",stdout)

#define LL long long
#define ULL unsigned long long
#define ff first
#define ss second
#define pb push_back
#define INF 2e16
#define PI acos(-1.0)
#define mk make_pair

#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define min4(a,b,c,d) min(a,min(b,min(c,d)))
#define max4(a,b,c,d) max(a,max(b,max(c,d)))
#define SQR(a) ((a)*(a))
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define REP(i,b) for(int i=0;i<b;i++)
#define ROF(i,a,b) for(int i=a;i>=b;i--)
#define MEM(a,x) memset(a,x,sizeof(a))
#define ABS(x) ((x)<0?-(x):(x))

#define scanI(a) scanf("%d",&a)
#define scanI2(a,b) scanI(a) , scanI(b)
#define scanI3(a,b,c) scanI(a), scanI(b), scanI(c)
#define scanI4(a,b,c,d) scanI(a), scanI(b), scanI(c), scanI(d)

#define scanL(a) scanf("%I64d",&a)
#define scanL2(a,b) scanL(a) , scanL(b)
#define scanL3(a,b,c) scanL(a), scanL(b), scanL(c)
#define scanL4(a,b,c,d) scanL(a), scanL(b), scanL(c), scanL(d)

#define SORT(v) sort(v.begin(),v.end())
#define REV(v) reverse(v.begin(),v.end())

#define FastRead ios_base::sync_with_stdio(0);cin.tie(nullptr);

pair<int,int>ara[1005];
int main()
{
    FastRead
    map<pair<int,int>,set<int>>lines;
    int n;
    cin >> n;
    for(int i = 0;i < n;i++){
        cin >> ara[i].first >> ara[i].second;
    }
    for(int i = 0;i < n;i++){
        for(int j = i + 1;j < n;j++){
            int x1 = ara[i].first;
            int x2 = ara[j].first;
            int y1 = ara[i].second;
            int y2 = ara[j].second;

            int X = x1 - x2;
            int Y = y1 - y2;
            int C = x1 * y2 - x2 * y1;
            int G = __gcd(X,Y);
            X/=G;Y/=G;
            lines[{Y,X}].insert(x1 * Y - y1 * X);
        }
    }
    LL ans = 0, pre = 0;
    for(auto line : lines){
        ans = ans + line.second.size() * pre;
        pre += line.second.size();
    }
    cout << ans << "\n";
}
