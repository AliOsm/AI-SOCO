#include "omp.h"
#include <iostream>
#include <iomanip>
#include <string>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <queue>
#include <vector>
#include <cassert>
#include <fstream>
#include <algorithm>
#include <list>
#include <random>
#include <ctime>
#include <random>
#include <bitset>
#include <unordered_set>
#include <cassert>
#include <list>


using namespace std;

typedef long long ll;
typedef long double ld;


const int sze = 1e6 + 1;


struct item
{
	item *left, *right;
	int v, len;

	item(char v) : v(v - '0'), len(1), left(0), right(0) {};
};


typedef item* sitem;


signed main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int n, m;
	cin >> n >> m;
	int a = 0, b = 0, xc = 0;

	for (int i = 0; i < m; ++i)
	{
		int x, d;
		cin >> x >> d;
		xc += x;

		if (d <= 0)
			b += d;
		else
			a += d;
	}

	ld ans = ld(xc) * n;
	int md = n / 2;

	for (int i = 0; i < n; ++i)
		ans += ld(abs(md - i)) * b + ld(abs(i - 0)) * a;
	
	cout << fixed << setprecision(10) << ans / n << '\n';

	return 0;
}