#define _CRT_SECURE_NO_DEPRECATE
#include <iostream>
#include <bitset>
#include <string>
#include <vector>
#include <algorithm>
#include <ctime>
#include <queue>
#include <cstring>
#include <set>
#include <map>
#include <sstream>
#include <cmath>
#include <fstream>
#include <list>
using namespace std;
#define rp(i,n) for(int (i)=0;(i)<(n);++(i))
#define pb push_back
#define L(s) (int)s.size()
#define mp make_pair
#define pii pair<int,int>
#define x first 
#define y second
#define inf 1000000000
#define VI vector<int>
#define ll long long
#define all(s) (s).begin(),(s).end()
#define C(u) memset((u),0,sizeof((u)))
#define ull unsigned ll
#define uint unsigned int 
#define pdd pair<double,double>
vector<string> s;
string l[42][2];
int a,b,c,n;
int main()
{
	s.pb("Anka");
	s.pb("Chapay");
	s.pb("Cleo");
	s.pb("Troll");
	s.pb("Dracul");
	s.pb("Snowy");
	s.pb("Hexadecimal");
	cin>>n;
	rp(i,n)
	{
		string s1,t,s2;
		cin>>s1>>t>>s2;
		l[i][0]=s1;
		l[i][1]=s2;
	}
	cin>>a>>b>>c;
	sort(all(s));
	int diff=inf;
	int lik=-inf;
	do
	{
			for(int j=1;j<L(s)-1;++j)
				for(int k=j+1;k<L(s);++k)
				{
					int mx=-2*inf;
					int mn=2*inf;
					int cur=0;
					mx=max(mx,a/j);
					mn=min(mn,a/j);
					mx=max(mx,b/(k-j));
					mn=min(mn,b/(k-j));
					mx=max(mx,c/(7-k));
					mn=min(mn,c/(7-k));
					rp(i,n)
					{
						int pos1=0;
						while(s[pos1]!=l[i][0])
							++pos1;
						int pos2=0;
						while(s[pos2]!=l[i][1])
							++pos2;
						if (pos1<j && pos2<j)
							++cur;
						else
							if (pos1<j || pos2<j);
							else
								if (pos1<k && pos2<k)
									++cur;
								else
									if (pos1<k || pos2<k);
									else
										cur++;
					}
						if (mx-mn<diff || (mx-mn==diff && cur>lik))
						{
							diff=mx-mn;
							lik=cur;
						}
				}
	}while(next_permutation(all(s)));
	cout<<diff<<" "<<lik<<endl;
}