#include <cstdio>
#include <iostream>
#include <string>
#include <cstddef>
#include <algorithm>
#include <numeric>
#include <cassert>
#include <vector>
#include <utility>
#include <unordered_map>
#include <algorithm>
#include <string>
#include <cstdio>
#include <iostream>
#include <set>
#include <map>
#include <functional>
#include <iterator>
#include <cstdlib>
#include <cstring>


int solve();

int main(int, char**)
{
#ifndef ONLINE_JUDGE
	(void)freopen("input.txt", "r", stdin);
	(void)freopen("output.txt", "w", stdout);
#endif 
	
#ifdef ONLINE_JUDGE
	::std::ios::sync_with_stdio(false);
	::std::cin.tie(0);
#endif 
	
	int Q  = 1;
	std::cin >> Q;
	while(Q --)
	  solve();

	return 0;
}

bool winPlayer(int n, int k)
{
	if ( n == 0 ) 
		return false;
	
	if (!winPlayer(n - 1, k))
		return true;
	if (!winPlayer(n - 2, k))
		return true;
	if (n >= k && !winPlayer(n - k, k))
		return true;
	return false;

}
bool winPlayerOptimized(int n, int k)
{
	if (k % 3 != 0)
		return n % 3 != 0;
	else
	{
		int q = n % (k + 1);
		return q % 3 != 0 || q == k;
	}
	

}

int solve()
{   
	int N, K;
	/*K = 8;
	for (N = 0; N < 40; ++N) {
		bool alice = winPlayer(N, K);
		printf("N = %d  wins: %s \n", N,  ( alice ? "Alice" : "Bob" )  );
	}

	return 0;
	*/
	/*
	K = 4:   N%3 ==0 : Bob  otherwice Alice is win.
	K = 3:   N%4 == 0 : Bob  otherwise Alice is win.
	K = 5:   N%3 == 0 : Bob  else Alice.
	K = 6: 
	*/
	std::cin >> N >> K;
 
	//if (winPlayer(N, K))puts("Alice"); else puts("Bob");
	if (winPlayerOptimized(N, K))puts("Alice"); else puts("Bob");

	return 0;
}
