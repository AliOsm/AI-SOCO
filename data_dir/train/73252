#include<bits/stdc++.h>
using namespace std;
const long long MX = (7009);
int arr[2][MX];
int bfs[MX][2];
int ok[MX][2];
int all , k[2];
void solve(){
    queue < pair < int , int > > Q;
    memset(bfs , -1 , sizeof(bfs));
    for(int j = 1 ; j <= all ; j++) ok[j][0] = k[0] , ok[j][1] = k[1];
    bfs[1][0] = 0;
    bfs[1][1] = 0;
    Q.push({1 , 0});
    Q.push({1 , 1});
    while(!Q.empty()){
        int x = Q.front().first , player = Q.front().second;
        int state = bfs[x][player];
        Q.pop();
        for(int j = 1 ; j <= k[player ^ 1] ; j++){
            int nxt = x - arr[player ^1][j]; if(nxt < 1) nxt += all;
            if(bfs[nxt][player ^ 1] != -1) continue;
            if(state == 0){
                bfs[nxt][player ^ 1] = 1;
                Q.push({nxt , player ^ 1});
            }
            else{
                ok[nxt][player ^ 1]--;
                if(ok[nxt][player ^ 1] == 0){
                    bfs[nxt][player ^ 1] = 0;
                    Q.push({nxt , player ^ 1});
                }
            }
        }
    }
    for(int j = 0 ; j < 2 ; j++){
        for(int i = 2 ; i <= all ; i++)
            if(bfs[i][j] == 0) cout<<"Lose ";
            else if(bfs[i][j] == 1) cout<<"Win ";
            else cout<<"Loop ";
        cout<<endl;
    }
}
int main(){
    cin>>all;
    for(int j = 0 ; j < 2 ; j++){
        cin>>k[j];
        for(int i = 1 ; i <= k[j] ; i++)
            cin>>arr[j][i];
    }
    solve();
}
