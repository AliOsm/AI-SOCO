#include <iostream>
#include <algorithm>
#include <cstdio>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <memory.h>
#include <cmath>
#include <string>
#include <ctime>
using namespace std;
int n, d;
int go[100005];
int dp[30005][805], x;
int main() {
    cin >> n >> d;
    for (int i = 0; i < n; ++i) {
        cin >> x;
        go[x]++;
    }
    for (int i = 0; i < 30001; ++i)
        for (int j = 0; j < 800; ++j)
            dp[i][j] = -1;
    dp[d][400] = go[d];
    for (int i = d; i < 30001; ++i) {
        for (int j = 0; j < 800; ++j) {
            if (dp[i][j] == -1) continue;
            int cur = d - 400 + j;
            if (cur > 1) {
                if (i + cur - 1 < 30001) dp[i + cur - 1][j - 1] = max(dp[i + cur - 1][j - 1], dp[i][j] + go[i + cur - 1]);
            }
            if (i + cur < 30001) dp[i + cur][j] = max(dp[i + cur][j], dp[i][j] + go[i + cur]);
            if (i + cur + 1 < 30001) dp[i + 1 + cur][j + 1] = max(dp[i + cur + 1][j + 1], dp[i][j] + go[i + cur + 1]);
        }
    }
    int ans = 0;
    for (int i = 0; i <= 30000; ++i)
        for (int j = 0; j < 800; ++j)
            ans = max(ans, dp[i][j]);
    cout << ans << endl;
    return 0;
}