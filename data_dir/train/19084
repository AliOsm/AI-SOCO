#include <iostream>
#include <algorithm>
#include <string>
#include <cstdio>
#include <cmath>
#include <vector>
#include <map>
#include <set>
#include <ctime>
#include <cstdlib>
#include <queue>
#include <cstring>
#include <cassert>
#include <bitset>

using namespace std;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define sz(x) ((int)((x).size()))
#define all(x) (x).begin(),(x).end()
#define deb(x) cout << "(" << #x << " = " << x << ")\n";

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;

int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};

int n, m;
char c[55][55];
int ex, ey, sx, sy;
int a[4];

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0), cout.tie(0);

    cin >> n >> m;
    for(int i = 1; i <= n; ++i)
    	for(int j = 1; j <= m; ++j) {
    		cin >> c[i][j];
    		if(c[i][j] == 'S') sx = i, sy = j;
    		if(c[i][j] == 'E') ex = i, ey = j;
    	}
    for(int i = 0; i < 4; ++i) 
    	a[i] = i;
    string ins;
    cin >> ins;
    int ans = 0;
    do{
    	int found = 0;
    	int x = sx, y = sy;
    	for(int i = 0; i < sz(ins); ++i) {
    		int dir = a[ins[i] - '0'];
    		x += dx[dir];
    		y += dy[dir];
    		if(x == ex && y == ey) {
    			found = 1;
    			break;
    		} else if(x < 1 || x > n || y < 1 || y > m || c[x][y] == '#') {
    			break;
    		}
    	}
    	ans += found;
    }while(next_permutation(a, a + 4));
    cout << ans << endl;
    return 0;
}
