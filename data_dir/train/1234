#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
#include <math.h>
#include <ctype.h>
#include <assert.h>
#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <string>
#include <vector>
#include <list>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <numeric>
using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(),(x).end()
#define clr(t,v) memset((t),(v),sizeof(t))
#define endl ('\n')

const int inf=1999999999;
const double pi=acos(-1.0);
const double eps=1e-10;
char gc(){char c;while(isspace(c=getchar()));return c;}
int gs(char* s){gets(s);int l=strlen(s);while(l && isspace(s[l-1]))s[--l]=0;return l;}

int n,m,x,y;
int a[1100][1100];
int mn[1100][1100],hmn[1100][1100];
ll s[1100][1100];
bool used[1100][1100];
void buildmn()
{
    for(int i=0;i<n;i++)
    {
        multiset<int> wn;
        for(int j=0;j<y;j++)
            wn.insert(a[i][j]);
        for(int j=y;j<=m;j++)
        {
                hmn[i][j-y]=*wn.begin();
                wn.erase(wn.find(a[i][j-y]));
                if(j<m)
                    wn.insert(a[i][j]);
        }
    }
    for(int j=0;j<m-y+1;j++)
    {
        multiset<int> wn;
        for(int i=0;i<x;i++)
            wn.insert(hmn[i][j]);
        for(int i=x;i<=n;i++)
        {
                mn[i-x][j]=*wn.begin();
                wn.erase(wn.find(hmn[i-x][j]));
                if(i<n)
                    wn.insert(hmn[i][j]);
        }
    }
}
void builds()
{
    for(int i=1;i<=n;i++)
        for(int j=1;j<=m;j++)
            s[i][j]=s[i-1][j]+s[i][j-1]-s[i-1][j-1]+a[i-1][j-1];
}
ll gets(int ax,int ay,int bx,int by)
{
    bx++,by++;
    return s[bx][by]-s[ax][by]-s[bx][ay]+s[ax][ay];
}
bool check(int ax,int ay)
{
    int bx=ax+x-1,
    by=ay+y-1;
    return !used[ax][ay] && !used[ax][by] && !used[bx][ay] && !used[bx][by];
}
void mark(int ax,int ay)
{
    int bx=ax+x-1,
    by=ay+y-1;
    for(int i=ax;i<=bx;i++)
        for(int j=ay;j<=by;j++)
            used[i][j]=true;
}
typedef pair<ll,ii> iii;
int main()
{
//  freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
    ios::sync_with_stdio(false);
    cin>>n>>m>>x>>y;
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            cin>>a[i][j];
    buildmn();
    builds();
    vector<iii> v;
    for(int i=0;i<n-x+1;i++)
        for(int j=0;j<m-y+1;j++)
        {
            ll score=gets(i,j,i+x-1,j+y-1)-(ll)mn[i][j]*x*y;
//          cout<<i<<' '<<j<<' '<<score<<endl;
            v.pb(mp(score,mp(i,j)));
        }
    sort(all(v));
    vector<iii> ans;
    for(int i=0;i<sz(v);i++)
    {
        if(check(v[i].se.fi,v[i].se.se))
        {
            ans.pb(v[i]);
            mark(v[i].se.fi,v[i].se.se);
        }
    }
    cout<<sz(ans)<<endl;
    for(int i=0;i<sz(ans);i++)
        cout<<ans[i].se.fi+1<<' '<<ans[i].se.se+1<<' '<<ans[i].fi<<endl;
    return 0;
}
