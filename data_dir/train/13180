#include <iostream>
#include <vector>
#include <queue>
using namespace std;

struct point
{
	size_t u, i, j;
	point()
	{}
	point(size_t _u, size_t _i, size_t _j): u(_u), i(_i), j(_j)
	{}
};

int main(void)
{
	int k, n, m;
	cin >> k >> n >> m;
	vector<vector<vector<char>>> v(k);
	for (int u = 0; u < k; ++u)
	{
		v[u].resize(n);
		cin.get();
		for (int i = 0; i < n; ++i)
		{
			v[u][i].resize(m);
			for (int j = 0; j < m; ++j)
			{
				cin >> v[u][i][j];
			}
		}
	}	
	int x, y;
	cin >> x >> y;
	queue<point> q;
	q.push(point(0, --x, --y));
	point h[] = 
	{ 
		point(0, 1, 0), point(0, 0, 1), point(0, -1, 0), point(0, 0, -1),
		point(1, 0, 0), point(-1, 0, 0)
	};
	int nh = sizeof h / sizeof *h;
	int ans = 0;
	v[0][x][y] = 's';
	while (!q.empty())
	{
		point w = q.front();
		q.pop();
		++ans;
		for (int t = 0; t < nh; ++t)
		{
			size_t i = w.i+h[t].i, j = w.j+h[t].j, u = w.u+h[t].u;
			if (i < n && j < m && u < k && v[u][i][j] == '.')
			{
				q.push(point(u, i, j));
				v[u][i][j] = '$';
			}
		}
	}
	cout << ans;
	return 0;
}