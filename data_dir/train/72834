/**/
#include <bits/stdc++.h>
using namespace std;
/***********************************************/
/* Dear online judge:
 * I've read the problem, and tried to solve it.
 * Even if you don't accept my solution, you should respect my effort.
 * I hope my code compile and get accepted.
 *      ____________
 *     /         __ \
 *    /   __    |  | \
 *   /   |__|   |  |  \
 *  (           |__|   )
 *   \                /
 *    \      ___     /
 *     \____________/
 *
 *
 */
const long long mod = 1000000007;

int N;

vector<pair<int,int> > A[400010],B[400010];
vector<int> Ai[400010],Bi[400010];;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);

	cin>>N;
	vector<pair<int,pair<int,int> > > a(N),b(N);
	vector<int> c;
	for(int i = 0;i < N;i++)cin>>a[i].first,c.push_back(a[i].first);
	for(int i = 0;i < N;i++)cin>>b[i].first,c.push_back(b[i].first);

	sort(c.begin(),c.end());
	auto it = unique(c.begin(),c.end());
	c.erase(it,c.end());

	for(int i = 0;i < N;i++){
		a[i].first = lower_bound(c.begin(),c.end(),a[i].first) - c.begin();
		b[i].first = lower_bound(c.begin(),c.end(),b[i].first) - c.begin();
	}

	deque<pair<int,int> > qa,qb;
	for(int i = N-1;i >= 0;i--) {
		while(!qa.empty() && qa.back().first <= a[i].first) {
			qa.pop_back();
		}
		a[i].second.second = (qa.empty()?N:qa.back().second);
		qa.push_back({a[i].first,i});

		while(!qb.empty() && qb.back().first >= b[i].first) {
			qb.pop_back();
		}
		b[i].second.second = (qb.empty()?N:qb.back().second);
		qb.push_back({b[i].first,i});
	}

	qa.clear(),qb.clear();

	for(int i = 0;i < N;i++) {
		while(!qa.empty() && qa.back().first <= a[i].first) {
			qa.pop_back();
		}
		a[i].second.first = (qa.empty()?-1:qa.back().second);
		qa.push_back({a[i].first,i});


		while(!qb.empty() && qb.back().first >= b[i].first) {
			qb.pop_back();
		}
		b[i].second.first = (qb.empty()?-1:qb.back().second);
		qb.push_back({b[i].first,i});
	}

	for(int i = 0;i < N;i++){
		A[a[i].first].push_back(a[i].second);
		Ai[a[i].first].push_back(i);
		B[b[i].first].push_back(b[i].second);
		Bi[b[i].first].push_back(i);
	}

	long long res = 0;
	for(int x = 0;x < (int)c.size();x++) {
		for(int i = 0,j = 0;i < (int)A[x].size();i++) {
			int pre = A[x][i].first;
			if(i)
				pre = max(Ai[x][i-1],pre);
			while(j < (int)Bi[x].size() && Bi[x][j] <= pre)
				j++;
			while(j + 1 < (int)B[x].size() && Bi[x][j+1] <= Ai[x][i])
				j++;
			if(j == (int)Bi[x].size())
				break;
			if(Bi[x][j] <= Ai[x][i]) {
				res += max(0,(Bi[x][j] - max(B[x][j].first,pre))) * 1ll * max(0,(min(B[x][j].second,A[x][i].second) - Ai[x][i]));
				pre = Bi[x][j];
				j++;
				if(j == (int)Bi[x].size())
					break;
			}
			res += max(0,(Ai[x][i] - max(B[x][j].first,pre))) * 1ll * max(0,(min(B[x][j].second,A[x][i].second) - Bi[x][j]));
		}
	}
	
	cout<<res<<'\n';
	return 0;
}
/**/
