
#include <bits/stdc++.h>
#define ll long long
#define loop(xxx, yyy) for(int xxx = 0; xxx < yyy; xxx++)
using namespace std;

const int N = 111111;

ll M = 1000000007;
ll _1 = M - 1;
ll i2 = (M + 1) / 2;
int k;
ll a[N];
struct m2 {
    ll a, b, c, d;
};

m2 mult(m2 M1, m2 M2) {
    ll A = M1.a;
    ll C = M1.c;
    ll B = M1.b;
    ll D = M1.d;

    ll E = M2.a;
    ll F = M2.b;
    ll G = M2.c;
    ll H = M2.d;

    m2 m;
    m.a = A * E + B * G;
    m.b = A * F + B * H;
    m.c = C * E + D * G;
    m.d = C * F + D * H;

    m.a %= M;
    m.b %= M;
    m.c %= M;
    m.d %= M;
    return m;
}

ll mult(ll a, ll b) {
    return ((a % M) * (b % M)) % M;
}

template<typename T>
T bin_pow(T b, ll e) {
    if (e == 1) return b;

    if (e % 2 == 1) {
        return mult(b, bin_pow(b, e - 1));
    }
    T b2 = bin_pow(b, e / 2);
    return mult(b2, b2);
}

int main() {
    scanf("%d", &k);
    multiset<ll> st;
    loop(i, k) {
        scanf("%lld", a + i);
        if (a[i] != 1)
            st.insert(a[i]);
    }


    // n == 1
    if (st.size() == 0) {
        printf("0/1\n");
        exit(0);
    }

    if (count(a, a + k, 2) == 1 && st.size() == 1) {
        printf("1/2\n");
        exit(0);
    }


    ll denom = 2;
    loop(i, k) {
        denom = bin_pow(denom, a[i]);
    }
    denom = mult(denom, i2);

    m2 m;
    m.a = 2, m.b = 0;
    m.c = 1, m.d = _1;
    m2 im;
    im.a = i2, im.b = 0;
    im.c = mult(M - 1, M - i2), im.d = M - 1;


    loop(i, k) {
        m = bin_pow(m, a[i]);
    }

    m = mult(m, im);
    m = mult(m, im);

    ll num = (m.a + mult(_1, m.c)) % M;
    printf("%lld/%lld\n", num, denom);
    return 0;
}