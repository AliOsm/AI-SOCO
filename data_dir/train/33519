#include <bits/stdc++.h>

#ifdef NJUDGE
#include "igba.h"
#endif

using namespace std;
const int MAXN = 100100;
int n;
vector<int> g[MAXN];
double ans = 0;

void dfs(int v, int p = -1, int h = 0, double prob = 1)
{
	if(g[v].size() == 1 && v != 1)
	{
		ans += prob * h;
		return;
	}

	for(const int& u : g[v])
		if(u != p)
			dfs(u, v, h + 1, prob / (g[v].size() - (v != 1)));
}

int main()
{
	scanf("%d", &n);
	for(int i = 1, u, v; i <= n - 1; ++i)
		scanf("%d %d", &u, &v), g[u].push_back(v), g[v].push_back(u);
	dfs(1);
	printf("%lf\n", ans);
}