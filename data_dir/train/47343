#pragma comment(linker, "/STACK:536870912")
#pragma warning(disable:4996)

#include<iostream>
#include<algorithm>
#include<queue>
#include<string>
#include<vector>
#include<map>
#include<list>
#include<set>
#include<cstring>
#include<ctime>
#include<cmath>
#include<limits>
#include<iterator>
#include<functional>
#include<unordered_map>
#include<stack>
#include<bitset>

#define all(v) v.begin(), v.end()
#define setv(ar, val) memset(ar, val, sizeof(ar));
#define ll long long int
#define ull unsigned long long int
#define PI 3.1415926535897932384626433832795
using namespace std;


const int N = 1e6 + 100;
char s[N];
int sz[N];

struct Q {
	int nn;
	char a;
	Q(int nn, int a) : nn(nn), a(a) {}
};

struct cmp {
	bool operator() (const Q &a, const Q &b) const {
		return a.nn < b.nn;
	}
};

set<Q, cmp> st;

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	scanf(" %s", s);
	int len = strlen(s);

	int b = 0, t= 0;
	for (int i = 0; i < len; i++) {
		if (s[i] != s[i + 1]) {
			sz[t] = i - b + 1;
			st.insert(Q(t++, s[i]));
			b = i + 1;
		}
	}

	
	
	int ans = 0;
	while (st.size() > 1) {
		ans++;
		for (auto it = st.begin(); it != st.end();) {
			auto nt = next(it);
			if (nt != st.end()) {
				sz[it->nn]--;
				sz[nt->nn]--;
			}
			if (sz[it->nn] <= 0) {
				it++;
				st.erase(prev(it));
			}
			else
				it++;
		}
		if (!st.empty()) {
			for (auto it = st.begin(); it != st.end();) {
				auto nt = next(it);
				if (nt == st.end())
					break;
				if (nt->a == it->a) {
					sz[nt->nn] += sz[it->nn];
					sz[it->nn] = 0;
				}
				if (sz[it->nn] <= 0) {
					it++;
					st.erase(prev(it));
				}
				else
					it++;
			}
		}
	}



	printf("%d", ans);

	return 0;
}