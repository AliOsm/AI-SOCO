#pragma comment(linker, "/STACK:1024000000,1024000000")
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <vector>
#include <set>
#include <queue>
#include <map>
#include <sstream>
#include <stack>
#include <cassert>
#include <ctime>
#include <cmath>

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

#define pb push_back
#define sz(x) ((x).size())

const int N = 10000010;
const int inf = 0x7fffffff;
const ll oo = 0x3f3f3f3f3f3f3f3fll;

int a[22], b[22];
int n, m;

struct Matix{
    ll a[110][110];
    
    Matix() {
        for(int i = 0; i <= 100; i++)
            for(int j = 0; j <= 100; j++)
                a[i][j] = oo;
    }
};

Matix mul(const Matix &A, const Matix &B){
    Matix ret;
    for(int i = 0; i <= 100; i++)
        for(int j = 0; j <= 100; j++)
            for(int k = 0; k <= 100; k++)
                ret.a[i][j] = min(ret.a[i][j], A.a[i][k] + B.a[k][j]);
    return ret;
}

int main(){
    scanf("%d%d", &n, &m);
    for(int i = 0; i < n; i++)
        scanf("%d", &a[i]);
    for(int i = 0; i < n; i++)
        scanf("%d", &b[i]);
    Matix p, ret;
    
    for(int i = 0; i <= 100; i++)
        p.a[i][i] = 0;
    
    for(int i = 0; i < n; i++){
        Matix t;
        for(int j = 0; j <= 100; j++){
            if(j > 0) t.a[j][j - 1] = b[i];
            if(j < 100) t.a[j][j + 1] = a[i];
        }
        p = mul(p, t);
    }
    
    // for(int i = 0; i <= 2; i++)
        // for(int j = 0; j <= 2; j++)
            // printf("%d -> %d = %d\n", i, j, p.a[i][j]);
    
    for(int i = 0; i <= 100; i++)
        ret.a[i][i] = 0;
    
    while(m){
        if(m & 1) ret = mul(ret, p);
        m >>= 1;
        p = mul(p, p);
    }
        
    cout << ret.a[0][0] << endl;
    
    return 0;
}