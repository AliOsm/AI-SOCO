#include<bits/stdc++.h>

using namespace std;

#define pb push_back

const int block = 500;
const int maxi = 1e6+10;
int ans;
int cnt[maxi];
int a[maxi];
vector<pair<pair<int,int>, int>> v[maxi];
int rez[maxi];
int n,m;

void add_interval(int l, int r)
{
    for (int i=l;i<=r;i++)
    {
        if (a[i]>1e5) continue;
        cnt[a[i]]++;
        if (cnt[a[i]] == a[i]) ans++; else
        if (cnt[a[i]]== a[i] + 1) ans--;
    }
}

void remove_interval(int l, int r)
{
    for (int i=l;i<=r;i++)
    {
        if (a[i]>1e5) continue;
        cnt[a[i]]--;
        if (cnt[a[i]] == a[i]) ans++; else
            if (cnt[a[i]] == a[i] - 1) ans--;
    }
}
int main()
{
    cin>>n>>m;

    for (int i=1;i<=n;i++)
        scanf("%d",&a[i]);

    for (int i=1;i<=m;i++)
    {
        int l,r;
        scanf("%d%d",&l,&r);
        v[l/block].pb({{r,l},i});
    }


    for (int i=0;i<=n/block;i++)
    {
        sort(v[i].begin(),v[i].end());

        for (int i=1;i<=n;i++)
            if (a[i]<=1e5)
            cnt[a[i]] = 0;

        int startB = i*block + block;
        ans = 0;
        int curPoz = startB;
        for (auto j:v[i])
            if (j.first.first<startB)
        {
             add_interval(j.first.second,j.first.first);
             rez[j.second] = ans;
             remove_interval(j.first.second, j.first.first);
        }
        else
        {
            add_interval(curPoz, j.first.first);
            curPoz = j.first.first + 1;
            add_interval(j.first.second,startB -1);
            rez[j.second] = ans;
            remove_interval(j.first.second, startB - 1);
        }
    }

    for (int i=1;i<=m;i++)
        printf("%d\n",rez[i]);
}
