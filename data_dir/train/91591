#include <bits/stdc++.h>
using namespace std;

const int N = 1e2 + 5, inf = 1e9;
typedef pair <int, int> pii;
typedef long long ll;

int n, m;
vector <pii> adj[N];
int color[N], vis[N], mark[N];
vector <int> comp;
bool is_val = true;

void dfs(int v) {
	mark[v] = true;
	comp.push_back(v);
	for (auto e : adj[v]) {
		int u = e.first, w = e.second;
		if(!mark[u]) {
			color[u] = color[v] ^ w ^ 1;
			dfs(u);
		}
		else if(color[u] != color[v] ^ w ^ 1)
			is_val = false;
	}
}

int main() {
	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		int v, u, w;
		cin >> v >> u >> w;
		v--, u--;
		adj[v].push_back({u, w});
		adj[u].push_back({v, w});
	}
	for (int i = 0; i < n; i++) {
		if(!vis[i]) {
			is_val = 1;
			color[i] = 1;
			dfs(i);
			if(!is_val) {
				for (auto u : comp)	mark[u] = false;
				comp.clear();
				color[i] = 0;
				dfs(i);
				if(is_val)
					for (auto u : comp)
						vis[u] = true;
				else {
					return cout << "Impossible\n", 0;
				}
				comp.clear();
			}
			else {
				for (auto u : comp)
					vis[u] = true;
				comp.clear();
			}
		}
	}
	vector <int> ans;
	for (int i = 0; i < n; i++) {
		if(color[i])
			ans.push_back(i);
	}
	cout << ans.size() << "\n";
	for (auto u : ans) {
		cout << u + 1 << " ";
	}
	cout << endl;
}
