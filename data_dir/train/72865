#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cstring>
#include<vector>
#define REP(i,m) for(int i=0;i<m;++i)
#define REPN(i,m,in) for(int i=in;i<m;++i)
#define ALL(t) (t).begin(),(t).end()
#define pb push_back
#define mp make_pair
#define fr first
#define sc second
#define dump(x)  cerr << #x << " = " << (x) << endl
#define prl cerr<<"called:"<< __LINE__<<endl
using namespace std;
static const int INF =500000000; 
template<class T> void debug(T a,T b){ for(;a!=b;++a) cerr<<*a<<' ';cerr<<endl;}
typedef long long int lint;
typedef pair<int,int> pi;
char s[1000005],key[1000005];
int n;
int table[1000005];
int maxlen;
void check(){
	memcpy(key,s,sizeof(s));

	table[0]=-1;
	REPN(i,n+1,1){
		int j=table[i-1];
		while(j>=0 && key[j+1]!=key[i]) j=table[j];
		if(key[j+1]==key[i]) ++j;
		table[i]=j;
	}

	int j=-1;
	REPN(i,n-1,1){
		while(j>=0 && key[j+1]!=s[i]) j=table[j];
		if(key[j+1]==s[i]) ++j;
		maxlen=max(maxlen,j+1);
	}
}

lint hash[1000005],hash2[1000005];
lint B=100000007;

int main(){
	scanf("%s",s);
	n=strlen(s);

	hash[0]=s[0];
	REP(i,n) hash[i+1]=hash[i]*B+s[i+1];

	hash2[n]=0;
	lint Bsum=1;
	for(int i=n-1;i>=0;--i) hash2[i]=hash2[i+1]+s[i]*Bsum,Bsum*=B;



	
	check();
	
	int lb=0;
	for(int i=maxlen;i>=1;--i){
		if(hash[i-1]==hash2[n-i]){
			lb=i;
			break;
		}
	}

	if(lb==0) puts("Just a legend");
	else{
		s[lb]='\0';
		printf("%s\n",s);
	}

	return 0;
}



