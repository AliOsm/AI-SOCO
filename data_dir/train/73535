#include<bits/stdc++.h> 

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;
typedef long double ld;

const ll MOD = 1e9+7;
const ld PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

struct val
{
	int a,t,i;

};

auto comp(val& a, val&b)
{
	if(a.t != b.t)
		return a.t<b.t;
	if(a.a != b.a)
		return a.a<b.a;
	return a.i<b.i;
}

int n,t;
val a[212345];

int main()
{
	ssync;
	cin>>n>>t;
	for(int i=0;i<n;i++)
	{
		cin>>a[i].a>>a[i].t;
		a[i].i=i;
	}
	sort(a,a+n,comp);
	auto f = [&](int k, bool p=false)
	{
		ll s=0,c=0;
		for(int i=0;i<n and c<k;i++)
		{
			if(a[i].a>=k)
			{
				if(p)
					cout << a[i].i+1 << " ";
				s+=a[i].t,c++;
			}
		}
		return c==k and s<=t;
	};
	int l=0,r=n;
	while(l+1 < r)
	{
		auto m=(l+r)/2;
		if(f(m))
			l=m;
		else
			r=m;
	}
	cout << (f(r)?r:l) << "\n";
	cout << (f(r)?r:l) << "\n";
	f(r)?f(r,true):f(l,true);
	cout<<"\n";
	return 0;
}
