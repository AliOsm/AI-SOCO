#include<bits/stdc++.h>
#define LiangJiaJun main
#define ll long long
#define pa pair<int,int>
using namespace std;
int n,ks,m;
vector<pa>oc[1000004];
struct tree{
    int l,r;
    ll cn,cm;
}tr[4000004];
void build(int k,int l,int r){
     tr[k].cn=0;tr[k].cm=0;
     tr[k].l=l;tr[k].r=r;
     if(l==r)return ;
     int mid=(l+r)>>1;
     build(k<<1,l,mid);
     build(k<<1|1,mid+1,r);
}
void add(int k,int c,int p){
     int l=tr[k].l,r=tr[k].r;
     tr[k].cn+=c;
     tr[k].cm+=1LL*c*p;
     if(l==r)return ;
     int mid=(l+r)>>1;
     if(p<=mid)add(k<<1,c,p);
     else add(k<<1|1,c,p);
}
ll  query(int k,ll v){
    int l=tr[k].l,r=tr[k].r;
    if(v<=0)return 0;
    if(tr[k].cn<=v)return tr[k].cm;
    if(l==r)return v*l;
    int mid=(l+r)>>1;
    return query(k<<1,min(v,tr[k<<1].cn))+query(k<<1|1,v-tr[k<<1].cn);
}
int w33ha(){
    for(int i=0;i<=1000001;i++)oc[i].clear();
    for(int i=1;i<=m;i++){
        int l,r,c,p;scanf("%d%d%d%d",&l,&r,&c,&p);
        oc[l].push_back(make_pair(c,p));
        oc[r+1].push_back(make_pair(-c,p));
    }
    build(1,1,1000000);
    ll ans=0;
    for(int i=1;i<=n;i++){
        for(int j=0;j<oc[i].size();j++){
            add(1,oc[i][j].first,oc[i][j].second);
        }
        ans+=query(1,min(1LL*ks,tr[1].cn));
    }
    printf("%lld\n",ans);
    return 0;
}
int LiangJiaJun(){
    while(scanf("%d%d%d",&n,&ks,&m)!=EOF)w33ha();
    return 0;
}
