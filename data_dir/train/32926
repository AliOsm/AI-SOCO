#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic warning "-std=c++11"
 
using ll = long long;

const ll mod = 1e9 + 7;

#define sqr( a ) ( ( a ) * ( a ) )
int inf = 1 << 24;
const int sz = 1e5 + 10;

ll n, k, m;

int srch( int gh, ll lo, ll up ) {
        ll l = 1, r = n - 1, mid, bk;
        while( r - l > 4 ) {
                mid = ( l + r ) / 2;
                bk = m - mid;
                if( lo > bk ) {
                        r = mid;
                }
                else if( bk > up ) {
                        l = mid;
                }
                else if( lo <= bk && bk <= up ) {
                        l = mid;
                }
        }
        int ans = -1;
        for( ; l<=r; l++ ) {
                bk = m - l;
                if( lo <= bk && bk <= up ) {
                        ans = l;
                }
        }
        return ans;
}

int main() {
#ifdef CLown1331
        freopen( "in.txt","r",stdin );
#endif /// CLown1331

        while( cin >> n >> k >> m ) {

                vector < int > v;

                int nw = 1;

                for( int i=0; i<k; i++ ) {
                        int h = k - i - 1;
                        ll up = h * ( n - 1 );
                        ll lo = h;
                        int nm = srch( i + 1, lo, up );
                        if( nm == -1 ) {
                                break;
                        }
                        else {
                                if( nw + nm <= n ) nw += nm;
                                else nw -= nm;
                                v.push_back( nw );
                                m -= nm;
                        }
                }

                if( v.size() == k ) {
                        cout << "YES\n";
                        for( const int& x: v ) printf( "%d ", x );
                        printf( "\n" );
                }
                else {
                        cout << "NO\n";
                }

                cerr << "---\n";

        }

        return 0;
}