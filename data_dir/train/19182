#include "bits/stdc++.h"

using namespace std;
using LL = long long;

constexpr int N = 1e6 + 100;

int d[N], parent[N][22];

int dist(int a, int b) {
	if (d[a] < d[b]) swap(a, b);
	int rv = 0;

	for (int i = 19; i >= 0; i--) {
		if (d[parent[a][i]] >= d[b]) {
			a = parent[a][i];
			rv += 1 << i;
		}
	}
	if (a == b) return rv;

	for (int i = 19; i >= 0; i--) {
		if (parent[a][i] != parent[b][i]) {
			a = parent[a][i];
			b = parent[b][i];
			rv += (1 << (i + 1));
		}
	}
	return rv + 2;
}

int main() {
	ios::sync_with_stdio(false); cin.tie(nullptr);

	d[2] = d[3] = d[4] = 1;
	d[1] = 0;
	parent[2][0] = parent[3][0] = parent[4][0] = 1;
	int u = 2, n = 4;
	int ans = 2;

	int q;
	cin >> q;

	while (q--) {
		int x;
		cin >> x;

		d[n + 1] = d[n + 2] = d[x] + 1;
		parent[n + 1][0] = parent[n + 2][0] = x;

		for (int i = 1; i < 20; i++) {
			parent[n + 1][i] = parent[parent[n + 1][i - 1]][i - 1];
			parent[n + 2][i] = parent[parent[n + 2][i - 1]][i - 1];
		}

		n += 2;
		if (d[n] > d[u]) {
			u = n;
			ans++;
		}
		else {
			ans = max(ans, dist(u, n));
		}
		cout << ans << "\n";
	}
}