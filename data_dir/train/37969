#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>
#include <list>
#include <numeric>
#include <functional>
#include <complex>
#include <cassert>
#include <regex>
#include <random>

#define ll long long
#define ld long double
#define ull unsigned ll
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vpii vector<pii>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 2 * 1000 * 1000 * 1000;
ll LINF = (ll)4e18;
using namespace std;

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("sum.in", "r", stdin);
	//freopen("sum.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	string s;
	cin >> s;

	int pos = 0;
	for (auto &c : s) {
		if (c == '.' || c == '0') {
			pos++;
			continue;
		}
		break;
	}
	int dot = s.find('.');
	if (dot != -1) s.erase(dot, 1);
	else dot = s.size();
	int b = dot - pos;
	if (b > 0) b--;

	for (int i = 0; i < 2; i++) {
		while (s.back() == '0') s.pop_back();
		reverse(all(s));
		while (s.back() == '0') s.pop_back();
	}

	if (s.size() > 1) s.insert(1, ".");

	cout << s;
	if (b != 0) cout << "E" << b;
	return 0;
}