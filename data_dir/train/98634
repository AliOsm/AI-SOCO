#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pi pair<int, int>
#define F first
#define S second
#define pb push_back
#define PI acos(-1.0)
using namespace std;
int const N = 1e5;
ll n, k, a[N + 10], Seg[5 * N][11];

void Update(int i, ll Val, int idx, int Node = 1, int L = 1, int R = N)
{
    if (i < L || i > R) return;

    if (L == R){
        Seg[Node][idx] += Val;
        return;
    }

    int Mid = L + R >> 1;
    Update(i, Val, idx, Node << 1, L, Mid);
    Update(i, Val, idx, Node << 1 | 1, Mid + 1, R);

    Seg[Node][idx] = Seg[Node << 1][idx] + Seg[Node << 1 | 1][idx];
}

ll Query(int i, int j, int idx, int Node = 1, int L = 1, int R = N)
{
    if (i > R || j < L) return 0;

    if (L >= i && R <= j)
        return Seg[Node][idx];

    int Mid = L + R >> 1;
    ll Q1 = Query(i, j, idx, Node << 1, L, Mid);
    ll Q2 = Query(i, j, idx, Node << 1 | 1, Mid + 1, R);

    return Q1 + Q2;
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    // freopen("in.in", "r", stdin);
    // freopen("out.out", "w", stdout);

    cin >> n >> k;
    for (int i = 1; i <= n; i++)
        cin >> a[i];

    for (int i = 1; i <= n; i++)
        for (int j = 0; j <= k; j++){
            if (j == 0){
                Update(a[i], 1, 0);
                continue;
            }
            ll Sum = Query(1, a[i] - 1, j - 1);
            Update(a[i], Sum, j);
        }

    cout << Seg[1][k] << '\n';
    return 0;
}
