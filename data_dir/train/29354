#include <iostream>
#include <algorithm>
#include <string>
#include <ctype.h>
#include<queue>
#include <vector>
#include <set>
#include<cmath>
//#include<bits/stdc++.h>
#include<unordered_map>
#include <map>
#include<functional>
#include<stack>
#include<list>
#include<iomanip>
using namespace std;
#define ll long long
#define MAX 100000+5
#define MOD 100000000
#define INF 100000000000000000
#define edge pair<int,int>
int n, m,k;
int dx[] = { 1, 0, -1, 0, 1, -1, -1, 1 };
int dy[] = { 0, 1, 0, -1, 1, 1, -1, -1 };
int valid(int i, int j){
	if (i >= 1 && i <= 8 && j >= 1 && j <= 8)return 1;
	else return 0;
}
string get(ll i, string s=""){
	
	while (i){
		if ((i%10)%2==1)
		s.push_back('1');
		else s.push_back('0');
		i /= 10;
	}
	while (s.size() < 18)s.push_back('0');
	reverse(s.begin(), s.end());
	return s;
}
map<string, int>mp;
int main()
{
	ll c;
	cin >> n;
	while (n--){
		char x;
		cin >> x;
		
		if (x == '+'){
			cin >> c;
			mp[get(c)]++;
		}
		if (x == '-'){
			cin >> c;
			mp[get(c)]--;
		}
		if (x == '?'){
			string s;
			cin >> s;
			reverse(s.begin(), s.end());
			while (s.size() < 18)s.push_back('0');
			reverse(s.begin(), s.end());
			cout << mp[s]<<endl;
		}

	}
	
	//system ("pause");
	//return 0;
}