#include <bits/stdc++.h>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
typedef pair<string, int> psi;
typedef pair<char, int> pci;
typedef pair<int, char> pic;
const ll MOD = (ll)998244353;
const long double PI = 3.141592653589793238462643383279502884197;

ll n, k;
ll fac[200001];
ll inv[200001];

ll gcd(ll a,ll b){return b?gcd(b,a%b):a;}
ll mp(ll a,ll b){ll ret=1;while(b){if(b&1)ret=ret*a%MOD;a=a*a%MOD;b>>=1;}return ret;}

ll cmb(ll r, ll c) {
    return fac[r] * inv[c] % MOD * inv[r - c] % MOD;
}

int main() {
    fac[0] = fac[1] = 1;
    inv[0] = inv[1] = 1;

    for (int i = 2; i <= 200000; i++) {
        fac[i] = fac[i - 1] * i % MOD;
        inv[i] = mp(fac[i], MOD - 2);
    }
    scanf("%lld %lld", &n, &k);

    ll op = n - k;
    if (op <= 0) return !printf("0");
    if (op == n) return !printf("%lld", fac[n]);

    ll sum = 0;
    ll now = 0;
    ll t = 1;
    for (ll i = op; i >= 1; i--) {
        now += t * mp(i, n) * cmb(op, i) % MOD + MOD;
        now %= MOD;
        t *= -1;
     }

    printf("%lld", now * cmb(n, op) * 2 % MOD);
}