#include <iostream>
#include <algorithm>
using namespace std;

int m, s;
vector<int> maxi, mini;

bool findMax(int n, int d, int sum)
{
    if (sum>s) return false;
    if (s-sum>9*(m-n-1)) return false;

    maxi[n]=d;
    if (sum==s) return true;
    if (n==m-1) return sum==s;

    for(int i=9;i>=0;--i)
        if (findMax(n+1, i, sum+i)) return true;
    return false;
}

bool findMin(int n, int d, int sum)
{
    if (sum>s) return false;
    if (s-sum>9*(m-n-1)) return false;

    mini[n]=d;
    if (s-sum==9*(m-n-1)) return true;
    if (n==m-1) return sum==s;

    for(int i=0;i<=9;++i)
        if (findMin(n+1, i, sum+i)) return true;
    return false;
}

int main()
{
    while (cin>>m>>s) {
        if (m==1 and s==0) {
            cout<<"0 0"<<endl;
            continue;
        }

        mini=vector<int>(m, 9);
        for(int i=1;i<=9;++i) if (findMin(0, i, i)) break;

        bool found=false;
        maxi=vector<int>(m, 0);
        for(int i=9;i>0;--i) if (found=findMax(0, i, i)) break;

        if (found) {
            for(int& v: mini) cout<<v;
            cout<<' ';
            for(int& v: maxi) cout<<v;
            cout<<endl;
        }
        else {
            cout<<"-1 -1"<<endl;
        }
    }
}
