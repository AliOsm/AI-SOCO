#include <bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef pair <ll, ll> pll;

const int Max = 2e6 + 10;
const int Mod = 1e9 + 7;
const ll Inf = 1LL << 62;

struct Node {
	int x, y, z;
};

int mp[1111][1111];
char ch[1111][1111];

int dx[] = {-1, 1, 0, 0};
int dy[] = {0, 0, -1, 1};

int row[1111][1111];
int col[1111][1111];

int c_row[1111][1111];
int c_col[1111][1111];

int main() {
	int n, m;
	cin >> n >> m;

	for(int i = 1; i <= n; i++) {
		for(int j = 1; j <= m; j++) {
			cin >> ch[i][j];
			row[i][j] = row[i][j - 1] + (ch[i][j] == '*');
			col[i][j] = col[i - 1][j] + (ch[i][j] == '*');
		}
	}

	vector <Node> vec;

	for(int i = 1; i <= n; i++) {
		for(int j = 1; j <= m; j++) {
			if(ch[i][j] != '*') {
				continue;
			}

			//printf("Par %d %d\n", i, j);
			int cur = 0, l = 1, r = 500;

			while(l <= r) {
				int mid = (l + r) >> 1;
				int lfx = i - mid;
				int rtx = i + mid;
				int lfy = j - mid;
				int rty = j + mid;

			//	printf("Mid = %d %d %d %d %d\n", mid, lfx, rtx, lfy, rty);

				if(lfx > n || lfy > m || lfx < 1 || lfy < 1) {
					r = mid - 1;
				}
				else {
					int x = rty - lfy + 1;
					int res = row[i][rty] - row[i][lfy - 1];
			//		printf("%d %d\n", x, res);

					if(res != x) {
						r = mid - 1;
					}
					else {
						res = col[rtx][j] - col[lfx - 1][j];
						//printf("%d %d\n", x, res);
						if(res != x) {
							r = mid - 1;
						}
						else {
							cur = mid;
							l = mid + 1;
						}
					}
				}
			}

			//if(cur)
			//printf("%d %d %d\n", i, j, cur);
				

			//printf("****** END ******\n");
			if(cur > 0) {
				c_row[i][j - cur]++;
				c_row[i][j + cur + 1]--;

				c_col[i - cur][j]++;
				c_col[i + cur + 1][j]--;
				mp[i][j] = 1;
				vec.push_back(Node{i, j, cur});
			}
		}
	}

	for(int i = 1; i <= n; i++) {
		for(int j = 1; j <= m; j++) {
			c_row[i][j] += c_row[i][j - 1];
			c_col[i][j] += c_col[i - 1][j];
		}
	}

	for(int i = 1; i <= n; i++) {
		for(int j = 1; j <= m; j++) {
			//if(ch[i][j] == '*') {
			//	cout << i << " " << j << " " << mp[i][j] << endl;
			//}
			if(ch[i][j] == '*' && !c_col[i][j] && !c_row[i][j]) {
				cout << -1 << endl;
				return 0;
			}
		}
	}

	printf("%d\n", vec.size());

	for(Node x : vec) {
		printf("%d %d %d\n", x.x, x.y, x.z);
	}

	return 0;
}