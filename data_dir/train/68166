#include <iostream>
#include <bitset>
#include <cstdlib>

using namespace std;

const int limit=705;

int gcd(int a,int b)
{
  if (a<b) swap(a,b);
  if (b==0) return a;
  return gcd(a%b,b);
}

int n;
int a[limit];
int connected[limit][limit];
bitset<limit> can[limit][limit];
bitset<limit> canle[limit];
bitset<limit> canri[limit];

int main()
{
  cin>>n;
  for (int i=1;i<=n;i++)
    cin>>a[i];
  for (int i=1;i<=n;i++)
    for (int j=i+1;j<=n;j++)
      connected[i][j]=connected[j][i]=gcd(a[i],a[j])>1;
  for (int i=1;i<=n;i++) {
    can[i][i][i]=1;
    canle[i][i]=1;
    canri[i][i]=1;
  }
  for (int len=2;len<=n;len++) {
    for (int i=1;i+len-1<=n;i++) {
      int j=i+len-1;
      
      for (int med=i;med<j;med++) {
	if (connected[med][j] and can[i][j-1][med]) {
	  canri[i][j]=1;
	  break;
	}
      }
      for (int med=i+1;med<=j;med++) {
	if (connected[med][i] and can[i+1][j][med]) {
	  canle[i][j]=1;
	  break;
	}
      }
      for (int med=i;med<=j;med++)
	if (canri[i][med] and canle[med][j])
	  can[i][j][med]=1;
    }
  }
  for (int med=1;med<=n;med++) {
    if (can[1][n][med]) {
      cout<<"Yes"<<endl;
      exit(0);
    }
  }
  cout<<"No"<<endl;
}
