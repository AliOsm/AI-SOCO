//Daniel Grzegorzewski
#include <bits/stdc++.h>

#define MP make_pair
#define PB push_back
#define ST first
#define ND second

using namespace std;

typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VII;
typedef long long LL;

void init_ios() {
     ios_base::sync_with_stdio(0);
     cin.tie(0);
}

const int N = (int)1e5 + 10;

int n, tmp, a[N], kr[N];
bool vis[N];
VI v;
map<int, int> m;
multiset<int> s;
PII res;

int main() {
  init_ios();
  cin >> n;
  for (int i = 1; i <= n; ++i) {
    cin >> a[i];
    v.PB(a[i]);
    m[a[i]] = i;
  }
  sort(v.begin(), v.end());
  for (int x: v) {
    int i = m[x];
    vis[i] = true;
    if (vis[i-1] && vis[i+1]) {
      int l1 = i-kr[i-1];
      int l2 = kr[i+1]-i;
      s.erase(s.find(l1));
      s.erase(s.find(l2));
      s.insert(l1+1+l2);
      int rem = kr[i-1];
      kr[kr[i-1]] = kr[i+1];
      kr[kr[i+1]] = rem;
      --tmp;
    }
    else if (vis[i-1]) {
      int l = i-kr[i-1];
      s.erase(s.find(l));
      s.insert(l+1);
      kr[i] = kr[i-1];
      kr[kr[i]] = i;
    }
    else if (vis[i+1]) {
      int l = kr[i+1]-i;
      s.erase(s.find(l));
      s.insert(l+1);
      kr[i] = kr[i+1];
      kr[kr[i]] = i;
    }
    else {
      ++tmp;
      s.insert(1);
      kr[i] = i;
    }
    if (s.size() && *s.begin() == *(--s.end()) && tmp > res.ST)
      res = {tmp, x+1};
  }
  cout<<res.ND<<"\n";
}