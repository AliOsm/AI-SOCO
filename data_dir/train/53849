#include <bits/stdc++.h>
using namespace std;

int one, two;

int A[1000006], sum[1000006];
vector<int> X[1000006];

pair<int, int> dfs(int i, int par, int root)
{
    sum[i] = A[i];
    int indx1 = -1, indx2 = -1;

    for(int j=0; j<X[i].size(); j++)
    {
        if(X[i][j]==par)
            continue;

        pair<int, int> tmp = dfs(X[i][j], i, root);
        sum[i] += sum[X[i][j]];

        if(tmp.second!=-1)
            return tmp;

        if(tmp.first!=-1)
        {
            if(indx1==-1)
                indx1 = tmp.first;
            else
                indx2 = tmp.first;
        }
    }

    if(i!=root && sum[i]==two && indx1!=-1)
        indx2 = i;

    if(i!=root && sum[i]==one && indx1==-1)
        indx1 = i;

    return make_pair(indx1, indx2);
}

int main()
{
    int N;
    scanf("%d", &N);

    int sumx = 0, root;

    for(int i=1; i<=N; i++)
    {
        int u, v;
        scanf("%d %d", &u, &v);

        A[i] = v;
        sumx += v;

        if(u)
        {
            X[i].push_back(u);
            X[u].push_back(i);
        }
        else
            root = i;
    }

    if(sumx%3)
    {
        printf("-1\n");
        return 0;
    }

    one = sumx/3;
    two = one*2;
    pair<int, int> x = dfs(root, 0, root);

    if(x.first==-1 || x.second==-1)
        printf("-1\n");
    else
        printf("%d %d\n", x.first, x.second);

    return 0;
}
