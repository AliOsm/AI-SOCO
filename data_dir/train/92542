#include<bits/stdc++.h>
#define MOD 1000000007
#define INF 10000000000007;
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define pll pair<ll,ll>
#define plll pair<pll,ll>
#define vpll vector<pll>
using namespace std;
typedef long long int ll;

ll inverse(ll num)
{
    ll val=4*num;
    val++;
    val=sqrt(val);
    val=(val+1)/2;
    return val;
}

ll gcd(ll a,ll b)
{
    if(b==0)
    {
        return a;
    }
    return gcd(b,a%b);
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    ll n;
    cin>>n;
    pll coordinate[n];
    for(ll i=0;i<n;i++)
    {
        cin>>coordinate[i].first>>coordinate[i].second;
    }
    map<plll,ll> freq;
    ll diffx,diffy,constant,gcd1;
    for(ll i=0;i<n;i++)
    {
        for(ll j=i+1;j<n;j++)
        {
            diffx=coordinate[i].first-coordinate[j].first;
            diffy=coordinate[i].second-coordinate[j].second;
            constant=(diffy*coordinate[i].first)-(coordinate[i].second*diffx);
            if(diffx<0)
            {
                diffx=diffx*-1;
                diffy=diffy*-1;
                constant=constant*-1;
            }
            gcd1=gcd(diffx,fabs(diffy));
            gcd1=gcd(gcd1,fabs(constant));
            diffx=diffx/gcd1;
            diffy=diffy/gcd1;
            constant=constant/gcd1;
            if(diffx==0)
            {
                if(diffy<0)
                {
                    diffy=diffy*-1;
                    constant=constant*-1;
                }
            }
            freq[make_pair(make_pair(diffx,diffy),constant)]+=2;
        }
    }
    ll ans=(n*(n-1)*(n-2))/6;
    ll store;
    for(auto it:freq)
    {
        store=it.second;
        store=inverse(store);
        store=(store*(store-1)*(store-2))/6;
        ans=ans-store;
    }
    cout<<ans;
    return 0;
}