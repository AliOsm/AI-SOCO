#include <bits/stdc++.h>
using namespace std;

vector<int> get_pmm(const string &t, const string &p) {
  vector<int> dp(t.size() + 1);
  for (int i = 0; i < t.size(); ++i) {
    dp[i + 1] = dp[i] + (dp[i] < p.size() && t[i] == p[dp[i]]);
  }
  return dp;
}

signed main() {
  ios::sync_with_stdio(false);
  string T, P;
  cin >> T >> P;
  vector<vector<int>> pch(P.size() + 1, vector<int>(26));
  for (int i = 0; i < P.size(); ++i) {
    for (int j = 0; j < 26; ++j) {
      pch[i + 1][j] = pch[i][j] + (P[i] - 'a' == j);
    }
  }
  vector<int> pmm = get_pmm(T, P); // prefix max match
  reverse(T.begin(), T.end());
  reverse(P.begin(), P.end());
  vector<int> smm = get_pmm(T, P); 
  reverse(T.begin(), T.end());
  reverse(P.begin(), P.end());
  bool ok = true;
  for (int i = 0; i < T.size(); ++i) {
    int lb = P.size() - smm[T.size() - (i + 1)];
    lb -= (lb && P[lb - 1] == T[i]);
    int rb = pmm[i];
    rb += (rb < P.size() && P[rb] == T[i]);
    ok &= pch[rb][T[i] - 'a'] - pch[lb][T[i] - 'a'] > 0;
  }
  cout << vector<string>({"No", "Yes"})[ok] << endl;
  return 0;
}
