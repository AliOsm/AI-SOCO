   #include <bits/stdc++.h>
 
//    #include <boost/multiprecision/cpp_int.hpp>
// #define int long long
 #define inf  1000000007
 #define pa pair<int,int>
 #define ll long long
 #define pal pair<double,double>
 #define ppap pair<pa,int>
  #define PI 3.14159265358979323846
  #define paa pair<int,char>
  #define  mp make_pair
  #define  pb push_back
  #define EPS (1e-8)
                                          
    int dx[8]={0,1,0,-1,1,1,-1,-1};
    int dy[8]={1,0,-1,0,-1,1,1,-1};
                                            using namespace std;
                                   			class pa3{
                                            	public:
                                            	int x;
                                   				int y,z;
                                            	pa3(int x=0,int y=0,int z=0):x(x),y(y),z(z) {}
                                            	bool operator < (const pa3 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		 return z<p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                   				bool operator > (const pa3 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		 return z>p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa3 &p) const{
                                            		return x==p.x && y==p.y && z==p.z;
                                            	}
                                            		bool operator != (const pa3 &p) const{
                                            			return !( x==p.x && y==p.y && z==p.z);
                                            	}
                                            
                                            };
                                            
                                            class pa4{
                                            	public:
                                            	int x;
                                            	int y,z,w;
                                            	pa4(int x=0,int y=0,int z=0,int w=0):x(x),y(y),z(z),w(w) {}
                                            	bool operator < (const pa4 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		if(z!=p.z)return z<p.z;
                                            		return w<p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator > (const pa4 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		if(z!=p.z)return z>p.z;
                                            		return w>p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa4 &p) const{
                                            		return x==p.x && y==p.y && z==p.z &&w==p.w;
                                            	}
                                            		
                                            
                                            };
                                            class pa2{
                                            	public:
                                            	int x,y;
                                            	pa2(int x=0,int y=0):x(x),y(y) {}
                                            	pa2 operator + (pa2 p) {return pa2(x+p.x,y+p.y);}
                                            	pa2 operator - (pa2 p) {return pa2(x-p.x,y-p.y);}
                                            	bool operator < (const pa2 &p) const{
                                            		return y != p.y ? y<p.y: x<p.x;
                                            	}
                                            	bool operator > (const pa2 &p) const{
                                            		return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa2 &p) const{
                                            		return abs(x-p.x)==0 && abs(y-p.y)==0;
                                            	}
                                            	bool operator != (const pa2 &p) const{
                                            		return !(abs(x-p.x)==0 && abs(y-p.y)==0);
                                            	}
                                            		
                                            
                                            };
                                            
 
                      
                                string itos( int i ) {
                                ostringstream s ;
                                s << i ;
                                return s.str() ;
                                }
                                 
                                int gcd(int v,int b){
                                	if(v==0) return b;
                                	if(b==0) return v;
                                	if(v>b) return gcd(b,v);
                                	if(v==b) return b;
                                	if(b%v==0) return v;
                                	return gcd(v,b%v);
                                }
                 
                            
                                int mod;
int extgcd(int a, int b, int &x, int &y) {
    if (b == 0) {
        x = 1;
        y = 0;
        return a;
    }
    int d = extgcd(b, a%b, y, x);
    y -= a/b * x;
    return d;
}
pa operator+(const pa & l,const pa & r) {   
    return {l.first+r.first,l.second+r.second};                                    
}    
pa operator-(const pa & l,const pa & r) {   
    return {l.first-r.first,l.second-r.second};                                    
}  
                                
                int pr[10000100];
                int inv[10000010];
                
                int beki(int wa,int rr,int warukazu){
                	if(rr==0) return 1%warukazu;
                	if(rr==1) return wa%warukazu;
                	wa%=warukazu;
                	if(rr%2==1) return ((ll)beki(wa,rr-1,warukazu)*(ll)wa)%warukazu;
                	ll zx=beki(wa,rr/2,warukazu);
                	return (zx*zx)%warukazu;
                }
 
                
    			int comb(int nn,int rr){
    				if(rr<0 || rr>nn || nn<0) return 0;
    				int r=pr[nn]*inv[rr];
    				r%=mod;
    				r*=inv[nn-rr];
    				r%=mod;
    				return r;
    			}
               
                void gya(int ert){
                	pr[0]=1;
                	for(int i=1;i<=ert;i++){
                		pr[i]=((ll)pr[i-1]*i)%mod;
                	}
                		inv[ert]=beki(pr[ert],mod-2,mod);
                	for(int i=ert-1;i>=0;i--){
                		inv[i]=(ll)inv[i+1]*(i+1)%mod;
                	}
                }
                
              //   cin.tie(0);
    		//	ios::sync_with_stdio(false);
    			//priority_queue<pa3,vector<pa3>,greater<pa3>> pq;            
                 //sort(ve.begin(),ve.end(),greater<int>());
 //   mt19937(clock_per_sec);
  //  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()) ;
vector<int> V;
map<int,int>ve[100020];
vector<int> G[100020];

void dfs(int r,int p){
	if(r==1)return;
	for(auto v:G[r])if(v!=p){
		V.pb(v);
		dfs(v,r);
		
		return;
	}
}
int hai[100020];

void yaru(pa3 &x){
	if(x.x>x.y)swap(x.x,x.y);
	if(x.y>x.z)swap(x.z,x.y);
	if(x.x>x.y)swap(x.x,x.y);
	
}
void solve(){
	int n;
	cin>>n;
	V.clear();
	map<pa3,int>ma;
	for(int i=1;i<=n;i++)ve[i].clear(),G[i].clear();
	for(int i=1;i<=n-2;i++){
		pa3 z;
		cin>>z.x>>z.y>>z.z;
		yaru(z);
		ma[z]=i;
		ve[z.x][z.y]++;
		ve[z.x][z.z]++;
		ve[z.y][z.x]++;
		ve[z.y][z.z]++;
		ve[z.z][z.y]++;
		ve[z.z][z.x]++;
		
	}
	for(int i=1;i<=n;i++){
		for(auto it=ve[i].begin();it!=ve[i].end();it++){
			if((*it).second==1){
				G[i].pb((*it).first);
			}
		}
	}
	
	V.pb(1);
	V.pb(G[1][0]);
	dfs(G[1][0],1);
	
	queue<pa>qu;
	for(int i=0;i<n;i++){
		int a=V[i];
		int b=V[i>0?i-1:n-1];
		int c=V[i+1==n?0:i+1];
		pa3 z={a,b,c};
		yaru(z);
	//	cout<<z.x<<" "<<z.y<<" "<<z.z<<endl;
		if(ma.count(z))qu.push(mp(ma[z],a));
	}
	
	set<pa> se;
	for(int i=0;i<n;i++){se.insert(mp(i,V[i]));
		hai[V[i]]=i;
		cout<<V[i]<<" ";
	}
	cout<<"\n";
	if(n==3){
	cout<<1<<"\n";
		return;
	}
	vector<int>ans;
	while(qu.size()){
		pa z=qu.front();
		qu.pop();
		ans.pb(z.first);
	//	cout<<hai[z.second]<<"   "<<z.second<<endl;
		auto it=se.find(mp(hai[z.second],z.second));
		it=se.erase(it);
		//for(auto it:se)cout<<it.first<<" "<<it.second<<endl;
	//	cout<<(*it).first<<" "<<(*it).second<<endl;
		int a[5];
		if(se.size()==3) continue;
		if(it==se.end()){
			auto it2=se.begin();
			a[3]=(*it2).second;
			it2++;
			a[4]=(*it2).second;
			
		}
		else{
			a[3]=(*it).second;
			it++;
			if(it==se.end()){
				a[4]=(*se.begin()).second;
			}
			else{
				a[4]=(*it).second;
			}
			it--;
		}
		if(it==se.begin()){
			auto it2=se.end();
			it2--;
			a[2]=(*it2).second;
			it2--;
			a[1]=(*it2).second;
		}
		else{
			it--;
			a[2]=(*it).second;
			if(it==se.begin()){
				auto it2=se.end();
				it2--;
				a[1]=(*it2).second;
			}
			else{
				it--;
				a[1]=(*it).second;
			}
		}
	//	cout<<a[1]<<" "<<a[2]<<" "<<a[3]<<" "<<a[4]<<endl;
		pa3 x={a[1],a[2],a[3]};
		yaru(x);
		if(ma.count(x))qu.push(mp(ma[x],a[2]));
		 x={a[2],a[3],a[4]};
		yaru(x);
		if(ma.count(x))qu.push(mp(ma[x],a[3]));
		
		
	}
	for(auto v:ans)cout<<v<<" ";
	cout<<"\n";
}

signed main(){
	
	
cin.tie(0);
ios::sync_with_stdio(false);

	int n;
	cin>>n;
	//n=1;
	for(int i=0;i<n;i++)solve();

	return 0; 
 }