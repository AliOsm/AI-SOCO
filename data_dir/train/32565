//marico el que lo lea
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <stdlib.h>
#include <assert.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<int, int> ii;

void fastIO() {
	std::ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
}

#define FOR(i,f,t) for(int i=f; i<(int)t; i++)
#define FORR(i,f,t) for(int i=f; i>(int)t; i--)
#define FORE(i,c) for(auto i = (c).begin(); i != (c).end(); i++)
#define pb push_back
#define all(obj) obj.begin(), obj.end()
#define ms(obj, val) memset(obj, val, sizeof(obj))
#define ms2(obj, val, sz) memset(obj, val, sizeof(obj[0])*sz)

#define fst first
#define snd second

template<typename T, typename U> inline void mnze(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void mxze(T &x, U y) { if(x < y) x = y; }

void _scan( int &x ) { scanf("%d",&x); }
void _scan( long long &x ) { scanf("%lld",&x); }
void _scan( double &x ) { scanf("%lf",&x); }
void _scan( char &x ) { scanf(" %c",&x); }
void _scan( char *x ) { scanf("%s",x); }
void scan() {}
template<typename T, typename... U>
void scan( T& head, U&... tail ) { _scan(head); scan(tail...);}

template<typename T> void _dbg(const char* sdbg, T h) { cerr<<sdbg<<"="<<h<<"\n"; }
template<typename T, typename... U> void _dbg(const char* sdbg, T h, U... t) {
	while(*sdbg != ',')cerr<<*sdbg++; cerr<<"="<<h<<","; _dbg(sdbg+1, t...);
}

#ifdef LOCAL
#define debug(...) _dbg(#__VA_ARGS__, __VA_ARGS__)
#define debugv(x) {{cerr <<#x <<" = "; FORE(_i, (x)) cerr <<*_i <<", "; cerr <<"\n"; }}
#define debuga(x, sz) {{cerr <<#x <<" = "; FOR(_i, 0, sz) cerr << x[_i] <<", "; cerr <<"\n"; }}
#else
#define debug(...) (__VA_ARGS__)
#define debugv(x)
#define debuga(x, sz)
#define cerr if(0)cout
#endif

///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

const int MAXN = 1e5+5;
const ll MOD = 1e9+7;
int cnt[80], b[80];
ll pot2[MAXN];

vi p = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67};

void buildb(){
    FOR(i,1,71){
        FOR(j,0,p.size()){
            int pp=p[j], m=i, cnt=0;
            while(m%pp == 0){
                cnt++;
                m/=pp;
            }
            if(cnt&1) b[i]|=1<<j;
        }
    }
    pot2[0] = 1;
    FOR(i,1,MAXN) pot2[i] = (pot2[i-1]*2)%MOD;
}
ll odd(int n){
    if(n==0) return 0;
    return pot2[n-1];
}
ll even(int n){
    if(n==0) return 1;
    return pot2[n-1];
}

int dp[72][1<<19];
ll f(int pos, int msk){
    if(pos==71) return msk==0;
    int &ret = dp[pos][msk];
    if(ret!=-1) return ret;
    ret = (even(cnt[pos])*f(pos+1,msk) + odd(cnt[pos])*f(pos+1,msk^b[pos]))%MOD;
    return ret;
}


int main(){
    int n; scan(n);
    FOR(i,0,n){
        int x; scan(x); cnt[x]++;
    }
    buildb();
    ms(dp,-1);
    printf("%lld\n",(f(1,0)+MOD-1)%MOD);
}
