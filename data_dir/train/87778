#include <bits/stdc++.h>
using namespace std;

template< class T1, class T2 >
int upmax( T1 &x, T2 v ){
  if( x > v ) return 0;
  x = v;
  return 1;
}

signed main(){
  ios::sync_with_stdio( 0 );
  int n; cin >> n;
  vector< int > a( n );
  for( int i = 0; i < n; ++i ){
    cin >> a[ i ];
  }
  int m; cin >> m;
  vector< int > b( m );
  for( int i = 0; i < m; ++i ){
    cin >> b[ i ];
  }
  map< int, int > acnt, bcnt;
  for( int i = 0; i < n; ++i ){
    ++acnt[ a[ i ] ];
  }
  for( int i = 0; i < m; ++i ){
    ++bcnt[ b[ i ] ];
  }
  vector< int > dsc;
  for( int i = 0; i < a.size(); ++i ){
    dsc.emplace_back( a[ i ] );
  }
  for( int i = 0; i < b.size(); ++i ){
    dsc.emplace_back( b[ i ] );
  }
  sort( dsc.begin(), dsc.end() );
  dsc.erase( unique( dsc.begin(), dsc.end() ), dsc.end() );
  int best = 0;
  int id = dsc.back() + 1; // >= this is 3 pnt
  for( int i = dsc.size() - 1, a = 0, b = 0; i >= 0; --i ){
    if( acnt.count( dsc[ i ] ) ){
      a += acnt[ dsc[ i ] ];
    }
    if( bcnt.count( dsc[ i ] ) ){
      b += bcnt[ dsc[ i ] ];
    }
    if( upmax( best, a - b ) ){
      id = dsc[ i ];
    }
  }
  int ascr = 0, bscr = 0;
  for( int i = 0; i < n; ++i ){
    if( a[ i ] >= id ) ascr += 3;
    else ascr += 2;
  }
  for( int i = 0; i < m; ++i ){
    if( b[ i ] >= id ) bscr += 3;
    else bscr += 2;
  }
  cout << ascr << ":" << bscr << endl;
  return 0;
}
