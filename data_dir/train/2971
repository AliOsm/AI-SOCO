#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC target("avx,avx2,fma")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define pb push_back
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("input.txt");ofstream out("output.txt");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
typedef unsigned int uint;
typedef unsigned long long ull;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());

int a,b;
ll m[100][100], dp[100][100];
ll mn, inf = LONG_LONG_MAX;

ll calcDP(ll fir){
    if(fir>m[0][0]) return inf;
    dp[0][0] = m[0][0]-fir;
    ll c1, c2;
    for(int q=0; q<a; q++){
        for(int w= q==0; w<b; w++){
            c1 = (q ? dp[q-1][w] : inf);
            c2 = min(c1, (w ? dp[q][w-1] : inf));
            dp[q][w] = c2==inf || fir+q+w>m[q][w] ? inf : c2+(m[q][w]-(fir+q+w));
        }
    }
    return dp[a-1][b-1];
}

int main() {
    fast;
    int z; cin>>z;
    for(; z--;){
        cin>>a>>b;
        vec<ll> check;
        for(int q=0; q<a; q++){
            for(int w=0; w<b; w++){
                cin>>m[q][w];
                check.pb(m[q][w]-q-w);
            }
        }
        sort(check.begin(), check.end());
        check.erase(unique(check.begin(), check.end()), check.end());
        mn = inf;
        for(ll i : check){
            mn = min(mn, calcDP(i));
        }
        cout<<mn<<"\n";
    }
}