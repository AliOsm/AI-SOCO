#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define f(i, x, n) for(int i = x; i < (int)(n); ++i)

int x[200000], d[200000];
ll an = 2e18;
vector<int> o[3];
vector<ll> v[4];
vector<pair<ll, int> > g;

int main(){
	int n, m, k;
	scanf("%d%d%d", &n, &m, &k);
	f(i, 0, n)scanf("%d", x + i);
	int s;
	scanf("%d", &s);
	f(i, 0, s){
		int t;
		scanf("%d", &t);
		--t;
		d[t] |= 1;
	}
	scanf("%d", &s);
	f(i, 0, s){
		int t;
		scanf("%d", &t);
		--t;
		d[t] |= 2;
	}
	f(i, 0, n){
		v[d[i]].push_back(x[i]);
		if (d[i] != 3)g.push_back(make_pair(x[i], d[i]));
	}
	f(i, 0, 4){
		sort(v[i].begin(), v[i].end());
		f(j, 1, v[i].size())v[i][j] += v[i][j - 1];
	}
	sort(g.begin(), g.end());
	f(j, 1, g.size())g[j].first += g[j - 1].first;
	o[1].resize(g.size());
	o[2].resize(g.size());
	f(i, 0, g.size()){
		if (i){
			o[1][i] = o[1][i - 1];
			o[2][i] = o[2][i - 1];
		}
		if (g[i].second)++o[g[i].second][i];
	}
	f(i, 0, v[3].size() + 1){
		int z = max(k - i, 0);
		if (i + z + z > m)continue;
		if (z > (int)v[1].size() || z > (int)v[2].size())continue;
		ll r = 0;
		if (i)r += v[3][i - 1];
		if (z)r += v[1][z - 1] + v[2][z - 1];
		int gg = m - i - z - z;
		if (gg < 0 || m - i > (int)g.size())continue;
		if (gg > 0){
			int l = 0, rr = g.size() - 1;
			while (rr > l){
				int m = l + rr >> 1;
				int e = m + 1 - min(o[1][m], z) - min(o[2][m], z);
				if (e < gg)l = m + 1;
				else rr = m;
			}
			r += g[l].first;
			int y = min(o[1][l], z);
			if (y)r -= v[1][y - 1];
			y = min(o[2][l], z);
			if (y)r -= v[2][y - 1];
		}
		an = min(an, r);	
	}
	printf("%lld\n", an > 1e17 ? -1 : an);
}