#include <bits/stdc++.h>
#define pii pair<int,int>
#define pll pair<ll,ll>
#define fr first
#define sc second
#define ll  long long
#define mp make_pair
#define mod 1000000007

using namespace std;

int n;

int mx[600600];
int laz[600600];
int dp[600600];
int val[600600];
bool v[400400];
int aft[400400];

void up(int p){
    if(!laz[p])return;
    mx[2*p] += laz[p];
    val[2*p] += laz[p];
    mx[2*p+1] += laz[p];
    laz[2*p] += laz[p];
    laz[2*p+1] += laz[p];
    val[2*p+1] += laz[p];
    laz[p] = 0;
}

void update(int l,int h,int p){
    if(mx[p] < 0)return;
    if(l == h){
        dp[p] = v[val[p]];
        mx[p] = -aft[val[p]] + val[p];
        //cout<<val[p]<<" "<<aft[val[p]]<<endl;;
        int hh = mx[p];
        return ;
    }
    up(p);
    int m =(l+h)/2;
    update(l,m,2*p);
    update(m+1,h,2*p+1);
    dp[p] = dp[2*p] + dp[2*p+1];
    mx[p] = max(mx[2*p],mx[2*p+1]);
}

void add(int a,int b,int x,int l=1,int h = n,int p =1){
    if(a == l && b == h){
        mx[p] += x;
        laz[p] += x;
        val[p] += x;
        update(l,h,p);

        return;
    }
    up(p);
    int m = (l+h)/2;
    if(b <= m){
        add(a,b,x,l,m,2*p);
    }
    else if(a > m){
        add(a,b,x,m+1,h,2*p+1);
    }
    else{
        add(m+1,b,x,m+1,h,2*p+1);
        add(a,m,x,l,m,2*p);
    }
    dp[p] = dp[2*p] + dp[2*p+1];
    mx[p] = max(mx[2*p],mx[2*p+1]);
}


int cal(int a,int b,int x,int l=1,int h = n,int p =1){
    if(a == l && b == h){
        return dp[p];
    }
    up(p);
    int m = (l+h)/2;
    if(b <= m){
        return cal(a,b,x,l,m,2*p);
    }
    else if(a > m){
        return cal(a,b,x,m+1,h,2*p+1);
    }
    else{
        return cal(m+1,b,x,m+1,h,2*p+1)+cal(a,m,x,l,m,2*p);
    }
}

void pro(int n,ll s =0){
    if(s > 2e4)return;
    if(s)
        v[s] = 1;
    if(n == 0){
        return;
    }

    pro(n-1,s*10+4);
    pro(n-1,s*10+7);
}

char s[10010];

int main(){
    pro(10);
    int go = 2e5;
    for(int i= 1e5 ; i>=0 ;i --){
        if(v[i])go = i;
        aft[i] = go;
    }

    int m;
    cin>>n>>m;
    int a;
    for(int i=1 ;i <=n ; i++){
        scanf("%d",&a);
        add(i,i,a);
    }
    int l,r;
    while(m--){
        scanf("%s",s);
        if(s[0] == 'a'){
            scanf("%d%d%d",&l,&r,&a);
            add(l,r,a);
        }
        else{
            scanf("%d%d",&l,&r);
            printf("%d\n",cal(l,r,0));
        }
    }

    return 0;
}
