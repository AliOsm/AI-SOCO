#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=1e5+10;
bool captured[mx];
char s[mx];
int n;
bool can(int t){
  memset(captured,false,sizeof captured);
  for(int i=0;i<n;i++)if(s[i]=='P'){
    int at=i;
    for(int j=i-1;j>=0;j--){
      if(s[j]=='P')break;
      if(s[j]=='*'){
        if(captured[j])break;        
        captured[j]=true;
        at=j;
      }
    }
    if(i-at>t)return false;
    //2*r+i-at<=t;
    int rl=(t-(i-at))/2;
    //2*(i-at)+r<=t
    int lr=t-2*(i-at);
    int r=max(rl,lr);
    for(int j=1;j<=r && i+j<n;j++){
      if(s[i+j]=='P')break;
      captured[i+j]=true;
    }
  }
  for(int i=0;i<n;i++)if(s[i]=='*' && !captured[i])return false;
  return true;
}
int main(){
  /*
  clock_t tStart = clock();
  freopen("data.in","r",stdin);
  */
  scanf("%d %s",&n,s);
  int li=0,ls=n+n,ans=-1;
  while(li<=ls){
    int mid=(li+ls)>>1;
    if(can(mid))ls=mid-1,ans=mid;
    else li=mid+1;
  }
  printf("%d\n",ans);
//  cout<<"time="<<(double)(clock() - tStart)/CLOCKS_PER_SEC<<" seconds"<<endl;
  return 0;
}
