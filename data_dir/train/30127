//marico el que lo lea
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
using namespace std;

#define FOR(i,f,t) for(int i=f; i<(int)t; i++)
#define FORR(i,f,t) for(int i=f; i>(int)t; i--)
#define ms(obj, val) memset(obj, val, sizeof(obj))
#define ms2(obj, val, sz) memset(obj, val, sizeof(obj[0])*sz)
#define pb push_back
#define ri(x) scanf("%d",&x)
#define rii(x,y) ri(x),ri(y)

typedef long long ll;
typedef vector<int> vi;

const int MAXN = 4e5+5;

int N, sz[MAXN], best[MAXN], ans[MAXN];
vi G[MAXN];

void dfs1(int v, int p){
	sz[v]=1;
	FOR(i,0,G[v].size()){
		int u=G[v][i];
		if(u==p) continue;
		dfs1(u,v);
		sz[v] += sz[u];
		best[v] = max(best[v], best[u]);
	}
	if(sz[v] <= N/2) best[v] = sz[v];
}

void dfs(int v, int p, int cur, int curbest){
	if(cur > N/2){
		if(cur - curbest <= N/2){
			ans[v] = 1;
		}else{
			ans[v] = 0;
		}
	}else{
		ans[v] = 1;
		FOR(i,0,G[v].size()){
			int u=G[v][i];
			if(u==p) continue;	
			if(sz[u] > N/2 && sz[u] - best[u] > N/2){
				ans[v] = 0;
			}
		}
	}
	vector<pair<int, int> > bests;
	FOR(i,0,G[v].size()){
		int u=G[v][i];
		if(u==p) continue;
		bests.pb({best[u], u});
	}
	sort(bests.begin(),bests.end(),greater<pair<int,int> >());
	
	FOR(i,0,G[v].size()){
		int u=G[v][i];
		if(u==p) continue;
		int nb = 0;
		FOR(j,0,bests.size()) if(bests[j].second!=u){
			nb = bests[j].first;
			break;
		}
		if(cur <= N/2) nb = max(cur, nb);
		dfs(u,v,cur+sz[v]-sz[u], max(curbest,nb));///////
	}
}

int main(){
	ri(N);
	FOR(i,0,N-1){
		int v,u;rii(v,u); v--;u--;
		G[v].pb(u);
		G[u].pb(v);
	}
	dfs1(0,-1);
	dfs(0,-1,0,0);
	FOR(i,0,N) printf("%d ",ans[i]);
}
