#include <bits/stdc++.h>

using namespace std;

#define endl '\n'

typedef long long ll;

const ll oo = 1e17;
const int maxn = 1e5 + 5;

int n;
ll a[maxn], b[maxn], k;

int get_max(int lo, int hi, ll x){

	int ans = -1;
	while(lo <= hi){
		int mid = (lo + hi) >> 1;
		if(a[mid] > x){
			ans = mid;
			hi = mid - 1;
		}
		else lo = mid + 1;
	}
	return ans;
}

int get_min(int lo, int hi, ll x){

	int ans = -1;
	while(lo <= hi){
		int mid = (lo + hi) >> 1;
		if(a[mid] < x){
			ans = mid;
			lo = mid + 1;
		}
		else hi = mid - 1;
	}
	return ans;
}

bool ok(ll x){

	ll ans = oo;

	for(int i = 1; i <= n; i++){

		ll c = a[i] * (i - 1) - b[i - 1];
		ll val = a[i] + x;

		int pos = get_max(i + 1, n, val);

		if(pos != -1)
			c += b[n] - b[pos - 1] - (n - pos + 1) * val;
		
		ans = min(ans, c);

		c = b[n] - b[i] - a[i] * (n - i);
		val = a[i] - x;

		pos = get_min(1, i - 1, val);

		if(pos != -1)
			c += val * pos - b[pos];

		ans = min(ans, c);
	}

	return ans <= k;
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);

	cin >> n >> k;

	for(int i = 1; i <= n; i++)
		cin >> a[i];

	sort(a + 1, a + n + 1);

	for(int i = 1; i <= n; i++)
		b[i] = b[i - 1] + a[i];

	ll lo = 0, hi = a[n] - a[1], ans = -1;

	while(lo <= hi){
		ll mid = (lo + hi) >> 1;
		if(ok(mid)){
			ans = mid;
			hi = mid - 1;
		}
		else lo = mid + 1;
	} 

	cout << ans << endl;

	return 0;	
}