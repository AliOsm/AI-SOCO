#include <bits/stdc++.h>
using namespace std;

const int mod = 1000000007;
const int maxn = 2001;

int dp[maxn][1<<12];
int dp1[maxn];
int a[maxn];

int main()
{
    //freopen("input.txt", "r", stdin);
    int n, k;
    scanf("%d %d", &n, &k);
    k--;

    for (int i = 0; i < n; i++) scanf("%d", a + i);

    dp[0][0] = 1;

    for (int i = 0; i < n; i++) {
        for (int msk = 0; msk < (1 << k); msk++) {
            if (!dp[i][msk]) continue;

            if (a[i] == 0 || a[i] == 2) {
                if (msk + 1 >= (1 << k)) {
                    dp1[i + 1] = (dp1[i + 1] + dp[i][msk]) % mod;
                }
                else {
                    dp[i + 1][msk + 1] = (dp[i + 1][msk + 1] + dp[i][msk]) % mod;
                }
            }

            if (a[i] == 0 || a[i] == 4) {
                if (msk % 2 == 0) {
                    if (msk + 2 >= (1 << k)) {
                        dp1[i + 1] = (dp1[i + 1] + dp[i][msk]) % mod;
                    }
                    else {
                        dp[i + 1][msk + 2] = (dp[i + 1][msk + 2] + dp[i][msk]) % mod;
                    }
                }
                else {
                    dp[i + 1][2] = (dp[i + 1][2] + dp[i][msk]) % mod;
                }
            }
        }

        dp1[i + 1] = (dp1[i + 1] + dp1[i]) % mod;
        if (a[i] == 0) dp1[i + 1] = (dp1[i + 1] + dp1[i]) % mod;
    }

    int ans = 0;

    for (int msk = (1 << k); msk < (1 << k); msk++) {
        ans = (ans + dp[n][msk]) % mod;
    }

    ans = (ans + dp1[n]) % mod;

    printf("%d", ans);
}
