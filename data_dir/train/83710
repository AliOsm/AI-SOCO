#include <iostream>
#include <algorithm>
using namespace std;

int N, Q;
int A[5001];
int F[5001][5001];
int dp[5001][5001];

int main()
{
    ios::sync_with_stdio(0);

    cin >> N;
    for (int i = 0; i < N; i++)
    {
        cin >> A[i];
        F[1][i] = dp[1][i] = A[i];
    }

    for (int i = 2; i <= N; i++)
        for (int j = 0; j + i - 1 < N; j++)
        {
            F[i][j] = F[i - 1][j] ^ F[i - 1][j + 1];
            dp[i][j] = max(max(dp[i - 1][j], dp[i - 1][j + 1]), F[i][j]);
        }

    cin >> Q;
    for (int i = 0, a, b; i < Q; i++)
    {
        cin >> a >> b;
        a--, b--;
        int len = b - a + 1;
        cout << dp[len][a] << "\n";
    }

    return 0;
}
