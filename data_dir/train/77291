#include <bits/stdc++.h>
using namespace std;

string s[105];
bool ok[105];

string new_s[105];
bool new_ok[105];

string p, b;

int to[105][26];
int pi[105];

int main()
{	
	int n, k;
	cin >> n >> k >> p >> b;
	
	int m = p.size();
	
	for (int i = 1; i < m; i++) {
		int j = pi[i - 1];
		while (j && p[j] != p[i]) {
			j = pi[j - 1];
		}
		pi[i] = j + (p[i] == p[j]);
	}
	
	for (int i = 0; i <= m; i++) {
		for (int c = 0; c < k; c++) {
			int j = i;
			while (j && (j == m || p[j] != c + 'a')) {
				j = pi[j - 1];
			}
			to[i][c] = j + (p[j] == c + 'a');
		}
 	}
	
	ok[0] = true;
	
	for (int i = 0; i < n; i++) {
		for (int x = 0; x <= m; x++) {
			new_s[x] = "";
			new_ok[x] = false;
		}
		
		for (int x = 0; x <= m; x++) {
			if (!ok[x]) continue;
			for (int c = 0; c < k; c++) {
				bool can = false;
				if (to[x][c] == m && (i - m + 1 >= 0 && b[i - m + 1] == '1'))
					can = true;
				if (to[x][c] < m && (i - m + 1 < 0 || b[i - m + 1] == '0'))
					can = true;
				if (can) {
					new_ok[to[x][c]] = true;
					new_s[to[x][c]] = s[x] + char('a' + c);
				}
			}
		}
		
		for (int x = 0; x <= m; x++) {
			s[x] = new_s[x];
			ok[x] = new_ok[x];
		}
	}
	
	for (int x = 0; x <= m; x++) {
		if (ok[x]) {
			cout << s[x] << endl;
			return 0;
		}
	}
	
	cout << "No solution";
}
