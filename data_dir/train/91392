#include <bits/stdc++.h>
using namespace std;
#define F first
#define S second
#define R cin>>
#define Z class
#define ll long long
#define ln cout<<'\n'
#define in(a) insert(a)
#define pb(a) push_back(a)
#define pd(a) printf("%.10f\n",a)
#define mem(a) memset(a,0,sizeof(a))
#define all(c) (c).begin(),(c).end()
#define iter(c) __typeof((c).begin())
#define rrep(i,n) for(ll i=(ll)(n)-1;i>=0;i--)
#define REP(i,m,n) for(ll i=(ll)(m);i<(ll)(n);i++)
#define rep(i,n) REP(i,0,n)
#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)
template<Z A>void pr(A a){cout<<a;ln;}
template<Z A,Z B>void pr(A a,B b){cout<<a<<' ';pr(b);}
template<Z A,Z B,Z C>void pr(A a,B b,C c){cout<<a<<' ';pr(b,c);}
template<Z A,Z B,Z C,Z D>void pr(A a,B b,C c,D d){cout<<a<<' ';pr(b,c,d);}
template<Z A>void PR(A a,ll n){rep(i,n){if(i)cout<<' ';cout<<a[i];}ln;}
ll check(ll n,ll m,ll x,ll y){return x>=0&&x<n&&y>=0&&y<m;}
const ll MAX=1e9+7,MAXL=1LL<<61,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};
typedef pair<int,int> P;
typedef pair<P,int> PP;

int dp[222][222][444];
PP p[222][222][444];

void Main() {
  string s,t;
  cin >> s >> t;
  ll n=s.size(),m=t.size();
  rep(i,n+1)rep(j,m+1)rep(k,444)dp[i][j][k]=MAX;
  dp[0][0][0]=0;
  queue<PP> que;
  que.push(PP(P(0,0),0));
  while(!que.empty()) {
    PP q=que.front();que.pop();
    int x=q.F.F,y=q.F.S,k=q.S;
    if(k-1>=0&&dp[x][y][k-1]>dp[x][y][k]+1) {
      dp[x][y][k-1]=dp[x][y][k]+1;
      p[x][y][k-1]=PP(P(x,y),k);
      que.push(PP(P(x,y),k-1));
    }
    if(k+1<444&&dp[x][y][k+1]>dp[x][y][k]+1) {
      dp[x][y][k+1]=dp[x][y][k]+1;
      p[x][y][k+1]=PP(P(x,y),k);
      que.push(PP(P(x,y),k+1));
    }
    if(x<n) {
      if(k-1>=0&&s[x]==')'&&dp[x+1][y][k-1]>dp[x][y][k]+1) {
        dp[x+1][y][k-1]=dp[x][y][k]+1;
        p[x+1][y][k-1]=PP(P(x,y),k);
        que.push(PP(P(x+1,y),k-1));
      }
      if(k+1<444&&s[x]=='('&&dp[x+1][y][k+1]>dp[x][y][k]+1) {
        dp[x+1][y][k+1]=dp[x][y][k]+1;
        p[x+1][y][k+1]=PP(P(x,y),k);
        que.push(PP(P(x+1,y),k+1));
      }
    }
    if(y<m) {
      if(k-1>=0&&t[y]==')'&&dp[x][y+1][k-1]>dp[x][y][k]+1) {
        dp[x][y+1][k-1]=dp[x][y][k]+1;
        p[x][y+1][k-1]=PP(P(x,y),k);
        que.push(PP(P(x,y+1),k-1));
      }
      if(k+1<444&&t[y]=='('&&dp[x][y+1][k+1]>dp[x][y][k]+1) {
        dp[x][y+1][k+1]=dp[x][y][k]+1;
        p[x][y+1][k+1]=PP(P(x,y),k);
        que.push(PP(P(x,y+1),k+1));
      }
    }
    if(x<n&&y<m) {
      if(k-1>=0&&s[x]==')'&&t[y]==')'&&dp[x+1][y+1][k-1]>dp[x][y][k]+1) {
        dp[x+1][y+1][k-1]=dp[x][y][k]+1;
        p[x+1][y+1][k-1]=PP(P(x,y),k);
        que.push(PP(P(x+1,y+1),k-1));
      }
      if(k+1<444&&s[x]=='('&&t[y]=='('&&dp[x+1][y+1][k+1]>dp[x][y][k]+1) {
        dp[x+1][y+1][k+1]=dp[x][y][k]+1;
        p[x+1][y+1][k+1]=PP(P(x,y),k);
        que.push(PP(P(x+1,y+1),k+1));
      }
    }
  }
  PP q=p[n][m][0];
  string ans="";
  while(q!=PP(P(0,0),0)) {
    PP pp=p[q.F.F][q.F.S][q.S];
    if(pp.S<q.S) ans+='(';
    else ans+=')';
    q=pp;
  }
  reverse(all(ans));
  ans+=')';
  pr(ans);
  /*
  string r=getStr(s,t,s.size(),t.size());
  int x=0,y=0;
  string ans="";
  rep(i,r.size()) {
    while(s[x]!=r[i]) {
      ans+=s[x];
      x++;
    }
    while(t[y]!=r[i]) {
      ans+=t[y];
      y++;
    }
    ans+=r[i];
    x++,y++;
  }
  pr(r);
  pr(ans);
  */
}

int main(){ios::sync_with_stdio(0);cin.tie(0);Main();return 0;}
