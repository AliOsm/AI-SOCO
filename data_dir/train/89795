#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<stack>
#include<random>
#include<chrono>
#include<queue>
#include<list>
#include<math.h>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define nu 100001
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i, n) for (int i = 0; i < int(n); i++)
ll INF= 9223372036854775807;
const ll mod=1000000007;
ll  MOD(ll  a,ll  b)
{
    if(a>b)
        return a-b;
    else
        return b-a;
}
ll  max3(ll  a,ll  b,ll c)
{
    return max(c,max(a,b));
}
ll min3(ll a,ll  b,ll  c)
{
    return min(a,min(b,c));
}
ll  power(ll  x,ll  y )
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x);//%mod;
        y = y>>1;
        x = (x*x);//%mod;
    }
    return res;//%mod;
}
ll  power1(ll  x,ll  y )
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x)%mod;
        y = y>>1;
        x = (x*x)%mod;
    }
    return res%mod;
}
ll logg(ll  a)
{
    ll  x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
ll  gcd(ll  a,ll   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
ll abso(ll x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll  a,ll  b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
ll modinv(ll x)
{
    return power1(x,mod-2);
}
int main()
{
    //fastio;
    int n,q;
    cin>>n>>q;
    vector<pair<int,int>> a(q);
    for(int i=0;i<q;i++)
    {
        cin>>a[i].f>>a[i].s;
    }
    sort(all(a));
    vector<ll> coord(n+1);
    for(int i=0;i<q;i++)
    {
        coord[a[i].f]++;
        if(a[i].s<n)
        {
            coord[a[i].s+1]--;
        }
    }
    for(int i=2;i<=n;i++)
    {
        coord[i]+=coord[i-1];
    }
    vector<int> num1(n+1,0);
    vector<int>num2(n+1,0);
    int sum=0;
    for(int i=1;i<=n;i++)
    {
        if(coord[i]>0)
        {
            sum++;
        }
        if(coord[i]==1)
        {
            num1[i]++;
        }
        if(coord[i]==2)
        {
            num2[i]++;
        }
        
    }
    for(int i=2;i<=n;i++)
    {
        num1[i]+=num1[i-1];
        num2[i]+=num2[i-1];
    }
    int ans=0;
    for(int i=0;i<q;i++)
    {
        int l1=0,r1=0,l2=0,r2=0;
        for(int j=i+1;j<q;j++)
        {
            l1=a[i].f;
            l2=a[j].f;
            r1=a[i].s;
            r2=a[j].s;
            if(r1<l2)
            {
                ans=max(ans,sum-(num1[r1]-num1[l1-1])-num1[r2]+num1[l2-1]);
            }
            else
            {
                if(r1<r2)
                {
                    ans=max(ans,sum-((num1[l2-1]-num1[l1-1]))-(num2[r1]-num2[l2-1])-num1[r2]+num1[r1]);
                }
                else
                {
                    ans=max(ans,sum-(num1[l2-1]-num1[l1-1])-(num2[r2]-num2[l2-1])-(num1[r1]-num1[r2]));
                }
            }
        }
    }
    cout<<ans;
}