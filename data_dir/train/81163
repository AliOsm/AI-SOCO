#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

typedef unsigned long long ull;
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector< ii > vii;

#define INF 0x3F3F3F3F
#define LINF 0x3F3F3F3F3F3F3F3FLL
#define pb push_back
#define mp make_pair
#define pq priority_queue
#define LSONE(s) ((s)&(-s)) //LASTBIT
#define DEG_to_RAD(X)   (X * PI / 180)
#define F first
#define S second
#define PI 2*acos(0)
 
#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

//////////////////////
int dx[] = {1,-1,0,0};
int dy[] = {0,0,-1,1};	
//////////////////////

const int N = 500100;

vector<ii>lev[N];
int L[N], R[N], n, m;
vi g[N];
int sz = 0;
char s[N];
int maxi = 0;

void dfs( int x, int p )
{
	maxi = max( maxi, p );
	L[x] = sz++;
	int at = s[x]-'a';
	if( lev[p].size() == 0 ) lev[p].pb(ii(0,0));
	lev[p].pb(ii(L[x],(1<<at)));
	for(int i=0;i<g[x].size();++i) dfs(g[x][i],p+1);
	R[x] = sz;
}


int main()
{
	//ios::sync_with_stdio(0);
	scanf("%d %d",&n,&m);
	for(int i=2;i<=n;++i)
	{
		int x; scanf("%d",&x);
		g[x].pb(i);
	}
	scanf(" %s",s+1);
	dfs(1,1);
	for(int i=1;i<=maxi;++i) for(int j=1;j<lev[i].size();++j) lev[i][j].S^=lev[i][j-1].S;
	//debug("%d %d %d\n",(int)lev[1].size(),(int)lev[2].size(),(int)lev[3].size());
	while(m--)
	{
		int x,b; scanf("%d %d",&x,&b);

		vector< ii > :: iterator it1,it2;
		it1 = lower_bound(lev[b].begin(),lev[b].end(),ii(L[x],INF));
		it2 = lower_bound(lev[b].begin(),lev[b].end(),ii(R[x],INF));
		it2--;
		it1--;
		//debug("%lld %lld\n",it1->F,it2->F);
		//for(int i=0;i<lev[b].size();++i) debug("%lld %lld\n",lev[b][i].F,lev[b][i].S);
		if( it1 == it2 ) 
		{
			puts("Yes");
			continue;
		}
		int tam = it2-it1;
		ll at = (it2->S)^(it1->S);
		if( tam&1 ) 
		{
			if( __builtin_popcount(at) == 1 ) puts("Yes");
			else puts("No");
		}
		else 
		{
			if( !at ) puts("Yes");
			else puts("No");
		}
	}

	return 0;
}	