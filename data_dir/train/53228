#include <bits/stdc++.h>

using namespace std;

#define ll long long int

ll n,ara[200005];

set < ll > st;

bool is_valid(ll row, ll col, ll row_dif, ll col_dif)
{
    if(row_dif!=1) return false;
    for(ll i=1; i<n; i++)
    {
        ll pos_row,pos_col,cur_row,cur_col;

        ll r1=ara[i-1]-row_dif;

        pos_row=r1/col,pos_col=r1%col;

        if(r1%col) pos_row++;

        if(pos_col==0) pos_col=col;

        cur_row=ara[i-1]/col,cur_col=ara[i-1]%col;

        if(ara[i-1]%col) cur_row++;

        if(cur_col==0) cur_col=col;

        if(ara[i]==r1 && r1>=1 && r1<=(row*col) && pos_row==cur_row) continue;

        //if(i==2) cout<<"ok: "<<endl;


        ll r2=ara[i-1]+row_dif;

        pos_row=r2/col,pos_col=r2%col;

        if(r2%col) pos_row++;

        if(pos_col==0) pos_col=col;

        if(ara[i]==r2 && r2>=1 && r2<=(row*col) && pos_row==cur_row) continue;
               // if(i==2) cout<<"ok: "<<endl;



        ll c1=ara[i-1]-col_dif;

        pos_row=c1/col,pos_col=c1%col;

        if(c1%col) pos_row++;

        if(pos_col==0) pos_col=col;

        if(ara[i]==c1 && c1>=1 && c1<=(row*col) && pos_col==cur_col) continue;
               // if(i==2) cout<<"ok: "<<endl;




        ll c2=ara[i-1]+col_dif;

        pos_row=c2/col,pos_col=c2%col;

        if(c2%col) pos_row++;

        if(pos_col==0) pos_col=col;

        if(ara[i]==c2 && c2>=1 && c2<=(row*col) && pos_col==cur_col) continue;
               // if(i==2) cout<<"ok: "<<endl;


        return false;


    }

    return true;
}

int main()
{
    ll i,j,mx=0;

    scanf("%I64d",&n);

    bool flag=false;

    for(i=0; i<n; i++)
    {
        scanf("%I64d",&ara[i]);

        if(i)
        {
            ll temp=ara[i]-ara[i-1];

            if(temp<0) temp=-temp;

            st.insert(temp);

            if(!temp) flag=true;
        }

        mx=max(mx,ara[i]);
    }

    if(st.size()>=3 || flag)
    {
        printf("NO\n");

        return 0;
    }

    ll row,col;

    if(st.size()==2)
    {
        set < ll > :: iterator it;

        it=st.begin();

        ll row_dif=*it;

        it++;

        ll col_dif=*it;

        col=col_dif;

        row=mx/col;

        if(mx%col) row++;

        bool p=is_valid(row,col,row_dif,col_dif);

        if(!p)
        {
            printf("NO\n");

            return 0;
        }

        printf("YES\n");

        printf("%I64d %I64d\n",row,col);

        return 0;

        //cout<<row_dif<<' '<<col_dif<<endl;
    }

    else if(st.size()==1)
    {
        set < ll > :: iterator it;

        it=st.begin();

        printf("YES\n");

        if(*it==1)
        {
            ll temp=1e9;

            printf("%I64d %I64d\n",temp,mx);
        }

        else
        {
            col=*it;

            row=mx/col;

            if(mx%col) row++;

            printf("%I64d %I64d\n",row,col);

        }

        return 0;

    }

    else
    {
        printf("YES\n");

        printf("%I64d %I64d\n",ara[0],ara[0]);

        return 0;
    }

}
