#include <bits/stdc++.h>

using namespace std;

#define fo(i,j,n) for(i=j;i<n;++i)
#define Fo(i,j,n) for(i=n-1;i>=j;--i)
#define foo(i,j,v) fo(i,j,sz(v))
#define Foo(i,j,v) Fo(i,j,sz(v))
#define li(v) v.begin(),v.end()
#define sz(v) ((int)v.size())
#define CLR(a,v) memset((a),(v),sizeof(a))

#define pi (2*acos(0))
#define eps (1e-6)

typedef long long Long;

const int imax = 1e9+7;
const Long lmax = 1e18;

const int maxn = 1e5 + 10;
bool vis[maxn];
struct xx
{
    Long x,y;
    double dist;
};

xx a,b,t;
vector<xx> v(0);

double getv(Long x1, Long y1, Long x2, Long y2)
{
    double x = x1 - x2, y = y1 - y2;
    x *= x; y *= y;
    return sqrt(x+y);
}

double getv( xx p )
{
    int i,pos = -1;
    double mi = 0,val;
    foo(i,0,v)if(vis[i] == false)
    {
        mi = getv(v[i].x, v[i].y,p.x,p.y) - getv(v[i].x, v[i].y, t.x, t.y);
        pos = i;
        break;
    }
    foo(i,i+1,v)if(vis[i] == false)
    {
        val = getv(v[i].x, v[i].y,p.x,p.y) - getv(v[i].x, v[i].y, t.x, t.y);
        if(val < mi){ mi = val; pos = i; }
    }
    if(pos >= 0)vis[pos] = true;
    return mi;
}

int calc()
{
    cin >> a.x >> a.y >> b.x >> b.y >> t.x >> t.y;
    int i,n; cin >> n; v.resize(n); double ans = 0,val = 0,val1,val2;
    foo(i,0,v){ cin >> v[i].x >> v[i].y; v[i].dist = getv(v[i].x, v[i].y,t.x,t.y); val += v[i].dist + v[i].dist; }
    CLR(vis,false); val1 = getv(a); val2 = getv(b); ans = val + val1; ans = min(ans, val + val1 + val2);
    CLR(vis,false); val1 = getv(b); val2 = getv(a); ans = min(ans, val + val1); ans = min(ans, val + val1 + val2);
    printf("%.6lf",ans);
	return 0;
}

int main()
{
	//ios_base::sync_with_stdio(0);
	#ifdef localhost
	freopen("E://input.txt","r",stdin);
	//freopen("E://output.txt","w",stdout);
	#endif

    calc();
	printf("\n");
	return 0;
}
