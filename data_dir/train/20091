#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define Fit(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000000
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
#define eps 1e-9
typedef pair<int, int> II;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI 2 * acos(0)

#define maxn 2005

string s;
vector<int> vt;

ll cal(){
    ll res = 0, ret = 1, dau = 0;
    Rep(i, sz(s)){
        if(i & 1){
            if(s[i] == '+'){
                dau = 0;
                res += ret;
//              cout << ret << endl;
                ret = 1;
            } else{
                dau = 1;
            }
        } else{
            if(dau == 0){
                ret = s[i] - '0';
            } else{
                ret *= s[i] - '0';
            }
        }
    }
    return res + ret;
}

pair<ll, ll> calcu(int start, int finish){
    if(finish < start) return mp(0, 1);
    ll res = 0, ret = 1, dau = 0;
    for(int i = start; i <= finish; i++){
        if(i & 1){
            if(s[i] == '+'){
                dau = 0;
                res += ret;
//              cout << ret << endl;
                ret = 1;
            } else{
                dau = 1;
            }
        } else{
            if(dau == 0){
                ret = s[i] - '0';
            } else{
                ret *= s[i] - '0';
            }
        }
    }
    return mp(res, ret);
}

ll call(int id1, int id2){
    pair<ll, ll> P1 = calcu(0, vt[id1] - 1);
    pair<ll, ll> P2 = calcu(vt[id1] + 1, vt[id2] - 1);

    int mm = sz(s);
    for(int i = vt[id2]; i < sz(s); i++) if(s[i] == '+'){
        mm = i;
        break;
    }

    pair<ll, ll> P3 = calcu(vt[id2] + 1, mm - 1);
    pair<ll, ll> P4 = calcu(mm + 1, sz(s) - 1);

    ll res = P1.fi + P1.se * (P2.fi + P2.se) * (P3.fi + P3.se) + (P4.fi + P4.se);
    if(mm == sz(s)) res--;
    return res;
}

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
//    freopen("in.txt", "r", stdin);

    cin >> s;
    vt.pb(-1);
    Rep(i, sz(s)){
        if(s[i] == '*') vt.pb(i);
    }

    vt.pb(sz(s));

    ll res = cal();

    Rep(i, sz(vt) - 1) for(int j = i + 1; j < sz(vt); j++){
//      cout << i << " " << j << " " << call(i, j) << endl;
        res = max(res, call(i, j));
    }

    cout << res << endl;

    return 0;

}
