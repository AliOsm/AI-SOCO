// KALAM
# include <bits/stdc++.h>

using namespace std;
const int N = 20 , Mod = 1e9 + 7;
int n , m;
vector < int > a[N];
long long dp[(1 << N)][N] , A;
bool adj[N][N];
int main(){
	ios_base::sync_with_stdio(false);cin.tie(0);
	
	cin >> n >> m;
	for(int i = 1;i <= m;i++){
		int v , u;cin >> v >> u;v--;u--;a[v].push_back(u);a[u].push_back(v);
		adj[v][u] = adj[u][v] = true;
	}
	
	for(int msk = 1;msk < (1 << n);msk++){
		for(int i = 0;i < n;i++){
			if((msk & (1 << i)) == 0)continue;
			if(__builtin_popcount(msk) == 1){dp[msk][i] = 1;continue;}
			if((msk & (- msk)) == (1 << i))continue;
			for(auto u : a[i]){
				if((msk & (1 << u)) == 0)continue;
				dp[msk][i] += dp[msk - (1 << i)][u];
			}
			for(auto u : a[i]){
				if((msk & (1 << u)) == 0)continue;
				if((msk & (- msk)) != (1 << u))continue;
				for(auto v : a[i]){
					if(v == u || (msk & (1 << v)) == 0)continue;
					A += dp[msk - (1 << i)][v];
				}
			}
		}
	}
	cout << A / 2;
	
	return 0;
}