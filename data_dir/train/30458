#include <bits/stdc++.h>
#define err(args...) {}
#ifdef DEBUG
#include "_debug.cpp"
#endif
using namespace std;
using ll = long long;
using ld = long double;
template <typename T> using lim = numeric_limits<T>;
template <typename T> istream& operator>>(istream& is, vector<T>& a) { for(T& x : a) { is >> x; } return is; }
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int n;
    cin >> n;
    vector<int> a(n);
    cin >> a;
    const int N = 22;
    static int com[1 << N][2];
    fill_n(&com[0][0], (1 << N) * 2, -1);
    for(int x : a) {
        com[x][0] = x;
    }
    for(int i = 0; i < N; i++) {
        for(int mask = 0; mask < 1 << N; mask++) {
            if(mask & (1 << i)) {
                com[mask][(i+1)&1] = com[mask ^ (1 << i)][i&1];
            } else {
                com[mask][(i+1)&1] = com[mask][i&1] != -1 ? com[mask][i&1] : com[mask ^ (1 << i)][i&1];
            }
        }
    }
    for(int x : a) {
        cout << com[x][N&1] << " ";
    }
    cout << endl;
    return 0;
}
