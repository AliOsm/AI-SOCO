////!multi
//bool solve(const vpii &check, int s, int m){
//    int screens = 0;
//    for(auto _ : check){
//        int total = (_.X+s-1)/s;
//        screens += total*_.Y;
//        if(total*(s-1) > _.X)
//            return false;
//    }
//    return screens <= m;
//}
//int _(){
//    int n;
//    cin >> n;
//    vi cnt(n+1), arr(n);
//    cin >> arr;
//    for(int x : arr)
//        cnt[x]++;
//    arr = cnt;
//    cnt = vi(n+1);
//    map<int,int> keep;
//    for(int x : arr)
//        if(x)
//            keep[x]++;
//    vpii check;
//    for(auto _ : keep)
//        check.pb(_);
//    for(int m = 1; m <= n; ++m){
//        int s = (n+m-1)/m;
//        if(solve(check,s,m))
//            return m;
//        if(n%m == 0)
//            if(solve(check,s+1,m))
//                return m;
//    }
//    assert(false);
//}
//
#include <map>
#include <iomanip>
#include <cassert>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define pb push_back
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define X first
#define Y second
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
T1 istream& operator>>(istream& stream, vector<T>& t){
    return read(all(t), stream);
}
T1 istream& read(T b, T e, istream& stream){
    for(T it = b; it != e; ++it)
        stream >> *it;
    return stream;
}
//!multi
bool solve(const vpii &check, int s, int m){
    int screens = 0;
    for(auto _ : check){
        int total = (_.X+s-1)/s;
        screens += total*_.Y;
        if(total*(s-1) > _.X)
            return false;
    }
    return screens <= m;
}
int _(){
    int n;
    cin >> n;
    vi cnt(n+1), arr(n);
    cin >> arr;
    for(int x : arr)
        cnt[x]++;
    arr = cnt;
    cnt = vi(n+1);
    map<int,int> keep;
    for(int x : arr)
        if(x)
            keep[x]++;
    vpii check;
    for(auto _ : keep)
        check.pb(_);
    for(int m = 1; m <= n; ++m){
        int s = (n+m-1)/m;
        if(solve(check,s,m))
            return m;
        if(n%m == 0)
            if(solve(check,s+1,m))
                return m;
    }
    assert(false);
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
    int t;
    cin >> t;
    for(int i = 1; i <= t; ++i){
        cout << _() << '\n';
    }
}
