//                             In The Name Of Allah
#include <bits/stdc++.h>
#define	ss second
#define ff first
#define use_fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define ret(n) return cout << n, 0
#define se(n) cout << setprecision(n) << fixed
#define pb push_back
#define int long long
#define ld long double
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops")
#pragma GCC optimize("no-stack-protector,fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
using namespace std; 
 
const int N = 3e6 + 100, OO = 1e9 + 7, T = 410, M = 998244353, P = 6151, SQ = 1000;
typedef pair <int, int> pii;
int lg[N];

string pala(string s) {
	int n = (int)s.size();
	string S = "";
	for(int i = 0; i < n; i++) {
		S += '.';
		S += s[i];
	}
	S += '.';
	int H = (int)S.size();
	fill(lg, lg + H + 20, 0);
	int ct = 0, lt = 0;
	int cnt = 0;
	for(int i = 0; i < H; i++) {
		if(S[i] != S[H - i - 1])
			break;
		cnt++;
	}
	int mx = 0, h = 0;
	for(int i = 1; i < H - 1; i++) {
    	if(lt > i)
  	      lg[i] = min(lg[ct - (i - ct)], lt - i);
    	while(i + lg[i] + 1 < H && i - lg[i] - 1 >= 0 && S[i + lg[i] + 1] == S[i - lg[i] - 1])
     	   lg[i]++;
    	if(i + lg[i] > lt) {
			lt = i + lg[i];
			ct = i;
		}
		int g = i - lg[i];
		if(i - lg[i] <= cnt && i + lg[i] >= mx && (2 * g + 2 * lg[i] + 1) <= H)
			mx = i + lg[i], h = i; 
	}
	string tq = "", tp = "";
	for(int i = 1; i <= h + lg[h]; i += 2)
		tq += S[i];
	for(int i = 1; i < h - lg[h]; i += 2) 
		tp += S[H - i - 1];
	reverse(tp.begin(), tp.end());
	tq += tp;
	return tq;
}

void solve() {
	string s;
	cin >> s;
	string s1 = pala(s);
	reverse(s.begin(), s.end());
	string s2 = pala(s);
	if((int)s2.size() > (int)s.size() || (int)s1.size() > (int)s.size()) {
		cout << lg[N + 10] << endl;
		return;
	}
	if((int)s1.size() >= (int)s2.size())
		cout << s1 << endl;
	else
		cout << s2 << endl;
	return;
}

int32_t main() {
	use_fast;	
	int t;
	cin >> t;
	while(t--) 
		solve();
	return 0;
} 
/*
be carefull :
1- if not solve after 20 min, read again twice
2- after submit read the code again
3- fun with contest
4- ... 
*/
