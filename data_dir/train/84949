#include <bits/stdc++.h>

using namespace std;

template <class T> void mini(T &l, T r) {l = min(l, r);}
template <class T> void maxi(T &l, T r) {l = max(l, r);}

string to_string(string s) {
  return '"' + s + '"';
}
 
string to_string(const char* s) {
  return to_string((string) s);
}
 
template <typename A, typename B>
string to_string(pair<A, B> p) {
  return "(" + to_string(p.first) + ", " + to_string(p.second) + ")";
}
 
template <typename A>
string to_string(A v) {
  bool first = true;
  string res = "{";
  for (const auto &x : v) {
    if (!first) {
      res += ", ";
    }
    first = false;
    res += to_string(x);
  }
  res += "}";
  return res;
}
 
void debug_out() { cerr << endl; }
 
template <typename Head, typename... Tail>
void debug_out(Head H, Tail... T) {
  cerr << " " << to_string(H);
  debug_out(T...);
}
 
#ifdef LOCAL
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif

const int N = 2e5 + 10;

int n;
int a[N], t[N];
int T;
vector < pair <int, int> > vp;
vector <int> v;

bool check(int x, bool stv = 0) {
  vector < pair <int, int> > vt;
  for (int i = 0; i < n; ++i) {
    if (a[i] >= x) {
      vt.emplace_back(t[i], i);
    }
  }
  if (vt.size() < x) return 0;
  sort(vt.begin(), vt.end());
  int sum = 0;
  for (int i = 0; i < x; ++i) {
    sum += t[vt[i].second];
    if (stv) v.push_back(vt[i].second);
  }
  if (sum <= T) return 1;
  return 0;
}

void run() {
  cin >> n >> T;
  for (int i = 0; i < n; ++i) {
    cin >> a[i] >> t[i];
    vp.emplace_back(a[i], t[i]);
  }

  int l = 0, r = n + 1;
  while (l + 1 < r) {
    int mid = (l + r) >> 1;
    if (check(mid)) {
      l = mid;
    } else {
      r = mid;
    }
  }
  
  cout << l << endl;
  cout << l << endl;
  check(l, 1);
  for (auto x : v) {
    cout << x + 1 << " ";
  }
  cout << endl;
  
}

int main() {
  run();
  return 0;
}
