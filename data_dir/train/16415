#include <ext/rope>
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long
typedef vector<vector<ll>> mat;

const ll K = 105 , mod = 998244353;
int n , k , l , x , out , all;
vector<deque<int>> dp(K);
vector<int> sdp(K);

int main()
{
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);

    cin >> n >> k >> l;
    if(l == 1) return cout << 0 , 0;
    
    cin >> x;
    if(~x)
    {
        dp[x].push_back(1);
        sdp[x] = 1;
    }
    else
    {
        for(int i = 1 ; i <= k ; i++)
            dp[i].push_back(1) , sdp[i] = 1;
    }

    auto expand = [&](int i , int all)
    {
        all -= sdp[i];
        if(all < 0) all += mod;
        dp[i].push_front(all);
        sdp[i] += all;
        if(sdp[i] >= mod) sdp[i] -= mod;
        if(dp[i].size() == l)
        {
            sdp[i] -= dp[i].back();
            if(sdp[i] < 0) sdp[i] += mod;
            dp[i].pop_back();
        }
    };

    for(int i = 1 ; i < n ; i++)
    {
        cin >> x;
        all = 0;
        for(int j = 1 ; j <= k ; j++)
            all += sdp[j] , all %= mod;

        if(~x)
        {
            for(int j = 1 ; j <= k ; j++)
                if(x == j)
                {
                    expand(j , all);
                }
                else
                {
                    dp[j].clear();
                    sdp[j] = 0;
                }
        }
        else
            for(int j = 1 ; j <= k ;j++)
                expand(j , all);
    }

    for(int i = 1 ; i <= k ; i++)
        out += sdp[i] , out %= mod;
    cout << out;

    return 0;
}
