#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using OS = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

#define ll long long
#define ld double
#define ull unsigned long long

const int N = 2e5 + 5;
int t, n, p[N], c[N], vis[N], m, v[N];

bool ok(int d) {
    for (int j = 0; j < d; j++) {
        int z = c[v[j]];
        for (int k = j + d; k < m; k += d) {
            if (c[v[k]] != z) {
                z = -1;
                break;
            }
        }
        if (z != -1) return 1;
    }
    return 0;
}

int main() {
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);

    cin >> t;
    while (t--) {
        cin >> n;
        for (int i = 0; i < n; i++) cin >> p[i], p[i]--, vis[i] = 0;
        for (int i = 0; i < n; i++) cin >> c[i];

        int out = n;
        for (int i = 0; i < n; i++) {
            if (vis[i]) continue;

            m = 0;
            int u = i;
            while (!vis[u]) {
                vis[u] = 1;
                v[m++] = u;
                u = p[u];
            }

            for (int d = 1; d * d <= m; d++)
                if (m % d == 0) {
                    if (ok(d)) out = min(out, d);
                    else if (d * d < m) {
                        if (ok(m / d)) out = min(out, m / d);
                    }
                }
        }

        cout << out << '\n';
    }

    return 0;
}