/* Simple thinking to Solve by DP*/
/* Complexity O(n) */
/** Important Observation:
- The Substr is "Good Palindrome" if it's begin and end with same char.
**/
#include <iostream>
using namespace std;
int ca,cb;
int la, lb;
string s;

bool odd(int x)
{
   if (x%2==0) return false;
   else
       return true;
}

int main()
{
    ios::sync_with_stdio(false);
    cin>>s;
    int leada, leadb;
    for (int i=0; i<s.size();i++)
    if (s[i]=='a')
    {
       leada = i;
       break;
    }
    for (int i=0; i<s.size(); i++)
    if (s[i]=='b')
    {
        leadb = i;
        break;
    }
    for (int i=0; i<s.size(); i++)
    {
        if (s[i]=='a')
        {
            if (odd(i-leada+1)) la++;
            else
                ca++;
        }
        if (s[i]=='b')
        {
            if (odd(i-leadb+1)) lb++;
            else
                cb++;
        }
    }
    long long res_l = 0;
    long long res_c = 0;
    for (int i=0; i<s.size(); i++)
    {
        if (s[i]=='a')
        {
           if (odd(i-leada+1))
           {
              res_l+=ca;
              res_c+=la;
              la--;
           }
           else
           {
              res_l+=la;
              res_c+=ca;
              ca--;
           }
        }
        if (s[i]=='b')
        {
           if (odd(i-leadb+1))
           {
              res_l+=cb;
              res_c+=lb;
              lb--;
           }
           else
           {
              res_l+=lb;
              res_c+=cb;
              cb--;
           }
        }
    }
    cout<<res_l<<" "<<res_c;
    return 0;
}
