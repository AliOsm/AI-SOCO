#include <bits/stdc++.h>
//#define int long long
using namespace std;
#define IOS ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0)
inline int in(){int32_t x ; scanf("%d",&x) ; return x ; }
inline long long lin(){long long x ; scanf("%lld",&x) ; return x ;}
const int maxn  = 1e6 + 10;
const int mod = 1e9 + 7;
map<int,string> mp;
//map<string,int> revMp;
int tot;
vector<int> g[maxn];
int res;
int cur;
vector<string> Height[maxn];
inline void dfs(int node,int h = 1)
{
    int child = stoi(mp[node + 1]);
    cur = node + 2;
    res = max(res,h);
    Height[h].push_back(mp[node]);
    while (child --)
    {
        g[node].push_back(cur);
        dfs(cur,h+1);
    }
}
int32_t main()
{
    string s;
    cin >> s;
    int n = (int)s.size();
    for (int i = 0 ; i < s.size() ; i ++)
    {
        if (i == 0 || s[i-1] == ',')
        {
            int j = i;
            while(j + 1 < n && s[j +1] != ',') j ++;
            string cur = s.substr(i,j-i+1);
            mp[tot] = cur;
//            revMp[cur] = tot++;
            tot ++;
            i = j + 1;
        }
    }
    while (cur < tot)
        dfs(cur);
    
    cout << res << endl;
    for (int i = 1 ; i <= res ; i ++ , cout << "\n")
        for (auto x : Height[i])
            cout << x << " ";
}