#include <algorithm>
#include <cstdio>
#include <cstring>

using namespace std;

const int MaxN = 1000006, NA = -1, MaxK = 22,
 MaxL = 1 << MaxK, AndL = MaxL - 1, MaxM = MaxL >> 5, AndM = MaxM - 1;

unsigned a [MaxN];
unsigned f [MaxM];
int n;

int main (void)
{
 int i, j, k, t;

 while (scanf (" %d", &n) != EOF)
 {
  memset (f, 0, sizeof (f));
  for (i = 0; i < n; i++)
  {
   scanf (" %d", &a[i]);
   k = a[i] ^ AndL;
   f[k >> 5] |= 1u << (k & 31);
  }
  for (i = AndM; i >= 0; i--)
  {
   f[i] |= (f[i] >>  1) & 0x55555555;
   f[i] |= (f[i] >>  2) & 0x33333333;
   f[i] |= (f[i] >>  4) & 0x0F0F0F0F;
   f[i] |= (f[i] >>  8) & 0x00FF00FF;
   f[i] |= (f[i] >> 16) & 0x0000FFFF;
  }
  for (j = 1; j < MaxM; j <<= 1)
  {
   k = j ^ AndM;
   for (i = k, k ^= (1u << 31); i >= 0; i = (i - 1) & k)
    f[i] |= f[i ^ j];
  }
  for (i = 0; i < n; i++)
  {
   k = a[i];
   if (f[k >> 5] & (1u << (k & 31)))
   {
    for (t = k ^ AndL, j = t & -t; j; t ^= j, j = t & -t)
    {
     k ^= j;
     if (!(f[k >> 5] & (1u << (k & 31))))
      k ^= j;
    }
    printf ("%d", k ^ AndL);
   }
   else
    printf ("-1");
   putchar ("\n "[i + 1 < n]);
  }
 }

 return 0;
}
