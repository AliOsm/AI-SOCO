#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <set>

using namespace std;

typedef long long ll;

#define GRID 1000

int grid[GRID+1][GRID+1];

ll go_left(int x_s, int y_s){
  ll b_c = 0;

  while(x_s <= GRID && y_s <= GRID){
    if(grid[y_s][x_s]) b_c++;

    x_s++; y_s++;
  }

  return (b_c*(b_c-1))/ll(2);
}

ll go_right(int x_s, int y_s){
  ll b_c = 0;

  while(x_s >= 1 && y_s <= GRID){
    if(grid[y_s][x_s]) b_c++;

    x_s--; y_s++;
  }

  return (b_c*(b_c-1))/ll(2);
}

int main(){

  int n;
  ll sum = 0;
  cin >> n;

  int x, y;
  for(int i=0; i<n; i++){
    cin >> x >> y;
    grid[y][x] = 1;
  }

  for(int i = 1; i <= GRID; i++){
    sum += go_left(i, 1);
    sum += go_right(i, 1);
  }

  for(int i = 2; i <= GRID; i++){
    sum += go_left(1, i);
  }

  for(int i = 2; i <= GRID; i++){
    sum += go_right(GRID, i);
  }

  cout << sum << endl;
  return 0;
}
