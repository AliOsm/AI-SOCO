//bismillahir rahmanir rahim
#include <iostream>
#include <math.h>
#include <string.h>
#include <vector>
#include <stack>
#include <algorithm>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cstdio>
#include <iterator>
#define         ll                         long  long
#define         lf                         double 
#define         pb(x)                      push_back(x)
#define         ull                        unsigned long long
#define         sfl(a)                     scanf("%lld",&a)
#define         sf(a)                      scanf("%d",&a)
#define         pf(a)                      printf("%d\n",a)
#define         pfl(a)                     printf("%lld\n",a)
#define         pdl(a)                     printf("%llf\n",a)
#define         FOR(x,n)                   for(int x=1;x<=n;++x)
#define         vii                        vector< ll > v
#define         pi                         3.14159265359
#define         mex                        10000000
#define         pii                        pair< ll , ll >
#define         mem(m,a)                   memset( m, a,sizeof m)
#define         mp(a,b)                make_pair(a,b)
#define     maxn                       100000
#define     mod                        1000000007
#define     INF            1e17
#define     f1             first
#define     f2             second
#define     all(v)                 v.begin(),v.end()
#define     PI                         acos(-1)
#define     printminusone              printf("-1\n")
#define     bug            printf("bug")

using namespace std;

ll cnt[1000010];

bool f[1000010];

int main(){

    ll n , k;

    sfl ( n ),sfl ( k );

    ll a[n+10];

    memset( f , true , sizeof f );

    ll tot = 0;

    for ( ll i = 1; i <= n; i++ ){

        sfl ( a[i] );
    }

    ll left = 1, right = 1;

    ll mx = -1, l=0 ,r=0;


    while ( left <= n and right <= n ){

        while ( tot <= k and right <= n ){

            if ( f[a[right]] ){

                tot++;

                f[a[right]] = false;

                if ( tot > k ){

                    f[a[right]] = true;

                    tot--;

                    right--;

                    break;
                }
            }

            if ( tot < k ){

                cnt[a[right]]++;

                if  ( right < n ){

                    right++;
                }

                else{

                    break;
                }
            }

            if ( tot==k ){

                if ( right < n ){

                    cnt[a[right]]++;

                    right++;
                }

                else{

                    break;
                }
            }

        
        }

        //cout << right << endl;

        if ( tot <= k ){

            if ( right-left+1 > mx ){

                mx = right-left+1;

                l = left;

                r = right;
            }
        }

        if ( tot >=  k ){

            while ( tot >= k and left <= n ){

                cnt[a[left]]--;

                if ( cnt[a[left]] <= 0 ){

                    tot--;

                    f[a[left]] = true;
                }

                if ( left < n ){

                    left++;
                }

                else{

                    break;
                }
                
            }
        }

        right++;

        //cout << left <<' '<<right << endl;

    }

    printf("%lld %lld\n",l,r);
}