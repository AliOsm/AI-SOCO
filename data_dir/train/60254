#define _CRT_SECURE_NO_WARNINGS
#include <cstdio>
#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
#include <map>
#include <iterator>
#include <functional>
#include <set>
#include <stack>
#include <queue>
#include <deque>
#include <fstream>
#include <iomanip>
#include <numeric>
#include <cmath>
#include <list>
#include <sstream>
#include <unordered_map>
#include <complex>
#include <stdio.h>
using namespace std;
#pragma GCC optimize("O3")
#pragma GCC target("sse4")

typedef double LD;
typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int, int> PII;
typedef pair<LD, LD> PDD;
typedef pair<LL, LL> PLL;
typedef vector<int> VI;
typedef vector<LL> VLL;
typedef vector<char> VCH;
typedef vector<LD> VLD;
typedef vector<string> VS;
typedef vector<VS> VSS;
typedef vector<VI> VVI;
typedef vector<VLL> VVLL;
typedef vector<VCH> VVCH;
typedef vector<PII> VPII;
typedef vector<PLL> VPLL;
typedef vector<PDD> VPDD;
#define MP make_pair
#define PB push_back
#define X first
#define Y second
#define next fake_next
#define prev fake_prev
#define left fake_left
#define right fake_right

#define FOR(i,a,b) for(int i = (a); i < (b); ++i)
#define RFOR(i,b,a) for(int i = (b) - 1; i >= (a); --i)
#define REP(i, t) FOR(i,0,t)
#define ALL(a) a.begin(), a.end()
#define SZ(a) (int)((a).size())

const LD PI = acos(-1.0);
const LD EPS = 1e-9;
const LL mod = 1000000007;
const LL INF = 1e9;
const LL LINF = 1e18 + 10;
const LL MAX = 3e5 + 7;
const LL MAXN = 1e5 + 1;

int cnt[MAXN][26];
int ye[26];

int main()
{
	ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
	//freopen("In.txt", "r", stdin);
	
	string s;
	cin >> s;
	int n = SZ(s);
	int m;
	cin >> m;
	int l, r;

	FOR(i, 0, n)
	{
		if (i)
		{
			FOR(j, 0, 26)
				cnt[i][j] = cnt[i - 1][j];
		}

		cnt[i][s[i] - 'a']++;
	}

	FOR(i, 0, m)
	{
		cin >> l >> r;
		--l; --r;
		if (r - l + 1< 3)
		{
			cout << "YES" << endl;
			continue;
		}

		FOR(j, 0, 26)
		{
			ye[j] = cnt[r][j];
			if (l)
				ye[j] -= cnt[l - 1][j];
		}
		bool ok = 1;
		
		FOR(j, 0, 23)
			if (ye[j])
			{
				ok = 0;
				break;
			}

		if (!ok)
		{
			cout << "NO" << endl;
			continue;
		}

		int x = ye[23];
		int y = ye[24];
		int z = ye[25];

		int mi = min(x, min(y, z));
		int ma = max(x, max(y, z));
		if (ma > mi + 1)
			cout << "NO" << endl;
		else
			cout << "YES" << endl;
	}


	cin >> n;
	return 0;
}