// Charan Sriramula

#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll lg=14;
const ll N=2e5+5;
const ll M=1e5+5;
const ll INF=1e18;
const ll mod= 998244353;
const double PI = 3.14159265358979323846;

#define ints(n) scanf("%d",&n)
#define intp(n) printf("%d\n",n)
#define longs(n) scanf("%lld",&n)
#define longp(n) printf("%lld\n",n)

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define ms(dp,val) memset(dp,val,sizeof(dp))
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1LL;x=(x*x)%m;}return ans%m;}

vector<ll> dig;

ll len(ll cur)
{
	dig.clear();
	while(cur){dig.pb(cur%10);cur/=10;}
	reverse(all(dig));
	return dig.size();
}

ll F(ll r,ll num)
{
	ll cnt=0;
	//if(r==1){return num;}
	for(ll i=1;i<r;i++)
	{
		ll rem=i-2;
		if(i<=2){cnt+=9;continue;}
		for(ll j=1;j<=9;j++){cnt+=(pow(10,rem));}
	}
	ll rem=max(0LL,r-2);
	for(ll i=1;i<=min(dig[0],9LL);i++)
	{
		if(i<dig[0]){cnt+=pow(10,rem);}
		else
		{
			ll tot=dig.size()-1,res=0;
			for(ll i=1;i<dig.size()-1;i++){res+=(dig[i])*(pow(10,tot-(i+1)));}
			cnt+=res;
			if(dig[0]<=dig[dig.size()-1]){cnt++;}
		}
	}
	return cnt;
}

int main()
{
	ll l,r;
	cin>>l>>r;
	if(l==1){cout<<F(len(r),r)<<endl;exit(0);}
	//cout<<F(len(r))<<" "<<F(len(l-1))<<endl;
	cout<<F(len(r),r)-F(len(l-1),l-1)<<endl;
}
