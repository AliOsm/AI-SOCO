#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define ll long long
#define F first
#define S second
#define FOR(rem, msk, k) for (int rem = msk; rem < (int)k; rem++)

const int N = 100;
bool ok[N][N];

int dx[] = {0, 0, 1, -1};
int dy[] = {1, -1, 0, 0};

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    vector<int> ansX, ansY, ansD;

    int n, m;
    cin >> n >> m;
    string a[n];
    FOR(i, 0, n)
    cin >> a[i];
    FOR(i, 1, n - 1)
    FOR(j, 1, m - 1)
    {
        if (a[i][j] == '.')
            continue;
        int x[4];
        int y[4];
        for (int k = 0; k < 4; k++)
        {
            x[k] = i + dx[k];
            y[k] = j + dy[k];
        }
        int len = 0;
        while (y[0] < m && y[1] >= 0 && x[2] < n && x[3] >= 0)
        {
            bool valid = true;
            for (int k = 0; k < 4; k++)
                if (a[x[k]][y[k]] == '.')
                    valid = false;
            if (!valid)
                break;
            len++;
            ok[i][j] = true;
            for (int k = 0; k < 4; k++)
            {
                ok[x[k]][y[k]] = true;
                x[k] += dx[k];
                y[k] += dy[k];
            }
        }
        if (len > 0)
        {
            ansX.push_back(i + 1);
            ansY.push_back(j + 1);
            ansD.push_back(len);
        }
    }

    bool ans = true;
    FOR(i, 0, n)
    {
        FOR(j, 0, m)
        {
            if (a[i][j] == '*' && !ok[i][j])
                ans = false;
        }
    }
    if (ans)
    {
        cout << ansX.size() << endl;
        for (int i = 0; i < ansX.size(); i++)
            cout << ansX[i] << " " << ansY[i] << " " << ansD[i] << endl;
    }else
    cout << -1 << endl;
}