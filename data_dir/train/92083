#include<bits/stdc++.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#define endl '\n'
#define int long long


int32_t  main()
{
    IOS;
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<int> v(n);
        for(int i=0;i<n;i++)
            cin>>v[i];  
        int ind1=-1,ind2=-1;
        int vis[n+1];
        memset(vis,0,sizeof(vis));
        for(int i=0;i<n;i++)
        {
            ind1=max(ind1,v[i]);
            vis[v[i]]++;
        }
        int ans=-1;
        for(int i=1;i<=n;i++)
        {
            if(vis[i]==2)
            {
                ans=i;
                continue;
            }
            break;
        }
        if(ans+ind1!=n)
        {
            cout<<0<<endl;
            continue;
        }
        int flag=0;
        for(int i=ans+1;i<=ind1;i++)
        {
            if(vis[i]==0)
            {
                flag=1;
                break;
            }
        }
        if(flag||ans==-1)
        {
            cout<<0<<endl;
            continue;
        }
        int count=0;
        set<int> tmp;
        set<int> s;
        for(int i=0;i<ind1;i++)
            s.insert(v[i]);
        if(s.size()==ind1)
            tmp.insert(ind1);
        s.clear();
        for(int i=0,j=n-1;i<ind1;i++,j--)
            s.insert(v[j]);
        if(s.size()==ind1)
            tmp.insert(ans);
        cout<<tmp.size()<<endl;
        for(auto it=tmp.begin();it!=tmp.end();it++)
            cout<<*it<<" "<<n-*it<<endl;
    }
}