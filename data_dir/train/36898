#include <bits/stdc++.h>
using namespace std;

int getint()
{
    int v = 0, c;
    while (isdigit(c = getchar()))
        v = 10 * v + c - '0';
    return v;
}

int main()
{
    const long long MAX = numeric_limits<long long>::max();
    int n = getint(), m = getint();
    vector<int> pr(n + 1);
    map<long long, set<int>> u = {{0, {1}}, {MAX, {0}}};
    for (int i = 2; i <= n; i++)
        u[MAX].insert(i);
    vector<long long> d(n + 1, MAX);
    d[1] = 0;
    vector<vector<pair<int, int>>> e(n + 1);
    for (int i = 0; i < m; i++) {
        int a = getint(), b = getint(), w = getint();
        e[a].push_back({b, w});
        e[b].push_back({a, w});
    }
    while (true) {
        set<int> &s = u.begin()->second;
        int c = *s.begin();
        if (d[c] == MAX)
            break;
        s.erase(c);
        if (s.empty())
            u.erase(u.begin());
        for (auto &p : e[c])
            if (d[c] + p.second < d[p.first]) {
                long long d1 = d[p.first], d2 = d[c] + p.second;
                u[d1].erase(p.first), u[d2].insert(p.first);
                if (u[d1].empty())
                    u.erase(d1);
                d[p.first] = d2;
                pr[p.first] = c;
            }
    }
    if (d[n] == MAX)
        puts("-1");
    else {
        list<int> v;
        for (int i = n; i; i = pr[i])
            v.push_front(i);
        for (int x : v)
            printf("%d%c", x, x == n ? '\n' : ' ');
    }
}