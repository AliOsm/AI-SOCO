#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>
#include <queue>

using namespace std;

typedef long long ll;

const int N = 100010;
const int mod = 1e9 + 7;

int n, k, a[31], b[2], sum[1 << 24 | 1];
int dp[1 << 24 | 1];
bool vis[1 << 24 | 1];
char p[1 << 24 | 1];

int main(){
	scanf("%d", &n);
	for(int i = 0; i < n; i++)
		p[1 << i] = i;
	for(int i = 0; i < n; i++)
		scanf("%d", &a[i]);
	scanf("%d", &k);
	for(int i = 0; i < k; i++)
		scanf("%d", &b[i]);
	sort(b, b + k);
	for(int i = 1; i < (1 << n); i++){
		sum[i] += sum[(i & (-i)) ^ i] + a[p[i & (-i)]];
		int tmp = sum[i];
		for(int j = 0; j < k; j++)
			if(b[j] == tmp) vis[i] = 1;
	}
	dp[0] = 1;
	for(int i = 1; i < (1 << n); i++){
		if(vis[i]) continue;
		int x = i;
		while(x){
			int t = x & (-x);
			dp[i] += dp[i ^ t];
			if(dp[i] > mod) dp[i] -= mod;
			x ^= t;
		}
	}
	cout << dp[(1 << n) - 1] << endl;
	return 0;
}