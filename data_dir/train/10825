#include<bits/stdc++.h> 
#include<unordered_map>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef pair<ll, ll> p2;
const int Max = 1000 + 5, Mod = 2520;

int n, dp[Max][Mod + 5], m[Max];
ll k[Max];
vi G[Max], v;
int t[Max][Mod + 5];
set<int> s;

int Try(int u, ll c)
{
	int& ret = dp[u][c];
	if (ret != -1)
	{
		if (ret != 0)
			return ret;
		s.clear();
		for (int i = t[u][c]; i < v.size(); i++)
			s.insert(v[i]);
		return ret = s.size();
	}
	ret = 0;
	t[u][c] = v.size();
	v.push_back(u);
	ll cc = c;
	cc += k[u];
	cc = (cc % Mod + Mod) % Mod;
	ret = Try(G[u][cc % m[u]], cc);
	t[u][c] = -1;
	v.pop_back();
	return ret;
}

int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> k[i], k[i] = (k[i] % Mod + Mod) % Mod;
	for (int i = 1; i <= n; i++)
	{
		cin >> m[i];
		G[i].reserve(m[i]);
		for (int j = 0; j < m[i]; j++)
		{
			int x;
			cin >> x;
			G[i].push_back(x);
		}
	}
	memset(dp, -1, sizeof(dp));
	memset(t, -1, sizeof(t));
	int q;
	cin >> q;
	while (q--)
	{
		ll x, y;
		cin >> x >> y;
		y = (y % Mod + Mod) % Mod;
		cout << Try(x, y) << '\n';
	}
	return 0;
}