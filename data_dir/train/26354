/**
 *    author:  skmonir
 *    created: 12-Feb-2018 20:31:11
**/

#include <bits/stdc++.h>

using namespace std;

#define endl                '\n'
#define TN                  typename
#define mod                 1000000007LL
#define all(x)              x.begin(), x.end()
#define rall(x)             x.rbegin(), x.rend()
#define mem(x, y)           memset(x, y, sizeof x)
#define FOR(x, l, r)        for (int x = l; x <= r; ++x)
#define ROF(x, l, r)        for (int x = l; x >= r; --x)

template <TN T> inline void Int(T &n) {
    n = 0; int f = 1; register int ch = getchar();
    for (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -1;
    for (; isdigit(ch); ch = getchar()) n = (n << 3) + (n << 1) + ch - '0';
    n = n * f;
}

template <TN T> T gcd(T a, T b) {return !b ? a : gcd(b, a % b);}
template <TN T> T modinverse(T bs) {return modpow(bs, mod - 2);}
template <TN T> inline void umin(T &a, T b) {a = a < b ? a : b;}
template <TN T> inline void umax(T &a, T b) {a = a > b ? a : b;}
template <TN T, TN W> inline void Int(T &x, W &y) {Int(x), Int(y);}
template <TN T, TN W, TN Q> inline void Int(T &x, W &y, Q &z) {Int(x, y), Int(z);}

const int N = 3e5 + 7;
const int inf = 1e9 + 7;

int dp[N], temp[N];
vector < pair <int, int> > w[N];

int main() {
    int n, m; Int(n, m);
    FOR (i, 1, m) {
        int u, v, c; Int(u, v, c);
        w[c].push_back({u, v});
    }

    FOR (i, 1, N - 1) {
        FOR (j, 1, w[i].size()) {
            temp[w[i][j - 1].second] = 0;
        }
        FOR (j, 1, w[i].size()) {
            int u = w[i][j - 1].first, v = w[i][j - 1].second;
            umax(temp[v], dp[u] + 1);
        }
        FOR (j, 1, w[i].size()) {
            umax(dp[w[i][j - 1].second], temp[w[i][j - 1].second]);
        }
    }

    int res = *max_element(dp + 1, dp + n + 1);
    printf("%d\n", res);

    return 0;
}