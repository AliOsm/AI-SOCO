#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<int, int> pp;
double PI=acos(-1);
int const N = 5e5 + 10,M=1e7+1, oo = 1e9;
const int mod = oo+7;
const ll  OO = 2e18;

int n,m,d,aa[N],mrk[N],an;
vector<int > adj[N];
vector<int > inside[N];
int dfs(int u,int p,int d){
    int mx=-1;
    for(auto v:adj[u]){
        if(v==p){
            inside[u].push_back(-2);
            continue;
        }
        int t=dfs(v,u,d+1);
        if(t>0)inside[u].push_back(t-d);
        else inside[u].push_back(-2);
        mx=max(mx,inside[u].back());
    }
    if(mrk[u]){
        if(mx<0)mx=d;
        else mx+=d;
    }else if(mx>0)mx+=d;
    return mx;
}

void dfs2(int u,int p,int up){
    int mx1=-1,mx2=-1;
    for(auto v:inside[u]){
        if(v>mx1){
            mx2=mx1;
            mx1=v;
        }else if(v>mx2)mx2=v;
    }
//    cout<<mx1<<' '<<up<<' '<<u<<' '<<(max(mx1,up)<=d)<<endl;
    if(max(mx1,up)<=d)an++;
    for(int i=0;i<(int)adj[u].size();i++){
        int v=adj[u][i];
        int c=inside[u][i];
        if(v==p)continue;
        int to;
        if(c==mx1)to=max(up,mx2);
        else to=max(up,mx1);
        if(to<=0)dfs2(v,u,mrk[u]);
        else dfs2(v,u,to+1);
    }
}
int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin>>n>>m>>d;
    for(int i=0;i<m;i++)cin>>aa[i],mrk[aa[i]]=1;
    for(int i=0;i<n-1;i++){
        int a,b;
        cin>>a>>b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    dfs(1,0,0);
    dfs2(1,0,0);
    cout<<an;
    return 0;
}
    