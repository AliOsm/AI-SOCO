#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int maxn=1e6+7;
const int inf=INT_MAX;
const ll inff=1e18;
const ll mod=1e9+7;
#define pii pair<int,int>
#define mkp make_pair
#define F first
#define S second
#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
//#define int ll

#ifdef HNO2
#define IOS
#else
#define endl '\n'
#define IOS ios::sync_with_stdio(0); cin.tie(0);
#endif // HNO2

int n;
int a[127][6];
int cnt[7];

int b[7];

vector<int> score={0,500,1000,1500,2000,2500,3000};
vector<int> rate={1,2,4,8,16,32,1000};

int ans=inf;

void dfs(int now)
{
    if (now==5)
    {
        int sum1=0,sum2=0;
        for (int j=1;j<=5;j++)
        {
            if (a[1][j]!=-1) sum1+=score[b[j]]-score[b[j]]/250*a[1][j];
            if (a[2][j]!=-1) sum2+=score[b[j]]-score[b[j]]/250*a[2][j];
        }
        if (sum1<=sum2) return;

        for (int j=n;j<=4500;j++)
        {
            int ok=1;
            for (int k=1;k<=5;k++)
            {
                if (a[1][k]==-1)
                {
                    if (b[k]==6&&cnt[k]*rate[b[k]-1]<=j
                        ||b[k]!=6&&cnt[k]*rate[b[k]]>j&&cnt[k]*rate[b[k]-1]<=j) ;
                    else
                    {
                        ok=0;
                        break;
                    }
                }
                else
                {
                    int l;
                    if (b[k]==6) l=max(0,cnt[k]);
                    else l=max(cnt[k],(j%rate[b[k]]==0 ? j/rate[b[k]]+1 : (j+rate[b[k]]-1)/rate[b[k]]));
                int r=min((j/rate[b[k]-1]),j-(n-cnt[k]));
                if (l>r)
                    {
                        ok=0;
                        break;
                    }
                }
            }
            if (ok)
            {
                ans=min(ans,j);
                break;
            }
        }
        return;
    }
    for (int j=1;j<=6;j++)
    {
        b[now+1]=j;
        dfs(now+1);
    }
}

int32_t main()
{
    IOS
    cin>>n;
    for (int i=1;i<=n;i++)
        for (int j=1;j<=5;j++)
        {
            cin>>a[i][j];
            if (a[i][j]!=-1) cnt[j]++;
        }

    dfs(0);
    if (ans==inf) cout<<-1<<endl;
    else cout<<ans-n<<endl;
}

