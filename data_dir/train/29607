#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end())
#define cpresent(s,x) (find(all(s),x) != s.end())
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;
typedef long double ld;
typedef vector<vector<ll> > mat;

vector<pll> v[100005],vt[100005];

ll pp[100005],n,par[25][100005],h[100005],m,vis[100005],dis[55][100005],lvl[100005];

set<int> bad;

int f(int i)
{
	if(pp[i]!=i)
	pp[i]=f(pp[i]);
	return pp[i];
}

void merge(int a,int b,int c)
{
	int fa=f(a),fb=f(b);
	if(fa==fb)
	{
		bad.insert(a);
		bad.insert(b);
		return;
	}

	vt[a].pb(mp(b,c));
	vt[b].pb(mp(a,c));
	pp[fa]=fb;
}

void dfs(int at,int p=1,ll l=0,int l1=0)
{
	lvl[at]=l1;
	h[at]=l;
	par[0][at]=p;
	rep(i,1,24)
	par[i][at]=par[i-1][par[i-1][at]];
	tr(vt[at],it)
	{
		int to=it->ff;
		ll dd=it->ss;
		if(to!=p)
		{
			dfs(to,at,l+dd,l1+1);
		}
	}
}

int lca(int u,int v)
{
	if(lvl[u]>lvl[v])
	swap(u,v);
	ll dd=lvl[v]-lvl[u];
	rep(i,0,24)
	{
		if(dd&(1<<i))
		v=par[i][v];
	}
	if(u==v)return u;
	ren(i,24,0)
	{
		if(par[i][u]!=par[i][v])
		{
			u=par[i][u];
			v=par[i][v];
		}
	}
	return par[0][u];
}

ll dist(int a,int b)
{
	return h[a]+h[b]-2*h[lca(a,b)];
}

int main()
{ios_base::sync_with_stdio(false);
cin.tie(0);
cin>>n>>m;
rep(i,1,n)pp[i]=i;
while(m--)
{
	int a,b,c;
	cin>>a>>b>>c;
	v[a].pb(mp(b,c));
	v[b].pb(mp(a,c));
	merge(a,b,c);
}

dfs(1);

int ii=0;

tr(bad,it)
{
	int bb=*it;
	rep(i,1,n)
	dis[ii][i]=1e18+7;
	priority_queue<pll> q;
	dis[ii][bb]=0;
	q.push(mp(0,bb));
	while(!q.empty())
	{
		pll p=q.top();
		ll d1=-p.ff;
		int at=p.ss;
		q.pop();
		
		tr(v[at],it)
		{
			int to=it->ff;
			ll dd=it->ss;
			if(dis[ii][at]+dd<dis[ii][to])
			{
				dis[ii][to]=dis[ii][at]+dd;
				q.push(mp(-dis[ii][to],to));
			}
		}
	}
	ii++;
}


int q;
cin>>q;

while(q--)
{
	int a,b;
	cin>>a>>b;
	ll ans=dist(a,b);
	rep(i,0,ii-1)
	{
		ans=min(ans,dis[i][a]+dis[i][b]);
	}
	ol(ans);on;
}


return 0;
}


