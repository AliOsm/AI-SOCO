#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;

typedef long long ll;
typedef pair<int,int> ii;
typedef tree<ii,null_type,less<ii>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;

int main() {
	cin.tie(0); cout.tie(0); ios_base::sync_with_stdio(0);
	int n,m,k; cin>>n>>m>>k;
	vector<set<int>> adj(n);
	for (int i=0; i<m; i++) {
		int a,b; cin>>a>>b; a--; b--;
		adj[a].insert(b);
		adj[b].insert(a);
	}
	bool flag[n];
	memset(flag,false,sizeof flag);
	deque<int> ret;
	ret.push_back(0); flag[0]=true;
	bool up=true;
	while(up) {
		up=false;
		for (auto add : adj[ret.back()]) {
			if(!flag[add]) {
				ret.push_back(add), flag[add]=true;
				up=true; break;
			}
		}
	}
	while(!adj[ret.back()].count(ret.front()))
		ret.pop_front();
	cout<<ret.size()<<"\n";
	for (auto x : ret)
		cout<<x+1<<" ";
	cout<<"\n";
	return 0;
}
