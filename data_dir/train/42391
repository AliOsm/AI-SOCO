/*input
3 3 1
***
.*.
*.*
***

*/
#include<bits/stdc++.h>
using namespace std;

typedef long long ll ;
typedef pair<int,int> pii;
typedef pair<ll,ll>   pll;

#define err(l,a1) cerr<<"debug : "<<l<<" arg : "<<a1<<endl; 

#define pb push_back
#define mp make_pair
#define fs first 
#define mems(m,b) memset(m,b,sizeof(m));
#define all(v) v.begin(),v.end()
#define ss second
#define rep(i,a,b) for(int i = a;i<b;i++)
#define repr(i,a,b) for(int i = a;i>=b;--i)
#define sd(x) scanf("%d",&x);

#define mod 1000000007
#define inf mod+9
#define maxn 55
#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

int T=1;

int n,m,k;
bool mat[55][55];
bool cmat[55][55];


void dfs(int i,int j,vector<pii> & lk){
	if(i<0 or j<0 or i>=n or j>=m) return;
	if(i+1<n-1 and mat[i+1][j]==0){
		lk.pb(mp(i+1,j));
		mat[i+1][j]=1;
		dfs(i+1,j,lk);	
	} 
	if(i-1>0 and mat[i-1][j]==0){
		lk.pb({i-1,j});
		mat[i-1][j]=1;
		dfs(i-1,j,lk);	
	} 
	if(j+1<m-1 and mat[i][j+1]==0){
		lk.pb({i,j+1});
		mat[i][j+1]=1;
		dfs(i,j+1,lk);	
	} 
	if(j-1>0 and mat[i][j-1]==0) lk.pb({i,j-1}),mat[i][j-1]=1,dfs(i,j-1,lk);
}

void dfs2(int i,int j){
	if(i<0 or j<0 or i>=n or j>=m) return;
	if(i+1<n and mat[i+1][j]==0) mat[i+1][j]=1,dfs2(i+1,j);
	if(i-1>=0 and mat[i-1][j]==0) mat[i-1][j]=1,dfs2(i-1,j);
	if(j+1<m and mat[i][j+1]==0) mat[i][j+1]=1,dfs2(i,j+1);
	if(j-1>=0 and mat[i][j-1]==0) mat[i][j-1]=1,dfs2(i,j-1);
}

vector<pair<int,int>> lakes[2500];
int main(){
	fast 
	//cin>>T; 
	while(T--){
		cin>>n>>m>>k;
		char c;
		for(int i =0;i<n;++i){
			for(int j =0;j<m;++j){
				cin>>c;
				mat[i][j]= c=='.'?0:1;
				cmat[i][j] = mat[i][j];
			}
		}
		for(int i =0;i<n;++i){		
			if(mat[i][0]==0){
			 	mat[i][0]=1;
			 	dfs2(i,0);	
			}				
			if(mat[i][m-1]==0){
			 	mat[i][m-1]=1;
			 	dfs2(i,m-1);		
			}			
		}
		for(int j = 0;j<m;++j){
			if(mat[0][j]==0){
				mat[0][j]=1;dfs2(0,j);	
			} 		
			if(mat[n-1][j]==0){
				mat[n-1][j]=1;
				dfs2(n-1,j);	
			} 		
		}
		int lno = 0;
		for(int i = 0;i<n;++i){
			for(int j = 0;j<m;++j){
				if(mat[i][j]==0){
					lakes[lno].pb({i,j});
					mat[i][j] = 1;
					dfs(i,j,lakes[lno++]);
				}
			}
		}
		set<pair<int,int>> s;
		for(int i =0;i<lno;++i){
			s.insert({lakes[i].size(),i});
		}
		int ans = 0;
		for(auto l: s){
			if(lno==k) break;
			for(auto e: lakes[l.ss]){
				cmat[e.fs][e.ss] = 1;
				ans++;
			}
			lno--;
		}
		cout<<ans<<'\n';
		for(int i =0 ;i<n;++i,cout<<'\n')
			for(int j =0;j<m;++j){
				cout<<(cmat[i][j]?"*":".");
			}
	}	
return 0;
}
