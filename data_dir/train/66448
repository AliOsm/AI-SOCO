#include <bits/stdc++.h>
using namespace std;

const long long maxn = 1e18;

signed main() {
  set<long long> m3;
  for (int t = 3; t < 61; t += 2) {
    for (int i = 2; ; ++i) {
      long long u = 1LL;
      bool flag = false;
      for (int j = 0; j < t; ++j) {
        if (1.0 * u * i > maxn) {
          flag = true;
          break;
        }
        u *= i;
      }
      if (flag) break;
      long long su = sqrt(u);
      for (int j = -1; j < 2; ++j) if ((su + j) * (su + j) == u) flag = true;
      if (flag) continue;
      m3.emplace(u);
    }
  }
  vector<long long> v3(m3.begin(), m3.end());
  //for (long long q : v3) cout << q << ' ';
  ios::sync_with_stdio(false);
  int T;
  cin >> T;
  while (T--) {
    long long N;
    cin >> N;
    long long c = upper_bound(v3.begin(), v3.end(), N) - v3.begin();
    long long sn = sqrt(N);
    for (int i = 0; ; ++i) {
      if (sn * sn <= N && (sn + 1) * (sn + 1) > N) break;
      else ++sn;
    }
    cout << N - (sn + c) << endl;
  }
}
