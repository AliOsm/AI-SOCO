////!multi
//string __(){
//    _(string,s);
//    _(string,t);
//    sort(all(s));
//    rep(i,sz(t)-sz(s)+1){
//        string w = t.substr(i,sz(s));
//        sort(all(w));
//        if(w == s)
//            return "YES";
//    }
//    return "NO";
//}
//
//
#include <iomanip>
#include <algorithm>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define REP_ZERO_INT(i,r) for(int i = 0; i < r; ++i)
#define GET_REP_MACRO(_1,_2,_3,_4,NAME,...) NAME
#define rep(...) GET_REP_MACRO(__VA_ARGS__,REP_ANY,REP_INT,REP_ZERO_INT)(__VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
#define INPUT_WITHOUT_INIT(type,name) type name; cin >> name
#define GET_INPUT_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME
#define _(...) GET_INPUT_MACRO(__VA_ARGS__,_IWI,_IWI,_IWI,_IWI,_IWI,_IWI,INPUT_WITHOUT_INIT)(__VA_ARGS__)
//!multi
string __(){
    _(string,s);
    _(string,t);
    sort(all(s));
    rep(i,sz(t)-sz(s)+1){
        string w = t.substr(i,sz(s));
        sort(all(w));
        if(w == s)
            return "YES";
    }
    return "NO";
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
    int t;
    cin >> t;
    for(int i = 1; i <= t; ++i){
        cout << __() << '\n';
    }
}
