#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#include <iostream>
#include <cmath>
#include <iomanip>
#include <string>
#include <cstring>
#include <cstdio>
#include <math.h>
#include <algorithm>
#include <stdio.h>
#include <climits>
#include <stack>
#include <queue>
#include <vector>
#include <set>
#include <sstream>
#include <map>
#include <ctime>
#include <cstdlib>
#include <list>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;

int dx[] = { 1, 0, -1, 0 };
int dy[] = { 0, 1, 0, -1 };

// start + (end - start) / 2;
/*
unsigned long long power(unsigned long long b, unsigned long long pow){
if (b == 0) return 0;
else if (pow == 1) return b;
else if (pow % 2 == 0) return power(b*b, pow / 2);
else return b*power(b*b, pow / 2);
}
*/
//int gcd(int a, int b){
//  if (b == 0)
//      return a;
//  return gcd(b, a % b);
//}

int main(){
    int n;
    cin >> n;
    vector<int>vec(n);
    for (int i = 0; i < n; i++){
        cin >> vec[i];
    }
    int mx = INT_MIN;
    ull ans = 0;
    for (int i = 0; i < n; i++){
        if (vec[i] <= mx && mx != INT_MIN){
            ans += (mx - vec[i]);
            mx = vec[i];
        }
        else{
            mx = max(mx, vec[i]);
        }
    }
    cout << ans << "\n";
}