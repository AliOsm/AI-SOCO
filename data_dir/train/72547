/**
SXR0aXAkI0JwbXptI3FhI3Z3I293bCNqY2IjUG0jMCNicG0jVHFkcXZvLyNCcG0jQW10bjBhY2phcWFicXZvLyNNYm16dml0MSNWdyNhdGN1am16I2tpdiNhbXF9bSNQcXUjVnd6I0F0bW14MSNQcWEjaXptI2l0dCNicHF2b2EjUXYjYnBtI3BtaWRtdmEjaXZsI3d2I21pemJwMSNFcHcjcWEjYnBtem0ja2l2I3F2Ym16a21sbSNRdiNQcWEjeHptYW12a20jbXtrbXhiI0lhI3BtI3htenVxYmJtYnBHI1BtI3N2d2VtYnAjRXBpYiMraXh4bWl6bWJwI2J3I1BxYSNrem1pYmN6bWEjSWEsI0ptbnd6bSN3eiNJbmJteiN3eiNKbXBxdmwjYnBtdTEjVnd6I2FwaXR0I2JwbXwja3d1eGlhYSNJY29wYiN3biNwcWEjc3Z3ZXRtbG9tI017a214YiNpYSNQbSNlcXR0bWJwMSNQcWEjYnB6d3ZtI2x3YnAjbXtibXZsI1dkbXojYnBtI3BtaWRtdmEjSXZsI3d2I21pemJwLyNpdmwjUG0jbm1tdG1icCNWdyNuaWJxb2NtI3F2I29jaXpscXZvI0l2bCN4em1hbXpkcXZvI2JwbXUvI053eiNQbSNxYSNicG0jVXdhYiNQcW9wMSNCcG0jQWN4em11bSMrcXYjb3R3enwsMQ==
*/
#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <queue>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>

#define F first
#define S second
#define endl '\n'
#define deb(x) cout<<#x<<' '<<x<<endl;
#define pb push_back
#define int __int64

const long long MOD = 1e9 + 7;
const long long MAXN = 1e6 + 1;
using namespace std;

typedef long long ll;

long long readInt() {
    bool minus1 = false;
    long long result = 0;
    char ch;
    ch = getchar();
    while (true) {
        if (ch == '-') break;
        if (ch >= '0' && ch <= '9') break;
        ch = getchar();
    }
    if (ch == '-') minus1 = true; else result = ch-'0';
    while (true) {
        ch = getchar();
        if (ch < '0' || ch > '9') break;
        result = result*10 + (ch - '0');
    }
    if (minus1)
        return -result;
    else
        return result;
}
              
bool isprime(int x) {
	for (int i = 2; i * i <= x; i++) {
		if (x % i == 0) return 0;
	}
	return 1;
}


const int M = 1e5;

int cnt = 0;
int k;

int timer = 0;

vector <vector <int> > All;
map <int, bool> Used; 
map <int, int> Cnt;

inline void rec(int n, int lvl = 1) {
	vector <int> v;
	if (lvl > k) {
		cout << n << ' ';
		cnt ++;
		if (cnt >= M) exit(0);
		return;
	}
	if (Used.count(n)) {
		v = All[Cnt[n]];
	} else {
		Used[n] = 1;
		Cnt[n] = timer;
		timer ++;
		for (int i = 1; i * i <= n; i++) {
			if (n % i == 0) {
				v.pb(i);
				if (i * i != n) {
					v.pb(n/i);
				}
			}
		}        
		sort(v.begin(), v.end());
		All.pb(v);	
	}
	for (int i : v) {
		if (i == 1) {
			cout << 1 << ' ';
			cnt ++;
			if (cnt >= M) {
				exit(0);
			}
		} else {                             
			if (isprime(i)) {
				for (int j = lvl; j < k; j++) {
					cout << 1 << ' ';
					cnt++;
					if (cnt >= M) {
						exit(0);
					}	
				}
				cout << i << ' ';
				cnt ++;
				if (cnt >= M) {
					exit(0);
				}
			} else {
				rec(i, lvl + 1);				
			}
		}
	}
}

main() {
	#ifdef IZI_KATKA
	assert(freopen("input", "r", stdin));
    assert(freopen("output", "w", stdout));
    #endif
    int n = readInt();
    k = readInt();
    rec(n);
    return 0;
}