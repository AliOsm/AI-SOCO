#include<bits/stdc++.h>

using namespace std;

#define fRead(x)  freopen(x,"r",stdin)
#define fWrite(x) freopen (x,"w",stdout)

#define LL long long
#define ULL unsigned long long
#define ff first
#define ss second
#define pb push_back
#define INF 2e16
#define PI acos(-1.0)
#define mk make_pair

#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define min4(a,b,c,d) min(a,min(b,min(c,d)))
#define max4(a,b,c,d) max(a,max(b,max(c,d)))
#define SQR(a) ((a)*(a))
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define REP(i,b) for(int i=0;i<b;i++)
#define ROF(i,a,b) for(int i=a;i>=b;i--)
#define MEM(a,x) memset(a,x,sizeof(a))
#define ABS(x) ((x)<0?-(x):(x))

#define scanI(a) scanf("%d",&a)
#define scanI2(a,b) scanI(a) , scanI(b)
#define scanI3(a,b,c) scanI(a), scanI(b), scanI(c)
#define scanI4(a,b,c,d) scanI(a), scanI(b), scanI(c), scanI(d)

#define scanL(a) scanf("%I64d",&a)
#define scanL2(a,b) scanL(a) , scanL(b)
#define scanL3(a,b,c) scanL(a), scanL(b), scanL(c)
#define scanL4(a,b,c,d) scanL(a), scanL(b), scanL(c), scanL(d)

#define SORT(v) sort(v.begin(),v.end())
#define REV(v) reverse(v.begin(),v.end())

#define FastRead ios_base::sync_with_stdio(0);cin.tie(nullptr);

inline LL BigMod(LL B,LL P,LL M){LL R=1;while(P>0){if(P%2==1){R=(R*B)%M;}P/=2;B=(B*B)%M;}return R;}
const LL MOD =1e9 + 7;
vector<int>divisors;
int x,y;
LL ans;
void rec(int pos,int val,int flag)
{
    if(pos == divisors.size()){
        LL num = y/val;
        if(flag == 0){
            ans += BigMod(2,num - 1,MOD);
        }else{
            ans -= BigMod(2,num - 1,MOD);
        }
        ans %= MOD;
        return;
    }
    rec(pos + 1,val,flag);
    rec(pos + 1,val * divisors[pos],1 - flag);
}
int main()
{
    cin >> x >> y;
    if(y % x != 0){
        cout << 0 << "\n";
        return 0;
    }
    y/=x;
    int sq = sqrt(y);
    int temp = y;
    for(int i = 2;i <= sq;i++){
        if(temp % i == 0){
            divisors.push_back(i);
            while(temp % i == 0)temp/=i;
        }
    }
    if(temp > 1){
        divisors.push_back(temp);
    }
    rec(0,1,0);
    ans %= MOD;
    ans += MOD;
    ans %= MOD;
    cout << ans << "\n";
}
