# include <bits/stdc++.h>
using namespace std;
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define db long double
# define scn(x) scanf("%I64d",&x)
# define scan(x) scanf("%d",&x)
# define print(x) printf("%d ",x)
# define prnt(x) printf("%I64d ",x);
# define eol printf("\n")
# define IOS ios_base :: sync_with_stdio(0)
# define pe "Possible"
# define ie "Impossible"
# define halt(...) {fo << (__VA_ARGS__) << '\n';exit(0);}
# define rep(n) for (int qwerty = 1;qwerty <= n;++qwerty)
# define pp(n) cerr << #n << " = " << n << '\n'
# define ppp(v) for (auto it : v) cerr << it << ' ';cerr << '\n'
# define aprint(x,y,z) for (int i = x;i <= y;++i) cerr << z[i] << ' ';cerr << '\n'
vector < int > s[1 << 20];
int w[1 << 20];
int dg[1 << 20];
int main(void)
{
    #ifdef CF
    ifstream fi("input");
    #endif // CF
    srand(time(0));
    fo << fixed << setprecision(7);
    vector < int > ans;
    int n,m;
    IOS;
    fi>>n>>m;
    rep(m)
    {
        int a,b;
        fi>>a>>b;
        s[a].push_back(b);
        dg[b] = 1;
    }
    for (int i = 1;i <= n;++i) fi>>w[i];
    function < int(int) > dfs = [&](int node)
    {
        int is = -1;
        for (auto it : s[node])
        {
            auto N = dfs(it);
            if (N != -1 && is != -1 && N != is) halt(-1);
            if (is == -1) is = N;
        }
        if (is != -1 && is != w[node]) halt(-1);
        if (is == -1) is = w[node];
        if (is == node) ans.push_back(is);
        return (is == node ? -1 : is);
    };
    for (int i = 1;i <= n;++i)
        if (!dg[i]) dfs(i);
    fo << (ans.size()) << '\n';
    for (auto it : ans) fo << it << '\n';
    return 0;
}
