#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 100100;
int n , d[N] , in[N] , cnt;
int par[N],sz[N],f[N];
set<pair<int,int> >s;
pair<int,int>ans;

int get(int i){
if( i == par[i] )return i;
par[i]=get(par[i]);
return par[i];
}

void mrg(int i,int j){
i=get(i);
j=get(j);
if( i == j )return;
if(rand()&1)swap(i,j);
par[i]=par[j];
sz[i]=sz[j]=sz[i]+sz[j];
}

int main(){
scanf("%d",&n);
for(int i=1;i<=n;i++){
        scanf("%d",d+i);
        s.insert( {d[i],i} );
}
for(int i=1;i<=n;i++)par[i]=i,sz[i]=1;

for(auto e:s){

        int i = e.second;
        int x=0,y=0;
        if( i>1 && in[i-1] ){
            x = sz[ get(i-1) ];
            f[ x ]--;
        }

        if( i+1<=n && in[i+1] ){
            y = sz[ get(i+1) ];
            f[ y ]--;
        }

        if( i>1 && in[i-1] )mrg(i,i-1);
        if( i+1<=n && in[i+1] )mrg(i,i+1);

        in[i]=1;
        f[ sz[get(i)] ]++;
        cnt++;

        if( f[sz[get(i)]]*sz[get(i)] == cnt ){
            ans=max(ans,{ f[sz[get(i)]],-e.first });
        }

}

printf("%d\n",-ans.second+1);
return 0;
}
