#include <bits/stdc++.h>
#define f first
#define s second
#define mp make_pair
using namespace std;
const int N = 1001;
double EPS = 1E-6, INF = 1E18;
bool taken[N];
int n;
vector <pair<int,int> > vec;
double fitLine(vector <pair<int,int> > & temp) {
    double slope = 1.0*(temp[1].s-temp[0].s) / (temp[1].f - temp[0].f);
    for(int i = 2;i<temp.size();i++) {
//        cout<<temp[i].f<<" "<<temp[i].s<<endl;
        double tempSlope = 1.0*(temp[i].s-temp[i-1].s) / (temp[i].f - temp[i-1].f);
        if(abs(slope-tempSlope) > EPS) {
            return INF;
        }
    }
    return slope;
}

bool check(vector<pair<int,int> > & temp) {
    double slope = 1.0*(temp[1].s-temp[0].s) / (temp[1].f - temp[0].f);
    vector <pair<int,int> > temp2;
    for(int i = 1;i<n;i++) {
        if(!taken[i]) {
            double tempSlope = 1.0*(vec[i].s-temp.back().s) / (vec[i].f - temp.back().f);
            if(abs(slope-tempSlope) > EPS) {
                temp2.push_back(vec[i]);
            }
        }
    }
    return abs(fitLine(temp2) - slope) <= EPS;
}

int main()
{
    scanf("%d",&n);
    int y;
    for(int i = 0;i<n;i++) {
        scanf("%d",&y);
        vec.push_back(make_pair(i+1,y));
    }
    if (fitLine(vec) < INF) {
        printf("No");
        return 0;
    }
    for(int i = 0;i<n;i++) {
        vector <pair<int,int> > temp;
        for(int j = 0;j<n;j++)
            if(i != j)
                temp.push_back(vec[j]);
        if(fitLine(temp) < INF) {
            printf("Yes");
            return 0;
        }
    }
    vector <pair<int,int> > temp;
    temp.push_back(vec[0]);
    for(int i = 1;i<n;i++) {
        temp.push_back(vec[i]);
        taken[i] = 1;
        if(check(temp)) {
            printf("Yes");
            return 0;
        }
        taken[i] = 0;
        temp.pop_back();
    }
    printf("No");
    return 0;
}
