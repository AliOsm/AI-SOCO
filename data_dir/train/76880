//be naame khodaa

#include <bits/stdc++.h>

typedef long long ll;

using namespace std;

ll m, h[2], a[2], x[2], y[2], l[2], k[2];
int mark[1000005];

void go(int id)
{
//	cout << id << ":"  << endl;
	fill(mark, mark + m, 0);
	ll cur = h[id];
	l[id] = -1;
	k[id] = 0;
	int len = 0;
	while (!mark[cur])
	{
		mark[cur] = ++len;
		cur = (cur*x[id] + y[id])%m;
	}
	if (mark[a[id]]) l[id] = mark[a[id]] - 1;
	if (mark[a[id]] >= mark[cur]) k[id] = (len-mark[cur]+1);
//	cout << l[id] << ' ' << k[id] << endl;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin >> m;
	for (int i = 0; i < 2; i++)
	{
		cin >> h[i] >> a[i] >> x[i] >> y[i];
		go(i);
	}
	if (l[0] == -1 || l[1] == -1)
		return (cout << -1 << endl), 0;
	if (k[0] == 0 || k[1] == 0)
	{
		if (k[0] == 0 && k[1] == 0)
			return (cout << (l[0] == l[1] ? l[0] : -1) << endl), 0;
		if (k[0] == 0)
		{
			if (l[0] >= l[1] && (l[0] - l[1])%k[1] == 0)
				cout << l[0] << endl;
			else
				cout << -1 << endl;
		}
		else
		{
			if (l[1] >= l[0] && (l[1] - l[0])%k[0] == 0)
				cout << l[1] << endl;
			else
				cout << -1 << endl;
		}
		return 0;
	}
	if (l[0] > l[1])
	{
		swap(l[0], l[1]);
		swap(k[0], k[1]);
	}
	ll r0 = (k[0] - (l[1] - l[0])%k[0])%k[0];
	for (ll z = 0; z < k[0]; z++)
		if (z*k[1]%k[0] == r0)
			return (cout << l[1] + z*k[1] << endl), 0;
	cout << -1 << endl;
    return 0;
}
