#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
//#include <random>
#include <cassert>
//#include <sstream>
using namespace std;
#define F first
#define S second
#define pb push_back
#define MP make_pair
#define ALL(x) begin(x),end(x)
#define SZ(x) ((int)(x).size())
typedef long long LL;
typedef double DB;
typedef long double LDB;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
#define IOS ios_base::sync_with_stdio(0); cin.tie(0)
const int INF = (int)1e9;
const LL INFF = (LL)1e18;
const int MXN = (int)1e6 + 7;
const int mod = (int)1e9 + 7;
int gp[MXN];
int buf[MXN];
vector<int> edge[MXN];
LL tt[11];
int main() {
	int n, m; scanf("%d %d", &n, &m);
	for (int i = 1; i <= m; i++) {
		int u, v; scanf("%d %d", &u, &v);
		edge[u].pb(v);
		edge[v].pb(u);
	}
	int cntp = 0;
	for (int i = 1; i <= n; i++) {
		if (gp[i]) continue ;
		if (cntp == 3) { puts("-1"); return 0; }
		for (int x : edge[i]) {
			buf[x] = i;
		}
		cntp++;
		for (int j = 1; j <= n; j++) {
			if (buf[j] != i) {
				if (gp[j]) { puts("-1"); return 0; }
				gp[j] = cntp;
				tt[cntp]++;
			}
		}
	}
	LL sum = tt[1]*tt[3] + tt[1]*tt[2] + tt[2]*tt[3];
	for (int i = 1; i <= n; i++) {
		for (int x : edge[i]) {
			if (gp[x] == gp[i]) {
				puts("-1"); return 0;
			}
		}
	}
	if (cntp != 3 || sum != m) {
		puts("-1"); return 0; 
	}
	for (int i = 1; i <= n; i++)
		printf("%d%c", gp[i], " \n"[i == n]);
	return 0;
}
