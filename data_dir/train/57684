#include <bits/stdc++.h>
using namespace std;
const int INF=1000000228;
int main()
{
	int n, m, k;
	cin>>n>>m>>k;
	long long D[n];
	for (int i=0; i<n; i++)
	{
		cin>>D[i];
	}
	map < pair<int, int>, long long>M;
	for (int i=0; i<k; i++)
	{
		int a, b, c;
		cin>>a>>b>>c;
		a--; b--;
		M[{a, b}]=c;
	}
	long long dp[1<<n][n];
	for (int i=0; i<(1<<n); i++)
	{
		for (int j=0; j<n; j++)
		{
			dp[i][j]=-INF;
		}
	}
	for (int i=0; i<n; i++)
	{
		dp[1<<i][i]=D[i];
	}
	for (int mask=0; mask<(1<<n); mask++)
	{
		for (int last=0; last<n; last++)
		{
			if ((1<<last)&mask && dp[mask][last]!=INF)
			{
				for (int to=0; to<n; to++)
				{
					if (!((1<<to)&mask))
					{
						dp[mask+(1<<to)][to]=max(dp[mask+(1<<to)][to], dp[mask][last]+D[to]+M[{last, to}]);
						//cout<<mask<<" "<<last<<" "<<to<<"\n";
					}
				}
			}
		}
	}
	long long ans=0;
	for (int mask=0; mask<(1<<n); mask++)
	{
		if (__builtin_popcount(mask)==m)
		{
			for (int j=0; j<n; j++)
			{
				ans=max(ans, dp[mask][j]);
			}
		}
	}
	cout<<ans;
	return 0;
}