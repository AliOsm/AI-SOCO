// i hope i get better                                                           
#include <bits/stdc++.h>
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define all(x) x.begin(), x.end()
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
const int sz=2e5+9;
int n,m;
int a[sz];
int ne,no;
set<int> se,so;
vector<int> vo,ve;
bool cant[sz];

int main(){
	scanf("%d %d",&n,&m);
	for(int i=0;i<n;i++){
		scanf("%d",&a[i]);
		if(a[i]&1){
			no++;
			if(so.find(a[i])==so.end()) so.insert(a[i]);
			else{
				vo.pb(i);
				cant[i]=1;
			}
		}else{
			ne++;
			if(se.find(a[i])==se.end()) se.insert(a[i]);
			else{
				ve.pb(i);
				cant[i]=1;
			}
		} 
	}
	if(no==ne&&ve.empty()&&vo.empty()){
		puts("0");
		for(int i=0;i<n;i++){
			printf("%d ",a[i]);
		}
		return 0;
	}
	int ans=0;
	int E=2,O=1;
	int need=n>>1;
	for(auto u:ve){
		if(ne<=need){
			while(E<=m&&se.find(E)!=se.end()) E+=2;
			if(E>m){
				puts("-1");
				return 0;
			}
			a[u]=E;
			E+=2;
			ans++;
		}else{
			while(O<=m&&so.find(O)!=so.end()) O+=2;
			if(O>m){
				puts("-1");
				return 0;
			}
			ne--;
			no++;
			a[u]=O;
			O+=2;
			ans++;
		}
	}
	for(auto u:vo){
		if(no<=need){
			while(O<=m&&so.find(O)!=so.end()) O+=2;
			if(O>m){
				puts("-1");
				return 0;
			}
			a[u]=O;
			O+=2;
			ans++;
		}else{
			while(E<=m&&se.find(E)!=se.end()) E+=2;
			if(E>m){
				puts("-1");
				return 0;
			}
			no--;
			ne++;
			a[u]=E;
			E+=2;
			ans++;
		}
	}
	if(ne==no){
		printf("%d\n",ans);
		for(int i=0;i<n;i++){
			printf("%d ",a[i]);
		}
		return 0;
	}
	for(int i=0;i<n;i++){
		if(cant[i]) continue;
		if(a[i]&1){
			if(no<=need) continue;
			while(E<=m&&se.find(E)!=se.end()) E+=2;
			if(E>m){
				puts("-1");
				return 0;
			}
			no--;
			ne++;
			a[i]=E;
			E+=2;
			ans++;
		}else{
			if(ne<=need) continue;
			while(O<=m&&so.find(O)!=so.end()) O+=2;
			if(O>m){
				puts("-1");
				return 0;
			}
			ne--;
			no++;
			a[i]=O;
			O+=2;
			ans++;
		}
	}
	if(ne==no){
		printf("%d\n",ans);
		for(int i=0;i<n;i++){
			printf("%d ",a[i]);
		}
		return 0;
	}
	puts("-1");
	return 0;
}