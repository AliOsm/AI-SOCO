#include <iostream>
#include <string>
#include <algorithm>
using namespace std;

const int MAXN = 55;
int N, M;
string S[MAXN];
pair<int, int> A[3][MAXN];
int ans = 3*MAXN;
bool used[MAXN];

void go(int idx, int cur)
{
    if (idx == 3)
    {
        ans = min(ans, cur);
        return;
    }

    for (int i = 0; i < 3; i++)
        if (!used[A[idx][i].second])
        {
            used[A[idx][i].second] = true;
            go(idx + 1, cur + A[idx][i].first);
            used[A[idx][i].second] = false;
        }
}

int main()
{
    ios::sync_with_stdio(0);

    cin >> N >> M;
    for (int i = 0; i < N; i++)
        cin >> S[i];

    for (int i = 0; i < N; i++)
    {
        int j = 0;
        for (; j < M; j++)
            if ('0' <= S[i][j] && S[i][j] <= '9')
                break;
        int k = 0;
        for (; k < M; k++)
            if ('0' <= S[i][(M - k) % M] && S[i][(M - k) % M] <= '9')
                break;
        A[0][i] = make_pair(min(j, k), i);

        j = 0;
        for (; j < M; j++)
            if ('a' <= S[i][j] && S[i][j] <= 'z')
                break;
        k = 0;
        for (; k < M; k++)
            if ('a' <= S[i][(M - k) % M] && S[i][(M - k) % M] <= 'z')
                break;
        A[1][i] = make_pair(min(j, k), i);

        j = 0;
        for (; j < M; j++)
            if ('#' == S[i][j] || '*' == S[i][j] || '&' == S[i][j])
                break;
        k = 0;
        for (; k < M; k++)
            if ('#' == S[i][(M - k) % M] || '*' == S[i][(M - k) % M] || '&' == S[i][(M - k) % M])
                break;
        A[2][i] = make_pair(min(j, k), i);
    }

    for (int i = 0; i < 3; i++)
        sort(A[i], A[i] + N);

    go(0, 0);

    cout << ans << "\n";

    return 0;
}
