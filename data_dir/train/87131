#include <bits/stdc++.h>
#include <ext/hash_map>
using namespace std;
using namespace __gnu_cxx;

#define EPS      1e-12
#define F        first
#define S        second
#define pi       acos(-1)
#define ll       long long
#define oo       0x3f3f3f3f
#define sz(x)    (int)x.size()
#define sc(x)    scanf("%d",&x)
#define all(x)   x.begin(),x.end()
#define rall(x)  x.rbegin(),x.rend()

int n,k;
int arr[30];
const int mod=1000000007;
int dp[1<<24];
int idxs[1<<24];
int fac[30];
ll tot;
int bad1,bad2;

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  //freopen("output.txt", "w", stdout);
#endif
  scanf("%d",&n);
  for(int i=0;i<n;i++)
    scanf("%d",&arr[i]),tot+=arr[i];
  scanf("%d",&k);
  if(k>0)scanf("%d",&bad1);
  if(k>1)scanf("%d",&bad2);
  if(bad1>bad2)swap(bad1,bad2);
  fac[0]=1;
  for(int i=1;i<=n;i++)
    fac[i]=(1LL*i*fac[i-1])%mod;
  if(k==0||(k==1&&tot<bad2)||(k==2&&tot<bad1)){
    cout<<fac[n];
    return 0;
  }
  for(int i=0;i<n;i++)
    idxs[1<<i]=i;
  dp[(1<<n)-1]=1;
  for(int mask=(1<<n)-1;mask>=0;mask--){
    int workMask=mask;
    long long sum=0;
    while(workMask){
      sum+=arr[idxs[workMask&-workMask]];
      workMask-=(workMask&-workMask);
    }
    if((sum==bad2)||(k>1&&sum==bad1)){
      dp[mask]=0;
      continue;
    }
    workMask=mask;
    while(workMask!=(1<<n)-1){
      int nxtBit=~workMask&-~workMask;
      workMask+=(~workMask&-~workMask);
      dp[mask]+=dp[mask|nxtBit];
      if(dp[mask]>=mod)dp[mask]-=mod;
    }
  }
  cout<<dp[0];
}
