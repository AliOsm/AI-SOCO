#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>

using namespace std;
using matrix = vector<vector<long long>>;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

#define all(x) (x).begin(), (x).end()
//#define int ll

const int MAXN = 1e3 + 50;
int pref[MAXN][26];
int cnt[26];
int dp2[MAXN];
ll dp[MAXN], mod = 1e9 + 7;

bool check(int l, int r) {
    int cur[26];
    for (int i = 0; i < 26; ++i) {
        cur[i] = pref[r][i];
    }
    if (l) {
        for (int i = 0; i < 26; ++i) {
            cur[i] -= pref[l - 1][i];
        }
    }
    for (int i = 0; i < 26; ++i) {
        if (cur[i] && r - l + 1 > cnt[i]) {
            return false;
        }
    }
    return true;
}

signed main() {

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    //cout.setf(ios::fixed);
    //cout.precision(20);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    int n, ans = 0;
    string s;
    cin >> n >> s;
    for (int i = 0; i < 26; ++i) {
        cin >> cnt[i];
    }
    pref[0][s[0] - 'a'] = 1;
    for (int i = 1; i < n; ++i) {
        for (int j = 0; j < 26; ++j) {
            pref[i][j] = pref[i - 1][j];
        }
        pref[i][s[i] - 'a']++;
    }
    for (int i = 0; i < n; ++i) {
        dp2[i] = 1e9 + 1;
        for (int j = i; j >= 0; --j) {
            if (!check(j, i)) {
                break;
            }
            ans = max(ans, i - j + 1);
            dp[i] += (j ? dp[j - 1] : 1);
            dp[i] %= mod;
            dp2[i] = min(dp2[i], j ? dp2[j - 1] + 1 : 1);
        }
    }
    cout << dp[n - 1] << '\n' << ans << '\n' << dp2[n - 1] << '\n';
}