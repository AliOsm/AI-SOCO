#include<bits/stdc++.h>
#define xx first
#define yy second
#define mp make_pair
#define pb push_back
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
const int MAXN=3e5+5;
struct node
{
	int x,pos,id;
	node(int _x=0,int _pos=0,int _id=0):x(_x),pos(_pos),id(_id){}
	bool operator < (const node &o)const 
	{
		return x<o.x;
	}
}s[MAXN];
struct Ans
{
	int i,j,d;
	Ans(int _i=0,int _j=0,int _d=0):i(_i),j(_j),d(_d){}
	void print()
	{
		printf("%d %d %d\n",i,j,d);
	}
};
int t[MAXN];
int n;
vector<node> L,R;
vector<Ans> ans;
int main()
{
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
		scanf("%d",&s[i].x);
		s[i].id=i;
	}
	for(int i=1;i<=n;i++)
		scanf("%d",&t[i]);
	sort(s+1,s+1+n);
	sort(t+1,t+1+n);
	for(int i=1;i<=n;i++)
	{
		if(s[i].x<t[i])
			L.pb(node(t[i]-s[i].x,s[i].x,s[i].id));
		if(s[i].x>t[i])
			R.pb(node(s[i].x-t[i],s[i].x,s[i].id));
	}
	int r=0;
	for(int i=0;i<(int)L.size();i++)
	{
		while(L[i].x>0&&r<(int)R.size())
		{
			if(L[i].pos>R[r].pos) return 0*puts("NO");
			int mi=min(L[i].x,R[r].x);
			ans.pb(Ans(L[i].id,R[r].id,mi));
			L[i].x-=mi;L[i].pos+=mi;
			R[r].x-=mi;R[r].pos-=mi;
			if(L[i].pos>R[r].pos) return 0*puts("NO");
			if(R[r].x==0) r++;
		}
		if(L[i].x!=0) return 0*puts("NO");
	}
	if(r!=(int)R.size()) return 0*puts("NO");
	puts("YES");
	printf("%d\n",(int)ans.size());
	for(auto v:ans)
		v.print();
	return 0;
}