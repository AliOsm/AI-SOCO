#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <iomanip>
#define ll long long
#define ull unsigned ll
#define ld long double
#define mp make_pair
#define pb push_back
#define F first
#define S second
#define y1 sdfsdfsdf 

using namespace std;

const int MIN = 1e3 + 2;
const int MXN = 1e6 + 3;
const int INF = 1e9 + 7;
const ll LINF = 1e18 + 15;
const double EPS = 1e-9;

char st[MXN];
int n, p, ans, id, id2;

int main(){
	cin >> n >> p;
	for (int i = 1; i <= n; i++){
		cin >> st[i];
	}
	for (int i = 1; i <= n / 2; i++){
		if (st[i] != st[n - i + 1]){
			id = i;
			break;
		}
	}
	for (int i = n / 2; i >= 1; i--){
		if (st[i] != st[n - i + 1]){
			id2 = i;
			break;
		}
	}
	if (!id){
		cout << 0;
		return 0;
	}
	if (p > (n + 1) / 2){
		for (int i = n - id + 1; i >= n - id2 + 1; i--){
			if (st[i] != st[n - i + 1]){
				if (st[i] > st[n - i + 1]){
					ans += min (st[i] - st[n - i + 1], 123 - st[i] + st[n - i + 1] - 97);
				}
				else {
					ans += min (st[n - i + 1] - st[i], 123 - st[n - i + 1] + st[i] - 97);
				}
			}
		}
		ans += id2 - id;
		//cout << ans << " ";
		//cout << abs (n - id + 1 - p) << " " << abs (p - n + id2 - 1) << " ";
		ans += min (abs (n - id + 1 - p), abs (p - n + id2 - 1));
	}
	else {
		for (int i = id; i <= id2; i++){
			if (st[i] != st[n - i + 1]){
				if (st[i] > st[n - i + 1]){
					ans += min (st[i] - st[n - i + 1], 123 - st[i] + st[n - i + 1] - 97);
				}
				else {
					ans += min (st[n - i + 1] - st[i], 123 - st[n - i + 1] + st[i] - 97);
				}
			}
		}
		//cout << ans << " ";
		ans += id2 - id;
		ans += min (abs (id - p), abs (p - id2));
	}
	cout << ans;
	return 0;
}
