#include <cstdio>
#include <iostream>
#include <algorithm>
#include <map>
#include <set>
#include <vector>
#include <deque>
#include <string>
#include <cmath>
#include <cctype>
#include <locale>
#include <queue>
#include <utility>
#include <iomanip>

#define forn(n) for(int i = 0; i < n; i++)
#define fornm(n, m) for(int i = 0; i < n; i++) for(int j = 0; j < m; j++)
#define pb push_back
#define pf push_front
#define ll long long
#define ld long double
#define pi 3.141592653589793238462643383
#define mp make_pair
#define pii pair<int, int>
#define pll pair<ll, ll>
#define pdd pair<ld, ld>
#define fi first
#define se second
#define endl '\n'
#define fastScan ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

using namespace std;

int main() 
{
   fastScan;
   int n, m, k; cin >> n >> m >> k;
   vector<pair<int, pii>> eList;
   for(int i = 0; i < m; i++)
   {
   	int v1, v2, w; cin >> v1 >> v2 >> w;
   	v1--; v2--;
   	eList.pb(mp(v1, mp(v2, w)));
   }
   set<int> s;
   forn(k)
   {
   	int v; cin >> v; v--;
   	s.insert(v);
   }   
   int best = -1;
   for(int i = 0; i < m; i++)
   {
   	if(s.find(eList[i].fi) != s.end() || s.find(eList[i].se.fi) != s.end())
   	{
         if(s.find(eList[i].fi) != s.end() && s.find(eList[i].se.fi) != s.end())
            continue;
   		if(best == -1) best = eList[i].se.se;
   		else best = min(best, eList[i].se.se);
   	}
   }
   cout << best << endl;
   return 0;
}
