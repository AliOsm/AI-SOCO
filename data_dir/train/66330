#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<unordered_map>
#include<stack>
#include<random>
#include<queue>
#include<list>
#include<math.h>
#include<bitset>
#include<fstream>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
//#define s second
#define nu 100001
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i, n) for (int i = 0; i < int(n); i++)
#include<fstream>
const ll INF=9223372036854775807;
const ll mod=1000000007;
int  MOD(int  a, int  b)
{
    if(a>b)
        return a-b;
    else
        return b-a;
}
ll  max3(ll  a,ll  b, ll  c)
{
    return max(c,max(a,b));
}
ll min3(ll  a,ll  b,ll  c)
{
    return min(a,min(b,c));
}
ll  power(ll  x,ll  y,ll mod1)
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x)%mod1;
        y = y>>1;
        x = (x*x)%mod1;
    }
    return res;
}
ll logg(ll  a)
{
    ll  x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
ll  gcd(ll  a,ll   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
ll abso(ll x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll  a,ll  b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
ll modinv(ll x,ll p)
{
    return power(x,p-2,p);
}
int MX=200000;
int n;
vi a;
vvi adj;
vll ans;
vi cur;
int main()
{
    scanf("%d",&n);
    a.resize(n+1);
    ans.resize(MX+1);
    cur.resize(n+1);
    for(int i=1;i<=n;i++)
    {
        scanf("%d",&a[i]);
    }
    adj.resize(n+1);
    for(int i=1;i<=n-1;i++)
    {
        int x,y;
        scanf("%d %d",&x,&y);
        adj[x].push_back(y);
        adj[y].push_back(x);
    }
    vvi sv(MX+1);
    for(int i=1;i<=MX;i++)
    {
        for(int j=i;j<=MX;j+=i)
        {
            sv[j].push_back(i);
        }
    }
    vvi req(MX+1);
    for(int i=1;i<=n;i++)
    {
        for(int j=0;j<sv[a[i]].size();j++)
        {
            req[sv[a[i]][j]].push_back(i);
        }
    }
    vi vis(n+1,0);
    for(int i=1;i<=MX;i++)
    {
        for(int j=0;j<req[i].size();j++)
        {
            cur[req[i][j]]=i;
            vis[req[i][j]]=-1;
        }
        for(int j=0;j<req[i].size();j++)
        {
            ll k=0;
            if(vis[req[i][j]]==-1)
            {
                queue<int> q;
                q.push(req[i][j]);
                vis[req[i][j]]=1;
                while(!q.empty())
                {
                    k++;
                    int x=q.front();
                    q.pop();
                    for(int j=0;j<adj[x].size();j++)
                    {
                        if(vis[adj[x][j]]==-1&&cur[adj[x][j]]==i)
                        {
                            vis[adj[x][j]]=1;
                            q.push(adj[x][j]);
                        }
                    }
                }
            }
            ans[i]+=(k*(k+1))/2;
        }
    }
    for(int j=MX;j>=1;j--)
    {
        for(int i=2*j;i<=MX;i+=j)
        {
            ans[j]-=ans[i];
        }
    }
    for(int j=1;j<=MX;j++)
    {
        if(ans[j]!=0){
            printf("%d %lld\n",j,ans[j]);}
    }
}
