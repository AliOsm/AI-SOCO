#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define abdelrahman001 ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define F first
#define S second
#define inFile(t) freopen((t),"r",stdin)
#define outFile(t) freopen((t),"w",stdout)
#define pb push_back
#define pf push_front
#define Pb pop_back
#define all(v) (v).begin(),(v).end()
#define allr(v) (v).rbegin(),(v).rend()
#define Pf pop_front
#define sz size
#define MP make_pair
#define Pc __builtin_popcount
#define pi 2*acos(0)
#define BiEdge(v,a,b) (v)[(a)].pb(b),(v)[(b)].pb(a)
#define mod 1000000007
#define point complex<ld>
#define X real()
#define Y imag()
#define pll pair<ll,ll>
#define pii pair<int,int>
#define cross(a,b)(conj(a)*(b)).imag()
#define dot(a,b) (conj(a)*(b)).real()
#define rectangle pair<coordinate,coordinate>
#define line tuple<ll,ll,ll>
#define EPS 1e-7
#define polygon vector<point>
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
int const N = 1e5+5,M = 1005;
using namespace std;

ll k,sump,sumn,ans[N],ind;
int main()
{
    abdelrahman001
    cin >> k;
    vector<pair<ll,ll>>p,n;
    for(int i = 0;i<k;i++)
    {
        ld x;
        cin >> x;
        if(x < 0)
        {
            if(ceil(x) == floor(x))
                ans[i] = x;
            else
                n.push_back({floor(x),i});
            sumn+=abs(floor(x));
        }
        else if(x > 0)
        {
            if(ceil(x) == floor(x))
                ans[i] = x;
            else
                p.push_back({floor(x),i});
            sump+=floor(x);
        } else
            ans[i] = x;
    }
    while(ind < n.sz() && sumn > sump)
    {
        sumn--;
        ans[n[ind].S] = n[ind].F + 1;
        ind++;
    }
    for(int i = ind;i<n.sz();i++)
        ans[n[i].S] = n[i].F;
    ind = 0;
    while(sumn > sump)
    {
        sump++;
        ans[p[ind].S] = p[ind].F + 1;
        ind++;
    }
    for(int i = ind;i<p.sz();i++)
        ans[p[i].S] = p[i].F;
    for(int i = 0;i<k;i++)
        cout << ans[i] << endl;
    return 0;
}
