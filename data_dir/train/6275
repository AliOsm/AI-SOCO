/*
 _     _                             
| |__ | |__   __ _  __ _ _   _  __ _ 
| '_ \| '_ \ / _` |/ _` | | | |/ _` |
| |_) | | | | (_| | (_| | |_| | (_| |
|_.__/|_| |_|\__,_|\__, |\__, |\__,_|
                   |___/ |___/       
*/
#include<bits/stdc++.h>

#define ll          long long
#define pb          push_back
#define ppb         pop_back
#define	endl		'\n'
#define mii         map<ll int,ll int>
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define what_is(x)  cerr << #x << " is " << x << endl;
using namespace std;

#define N  200005

vi a[N];

ll int arr[N];

ll int vis[N];

ll int cntw[N],cntb[N];

void dfs(ll int node)
{
	vis[node]=1;
	if(arr[node]==1) cntw[node]++;
	else cntb[node]++;
	for(auto i:a[node])
	{
		if(!vis[i])
		{
			dfs(i);
			cntw[node]+=cntw[i];
			cntb[node]+=cntb[i];
		}
	}
}

ll int dp[N];

void dfs2(int node)
{
	vis[node]=1;
	ll int ret;
	if(arr[node]==1) ret=1;
	else ret=-1;	
	for(auto i:a[node])
	{
		if(!vis[i])
		{
			dfs2(i);
			if(dp[i]>0) ret+=dp[i];
		}
	}
	dp[node]=ret;
}

ll int ans[N];

void dfs3(int node,ll int par)
{
	par=max(par,0ll);
	// cout<<node<<" "<<par<<endl;
	vis[node]=1;
	ll int pass=dp[node]+par;
	ans[node]=pass;
	for(auto i:a[node])
	{
		if(!vis[i])
		{
			ll int passi=pass;
			if(dp[i]>0) passi-=dp[i];
			dfs3(i,passi);
		}
	}
}


int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
	// cin>>TESTS;
	while(TESTS--)
	{
		ll int n;
		cin>>n;
		for(ll int i=1;i<=n;i++) cin>>arr[i];
		for(ll int i=1;i<n;i++)
		{
			ll int x,y;
			cin>>x>>y;
			a[x].pb(y);
			a[y].pb(x);
		}
		dfs(1);
		memset(vis,0,sizeof(vis));
		dfs2(1);
		// for(ll int i=1;i<=n;i++) cout<<dp[i]<<" ";cout<<endl;
		memset(vis,0,sizeof(vis));
		dfs3(1,0);
		for(ll int i=1;i<=n;i++) cout<<ans[i]<<" ";
	}
	return 0;
}