#include <bits/stdc++.h>
using namespace std;

const int N = 1000005;
const int mod = 1e9+7;

int q, r, n, sieve[N], f[N][21];

inline void add(int &x, int y) {
	x += y;
	if (x >= mod) x -= mod;
}

void precalc() {
	for (int i = 2; i < N; ++i) {
		if (!sieve[i]) {
			for (int j = i; j < N; j += i) {
				if (!sieve[j]) sieve[j] = i;
			}
		}
	}

	f[0][0] = 1;
	for (int j = 1; j < 21; ++j) {
		f[0][j] = 2;
	}

	for (int i = 1; i < N; ++i) {
		int sum = 0;
		for (int j = 0; j < 21; ++j) {
			add(sum, f[i - 1][j]);
			f[i][j] = sum;
		}
	}
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);

	precalc();

	cin >> q;
	for (int i = 0; i < q; ++i) {
		cin >> r >> n;
		
		int result = 1;

		while (n > 1) {
			int divisor = sieve[n];
			int power = 0;
			while (n % divisor == 0) {
				n /= divisor;
				++power;
			}
			result = (1LL*result*f[r][power]) % mod;
		}

		cout << result << '\n';
	}
	return 0;
}