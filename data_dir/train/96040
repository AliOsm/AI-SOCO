/* ****GT_18**** */
//Motivational Source->FUHPD

#include<bits/stdc++.h>
#define	MIN(a,b,c)	min(min(a,b),c)
#define	MAX(a,b,c)	max(max(a,b),c)
#define ll          long long
#define itr         vector<ll int>::iterator
#define pb          push_back
#define mp          make_pair
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define endl        '\n'
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
using namespace std;
vi a[200005],visited(200005,0),dist(200005,0),parent(200005);
ll dfs(ll int node)
{
	visited[node]=1;
	rep(i,0,sz(a[node]))
	{
		 if(visited[a[node][i]]==0)
		 {
		 	parent[a[node][i]]=node;
		 	dfs(a[node][i]);
		 	dist[node]=max(dist[node],dist[a[node][i]]+1);
		 }
	}
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		ll n,x;
		cin>>n>>x;
		rep(i,0,n-1)
		{
			ll p,q;
			cin>>p>>q;
			a[p].pb(q);
			a[q].pb(p);
		}
		dfs(1);
		ll cur=x,ht=0;
		while(cur!=1)
		{
			cur=parent[cur];
			ht++;
		}
		cur=x;
		ll ht1=0,ans=0;
		while(cur!=1)
		{
			ans=max(ht1+2*ht+2*dist[cur],ans);
			cur=parent[cur];
			ht1+=2;
			ht-=2;
			if(ht<=0)break;
		}
		cout<<ans;
	}
	return 0;
}
