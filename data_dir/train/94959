#include <iostream>
#include <cmath>
#include <string>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <fstream>
#include <cassert>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <stack>
#include <functional>
#include <numeric>
#include <ctime>
#include <cstdlib>
#include <sstream>

using namespace std;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define pii pair<int, int>
#define pll pair<long long, long long>
#define y1 stupid_y1
#define ll long long
#define vi vector<int>
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x)*(x))
#define sz(a) (int)a.size()
#define file "a"

const int inf = (int)1e9;
const double eps = 1e-9;
const double pi = acos(-1.0);

double x[2], y[2];

double area(double ax, double ay, double bx, double by){
    return ax * by - ay * bx;
}

int main () {
    #ifdef LOCAL
    freopen(file".in", "r", stdin);
    freopen(file".out", "w", stdout);
    #endif


    for (int i=0;i<2;i++){
        cin >>x[i]>>y[i];
    }

    int n;
    cin >>n;

    int ans = 0;
    for (int i=0;i<n;i++){
        double a, b, c;
        cin >>a>>b>>c;
        double x1 = 5e6;
        double x2 = -5e6;
        double y1 = -(a*x1 + c)/b;
        double y2 = -(a*x2 + c)/b;
        if ( area(x2 - x1, y2 - y1, x[0] - x1, y[0] - y1) * area(x2 - x1, y2 - y1, x[1] - x1, y[1] - y1) > 0 ) continue;
        if ( area(x[1] - x[0], y[1] - y[0], x1 - x[0], y1 - y[0]) * area(x[1] - x[0], y[1] - y[0], x2 - x[0], y2 - y[0] ) > 0 ) continue;
        
        y1 = 5e6;
        y2 = -5e6;
        x1 = -(b*y1 + c)/a;
        x2 = -(b*y2 + c)/a;

        if ( area(x2 - x1, y2 - y1, x[0] - x1, y[0] - y1) * area(x2 - x1, y2 - y1, x[1] - x1, y[1] - y1) > 0 ) continue;
        if ( area(x[1] - x[0], y[1] - y[0], x1 - x[0], y1 - y[0]) * area(x[1] - x[0], y[1] - y[0], x2 - x[0], y2 - y[0] ) > 0 ) continue;
            
        
        ans++;
    }

    cout <<ans<<endl;


    #ifdef LOCAL
    cerr << (double)clock() * 1.0 / CLOCKS_PER_SEC << endl;
    #endif

    return 0;
}
