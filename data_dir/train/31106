#include <bits/stdc++.h>
#define pb push_back
#define f first
#define s second
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
using namespace std;

const ll mod = 1e9 + 7;
ll n;
int k;
ll inv[100];

ll powmod(ll a, ll b, ll m) { 
	if (b == 0) return 1;
	ll c = powmod(a, b / 2, m);
	c = c * c % m;
	if (b & 1) c = c * a % m;
	return c;
}

ll solve(ll p, ll a, ll k) {
	vector<vector<ll>> dp(a + 1, vector<ll>(k + 1, 0));

	for (int kk = 0; kk <= k; kk++){
		if (kk == 0) {
			ll ppow = 1;
			for (int aa = 0; aa <= a; aa++) {
				dp[aa][kk] = ppow;
				ppow = ppow * p % mod; 
			}
		} else {
			ll sum = 0;
			for (int aa = 0; aa <= a; aa++) {
				sum += dp[aa][kk - 1];
				sum %= mod;
				dp[aa][kk] = sum * inv[aa + 1] % mod;
			}
		}
	}
	return dp[a][k];
}

int main() {

	inv[0] = 1;
	for (int i = 1; i < 100; i++) inv[i] = powmod(i, mod - 2, mod);

	cin >> n >> k;
	if (n == 1){
		cout << 1 << endl; return 0;
	}

	ll ans = 1;
	for (ll i = 2; i * i <= n; i++) {
		int ct = 0;
		while (n % i == 0) {
			n /= i;
			ct++;
		}
		if (ct) {
			ans = ans * solve(i, ct, k) % mod;
		}
	}

	if (n > 1) {
		ans = ans * solve(n, 1, k) % mod;
	}

	cout << ans << endl;

	return 0;
}