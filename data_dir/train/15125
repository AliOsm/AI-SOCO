// Only_love97

using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define SZ size()
#define st first
#define nd second
#define PB push_back
#define FOR(i,a,b) for (int i=(a),_b=(b);i<_b;i++)
#define FORE(i,a,b) for (int i=(a),_b=(b);i<=_b;i++)
#define FORD(i,a,b) for (int i=(a),_b=(b);i>=_b;i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef pair<int,int> II;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;
const int MAX=(1e5);

struct node
{
    int gt,vt;
};

bool cmp(node a, node b)
{
    return (a.gt<b.gt);
}

node a[MAX+10];
int f[MAX+10],n,d[MAX+10],ans[MAX+10];

int main()
{
 //   freopen("codeforces.inp", "r", stdin);
 //   freopen("codeforces.out", "w", stdout);
    ios ::sync_with_stdio(false);
    cin >> n;
    memset(f,0,sizeof(f));
    FORE(i,1,n)
    {
        cin >> a[i].gt;
        a[i].vt=i;
        f[a[i].gt]++;
    }
    FORE(i,1,MAX)
    if (f[i]>f[i-1] && i!=1)
    {
        cout << -1;
        return 0;
    }
    sort(a+1,a+n+1,cmp);
    FORE(i,1,n)
    if (a[i].gt==a[i-1].gt) d[i]=d[i-1]+1;
    else d[i]=1;
    FORE(i,1,n) ans[a[i].vt]=d[i];
    cout << f[1] << "\n";
    FORE(i,1,n) cout << ans[i] << " ";
}
