#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;

typedef long long ll;
typedef pair<int,int> ii;
typedef tree<ii,null_type,less<ii>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;

const int mx=1e5+777;

int c[mx], id[mx], f[mx];
ll g[mx], ret[mx];
vector<int> adj[mx];
map<int,int> s[mx];

void eval(int x, int y, int col) {
	if(y>f[x]) f[x]=y, g[x]=0;
	if(y==f[x]) g[x]+=col;
}

void unite(int &x, int y) {
	if(s[x].size()<s[y].size()) swap(x,y);
	for (auto it : s[y])
		eval(x,s[x][it.first]+=it.second,it.first);
}

void dfs(int cur, int par=0) {
	id[cur]=cur;
	s[cur][c[cur]]=1;
	f[cur]=1; g[cur]=c[cur];
	for (int nxt : adj[cur]) {
		if(nxt==par) continue;
		dfs(nxt,cur);
		unite(id[cur],id[nxt]);
	}
	ret[cur]=g[id[cur]];
}

int main() {
	cin.tie(0); cout.tie(0); ios_base::sync_with_stdio(0);
	int n; cin>>n;
	for (int i=1; i<=n; i++)
		cin>>c[i];
	for (int i=0; i<n-1; i++) {
		int x,y; cin>>x>>y;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	dfs(1);
	for (int i=1; i<=n; i++)
		cout<<ret[i]<<" ";
	cout<<"\n";
	return 0;
}
