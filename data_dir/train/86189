#include <bits/stdc++.h>

using namespace std;

const int N=500005;

int cnt[N];
int have[N];
int used[N];

signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int m,n,k,s;
    cin >> m >> k >> n >> s;
    vector<int> v(m);
    for(int i=0; i<m; i++){
        cin >> v[i];
    }
    int need_zeros=0;
    for(int i=0; i<s; i++){
        int x;
        cin >> x;
        cnt[x]++;
        have[x]++;
        if(!used[x]){
            need_zeros++;
            used[x]=1;
        }
    }
    int pos=0;
    int have_zeros=0;
    for(int i=0; i<m; i++){
        while(pos-i<k || have_zeros!=need_zeros){
            if(pos==m)return cout << -1,0;
            have[v[pos]]--;
            if(have[v[pos]]==0)have_zeros++;
            pos++;
        }
        //cout << "// " << i << " " << pos << "\n";
        int len=pos-i;
        if(i/k + 1 + (m-pos)/k >= n){
            cout << len-k << "\n";
            int need_unused=k-s;
            for(int j=i; j<pos; j++){
                if(!used[v[j]]){
                    if(!need_unused){
                        cout << j+1 << " ";
                    }
                    else need_unused--;
                }
                else if(!cnt[v[j]]){
                    if(!need_unused)cout << j+1 << " ";
                    else need_unused--;
                }
                else{
                    cnt[v[j]]--;
                }
            }
            return 0;
        }
        have[v[i]]++;
        if(have[v[i]]==1)have_zeros--;
    }
    cout << -1;
}
