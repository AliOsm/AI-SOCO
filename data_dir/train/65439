//Be Name Khoda, Besmellah Rahmane Rahim, In The Name Of God;
//#include<bits/stdc++.h>
#include<iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>
#include <deque>
#include <map>
#include <stack>
#include<bitset>
#include<list>
#include<cassert>
#include<numeric>
#include <stdio.h>
#include <string.h>
#include<iomanip>
#include<unordered_map>
#include<unordered_set>


 
using namespace std;

const int N = 4e4 + 5;
int n, k;
int cake[N];
int dp[N];
int odp[N];
int last[N];
int lazy[N * 4];
int seg[N * 4];

void add(int l, int r, int val, int v = 1, int s = 0, int e = n + 1)
{
	if (l <= s && e <=  r)
	{
		lazy[v] += val;
		return;
	}
	if (r <= s || e <= l)
	{
		return;
	}
	int mid = (s + e) / 2;
	int lc = 2 * v;
	int rc = lc + 1;
	add(l, r, val, lc, s, mid);
	add(l, r, val, rc, mid, e);
	seg[v] = max(seg[lc] + lazy[lc], seg[rc] + lazy[rc]);
}

int main()
{
	cin >> n >> k;
	for(int i = 0; i < n; i++)
	{
		cin >> cake[i];
	}
	for(int t = 0; t < k; t++)
	{
		memset(seg, 0, sizeof seg);
		memset(lazy, 0, sizeof lazy);
		memset(last, 0, sizeof last);
		for(int i = 0; i < n; i++)
		{
			add(i, i + 1, odp[i]);
			add(last[ cake[i] ], i + 1, 1);
			dp[i + 1] = seg[1];
			last[cake[i]] = i + 1;
		}
		swap(dp, odp);
	}
	cout << odp[n] << endl;


	





}