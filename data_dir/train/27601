/*input
7
4 1 2 2 1 5 3

*/

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> PII;
typedef pair<ll , ll> PLL;
typedef long double ld;

#define pb push_back
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
int mod = 1000000007;
#define PI 3.14159265
#define endl '\n'
#define debug(x) cout << #x << " = " << x << endl;
#define MAX 100001

template < typename T > T GCD(T a, T b)            { ll t; while(a) { t = a; a = b % a; b = t; } return b; }
template < typename T > string toString(T a)       { return to_string(a); }
template < typename T > void toInt(string s, T &x) { stringstream str(s); str >> x;}
inline int add(ll a, ll b) {a += b; if (a < 0) a += mod; return a;}
inline int sub(ll a, ll b) {a -= b; if (a < 0) a += mod; return a;}
inline int mul(ll a, ll b) {return (a * 1ll * b) % mod;}
inline int pwr(ll x, ll y) {
    int ans = 1 % mod;
    while (y) {
        if (y & 1) ans = mul(ans, x);
        x = mul(x, x);
        y >>= 1;
    }
    return ans;
}
inline int inv(int a) {return pwr(a, mod - 2);}

bool comp(PII p1, PII p2) {
    return p1.second < p2.second;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n;
    cin >> n;
    vector <int> vec, psum;
    psum.pb(0);
    int v;
    for (int i = 0; i < n; i++) {
        cin >> v;
        vec.pb(v);
        psum.pb(psum[i] + v);
    }
    set <int> s;
    unordered_map <int, vector <PII> > mp;
    for (int i = 0; i < n; i++) {
        for (int j = i; j < n; j++) {
            int sum = psum[j + 1] - psum[i];
            mp[sum].pb({i + 1, j + 1});
            s.insert(sum);
        }
    }
    int ans = 0;
    vector <PII> ansVector;
    for (auto it : s) {
        int temp = 1;
        sort(all(mp[it]), comp);
        int cur = mp[it][0].second;
        vector <PII> ranges;
        ranges.pb(mp[it][0]);
        for (auto itr : mp[it]) {
            if (itr.first > cur) {
                temp++;
                cur = itr.second;
                ranges.pb({itr.first, itr.second});
            }
        }
        if (temp > ans) {
            ans = temp;
            ansVector = ranges;
        }
    }
    cout << ans << endl;
    for (auto it : ansVector) {
        cout << it.first << " " << it.second << endl;
    }


    return 0;
}