#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define PB push_back
#define MP make_pair

#define rep(i,n) for(int i=0;i<(n);++i)
#define REP(i,n) for(int i=1;i<=(n);++i)
#define FOR(i,l,h) for(int i=(l);i<=(h);++i)
#define FORD(i,h,l) for(int i=(h);i>=(l);--i)
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl
#define tr(it,c) for(auto it=(c).begin(); it!=(c).end(); ++it)
#define all(c) (c).begin(), (c).end()

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long int64;
typedef pair<int,int> pii;

typedef pair< pair<int,double>, pair<int,int> > P;

P buf[2000];
double dp[2000]={};

int64 dis2(pii a, pii b)
{
	int64 m=a.first-b.first, n=a.second-b.second;
	return m*m+n*n;
}
int64 sqr(int64 a) {return a*a;}

int main(void)
{
	int n; cin>>n;
	rep(i,n)
	{
		int x,y,t;
		double p;
		cin>>x>>y>>t>>p;
		buf[i]=MP(MP(t,p),MP(x,y));
	}
	sort(buf,buf+n);
	rep(i,n)
	{
		int t=buf[i].first.first;
		double p=buf[i].first.second;
		dp[i]=p;
		rep(j,i) if(dis2(buf[j].second,buf[i].second)<=sqr(t-buf[j].first.first))
		{
			dp[i]=max(dp[i], dp[j]+p);
		}
	}
	printf("%.20lf\n",*max_element(dp,dp+n));
	return 0;
}
