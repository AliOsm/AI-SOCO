#include <bits/stdc++.h>
#define LL long long
#define pb push_back
#define mp make_pair
#define fi first
#define sc second
using namespace std;

typedef pair<int,int> ii;
int n,qq,k,idx,hi,highestBidder,ans,id,bid,lowestBid,scHighestBid;
int highestBid[200100],posBid[200100],bidKey[200100];
ii a[200100];
vector<int> v[200100];
map<int,int> idBid;
set<int> st;
set<int>::iterator it;
queue<int> q;

int bs(int l,int r,int x,int y){
	if(l>r) return 1e9;
	int mid = (l+r)/2;
	if(v[x][mid]>=y) return min(mid,bs(l,mid-1,x,y));
	return bs(mid+1,r,x,y);
}

int main() {
	scanf("%d",&n);
	for(int i=1;i<=n;i++) bidKey[i] = 0;
	for(int i=1;i<=n;i++){
		scanf("%d %d",&id,&bid);
		a[i] = mp(id,bid);
		bidKey[id] = bid;
		idBid[bid] = id;
		v[id].pb(bid);
		if(bid>highestBid[id]){
			highestBid[id] = bid;
			posBid[id] = i;
		}
	}
	for(int i=1;i<=n;i++){
		st.insert(bidKey[i]);
	}
	// for(it=st.begin();it!=st.end();it++){
	// 	cout<<(*it)<<endl;
	// }
	scanf("%d",&qq);
	for(int i=0;i<qq;i++){
		scanf("%d",&k);
		hi = 0;
		for(int j=0;j<k;j++){
			scanf("%d",&id);
			if(v[id].size() && v[id][v[id].size()-1]>hi){
				hi = v[id][v[id].size()-1];
				highestBidder = id;
			}
			q.push(bidKey[id]);
			st.erase(bidKey[id]);
		}
		if(!st.empty()){
			it = st.end();
			it--;
			bid = (*it);
			if(bid!=0){
				ans = idBid[bid];
				if(it!=st.begin()){
					it--;
					scHighestBid = (*it);
				}
				else scHighestBid = 0;
				idx = bs(0,v[ans].size()-1,ans,scHighestBid);
				cout<<ans<<" "<<v[ans][idx]<<endl;
			}
			else cout<<"0 0"<<endl;
		}
		else cout<<"0 0"<<endl;
		while(!q.empty()){
			st.insert(q.front());
			q.pop();
		}
	}
	return 0;
}