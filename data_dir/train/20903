#include <bits/stdc++.h>

using namespace std;
#define ll long long
#define F first
#define S second
const int N=2e6;
int arr[N+5];
int a[N+5];
map<int,int>cnt,c;
int seg[4*N+5];
int n,mx=0;
void build(int id=1,int l=1,int r=mx)
{
    if(l==r)
    {
        seg[id]=arr[l];
        return;
    }
    int mid=(l+r)/2;
    build(id*2,l,mid);
    build(id*2+1,mid+1,r);
    seg[id]=seg[id*2]+seg[id*2+1];
}
void update(int idx,int val,int id=1,int l=1,int r=mx)
{
    if(l==r)
    {
        seg[id]=val;
        arr[l]=val;
        return;
    }
    int mid=(l+r)/2;
    if(idx<=mid) update(idx,val,id*2,l,mid);
    else update(idx,val,id*2+1,mid+1,r);
    seg[id]=seg[id*2]+seg[id*2+1];
}
int query(int sq,int eq,int id=1,int l=1,int r=mx)
{
    if(r<sq||l>eq) return 0;
    if(l>=sq&&r<=eq) return seg[id];
    int mid=(l+r)/2;
    int a=query(sq,eq,id*2,l,mid);
    int b=query(sq,eq,id*2+1,mid+1,r);
    return a+b;
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin>>n;
    long long ans=0;
    for(int i=1;i<=n;i++) cin>>a[i];
    for(int i=1;i<=n;i++)
    {
        cnt[a[i]]++;
        mx=max(mx,cnt[a[i]]);
        arr[cnt[a[i]]]++;
    }
    build();
    for(int i=1;i<=n;i++)
    {
        update(cnt[a[i]],arr[cnt[a[i]]]-1);
        cnt[a[i]]--;
        c[a[i]]++;
        if(c[a[i]]>1) ans+=query(1,c[a[i]]-1);
       // cout<<c[a[i]]-1<<" "<<query(1,c[a[i]]-1)<<endl;
    }
    cout<<ans<<endl;
    return 0;
}
