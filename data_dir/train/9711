#include <bits/stdc++.h>
using namespace std;

#define loop(i,n) for(int i = 0;i < int(n);i++)
#define rloop(i,n) for(int i = int(n);i >= 0;i--)
#define range(i,a,b) for(int i = int(a);i <= int(b);i++)
#define INF	1e9
#define SZ(c) int(c.size())
#define ALL(c) c.begin(), c.end()
#define RALL(c) c.rbegin(), c.rend()
#define PI acos(-1)
#define pb push_back
#define mp make_pair
#define fr first
#define sc second

typedef vector<int> vi;
typedef vector<pair<int,int> > vii;
typedef long long ll;
typedef pair<int, int> pii;

const int N = 2e5 + 5;
char s[N];
int a[N] , rem[N];
set<int> se;
int n;
vii ans;

int nxt(int idx){
    set<int> :: iterator it= se.upper_bound(idx);
    if(it == se.end())return -1;
    return *it;
}

int bfr(int idx){
    set<int> :: iterator it= se.lower_bound(idx);
    if(it == se.begin())return -1;
    it--;
    return *it;
}

bool can(int idx1 , int idx2){
    if(idx1 == -1 || idx2 == -1)return 0;
    if(s[idx1] != s[idx2])return 1;
    return 0;
}

int main()
{

#ifndef ONLINE_JUDGE
	//freopen("in.in", "r", stdin);
	//freopen("out.in", "w", stdout);
	//ios_base::sync_with_stdio(0);
#endif

    scanf("%d",&n);
    scanf("%s",s+1);
    range(i,1,n){
        scanf("%d",&a[i]);
        se.insert(i);
    }

    priority_queue <pair<int,pii> > pq;
    range(i,2,n){
        if(can(i,i-1))
            pq.push(mp(-abs(a[i] - a[i-1]), mp(-(i-1) , -i)));
    }



    while(!pq.empty()){
        pair<int,pii> p = pq.top();
        pq.pop();
        p.sc.fr *= -1;
        p.sc.sc *= -1;
        if(rem[p.sc.fr] || rem[p.sc.sc])continue;
        ans.pb(p.sc);
        se.erase(se.find(p.sc.fr));
        se.erase(se.find(p.sc.sc));
        rem[p.sc.fr] = 1;
        rem[p.sc.sc] = 1;
        p.sc.fr = bfr(p.sc.fr);
        p.sc.sc = nxt(p.sc.sc);
        if(can(p.sc.fr , p.sc.sc))
            pq.push(mp(-abs(a[p.sc.sc] - a[p.sc.fr]), mp(-p.sc.fr , -p.sc.sc)));
    }

    cout << SZ(ans) << endl;
    loop(i,SZ(ans))
        printf("%d %d\n",ans[i].fr,ans[i].sc);

    return 0;
}

