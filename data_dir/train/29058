#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define inf 0x3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl
#define F first
#define S second

using namespace std;
using namespace __gnu_pbds;
typedef long long  ll;

template <typename T>
using ordered_set = tree<T, null_type, less<T> , rb_tree_tag, tree_order_statistics_node_update>;

const double EPS = 1e-9;
const double pi = acos(-1.0);

int dx[] = {0 , 0 , 1 , -1 , 1 , 1 , -1 , -1};
int dy[] = {1 ,-1 , 0 , 0 , -1 , 1 ,  1 , -1};

int main(){
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    int n;
    cin >> n;
    multiset<int> m[2];
    int g[n][2];
    for(int i = 0 ; i < n ; ++i)
        for(int j = 0 ; j < 2 ; ++j)cin >> g[i][j] , m[j].insert(g[i][j]);

    int ans = 0;
    for(int i = 0 ; i < n ; ++i){
        for(int j = 0 ; j < 2 ; ++j){
            auto it = m[j].find(g[i][j]);
            m[j].erase(it);
        }

        ans = max(ans , *m[1].begin() - *m[0].rbegin());

        for(int j = 0 ; j < 2 ; ++j){
            m[j].insert(g[i][j]);
        }
    }

    cout << ans << '\n';
}
