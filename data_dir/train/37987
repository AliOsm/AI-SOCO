    #include <bits/stdc++.h>

    using namespace std;
    typedef long long ll ;
    const int N = 1e3 + 4;
    ll a[N][N];
    map < ll , ll > cnt;
    void fact(long long x){
        for(long long i = 1 ; i*i<=x ; ++i){
            if(x % i == 0){

                if(i != x / i){
                cnt[i]++;
                cnt[x/i]++;
                }
                else{
                    cnt[i]++;
                }
            }

        }
    }
    int main()
    {
        //fact(99990000);
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
        int n;
        cin >> n;
        vector < ll > v;
        for(int i = 0 ; i < n ; ++i){
            for(int j = 0 ; j < n ; ++j){
                cin >> a[i][j];
                if(i == 0 && a[i][j] > 0 ) fact(a[i][j]);
              ////  cout << i << " " << j << endl;

            }
        }
        for(auto it : cnt){
            if(it.second == n-1) v.push_back(it.first);
        }
    //    for(int i = 0 ; i < 100000 ; ++i){
    //        if(cnt[i] == n-1) v.push_back(i);
    //    }
        for(int i = 0 ; i < v.size() ; ++i){
            vector < int > divs;
            divs.push_back(v[i]);
            for(int j = 1 ; j < n ; ++j) divs.push_back(a[0][j] / v[i]);
            bool ok = 1;
            for(int k1 = 0 ; k1 < n ; ++k1){
                for(int k2 = 0 ; k2 < n ; ++k2){
                    if(!a[k1][k2]) continue;
                  //  cout << divs[k1] * divs[k2] << endl;
                    if((ll) 1ll * divs[k1] * divs[k2] != a[k1][k2]){
                        ok = 0 ;
                        break;
                    }
                }
            }
            if(ok){
                for(int i = 0 ; i < divs.size() ; ++i) cout << divs[i] << " ";
                return 0;
            }
        }



        return 0;
    }

