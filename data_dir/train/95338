#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;

const int mx = 200000+10;
uli p[mx],e[mx];
int n,k;
int o[mx],oe[mx];
bool used[mx];

bool spe(int i,int j){
    if(p[i]!=p[j]) return p[i]>p[j];
    return e[i]>e[j];
}
bool sep(int i,int j){ return e[i]<e[j]; } 

uli solve(uli x){
    vector<pair<int,int> >ei;
    int lft=-1,rht=-1;
    for(int i=0;i<n;i++){
        if(p[o[i]]==x || p[o[i]]==x-1){
            if(lft==-1) lft = i;
            rht=i;
            ei.push_back(make_pair(e[o[i]],o[i]));
        }
    }
    sort(ei.begin(),ei.end());
    int ne = ei.size();
    memset(used,false,sizeof used);

    uli pts=0;
    uli ans=0;
    if(lft!=-1){
        int q = rht-(k-1)+1;
        for(int i=0;i<ne && pts<q;i++){
            pts++;  
            used[ei[i].second]=true;
            ans+=ei[i].first;
        }
    }
    for(int i=0;i<n && pts<x;i++){
        if(used[oe[i]])continue;
        ans+=e[oe[i]];
        pts++;
    }
    if(pts<x) ans=-1;
    return ans;
}
int main(){
    int pi,ei;
    scanf("%d %d",&n,&k);
    for(int i=0;i<n;i++){
        scanf("%d %d",&pi,&ei);
        p[i]=pi,e[i]=ei;
        o[i]=i;
        oe[i]=i;
    }
    if(k>n){
        puts("0");
        return 0;
    }
    sort(o,o+n,spe);
    sort(oe,oe+n,sep);

    uli x=p[o[k-1]];
    uli pts=0;
    uli ans=0;
    for(int i=0;i<n && pts<x+2 ;i++){
        pts++;
        ans+=e[oe[i]];
    }
    if(pts<x+2) ans=-1;

    uli v = solve(x);
    if(v!=-1)if(ans==-1 || v<ans) ans = v;

    v = solve(x+1);
    if(v!=-1)if(ans==-1 || v<ans) ans = v;
    
    cout<<ans<<endl;
    return 0;
}
