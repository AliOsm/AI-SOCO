#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define ndl '\n'
#define mp make_pair
#define mt make_tuple
#define pb push_back
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define bit __builtin_popcount
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()

using namespace std;
using namespace __gnu_pbds;

template<typename T> using indexed_set = tree <T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef unsigned int uint;
typedef unsigned long long ull;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;
typedef pair<int, ll> pil;
typedef pair<ll, int> pli;
typedef pair<int, ull> piu;
typedef vector<vector<int>> matrix;

const ll INF = 1e18 + 123;
const ld EPS = 1e-9;
const int inf = 1e9 + 123;
const int MOD = 1e9 + 7;
const int N = 1e5 + 123;
const int M = 1e6 + 123;
const double pi = acos(-1.0);

ll p3[40];

int b[40];

int main(){
    #ifdef KAZAKH
        freopen("input.txt", "r", stdin);
    #endif
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    p3[0] = 1;
    for (int i = 1; i < 40; i++){
     p3[i] = p3[i-1] * 3;
    }
    int t;
    cin >> t;
    while (t--){
     ll n;
     cin >> n;
     ll ans = 0;
     for (int i = 40; i;){
      i--;
      b[i] = n / p3[i];
      assert(b[i] < 3);
      if (b[i] == 2){
       while (b[++i] == 1){
        ans -= p3[i];
       }
       ans += p3[i];
       break;
      }
      ans += b[i] * p3[i];
      n -= b[i] * p3[i];
     }
     cout << ans << ndl;
    }
    return 0;
}
