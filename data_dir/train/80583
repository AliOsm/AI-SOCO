#include <bits/stdc++.h>
using namespace std;
#define pb  push_back
#define ll  long long
#define vi  vector<ll >
#define vvi vector<vi >
#define all(x) x.begin(), x.end()
 
int n;
vvi g;
vi  u, nu, ch, p;
 
void dfs(int v) {
    u[v] = 1;
    for (int i = 0; i < g[v].size(); ++i) {
        int to = g[v][i];
        if (!u[to]) {
            ++ch[v];
            p[to] = v;
            dfs(to);
            nu[v] = max(nu[v], nu[to]);
        }
    }
    nu[v] += ch[v];
}
 
ll solve() {
    g.clear();
 
    cin >> n;
    g.resize(n);
    for (int i = 0; i < n - 1; ++i) {
        int a, b; cin >> a >> b; --a; --b;
        g[a].pb(b); g[b].pb(a);
    }
    p.assign(n, 0);
    u.assign(n, 0);
    nu.assign(n, 1);
    ch.assign(n, 0);
    dfs(0);
    ll res = *max_element(all(nu));
    for (int i = 0; i < n; ++i) {
        vi z;
        for (int j = 0; j < g[i].size(); ++j) {
            int to = g[i][j];
            if (to != p[i])
                z.pb(nu[to]);
        }
        sort(all(z));
        reverse(all(z));
        if (z.size() < 2) continue;
        res = max(res, z[0] + z[1] + g[i].size() - 1);
    }
    return res;
}
 
int main() {
    ios_base::sync_with_stdio(false);
    int t; cin >> t;
    while (t--)
        cout << solve() << "\n";
 
    return 0;
}