#include <iostream>
#include <iomanip>
#include <cmath>
#include <vector>
#include <string>
#include <algorithm>
#include <numeric>
#include <cstdlib>
#include <ctime>
#include <cassert>

std::vector<int> solve(std::string& s) {
    const int n = (int)s.size();
    std::vector<int> answ(n, 0);
    bool reversed = false;
    for (int p = 0; p+1 < n; ++p) {
        if (s[p+1] == 'a') {
            if (!reversed) {
                reversed = true;
                answ[p] = 1;
                std::reverse(s.begin(), s.begin()+p+1);
            }
        } else {
            if (reversed) {
                reversed = false;
                answ[p] = 1;
                std::reverse(s.begin(), s.begin()+p+1);
            }
        }
    }
    if (reversed) {
        answ.back() = 1;
        std::reverse(s.begin(), s.end());
    }
    return answ;
}

void brute(int p, int n, std::string& s, std::string& answ) {
    if (p == n+1) {
        answ = std::min(answ, s);
        return;
    }
    std::reverse(s.begin(), s.begin()+p);
    brute(p+1, n, s, answ);
    std::reverse(s.begin(), s.begin()+p);
    brute(p+1, n, s, answ);
}

std::string gen_string(int len) {
    std::string answ(len, 'a');
    for (int i = 0; i < len; ++i) {
        if (std::rand() % 2) answ[i]++;
    }
    return answ;
}

void test(int len) {
    for (int i = 0; i < 50; ++i) {
        std::string s = gen_string(len);
        auto t = s;
        solve(t);
        auto answ = s;
        std::cout << "for s = " << s;
        brute(1, len, s, answ);
        std::cout << " answer is " << answ << std::endl;
        assert(answ == t);
    }
    std::exit(0);
}



int main() {
    /*std::srand(std::time(0));
    test(20);*/
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0); std::cerr.tie(0); std::cout.tie(0);
    std::string s;
    while (std::cin >> s) {
        auto answ = solve(s);
        assert(std::is_sorted(s.begin(), s.end()));
        for (auto& it : answ) { std::cout << it << ' '; }
        std::cout << "\n";
    }
    return 0;
}