/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

const ld PI = 3.14159265358979323846;

#define f(i,n) for(int i=0;i<n;i++)
#define rep(i,a,b) for(int i=a;i<=b;i++)

template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

class APawnChess {
public:
    char arr[8][8];
    int calcA(int i, int j){
        int res = 0;
        for(--i; i>=0; --i, ++res) if(arr[i][j]!='.') break;
        if(i==-1) return res;
        return 10;
    }
    int calcB(int i, int j){
        int res = 0;
        for(++i; i<8; ++i, ++res) if(arr[i][j]!='.') break;
        if(i==8) return res;
        return 10;
    }
    void solve(std::istream& in, std::ostream& out) {
        f(i, 8) f(j, 8) in>>arr[i][j];
        int a = 10, b = 10;
        f(i, 8){
            f(j, 8){
                if(arr[i][j] == 'W') a = min(a, calcA(i, j));
                if(arr[i][j] == 'B') b = min(b, calcB(i, j));
            }
        }
        if(a<=b) out<<"A";
        else out<<"B";
	}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	APawnChess solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
