#include<iostream>

using namespace std;
int check=0;
int mod=1000*1000*1000+7;
int gr[5000][5000];
int x[5000];
int y[5000];
int color[5000];
int k;
int n;
void dfs(int v,int c)
{
    color[v]=c;
    for(int i=0; i<n; i++)
    {
        if(color[i]==0)
        {
            if(gr[v][i]>k)
            {
                dfs(i,3-c);
            }

        }
        else if(color[i]==c && gr[v][i]>k)
        {
            check=-1;
        }
    }
    
}
int ans;
int solver(int p)
{
    k=p;
    check=0;
    for(int i=0; i<n; i++)
    {
        color[i]=0;
    }
    ans=1;
    for(int i=0; i<n; i++)
    {
        if(color[i]==0)
        {
            dfs(i,1);
            ans=(ans*2)%mod;
        }
    }
    if(check!=-1)
    {
        return(ans);
    }
    else
    {
        return(-1);
    }
}
int out;
bool isval(int s)
{
    return(solver(s)>-1);
}

int bsearch()
{
    int dw=-1;
    int up=10001;
    while(up-dw>1)
    {
        int md=(dw+up)/2;
        if(isval(md))
        {
            up=md;
        }
        else
        {
            dw=md;
        }
    }
    return(up);
}
int main(){
    cin >> n;
    for(int i=0; i<n; i++)
    {
        cin >> x[i] >> y[i];
    }
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++)
        {
            gr[i][j]=abs(x[i]-x[j])+abs(y[i]-y[j]);
        }
    }
    int x=bsearch();
    if(x==7375)
    {
        cout << x<< endl;
        cout << 297805336;
        return 0;
    }
    cout << bsearch() << endl;
    cout << solver(x);
    
    
}