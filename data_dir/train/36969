#include<bits/stdc++.h>
using namespace std;

#define scl(x) scanf("%lld",&x)
#define sc(x)  scanf("%d",&x)
#define ll long long
#define lop(i,n) for(int i=0;i<n;++i)
typedef pair<int,int> ii;
typedef pair<ll,ll> pll;

vector<vector<int> > arr;
int p[1000100];
int n,m;
vector<ii > vec;
int findSet(int i){
	return (p[i]==i ? i:p[i]=findSet(p[i]));
}
vector<int> adjList[1000100];

vector<int> uncom;
int com(int val){
	return lower_bound(uncom.begin(),uncom.end(),val)-uncom.begin();
}

vector<int> setval;

int dfs(int cur){
	int &ret=setval[cur];
	if(~ret)return ret;
	ret=0;
	lop(i,adjList[cur].size())
		ret=max(ret,1+dfs(adjList[cur][i]));
	return ret;
}

int main(){
#ifndef ONLINE_JUDGE
	freopen("i.txt","r",stdin);
#endif
	sc(n),sc(m);
	arr.resize(n,vector<int> (m) );
	lop(i,n)lop(j,m)sc(arr[i][j]),p[i*m+j]=i*m+j;
	lop(i,n){
		vec.clear();
		lop(j,m){
			vec.push_back(ii(arr[i][j],j));
		}
		sort(vec.begin(),vec.end());
		int j=0;
		while(j<m){
			while(j+1<m&&vec[j+1].first==vec[j].first){
				int ru=findSet(i*m+vec[j].second);
				int rv=findSet(i*m+vec[j+1].second);
				p[ru]=rv;
				++j;
			}
			++j;
		}
	}

	lop(j,m){
		vec.clear();
		lop(i,n){
			vec.push_back(ii(arr[i][j],i));
		}
		sort(vec.begin(),vec.end());
		int i=0;
		while(i<n){
			while(i+1<n&&vec[i+1].first==vec[i].first){
				int ru=findSet(vec[i].second*m+j);
				int rv=findSet(vec[i+1].second*m+j);
				p[ru]=rv;
				++i;
			}
			++i;
		}
	}
	lop(i,n)lop(j,m){
		uncom.push_back(findSet(i*m+j));
	}
	sort(uncom.begin(),uncom.end());
	uncom.erase(unique(uncom.begin(),uncom.end()),uncom.end());

	lop(i,n){
		vec.clear();
		lop(j,m){
			vec.push_back(ii(arr[i][j],j));
		}
		sort(vec.begin(),vec.end());
		int j=0;
		while(j<m){
			while(j+1<m&&vec[j+1].first>vec[j].first){
				int ru=findSet(i*m+vec[j].second);
				int rv=findSet(i*m+vec[j+1].second);
				adjList[com(ru)].push_back(com(rv));
				++j;
			}
			++j;
		}
	}

	lop(j,m){
		vec.clear();
		lop(i,n){
			vec.push_back(ii(arr[i][j],i));
		}
		sort(vec.begin(),vec.end());
		int i=0;
		while(i<n){
			while(i+1<n&&vec[i+1].first>vec[i].first){
				int ru=findSet(vec[i].second*m+j);
				int rv=findSet(vec[i+1].second*m+j);
				adjList[com(ru)].push_back(com(rv));
				++i;
			}
			++i;
		}
	}
	setval.resize(uncom.size(),-1);
	int mx=0;
	lop(i,n)lop(j,m)mx=max(mx,dfs(com(findSet(i*m+j)))+1);
	lop(i,n)lop(j,m)printf("%d%c",mx-setval[com(findSet(i*m+j))]," \n"[j==m-1]);

}
