#include <bits/stdc++.h>
using namespace std;

using ll = long long;
using ld = long double;

vector<vector<ll>> adjlist;
vector<ll> leaves;

void dfs(ll cur = 0, ll pref = -1) {
	bool leave = true;
	for (ll n : adjlist[cur]) {
		if (n != pref) {
			leave = false;
			dfs(n, cur);
			leaves[cur] += leaves[n];
		}
	}
	if (leave) leaves[cur] = 1;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	ll n;
	cin >> n;
	adjlist.assign(n, {});
	for (ll i = 1; i < n; i++) {
		ll x;
		cin >> x;
		x--;
		adjlist[x].push_back(i);
		adjlist[i].push_back(x);
	}
	leaves.assign(n, 0);
	dfs();
	vector<ll> count(n + 1);
	for (ll i = 0; i < n; i++) {
		count[leaves[i]]++;
	}
	for (ll i = 1; i <= n; i++) {
		count[i] += count[i - 1];
	}
	ll res = 0;
	for (ll i = 1; i <= n; i++) {
		while (count[res] < i) res++;
		cout << res << " ";
	}
	cout << endl;
}