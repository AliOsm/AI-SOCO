#include <bits/stdc++.h>

using namespace std;

const int N = 1000;

char x[N][N];
bool vis[N][N];
int n, m, k, c;

void dfs(int i, int j) {
    if (c >= k) {
        return;
    }
    if (vis[i][j] || x[i][j] != '.') {
        return;
    }
    vis[i][j] = true;
    c++;
    dfs(i - 1, j);
    dfs(i + 1, j);
    dfs(i, j + 1);
    dfs(i, j - 1);
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cin >> n >> m >> k; k = -k;
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            cin >> x[i][j];
            if (x[i][j] == '.') {
                k++;
            }
        }
    }
    int a, b;
    for (int i = 1; i <= n && c < k; i++) {
        for (int j = 1; j <= m && c < k; j++) {
            if (!vis[i][j]) {
                c = 0;
                dfs(a = i, b = j);
            }
        }
    }
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            vis[i][j] = false;
        }
    }
    c = 0;
    dfs(a, b);
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            if (!vis[i][j] && x[i][j] == '.') {
                cout << 'X';
            }
            else {
                cout << x[i][j];
            }
        }
        cout << '\n';
    }
    return 0;
}
