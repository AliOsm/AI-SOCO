/* ****revpro**** */

#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define endl       '\n'
#define pii         pair<ll,ll>
#define vi          vector<ll>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll)x.size()
#define hell        1000000007
#define rep(i,a,b)  for(ll i=a;i<b;i++)
#define repr(i,a,b) for(ll i=b-1;i>=a;i--)    
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mii        map<ll,ll>
using namespace std;

#define N  100005

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    #ifndef ONLINE_JUDGE
    // for getting input from input.txt
    freopen("input.txt", "r", stdin);
    // for writing output to output.txt
    freopen("output.txt", "w", stdout);
    #endif
    int TESTS=1;
//    cin>>TESTS;
    while(TESTS--)
    {
        ll n,m,k;
        cin>>n>>m>>k;
        string s[n];
        rep(i,0,n) cin>>s[i];
        ll dis[n][m];
        rep(i,0,n) rep(j,0,m) dis[i][j]=hell; 
        ll x1,y1,x2,y2;
        cin>>x1>>y1>>x2>>y2;
        x1--,y1--,x2--,y2--;
        dis[x1][y1]=0;
        queue <pii> q;
        q.push({x1,y1});
        ll tx[4]={0,0,1,-1};
        ll ty[4]={1,-1,0,0};
        pii p;
        while(!q.empty())
        {
            p=q.front();q.pop();
            ll x=p.F,y=p.S;
            rep(i,0,4)
            {
                rep(j,1,k+1){
                if((x+j*tx[i]<n)&&(x+j*tx[i]>=0)&&(y+j*ty[i]>=0)&&(y+j*ty[i]<m)&&(s[x+j*tx[i]][y+j*ty[i]]=='.')&&(dis[x+j*tx[i]][y+j*ty[i]]>dis[x][y]))
                    {
                        if(dis[x+j*tx[i]][y+j*ty[i]]>dis[x][y]+1)
                            {dis[x+j*tx[i]][y+j*ty[i]]=dis[x][y]+1;q.push({x+j*tx[i],y+j*ty[i]});}}
                else break;
                }   
            }
        }
        if(dis[x2][y2]>=hell) cout<<-1;
        else cout<<dis[x2][y2]; 
    }
    return 0;
}