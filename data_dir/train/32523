#include<iostream>
#include<cstring>
#include<algorithm>
#include<cstdio>
#include<cmath>
#include<stack>
#include<queue>
#define LiangJiaJun main
#define pa pair<int,int>
using namespace std;
int n,m,ne,h[300004],h2[300004];
int scc,cnt,belong[300004],low[300004],dfn[300004];
int u[300004],v[300004],w[300004];
int val[300004],dis[3000004];
bool inq[3000004];
stack<int>st;
queue<int>q;
struct edge{
    int to,nt,w;
}e[900004],ed[900004];
void add(int u,int v,int w){
     e[++ne].to=v;e[ne].nt=h[u];e[ne].w=w;
     h[u]=ne;
}
void add2(int u,int v,int w){
     ed[++cnt].to=v;ed[cnt].nt=h2[u];ed[cnt].w=w;
     h2[u]=cnt;
}
void tarjan(int x,int fa){
     low[x]=dfn[x]=++cnt;
     inq[x]=1;
     st.push(x);
     for(int i=h[x];i;i=e[i].nt){
         if(e[i].to==fa)continue;
         if(!dfn[e[i].to]){
             tarjan(e[i].to,x);
             low[x]=min(low[x],low[e[i].to]);
         }
         else if(inq[e[i].to]){
             low[x]=min(low[x],dfn[e[i].to]);
         }
     }
     if(low[x]==dfn[x]){
        scc++;
        int now=-1;
        while(now!=x){
            now=st.top();st.pop();
            inq[now]=0;
            belong[now]=scc;
        }
     }
}
void CLEAR(){
     scc=0;cnt=0;ne=0;
     memset(h2,0,sizeof(h2));
     memset(low,0,sizeof(low));
     memset(h,0,sizeof(h));
     memset(belong,0,sizeof(belong));
     memset(val,0,sizeof(val));
     memset(dfn,0,sizeof(dfn));
}
void rebuild(){
     cnt=0;
     for(int i=1;i<=n;i++){
         for(int j=h[i];j;j=e[j].nt){
             if(e[j].w==1){
                if(belong[e[j].to]!=belong[i])add2(belong[i],belong[e[j].to],1);
                else val[belong[i]]=1;
             }
             else{
                if(belong[e[j].to]!=belong[i])add2(belong[i],belong[e[j].to],0);
             }
         }
     }
}
int w33ha(){
    CLEAR();
    for(int i=1;i<=m;i++){
        scanf("%d%d%d",&u[i],&v[i],&w[i]);
        add(u[i],v[i],w[i]);
        add(v[i],u[i],w[i]);
    }
    for(int i=1;i<=n;i++){
        if(!dfn[i])tarjan(i,0);
    }
    int s,t;
    rebuild();

    scanf("%d%d",&s,&t);
    s=belong[s];
    t=belong[t];
    for(int i=0;i<=300001;i++)dis[i]=-1;
    while(!q.empty())st.pop();
    q.push(s);
    dis[s]=val[s];
    while(!q.empty()){
        int x=q.front();q.pop();
        for(int i=h2[x];i;i=ed[i].nt){
            if( dis[ed[i].to]==-1){
                if(dis[x]==1||ed[i].w==1){
                    dis[ed[i].to]=1;
                }
                else dis[ed[i].to]=0;
                q.push(ed[i].to);
            }
            if(dis[ed[i].to]==0&&val[ed[i].to]==1){
                dis[ed[i].to]=1;
            }
        }
    }
    if(dis[t]==-1)puts("NO");
    else if(dis[t]==0)puts("NO");
    else puts("YES");
    return 0;
}
int LiangJiaJun(){
    while(scanf("%d%d",&n,&m)!=EOF)w33ha();
    return 0;
}
