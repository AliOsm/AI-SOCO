#include <iostream>
#include <vector>
#include <algorithm>
#include <memory>
#include <map>
#include <unordered_map>
#include <set>
#include <queue>
#include <unordered_set>
#include <functional>
#include <climits>
#include <cstring>
#include <cmath>

using namespace std;
using ll = long long;

const ll MAXN = (ll)1e18;
vector<ll> a;
vector<int> c;

inline int count(ll x) {
	int lo = -1, hi = a.size();
	while(hi - lo > 1) {
		int m = lo + (hi - lo) / 2;
		if (a[m] <= x) {
			lo = m;
		} else {
			hi = m;
		}
	}
	return hi;
}

inline ll query(ll l, ll r) {
	return count(r) - count(l - 1);
}

void gen(int pos, int k) {
	if (k < 0) {
		return;
	}
	if (pos == 19) {
		if (k > 0) {
			return;
		}
		ll ret = 0;
		for(int i = 0; i < 19; ++i) {
			if (MAXN / 10 < ret) {
				return;
			}
			ret = ret * 10 + c[i];
		}
		a.push_back(ret);
		return;
	}
	gen(pos + 1, k);
	for(int i = 1; i <= 9; ++i) {
		c[pos] = i;
		gen(pos + 1, k - 1);
		c[pos] = 0;
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie();
	c.resize(19);
	gen(0, 1);
	gen(0, 2);
	gen(0, 3);
	sort(a.begin(), a.end());
	int T;
	cin >> T;
	for(int i = 0; i < T; ++i) {
		ll l, r;
		cin >> l >> r;
		cout << query(l, r) << endl;
	}
	return 0;
}
