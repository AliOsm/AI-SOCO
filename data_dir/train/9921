#include <bits/stdc++.h>//coded by Nurstan

#define ll long long
#define pb push_back
#define mp make_pair

#define allx x.begin(), x.end()
#define alla a.begin(), a.end()

#define F first
#define S second

// fixed << setprecision
// next_permutation(a, a + n)
// set <int> :: iterator it = x.begin(); it != x.end(); it ++

using namespace std;

const int INF = int(1e9);

inline void boost(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
}

vector <int> x;
vector <int> y;

int main(){
	boost();
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	int n, m, q;
	cin >> n >> m >> q;
	string a, b;
	cin >> a >> b;
	int d[q][2];
	for(int i = 0; i < q; i ++) {
		cin >> d[i][0] >> d[i][1];
	}
	if(n < m) {
		for(int i = 0; i < q; i ++) {
			cout << 0 << endl;
		}
		return 0;
	}
	else if(n == m){
		for(int i = 0; i < q; i ++) {
			if(d[i][0] == 1 && d[i][1] == n && a == b) {
				cout << 1 << endl;
			}
			else {
				cout << 0 << endl;
			}
		}
		return 0;
	}
	else {
		int k = 0;
		string p = "";
		for(int i = 0; i < n; i ++) {
			if(k < m) {
			k ++;
			}
			p += a[i];
			if(k == m) {
				if(p == b) {
					x.pb(i - m + 2);
					y.pb(i + 1);		
				}
				p.erase(p.begin(), p.end() - (m - 1));
			}
		}
		for(int i = 0; i < q; i ++) {
			int sum = 0;
			for(int j = 0; j < x.size(); j ++) {
				if(d[i][0] <= x[j] && y[j] <= d[i][1]) {
					sum ++;
				}
			}
			cout << sum << endl;
		}
		return 0;
	}
	exit(0);
}

