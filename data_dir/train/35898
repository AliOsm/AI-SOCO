#include<bits/stdc++.h>
using namespace std;

#define int           long long
#define S             second
#define F             first
#define pb            push_back
#define ppb           pop_back()
#define ppb           pop_back()
#define B(c)          (c).begin()
#define E(c)          (c).end()
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend() 
#define lb            lower_bound
#define si(c)         (int)((c).size())
#define lcm(a,b)      (a * (b / __gcd(a,b)))  
#define inf           (int)(2e18)
#define err           cerr << "move" << '\n';
#define endl          '\n'
#define pow(x, n)     (int)(pow(x, n))
#define mp            make_pair

typedef vector<int>                           vi;
typedef pair<int,int>                         pii;
typedef vector<pii>                           vpi;
typedef vector<vector<int> >                  vvi;;
typedef priority_queue<pii, vector<pii>, greater<pii> > pq;

clock_t start;
mt19937_64 rng(chrono::system_clock::now().time_since_epoch().count());
const int mod = 1e9+7;
void solve(){
    int n, ans2 = 1, ans3 = 1;
    cin >> n;
    string s;
    cin >> s;
    int ruk[26], dp[n+1] = {0};
    for(int i = 0; i < 26; i++){
        cin >> ruk[i];
    }
    dp[0] = 1;
    for(int i = 1; i <= n; i++){
        int mn = inf;
        for(int j = i; j > 0; j--){
            mn = min(mn, ruk[s[j-1]-'a']);
            if(mn >= i-j+1){
                dp[i] = (dp[i]+dp[j-1])%mod;
                ans2 = max(ans2, i-j+1);
            }
            else break;

        }
    }
    int pre = 1, mn = inf;
    for(int i = 1; i <= n; i++){
        mn = min(mn, ruk[s[i-1]-'a']);
        if(mn < i-pre+1){
            pre = i, mn = ruk[s[i-1]-'a'];
            ans3++;
        }
    }
    cout << dp[n] << endl;
    cout << ans2 << endl;
    cout << ans3 << endl;
    
}

signed main(){

    ios_base::sync_with_stdio(0); 
    cin.tie(0); cout.tie(0);   

    int t = 1;
    start = clock(); 

    cout << fixed << setprecision(15);

    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout);
    freopen("error.txt", "w", stderr);
    #endif
    
    //cin >> t;
    
    while(t--){
        solve();
    }

    double time_taken = double(clock() - start) / double(CLOCKS_PER_SEC); 
    cerr << time_taken;
}