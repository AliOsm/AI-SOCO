#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif

#include <iostream>
#include <cmath>
#include <iomanip>
#include <string>
#include <cstring>
#include <cstdio>
#include <math.h>
#include <algorithm>
#include <stdio.h>
#include <climits>
#include <stack>
#include <queue>
#include <vector>
#include <set>
#include <sstream>
#include <map>
#include <ctime>
#include <cstdlib>
#include <list>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include<unordered_map>
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
int dx8[] = { 0, 0, 1, -1, 1, -1, 1, -1 };
int dy8[] = { -1, 1, 0, 0, -1, -1, 1, 1 };
int dy[] = { 1, -1, 0, 0 };
int dx[] = { 0, 0, 1, -1 };
int X[6] = { 0, 0, 0, -1, 0, 1 };
int Y[6] = { 0, 0, -1, 0, 1, 0 };
int Z[6] = { 1, -1, 0, 0, 0, 0 };

// start + (end - start) / 2;

#define OO ll(1e12)
#define MOD ll(1e9+7)
#define BASE 128LL
#define BASEINV (ll)570312504
using namespace std;

int main() {
	int n;
	scanf("%d", &n);
	vector<int>v(n), o;
	for (int i = 0; i < n; i++) {
		scanf("%d", &v[i]);
		if (v[i] % 2)o.push_back(i);
	}
	int ans = 0, cnt = 0;
	if (v[0] % 2 == 0 || v[n - 1] % 2 == 0) {
		puts("No");
		return 0;
	}
	for (int i = 0; i < o.size(); i++) {
		bool f = 0;
		for (int j = i + 1; j < o.size(); j++) {
			cnt = o[j] - o[i] + 1;
			if (cnt % 2) {
				if (o[j] + 1 == n || v[o[j] + 1] % 2) {
					ans++;
					f = 1;
					i = j;
					break;
				}
			}
		}
		cnt = o[o.size() - 1] - o[i] + 1;
		if (cnt % 2 && !f) {
			if (o[o.size() - 1] + 1 == n || v[o[o.size() - 1] + 1] % 2) {
				ans++;
				f = 1;
				break;
			}
		}
		if (!f)break;
	}
	if (ans % 2)puts("Yes");
	else puts("No");
}