#include <bits/stdc++.h>
using namespace std;
 
typedef long long ll;
const int maxn=1e6+7;
const int inf=INT_MAX;
const ll inff=1e18;
const ll mod=1e9+7;
#define pii pair<int,int>
#define mkp make_pair
#define F first
#define S second
#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
//#define int ll
 
#ifdef HNO2
#define IOS
#else
#define endl '\n'
#define IOS ios::sync_with_stdio(0); cin.tie(0);
#endif // HNO2

int n;
pii a[maxn];
int b[maxn],dp[maxn],turn[maxn];
pii maxx[maxn];
int c[maxn];
int ans[maxn];
 
int32_t main()
{
    IOS
    cin>>n;
    for (int i=1;i<=n;i++)
    {
    	cin>>a[i].F;
    	a[i].S=i;
	}
    sort(a+1,a+n+1);
    for (int i=1;i<=n-1;i++) b[i]=a[i+1].F-a[i].F;
    for (int i=1;i<=n;i++)
    {
    	if (i==n)
    	{
    		dp[i]=maxx[i-3].F+b[i],turn[i]=maxx[i-3].S;
		}
    	else
    	{
    		dp[i]=dp[i-1],turn[i]=i-1;
    		if (i>=3&&dp[i]<maxx[i-3].F+b[i]) dp[i]=maxx[i-3].F+b[i],turn[i]=maxx[i-3].S;
		}
    	maxx[i]=max(maxx[i],mkp(dp[i],i));
    //	cout<<dp[i]<<endl;
	}
	cout<<a[n].F-a[1].F-dp[n]<<' ';
	
	int now=n,cnt=0;
	while (now)
	{
		if (turn[now]==now-1) now--;
		else
		{
			if (now!=n) c[now]=1,cnt++;
			now=turn[now];
		}
	}
	cout<<cnt+1<<endl;
	
	cnt=1;
	for (int i=1;i<=n;i++)
	{
		if (c[i]==1) ans[a[i].S]=cnt++;
		else ans[a[i].S]=cnt;
	}
	for (int i=1;i<=n;i++) cout<<ans[i]<<" \n"[i==n];
}
