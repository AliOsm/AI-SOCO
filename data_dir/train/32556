/*input
2500 2500 8
1 549 1279 1263 2189
1 303 795 1888 2432
1 2227 622 2418 1161
3 771 2492 1335 1433
1 2017 2100 2408 2160
3 48 60 798 729
1 347 708 1868 792
3 1940 2080 377 1546
*/

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair < int, int > ii;

const int N = 2500 + 5;

int n, m, q;

int fen[N][N];

void up(int x, int y, int k) {
	for(int i = x; i < N; i += i & -i)
		for(int j = y; j < N; j += j & -j)
			fen[i][j] ^= k;
}

void up(int x1, int y1, int x2, int y2, int k) {
	up(x1, y1, k);
	up(x2 + 1, y1, k);
	up(x1, y2 + 1, k);
	up(x2 + 1, y2 + 1, k);
}

int get(int x, int y) {
	int res = 0;
	for(int i = x; i > 0; i -= i & -i)
		for(int j = y; j > 0; j -= j & -j)
			res ^= fen[i][j];
	return res;
}

map < pair < ii, ii >, int > M;

int main() {

	scanf("%d %d %d", &n, &m, &q);

	srand(time(0) ^ n ^ m ^ q);

	for(int i = 1; i <= q; i++) {
		int c, x1, y1, x2, y2;
		scanf("%d %d %d %d %d", &c, &x1, &y1, &x2, &y2);
		if(c < 3 and x1 > x2) swap(x1, x2);
		if(c < 3 and y1 > y2) swap(y1, y2);
		if(c == 1) {
			int rnd = rand() * rand() * rand() * x1 ^ y1 * x2 * y2;
			M[{{x1, y1}, {x2, y2}}] = rnd;
			up(x1, y1, x2, y2, rnd);
		}
		else if(c == 2) {
			int rnd = M[{{x1, y1}, {x2, y2}}];
			up(x1, y1, x2, y2, rnd);
		}
		else {
			if(get(x1, y1) == get(x2, y2))
				puts("Yes");
			else
				puts("No");
		}
	}

    return 0;

}

