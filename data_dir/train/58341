#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
#define pb(a) push_back(a)
#define sz(a) ((int)(a.size()))
#define INF 100010.0
// DisjoinedSet
int par[5010];
void init(){for(int i=0;i<5010;++i)par[i]=i;}
int get(int vr){return (par[vr]==vr)?vr:par[vr]=get(par[vr]);}
void merge(int a,int b){par[get(a)]=get(b);}
// </end>
struct edge{
  int f,t,id; double pr;
  edge(int _f=0,int _t=0,double _pr=0,int _id=0){f=_f; t=_t; pr=_pr; id=_id;}
  bool operator<(const edge& w)const{return(pr<w.pr);}
};
int n,m,k;
vector<edge> E,U;
// MST
int s0;
vector<int> use;
bool MST(double add){
  use.clear(); U.clear(); s0=0;
  for(int i=0;i<sz(E);++i)
   if(E[i].f==0)U.pb(edge(E[i].f, E[i].t, E[i].pr+add, E[i].id));
   else U.pb(E[i]);
  sort(U.begin(), U.end());
  init();
  for(int i=0;i<sz(U);++i)
   if(get(U[i].f)!=get(U[i].t)){
    merge(U[i].f, U[i].t);
    s0+= (U[i].f==0);
    use.pb(U[i].id);
                               }
  return (n-1==sz(use));
}
int main(){
  scanf("%d%d%d",&n,&m,&k);
  for(int i=0;i<m;++i){
   int a,b; double w;
   scanf("%d%d%lf",&a,&b,&w);
   if(a>b)swap(a,b); --a; --b;
   E.pb(edge(a,b,w,i));
                      }
  if(!MST(0))printf("-1\n");
  else{
   double lo=-INF,hi=INF,mid;
   for(int i=0;i<120;++i){
    mid=(lo+hi)/2;
    MST(mid);
    if(s0==k)break;
    if(s0<k)hi=mid;
    else lo=mid;
                         }
   MST(mid);
   if(s0!=k)printf("-1\n");
   else{printf("%d\n",sz(use)); for(int i=0;i<sz(use);++i)printf("%d%c", use[i]+1, (i+1)==sz(use)?'\n':' ');}
      }
  //system("pause");
  return 0;
}
