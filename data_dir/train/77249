#include<bits/stdc++.h>
using namespace std;

#define MAX 50002

int n;

vector<int> v;

map<int, vector<int> > mp;
vector<int> pu;

priority_queue<pair<int,int> > mpp;
vector<int> lis;
bool ok(int mid){
	pu.clear();
	for (int i = 0; i < n; i++){
		mpp.push(make_pair(v[i],1) );
	}
	while (mpp.size()){
		int val = mpp.top().first;
		int cnt = 0;
		while (!mpp.empty() && mpp.top().first == val){
			cnt += mpp.top().second;
			mpp.pop();
		}
		if (val == 0){
			return false;
		}
		if(val <= lis[mid]){
			pu.push_back(val);
			cnt--;
		}
		if(cnt)mpp.push(make_pair(val >> 1, cnt));
	}
	return true;
}
int main(){
	cin >> n;
	for (int i = 0; i < n; i++){
		int a;
		scanf("%d", &a);
		v.push_back(a);
		while (a > 0){
			mp[a].push_back(i);
			if (a % 2){
				a -= 1;
				a /= 2;
			}
			else{
				a /= 2;
			}
		}
	}
	for (auto it = mp.begin(); it != mp.end(); it++){
		lis.push_back((*it).first);
	}
	int mint = 0;
	int maxt = mp.size() - 1;
	while (mint + 1 < maxt){
		int mid = (mint + maxt) >> 1;
		if (ok(mid)){
			maxt = mid;
		}
		else{
			mint = mid + 1;
		}
	}
	if (ok(mint)){
		for (int i = 0; i < pu.size(); i++){
			if (i)printf(" ");
			printf("%d", pu[i]);
		}
		puts("");
	}
	else{
		ok(maxt);
		for (int i = 0; i < pu.size(); i++){
			if (i)printf(" ");
			printf("%d", pu[i]);
		}
		puts("");
	}
	return 0;
}