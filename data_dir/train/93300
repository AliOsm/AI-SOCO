# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) (x&1)
typedef long long ll;
typedef long double ld;
const ll oo = /*2 * 1000 * 1000 * 1000*/0x3f3f3f3f;
const int _cnt = 1000 * 1000;
const int _p = 1000 * 1000 * 1000 + 7;
//const int _p = 1007;
ll o(ll x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
//ll gcd(ll a, ll b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }
using namespace std;

void file_put() {
    freopen("filename.in", "r", stdin);
    freopen("filename.out", "w", stdout);
}

struct point{
    int x,y;
};

point p[200005];
ll ans=0;
int n;

double get_xl(int x,int y){
    if (p[x].x==p[y].x) return oo;
    return ((double)p[x].y-p[y].y)/(p[x].x-p[y].x);
}

void bat(int k){
    map <double ,int> M;
    map <double ,int>::iterator it;
    int t;
    for (int i=1; i<=n; i++){
        if (i==k) continue;
        M[get_xl(i,k)]++;
    }
    for (it=M.begin(); it!=M.end(); it++){
        t=it->second;
        if (t<2) continue;
        ans+=(ll)t*(t-1)/2;
    }
    //for (it=M.begin(); it!=M.end(); it++) cout<<it->first<<" "<<it->second<<" ";
    //cout<<endl;
}

int main() {
    //file_put();

    scanf("%d",&n);
    for (int i=1; i<=n; i++) scanf("%d%d",&p[i].x,&p[i].y);
    for (int i=1; i<=n; i++) bat(i);
    cout<<(ll)n*(n-1)*(n-2)/6-ans/3<<endl;

    return 0;
}
