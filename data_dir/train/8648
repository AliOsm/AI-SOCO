//In the name of Allah

#include<bits/stdc++.h>

using namespace std;

const int Maxn = 100 + 5, Max = (1 << 20);
long long n, m, b, dp[2][Max], ans;
struct node
{
    long long x, k, num;
}arr[Maxn];

bool cmp(node n1, node n2)
{
    if(n1.k > n2.k)
        return true;
    return false;
}

int main()
{
    scanf("%I64d%I64d%I64d", &n, &m, &b);
    int d, c;
    for(int i = 0; i < n; i ++)
    {
        scanf("%I64d%I64d%I64d", &arr[i].x, &arr[i].k, &c);
        for(int j = 0; j < c; j ++)
        {
            scanf("%d", &d);
            arr[i].num |= (1 << (d - 1));
        }
    }
    int s = (1 << m);
    sort(arr, arr + n, cmp);
    for(int i = 0; i < s; i ++)
        dp[0][i] = dp[1][i] = LLONG_MAX;
    dp[0][0] = 0;
    for(int i = 1; i < s; i ++)
        if((i | arr[0].num) == arr[0].num)
            dp[0][i] = arr[0].k * b + arr[0].x;
    for(int i = 1; i < n; i ++)
    {
        for(int j = 0; j < s; j ++)
        {
            if(dp[(i - 1) % 2][(s - 1 - arr[i].num) & j] == LLONG_MAX)
                dp[i % 2][j] = dp[(i - 1) % 2][j];
            else
            {
                if(((s - 1 - arr[i].num) & j) != 0)
                    dp[i % 2][j] = min(dp[(i - 1) % 2][j], dp[(i - 1) % 2][(s - 1 - arr[i].num) & j] + arr[i].x);
                else
                    dp[i % 2][j] = min(dp[(i - 1) % 2][j], arr[i].x + arr[i].k * b);
            }
        }
    }
    if(dp[(n - 1) % 2][s - 1] == LLONG_MAX)
        printf("-1\n");
    else
        printf("%I64d\n", dp[(n - 1) % 2][s - 1]);
    return 0;
}
