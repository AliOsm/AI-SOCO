#include <bits/stdc++.h>
using namespace std;
#define F first
#define S second
#define R cin>>
#define Z class
#define ll long long
#define ln cout<<'\n'
#define in(a) insert(a)
#define pb(a) push_back(a)
#define pd(a) printf("%.10f\n",a)
#define mem(a) memset(a,0,sizeof(a))
#define all(c) (c).begin(),(c).end()
#define iter(c) __typeof((c).begin())
#define rrep(i,n) for(ll i=(ll)(n)-1;i>=0;i--)
#define REP(i,m,n) for(ll i=(ll)(m);i<(ll)(n);i++)
#define rep(i,n) REP(i,0,n)
#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)
template<Z A>void pr(A a){cout<<a;ln;}
template<Z A,Z B>void pr(A a,B b){cout<<a<<' ';pr(b);}
template<Z A,Z B,Z C>void pr(A a,B b,C c){cout<<a<<' ';pr(b,c);}
template<Z A,Z B,Z C,Z D>void pr(A a,B b,C c,D d){cout<<a<<' ';pr(b,c,d);}
template<Z A>void PR(A a,ll n){rep(i,n){if(i)cout<<' ';cout<<a[i];}ln;}
ll check(ll n,ll m,ll x,ll y){return x>=0&&x<n&&y>=0&&y<m;}
const ll MAX=1e9+7,MAXL=1LL<<61,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};
typedef pair<int,int> P;
void extended_euclid(ll x,ll y,ll *c,ll *a,ll *b){
  ll a0,a1,a2,b0,b1,b2,r0,r1,r2,q;r0=x;r1=y;a0=1;a1=0;b0=0;b1=1;
  while(r1>0){q=r0/r1;r2=r0%r1;a2=a0-q*a1;b2=b0-q*b1;r0=r1;r1=r2;a0=a1;a1=a2;b0=b1;b1=b2;}
  *c=r0;*a=a0;*b=b0;
}

ll get_inv(ll n, ll p){
  ll a,b,c;
  extended_euclid(n,p,&c,&a,&b);
  if(a<p) a+=p;
  return a%p;
}

void Main() {
  ll n,m;
  cin >> n >> m;
  ll a[n],b[n];
  rep(i,n) R a[i];
  rep(i,n) R b[i];
  ll c[n+1],d[n+1];
  c[n]=d[n]=1;
  rrep(i,n) {
    c[i]=c[i+1];
    d[i]=d[i+1];
    if(!a[i]) {
      c[i]*=m;
      c[i]%=MAX;
    }
    if(!b[i]) {
      d[i]*=m;
      d[i]%=MAX;
    }
  }
  ll ans=0,sum=1;
  rep(i,n) {
    if(!a[i]&&b[i]) {
      ans+=(m-b[i])*c[i+1]%MAX*d[i+1]%MAX*sum%MAX;
      ans%=MAX;
    } else if(a[i]&&!b[i]) {
      ans+=(a[i]-1)*c[i+1]%MAX*d[i+1]%MAX*sum%MAX;
      ans%=MAX;
    } else if(a[i]&&b[i]) {
      if(a[i]==b[i]) continue;
      if(a[i]>b[i]) {
        ans+=c[i+1]*d[i+1]%MAX*sum%MAX;
        ans%=MAX;
      }
      break;
    } else if(!a[i]&&!b[i]) {
      ans+=m*(m-1)/2%MAX*c[i+1]%MAX*d[i+1]%MAX*sum%MAX;
      ans%=MAX;
      sum*=m;
      sum%=MAX;
    }
  }
  pr(ans*get_inv(c[0]*d[0]%MAX,MAX)%MAX);
}

int main(){ios::sync_with_stdio(0);cin.tie(0);Main();return 0;}
