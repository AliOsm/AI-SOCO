#include<bits/stdc++.h>
using namespace std;

//defines
#define openin freopen("input.txt","r",stdin)
#define openout freopen("output.txt","w",stdout)
#define fast ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define ll long long
#define int long long
#define mod 1000000007
#define repr(i,x,y) for (__typeof(x) i=x;i>=y;i--)
#define rep(i,x,y) for (__typeof(x) i=x;i<=y;i++)
#define all(c) (c).begin(),(c).end()
#define ff first
#define ss second
#define pb push_back
#define mp make_pair

/* Print pair */
template <typename T,typename S>
ostream & operator << (ostream &os , const pair<T,S> &v) {
    os << "(" ;
    os << v.first << "," << v.second << ")" ;
    return os ;
}
/* Print vector */
template <typename T>
ostream & operator << (ostream &os , const vector<T> &v) {
    os << "[" ;
    int sz = v.size() ;
    for(int i = 0 ; i < sz ; ++i) {
        os << v[i] ;
        if(i!=sz-1)os << "," ;
    }
    os << "]\n" ;
    return os ;
}
/* Print set */
template <typename T>
ostream & operator << (ostream &os , const set<T> &v) {
    T last = *v.rbegin() ;
    os << "[" ;
    for(auto it : v) {
        os << it  ;
        if(it != last) os << "," ;
    }
    os << "]\n" ;
    return os ;
}
/* Print Map */
template <typename T,typename S>
ostream & operator << (ostream &os , const map<T,S> &v) {
    for(auto it : v) {
        os << it.first << " : " << it.second << "\n" ;
    }
    return os ;
}
int power(int a , int b)
{
    int res = 1 ;
    while(b)
    {
        if(b%2) {
            res = (res * a) % mod ;
        }
        b/=2 ;
        a = (a*a) % mod ;
    }
    return res ;
}

//debug
#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
        cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

const int N = 3e5 + 5 ; 

int x[N] , y[N] , ans[N] , pl[N] , pr[N] ;
pair<pair<int,int>,int> arr[N] ;
int32_t main() {
    fast ; 
    int n , m ; cin >> n >> m ;
    for(int i = 1 ; i <= n ; ++i) {
        cin >> x[i] >> y[i] ;
        arr[i] = {{x[i],y[i]},i} ;
    }
    sort(arr + 1 , arr + 1 + n , [](pair<pair<int,int>,int>l ,pair<pair<int,int>,int> r){
        return l.ff.ff + r.ff.ss < l.ff.ss + r.ff.ff ;
    });
    rep(i,1,n) {
        pl[i] = pl[i-1] + arr[i].ff.ff ; 
    }
    for(int i = n ; i >= 1 ; --i) {
        pr[i] = pr[i + 1] + arr[i].ff.ss ;
    }
    rep(i,1,n) {
        ans[arr[i].ss] = (i - 1) * (arr[i].ff.ss) + pl[i - 1] ;
        ans[arr[i].ss] += (n - i) * (arr[i].ff.ff) + pr[i + 1] ;
    }
    rep(i,1,m) {
        int u , v ; cin >> u >> v ; 
        int score = min(x[u] + y[v] , x[v] + y[u]) ;
        ans[u] -= score ; 
        ans[v] -= score ;
    }
    rep(i,1,n) cout << ans[i] << " " ; 
    cout << endl ;
    return 0 ;
}