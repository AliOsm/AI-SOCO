#include <bits/stdc++.h>
using namespace std;

#define ENGZ ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define sfi(x) scanf("%d" , &x)
#define sfi2(x, y) scanf("%d%d" , &x,&y)
#define sfl2(x, y) scanf("%I64d%I64d" , &x,&y)
#define sfl(x) scanf("%I64d" , &x)
#define sfl3(x, y, z) scanf("%I64d%I64d%I64d", &x, &y, &z)
#define sfd(x) scanf("%lf", &x)
#define sfd2(x, y) scanf("%lf", &x, &y)
#define sfc(x) scanf("%c", &x)
#define testv(x) cerr << x << ' '
#define wtf(s) freopen((s), "w", stdout)
#define rff(s) freopen((s), "r", stdin)
#define test cerr << "here"
#define mod 1000000007
#define pi (2*acos(0))
typedef long double ld;
typedef long long ll;

bool cont(string s, string t)
{
    int j = (int)t.size() - 1;
    for (int i = (int)s.size() - 1; i > - 1; i--)
        if (j == -1)
            return true;
        else if (s[i] != t[j])
            return false;
        else
            j--;
    return j == -1;
}

int main()
{
    bool m = false, f = false, noun = false;
    string s, t;
    getline(cin, s);
    if (s.find(' ') == -1)
    {
        if(cont(s, "lios") || cont(s, "liala") || cont(s, "etr") || cont(s, "etra") || cont(s, "initis") || cont(s, "inites"))
            cout << "YES";
        else
            cout << "NO";
        return 0;
    }
    s += ' ';
    for (int i = 0; i < s.size(); i++)
        if (s[i] == ' ')
        {
            if (cont(t, "lios") && ((!f && !m) || m) && !noun)
                m = true;
            else if (cont(t, "lios"))
                return cout << "NO", 0;
            else if (cont(t, "liala") && ((!f && !m) || f) && !noun)
                f = true;
            else if (cont(t, "liala"))
                return cout << "NO", 0;
            else if (cont(t, "etr") && ((!f && !m) || m) && !noun)
                m = true, noun = true;
            else if (cont(t, "etr"))
                return cout << "NO", 0;
            else if (cont(t, "etra") && ((!f && !m) || f) && !noun)
                f = true, noun = true;
            else if (cont(t, "etra"))
                return cout << "NO", 0;
            else if (cont(t, "initis") && m && noun)
                m = true;
            else if (cont(t, "initis"))
                return cout << "NO", 0;
            else if (cont(t, "inites") && f && noun)
                f = true;
            else
                return cout << "NO", 0;
            t = "";
        }
        else
            t += s[i];
    if (noun)
        cout << "YES";
    else
        cout << "NO";
    return 0;
}