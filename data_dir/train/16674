# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) (x&1)
typedef long long ll;
typedef long double ld;
const ll oo = 2 * 1000 * 1000 * 1000;
const int _cnt = 1000 * 1000;
const int _p = 1000 * 1000 * 1000 + 7;
ll o(ll x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a*b / gcd(a, b); }
using namespace std;

void file_put() {
	freopen("filename.in", "r", stdin);
	freopen("filename.out", "w", stdout);
}

struct point {
	ll x, y;
};

int n, x, y, k, b;
point p[100005];
ll minnum = oo*oo;

bool cmp(point p, point q) {
	return p.y > q.y || p.y == q.y && p.x > q.x;;
}

int main() {
	//file_put();

	scanf("%d", &n);
	scanf("%d%d", &x, &y);
	for (int i = 1; i <= n; i++) {
		scanf("%d%d", &k, &b);
		p[i].x = (ll)k*x + b;
		p[i].y = (ll)k*y + b;
	}
	sort(p + 1, p + n + 1, cmp);
	for (int i = 1; i <= n; i++) {
		if (p[i].x > minnum) {
			printf("YES\n");
			return 0;
		}
		minnum = min(minnum, p[i].x);
	}
	printf("NO\n");

	return 0;
}
