#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define x first
#define y second
#define fastread ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define PI (atan(1)*4)
#define mp make_pair
using namespace std;
const int maxn = 1e5 + 7;
ll x[maxn], y[maxn];
int n;
int vis[maxn];

struct eq {
    ll a, b, c;
    eq(int p, int q) {
        a = y[q] - y[p];
        b = x[p] - x[q];
        c = x[p] * y[q] - x[q] * y[p];
        c = -c;
    }
    bool satisfy(int pos) {
        return ((x[pos] * a + y[pos] * b + c) == 0);
    }
};

bool solve(int a, int b, int reset = 1) {
    if (reset)
        memset(vis, 0, sizeof(vis));
    eq e(a, b);
    for (int i = 1; i <= n; i++) {
        if (e.satisfy(i))
            vis[i] = 1;
    }
    vector<int> npos;
    for (int i = 1; i <= n; i++) {
        if (vis[i] == 0)
            npos.pb(i);
    }
    if (reset == 0)
        return (npos.size() == 0);
    else {
        if (npos.size() <= 2)
            return true;
        return solve(npos[0], npos[1], 0);
    }
}
int main()
{
    fastread;
    cin >> n;
    for (int i = 1; i <= n; i++) {
        cin >> x[i] >> y[i];
    }
    if (n <= 4) {
        cout << "YES";
        return 0;
    }
    eq e(1, 2);
    for (int i = 1; i <= n; i++) {
        if (e.satisfy(i))
            vis[i] = 1;
    }
    int pos = -1;
    for (int i = 1; i <= n; i++) {
        if (vis[i] == 0) {
            pos = i;
            break;
        }
    }
    if (pos == -1) {
        cout << "YES";
        return 0;
    }
    if (solve(1, 2) || solve(1, pos) || solve(2, pos))
        cout << "YES";
    else
        cout << "NO";
    return 0;
}