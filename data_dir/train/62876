#include <iostream>
#include <vector>

#define PB push_back
#define F first
#define S second
using namespace std;

const int MAXN = 100005;
bool mark[MAXN];
vector<pair<int, int> > v[MAXN];
vector<int> ans;

bool DFS(int n, int par)
{
	mark[n] = true;
	bool o = 0, t = 0;
	for(auto x : v[n])
		if(!mark[x.F])
			o |= DFS(x.F, n);
		else if(x.F == par)
			if(x.S == 2)
				t = 1;
	if(t == 1 && o == 0)
	{
		o = 1;
		ans.PB(n);
	}
	return o;
}

int main ()
{
	int n;
	cin >> n;
	for(int i = 0; i < n - 1; i++)
	{
		int a, b, c;
		cin >> a >> b >> c;
		a--, b--;
		v[a].PB({b, c});
		v[b].PB({a, c});
	}
	DFS(0, -1);
	cout << ans.size() << endl;
	for(int i = 0; i < ans.size(); i++)
		cout << ans[i] + 1 << ' ';
	cout << endl;
	return 0;
}
