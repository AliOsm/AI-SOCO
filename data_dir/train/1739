#define _USE_MATH_DEFINES

#include <iostream>
#include <cstdio>
#include <string>
#include <cstdlib>
#include <set>
#include <utility>
#include <vector>
#include <list>
#include <algorithm>
#include <regex>
#include <cmath>
#include <map>
#include <iterator>
#include <climits>
#include <numeric>
#include <bitset>
#include <unordered_map>
#include <unordered_set>
#include <iomanip>
#include <queue>
#include <deque>
#include <stack>
#include <array>
#include <valarray>
#include <complex>
#include <random>
#include <functional>
#include <cassert>
#include <chrono>
#include <memory>

using namespace std;

#define int long long
//region TEMPLATE
////@formatter:off
#define double long double
typedef long long ll;
typedef unsigned long long ull;
template<typename T>void __read(T &a) { cin >> a; }
template<typename T, typename ... Args> void __read(T &a, Args &... args) { cin >> a;__read(args...);}
#define make(t, ...) t __VA_ARGS__; __read(__VA_ARGS__)
#define makev(a, n) VI a(n); FOR(n) cin >> a[i];
#define ALL(x) (x).begin(), (x).end()
#define RALL(x) (x).rbegin(), (x).rend()
#define FORIT(p) for(auto it = p.begin(); it != p.end(); it++)
#define FOR(b) for(signed i = 0; i <(b); i++)
#define FORE(i, l, r) for(int i = (l); i < (r); i++)
#define NFOR(i, n) for(int i = (((int) n)-1); i >= 0; i--)
typedef vector<int> VI;
typedef vector<vector<int>> VVI;
typedef pair<int, int> PII;
typedef pair<pair<int, int>, int> PPII;
constexpr ll M7 = 1000000007ll;
constexpr ll M9 = 1000000009ll;
constexpr ll MFFT = 998244353ll;
template<class T> void outv(T &a) { for (auto &x : a) cout << x << ' '; }
static mt19937 rnd(static_cast<unsigned>(chrono::steady_clock::now().time_since_epoch().count())); // NOLINT(cert-err58-cpp)
auto __fast_io__ = (ios_base::sync_with_stdio(false), cin.tie(nullptr)); // NOLINT(cert-err58-cpp,cppcoreguidelines-interfaces-global-init)
////@formatter:on
//endregion


int32_t main() {
    make(int, t);
    while (t--) {
        make(int, n);
        makev(a, n);
        bool eq = false;
        for (int i = 1; i < n; ++i) {
            eq = eq || a[i] == a[i - 1];
        }
        VI ans(n);
        for (int i = 1; i + 1 < n; ++i) {
            if (a[i] == a[i - 1]) {
                ans[i] = ans[i - 1];
            } else {
                ans[i] = ans[i - 1] ^ 1;
            }
        }
        ans.back() = -1;
        if (a[0] == a.back()) {
            ans.back() = ans[0];
            if (a[n - 1] != a[n - 2] && ans[n - 1] == ans[n - 2]) {
                ans.back() ^= 1;
            }
        }
        if (a[n - 2] == a.back()) {
            ans[n - 1] = ans[n - 2];
            if (a[0] != a[n - 1] && ans[0] == ans[n - 1]) {
                ans.back() ^= 1;
            }
        }
        if (ans.back() == -1) {
            if (ans[n - 2] != ans[0]) {
                if (eq) {
                    int i = 1;
                    for (; i < n; ++i) {
                        if (a[i] == a[i - 1]) {
                            ans[i] = ans[i - 1] ^ 1;
                            i++;
                            break;
                        }
                    }
                    for (; i + 1 < n; ++i) {
                        if (a[i] == a[i - 1]) {
                            ans[i] = ans[i - 1];
                        } else {
                            ans[i] = ans[i - 1] ^ 1;
                        }
                    }
                    assert(ans[n - 2] == ans[0]);
                    ans.back() = 1;
                } else {
                    ans.back() = 2;
                }
            } else {
                ans.back() = ans[0] ^ 1;
            }
        }
        cout << *max_element(ALL(ans)) + 1 << '\n';
        for (int i = 0; i < n; ++i) {
            cout << ans[i] + 1 << ' ';
        }
        cout << '\n';
    }

    return 0;
}