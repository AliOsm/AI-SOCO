/*
 * test.cpp
 *
 *
 *      Author: Fireworks
 */

#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<iomanip>
#include<fstream>
#include<bitset>
#include<cstring>
#include<cstdlib>
#include<complex>
#include<list>
#include<sstream>

using namespace std;

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
long long mod = 1000000007LL;
long long base = 37;
long long large = 1000000000000000000LL;

int n;
long long b;
vector<vector<long long> > dp2,dp;
vector<long long> ch,c,d;
vector<vector<int> > adj;
void dfs(int u){
	ch.push_back(c[u]);
	for(int j=0;j<(int)adj[u].size();j++){
		int v = adj[u][j];
		dfs(v);
	}
}

long long g(int u,int k){
	if(dp2[u].size()>0){
		return dp2[u][k];
	}
	ch.clear();
	dfs(u);
	sort(ch.begin(),ch.end());
	dp2[u].assign(ch.size()+1,0LL);
	long long s = 0;
	for(int i=1;i<=(int)ch.size();i++){
		s+=ch[i-1];
		dp2[u][i]=s;
	}
	return dp2[u][k];
}

void f(int u){
	if(adj[u].size()==0){
		dp[u].assign(2,0LL);
		dp[u][0]=0LL;
		dp[u][1]=d[u];
		return ;
	}

	dp[u].assign(dp2[u].size(),large);
	dp[u][0]=0;
	/*for(int j=0;j<(int)adj[u].size();j++){
		int v =adj[u][j];
		f(v);
		for(int i = (int)dp[u].size()-1;i>=0;i--){
			for(int k=1;k<=i&&k<(int)dp[v].size();k++){
				dp[u][i] = min(dp[u][i],dp[u][i-k]+dp[v][k]);
			}
		}
	}*/

	vector<ii> ch;
	for(int j=0;j<(int)adj[u].size();j++){
		int v = adj[u][j];
		f(v);
		int sz = (int)dp2[v].size()-1;
		ch.push_back(ii(sz,v));
	}
	sort(ch.begin(),ch.end());
	reverse(ch.begin(),ch.end());
	for(int j=0;j<(int)ch.size();j++){
		int v = ch[j].second;
		if(j==0){
			for(int i=0;i<(int)dp[v].size();i++){
				dp[u][i]=dp[v][i];
			}
		}else{
			for(int i=(int)dp[u].size()-1;i>=0;i--){
				for(int k=1;k<=i&&k<(int)dp[v].size();k++){
					dp[u][i]=min(dp[u][i],dp[u][i-k]+dp[v][k]);
				}
			}
		}
	}

	for(int i=(int)dp[u].size()-1;i>=1;i--){
		dp[u][i]=dp[u][i-1]+d[u];
		dp[u][i]=min(dp[u][i],g(u,i));
	}

}


int main(){
	cin>>n>>b;
	d.assign(n,0LL);
	c=d;
	adj.assign(n,vector<int>(0,0));
	for(int i=0;i<n;i++){
		scanf("%I64d%I64d",&c[i],&d[i]);
		d[i]=c[i]-d[i];
		if(i>0){
			int x;
			scanf("%d",&x);
			x--;
			adj[x].push_back(i);
		}
	}

	dp2.assign(n,vector<long long>(0,0LL));
	for(int i=0;i<n;i++){
		g(i,0);
	}
	dp.assign(n,vector<long long>(0,0LL));
	f(0);
	int ans = 0;
	for(int j=0;j<=n;j++){
		//cout<<j<<" "<<dp[0][j]<<endl;
		if(dp[0][j]<=b){
			ans=j;
		}else{

		}
	}
	cout<<ans<<endl;



	/*int totalcase;
	int testcase=0;
	cin>>totalcase;
	ofstream out;
	out.open("result.txt");

	while(totalcase--){
		testcase++;
		out<<"Case #"<<testcase<<": ";
		cout<<testcase<<": "<<endl;

		//GOGOGO



		//END
	}
	out.close();*/

	return 0;
}
