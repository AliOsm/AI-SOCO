# include <stdio.h>
# include <bits/stdc++.h>


#define _USE_MATH_DEFINES_
#define ll long long
#define ld long double
#define Accepted 0
#define pb push_back
#define mp make_pair
#define sz(x) (int)(x.size())
#define every(x) x.begin(),x.end()
#define F first
#define S second
#define For(i,x,y)  for (ll i = x; i <= y; i ++) 
#define FOr(i,x,y)  for (ll i = x; i >= y; i --)
#define SpeedForce ios_base::sync_with_stdio(0), cin.tie(0)
// ROAD to...                                                                                                                                                                                                                Red

using namespace std;

inline bool isvowel (char c) {
	c = tolower(c);
    if (c == 'a' || c == 'e' || c == 'i' || c == 'y' || c == 'o' || c == 'u') return 1;
    return 0;
}

const double eps = 0.000001;
const ld pi = acos(-1);
const int maxn = 1e7 + 9;
const int mod = 1e9 + 7;
const ll MOD = 1e18 + 9;
const ll INF = 1e18 + 123;
const int inf = 2e9 + 11;
const int mxn = 1e6 + 9;
const int N = 6e5 + 123;                                          
const int M = 22;
const int pri = 997;
const int Magic = 2101;

const int dx[] = {-1, 0, 1, 0};
const int dy[] = {0, -1, 0, 1};
 
int n, m, k;
int cnt[N];
string s;
int a[N];
vector < int > g;
int u[N];
int ans, res;
ll cur;
multiset < int > all;


int main () {
    cin >> n;
    for (int i = 1; i <= n; i ++) {
        cin >> a[i];
        cur += a[i];
        
        all.insert(a[i]);
    }
    
    For (i, 1, n) {
        all.erase(all.find(a[i]));
        cur -= a[i];
        int v = *all.rbegin();
        if (v + v == cur) {
            ans ++;
            g.pb(i);
        }
        
        cur += a[i];
        all.insert(a[i]);
    }
    
    cout << ans << '\n';
    For (i, 0, ans - 1) {
        cout << g[i] << ' ';
    }
	return Accepted;
}

// Coded By OB