
#include <bits/stdc++.h>
using namespace std;

const int N = 5e3 + 70;

int h[N];
int dp[N][N][2];

void calc_dp(int x, int y)
{
  dp[x][y][0] = min(dp[x - 1][y][0], dp[x - 1][y][1]);
  dp[x][y][1] = max(0, h[x + 1] - h[x] + 1) + min(dp[x - 2][y - 1][0] + max(0, h[x - 1] - h[x] + 1),
                                                  dp[x - 2][y - 1][1] + max(0, min(h[x - 1], h[x - 2] - 1) - h[x] + 1));
}


int main()
{
    int n;
    cin >> n;
    for (int i = 1; i <= n; ++i) {
        cin >> h[i];
    }
    memset(dp, 0x55, sizeof dp);

    dp[0][0][0] = 0;
    dp[1][0][0] = 0;
    dp[1][1][1] = max(0, h[2] - h[1] + 1);

    for (int i = 2; i <= n; i++)
        for (int j = 0; j <= n; j++)
            calc_dp(i, j);

    for (int k = 1; k <= (n + 1) / 2; ++k) {
        cout << min(dp[n][k][0], dp[n][k][1]) << ' ';
    }
}
