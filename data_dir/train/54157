#include<iostream>
#include<cstdio>
#include<cassert>
#include<cstring>
#include<ctime>
#include<cstdlib>
#include<cmath>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<bitset>
#include<algorithm>
#pragma comment(linker, "/STACK:640000000")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define ll long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
#define forit(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = 5555;
int z[2 * maxn],rr[2 * maxn];
int zz[2 * maxn];
int main() {
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	string s1,s2; cin >> s1 >> s2;
	int n = sz(s1);
	int res = -1;
	for (int start = 0; start < n; start++) {
		string s = s1.substr(start,n - start) + "#" + s2;
		int m = sz(s);
		int l = 0;
		int r = 0;
		for (int i = 1; i < m; i++) {
			z[i] = 0;
			if (l <= i && i < r) z[i] = min(r - i,z[i - l]);
			while(i + z[i] < m && s[z[i]] == s[i + z[i]]) z[i]++;
			if (i + z[i] > r) {
				l = i;
				r = i + z[i];
			}
		}
		int cur = 0;
		for (int i = 1; i < n - start; i++) {
			rr[start + i] = max(rr[start + i],z[i]);
			cur = max(cur,z[i]);
		}
		cur = max(cur,rr[start]);
		cur++;
		if (cur > n - start) continue;		
		int size = 0;
		for (int i = n - start; i < m; i++) {
			zz[size++] = z[i];
		}
		sort(zz,zz + size);
		int ptr = 0;
		while(cur <= n - start) {
			while(ptr < size && zz[ptr] < cur) ptr++;
			if (size - ptr == 1) break;
			cur++;
		}
		if (cur <= n - start && (res == -1 || res > cur)) res = cur;
	}		
	cout << res << endl;
	return 0;
}
