#include<bits/stdc++.h>
using namespace std;
struct Node
{
	Node*n[26];
	int end;
	Node()
	{
		for(int i=0;i<26;i++)
			n[i]=NULL;
		end=0;
	}
};
Node *root;
void insert(string s)
{
	int si=s.length();
	Node *r=root;
	for(int i=0;i<si;i++)
	{
		int Q=s[i]-'a';
		if(!r->n[Q])
			r->n[Q]=new Node();
		r=r->n[Q];
	}
	r->end=1;
}
void dfs(Node*r,priority_queue<int> &p,int deep)
{
	priority_queue<int> Q;
	for(int i=0;i<26;i++)
	{
		if(r->n[i])
			dfs(r->n[i],Q,deep+1);
		while(!Q.empty())
		{
			p.push(Q.top());
			Q.pop();
		}
	}
	if(r->end!=1&&deep!=0)
		p.pop();
	p.push(deep);
}
int main()
{
	root= new Node();
	int n;cin>>n;
	for(int i=0;i<n;i++)
	{
		string s;
		cin>>s;
		insert(s);
	}
	priority_queue<int> p;
	dfs(root,p,0);
	int ans=0;
	while(!p.empty())
	{
		ans+=p.top();
		p.pop();
	}
	cout<<ans;
	return 0;
}
