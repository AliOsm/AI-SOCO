#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cassert>
#include <queue>
#include <bitset>

#define pb push_back
#define mp make_pair

#define f first
#define s second

using namespace std;

const int N = (int) 1e6 + 7;
const int MOD = (int) 1e9 + 9;

const int TILL = 300000000;

//const int
bitset<100000005> bad;

unsigned int n, a, b, c, d;

inline unsigned int calc(const unsigned int& x) {
    if(x>n)return 0;
    unsigned int res = n;
    unsigned int ans = 0;
    while (res) {
        res /= x;
        ans += res;
    }
    ans *= (a*x*x*x+b*x*x+c*x+d);
    return ans;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    cin >> n >> a >> b >> c >> d;

    unsigned int ans = 0;
    for (int i = 5; i <= TILL; i += 6) {
        int up = (i - 5) / 3;
        if (!bad[up]) {
            ans += calc(i);
            if (i <= 17320) {
                for (int j = i * i; j <= TILL; j += (i << 1)) {
                    int idx;
                    if (j % 3 == 2) idx = (j - 5) / 3;
                    else if (j % 3 == 1) idx = (j - 7) / 3 + 1;
                    else continue;
                    bad[idx] = 1;
                }
            }
        }
        if (!bad[up + 1]) {
            ans += calc(i + 2);
            if (i + 2 <= 17320) {
                for (int j = (i + 2) * (i + 2); j <= TILL; j += ((i + 2) << 1)) {
                    int idx;
                    if (j % 3 == 2) idx = (j - 5) / 3;
                    else if (j % 3 == 1) idx = (j - 7) / 3 + 1;
                    else continue;
                    bad[idx] = 1;
                }
            }
        }
    }
    ans += calc(2);
    ans += calc(3);
    cout << ans;

    return 0;
}
