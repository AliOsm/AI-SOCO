#include <bits/stdc++.h>
using namespace std;
#define int long long
#define endl '\n'
typedef long long ll;

const int mod = 998244353;

signed main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n,k;
    cin >> n >> k;
    if(k==1) {
        cout << 0;
        return 0;
    }
    vector<int> ans1(n);
    for(int i=0;i<n;++i){
        cin >> ans1[i];
    }
    vector<int> ans2(n);
    for(int i=1;i<n;++i){
        ans2[i-1] = ans1[i];
    }
    ans2[n-1] = ans1[0];
    /*
    cout << "first:\n";
    for(int i=0;i<n;++i){
        cout << ans1[i] << " ";
    }
    cout << endl;

    cout << "second:\n";
    for(int i=0;i<n;++i){
        cout << ans2[i] << " ";
    }
    cout << endl;
    */

    const int ZERO = n;
    vector<int> dp(2*n+3,0);
    dp[ZERO] = 1;
    for(int i=0;i<n;++i){
        /*
        cout << "vals: " << ans1[i] << " " <<  ans2[i] << endl;
        cout << "dp:\n";
        for(int diff = -n; diff <= n; ++diff) {
            cout << diff << " " << dp[diff+ZERO] << endl;
        }
        */
        if(ans1[i] == ans2[i]) {
            for(int diff = -n; diff <= n; ++diff) {
                dp[diff+ZERO] *= k;
                dp[diff+ZERO] %= mod;
            }
            continue;
        }
        vector<int> newDP(2*n+3,0);
        for(int diff = -n; diff <= n; ++diff) {
            int &curr = newDP[diff+ZERO];
            curr = (k-2)*dp[diff+ZERO];
            if(diff-1 >= -n) curr += dp[diff-1+ZERO];
            if(diff+1 <= n) curr += dp[diff+1+ZERO];
            curr %= mod;
        }
        dp = newDP;
    }
    int res = 0;
    for(int diff = 1; diff <= n; ++diff) {
        res += dp[diff+ZERO];
    }
    cout << (res%mod);
}
