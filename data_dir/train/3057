#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <cmath>
#include <stack>
#include <unordered_map>
#include <map>
#include <queue>
#include <set>
using namespace std;

/*
*/

vector<int> com;
vector<vector<int> > love;
vector<vector<int> > hate;
bool dfs(int i, int c)
{
	if (com[i] != -1)
	{
		if (com[i] != c) return false;
		return true;
	}
	com[i] = c;
	for (int j = 0; j < love[i].size(); j++)
	{
		if (!dfs(love[i][j], c))
		{
			return false;
		}
	}
	for (int j = 0; j < hate[i].size(); j++)
	{
		if (!dfs(hate[i][j], 1-c))
		{
			return false;
		}
	}
	return true;
}

int main()
{
	int n, m;
	cin>>n>>m;
	love = hate = vector<vector<int> > (n);
	com = vector<int> (n, -1);
	for (int i = 0; i < m; i++)
	{
		int a,b,c;
		cin>>a>>b>>c;
		if (c == 1)
		{
			love[a-1].push_back(b-1);
			love[b-1].push_back(a-1);
		}
		else
		{
			hate[a-1].push_back(b-1);
			hate[b-1].push_back(a-1);
		}
	}
	long long r = 0;
	for (int i = 0; i < n; i++)
	{
		if (com[i] == -1)
		{
			r++;
			if (!dfs(i, 0))
			{
				r = -1000000000;
			}
		}
	}
	if (r<0)
	{
		cout<<0<<endl;
	}
	else
	{
		long long res = 1;
		for (int i = 1; i < r; i++)
		{
			res *= 2;
			res %= 1000000007;
		}
		cout<<res<<endl;
	}
}