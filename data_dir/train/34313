#include <bits/stdc++.h>
using namespace std;
#define PB push_back
typedef pair<int,int> PII;
#define FF first
#define SS second
const int N = 200000 + 5;
const int INF = 1<<30;

vector<PII> G[N];
int dis[N];
bool vis[N];

int main(){
	ios_base::sync_with_stdio(0);cin.tie(0);
	int n; cin>>n;
	for(int i=1;i<=n;i++){
		int x; cin>>x;
		G[i].PB({1, x});
		if(i-1>=1) G[i].PB({1, i-1});
		if(i+1<=n) G[i].PB({1, i+1});
	}
	fill(dis, dis+N, INF);
	priority_queue<PII, vector<PII>, greater<PII>> pq;
	dis[1]=0;
	pq.push({dis[1], 1});
	while(!pq.empty()){
		int u = pq.top().SS; pq.pop();
		if(vis[u]) continue;
		vis[u]=1;
		for(auto i: G[u]){
			int v = i.SS, c = i.FF;
			if(dis[v] > dis[u]+c){
				dis[v]=dis[u]+c;
				pq.push({dis[v], v});
			}
		}
	}
	for(int i=1;i<=n;i++) cout<<dis[i]<<" \n"[i==n];
	return 0;
}