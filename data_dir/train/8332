#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <set>
#include <map>
#include <cassert>
#include <ctime>
#include <string>
#include <queue>

using namespace std;

#ifdef _WIN32
#define LLD "%I64d"
#else
#define LLD "%lld"
#endif

typedef long double ld;

long long rdtsc() {
  long long tmp;
  asm("rdtsc" : "=A"(tmp));
  return tmp;
}

inline int myrand() {
  return abs((rand() << 15) ^ rand());
}

inline int rnd(int x) {
  return myrand() % x;
}

#define pb push_back
#define mp make_pair
#define eprintf(...) fprintf(stderr, __VA_ARGS__)
#define sz(x) ((int)(x).size())
#define TASKNAME "text"

const int INF = (int)1e9 + 1;
const ld EPS = 1e-9;

void precalc() {
}

int n;

int cnt0, cnt5;

bool read() {
  if (scanf("%d", &n) < 1) {
    return 0;
  }
  cnt0 = cnt5 = 0;
  for (int i = 0; i < n; ++i) {
    int x;
    scanf("%d", &x);
    if (x == 5) {
      ++cnt5;
    }
    if (x == 0) {
      ++cnt0;
    }
  }
  return 1;
}

void solve() {
  if (!cnt0) {
    printf("-1\n");
    return;
  }
  if (cnt5 >= 9) {
    cnt5 -= cnt5 % 9;
    for (int i = 0; i < cnt5; ++i) {
      printf("5");
    }
    for (int j = 0; j < cnt0; ++j) {
      printf("0");
    }
    printf("\n");
  } else {
    printf("0\n");
  }
}

int main() {
  srand(rdtsc());
#ifdef DEBUG
  freopen(TASKNAME".out", "w", stdout);
  assert(freopen(TASKNAME".in", "r", stdin));
#endif

  precalc();
  while (1) {
    if (!read()) {
      break;
    }
    solve();
#ifdef DEBUG
    eprintf("%.18lf\n", (double)clock() / CLOCKS_PER_SEC);
#endif
  }
  return 0;
}
