#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include<unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#include <math.h>

#define lli long long int
#define ld long double
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);

using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long cmod = 998244353 ;
const long long inf = 1LL << 61;
const int M = 1e6 + 500;
const lli ths = 1LL << 40;
const int NN = 5e3 + 6;

void solve()
{
    lli K[3];
    cin>>K[0]>>K[1]>>K[2];
    for(int i = 0; i <= 10; i ++) {
        for(int j = 0; j <= 10; j ++) {
            for(int k = 0; k <= 10; k ++) {
                vector<lli> X = {i, j, k};
                vector<bool> vis(1000, 0);
                for(int ii = 0; ii < 3; ii ++) {
                    for(int jj = X[ii]; jj <= 1000; jj += K[ii])
                        vis[jj] = 1;
                }
                lli st = max({i, j, k});
                bool ok = 1;
                for(int ii = st; ii <= 1000; ii ++) {
                    if(!vis[ii])
                        ok = 0;
                }
                if(ok) {
                    cout<<"YES";
                    return ;
                }
            }
        }
    }
    cout<<"NO";
    cout<<'\n';
    return ;
}

/*
*/

int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

//    pre();

    int t = 1;
//    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
/*
*/
