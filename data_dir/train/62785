#include <iostream>
#include <bits/stdc++.h>

using namespace std;
set < int > st , temp;
set < int >::iterator it;
vector < int > Move;

int main()
{
    string s;
    cin >> s;
    int Ans = 0;
    for(int i=0; i<s.size(); i++)
    {
        if(i > 0 && i < s.size() - 1 && (s[i] != s[i + 1] || s[i] != s[i - 1]))
            Move.push_back(i);
        else if(i == 0 && s[i] != s[i + 1] && i + 1 < s.size())
            Move.push_back(i);
        else if(i == s.size() - 1 && s[i] != s[i - 1] && i - 1 >= 0)
            Move.push_back(i);
        else
            st.insert(i);
    }
    for(int i=0; i<s.size() && Move.size() > 0; i++)
    {
        Ans++;
        for(auto x : Move)  if(st.find(x) != st.end())  st.erase(x);
        for(int j=0; j<Move.size(); j++)
        {
            int idx1 = -1 , idx2 = -1;
            it = st.lower_bound(Move[j]);
            if(it != st.begin())   idx1 = *(--it);
            while(j < Move.size() && Move[j] + 1 == Move[j + 1])  j++;
            it = st.upper_bound(Move[j]);
            if(it != st.end())  idx2 = *it;
            if(idx1 >= 0 && idx2 < s.size() && s[idx1] != s[idx2])
            {
                temp.insert(idx1);
                temp.insert(idx2);
            }
        }
        Move.clear();
        for(auto x : temp)  Move.push_back(x);
        temp.clear();
    }
    cout << Ans;
    return 0;
}
