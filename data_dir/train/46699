#include <string.h>
#include <unordered_map>

#include <sstream>
#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <bitset>
#include <algorithm>
#include <iostream>
#include   <stdlib.h>    
#include   <time.h> 
#include <stack>
#include <queue>
#include <set>

#include <map>
#include <vector>
#include <string>
#include <stdlib.h>

#define ll long long
#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i)
#define frr(i,a,b) for(int i = a; i > b; --i)
#define pb push_back
#define sf scanf

#define pf printf
#define mp make_pair

using namespace std;
const int N = 110;
int mod = 998244353;
string s;
int n;
int ans[6];
int p[6] = {4,8,16,15,23,42};

int gcd(int a, int b) {
	return b?gcd(b,a%b):a;
}

int org[12];

int ask(int i, int j) {
	printf("? %d %d\n",i+1,j+1);
	fflush(stdout);
	int t;
	scanf("%d",&t);
	//int t = org[i]*org[j];
	return t;
}

void sol_one(int idx) {
	int a = ask(idx,idx+1);
	int b = ask(idx,idx+2);
	/*
	int x = gcd(a,b);
	printf("a = %d b = %d x = %d\n",a,b,x);
	if(x!=32&&x!=64) {
		ans[idx] = x;
		ans[idx+1] = a/x;
		ans[idx+2] = b/x;
	}
	else {
	*/
		int ok = 0;
		for(int i = 0; i < 6&&!ok; ++i) {
			for(int j = 0; j < 6&&!ok; ++j) {
				if(i==j)continue;
				for(int k = 0; k<6&&!ok;++k) {
					if(k==j||k==i)continue;
					if(p[i]*p[j]==a && p[i]*p[k]==b) {
						ans[idx] = p[i];
						ans[idx+1] = p[j];
						ans[idx+2] = p[k];
						ok = 1;
						break;
					}
				}
			}
		}
	//}
}
int sol(){
	sol_one(0);
	sol_one(3);
	printf("! ");
	for(int i = 0; i < 6; ++i) {
		printf("%d ",ans[i]);
		if(ans[i]!=org[i]) {
//			assert(1==0);
		}
	}
	printf("\n");
	fflush(stdout);
	return 0;
}

int main() {
		sol();
	/*
	org[0] = 4;
	org[1] = 8;
	org[2] = 15;
	org[3] = 16;
	org[4] = 23;
	org[5] = 42;
	do{
		for(int i = 0; i < 6; ++i) {
			printf("%d ",org[i]);
		}
		printf("\n");
		sol();
	}while(next_permutation(org,org+6));
	*/
}
