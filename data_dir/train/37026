
#include <bits/stdc++.h>
typedef long long int lli;
using namespace std;

vector<int> v[3123];

bool f[3123];
stack<int> s;

bool ff[3123];
queue< pair<int,int> > q;

int ans[3123];

bool dfs( int x , int dad )
{
	bool resume = true;
	
	f[x] = true;
	s.push( x );
	
	for ( int i=0 ; i<v[x].size() && resume ; i++ )
	{
		int y = v[x][i];
		if ( y == dad ) continue;
		
		if ( f[y] )
		{
			s.push( y );
			do
			{
				int t = s.top(); s.pop();
				q.push( make_pair( t , 0 ) );
				
			} while ( s.top() != y );
				
			resume = false;
		}
		else
			resume &= dfs( y , x );
	}
	
	if (resume) s.pop();
	return resume;
}

int main()
{
	int n; cin>>n;
	
	for ( int i = 1 ; i<=n ; i++ )
	{
		int x , y;
		cin>>x>>y;
		v[x].push_back( y );
		v[y].push_back( x );
	}
	
	dfs( 1 , 1 );		// find cycle
	
	while ( q.empty() == false )
	{
		int x = q.front().first;
		int d = q.front().second;
		q.pop();
		
		if ( ff[x] ) continue;
		ff[x] = true;
		ans[x] = d;
		
		int vs = v[x].size();
		for ( int i=0 ; i<vs ; i++ )
		{
			int y = v[x][i];
			if ( ff[y] == false )
			{
				q.push( make_pair( y , d + 1 ) );
			}
		}
	}
	
	for ( int i = 1 ; i<=n ; i++ )
		cout<<ans[i]<<" ";
	cout<<"\n";
	
	return 0;
}