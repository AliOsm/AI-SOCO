#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end())
#define cpresent(s,x) (find(all(s),x) != s.end())
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;
typedef long double ld;
typedef vector<vector<ll> > mat;

const int N=3e5+5;

ll bit[N]={0},a[N],mpp[N],inv=0,lo=0,hi=0,n,zero=0;

set<int> zeroes;

void upd(int i)
{
	while(i<=N-1)
	{
		bit[i]++;
		i+=i&-i;
	}
}

ll get(int i)
{
	ll r=0;
	while(i)
	{
		r+=bit[i];
		i-=i&-i;
	}
	return r;
}

int main()
{ios_base::sync_with_stdio(false);
cin>>n;
rep(i,1,n)zeroes.insert(i);
rep(i,1,n)
{
	cin>>a[i];
	mpp[a[i]]=i;
}
lo=mpp[1],hi=mpp[1];
ol("0 ");
upd(mpp[1]);
zeroes.erase(zeroes.find(mpp[1]));
rep(i,2,n)
{
	ll id=mpp[i];
	inv+=get(n)-get(id);
	zeroes.erase(zeroes.find(id));
	zero-=min(get(id-1),get(n)-get(id));
	lo=min(lo,id);
	hi=max(hi,id);
	
	if(lo!=id&&(get(id-1)-get(lo)!=id-lo))
	{
		ll l=lo,r=id-1,ans=0,mid;
		while(l<=r)
		{
			mid=(l+r)/2;
			set<int> :: iterator it=zeroes.lower_bound(mid);
			if(it==zeroes.end())
			{
				r=mid-1;
				continue;
			}
			if((*it)>id-1)
			{
				r=mid-1;
				continue;
			}
			int ii=*it;
			if(get(n)-get(ii)<get(ii-1))
			{
				ans=id-mid-(get(id-1)-get(mid-1));
				r=mid-1;
			}
			else
			{
				l=mid+1;
			}
		}
		//o2("HI ",ans);os;o2(id-1,"HI2 ");
		//o2("HI ",ans);os;
		zero+=ans;
	}
	if(hi!=id&&(get(hi)-get(id+1)!=hi-id))
	{
		ll l=id+1,r=hi,ans=0,mid;
		while(l<=r)
		{
			mid=(l+r)/2;
			set<int> :: iterator it=zeroes.lower_bound(mid);
			if(it==zeroes.begin())
			{
				l=mid+1;
				continue;
			}
			if(it==zeroes.end()||(*it)!=mid)it--;
			int ii=*it;
			if(ii<id+1)
			{
				l=mid+1;
				continue;
			}
			if(get(ii)<get(n)-get(ii-1))
			{
				//o2("mid: ",mid);os;o2(get(mid))
				ans=mid-id-(get(mid)-get(id));
				l=mid+1;
			}
			else
			{
				r=mid-1;
			}
		}
		//o2("HI ",ans);os;
		zero+=ans;
	}
	//o2(inv,zero);os;
	ol(inv+zero);os;
	upd(id);
}
return 0;
}


