#include <bits/stdc++.h>
using namespace std;
#define int long long
bitset<710> dpl[710],dpr[710],dp[710][710];
vector<int> adj1[710],adj2[710];
int32_t main() {
    ios::sync_with_stdio(false);cin.tie(0);
    int n;
    cin>>n;
    vector<int> v(n+1);
    for(int i=1;i<=n;i++)
    {
        cin>>v[i];
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=i+1;j<=n;j++)
        {
            if(__gcd(v[i],v[j])!=1)
            {
                adj2[i].push_back(j);
                adj1[j].push_back(i);
            }
        }
    }
    for(int len = 0;len<n;len++)
    {
        for(int st=1;st<=n-len;st++)
        {
            int en = st+len;
            if(st==en)
            {
                dpl[st][en] = dpr[st][en] = 1;
            }
            else
            {
                int l = en-1, r = st+1;
                for(auto &j:adj1[en])
                {
                    if(dp[st][l][j])
                    {
                        dpl[st][en]=1;
                        break;
                    }
                }
                for(auto &j:adj2[st])
                {
                    if(dp[r][en][j])
                    {
                        dpr[st][en]=1;
                        break;
                    } 
                }
            }
            for(int j=st;j<=en;j++)
            {
                dp[st][en][j] = dpl[st][j]&dpr[j][en];
            }
        }
    }
    bool poss = false;
    for(int i=1;i<=n;i++)
    {
        poss |= dp[1][n][i];
    }
    if(poss) cout<<"Yes";
    else cout<<"No";
    return 0;
}