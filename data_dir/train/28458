#include <bits/stdc++.h>
using namespace std;

const int N = 1e2 + 100;

bool in[N];
vector<int> g[2][N];

void dfs(int v, bool people) {
    if (people) in[v] = true;
    for (auto u : g[people][v]) {
        if (!people and in[u]) continue;
        dfs(u, !people);
    }
}

int main() {
    std::ios::sync_with_stdio(false);
    int n,m;
    cin >> n >> m;
    bool atleastonelang = false;
    for (int i = 0; i < n; ++i) {
        int k;
        cin >> k;
        atleastonelang |= k;
        for (int j = 0; j < k; ++j) {
            int x; cin >> x;
            g[1][i].push_back(x);
            g[0][x].push_back(i);
        }
    }
    if (not atleastonelang) {
        cout << n << '\n';
        return 0;
    }
    int grs = 0;
    for (int i = 0; i < n; ++i) {
        if (in[i]) continue;
        ++grs;
        dfs(i, true);
    }
    cout << (grs-1) << '\n';
}
// g++ -W -Wall -Wextra -pedantic -std=c++14 -o p main.cpp
