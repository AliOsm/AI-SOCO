#include <bits/stdc++.h>
#define F first
#define S second
#define pii pair<int, int>
#define pb push_back

using namespace std;

typedef long long ll;
typedef long double ld;

const int N = 1e5 + 10;

bool mark[N], vis[N];
vector<int> adj[N];

int d1[N], d2[N], a[N], n;

queue<int> q;

bool check(ld x, int tp){
	while((int)q.size())q.pop();
	memset(vis, 0, sizeof vis);
	for(int i=1; i<=n; i++)
		if(mark[i])continue;
		else a[i] = ceil((ld)d1[i] * x), a[i] = d2[i] - a[i];
	for(int i=1; i<=n; i++){
		if(mark[i])continue;
		if(a[i] < 0)
			q.push(i), vis[i] = true;
	}
	while((int)q.size()){
		int v = q.front(); q.pop();
		for(auto u : adj[v]){
			if(!vis[u] && !mark[u]){
				a[u]--;
				if(a[u] < 0)q.push(u), vis[u] = true;
			}
		}
	}
	int cnt = 0;  vector<int> ans;
	for(int i=1; i<=n; i++){
		if(mark[i])continue;
		if(!vis[i])cnt++, ans.pb(i);
	}
	if(cnt == 0)return false;
	if(tp == 0)return true;
	if(tp == 1){
		cout << cnt << endl;
		for(auto x : ans)cout << x << ' '; cout << endl;
		return true;
	}
	return false;
}

int main(){
	ios_base::sync_with_stdio(0); cin.tie(0);
	int m, k; cin >> n >> m >> k;
	for(int i=0; i<k; i++){
		int v; cin >> v;
		mark[v] = true;
	}
	for(int i=0; i<m; i++){
		int u, v; cin >> u >> v;
		adj[u].pb(v);
		adj[v].pb(u);
		d1[u]++; d1[v]++;
		if(!mark[u])d2[v]++;
		if(!mark[v])d2[u]++;
	}
	ld lo = 0 , hi = 1.01;
	for(int i=0; i<200; i++){
		ld mid = (lo + hi)/2;
		if(check(mid, 0))lo = mid;
		else hi = mid;
	}
	check(lo, 1);
	return 0;
}
