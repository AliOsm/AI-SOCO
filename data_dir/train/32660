#include<bits/stdc++.h>
using namespace std;

#define scl(x) scanf("%lld",&x)
#define sc(x)  scanf("%d",&x)
#define ll long long
#define lop(i,n) for(int i=0;i<n;++i)
typedef pair<int, int> ii;
typedef pair<ll, ll> pll;


const int N=2e5+100,M=2*N;
int head[N],nxt[M],to[M],ne,vis[M];
int sz[N];

void init(){
	ne=0;
	memset(head,-1,sizeof head);
}
void addEdge(int u,int v){
	nxt[ne]=head[u];
	to[ne]=v;
	head[u]=ne++;
	sz[u]++;
}
void addBiEdge(int u,int v){
	addEdge(u,v);
	addEdge(v,u);
}

int n,m;
vector<int> out;

void dfs(int cur){
	for(int &j=head[cur];j!=-1;){
		int v=to[j],o=j;
		j=nxt[j];
		if(vis[o])
			continue;
		vis[o^1]=1;
		dfs(v);
	}
	out.push_back(cur);
}
vector<int> uncom;
int com(int x){
	return lower_bound(uncom.begin(),uncom.end(),x)-uncom.begin();
}
int bd[N],cd[N];
int main(){
#ifndef ONLINE_JUDGE
	freopen("i.txt","r",stdin);
#endif
	init();
	sc(n);
	lop(i,n-1)sc(bd[i]),uncom.push_back(bd[i]);
	lop(i,n-1)sc(cd[i]),uncom.push_back(cd[i]);
	lop(i,n-1)if(cd[i]<bd[i])return puts("-1"),0;
	sort(uncom.begin(),uncom.end());
	uncom.erase(unique(uncom.begin(),uncom.end()),uncom.end());
	lop(i,n-1)addBiEdge(com(bd[i]),com(cd[i]));
	int odd=0,cnt = 0;
	for(int i=0;i<uncom.size();i++)
		if(sz[i]&1)
			odd=i,cnt++;
	if(cnt!=2 && cnt!=0)return puts("-1"),0;
	dfs(odd);
	if(out.size()!=n)return puts("-1"),0;
	lop(i,n)printf("%d ",uncom[out[i]]);

}
