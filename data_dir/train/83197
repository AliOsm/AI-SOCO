#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;

inline ld f(ld a, ld b){
    return ((2*(a+b))*(2*(a+b)))/(a*b);
}

void solve(){
    map<int, int> mp1;
    vector <int> vec;
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++){
        int x;
        cin >> x;
        ++mp1[x];
    }
    for (auto it = mp1.begin(); it != mp1.end(); it++){
        if (it->second > 1)
            vec.push_back(it->first);
        if (it->second > 3)
            vec.push_back(it->first);
    }
    int curpos = 0;
    ld ans = 1e15;
    int x = 0, y = 0;
    for (int i = 0; i < vec.size()-1; i++){
        curpos = max(curpos, i+1);
        while(curpos + 1 < (int)vec.size() && f(vec[i], vec[curpos]) > f(vec[i], vec[curpos+1])  )
            ++curpos;
        //cout << vec[i] << ' ' << vec[curpos] << ' ' << f(vec[i], vec[curpos]) << endl;
        if (ans > f(vec[i], vec[curpos])){
            ans = f(vec[i], vec[curpos]);
            x = vec[i];
            y = vec[curpos];
        }
    }
    cout << x << ' ' << x << ' ' << y << ' ' << y << "\n";
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

    int tt;
    cin >> tt;
    while(tt--){
        solve();
    }

}
