/* ****GT_18**** */
//Motivational Source->FUHPD

#include<bits/stdc++.h>
#define	MIN(a,b,c)	min(min(a,b),c)
#define	MAX(a,b,c)	max(max(a,b),c)
#define ll          long long
#define itr         vector<ll int>::iterator
#define pb          push_back
#define mp          make_pair
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define endl        '\n'
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
using namespace std;
struct data
{
	ll p,c,idx;
};
bool cmp(data a,data b)
{
	if(a.p==b.p)
	return a.c>b.c;
	return a.p<b.p;
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		ll n;
		cin>>n;
		vector<data> a(n);
		rep(i,0,n)
		{
			cin>>a[i].c>>a[i].p;
			a[i].idx=i+1;
		}
		ll k;
		cin>>k;
		multiset<pii> r;
		rep(i,0,k)
		{
			ll x;
			cin>>x;
			r.insert({x,i+1});
		}
		sort(all(a),cmp);
		reverse(all(a));
		ll s=0;
		vector<pii> ans;
		rep(i,0,sz(a))
		{
			if(r.lbnd({a[i].c,0})==r.end())
			continue;
			pii t=*r.lbnd({a[i].c,0});
			s+=a[i].p;
			ans.pb({a[i].idx,t.S});
			r.erase(r.lbnd({a[i].c,0}));
		}
		cout<<sz(ans)<<" "<<s<<endl;
		rep(i,0,sz(ans))
		cout<<ans[i].F<<" "<<ans[i].S<<endl;
	}
	return 0;
}
