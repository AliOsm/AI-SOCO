#include <bits/stdc++.h>
using namespace std;
#define int long long
int n,m,cs,ce,ms,q;
vector<int> v1,v2;
int st(int val)
{
    if(cs == 0) return -1000000000000ll;
    int idx = lower_bound(v1.begin(), v1.end(),val)-v1.begin();
    if(idx == cs)
        return v1.back();
    if(idx == 0)
        return v1[0];
    return v1[idx];
}
int st2(int val)
{
    if(cs == 0) return -1000000000000ll;
    int idx = lower_bound(v1.begin(), v1.end(),val)-v1.begin();
    if(idx == cs)
        return v1.back();
    if(idx == 0)
        return v1[0];
    return v1[idx-1];
}
int elev(int val)
{
    if(ce == 0) return -1000000000000ll;
    int idx = lower_bound(v2.begin(), v2.end(),val)-v2.begin();
    if(idx == ce)
        return v2.back();
    if(idx == 0)
        return v2[0];
    return v2[idx];
}
int elev2(int val)
{
    if(ce == 0) return -1000000000000ll;
    int idx = lower_bound(v2.begin(), v2.end(),val)-v2.begin();
    if(idx == ce)
        return v2.back();
    if(idx == 0)
        return v2[0];
    return v2[idx-1];
}
int minetime(int x1, int y1, int x2, int y2, int loc)
{
    int xd,yd;
    xd = abs(x2-loc) + abs(x1-loc);
    yd = (abs(y2-y1)+ms-1)/ms;
    return xd+yd; 
}
int minstime(int x1, int y1, int x2, int y2, int loc)
{
    int xd,yd;
    xd = abs(x2-loc) + abs(x1-loc);
    yd = abs(y2-y1);
    return xd+yd;
}
int32_t main() {
    ios::sync_with_stdio(false);cin.tie(0);
    cin>>n>>m>>cs>>ce>>ms;
    v1.resize(cs);
    v2.resize(ce);
    for(auto &i:v1) cin>>i;
    for(auto &i:v2) cin>>i;
    cin>>q;
    while(q--)
    {
        int x1,y1,x2,y2;
        cin>>x1>>y1>>x2>>y2;
        swap(x1,y1);
        swap(x2,y2);
        int ans;
        if(y1!=y2)
            ans = min({minetime(x1,y1,x2,y2,elev(x1)),minetime(x1,y1,x2,y2,elev(x2)),minetime(x1,y1,x2,y2,elev2(x1)),minetime(x1,y1,x2,y2,elev2(x2)),minstime(x1,y1,x2,y2,st(x1)),minstime(x1,y1,x2,y2,st(x2)),minstime(x1,y1,x2,y2,st2(x1)),minstime(x1,y1,x2,y2,st2(x2))});
        else ans = abs(x2-x1);
        cout<<ans<<endl;   
    }
    return 0;
}