#include<bits/stdc++.h>
#include<ext/numeric>
using namespace std;
using namespace __gnu_cxx;

const int MAX = 1e5 + 5;
const long long MOD = 1e9 + 7;
long long OO = 1e18;
int V, price[MAX], E, vis[MAX];
vector<int> adjList[MAX], rev[MAX];
stack<int> s;
vector<pair<long long, long long> > SCC;
long long ans, ways = 1;

void dfs(int x) {
    vis[x] = 1;
    for (int i = 0; i < (int) adjList[x].size(); ++i)
        if (!vis[adjList[x][i]])
            dfs(adjList[x][i]);
    s.push(x);
}
void dfs2(int x, int idx) {
    vis[x] = 2;
    if (SCC[idx].first == price[x])
        ++SCC[idx].second;
    else if (price[x] < SCC[idx].first)
        SCC[idx].first = (long long) price[x], SCC[idx].second = 1;
    for (int i = 0; i < (int) rev[x].size(); ++i)
        if (vis[rev[x][i]] != 2)
            dfs2(rev[x][i], idx);
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("in.txt", "rt", stdin);
#endif
    scanf("%d", &V);
    for (int i = 1; i <= V; ++i)
        scanf("%d", &price[i]);
    scanf("%d", &E);
    while (E--) {
        int u, v;
        scanf("%d%d", &u, &v);
        adjList[u].push_back(v);
        rev[v].push_back(u);
    }
    for (int i = 1; i <= V; ++i)
        if (!vis[i])
            dfs(i);
    int j = 0;
    while (!s.empty()) {
        int x = s.top();
        s.pop();
        if (vis[x] != 2) {
            SCC.push_back(pair<long long, long long>(OO, 1));
            dfs2(x, j++);
        }
    }
    for (int i = 0; i < (int) SCC.size(); ++i) {
        ans += SCC[i].first;
        ways *= SCC[i].second;
        ways %= MOD;
    }
    printf("%lld %lld", ans, ways);
}
