#include<bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
typedef vector<pair<int,int> > vp;
#define pb push_back
#define mp make_pair
#define ll long long
#define rep(i,n) for(int i=0;i<n;i++)
#define MOD 1000000007
#define N 100010
#define MAX_NUM 2000010
int prime[2000010],sn[2000010],A[N],sel[2000010],B[N];
void sieve(){
	
	for(int i=2;i<2000010;i++){
		if(!prime[i]){
			for(int j=2*i;j<2000010;j+=i){
				if(!prime[j]){
					prime[j]=1;
					sn[j]=i;
				}
			}
		}
	}

	for(int i=2;i<2000010;i++){
		if(!sn[i])sn[i]=i;
	}

}
vector<int> factorise(int x){
	int cur=sn[x];
	int n=x;
	vector<int> ans;
	while(x>1){
		ans.pb(cur);
		while(sn[x]==cur){
			x=x/sn[x];
		}
		cur=sn[x];
	}
	return ans;
}
int main(){
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	int n;
	cin>>n;
	sieve();
	for(int i=0;i<n;i++)cin>>A[i];
	int mark = 0,cur = -1;
	int low = 2;
	for(int i=0;i<n;i++){
		if(!mark){
			if(sel[A[i]]){
				for(int j=A[i]+1;j<MAX_NUM;j++)
					if(!sel[j]){
						B[i] = j;
						break;
					}
				low = 2;
				mark = 1;
			}
			else{
				B[i] = A[i];
			}
		}
		else{
			while(sel[low])low++;
			B[i] = low;
			low = B[i] + 1;

		}
		vector<int> fac = factorise(B[i]);
		for(int j=0;j<fac.size();j++){
			if(!sel[fac[j]]){
				for(int k=fac[j];k<MAX_NUM;k+=fac[j])
					sel[k] = 1;
			}
		}
	}
	for(int i=0;i<n;i++)cout<<B[i]<<" ";
	cout<<'\n';
}