#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<ll, ll> l4;
typedef pair<int, int> ii;
#define mp make_pair
#define pb push_back


bool debug = false;
const int maxn = 1e5+1;
int n, b, d, a[maxn];
inline bool valid(int mid)
{
  int n_mid = (n+1)/2;
  for (int i = mid+1; i <= n_mid; ++i)
    {
      int reach = (int) min(1ll * n, 1ll * i * d);
      int upper = min(n, i+reach);
      int lower = max(1, i-reach);
                if (debug) cout << "valid " << mid << " try  at " << " i = " << i
               << " reach = " << reach << " upper = " << upper
                                << " lower = " << lower << " " << (i-mid) * b << " " << a[upper] - a[lower-1] <<  endl;

      if ((i-mid) * b > a[upper] - a[lower-1])
        {
          return false;
        }

      //for the other side, consider k = n-i
      upper = min(n, n-i+1+reach);
      lower = max(1, n-i+1-reach);
                if (debug) cout << "valid " << mid << " try  at " << " i = " << n-i+1
               << " reach = " << reach << " upper = " << upper
                                << " lower = " << lower << " " << (i-mid) * b << " " << a[upper] - a[lower-1] <<  endl;

      if ((i-mid) * b > a[upper] - a[lower-1])
        {
          return false;
        }
        
    }
  if (debug) cout << "valid " << mid << " true\n";
  return true;
}
int main()
{
  scanf("%d %d %d", &n, &d, &b);
  for (int i = 1; i <= n; ++i)
    {
      scanf("%d", a+i);
      a[i] += a[i-1];
    }
  valid(0);
  int ans = (n+1)/2, l = 0, r = (n+1)/2, mid;
  while (l <= r)
    {
      mid = (l+r)>>1;
      if (valid(mid))
        {
          ans = mid;
          r = mid-1;
        }
      else
        {
          l = mid+1;
        }
    }
  printf("%d\n", ans);
}
