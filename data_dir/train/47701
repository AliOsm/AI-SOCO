#include <bits/stdc++.h>

using namespace std;

#define rep(i,a,n) for (int i=(a);i<(n);i++)
#define per(i,a,n) for (int i=(n)-1;i>=(a);i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define SZ(x) (int)x.size()

typedef long long ll;
typedef double ld;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<int,int> pii;
typedef pair<ll,ll>pll;
typedef vector<pii> vpii;

template<typename T>
T getint() {
    T x=0,p=1;
    char ch;
    do{ch=getchar();}while(ch <= ' ');
    if(ch=='-')p=-1,ch=getchar();
    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();
    return x*p;
}

template<typename T1,typename T2>bool umin(T1 &x,const T2&y){if(x>y)return x=y,true;return false;}
template<typename T1,typename T2>bool umax(T1 &x,const T2&y){if(x<y)return x=y,true;return false;}

const int maxn=(int)2e5+10;
const int inf=(int)1e9+5;
const int mod=(int)1e9+7;
const ll llinf=(ll)1e18+5;
const ld pi=acos(-1.0);

string s;
string t;
int dp[maxn];
int pref[maxn];
int ppref[maxn];

vi get(string s,int len){
    int n=s.length();
    vi z(n);
    int l=0,r=0;
    rep(i,1,n){
        if(i<=r)z[i]=min(r-i+1,z[i-l]);
        while(i+z[i]<n&&s[z[i]]==s[i+z[i]])z[i]++;
        if(i+z[i]>=r)l=i,r=i+z[i]-1;
    }
    vi res;
    rep(i,len+1,n){
        if(z[i]==len)res.pb(i-2);
    }
    return res;
}

int main(){
 //   freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    cin>>s>>t;
    vi pos=get(t+"#"+s,(int)t.length());
    int ptr=0;
    rep(i,0,s.length()){
        if(ptr<pos.size()&&pos[ptr]<=i)ptr++;
        if(ptr>0){
            int l=pos[ptr-1]-t.length();
            dp[i]=(l>=0?ppref[l]:0)+l+2;
            if(dp[i]>=mod)dp[i]-=mod;
        }
        pref[i]=dp[i];
        if(i>0){
            pref[i]+=pref[i-1];
            if(pref[i]>=mod)pref[i]-=mod;
        }
        ppref[i]=pref[i];
        if(i>0){
            ppref[i]+=ppref[i-1];
            if(ppref[i]>=mod)ppref[i]-=mod;
        }
    }
    cout<<pref[s.length()-1]<<endl;
    return 0;
}