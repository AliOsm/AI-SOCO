#include <bits/stdc++.h>


using namespace std;


const int N = 5000;
const long double EPS = 0.000000001;

//freopen("sum.in", "r", stdin);
//freopen("sum.out", "w", stdout);
#define double1 long double
#define pb push_back
#define int long long

int a[2000][2000];
vector <int> ans[N], ans1[N];

signed main() {

	ios::sync_with_stdio(false);
	cin.tie(0);
	int n, m;
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			int z;
			cin >> z;
			a[i][j] = z;
			ans[i].push_back(z);
		}
		sort(ans[i].begin(), ans[i].end());
		ans[i].erase(unique(ans[i].begin(), ans[i].end()), ans[i].end());
	}
	for (int j = 0; j < m; j++) {
		for (int i = 0; i < n; i++) {
			ans1[j].push_back(a[i][j]);
		}
		sort(ans1[j].begin(), ans1[j].end());
		ans1[j].erase(unique(ans1[j].begin(), ans1[j].end()), ans1[j].end());
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			int lol = lower_bound(ans[i].begin(), ans[i].end(), a[i][j]) - ans[i].begin();
			int lol1 = lower_bound(ans1[j].begin(), ans1[j].end(), a[i][j]) - ans1[j].begin();
			//cout << lol << ' ' << lol1 << endl;
			int ko = max(lol, lol1) + max(ans[i].size() - lol, ans1[j].size() - lol1);
			cout << ko << ' ';
		}
		cout << "\n";
	}
}
