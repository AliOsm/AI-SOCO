#include <bits/stdc++.h>

typedef unsigned long long ll ;
typedef long double ld ;
using namespace std;
int num[101]={},odd[105]={},even[105]={},dp[102][102][102]={};
int dfs(int x,int y,int b)
{
    if(dp[x][y][b]!=-1)
    {
        return dp[x][y][b];
    }
    int r=0;
    for(int i =x;i<y;i++)
    {
        int sum1odd=odd[i]-odd[x-1],sum2odd=odd[y]-odd[i];
        int sum1even=even[i]-even[x-1],sum2even=even[y]-even[i];

        if(sum1odd==sum1even&&sum2even==sum2odd&&b>=abs(num[i]-num[i+1]))
        {
            int tempb=b-abs(num[i]-num[i+1]);
            for(int h=0;h<=tempb;h++)
            {
                r=max(r,dfs(x,i,h)+dfs(i+1,y,tempb-h)+1);
            }
        }
    }
    return dp[x][y][b]=r;
}
int main()
{
    std::cin.tie(0);
    std::ios::sync_with_stdio(false);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    int n,b;
    cin >> n>>b;
    memset(dp,-1,sizeof dp);
    for(int i =1;i<=n;i++)
    {
        cin >> num[i];
        if(num[i]%2)
        {
            odd[i]++;
        }
        else
            even[i]++;

        odd[i]+=odd[i-1];
        even[i]+=even[i-1];
    }
    cout << max(0,dfs(1,n,b)) << endl;
    return 0;
}
