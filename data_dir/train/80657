#include <bits/stdc++.h>
using namespace std;

const int N = 1e6 + 10;
string s[N];
int cnt[N + N];

int main() {
    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
    int n, m;
    cin >> n >> m;
    for (int i = 0; i < n; i++)
        cin >> s[i];
    bool dp[n + 10][m + 10], dp2[n + 10][m + 10];
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++) {
            dp[i][j] = false;
            dp2[i][j] = false;
        }
    dp[0][0] = true;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            if(i || j) {
                if(s[i][j] == '.') {
                    if(i > 0)
                        dp[i][j] = dp[i][j] | dp[i - 1][j];
                    if(j > 0)
                        dp[i][j] = dp[i][j] | dp[i][j - 1];
                }
            }
    dp2[n - 1][m - 1] = true;
    for (int i = n - 1; i >= 0; i--)
        for (int j = m - 1; j >= 0; j--) {
            if(i < n - 1 || j < m - 1) {
                if(s[i][j] == '.') {
                    if(i < n - 1)
                        dp2[i][j] = dp2[i][j] | dp2[i + 1][j];
                    if(j < m - 1)
                        dp2[i][j] = dp2[i][j] | dp2[i][j + 1];
                }
            }
        }
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            if (dp[i][j] && dp2[i][j])
                cnt[i + j]++;
    int ans = min(2, min(n, m));
    for (int i = 1; i < n - 1 + m - 1; i++)
        ans = min(ans, cnt[i]);
    if(!dp[n - 1][m - 1] || !dp2[0][0])
        ans = 0;
    cout << ans << endl;
    return 0;
}
