#include <iostream>
#include <iomanip>
#include <sstream>
#include <fstream>
#include <cstdio>
#include <algorithm>
#include <deque>
#include <vector>
#include <map>
#include <cmath>
#include <cstdlib>
#include <set>
#include <queue>
#include <stack>
#include <string>
#include <cstring>
#include <climits>
#include <cctype>
#include <utility>
#include <cassert>
#include <ctime>
using namespace std;

#define ft first
#define sd second
#define pb push_back
#define endl '\n'
#define buli(x) __builtin_popcountll(x)
#define cpy(a,e) memcpy(a,e,sizeof(e))
#define clr(a,e) memset(a,e,sizeof(a))
#define iter(c) __typeof((c).begin())
#define tr(c,i) for (iter(c) i=(c).begin();i!=(c).end();i++)
#define eprintf(...) fprintf(stderr, __VA_ARGS__),fflush(stderr)
#define rep(i,n) for (int (i)=0;(i)<(n);i++)
#define repd(i,n) for (int (i)=(n)-1;(i)>=0;i--)
#define reps(i,s,e) for (int (i)=(s);(i)<=(e);i++)
#define repds(i,s,e) for (int (i)=(s);(i)>=(e);i--)
#define repl(i,s,e) for (int (i)=(s);(i);i=e[i])

#define TASK "D"

int n;
set<int> s;
set<int> l, r;
                                                         
int main() {
	#ifdef home
		freopen(TASK".in","r",stdin);
		freopen(TASK".out","w",stdout);
	#endif 

	scanf("%d", &n);

	int x;

	scanf("%d", &x);

	s.insert(-1);
	s.insert(INT_MAX);

	s.insert(x);

	for (int i = 0; i < n - 1; i++) {
	 	scanf("%d", &x);
	
		auto ite = s.lower_bound(x);

		int high = *ite;

		ite = --s.upper_bound(x);

		int low = *ite;

		if ((high != INT_MAX) && (low == -1 || r.find(low) != r.end())) {
			l.insert(high);
			printf("%d\n", high);
		} else {
		 	r.insert(low);
			printf("%d\n", low);
		}	

		s.insert(x);
	}	
           
	#ifdef home
		eprintf("time = %d ms\n", (int)(clock() * 1000. / CLOCKS_PER_SEC));
	#endif                                                                          
	return 0;
}