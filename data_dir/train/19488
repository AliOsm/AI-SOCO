#include<bits/stdc++.h>
#define F first
#define S second
#define pii pair<int,int>
#define pb push_back
typedef long long ll;
using namespace std;
const int N = 1e5 + 10 , LG = 20;
int seg[LG][4 * N];
bool lazy[LG][4 * N];

void shift(int bit ,int id,int s,int e){
    if(lazy[bit][id] == 0)return ;
    int mid = (s + e)/2;
    lazy[bit][2*id] = !lazy[bit][2*id];
    seg[bit][2*id] = (mid - s) - seg[bit][2*id];
    lazy[bit][2*id + 1] = !lazy[bit][2*id +1];
    seg[bit][2*id + 1] = (e - mid) - seg[bit][2*id + 1];
    lazy[bit][id] = 0;
    return  ;
}

void upd(int id,int bit,int L,int R,int s,int e){
    if(s>=L && e<=R){
        seg[bit][id] = (e - s) - seg[bit][id];
        lazy[bit][id] = !lazy[bit][id];
        return ;
    }
    if(s>=R || L>=e)return ;
    int mid = (s + e)/2;
    shift(bit , id , s , e);
    upd(2*id ,bit ,L ,R ,s ,mid);
    upd(2*id +1 , bit , L ,R , mid , e);
    seg[bit][id] = seg[bit][2*id] + seg[bit][2*id +1];
}

int get(int id,int bit,int L,int R,int s,int e){
    if(s>=L && e<=R)return seg[bit][id];
    if(s>=R || L>=e)return 0;
    int mid =(s + e)/2;
    shift(bit , id , s , e);
    return get(2*id , bit ,L ,R , s , mid) + get(2*id +1, bit ,L ,R , mid , e);
}

int main(){
    ios_base::sync_with_stdio(0); cin.tie(0);
    int n; cin>>n;
    for(int i=0;i<n;i++){
        int t; cin>>t;
        for(int j=0;j<LG;j++){
            if(t & (1<<j)){
                upd(1 , j , i , i + 1 , 0 , n);
            }
        }
    }
    int q; cin>>q;
    while(q--){
        int ty; cin>>ty;
        if(ty  == 1){
            int l,r; cin>>l>>r; l--;
            long long ans = 0 ;
            for(int j=0;j<LG;j++){
                ans+=(ll)(1<<j) * get(1 , j ,l , r , 0 , n);
            }
            cout<<ans<<'\n';
        }else{
            int l,r,x; cin>>l>>r>>x; l--;
            for(int j=0;j<LG;j++){
                if(x & (1<<j))upd(1 , j , l , r , 0 ,n);
            }
        }
    }
}
