#include <bits/stdc++.h>
using namespace std;
#define pf push_front
#define pb push_back
#define FOR(i,begin,end) for (int i=begin;i<=end;i++)
#define rep(i,t) for (int i=0;i<t;i++)
#define pii pair<int,int>
#define pi pair<pii,int>
#define X first
#define Y second 
#define fast cin.tie(0),cout.tie(0),ios::sync_with_stdio(false) 
#define int long long
const int maxN=1e5+7,MOD=1e9+7,INF=1e10+7,N=5000+7;
int n,k,a[maxN],b[maxN],ind[maxN],index[maxN],dis,help;
vector<pii>ans;
bool v[maxN];
vector<int>q;
main()
{
  fast;
  FOR(i,2,100000)
  {
    if(!v[i])
    {
      q.pb(i-1);
      for(int j=i;j<=100000;j+=i)
          v[j]=true;
    }
  }
  q.pb(100001);
  cin>>n;
  FOR(i,1,n)
    cin>>a[i],b[i]=a[i],index[a[i]]=i;
  sort(b+1,b+n+1);
  FOR(j,1,n)
    ind[b[j]]=j;
  FOR(i,1,n)
  {
    if(index[i]<ind[i])
    {
      dis=ind[i]-index[i];
      while(dis)
      {
        help=q[upper_bound(q.begin(),q.end(),dis)-q.begin()-1];
        ans.pb(pii(index[i],index[i]+help));
        index[a[index[i]+help]]-=help;
        index[i]+=help;
        swap(a[index[i]],a[index[i]-help]);
        dis-=help;
      }
    }
    else
    {
      dis=index[i]-ind[i];
      while(dis)
      {
        help=q[upper_bound(q.begin(),q.end(),dis)-q.begin()-1];
        ans.pb(pii(index[i]-help,index[i]));
        index[a[index[i]-help]]+=help;
        index[i]-=help;
        swap(a[index[i]],a[index[i]+help]);
        dis-=help;
      }
    }
  }
  cout<<ans.size()<<"\n";
  rep(i,ans.size())
    cout<<ans[i].X<<" "<<ans[i].Y<<"\n";
  return cout<<'\n',0;
}