#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <cstdio>
#include <vector>
#include <cmath>
#include <ctime>
#include <set>
#include <map>


typedef long long ll;

using namespace std;
int n,m,a[22][22],sv[22][22],cost[22][22],dp[1<<21];
char s[22][22];
int main(){
    cin>>n>>m;
    for(int i=0; i<n; i++)
    	cin>>s[i];
	for(int i=0; i<n; i++)
	for(int j=0; j<m; j++)
		cin>>a[i][j];
	for(int i=0; i<n; i++){
    	for(int j=0; j<m; j++){
    		int curv = 0;
    		for(int k=0; k<n; k++)
    			if(s[i][j] == s[k][j]){
    				sv[i][j] |= (1 << k);
    	      		cost[i][j] += a[k][j];
    	     		curv = max(curv, a[k][j]);
    	    	}
    		cost[i][j] -= curv;
		}
	}
	for(int i=0; i<(1<<n); i++) 
		dp[i]=1000000000;
	dp[0] = 0;
	for(int mask=1; mask<(1<<n); mask++){
		int lowbit = -1;
		for(int i=0; i<n; i++){
			if((mask >> i) & 1){
    	    	lowbit = i;
        		break;
			}
		}
	    for(int i=0; i<m; i++){
	    	dp[mask] = min(dp[mask], dp[mask & (mask ^ sv[lowbit][i])] + cost[lowbit][i]);
	    	dp[mask] = min(dp[mask], dp[mask ^ (1 << lowbit)] + a[lowbit][i]);
	    }
	}
	printf("%d\n", dp[(1 << n) - 1]);	               
	return 0;
}
