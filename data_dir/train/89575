#include<stdio.h>
#include<algorithm>
using namespace std;
typedef struct Res
{
	int x, id;
	bool operator < (const Res &b) const
	{
		if(x>b.x || x==b.x && id<b.id)
			return 1;
		return 0;
	}
}Res;
Res s[200005];
int n, m, tre[200005], a[200005];
int Query(int k)
{
	int ans = 0;
	while(k)
	{
		ans += tre[k];
		k -= k&-k;
	}
	return ans;
}
void Update(int k)
{
	while(k<=n)
	{
		tre[k] += 1;
		k += k&-k;
	}
}
int main(void)
{
	int i;
	scanf("%d%d", &n, &m);
	for(i=1;i<=n;i++)
	{
		scanf("%d", &a[i]);
		s[i].x = a[i], s[i].id = i;
	}
	sort(s+1, s+n+1);
	for(i=n;i>=1;i--)
	{
		if(s[i].x==0)
			Update(s[i].id);
	}
	for(i=1;i<=n;i++)
	{
		if(s[i].x==0)
			break;
		Update(s[i].id);
		if(s[i].x==s[i-1].x)
		{
			if(Query(s[i].id)-Query(s[i-1].id)<s[i].id-s[i-1].id)
			{
				printf("NO\n");
				return 0;
			}
		}
	}
	for(i=1;i<=n;i++)
	{
		if(a[i]==m)
			break;
	}
	if(i==n+1)
	{
		for(i=1;i<=n;i++)
		{
			if(a[i]==0)
			{
				a[i] = m;
				break;
			}
		}
		if(i==n+1)
		{
			printf("NO\n");
			return 0;
		}
	}
	for(i=1;i<=n;i++)
	{
		if(a[i]!=0)
			break;
	}
	if(i==n+1)
	{
		printf("YES\n");
		for(i=1;i<=n;i++)
			printf("%d ", m);
		puts("");
	}
	else
	{
		printf("YES\n");
		for(i=1;i<=n;i++)
		{
			if(a[i]==0)
			{
				if(i==1)
					a[i] = 1;
				else
					a[i] = a[i-1];
			}
		}
		for(i=1;i<=n;i++)
			printf("%d ", a[i]);
		puts("");
	}
	return 0;
}