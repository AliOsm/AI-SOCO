#include <bits/stdc++.h>
 
#define fto(i, x, y) for(auto i = (x); i <= (y); ++i)
#define fdto(i, x, y) for(auto i = (x); i >= (y); --i)
#define ftoa(i, x, y, a) for(auto i = (x); i <= (y); i += a)
#define ftoit(it, var) for (auto it = var.begin(); it != var.end(); ++it)
 
#define ii pair<int, int>
#define mp make_pair
#define ff first
#define ss second
 
#define vi vector<int>
#define vii vector<ii>
#define ll long long
#define vll vector<ll>
 
#define eb emplace_back
#define ef emplace_front
#define lb lower_bound
#define ub upper_bound
 
#define oo 1000000007
#define OO 1000000000000000007LL
 
using namespace std;
 
#define Pro "tmp"
#define maxN 1000007

int step[107][107];
vi adj[maxN];
int a[maxN];

void BFS(int u, int root) {
    queue <int> q;
    q.push(u);

    step[root][u] = 1;
    while (!q.empty()) {
        int u = q.front();
        q.pop();

        fto(i, 0, (int)adj[u].size()-1) {
            int v = adj[u][i];
            if (!step[root][v]) {
                step[root][v] = step[root][u]+1;
                q.push(v);
            }
        }
    }
}

int main() { 
    #ifndef ONLINE_JUDGE
        freopen(Pro".inp", "r", stdin);
        freopen(Pro".out", "w", stdout);
    #endif // ONLINE_JUDGE
    
    int n;
    scanf("%d", &n);

    fto(i, 1, n) {
        string s;
        cin >> s;
        fto(j, 1, n) if (s[j-1] == '1') adj[i].eb(j);
    }

    int m;
    scanf("%d", &m);

    fto(i, 1, m) scanf("%d", &a[i]);
    fto(i, 1, n) BFS(i, i);

    int cur = 1;
    vi ans;

    ans.eb(a[1]);
    fto(i, 2, m) {
        if (step[a[cur]][a[i]] == i-cur+1) continue;
        cur = i-1;
        ans.eb(a[cur]);
    }
    ans.eb(a[m]);

    printf("%d\n", ans.size());
    fto(i, 0, (int)ans.size()-1) printf("%d ", ans[i]);

    return 0;  
}