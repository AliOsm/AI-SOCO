#include<bits/stdc++.h>
using namespace std;

//#define int           long long 
#define S             second
#define F             first
#define pb            push_back
#define ppb           pop_back()
#define ppb           pop_back()
#define B(c)          (c).begin()
#define E(c)          (c).end()
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend() 
#define lb            lower_bound
#define si(c)         (int)((c).size())
#define lcm(a,b)      (a * (b / __gcd(a,b)))  
#define inf           (int)(2e18)
#define err           cerr << "move" << '\n';
#define endl          '\n'
#define pow(x, n)     (int)(pow(x, n))
#define mp            make_pair

typedef vector<int>                           vi;
typedef pair<int,int>                         pii;
typedef vector<pii>                           vpi;
typedef vector<vector<int> >                  vvi;;
typedef priority_queue<pii, vector<pii>, greater<pii> > pq;

const int N = 5e3+10;
vpi g[N], par(N), temp(N);
vi edge[N];
int n, a[N], b[N], mn[N], m, u, v, ans[N];

void dfs(int v){
    for(auto u : g[v]){
        if(!par[u.F].F){
            par[u.F].F = v, par[u.F].S = u.S;
            dfs(u.F);
        }
    }
}

void solve(){
    cin >> n;
    for(int i = 0; i < n-1; i++){
        cin >> v >> u;
        g[v].pb({u, i}), g[u].pb({v, i});
    }
    cin >> m;
    for(int i = 0; i < m; i++){
        cin >> a[i] >> b[i] >> mn[i];
        par = temp;
        par[a[i]].F = a[i];
        dfs(a[i]);
        int x = b[i];
        while(x != a[i]){
            edge[i].pb(par[x].S);
            x = par[x].F;
        }
        for(auto u : edge[i]){
            ans[u] = max(ans[u], mn[i]);
        }
    }
    for(int i = 0; i < n-1; i++){
        if(!ans[i])ans[i] = 1e6;
    }
    for(int i = 0; i < m; i++){
        int mnn = inf;
        for(auto u : edge[i]){
            mnn = min(ans[u], mnn);
        }
        if(mnn != mn[i]){
            cout << "-1" << endl; return;
        }
    }
    for(int i = 0; i < n-1; i++){
        cout << ans[i] << " ";
    }
}

signed main(){

    ios_base::sync_with_stdio(0); 
    cin.tie(0); cout.tie(0);   

    int t = 1;
    clock_t start, end; 
    start = clock(); 

    cout << fixed << setprecision(15);

    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout);
    freopen("error.txt", "w", stderr);
    #endif

    //cin >> t;

    while(t--){
        solve();
    }

    end = clock();
    double time_taken = double(end - start) / double(CLOCKS_PER_SEC); 
    // cerr<<time_taken;
}