/*
"IF U BELIEVE WHY NOT!!"
                       --Cristiano Ronaldo
*/
#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
lli M=1e9+7;
#define INF 1000000007
typedef pair<lli,lli> ll;
#define mem(a,x) memset(a,x,sizeof(a))
lli n,k;
lli x,y,z,q,u,a1,l,r,d,ax,bx,cx,ay,by,cy,m;
lli s[300007];
lli s1[300007];
lli s2[300007];
lli s3[300007];
lli s4[300007];
lli a[200007];
lli b[200007];
lli t[200007];
lli dp[5][5][100007];
unordered_map<lli,lli> vis;
lli ds(lli n)
{
    //cout<<n<<" ";
    lli s=0;
    while(n>0)
    {
        s+=(n%10LL);
        n/=10LL;
    }
    //cout<<s<<endl;
    return s;
}
lli ns(lli n)
{
    while(n>9)
    {
        n=ds(n);
    }
    return n;
}
lli op,mg;
lli solve(lli t1,lli t2,lli c)
{
    //cout<<t1<<" "<<t2<<" "<<c<<endl;
    if(c==n)
    {
        //cout<<"YES\n";
        return 1;
    }
    if(c==1)
    {
    for(int i=0;i<=3;i++)
    {
        for(int j=0;j<=3;j++)
        {
            lli ans=0;
            if(((i|j)==a[c])&&((i&j)==b[c]))
            {
                t[c]=i;
                t[c+1]=j;
                t1=i;
                t2=j;
                
                dp[t1][t2][c]=max(dp[t1][t2][c],solve(i,j,c+1));
                if(dp[t1][t2][c])
                break;
            }
        }
        if(dp[t1][t2][c])
                break;
    }
    }
    else
    {
        for(int i=0;i<=3;i++)
        {
            if(((t[c]|i)==a[c])&&(t[c]&i)==b[c])
            {
                t[c+1]=i;
                t2=i;
                t1=t[c];
                dp[t1][t2][c]=max(dp[t1][t2][c],solve(t[c],i,c+1));
                if(dp[t1][t2][c])
                break;
            }
        }
    }
    return dp[t1][t2][c];
}
int main()
{
cin>>n;

for(int i=1;i<n;i++)
cin>>a[i];
for(int i=1;i<n;i++)
{
    cin>>b[i];
    if(b[i]>a[i])
    return cout<<"NO",0;
}
if(solve(0,0,1))
{
cout<<"YES\n";
for(int i=1;i<=n;i++)
cout<<t[i]<<" ";
}
else
cout<<"NO";
}