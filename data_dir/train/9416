         /*"Success isn't permanent, failure isn't fatal,
                                      it's the courage to continue that counts"*/
#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
//using namespace __gnu_pbds;
using namespace std;
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
#define ll long long 
#define scn(n) scanf("%d",&n)
#define lscn(n) scanf("%lld",&n)
#define lpri(n) printf("%lld",n)
#define pri(n) printf("%d",n)
#define pln() printf("\n")
#define priln(n) printf("%d\n",n)
#define lpriln(n) printf("%lld\n",n)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define pb push_back     
#define mp make_pair
#define F first
#define S second
#define gcd __gcd
#define inf INT_MAX
#define ninf INT_MIN
const ll mod=1e9+7;         
const int N=5e5+4;

int minp[N];

void sieve()
{
	rep(i,2,N)
	minp[i]=i;

	for(ll i=2;i*i<N;i++)
	if(minp[i]==i)
	{
		//cout<<i<<" "<<minp[i]<<endl;

		for(ll j=i*i;j<N;j+=i)
		if(minp[j]==j)
		minp[j]=i;
	}
}

int main()
{
	sieve();

	vector<int> v;

	int n;

	scn(n);

	rep(i,2,n+1)
	v.pb(i/minp[i]);

	//rep(i,2,12)
	//cout<<i<<" "<<minp[i]<<endl;

	sort(v.begin(),v.end());

	rep(i,0,n-1)
	printf("%d ",v[i]);


    return 0;
}