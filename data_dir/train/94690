#include <bits/stdc++.h>

using namespace std;

const int N = 2e5 + 100;

int deg[N];
bool vis[N];

vector <int> Ans;
vector <int> Tree[N];

void del(int u, int p)
{
	if (deg[u] % 2)
		return;

	vis[u] = true;
	Ans.push_back(u);

	for (int v : Tree[u]) 
		deg[u]--, deg[v]--;
	
	for (int v : Tree[u]) if (v != p && !vis[v])
		del(v, u);
}

int DFS(int u, int p)
{
	for (int v : Tree[u]) if (v != p)
		DFS(v, u);

	if (deg[u] % 2 == 0)
		del(u, p);
}

int main()
{
	int n;	scanf("%d", &n);
	for (int i = 1; i <= n; i++) {
		int p;	scanf("%d", &p);
		if (!p)	continue;
		Tree[i].push_back(p);
		Tree[p].push_back(i);
		deg[p]++;	deg[i]++;
	}

	DFS(1, 0);

	if ((int) Ans.size() != n) 
		return 0* puts("NO");

	puts("YES");
	for (int u : Ans)
		printf("%d\n", u);

	return 0;
}
