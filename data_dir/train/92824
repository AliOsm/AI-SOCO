#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = (int)1e5 + 10;
int a[maxn],b[maxn],res[2][maxn * 2],v[2][maxn * 2],ans[2];
int main()
{
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int n;
    cin>>n;
    for(int i = 0; i < n; i++)
        scanf("%d",&a[i]);
    int m;
    cin>>m;
    for(int i = 0; i < m; i++)
        scanf("%d",&b[i]);
    int idxa = 0;
    int idxb = 0;
    int idx = 0;
    for(int start = 0; start < 2; start++)
    {
    idxa = 0;
    idxb = 0;
    idx = 0;
    while(idxa < n || idxb < m)
    {
        while((idxa < n && a[idxa] == start) || (idxb < m && b[idxb] == start))
        {
            if (idxa < n && a[idxa] == start)
            {
                v[start][idx] = start;
                res[start][idx] = idxa; idxa++;
                idx++;
            }
            if (idxb < m && b[idxb] == start)
            {
                v[start][idx] = start;
                res[start][idx] = idxb + n; idxb++;
                idx++;
            }
        }
        while((idxa < n && a[idxa] == 1 - start) || (idxb < m && b[idxb] == 1 - start))
        {
            if (idxa < n && a[idxa] == 1 - start)
            {
                v[start][idx] = 1 - start;
                res[start][idx] = idxa; idxa++;
                idx++;
            }
            if (idxb < m && b[idxb] == 1 - start)
            {
                v[start][idx] = 1 - start;
                res[start][idx] = idxb + n; idxb++;
                idx++;
            }
        }
    }
    }
    for(int start = 0; start < 2; start++)
    for(int i = 0; i < n + m; i++)
    {
        if (v[start][i] == 0) continue;
        int j = i;
        while(j < n + m && v[start][j] == 1) j++;
        if (i == 0) ans[start]++; else ans[start] += 2;
        i = j - 1;
    }
    int who = 0;
    if (ans[1] < ans[0]) who = 1;
    for(int i = 0; i < n + m; i++)
        printf("%d ",res[who][i] + 1);
    cout<<endl<<ans[who]<<endl;
    for(int i = 0; i < n + m; i++)
    {
        if (v[who][i] == 0) continue;
        int j = i;
        while(j < n + m && v[who][j] == 1) j++;
        if (i == 0)
        {
            printf("%d ",j);
        } else
        {
            printf("%d ",i);
            printf("%d ",j);
        }
        i = j - 1;
    }
    return 0;
}
