#include <bits/stdc++.h>
using namespace std;
const int N = 1e5 + 5;
int n, m, a, b, t, disc[N], low[N];
vector< vector<int> > Adj(N);
vector< pair<int, int> >ans;
void tarjan(int node, int par)
{
    disc[node] = low[node] = ++t;
    for(auto ch : Adj[node])
    {
        if(ch == par)   continue;
        if(!disc[ch])   ans.push_back({node, ch}), tarjan(ch, node), low[node] = min(low[node], low[ch]);
        else            low[node] = min(low[node], disc[ch]);
        if(disc[ch] < disc[node])   ans.push_back({node, ch});
        if(low[ch] > disc[node])
        {
            puts("0");
            exit(0);
        }
    }
}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    cin >> n >> m;
    while(m--)  cin >> a >> b, Adj[a].push_back(b), Adj[b].push_back(a);
    tarjan(1, 0);
    for(auto it : ans)  cout << it.first << ' ' << it.second << '\n';
    return 0;
}
