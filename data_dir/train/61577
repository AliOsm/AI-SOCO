//In the name of God
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cstring>
#include <climits>
#include <complex>
#include <fstream>
#include <cassert>
#include <cstdio>
#include <bitset>
#include <vector>
#include <limits>
#include <deque>
#include <queue>
#include <stack>
#include <ctime>
#include <set>
#include <map>

#define X first
#define Y second
// #define X real()
// #define Y imag()
// #define cin fin
// #define cout fout
using namespace std;
typedef long long ll;
typedef double ld;
typedef pair<ll, ll> pll;
// typedef complex<ld> point;
typedef pair<ll, ll> pii;
typedef pair<pii, ll> piii;
const int base = 10;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define int unsigned long long 
const int maxn = 2e5 + 10 ;
long double a , b , c , d ; 

main ( ) 
{ 
  cin >> a >> b >> c >> d ;
  cout << setprecision ( 13 )  <<(a/b)/(1-((((b-a)*(d-c))/(b*d)))) ;
} 

/*//In the name of good
#include <bits/stdc++.h>
using namespace std ;
const int maxn = 1e4 + 100 ;
int n , ar [ 52 ] , dp [ 52 ] [ maxn ] , S ;
pair < pair < int , int > , int > par [ 52 ] [ maxn ] ;
bool mark [ 52 ] ;

void BT ( int x , int y ) 
{  
  if ( y < 0 ) 
    assert ( 0 ) ;
  if ( x == 0 || y == 0 )
    return ; 
  mark [ par [ x ] [ y ] . second ] = 1 ;
  return BT ( par [ x ] [ y ] . first . first , par [ x ] [ y ] . first . second ) ;
} 

main ( ) 
{  
  cin >> n ;
  for ( int i = 1 ; i <= n ; i ++ )
    cin >> ar [ i ] , S += ar [ i ] ; 
  for ( int i = 1 ; i < maxn ; i ++ )
    dp [ 0 ] [ i ] = maxn ;
  dp [ 0 ] [ 0 ] = 0 ;
  
  for ( int i = 1 ; i <= n ; i ++ )
    for ( int j = 1 ; j < maxn ; j ++ )
      { 
	dp [ i ] [ j ] = dp [ i - 1 ] [ j ] ;
	par [ i ] [ j ] = par [ i - 1 ] [ j ] ;
	//if ( j == ar [ i ] * 2 + 2 ) 
	//{
	///  if ( dp [ i ] [ j ] >= ar [ i ] )	    
	//   par [ i ] [ j ] = make_pair ( pair < int , int > ( 0 , 0 ) , i ) ;
	//    dp [ i ] [ j ] = min ( dp [ i ] [ j ] , ar [ i ] ) ;
	//}
	for ( int k = 1 ; k < i ; k ++ ) 
	  { 	
	    if ( ar [ i ] <= ar [ k ] && j - 2 >= 0  ) 
	      {
		if ( dp [ i ] [ j ] > dp [ k ] [ j - 2 ] + ar [ i ] )
		  par [ i ] [ j ] = make_pair ( pair < int , int > ( k , j - 2 ) , i ) ;
		dp [ i ] [ j ] = min ( dp [ i ] [ j ] , dp [ k ] [ j - 2 ] + ar [ i ] ) ; 
	      }
	    if ( ar [ i ] > ar [ k ] && j - 2 * ( 1 + ar [ i ] - ar [ k ] )  >= 0 ) 
	      {
		if ( dp [ i ] [ j ] > dp [ k ] [ j - 2 * ( 1 + ar [ i ] - ar [ k ] ) ] + ar [ i ] )
		  par [ i ] [ j ] = make_pair ( pair < int , int > ( k , j - 2 * ( 1 + ar [ i ] - ar [ k ] ) ) , i ) ;
		dp [ i ] [ j ] = min ( dp [ i ] [ j ] , dp [ k ] [ j - 2 * ( 1 + ar [ i ] - ar [ k ] ) ] + ar [ i ] ) ; 
	      }
	  }
      }
  int A = 2 * ar [ 1 ] + 2 ;
  for ( int i = 2 ; i <= n ; i ++ )
    { 
      if ( ar [ i ] <= ar [ i - 1 ] ) 
	A += 2 ;
      else
	A += 2 + ar [ i ] * 2 - 2 * ar [ i - 1 ] ;
    } 
  
  int hlp = maxn , pos = 0 ; 
  for ( int i = ( A + 1 ) / 2 ; i < maxn ; i ++ )
    if ( hlp > dp [ n ] [ i ] ) 
      hlp = dp [ n ] [ i ] , pos = i ;
  BT ( n , pos ) ;
  cout << S - hlp << endl ;
  int cnt = 0 ; 
  for ( int i = 1 ; i <= n ; i ++  )
    if ( mark [ i ] == 0 ) 
      cnt ++ ; 
  cout << cnt << endl ;
  for ( int i = 1 ; i <= n ; i ++  )
    if ( mark [ i ] == 0 ) 
      cout << i << ' ' ;
} 
*/
/*
  #include <algorithm>
  #include <string>
  #include <vector>
  #include <cmath>
  #include <map>
  #include <set>
  #include <queue>
  #include <iostream>
  #include <utility>
  #include <stack>
  #include <complex>
  #include <string.h>
  #include <stdlib.h>
  #include <stdio.h>
  #include <functional>
  using namespace std;
  typedef long long ll;
  #define N 50
  #define L 100
  int dp[2][N*L+1][L+1][3];
  int main()
  {
  //  freopen("in","r",stdin);
  int n;
  scanf("%d",&n);
  int p[N];
  for(int i=0;i<n;++i)
  scanf("%d",p+i);
  int b(0);
  for(int i=0,pre=0;i<n;pre=p[i++])
  b+=(2+abs(pre-p[i]));
  b+=p[n-1];
  for(int i=0,ll=0;i<n;ll+=p[i++])
  {
  int f=i&1;
  int t=1^f;
  dp[f][0][0][0]=1;
  for(int j=0;j<=ll;++j)
  for(int k=0;k<=L;++k)
  {
  if(dp[f][j][k][0]>0)
  {
  int tmp=j+p[i];
  if(tmp<=N*L && dp[t][tmp][k][0]<dp[f][j][k][0])
  {	    for(int l=0;l<3;++l)
  dp[t][tmp][k][l]=dp[f][j][k][l];
  dp[t][tmp][k][1+i/32]|=(1<<(i%32));
  //cout<<'!'<<i<<' '<<tmp<<' '<<k<<' '<<dp[t][tmp][k][0]<<endl;
  }
  if(dp[t][j][p[i]][0]<dp[f][j][k][0]+abs(k-p[i])+2)
  {
  dp[t][j][p[i]][0]=dp[f][j][k][0]+abs(k-p[i])+2;
  dp[t][j][p[i]][1]=dp[f][j][k][1];
  dp[t][j][p[i]][2]=dp[f][j][k][2];
  //dp[t][j][p[i]][1+i/32]|=(1<<(i%32));
  //cout<<i<<' '<<j<<' '<<p[i]<<' '<<dp[t][j][p[i]][0]<<endl;
  }
  }
  }
  memset(dp[f],0,sizeof(dp[0]));
  }
  //cout<<b<<endl;
  for(int i=L*N;i>0;--i)
  for(int j=1;j<=L;++j)
  if(dp[1&n][i][j][0]>0 && dp[1&n][i][j][0]+j-1>=b/2)
  {
  printf("%d\n",i);
  int output[N],num(0);
  for(int k=0;k<n;++k)
  if(dp[1&n][i][j][1+k/32]&(1<<(k%32)))
  output[num++]=k+1;
  printf("%d\n",num);
  for(int i=0;i<num;++i)
  printf("%d ",output[i]);
  return 0;
  }
  printf("0\n0");
  return 0;
  }
//*/
