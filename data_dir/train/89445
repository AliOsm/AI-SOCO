#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
const int MOD = (int)1e9 + 7;
const int infint = (ll)1e9 + 7;
const ll inf = (ll)1e18;
const int MAXN = (int)2e5 + 3;
int n, q;
set<int> S;
unordered_map<int, char> C;
unordered_map<int, int> ans;
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	cin >> n >> q;
	set<int> S;
	for (int i = 0; i < q; i++)
	{
		int x, y;
		char c;
		cin >> x >> y >> c;
		if(ans.count(x))
		{
			cout << 0 << "\n";
			continue;
		}
		C[x] = c;
		if(c == 'L')
		{
			int last = -1;
			if(S.size() == 0 || *S.begin() > x);
			else
			{
				auto it = S.upper_bound(x);
				it--;
				last = *it;
			}
			if(last == -1)
			{
				cout << x << "\n";
				ans[x] = x;
				S.insert(x);
				continue;
			}
			if(C[last] == 'U')
			{
				cout << x - last << "\n";
				ans[x] = x - last;
				S.insert(x);	
				continue;
			}
			else
			{
				cout << ans[last] + x - last << "\n";
				ans[x] = ans[last] + x - last;
				S.insert(x);
				continue;
			}
		}
		else
		{
			int last = -1;
			if(S.size() == 0 || *S.rbegin() < x);
			else
			{
				auto it = S.upper_bound(x);
				last = *it;
			}
			if(last == -1)
			{
				cout << y << "\n";
				ans[x] = y;
				S.insert(x);
				continue;
			}
			if(C[last] == 'L')
			{
				cout << last - x << "\n";
				ans[x] = last - x;
				S.insert(x);	
				continue;
			}
			else
			{
				cout << ans[last] + last - x << "\n";
				ans[x] = ans[last] + last - x;
				S.insert(x);
				continue;
			}
		}
	}
}