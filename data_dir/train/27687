#include <bits/stdc++.h>
#define int long long
using namespace std;


const int N = 5e5 + 7;


int a[N], l[N], r[N], q[N], dpl[N], dpr[N];

int32_t main() {
    ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n; cin >> n;
    for(int i = 1; i <= n; i++) {
        cin >> a[i];
        q[i] = q[i - 1] + a[i];
    }
    stack <int> stk;
    for(int i = 1; i <= n; ++i) {
        while(!stk.empty() && a[stk.top()] >= a[i]) {
            r[stk.top()] = i;
            stk.pop();
        }
        if(!stk.empty()) l[i] = stk.top();
        stk.push(i);
    }
    while(!stk.empty()) {
        r[stk.top()] = n + 1;
        stk.pop();
    }

    for(int i = 1; i <= n; i++) {
        dpl[i] = (i - l[i]) * a[i] + dpl[l[i]];
    }

    for(int i = n; i >= 1; i--) {
        dpr[i] = (r[i] - i) * a[i] + dpr[r[i]];
    }

    int ans = 0, idx = 0;

    for(int i = 1; i <= n; i++) {
        if(dpl[i - 1] + dpr[i] > ans) {
            ans = dpl[i - 1] + dpr[i];
            idx = i;
        }
    }

    for(int i = idx + 1; i <= n; i++) a[i] = min(a[i], a[i - 1]);
    for(int i = idx - 1; i >= 1; i--) a[i] = min(a[i], a[i + 1]);

    for(int i = 1; i <= n; i++) cout << a[i] << " ";





}
