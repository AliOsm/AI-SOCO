#include<bits/stdc++.h>
using namespace std;

int findMinimum(string s)
{
    int n = s.size();

    for (int i = 1; i <= n; i++) {
        map<string,int>mp;
        for (int j = 0; j+i-1 < n; j++) {
            mp[s.substr(j, i)]++;
        }
        for (pair<string,int>g : mp) {
            if (g.second==1) return i;
        }
    }

    return -1;
}

int n, k;
string s;

void dfs(int i)
{
    if (i==n) {
//        cout << s << endl;
        if (findMinimum(s)==k) {
            cout << s << endl;
        }
        return;
    }
    for (char c = '0'; c <= '1'; c++) {
        s += c;
        dfs(i+1);
        s.pop_back();
    }
}

string solve(int n, int k)
{
    int sz = (n-k)/2;
    string t(sz, '0');
    t += '1';
    string s;
    while (s.size() < n) s += t;
    s.resize(n);
    return s;
}

int main()
{
    for (n = 1; n <= 20; n++) {
        for (k = n; k > 0; k -= 2) {
            assert(findMinimum(solve(n, k))==k);
        }
    }

    while (cin >> n >> k) {
        string ans = solve(n, k);
//        assert(findMinimum(ans)==k);
        cout << ans << endl;
    }




    return 0;
}
