#include<bits/stdc++.h>
using namespace std;

#define ll             long long
#define LL             long long
#define pii            pair<int, int>
#define pll            pair<ll, ll>
#define pil            pair<int, ll>
#define pli            pair<ll, int>
#define vi             vector<int>
#define vl             vector<ll>
#define vii            vector<pii>
#define vll            vector<pll>
#define vil            vector<pil>
#define vli            vector<pli>
#define pb             push_back
#define ppb            pop_back
#define mp             make_pair
#define ff             first
#define ss             second
#define TN             typename
#define all(v)         v.begin(), v.end()
#define endl           '\n'

template <TN T> T gcd(T a, T b) {return !b ? a : gcd(b, a % b);}
template <TN T> T lcm(T a, T b) {return a * (b / gcd(a, b));}
template <TN T> T sqr(T a) {return a * a;}
template <TN T> T cube(T a) {return a * a * a;}
template <TN T> inline void smin(T &a, T b) {a = a < b ? a : b;}
template <TN T> inline void smax(T &a, T b) {a = a > b ? a : b;}
template <TN T> void fill(T a[], T n, T b) {for (int i = 0; i <= n; i++) a[i] = b;}

int in() {int n; scanf("%d", &n); return n;}
ll Lin() {ll n; scanf("%lld", &n); return n;}
double Din() {double n; scanf("%lf", &n); return n;}

const ll inf = (ll)1e17;
const ll mod = (ll)1000000007;
const int N = 1e6 + 5;

int z[N];
int vis[N];

void zfunction(string p) {
	int left, right, n = p.size();
	z[0] = left = right = 0;
	for (int i = 1; i < n; i++) {
		if (i <= right) z[i] = min(z[i - left], right - i + 1);
		while (i + z[i] < n && p[i + z[i]] == p[z[i]]) z[i]++;
		if (i + z[i] - 1 > right) left = i, right = i + z[i] - 1;
	}
}

int solve() {
	int n = in(), m = in();
	string s;
	cin >> s;
	zfunction(s);
	int sz = (int)s.size(), last = 0;
	for (int i = 1; i <= m; i++) {
		int p = in();
		if (last >= p) {
			int common = last - p + 1;
			if (z[sz - common] + sz - common != sz) return printf("0\n");
		}
		last = p + sz - 1;
		vis[p]++, vis[p + sz]--;
	}
	ll ans = 1;
	for (int i = 1; i <= n; i++) {
		vis[i] += vis[i - 1];
		if (!vis[i]) ans = (ans * 26) % mod;
	}
	cout << ans << endl;
	return 0;
}

int main() {
	int test = 1, tc = 0;
	//scanf("%d", &test);
	while (test--) {
		//printf("Case %d: ", ++tc);
		solve();
	}
	return 0;
}

