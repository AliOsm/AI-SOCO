#include <bits/stdc++.h>
using namespace std ;
#define ll long long 
#define f(i, x, n) for (int i = x; i < (int)(n); ++i)
 
int const N = 100000, M = 1000000, md1 = 1e9 + 7, md2 = 1e9 + 9;
int bs1, bs2, bs1p[M + 1], bs2p[M + 1], n, m;
char s[N + 1], t[M + 2];
 
struct H{
	int v1, v2;
	H():v1(0), v2(0) {}
	void operator +=(char c){
		v1 = ((ll)v1 * bs1 + (c - 'a' + 1)) % md1;
		v2 = ((ll)v2 * bs2 + (c - 'a' + 1)) % md2;
	}
	H operator -(H const &o)const {
		H an;
		an.v1 = v1 - o.v1;
		if (an.v1 < 0)an.v1 += md1;
		an.v2 = v2 - o.v2;
		if (an.v2 < 0)an.v2 += md2;
		return an;
	}
	H operator <<(int x){
		H an;
		an.v1 = (ll)v1 * bs1p[x] % md1;
		an.v2 = (ll)v2 * bs2p[x] % md2;
		return an;
	}
	bool operator ==(H const &o)const { return v1 == o.v1 && v2 == o.v2; }
}h[M + 1];
 
H getH(int l, int r) { return h[r] - (h[l - 1] << r - l + 1); }
 
int main(){
	srand(time(0));
	bs1 = rand() % 30 + 30;
	bs1p[0] = 1;
	f(i, 1, M + 1)bs1p[i] = (ll)bs1p[i - 1] * bs1 % md1;
	bs2 = rand() % 30 + 30;
	bs2p[0] = 1;
	f(i, 1, M + 1)bs2p[i] = (ll)bs2p[i - 1] * bs2 % md2;
	
	scanf("%s%s", s, t + 1);
	n = strlen(s);
	m = strlen(t + 1);
	f(i, 1, m + 1)h[i] = h[i - 1], h[i] += t[i];
	
	if (s[0] == '1')f(i, 0, n) { if (s[i] == '0')s[i] = '1'; else s[i] = '0'; }
	
	int st = 0;
	while (s[st] == '0')++st;
	
	int fr0 = 0, fr1;
	f(i, 0, n)if (s[i] == '0')++fr0;
	fr1 = n - fr0;
	
	int an = 0;
	f(i, 1, m + 1){
		ll zl = (ll)i * fr0;
		if (zl > m)break;
		int ol = m - zl;
		if (ol == 0)continue;
		if (ol % fr1 != 0)continue;
		
		int j = ol / fr1;
		H zh = getH(1, i), oh = getH(st * i + 1, st * i + j);
		if (zh == oh)continue;
		
		bool ok = true;
		int c = 1;
		f(k, 0, n){
			if (s[k] == '0'){
				if (!(getH(c, c + i - 1) == zh)) { ok = false; break; }
				c += i;
			}else {
				if (!(getH(c, c + j - 1) == oh)) { ok = false; break; }
				c += j;
			}
		}
		if (ok)++an;
	}
	printf("%d\n", an);
}