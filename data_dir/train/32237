#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>

using namespace std;

const vector<int> mods={
877785899,
599160479,
835442017,
713976749,
696336107,
603345527,
};

inline int add(int a,int b,const int mod)
{
    if (a+b>=mod)
        return a+b-mod;
    return a+b;
}
inline int sub(int a,int b,const int mod)
{
    if (a>=b)
        return a-b;
    return a-b+mod;
}

inline int mul(int a,int b,const int mod)
{
    return a*1ll*b%mod;
}

inline vector<int> add(vector<int> a,vector<int> b)
{
    for (int i=0;i<mods.size();i++)
    {
        a[i]=add(a[i],b[i],mods[i]);
    }
    return a;
}
inline vector<int> mul(vector<int> a,vector<int> b)
{
    for (int i=0;i<mods.size();i++)
    {
        a[i]=mul(a[i],b[i],mods[i]);
    }
    return a;
}
inline vector<int> sub(vector<int> a,vector<int> b)
{
    for (int i=0;i<mods.size();i++)
    {
        a[i]=sub(a[i],b[i],mods[i]);
    }
    return a;
}


map<vector<int>,int> ga;
vector<vector<int> > pows;
int ans[2000500];

int main()
{
    int n,k;
    cin >> n >> k;
    string s;
    cin >> s;
    s+=s.substr(0,k-1);
    int m;
    cin >> m;
    pows.resize(k+10);
    int b=257;
    for (int i=0;i<mods.size();i++)
        pows[0].push_back(1);
    for (int i=1;i<pows.size();i++)
    {
        pows[i]=mul({b,b,b,b,b,b},pows[i-1]);
    }

    for (int i=1;i<=m;i++)
    {
        string s;
        cin >> s;
        vector<int> h={0,0,0,0,0,0};
        for (int j=0;j<k;j++)
            h=add(h,mul({s[j],s[j],s[j],s[j],s[j],s[j]},pows[k-1-j]));
        ga[h]=i;
    }
    vector<int> h={0,0,0,0,0,0};
    for (int i=0;i<k-1;i++)
    {
        h=add(mul(h,{b,b,b,b,b,b}),{s[i],s[i],s[i],s[i],s[i],s[i]});
    }
    for (int i=k-1;i<s.size();i++)
    {
        h=add(mul(h,{b,b,b,b,b,b}),{s[i],s[i],s[i],s[i],s[i],s[i]});
        if (i>k-1)
            h=sub(h,mul(pows[k],{s[i-k],s[i-k],s[i-k],s[i-k],s[i-k],s[i-k]}));
        if (ga.count(h))
            ans[i-k+1]=ga[h];
    }
    for (int i=0;i<k;i++)
    {
        set<int> s;
        int fl=1;
        for (int j=0;j<n;j++)
        {
            int x=i+j*k;
            if (!ans[x])
            {
                fl=0;
                break;
            }
            if (s.count(ans[x]))
            {
                fl=0;
                break;
            }
            s.insert(ans[x]);
        }
        if (!fl)
            continue;

        cout << "YES" << endl;
        for (int j=0;j<n;j++)
        {
            int x=i+j*k;
            cout << ans[x] << endl;
        }
        return 0;
    }
    cout << "NO";




    return 0;
}
