#include <bits/stdc++.h>
using namespace std;
 
typedef long long ll;
typedef long double ld;
#define F first
#define S second
#define ii pair <int,int>
#define ever (;;)
 
const int N = 300100;
 
bool vis[N];
int n,a[N];
ll dp[N][2];
vector <ii> adj[N];
 
void dfs(int u,int v)
{
    if( vis[u] )
        return;
    vis[u] = 1;
 
    dp[u][0] = dp[u][1] = a[u];
 
    vector <ll> one,zero,oone;
    for(auto X:adj[u])
    {
        int x = X.F;
        int w = X.S;
 
        if( x == v )
            continue;
 
        dfs(x,u);
        dfs(x,u);
 
        one.push_back(dp[x][1] - w);
        oone.push_back(dp[x][1]);
        zero.push_back(dp[x][0]);
    }
 
    sort(one.begin(),one.end(),greater <ll> () );
    sort(oone.begin(),oone.end(),greater <ll> () );
    sort(zero.begin(),zero.end(),greater <ll> () );
 
    int szone = (int)(one.size());
    int szoone = (int)(oone.size());
    int szzero = (int)(zero.size());
 
    if( szzero )
        dp[u][0] = max( dp[u][0] , zero[0] );
    if( szone )
        dp[u][1] = max( dp[u][1] , a[u] + one[0] );
    if( szone >= 2 )
        dp[u][0] = max( dp[u][0] , a[u] + one[0] + one[1] );
    if( szoone )
        dp[u][0] = max( dp[u][0] , oone[0] );
}
 
int main()
{
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
        scanf("%d",&a[i]);
    for(int i=0;i<n-1;i++)
    {
        int a,b,c;
        scanf("%d%d%d",&a,&b,&c);
        adj[a].push_back( { b , c } );
        adj[b].push_back( { a , c } );
    }
 
    dfs(1,0);
 
    printf("%lld",max( dp[1][0] , dp[1][1] ));
}