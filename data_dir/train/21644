#include <iostream>
#include <cstdio>
#include <vector>
#include <cstring>
#include <cassert>

using namespace std;

#define si(a) scanf("%d",&a)
#define f first
#define s second
#define mp(a,b) make_pair(a,b)

int vis[100005],col[100005],mn,cnt,allcol;
bool is;

vector<pair<int,int> > graph[100005];
vector<int> tmpanswer;

bool ppp;
vector<int> allnow;

void go(int now,int ncol)
{
    if(vis[now]){
        is&=(ncol==col[now]);
        return ;
    }
    if(ppp)
        allnow.push_back(now);
    if(ncol)
        tmpanswer.push_back(now);
    vis[now]=1;
    cnt+=ncol;
    col[now]=ncol;
    int i;
    for(i=0;i<graph[now].size();i++){
        int to=graph[now][i].f,c=(graph[now][i].s!=allcol);
        go(to,ncol^c);
    }
    return ;
}

vector<int> answer;
int minanswer;

void clearnow(void)
{
    int i;
    for(i=0;i<allnow.size();i++)
        vis[allnow[i]]=0;
    return ;
}

void do_it(int now)
{
    allnow.clear();
    ppp=true;
    is=true;
    cnt=0;
    tmpanswer.clear();
    go(now,1);
    if(is && cnt<minanswer){
        minanswer=cnt;
        swap(answer,tmpanswer);
    }
    ppp=false;
    is=true;
    cnt=0;
    tmpanswer.clear();
    clearnow();
    go(now,0);
    if(is && cnt<minanswer){
        minanswer=cnt;
        swap(answer,tmpanswer);
    }
    is=true;
    cnt=0;
    tmpanswer.clear();
    clearnow();
    go(now,1);
    if(is && cnt<minanswer){
        minanswer=cnt;
        swap(answer,tmpanswer);
    }
    is=true;
    cnt=0;
    tmpanswer.clear();
    clearnow();
    go(now,0);
    if(is && cnt<minanswer){
        minanswer=cnt;
        swap(answer,tmpanswer);
    }
    for(int i=0;i<allnow.size();i++)
        vis[allnow[i]]=1;
    return ;
}

vector<int> answerashol,ans1;

int main()
{
    //freopen("input.txt","r",stdin);
    int n,m,i;
    si(n);si(m);
    for(i=0;i<m;i++){
        int u,v;
        char c;
        si(u);si(v);scanf(" %c",&c);
        u--;v--;
        graph[u].push_back(mp(v,c=='B'));
        graph[v].push_back(mp(u,c=='B'));
    }
    allcol=0;
    bool p1=true,p2=true;
    for(i=0;i<n;i++){
        if(vis[i])
            continue;
        minanswer=1000000000;
        answer.clear();
        do_it(i);
        if(minanswer==1000000000){
            p1=false;
            break;
        }
        for(int j=0;j<answer.size();j++)
            answerashol.push_back(answer[j]);
    }
    allcol=1;
    memset(vis,0,sizeof(vis));
    for(i=0;i<n;i++){
        if(vis[i])
            continue;
        minanswer=1000000000;
        answer.clear();
        do_it(i);
        if(minanswer==1000000000){
            p2=false;
            break;
        }
        for(int j=0;j<answer.size();j++)
            ans1.push_back(answer[j]);
    }
    if(!p1 && !p2){
        printf("-1\n");
        return 0;
    }
    if(p1 && p2){
        if(answerashol.size()>ans1.size())
            swap(answerashol,ans1);
    }
    if(!p1)
        swap(answerashol,ans1);
    printf("%d\n",answerashol.size());
    for(i=0;i<answerashol.size();i++)
        printf("%d ",answerashol[i]+1);
    if(answerashol.size())
        printf("\n");
    return 0;
}
