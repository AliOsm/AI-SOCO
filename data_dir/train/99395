#include <iostream>
#include <string>
#include <vector>
using namespace std;

typedef unsigned long long ull;
string s, t;
const int p = 29;
ull ppow[1000100];
ull hs[1000100];
ull ht;
int n;
vector<int> ans;

bool ok(int x)
{
    ull h = x ? hs[x - 1] : 0;
    h *= p;
    h += hs[n - 1] - hs[x];
    return h == ht;
}

int main()
{
    cin >> s >> t;
    n = s.length();
    ppow[0] = 1;
    for (int i = 1; i < 1000100; ++i)
        ppow[i] = ppow[i - 1] * p;
    for (int i = 0; i < n; ++i)
    {
        hs[i] = (s[i] - 'a' + 1) * ppow[i];
        if (i)
            hs[i] += hs[i - 1];
    }
    for (int i = 0; i < n - 1; ++i)
        ht += (t[i] - 'a' + 1) * ppow[i];
    ht *= p;
    for (int i = 0; i < n; ++i)
        if (ok(i))
            ans.push_back(i + 1);
    printf("%d\n", ans.size());
    for (int i = 0; i < ans.size(); ++i)
        printf("%d ", ans[i]);
    return 0;
}