#include <bits/stdc++.h>
using namespace std;
vector<vector<int > > g;
vector<bitset<1005 > > bs;
bitset<1005 > len;
const int N= 1e5 + 5;
int ans[N];
struct op{

	int t,i,j;
	op(int ty= -1,int a= -1,int b= -1){
		t= ty,i= a,j= b;
	}
};
vector<op > oper;
int fans= 0;
int n,m,k;
void dfs(int u,int p){

	for(int i= 0;i < g[u].size();i++){
		int v= g[u][i];
		if(v == p)
			continue;
		op to= oper[v];
		bool ch= false;
		if(to.t == 1){
			if(bs[to.i][to.j] == 0){
				fans++;
				bs[to.i][to.j]= 1;
				ch= true;
			}
		}
		else if(to.t == 2){
			if(bs[to.i][to.j] == 1){
				fans--;
				bs[to.i][to.j]= 0;
				ch= true;
			}
		}
		else if(to.t == 3){
			int ones= bs[to.i].count();
			fans-= ones;
			fans+= m - ones;
			bs[to.i].flip();
			bs[to.i]&= len;
		}
		ans[v]= fans;
		dfs(v,u);

		if(to.t == 1 && ch){
			fans--;
			bs[to.i][to.j]= 0;
		}
		else if(to.t == 2 && ch){
			fans++;
			bs[to.i][to.j]= 1;
		}
		else if(to.t == 3){
			int ones= bs[to.i].count();
			fans-= ones;
			fans+= m - ones;
			bs[to.i].flip();
			bs[to.i]&= len;
		}
	}

}

int main(){

//	freopen("readin.txt","r",stdin);

	scanf("%d%d%d", &n, &m, &k);
	bs.resize(n + 1);
	g.resize(k + 1);
	int t,a,b;
	oper.push_back(op());
	for(int i= 1;i <= k;i++){
		scanf("%d%d", &t, &a);
		if(t == 1 || t == 2){
			scanf("%d", &b);
		}
		oper.push_back(op(t,a,b));
		if(t != 4){
			g[i - 1].push_back(i);
		}
		else{
			g[a].push_back(i);
		}
	}

	for(int i= 1;i <= m;i++)
		len[i]= 1;
	dfs(0, -1);
	for(int i= 1;i <= k;i++)
		printf("%d\n",ans[i]);
	return 0;
}
