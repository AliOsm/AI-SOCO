#include <bits/stdc++.h>
#define pb push_back
#define all(x) begin(x), end(x)

using namespace std;
using ll = long long int;
const int MOD1 = 1e9 + 7;
const int MOD2 = 982451653;

ll mpow(ll a, ll n, ll m)
{
	ll r = 1;
	while (n)
	{
		if (n & 1) r = r*a % m;
		a = a*a % m;
		n >>= 1;
	}
	return r;
}

int main()
{
	ios::sync_with_stdio(0); cin.tie(0);
	mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

	int q; cin >> q;
	while (q--)
	{
		int n; cin >> n;
		ll a[n];
		
		uniform_int_distribution<int> d(2*n, 3*n);
		ll base1 = d(rng), base2 = d(rng);
		ll h1 = 0, h2 = 0;
		
		map<array<ll, 2>, int> m;
		m[{0, 0}] = 1;
		stack<ll> s;
		for (int i = 0; i < n; ++i)
		{
			cin >> a[i];
			if (s.empty() or s.top() != a[i])
			{
				h1 = h1 + a[i] * mpow(base1, s.size(), MOD1); h1 %= MOD1;
				h2 = h2 + a[i] * mpow(base2, s.size(), MOD2); h2 %= MOD2;
				++m[{h1, h2}];
				s.push(a[i]);
			}
			else
			{
				s.pop();
				h1 = h1 - a[i] * mpow(base1, s.size(), MOD1); h1 %= MOD1; if (h1 < 0) h1 += MOD1;
				h2 = h2 - a[i] * mpow(base2, s.size(), MOD2); h2 %= MOD2; if (h2 < 0) h2 += MOD2;
				++m[{h1, h2}];
			}
		}
		ll ans = 0;
		for (auto [x, y] : m)
			ans += 1LL * y * (y-1) / 2;
		cout << ans << '\n';
	}
}