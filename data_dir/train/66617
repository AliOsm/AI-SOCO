/********************************************************
 *    #####   #    #    ##     ####    #   #    ##      *
 *    #    #  #    #   #  #   #    #    # #    #  #     *
 *    #####   ######  #    #  #          #    #    #    *
 *    #    #  #    #  ######  #  ###     #    ######    *
 *    #    #  #    #  #    #  #    #     #    #    #    *
 *    #####   #    #  #    #   ####      #    #    #    *
 ********************************************************/

#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define	endl		'\n'
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
using namespace std;

#define N  100

char arr[N][N];
ll int vis[N][N]={0};
ll int vis2[N][N]={0};

ll int dfs(ll x,ll y)
{
	vis[x][y]=1;
	ll int cnt=1;
	if(!vis[x+1][y]&&arr[x+1][y]=='.')
	{
		cnt+=dfs(x+1,y);
	}
	if(!vis[x-1][y]&&arr[x-1][y]=='.')
	{
		cnt+=dfs(x-1,y);
	}
	if(!vis[x][y+1]&&arr[x][y+1]=='.')
	{
		cnt+=dfs(x,y+1);
	}
	if(!vis[x][y-1]&&arr[x][y-1]=='.')
	{
		cnt+=dfs(x,y-1);
	}
	return cnt;
}


void dfs2(ll x,ll y)
{
	vis2[x][y]=1;
	if(!vis2[x+1][y]&&arr[x+1][y]=='.')
	{
		dfs2(x+1,y);
	}
	if(!vis2[x-1][y]&&arr[x-1][y]=='.')
	{
		dfs2(x-1,y);
	}
	if(!vis2[x][y+1]&&arr[x][y+1]=='.')
	{
		dfs2(x,y+1);
	}
	if(!vis2[x][y-1]&&arr[x][y-1]=='.')
	{
		dfs2(x,y-1);
	}
	arr[x][y]='*';
}


int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		ll int n,m,k;
		cin>>n>>m>>k;
		ll int i,j;
		for(i=0;i<=n+1;i++)
		{
			for(j=0;j<=m+1;j++)
			{
				vis[i][j]=0;
				arr[i][j]='*';
			}
		}
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)
			{
				cin>>arr[i][j];
			}
		}
		for(i=1;i<=n;i++)
		{
			if(!vis[i][1]&&arr[i][1]=='.')
			{
				dfs(i,1);
			}
			if(!vis[i][m]&&arr[i][m]=='.')
			{
				dfs(i,m);
			}
		}
		for(i=1;i<=m;i++)
		{
			if(!vis[1][i]&&arr[1][i]=='.')
			{
				dfs(1,i);
			}
			if(!vis[n][i]&&arr[n][i]=='.')
			{
				dfs(n,i);
			}
		}
		vector<pair<ll int,pair<ll int,ll int>>> v;
		ll int tot=0;
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)
			{
				if(!vis[i][j]&&arr[i][j]=='.')
				{
					tot++;
					v.pb(mp(dfs(i,j),mp(i,j)));
				}
			}
		}
		k=tot-k;
		sort(all(v));
		ll int ans=0;
		for(i=0;i<k;i++)
		{
			ans+=v[i].F;
			dfs2(v[i].S.F,v[i].S.S);
		}
		cout<<ans<<endl;
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)
			{
				cout<<arr[i][j];
			}
			cout<<endl;
		}
	}
	return 0;
}