/*******************************\
   Name:    REAJUL HAQUE REAYZ  |
   School:  COMILLA UNIVERSITY  |
            CSE (5TH BATCH)     |
********************************/
#include<bits/stdc++.h>
#define endl "\n"
#define inf 1<<30
#define pi acos(-1.0)
#define pb push_back
#define mp make_pair
#define ss stringstream
#define all(v) v.begin(), v.end()
#define mem(x,y) memset(x,y,sizeof(x))
#define bit_cnt(mask) __builtin_popcount(mask)
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int MOD = 1000000007; /// 1e9+7
const int MAX = 100005;     /// 1e5+5
ll bigmod(ll n, ll r)
{
    if(r==0) return 1;
    if(r==1) return n;
    if(r%2==0)
    {
        ll ret = bigmod(n, r/2);
        return ((ret%MOD) * (ret%MOD)) % MOD;
    }
    else return ((n%MOD) * (bigmod(n,r-1)%MOD)) % MOD;
}
ll modinverse(ll a){return bigmod(a,MOD-2)%MOD;}
ll lcm(ll a, ll b) {a=abs(a); b=abs(b); return (a/__gcd(a,b))*b;}
ll gcd(ll a, ll b) {a=abs(a); b=abs(b); if(!b) return a; return __gcd(b,a%b);}

string x = "What are you doing at the end of the world? Are you busy? Will you save us?";
string a = "What are you doing while sending \"";
string b = "\"? Are you busy? Will you send \"";
string c = "\"?";
ll lenx, lena, lenb, lenc, len[MAX];
char solve(ll n, ll k){
    if(n==0){
        if(k>=lenx) return '.';
        else return x[k];
    }
    if(k<lena) return a[k];
    k-=lena;
    if(k<len[n-1]) return solve(n-1,k);
    k-=len[n-1];
    if(k<lenb) return b[k];
    k-=lenb;
    if(k<len[n-1]) return solve(n-1,k);
    k-=len[n-1];
    if(k<lenc) return c[k];
    else return '.';
}
int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0);
    lenx = x.size();
    lena = a.size();
    lenb = b.size();
    lenc = c.size();
    len[0]=lenx;
    for(ll i=1; i<MAX; i++){
        len[i]=lena+len[i-1]+lenb+len[i-1]+lenc;
        if(len[i]>1e18) len[i]=1e18;
    }
    ll q; cin>>q;
    while(q--){
        ll n, k; cin>>n>>k;
        k--;
        cout<<solve(n,k);
    }
    cout<<endl;
    return 0;
}
