#include<bits/stdc++.h>

using namespace std;

int n, m, x, y, z;
vector<pair<int, long long>> g[100010];
long long d[100010];
int p[100010];


int main() {
    
    cin >> n >> m;
    
    for(int i = 0; i < m; i++) {
        cin >> x >> y >> z;
        g[x].push_back({y, z});
        g[y].push_back({x, z});
    }
    
    for(int i = 1; i <= n; i++) {
        d[i] = 1e16;
    }
    
    priority_queue<pair<long long, int>> q;
    
    d[1] = 0;
    
    q.push({0ll, 1});
    
    while(!q.empty()) {
        int v = q.top().second;
        int dst = q.top().first;
        q.pop();
        if(dst > d[v])continue;
        
        for(auto& i : g[v]) {
            if(d[i.first] > d[v] + i.second) {
                d[i.first] = d[v] + i.second;
                q.push({-d[i.first], i.first});
                p[i.first] = v;
            }
        }
    }
    
    if(d[n] == 1e16) return cout << -1, 0;
    stack<int> st;
    while(n != 1) {
    	st.push(n);
    	n = p[n];
    }
    
    cout << 1 << " ";
    
    while(st.size()) {
    	cout << st.top() << " ";
    	st.pop();
    }
    
    return 0;
}