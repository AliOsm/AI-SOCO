#include <bits/stdc++.h>

typedef long long ll;
using namespace std;

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(int i = (a); i <= (b); i++)
#define fd(i,a,b) for(int i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<int,int>
#define SZ(x) ((int)x.size())
#define vii vector<pair<int,int>>

const int INF = 1000000002;
const ll INFLL = 100000000000000000ll;
const ll MOD = 1000000007;

// ----------------------------------------------------------------------------------------------------------

int A[8][8], Exp[4], N;
map<string,int> M;

int main()
{
    M["Anka"] = 0;
    M["Chapay"] = 1;
    M["Cleo"] = 2;
    M["Troll"] = 3;
    M["Dracul"] = 4;
    M["Snowy"] = 5;
    M["Hexadecimal"] = 6;

    cin >> N;
    f(i,1,N)
    {
        string s1,s2;
        cin >> s1 >> s2 >> s2;
        int a = M[s1], b = M[s2];
        A[a][b] = true;
    }

    f(i,0,2) cin >> Exp[i];

    int limit = 2187;
    int liking = 0;
    ll best = INFLL;

    f(mask,0,limit-1)
    {
        int m = mask;
        vector<int> team[3];

        f(pos,0,6)
        {
            team[m%3].pb(pos);
            m /= 3;
        }

        bool bad = false;
        f(t,0,2) if(team[t].empty()) bad = true;
        if(bad) continue;

        ll lo = INFLL, hi = 0;
        int likes = 0;
        f(t,0,2) for(int a : team[t]) for(int b : team[t]) likes += A[a][b];
        f(t,0,2)
        {
            ll e = Exp[t] / SZ(team[t]);
            lo = min(lo,e);
            hi = max(hi,e);
        }

        ll diff = hi-lo;
        if(diff < best)
        {
            best = diff;
            liking = likes;
        }
        if(diff == best) liking = max(liking, likes);
    }

    cout << best << "\n" << liking;
}
