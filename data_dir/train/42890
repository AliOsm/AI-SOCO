#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define ll long long
//increase stack size
#pragma comment(linker, "/STACK:16777216")

ll mxm() {return LLONG_MIN;}
template<typename... Args>
ll mxm(ll a, Args... args) { return max(a,mxm(args...)); }

ll mnm() {return LLONG_MAX;}
template<typename... Args>
ll mnm(ll a, Args... args) { return min(a,mnm(args...)); }

template<class T> ostream& operator<<(ostream& os,vector<T> V){
	os<<"[ ";for(auto v:V)os<<v<<" ";return os<<"]";
}
template<class L,class R> ostream& operator<<(ostream& os,pair<L,R> P){
	return os<<"("<<P.first<<","<<P.second<<")";
}

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
template<typename Arg1>
void __f(const char* name,Arg1&& arg1){
	cout<<name<<" : "<<arg1<<endl;
}
template <typename Arg1,typename... Args>
void __f(const char* names,Arg1&& arg1,Args&&... args){
	const char* comma=strchr(names+1,',');cout.write(names,comma-names)<<" : "<<arg1<<" | ";__f(comma+1,args...);
}
#else
#define trace(...) 1
#endif

#define ld long double
#define pll pair<ll,ll>
#define ii pair<int,int>
#define vll vector<ll>
#define vii vector<ii>
#define vi vector<int>
#define vpll vector<pll>
#define vld vector<ld>
#define vvld vector<vld>
#define vvi vector<vi>
#define vvll vector<vll>
#define vvpll vector<vpll>
#define vvii vector<vii>
#define I insert
#define F first
#define S second
#define pb push_back
#define endl "\n"
#define all(x)	x.begin(),x.end()

const int mod=1e9+7;
// 128 bit: __int128
inline int add(int a,int b){a+=b;if(a>=mod)a-=mod;return a;}
inline int sub(int a,int b){a-=b;if(a<0)a+=mod;return a;}
inline int mul(int a,int b){return (a*1ll*b)%mod;}
inline int power(int a,int b){int rt=1;while(b>0){if(b&1)rt=mul(rt,a);a=mul(a,a);b>>=1;}return rt;}
inline int inv(int a){return power(a,mod-2);}

struct compare{
	bool operator() (const int &a,const int &b) const{
		return a>b;
	}
};

const int N = 1e6 + 10;

vi perf(N), shrt(N), done(N), avsingle(N), seencnt(N);
vvi pfac(N);
vvi adj(N);
int pr = 0;
void pre(){
	for(int i = 0; i < N; i++)
		shrt[i] = i;
	for(int i = 0; i <= sqrt(N); i++)
		perf[i * i] = 1;
	for(int i = 2; i < N; i++){
		if(done[i])
			continue;
		pr++;
		for(int j = i + i; j < N; j+=i){
			int c = 0;
			while(shrt[j] % i == 0)
				shrt[j] /= i, c++;
			if(c & 1)
				shrt[j] *= i, pfac[j].pb(i);
			done[j] = 1;
		}
		pfac[i].pb(i);
	}
}

int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);cout<<setprecision(25);
	pre();
	int n;
	cin >> n;
	vi v(n);
	bool seen = 0;
	for(int i = 0; i < n; i++){
		cin >> v[i];
		if(perf[v[i]]){
			cout << 1 << endl;
			return 0;
		}
		v[i] = shrt[v[i]];
		seencnt[v[i]]++;
		if(seencnt[v[i]] > 1)
			seen = 1;
		if(pfac[v[i]].size() == 2){
			adj[pfac[v[i]][0]].pb(pfac[v[i]][1]);
			adj[pfac[v[i]][1]].pb(pfac[v[i]][0]);
		}
		else
			adj[1].pb(v[i]), adj[v[i]].pb(1);
	}
	if(seen){
		cout << 2 << endl;
		return 0;
	}
	int ans = 1e9;
	vi vis(N), dep(N), par(N);
	int cntr = 0;
	for(int i = 1; i <= 1000; i++){
		if(done[i])
			continue;
		queue<int> q;
		q.push(i);
		vis[i] = ++cntr;
		dep[i] = 0;
		par[i] = -1;
		while(!q.empty()){
			auto a = q.front();
			q.pop();
			for(auto j : adj[a]){
				if(vis[j] < cntr)
					vis[j] = cntr, q.push(j), dep[j] = 1 + dep[a], par[j] = a;
				else if(par[a] != j)
					ans = min(ans, dep[a] + dep[j] + 1);
			}
		}
	}
	if(ans == 1e9)
		ans = -1;
	cout << ans << endl;
}