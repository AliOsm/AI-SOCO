#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<ll> point;
#define F first
#define S second



int main()
{
	#ifdef DGC
		//freopen("a.txt", "r", stdin);
		//freopen("b.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(0), cin.tie(0);

	int q;
	cin >> q;
	while (q--)
	{
		int n;
		cin >> n;
		map<int, pair<int, int>> mp;
		for (int i = 0, x, z; i < n; ++i)
		{
			cin >> x >> z;
			auto &it = mp[x];
			++it.F;
			it.S += z;
		}

		vector<pair<int, int>> a;
		for (auto i : mp)
			a.push_back(i.S);

		sort(a.begin(), a.end());
		//reverse(a.begin(), a.end());

		int pt = a.size()-1, mx = 0, o = 0;
		multiset<int> s;
		for (int i = n; i > 0; --i)
		{
			while (pt >= 0 && a[pt].F >= i)
				s.insert(a[pt].S), --pt;
			if (!s.empty())
			{
				mx += i;
				o += min(i, *s.rbegin());
				s.erase(s.find(*s.rbegin()));
			}
		}

		cout << mx << " " << o << "\n";
	}

	return 0;
}
