# include <bits/stdc++.h>
using namespace std;
inline void solve(){
	int n, ans = 1e9;
	cin >> n;
	vector < int > p(n + 1, 0), c(n + 1, 0);
	vector < bool > f(n + 1, 0);
	for(int i = 1; i <= n; i++){
		cin >> p[i];
	}
	for(int i = 1; i <= n; i++){
		cin >> c[i];
	}
	for(int i = 1; i <= n; i++){
		if(f[i])continue;
		int j = i;
		vector < int > g;
		while(!f[j]){
			g.push_back(j);
			f[j] = 1;
			j = p[j];
		}
		for(int d = 1; d <= (int)g.size(); d++){
			if((int)g.size() % d == 0){
				bool good = false;
				for(int it = 0; it < d; it++){
					bool ok = true;
					for(int k = it + d; k < (int)g.size(); k += d){
						if(c[g[k]] != c[g[it]]){
							ok = false;
							break;
						}
					}
					if(ok == true){
						good = true;
						break;
					}
				}
				if(good){
					ans = min(ans, d);
					break;
				}
			}
		}
	}
	cout << ans << '\n';
}
int main(){
	ios::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);
	int t = 1;
	cin >> t;
	while(t--){
		solve();
	}
}
