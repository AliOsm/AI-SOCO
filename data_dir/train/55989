//g++ -std=c++14 -g -O2 -o ./a ./A.cpp
#include <bits/stdc++.h>
using namespace std;
#define ff first
#define ss second
#define nl '\n'
typedef long long ll;
//////////////////////////////////////////////////////////////////////

const int N = 300100;

int n,m,l[N],r[N],x[N];
const int INF = (int)1e9;

struct segtree{
  int a[N];

  struct node{
    int up;
  }st[N<<2];

  void push(int x,int lx,int rx){
    if(st[x].up<INF){
      int v = st[x].up;
      if(lx==rx)return;
      st[x].up = INF;
      st[x<<1].up = min(st[x<<1].up,v);
      st[x<<1|1].up = min(st[x<<1|1].up,v);
    }
  }

  void bld(int x=1,int lx=1,int rx=n){
    st[x]={INF};
    if(lx==rx){
      return;
    }
    int mid=lx+rx>>1;
    bld(x<<1,lx,mid);bld(x<<1|1,mid+1,rx);
    //
  }

  void upd(const int&z,const int &u,const int &v,int x=1,int lx=1,int rx=n){
    push(x,lx,rx);
    if(v<lx or u>rx)return;//
    if(u<=lx and rx<=v){
      st[x].up = min(st[x].up,z);
      push(x,lx,rx);
      return;
    }
    int mid=lx+rx>>1;
    upd(z,u,v,x<<1,lx,mid);upd(z,u,v,x<<1|1,mid+1,rx);
    //
  }

  int qry(int pos){
    int x=1,lx=1,rx=n;
    for(;rx>lx;){
      push(x,lx,rx);
      int mid = lx+rx>>1;
      x<<=1;
      if(pos>mid){
	x|=1;
	lx=mid+1;
      }else{
	rx=mid;
      }
    }
    return st[x].up;    
  }
  
} T;

int main(){
  ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
  
  cin>>n>>m;
  T.bld();

  for(int i=1;i<=m;i++){
    cin>>l[i]>>r[i]>>x[i];
    if(x[i]>l[i])T.upd(i,l[i],x[i]-1);
    if(x[i]<r[i])T.upd(i,x[i]+1,r[i]);
  }
  x[0]=0;
  T.upd(0,x[m],x[m]);
  //cerr<<"~~"<<T.qry(x[n])<<nl;
  
  for(int i=1;i<=n;i++)
    cout<<x[T.qry(i)]<<' ';cout<<nl;
  
  return 0;
}
