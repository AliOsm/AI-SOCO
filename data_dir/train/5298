//g++ -std=c++14 -g -O2 -o ./a ./A.cpp
#include <bits/stdc++.h>
using namespace std;
#define ff first
#define ss second
#define nl '\n'
typedef long long ll;
//////////////////////////////////////////////////////////////////////

const int N = 8010;
char s[N];
int n,dp[N], ft[N][N];

int len(int x){
  int ret = 0;
  for(;x>0;x/=10,ret++);
  return ret;
}

int main(){
  ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
  
  cin>>1+s;
  n=strlen(1+s);

  for(int lx=1;lx<=n;lx++){
    int piv = lx-1 , len = n-piv;
    auto&pi = ft[lx];
    pi[0]=pi[1]=0;
    for(int i=2,j=0;i<=len;i++){
      for(;j>0 and s[piv+i]!=s[piv+j+1];j=pi[j]);
      if(s[piv+j+1] == s[piv+i])j++;
      pi[i]=j;
    }
    //cerr<<piv+1<<": ";for(int i=1;i<=len;i++)cerr<<pi[i]<<" \n"[i==len];
  }

  fill(dp,dp+N,1e9);
  dp[n+1]=0;
  for(int i=n;i>=1;i--){
    auto&pi = ft[i];
    for(int j=i;j<=n;j++){
      int len = j-i+1,sol;
      int p = len - pi[len];
      if(p<len and len%p==0){
	int alpha = len/p;
	sol = p + ::len(alpha);
	//cerr << p << "," << alpha << endl;
	dp[i] = min(dp[i],dp[j+1] + sol);
      }else{
	dp[i] = min(dp[i],dp[j+1] + 1+len);
      }
    }
  }
  cout << dp[1] << nl;
  
  return 0;
}
