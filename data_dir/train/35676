#include<bits/stdc++.h>
using namespace std;
//#define int                 long long
#define ll                  long long
#define ld                  long double
#define rep(i,n)            for(int i=0;i<n;i++)
#define hell                1000000007
#define inf                 (ll)1e15
#define vi                  vector<int>
#define vii                 vector< vi >
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define pii                 pair<int,int>
#define all(c)              c.begin(),c.end()
#define sz(c)               (int)c.size()
#define hash1               105727LL
#define hash2               hell
#define eps                 1e-10
#define pi                  3.141592653589793238462643383279502884197
ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll power(ll x, ll y,ll p)
{
	ll res=1;
	x=x%p;
	while(y>0)
	{
		if(y&1)
			res=((res%p)*(x%p))%p;
		y=y>>1;
		x=((x%p)*(x%p))%p;
	}
	return res;
}
ll raichu(ll x,ll y)
{
	ll res=1;
	while(y>0)
	{
		if(y&1)
			res=((res)*(x));
		y=y>>1;
		x=((x)*(x));
	}
	return res;
}
bool isprime(ll n)
{
	if(n<2) return false;
	else if(n==2) return true;
	else if(n%2==0) return false;
	else
	{
		ll z=sqrt(n);
		rep(i,z-1) if(n%(i+2)==0) return false;
		return true;
	}
}
bool dfs(int c,vii &g,vi &ans,int z)
{
	ans[c]=z;
	bool res=true;
	for(auto i:g[c])
	{
		if(ans[i]==-1) res&=dfs(i,g,ans,z^1);
		else if(ans[i]==z) return false;
		if(!res) return false;
	}
	return res;
}
int32_t main()
{
	//freopen("B-large.in","r",stdin);
	//freopen("out4.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int tests=1,Tests;
	//cin>>test;
	Tests=tests;
	while(tests--)
	{
		int n,m;
		cin>>n>>m;
		vector<pii> e(m);
		rep(i,m) cin>>e[i].fi>>e[i].se;
		rep(i,m) if(e[i].fi>e[i].se) swap(e[i].fi,e[i].se);
		vii g(m);
		rep(i,m)
		{
			for(int j=i+1;j<m;j++)
			{
				if(e[j].fi>=e[i].se || e[j].se<=e[i].fi || (e[j].fi>=e[i].fi && e[j].se<=e[i].se) || (e[j].fi==e[i].fi) || (e[j].se==e[i].se) || (e[i].fi>=e[j].fi && e[i].se<=e[j].se) || e[i].fi>=e[j].se || e[i].se<=e[j].fi) continue;
				else
				{
					//cout<<i<<" "<<j<<endl;
					g[i].pb(j),g[j].pb(i);
				}
			}
		}
		vi ans(m,-1);
		bool res=true;
		rep(i,m)
		{
			if(ans[i]==-1)
			{
				res&=dfs(i,g,ans,0);
				if(!res)
				{
					cout<<"Impossible";
					return 0;
				}
			}
		}
		rep(i,m)
		{
			if(ans[i]==0) cout<<'i';
			else cout<<'o';
		}
	}
	return 0;
}