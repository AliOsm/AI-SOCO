#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<cassert>
#include<cassert>
#include<unordered_map>
#include<unordered_set>
#include<functional>
#include<queue>
#include<stack>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<sstream>
#include<iomanip>
#include<cstdio>
#include<cstdlib>
#include<numeric>
#include<random>
#include<chrono>
#include<bitset>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define pb push_back
#define xx first
#define yy second
#define sz(x) (int)(x).size()
#define gc getchar
#define IO ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define mp make_pair

#ifndef ONLINE_JUDGE
#  define LOG(x) (cerr << #x << " = " << (x) << endl)
#else
#  define LOG(x) ((void)0)
#endif

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const double PI=3.1415926535897932384626433832795;
const ll INF = 1LL<<62;
const ll MINF = -1LL<<62;

template<typename T> T getint() {
	T val=0;
	char c;
	
	bool neg=false;
	while((c=gc()) && !(c>='0' && c<='9')) {
		neg|=c=='-';
	}

	do {
		val=(val*10)+c-'0';
	} while((c=gc()) && (c>='0' && c<='9'));

	return val*(neg?-1:1);
}

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); uniform_int_distribution<int>(0, n-1)(rng)


vector<ll> row[100001];
vector<ll> col[100001];

ll n,m,k;

ll bejart(ll dir) {
	ll bej=1;
	
	ll L=1, R=n, l=1, r=m;
	ll x=1, y=1;
	
	while(1) {
		//cerr<<x<<" "<<y<<"\n";
		if(dir==1) {
			L++;
			
			int mx=r;
			auto it=lower_bound(all(row[x]), y);
			if(it!=row[x].end()) {
				if(mx>=*it) mx=*it-1;
			}
			
			if(mx-y<=0) break ;
			bej+=mx-y;
			y=mx;
			r=y;
		}else if(dir==2) {
			r--;
			
			int mx=R;
			auto it=lower_bound(all(col[y]), x);
			if(it!=col[y].end()) {
				if(mx>=*it) mx=*it-1;
			}
			
			if(mx-x<=0) break ;
			bej+=mx-x;
			x=mx;
			R=x;
		}else if(dir==3) {
			R--;
			
			int mn=l;
			auto it=lower_bound(all(row[x]), y);
			if(it!=row[x].begin()) {
				it--;
				if(it!=row[x].end() && mn<=*it) mn=*it+1;
			}
			
			if(y-mn<=0) break ;
			bej+=y-mn;
			y=mn;
			l=y;
		}else {
			l++;
			
			int mn=L;
			auto it=lower_bound(all(col[y]), x);
			if(it!=col[y].begin()) {
				it--;
				if(it!=col[y].end() && mn<=*it) mn=*it+1;
			}
			
			if(x-mn<=0) break ;
			bej+=x-mn;
			x=mn;
			L=x;
		}
		
		dir=(dir%4)+1;
	}
	//cerr<<bej<<"\n";
	return bej;
}

int main() {
	IO;
	cin>>n>>m>>k;
	
	for(int i=0;i<k;++i) {
		 ll x,y;
		 cin>>x>>y;
		 col[y].push_back(x);
		 row[x].push_back(y);
	}
	
	for(auto& i:row) sort(all(i));
	for(auto& i:col) sort(all(i));
	
	ll van=n*m-k;
	//cerr<<van<<"\n";
	cout<<((bejart(1)==van || bejart(2)==van)?"Yes":"No")<<"\n";
	return 0;
}
