#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <map>
#include <list>
#include <set>
#include <algorithm>
#include <cmath>
#include <queue>
#include <iterator>
#include <functional>
#include <numeric>
#include <cmath>

using namespace std;

#define ll long long
#define f0(i,n)for(i=0;i<n;i++)
#define f1(i,n)for(i=1;i<=n;i++)
#define fc(i,c,n)for(i=c;i<=n;i++)
#define f0r(i,n)for(i=n-1;i>=0;i--)
#define f1r(i,n)for(i=n;i>0;i--)
#define fcr(i,c,n)for(i=c;i>=0;i--)
#define IO ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
#define co(a) cout<<a<<endl;
#define coc(a) cout<<a<<" ";

typedef list<ll> LST;
typedef vector<ll> VEC;
typedef map<ll, ll> MAP;

ll i, j, q;
ll n, m, p, k, t, s, h, f;
ll a, b, c, d;
ll x, y, z, l, r;
ll one = 1, zero = 0, ans = 0;
ll mod = 1000000007;
ll INF = 1000000000000000000;
ll a1, a2, a3, a4, a5, a6, a7;
string st1, st2, st3;
char ch1, ch2, ch3;

ll nn = 61;

VEC vc(65);

ll getlvl(ll xx) {
	ll aa = 0;
	while (xx) {
		xx >>= one;
		aa++;
	}
	return aa-1;
}

void shiftval(ll xx, ll kk) {
	ll aa = getlvl(xx);
	ll lng = one << aa;
	if (kk < 0)
		kk += (1+((-1*kk)/lng))*lng;
	vc[aa] += kk;
	vc[aa] %= lng;
}

void shiftnode(ll xx, ll kk) {
	ll aa = getlvl(xx),ii;
	ll lng = one << aa;
	if (kk < 0)
		kk += (1 + ((-1 * kk) / lng))*lng;
	kk %= lng;
	f0(ii,nn-aa+1) 
		shiftval(xx<<ii,kk<<ii);
}

void printpath(ll xx, ll lvl) {
	if (!lvl) {
		cout << 1 << endl;
		return;
	}
	ll lng = one << lvl;
	cout << xx << " ";
	xx += vc[lvl];
	if (xx >= lng<<1)
		xx -= lng;
	
	xx >>= 1;
	xx -= vc[lvl - 1];
	if (xx < (lng >> 1))
		xx += (lng >> 1);

	printpath(xx,lvl-1);
}

int main() {
	IO;
	ifstream fin("Text.txt");
	
	cin >> q;
	f0(i, q) {
		cin >> t;
		if (t == 1) {
			cin >> x >> k;
			shiftval(x, k);
		}
		else if (t == 2) {
			cin >> x >> k;
			shiftnode(x, k);
		}
		else {
			cin >> x;
			printpath(x, getlvl(x));
		}
	}
	return 0;
}