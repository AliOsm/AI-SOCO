#include <iostream>
#include <fstream>
#include <cstring>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <iomanip>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <iterator>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define bit __builtin_popcount
#define all(x) x.begin(),x.end()
#define show(x) cout<<(#x)<<" is "<<(x)<<endl

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;

const ll INF=1e18+123;
const ld EPS=1e-9;
const int inf=1e9+123;
const int MOD=1e8;
const int N=3e5+123;
const int dx[]={0,0,1,-1};
const int dy[]={1,-1,0,0};

ll a[N],b[N];

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n,m;
    cin>>n;
    for(int i=1;i<=n;i++){cin>>a[i];a[i]+=a[i-1];}
    cin>>m;
    for(int i=1;i<=m;i++){cin>>b[i];b[i]+=b[i-1];}
    if(a[n]!=b[m]){
        cout<<-1;
        return 0;
    }
    int la=0,lb=0;
    int ans=0;
    do{
        ll sa=a[la],sb=b[lb];
        la++;
        lb++;
        while(la<=n || lb<=m){
            if(a[la]-sa==b[lb]-sb){
                ans++;
                break;
            }
            if(la==n){
                lb++;
                continue;
            }
            if(lb==m){
                la++;
                continue;
            }
            if(a[la]-sa>b[lb]-sb){
                lb++;
            }
            else{
                la++;
            }
        }
    }while(la<=n && lb<=m);
    cout<<ans;
    return 0;
}
