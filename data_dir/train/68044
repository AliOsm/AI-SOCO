#include<bits/stdc++.h>
using namespace std;


const int maxVal = 5e5;
int cnt[maxVal + 1];
long long ans = 0;
vector<int> dividers[maxVal + 1];
vector<char> isPrime(maxVal + 1, true);


void insert(int n) {
    for (int mask = 0; mask < 1<<dividers[n].size(); mask++) {
        int val = 1;

        for (int i = 0, j = mask; i < dividers[n].size(); i++, j /= 2)
            if (j & 1) {
                val *= dividers[n][i];
            }

        if (__builtin_popcount(mask) & 1) {
            ans -= cnt[val];
        } else {
            ans += cnt[val];
        }

        cnt[val]++;
    }
}


void remove(int n) {
    for (int mask = 0; mask < 1<<dividers[n].size(); mask++) {
        int val = 1;

        for (int i = 0, j = mask; i < dividers[n].size(); i++, j /= 2)
            if (j & 1) {
                val *= dividers[n][i];
            }

        cnt[val]--;

        if (__builtin_popcount(mask) & 1) {
            ans += cnt[val];
        } else {
            ans -= cnt[val];
        }
    }
}


main() {
#ifndef ONLINE_JUDGE
    freopen("1.txt", "r", stdin);
#endif // ONLINE_JUDGE

	for (int i = 1; i <= maxVal; i++) {
		//dividers[i].push_back(1);
	}

	for (int i = 2; i <= maxVal; i++)
		if (isPrime[i])
			for (int j = i; j <= maxVal; j += i) {
				isPrime[j] = false;
				dividers[j].push_back(i);
			}

    ///*******************************************

    int n, m;
    scanf("%d%d", &n, &m);
    vector<int> a(n);

    for (int &i : a) {
        scanf("%d", &i);
    }

    while (m--) {
        static vector<char> used(n);
        int x;
        scanf("%d", &x);
        x--;

        if (used[x]) {
            remove(a[x]);
        } else {
            insert(a[x]);
        }

        used[x] ^= 1;
        printf("%lld\n", ans);
        //printf("%lld %lld\n", (long long) cnt[1] * cnt[1] / 2 - ans, ans);
    }

}
