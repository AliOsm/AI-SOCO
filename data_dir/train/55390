/* 285B */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define pb 				push_back
#define mp 				make_pair
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 1e5+5;
bool visit[maxn];
int a[maxn][2];
int b[maxn];

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif

	int n;
	int s, t;
	int i, j, k;
	int p, q;

	scanf("%d %d %d", &n, &s, &t);
	for (i=1; i<=n; ++i)
		scanf("%d", &b[i]);
	memset(visit, false, sizeof(visit));
	//visit[s] = true;
	for (i=1; i<=n; ++i)
		a[i][0] = i;

	for (p=1,q=0,i=0; !visit[a[s][q]]; ++i,q=p,p=!p) {
		visit[a[s][q]] = true;
		if (visit[t])
			break;
		a[s][p] = b[a[s][q]];
		// for (j=1; j<=n; ++j)
			// a[j][p] = b[a[j][q]];
	}
	if (visit[t])
		printf("%d\n", i);
	else
		puts("-1");

	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif

	return 0;
}
