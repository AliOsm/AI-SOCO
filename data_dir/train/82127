#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <cmath>
#include <cstdio>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <deque>
#include <assert.h>
#include <ctime>
#include <bitset>
#include <numeric>
#include <complex>
using namespace std;

#define double long double
#define FOREACH(i, c) for(__typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)
#define FOR(i, a, n) for (register int i = (a); i < (int)(n); ++i)
#define FORE(i, a, n) for (i = (a); i < (int)(n); ++i)
#define Size(n) ((int)(n).size())
#define all(n) (n).begin(), (n).end()
#define ll long long
#define pb push_back
#define error(x) cout << #x << " = " << x << endl;
#define ull unsigned long long
#define pii pair<int, int>
#define pll pair<ll, ll>
#define pdd pair<double, double>
#define point complex<double>
#define X real()
#define Y imag()
//#define X first
//#define Y second
#define EPS 1e-20
#define endl "\n"
#define pdd pair<double, double>
bool gt(double a, double b) { return a > b+EPS; }

int main() {
	ios::sync_with_stdio(false);
	ll res = -1;
	string s;
	cin >> s;
	FOR(x, 1, Size(s)) FOR(y, x+1, Size(s)) if ((x == 1 || s[0] != '0') && (x+1 == y || s[x] != '0') && (y+1 == Size(s) || s[y] != '0') && y-x < 10 && x < 10 && Size(s)-y < 10) {
		ll a = 0, b = 0, c = 0;
		FOR(i, 0, x) a = a*10 + s[i]-'0';
		FOR(i, x, y) b = b*10 + s[i]-'0';
		FOR(i, y, Size(s)) c = c*10 + s[i]-'0';
		if (a > 1000000 || b > 1000000 || c > 1000000) continue;
		res = max(res, a+b+c);
	}
	cout << res << endl;
	return 0;
}

