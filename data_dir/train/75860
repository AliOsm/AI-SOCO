#include<bits/stdc++.h>
#define x first
#define y second
using namespace std;
const int MXN = 2e5 + 10;
long long n, t, r, l, mid, p;
pair < long long , pair < long long , long long > > A[MXN];
priority_queue < long long > P;
priority_queue < pair < long long , long long > > Q;
int Solve(long long c)
{
    while (P.size() > 0)
        P.pop();
    long long val = 0, tt = 0;
    for (int i = 1; i <= n; i++)
    {
        if (A[i].x < c)
            continue;
        P.push(-A[i].y.x);
    }
    while (P.size() > 0)
    {
        long long rr = P.top();
        P.pop();
        if (val - rr > t)
            break;
        val -= rr;
        tt ++;
    }
    if (tt >= c)
        return (1);
    return (0);
}
int main()
{
    scanf("%I64d%I64d", &n, &t);
    for (int i = 1; i <= n; i++)
    {
        scanf("%I64d%I64d", &A[i].x, &A[i].y.x);
        A[i].y.y = i;
    }
    sort(A + 1, A + n + 1);
    l = 0;
    r = n + 1;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        if (Solve(mid) == 1)
            l = mid;
        else
            r = mid;
    }
    printf("%I64d\n%I64d\n", l, l);
    for (int i = 1; i <= n; i++)
    {
        if (A[i].x < l)
            continue;
        Q.push({-A[i].y.x, A[i].y.y});
    }
    long long val = 0, tt = 0;
    while (Q.size() > 0)
    {
        auto rr = Q.top();
        Q.pop();
        if (val - rr.x > t)
            break;
        val -= rr.x;
        tt ++;
        if (tt > l)
            break;
        printf("%I64d ", rr.y);
    }
    return (0);
}
