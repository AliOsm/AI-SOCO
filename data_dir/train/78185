#include <bits/stdc++.h>
using namespace std;
#define pb  push_back
#define ll  long long
#define vi  vector<int>
#define vvi vector<vi >
#define all(x) x.begin(), x.end()

ll res;

void upd(ll x, ll y, ll z) {
    ll cur = (x - y) * (x - y) + (x - z) * (x - z) + (y - z) * (y - z);
    if (res > cur)
        res = cur;
}

ll f() {
    res = 5e18;
    set<ll> s[3];
    int n[3];
    for (int e = 0; e < 3; ++e)
        cin >> n[e];
    for (int e = 0; e < 3; ++e) {
        for (int i = 0; i < n[e]; ++i) {
            ll x; cin >> x;
            s[e].insert(x);
        }
    }
    for (int e = 0; e < 3; ++e) {
        for (auto x : s[e]) {
            int e2 = (e + 1) % 3;
            int e3 = (e + 2) % 3;
            auto it2 = s[e2].lower_bound(x);
            auto it3 = s[e3].lower_bound(x);
            if (it2 == s[e2].end()) continue;
            if (it3 == s[e3].end()) continue;
            ll y = *it2;
            ll z = *it3;
            if (y >= z) {
                auto it = s[e3].lower_bound((x + y) / 2);
                if (it != s[e3].end())
                    upd(x, y, *it);
                if (it != s[e3].begin())
                    upd(x, y, *(--it));
            }
            if (z >= y) {
                auto it = s[e2].lower_bound((x + z) / 2);
                if (it != s[e2].end())
                    upd(x, z, *it);
                if (it != s[e2].begin())
                    upd(x, z, *(--it));
            }
        }
    }
    return res;
}

int main() {
    ios_base::sync_with_stdio(false); cin.tie(0);
    int t; cin >> t;
    while (t--)
        cout << f() << "\n";

    return 0;
}