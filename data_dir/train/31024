#include <bits/stdc++.h>

using namespace std;

#define inf (ll)1e15
#define ll long long
#define all(x) x.begin(), x.end()
#define x first
#define y second

int n;
int ls[10];
int a[10][10];
int nums[1111];

void recurse(int idx, int x){

	if(idx == n)
		return;

	int cube = ls[idx];

	int tmp = x;
	for(int i = 0; i < 6; ++i){
		tmp = x * 10 + a[cube][i];
		nums[tmp] = 1;
		recurse(idx + 1, tmp);
	}

}

int main(){

    cin.tie(0);
    cin.sync_with_stdio(0);

    #ifdef Cyborg101
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif

    int v1[] = {1, 3, 5, 7, 9, 11, 24, 22};
    int v2[] = {2, 4, 6, 8, 10, 12, 23, 21};

    int h1[] = {13, 14, 5, 6, 17, 18, 21, 22};
    int h2[] = {15, 16, 7, 8, 19, 20, 23, 24};

    int p1[] = {16, 14, 3, 4, 17, 19, 10, 9};
    int p2[] = {15, 13, 1, 2, 18, 20, 12, 11};

    int color[25];
    for(int i = 1; i <= 24; ++i){
    	cin >> color[i];
    }

    auto chk = [&](int a, int b, int c, int d){
    	return color[a] == color[b] && color[c] == color[d] && color[a] == color[c];
    };

    auto match = [&](auto x, auto y, int shift){

    	bool ha = true;
    	for(int i = 0; i < 8; i += 2){
    		ha &= chk(x[(i + shift + 8) % 8], x[(i + 1 + shift + 8) % 8], y[i], y[i + 1]);
    	}
    	return ha;
    };

    bool ok = false;

    if(chk(13, 14, 15, 16) && chk(17, 18, 19, 20)){ //horizontal clear
    	// ok |= match(v1, v2, 0);

    	for(int i = 1; i <= 1; ++i){
	    	ok |= match(v1, v2, i * 2);
			ok |= match(v1, v2, i * -2);
			ok |= match(v2, v1, i * 2);
			ok |= match(v2, v1, i * -2);
		}	
    }

    if(chk(1, 2, 3, 4) && chk(9, 10, 11, 12)){ //vertical clear
		// ok |= match(h1, h2, 0);

		for(int i = 1; i <= 1; ++i){ //only 90 dgs
	    	ok |= match(h1, h2, 2 * i);
			ok |= match(h1, h2, -2 * i);
			ok |= match(h2, h1, 2 * i);
			ok |= match(h2, h1, -2 * i);
		}
    }

    if(chk(5, 6, 7, 8) && chk(21, 22, 23, 24)){ //vertical clear
		// ok |= match(p1, p2, 0);

		for(int i = 1; i <= 1; ++i){
	    	ok |= match(p1, p2, 2 * i);
			ok |= match(p1, p2, -2 * i);
			ok |= match(p2, p1, 2 * i);
			ok |= match(p2, p1, -2 * i);
		}
    }

    puts(ok ? "YES" : "NO");

    return 0;
}