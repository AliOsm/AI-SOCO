//Solution by Tima
#include <bits/stdc++.h>
 
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
#define all(x) x.begin(), x.end()
 
using namespace std;    
const int N = int(3e5) + 12, mod = int(1e9)  + 7;

int was[N];

ll n;

vector <int> r;

void calc(){
	int cur = 0;
    for(int i = 1; i <= 200; i++){
    	bool f = 0;
    	for(int a = 1; a <= 2048; a++) if(!was[a]){
    		if(f) break;
    		for(int b = a + 1; b <= 2048; b++) if(!was[b] && !was[a^b]){
    			r.pb(a);
    			r.pb(b);
    			r.pb((a^b));
    			f = 1;
    			was[a] = was[b] = was[a^b] = 1;

    			break;
    		}
    	}
    }
}

int dif[4] = {0,2, 3, 1};

ll val[5] = {0,2, 8, 10, 11};

ll get(ll k){
	if(k < 5) return val[k];
	if(k % 4 == 2) return get((k+2)/4) * 4; 
	int it = 0;
	while(k % 4 != 2){
		it++;
		k--;
	}
	return get(k) + dif[it];
}

int g[7] = {0, 1,2,3,4,8,12};

ll my(ll n){
	if(n <= 3) return g[n];
	ll k = (n + 2)/3;
	ll f = k * 3;
	ll pw = 1;
	for(int i = 1; i <= 60; i++){
		pw = pw * 4;
		if(pw > f){
			pw = pw / 4;
			break;	
		}
	}
	ll a = pw + k - 1 - (pw - 1) / 3;
	ll b = get(k);
	
	if(n % 3 == 1){
		return a;
	}
	if(n % 3 == 2){
		return b;
	}
	return (a^b);
}
         
void solve(){
	scanf("%lld", &n);
	printf("%lld\n", my(n));
}

int main () {
	int T = 1;
	scanf("%d", &T);
	while(T--){
		solve();
	}

return 0;
}