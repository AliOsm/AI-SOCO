#define _CRT_SECURE_NO_DEPRECATE
#define _USE_MATH_DEFINES
#include <iostream>
#include <cmath>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <memory.h>
#include <set>
#include <ctime>
#include <map>
#include <cstring>
#include <iterator>
 
using namespace std;
 
#define ll long long
#define ld long double
#define pb push_back
#define pii pair<int, int>
#define pll pair<long long, long long>
#define pdd pair<double, double>
#define pldld pair<ld, ld>
#define mp make_pair
#define ull unsigned long long
#define pss pair<string, string>
#pragma comment(linker, "/STACK:64000000")
 
const int infi = 1e9 + 7;
const ll infl = 1e18;
const long double eps = 1e-7;
const long double eps1 = 1e-10;
const int mod = (1e9 + 7);
const ll mod1 = 1e9 + 7;
const ll mod2 = 1e9 + 9;
const ll p1 = 29;
const ll p2 = 31;
const int ver1 = (62 * 62);

int check(pii a, pii b, pii c) {
    if (a.first == b.first) {
        if (c.first != a.first) {
            return 0;
        }
        if (c.second >= min(a.second, b.second) && c.second <= max(a.second, b.second)) {
            return 1;
        }
        return 0;
    }
    else {
        if (c.second != a.second) {
            return 0;
        }
        if (c.first >= min(a.first, b.first) && c.first <= max(a.first, b.first)) {
            return 1;
        }
        return 0;
    }
}

int main() {
   // freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
    //freopen("vase.in", "r", stdin); freopen("vase.out", "w", stdout);
    int x, y;
    cin >> x >> y;
    int ans = 0;
    pii pos = mp(0, 0);
    for (int i = 0; ; ++i) {
        if (pos.first == x && pos.second == y) {
            cout << ans;
            return 0;
        }
        int d = i / 2 + 1;
        pii next;
        if (i % 4 == 0) {
            next = mp(pos.first + d, pos.second);
        }
        if (i % 4 == 1) {
            next = mp(pos.first, pos.second + d);
        }
        if (i % 4 == 2) {
            next = mp(pos.first - d, pos.second);
        }
        if (i % 4 == 3) {
            next = mp(pos.first, pos.second - d);
        }
        if (check(pos, next, mp(x, y))) {
            cout << i;
            return 0;
        }
        pos = next;
    }


    return 0;
}