#include <bits/stdc++.h>

using namespace std;
typedef long long ll;

int main() {
  
  ll n;
  cin >> n;
  if (n <= 60) {
    vector<ll> ans;
    for (ll i = 1; i <= n; i++) {
      cout << "? " << i << endl;
      ll r;
      cin >> r;
      ans.push_back(r);
    }
    sort(ans.begin(), ans.end());
    cout << "! " << ans[0] << " " << ans[1]-ans[0] << endl;
    return 0;
  }
  
  
  mt19937 gen((uint64_t) new char); 
  uniform_int_distribution<> dis(1, n);
  ll nmin = -1, nmax = 1e9;
  ll cnt = 0;
  while (nmax-nmin > 1) {
    ll mid = (nmax+nmin)/2;
    cout << "> " << mid << endl;
    ll r;
    cin >> r;
    cnt++;
    if (r == 1) nmin = mid;
    else nmax = mid;
  }
  vector<ll> ans;
  ll tot = 0;
  for (ll i = cnt; i < 60; i++) {
    cout << "? " << dis(gen) << endl;
    ll r;
    cin >> r;
    ans.push_back(r);
    tot += r;
  }
  ans.push_back(nmax);
  sort(ans.begin(), ans.end());
  ll m = ans.size();
  ll d = 0;
  for (int i = 0; i < m-1; i++)
    d = __gcd(d, ans[i+1]-ans[i]);
  cout << "! " << nmax-(n-1)*d << " " << d << endl;
  return 0;
}

