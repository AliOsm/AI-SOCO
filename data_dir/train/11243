#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
#define rep(i,a,b)  for(ll i=a;i<b;i++)
#define nl cout<<endl

#define pii pair<ll,ll>
#define vi  vector<ll>
#define vii vector<pii>
#define mi  map<ll,ll>
#define all(a)  (a).begin(),(a).end()

#define pb push_back
#define make make_pair
#define ff first
#define ss second
#define hell 1000000007

#define test4(x,y,z,a) cout<<"x is "<<x<<"		y is "<<y<<"		z is "<<z<<"		a is "<<a<<endl;
#define test3(x,y,z) cout<<"x is "<<x<<"		y is "<<y<<"		z is "<<z<<endl;
#define test2(x,y) cout<<"x is "<<x<<"		y is "<<y<<endl;
#define test1(x) cout<<"x is "<<x<<endl;
#define N 300009
ll n;vii v[N];
//bool function
ll power(ll a,ll b,ll m)
{
	ll ans=1;
	while(b)
	{
		if(b&1)
			ans=(ans*a)%m;
		b/=2;
		a=(a*a)%m;
	}
	return ans;
}

ll distance(ll start,ll end)
{
	if(end>=start)
	return end-start;
	else
	return n-start+end;
}
int main()
{	
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
        ll m;cin>>n>>m;
	rep(i,0,m)
	{
		ll a,b;cin>>a>>b;
		//a--;b--;
		v[a].pb(make_pair(distance(a,b),b));
	}
	rep(i,1,n+1)
	sort(all(v[i]));
	
	/*rep(i,1,n+1)
	{
	    rep(j,0,v[i].size())
	    test3(i,v[i][j].ff,v[i][j].ss);
	}*/
	
	ll ans[N];
	rep(i,1,n+1)
	{
	    ans[i]=0;
		if(v[i].size()==0)
		continue;
		if(v[i].size()==1)
		{
			ans[i]=v[i][0].ff;
			continue;
		}
		for(ll j=v[i].size()-1;j>=0;j--)
		{
			ll u=v[i][j].ss;
			ans[i]+=v[i][j].ff;
		//	test2("yayayay",v[i][j].ff);
			if(j>=1)
			{
			    ans[i]+=distance(u,i);
		//	    test1(distance(u,i));
			}
		}
		//cout<<"value is "<<ans[i]<<endl;
	}
	rep(i,1,n+1)
	{	
		ll c=0;
		rep(j,1,n+1)
		{
			if(ans[j]==0)
			continue;
			c=max(c,distance(i,j)+ans[j]);
		}
		cout<<c<<" ";
	}nl;
}