#include <bits/stdc++.h>
using namespace std;

#define si(n) scanf("%d",&n)
#define ll long long
#define MAX 100005
#define f first
#define s second

const int mod=(int) 1e9+7;

int bigmod(ll a,ll p)
{
    long long ret = 1;
    while(p) {
        if(p & 1) ret = ret * a % mod;
        a = a * a % mod;
        p >>= 1;
    }
    return ret;
}

int mod_add(ll a,ll b) {
  a+=b;
  if(a>=mod) a-=mod;
  return a;
}

int mod_sub(ll a,ll b) {
  a-=b;
  if (a<0) a+=mod;
  return a;
}

int mod_mul(ll a, ll b) {
    a%=mod;b%=mod;
  return (a*b)%mod;
}

int mod_div(ll a,ll b)
{
    return mod_mul(a,bigmod(b,mod-2));
}


int mod_power(int a,int b) {
  int res=1;
  while (b>0) {
    if (b&1) {
      res=mod_mul(res,a);
    }
    a=mod_mul(a,a);
    b>>=1;
  }
  return res;
}

vector<int>gr[MAX],cnt;
int m;
int dp[MAX];
int invm;

int solve(int x)
{
    if(x==1)return 0;
    int &ret=dp[x];
    if(ret != -1)return ret;

    int i,j;
    cnt.clear();
    for(auto d : gr[x])cnt.push_back(m/d);

    for(i=gr[x].size()-1;i>=0;i--){
        for(j=0;j<i;j++){
            if(gr[x][i]%gr[x][j]==0){
                cnt[j]-=cnt[i];
            }
        }
    }
   // cout<<mod_div(1,2)<<endl;
    ret=0;
    for(i=0;i<(gr[x].size()-1);i++){
        int d=gr[x][i];
        int prob=mod_div(cnt[i],m);

        int now=mod_add(prob,mod_mul(prob,solve(d)));
        ret=mod_add(ret,now);
        //
        //cout<<i<<' '<<ret<<endl;
    }

   // cout<<ret<<endl;
    int _cnt=m/x;
    //cout<<_cnt<<endl;
    ret=mod_mul(ret,m);
    ret=mod_add(ret,_cnt);
    ret=mod_div(ret,m-_cnt);
    //cout<<ret<<endl;
    //ret=mod_add(ret,mod_div(m/x,m-(m/x)));

    return ret;

}


int main()
{
    //freopen("input.txt","r",stdin);
    int i,j;
    cin>>m;
    ll tot=0;
    for(i=2;i<=m;i++){
        for(j=1;j*j<=i;j++){
            if(i%j==0){
                gr[i].push_back(j);
                if((i/j) != j)gr[i].push_back(i/j);
            }
        }
        sort(gr[i].begin(),gr[i].end());
    }

    ll ans=1;
    invm=mod_div(1,m);

    memset(dp,-1,sizeof(dp));

    for(i=2;i<=m;i++){
        ans=mod_add(ans,mod_mul(invm,solve(i)));
    }
    cout<<ans<<endl;


    return 0;
}
