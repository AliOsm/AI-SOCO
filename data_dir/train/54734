#include <bits/stdc++.h>

#define clr(x) memset((x), 0, sizeof((x)))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define itn int
#define x first
#define y second

typedef std::pair<int, int> PII;
typedef int64_t ll;
typedef std::pair<ll, ll> PLL;
typedef long double ld;
typedef std::pair<ld, ld> PLD;
typedef std::pair<double, double> PDD;
template <typename T, typename U>
inline std::ostream & operator << (std::ostream &os, const std::pair<T, U> &r) {os << "(" << r.x << "," << r.y << ")";return os;}
template <typename T>
inline std::pair<T, T> operator + (const std::pair<T, T> &l, const std::pair<T, T> &r) {return mp(l.x + r.x, l.y + r.y);}
template <typename T>
inline std::pair<T, T> operator - (const std::pair<T, T> &l, const std::pair<T, T> &r) {return mp(l.x - r.x, l.y - r.y);}
template <typename T, typename U>
inline std::pair<T, T> operator * (const std::pair<T, T> &l, const U &r) {return mp(T(l.x * r), T(l.y * r));}
template <typename T>
inline T cross(const std::pair<T, T> &l, const std::pair<T, T> &r) {return l.x * r.y - l.y * r.x;}
template <typename T>
inline T dot(const std::pair<T, T> &l, const std::pair<T, T> &r) {return l.x * r.x + l.y * r.y;}
template <typename T>
inline T sq_len(const std::pair<T, T> &l) {return l.x * l.x + l.y * l.y;}
template <typename T>
inline ld len(const std::pair<T, T> &l) {return sqrtl(sq_len(l));}
inline int nxt() {int x;scanf("%d", &x);return x;}
inline ll gcd(ll a, ll b) {a = std::abs(a); b = std::abs(b); while (b) {a %= b;std::swap(a, b);}return a;}
typedef PII pt_int;typedef PLL pt_ll;typedef PLD pt_ld;typedef PDD pt_d;

using namespace std;

const int N = 150;
char s[N][N + 1];
int l[N];
int r[N];

void solve() {
    int n = nxt();
    int m = nxt();
    for (int i = 0; i < n; ++i) {
        scanf("%s", s[i]);
    }
    memset(l, 255, sizeof(l));
    memset(r, 255, sizeof(r));
    for (int i = 0; i < n; ++i) {
        for (int j = m - 1; j >= 0; --j) {
            if (s[i][j] == 'W') l[i] = j;
        }
        for (int j = 0; j < m; ++j) {
            if (s[i][j] == 'W') r[i] = j;
        }
    }
    int x = 0, y = 0;
    int ans = 0;
    for(int i = 0; i < n; ++i) {
        if (l[i] != -1) {
            ans += abs(y - ((i & 1) ? r[i] : l[i])) + r[i] - l[i] + i - x;
            x = i;
            y = (i & 1) ? l[i] : r[i];
        }
    }
    cout << ans << "\n";
}

int main() {
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
#endif
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t = 1;
    for (int i = 0; i < t; ++i) {
        solve();
    }

    return 0;
}
