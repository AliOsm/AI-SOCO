#include<bits/stdc++.h>
#define long long long
using namespace std;
const int N=2e5,sq=444;
int par[N+2],par2[N+2],lm[N+2],vis[N+2],eded[N+2];
vector<vector<int> >qry;
vector<pair<int,int> >tmp,prs;
map<pair<int,int>,pair<int,int> >mp;
map<pair<int,int>,int>ano,rv;
int get(int x)
{
  if(x==par[x])return x;
  return par[x]=get(par[x]);
}
int get2(int x)
{
  if(x==par2[x])return x;
  return par2[x]=get2(par2[x]);
}
void add(int u,int v)
{
  int p1=get(u),p2=get(v);
  if(p1!=p2)par[p1]=p2;
}
void add2(int u,int v)
{
  int p1=get2(u),p2=get2(v);
  if(p1!=p2)par2[p1]=p2;
}
void upd(int x)
{
  int r=get(x);par2[x]=r,par2[r]=r;
}
int main()
{
  ios_base::sync_with_stdio(0);cin.tie(0);
  int n,q;cin>>n>>q;qry.resize(q);

  vector<pair<int,int> >ed;int last=0;
  for(int bl=0; ;bl++)
  {
    int l=bl*sq,r=min((bl+1)*sq,q)-1;if(l>r)break;

    vector<pair<int,int> >modi;
    for(int i=l;i<=r;i++)
    {
      int ty,u,v;cin>>ty>>u>>v;
      if(u>v)swap(u,v);qry[i]={ty,u,v};
      modi.push_back({u,v});
      u++,v++;if(u>n)u=1;if(v>n)v=1;if(u>v)swap(u,v);
      modi.push_back({u,v});
    }
    sort(modi.begin(),modi.end());
    modi.erase(unique(modi.begin(),modi.end()),modi.end());
    for(int i=1;i<=n;i++)par[i]=i;

    for(int i=0;i<ed.size();i++)vis[i]=0;
    for(auto &x:modi)
      if(rv.count(x))vis[rv[x]]=1;
    for(int i=0;i<ed.size();i++)
    {
      if(vis[i])continue;
      if(eded[i]>r)add(ed[i].first,ed[i].second);
    }
    prs.clear();ano.clear();
    for(auto x:modi)
    {
      if(mp.count(x))
      {
        prs.push_back(x);
        lm[prs.size()-1]=mp[x].second;
        ano[x]=prs.size()-1;
      }
    }
    for(int i=l;i<=r;i++)
    {
      int u=qry[i][1],v=qry[i][2];
      u+=last,v+=last;if(u>n)u=1;if(v>n)v=1;if(u>v)swap(u,v);
      if(qry[i][0]==1)
      {
        if(mp.count({u,v}))
        {
          if(mp[{u,v}].second==q)mp[{u,v}].second=i;
          else mp[{u,v}]={i,q};
          lm[ano[{u,v}]]=mp[{u,v}].second;
        }
        else
        {
          mp[{u,v}]={i,q};ed.push_back({u,v});rv[{u,v}]=ed.size()-1;
          prs.push_back({u,v});
          ano[{u,v}]=prs.size()-1;lm[prs.size()-1]=q;
        }
        eded[rv[{u,v}]]=mp[{u,v}].second;
      }
      else
      {
        tmp.clear();
        for(int j=0;j<prs.size();j++)
        {
          if(lm[j]>i)
          {
            upd(prs[j].first),upd(prs[j].second);
            tmp.push_back({prs[j].first,prs[j].second});
          }
        }
        upd(u),upd(v);
        for(auto x:tmp)
          add2(x.first,x.second);
        last=(get2(u)==get2(v));
        cout<<last;
      }
    }
  }
  cout<<endl;
  return 0;
}
