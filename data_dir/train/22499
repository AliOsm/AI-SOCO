#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
#include <bits/stdc++.h>

#define all(c) c.begin(),c.end()
#define ll long long
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define mod 1000000007
#define PI 3.14159265
#define pll pair<ll, ll>
using namespace std;

typedef unsigned long long ull;

bool is_prime(int n) {

    for (int i = 2; i * i <= n; ++i) {
            if (n % i == 0) {
                  return false;
            }
    }
    return true;
}

inline ll getPow(ll a,ll b){
    ll res = 1ll,tp = a;
    while (b){
       if (b&1ll) {
           res *= tp;
           res %= mod;
       }
       tp *= tp;
       tp %= mod;
       b >>= 1ll;
    }
    return res;
}

inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}

void ok() {
    puts("Yes");
    exit(0);
}

void no() {
    puts("No");
    exit(0);
}

inline void out(auto mas) {
    for(int i = 0; i < mas.size(); i++) {
           cout << mas[i] << " ";
    }
}
ll xx[] = {-1, 1, 0, 0};
ll yy[] = {0, 0, -1, 1};

// please, accepted!

const int N = 1111111;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);cout.tie(0);
    ll q = nxt();
    while(q--) {
        ll x = nxt(), y = nxt(), k = nxt();
        ll mn = min(x, y);
        ll mx = max(x, y);
        ll ans;
        if(mx > k) {
              cout << -1 << endl;
        }
        else {
              ll a = 0;
              if (x == y){
                    if ((k-x)%2){
                        cout << max((ll)0, k-2) << endl;
                    }
                     else{
                   cout << k << endl;
                  }
              continue;
              }
        if (abs(x-y)%2==0 && (k-min(x, y))%2==0){
       cout << min(x, y)+(k-min(x, y)) << endl;
        }
      else if (abs(x-y)%2==0 && (k-min(x, y))%2!=0){
          cout << min(x, y)+(k-min(x, y))-2<< endl;
        }
      else if (abs(x-y)%2!=0 && (k-min(x, y))%2==0){
           cout << min(x, y)+(k-min(x, y))-1<<endl;
      }
     else if (abs(x-y)%2!=0 && (k-min(x, y))%2!=0){
       cout << min(x, y)+(k-min(x, y))-1 << endl;
     }
        }
    }

    return 0;
}
