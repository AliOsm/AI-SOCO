//              +-- -- --++-- +-In the name of ALLAH-+ --++-- -- --+              \\

#include <bits/stdc++.h>

#define F first
#define S second
#define _sz(x) (int)x.size()

using namespace std ;
using ll = long long ;
using ld = long double ;
using pii = pair <int , int> ;

int const N = 1000 + 20 ;
int n , m , a[N][N] ;
vector <int> v1[N] , v2[N] ;

int main(){
	ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0) ;

	cin >> n >> m ;

	for (int i = 0 ; i < n ; i ++)
		for (int j = 0 ; j < m ; j ++) {
			cin >> a[i][j] ;
			v1[i].push_back(a[i][j]) ;
			v2[j].push_back(a[i][j]) ;
		}

	for (int i = 0 ; i < max(n , m) ; i ++) {
		sort(v1[i].begin() , v1[i].end()) ;
		v1[i].resize(unique(v1[i].begin() , v1[i].end()) - v1[i].begin()) ;

		sort(v2[i].begin() , v2[i].end()) ;
		v2[i].resize(unique(v2[i].begin() , v2[i].end()) - v2[i].begin()) ;
	}

	for (int i = 0 ; i < n ; i ++) {
		for (int j = 0 ; j < m ; j ++) {
			int id1 = lower_bound(v1[i].begin() , v1[i].end() , a[i][j]) - v1[i].begin() ;
			int id2 = lower_bound(v2[j].begin() , v2[j].end() , a[i][j]) - v2[j].begin() ;

			cout << max(id1 , id2) + max(_sz(v1[i]) - id1 , _sz(v2[j]) - id2) << ' ' ;
		}
		cout << '\n' ;
	}
}
