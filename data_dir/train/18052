#include <cstdio>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <functional>
#include <numeric>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <memory.h>

using namespace std;

typedef long long LL;

const int MOD = (int)1e9 + 7;

int p1[1 << 17];
int p2[1 << 17];

char s[1 << 17];
char ss[1 << 10];
char sp[1 << 17];

int n;

int main()
{
	scanf("%s", s);
	scanf("%d", &n);
	int res = 0;
	int m = strlen(s);
	for(int ii = 0; ii < n; ++ii)
	{
		scanf("%s", ss);
		int k = strlen(ss);
		for(int j = 0; j < k; ++j)
			sp[j] = ss[j];
		sp[k] = '#';
		for(int j = 0; j < m; ++j)
			sp[k + j + 1] = s[j];
		p1[0] = 0;
		for(int i = 1; i < k + m + 1; ++i)
		{
			int j = p1[i - 1];
			while (j > 0 && sp[j] != sp[i])
				j = p1[j - 1];
			if (sp[j] == sp[i])
				++j;
			p1[i] = j;
		}
		for(int j = 0; j < k; ++j)
			sp[j] = ss[k - j - 1];
		sp[k] = '#';
		for(int j = 0; j < m; ++j)
			sp[k + j + 1] = s[m - j - 1];
		p2[0] = 0;
		for(int i = 1; i < k + m + 1; ++i)
		{
			int j = p2[i - 1];
			while (j > 0 && sp[j] != sp[i])
				j = p2[j - 1];
			if (sp[j] == sp[i])
				++j;
			p2[i] = j;
		}
		for(int i = 0; i < m; ++i)
			p2[k + 1 + i] = max(p2[k + 1 + i], p2[k + i]);
		for(int i = 0; i < m; ++i)
			p1[k + 1 + i] = max(p1[k + 1 + i], p1[k + i]);
		int MAX = 0;
		for(int i = 0; i < m - 1; ++i)
			MAX = max(MAX, p1[k + 1 + i] + p2[k + (m - i - 1)]);
		if (k != 1 && MAX >= k)
			res++;
	}
	printf("%d\n", res);
	return 0;
}