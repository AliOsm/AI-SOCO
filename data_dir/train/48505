#include <bits/stdc++.h>

using namespace std;

typedef long long LL;

LL n,m,d,x,bit[105];
string s;

int find1(LL root,int dep,LL x)
{
	if (root==x) return dep;
	LL siz=bit[d-dep]-1;
	if (x>=root-siz&&x<=root-1) return find1(root-bit[d-dep-1],dep+1,x);
	else return find1(root+bit[d-dep-1],dep+1,x);
}
int main()
{
	cin>>n>>m;
	n++;d=0;
	while (n!=0)
	{
		d++;n/=2;
	}
	d--;
	bit[0]=1;
	for (int i=1;i<=d;++i) bit[i]=bit[i-1]*2;
	while (m--)
	{
		cin>>x;
		cin>>s;
		int dep=find1(bit[d-1],1,x);
		for (int i=0;i<s.size();++i)
		{
			if (s[i]=='U')
			{
				if (dep==1) continue;
				else
				{
					LL dq=x/bit[d-dep+1];
					if (dq%2==0) x+=bit[d-dep];
					else x-=bit[d-dep];
					dep--;
				}
			}
			else
			{
				if (dep==d) continue;
				else
				{
					if (s[i]=='L') x-=bit[d-1-dep];
					else x+=bit[d-1-dep];
					dep++;
				}
			}
		}
		cout<<x<<endl;
	}
	return 0;
}