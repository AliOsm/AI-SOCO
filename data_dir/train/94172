#include <iostream>
#include <vector>
#include <map>
#include <unordered_set>
#include <iostream>
#include <algorithm>
#include "math.h"
#define MAXN 300000
#define ll long long
using namespace std;

int P[5555];
int T[5555];

double dp[2][5555];

int main() {

	int n, MAXT;
	cin >> n >> MAXT;
	for (int i = 0; i < n; i++) {
		cin >> P[i] >> T[i];
	}


	for (int id = n; id >= 0; id--) {
		double p = P[id] / 100.0;
		double r = pow(1 - p, T[id] - 1);
		// 1s : P[i]
		// 2s : (1-P[i])*P[i]
		// T[id]-1 : (1-P[i])^(k-1)*P[i]

		// r,p*(1-p)^(T-2),p*(1-p)^(T-3),...,p
		// r*(1-p),p*(1-p)^(T-1),...,

		for (int t = 0; t <= MAXT; t++) {
			if (t == 0 || id == n) {
				dp[id&1][t] = 0.0;
			}
			else {
				dp[id&1][t] = dp[id&1][t - 1] * (1 - p) + (1 + dp[(id + 1)&1][t - 1])*p;

				if (t >= T[id]) {
					dp[id & 1][t] += r * (1 - p) * (1 + dp[(id + 1) & 1][t - T[id]]);
				}

				if (t > T[id]) {
					dp[id & 1][t] -= r * (1 - p) * (1 + dp[(id + 1) & 1][t - 1 - T[id]]);
				}
			}
		}
	}

	printf("%1.10f\n", dp[0][MAXT]);





}
