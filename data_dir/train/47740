#include<stdio.h>
#include<string.h>
#include<ctype.h>
#include<math.h>
#include<iostream>
#include<string>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<bitset>
#include<algorithm>
#include<time.h>
using namespace std;
void fre(){freopen("c://test//input.in","r",stdin);freopen("c://test//output.out","w",stdout);}
#define MS(x,y) memset(x,y,sizeof(x))
#define MC(x,y) memcpy(x,y,sizeof(x))
#define MP(x,y) make_pair(x,y)
#define ls o<<1
#define rs o<<1|1
typedef long long LL;
typedef unsigned long long UL;
typedef unsigned int UI;
template <class T1,class T2>inline void gmax(T1 &a,T2 b){if(b>a)a=b;}
template <class T1,class T2>inline void gmin(T1 &a,T2 b){if(b<a)a=b;}
const int N=1e4+1e3,M=0,Z=1e9+7,ms63=1061109567;
int casenum,casei;
int n,m,T;
int a[N],num[N],f[N];
map<int,int>mop;
map<int,int>::iterator it;
int main()
{
	while(~scanf("%d%d",&n,&T))
	{
		//第一步——离散化
		mop.clear();
		for(int i=1;i<=n;i++)
		{
			scanf("%d",&a[i]);
			mop[a[i]]=0;
		}
		m=0;for(it=mop.begin();it!=mop.end();it++)it->second=++m;
		for(int i=1;i<=n;i++)a[i]=mop[a[i]];
		//第二步——计数
		MS(num,0);
		for(int i=1;i<=n;i++)++num[a[i]];
		//第三步——DP
		int top=min(101,T);
		int totlen=top*n;
		int p=n;
		for(int i=2;i<=totlen;i++)
		{
			a[++p]=a[p-n];
		}
		int len=0;
		int pre=0,dif;
		for(int i=1;i<=top;i++)
		{
			int st=n*(i-1)+1;
			int ed=n*i;
			for(int i=st;i<=ed;i++)
			{
				f[i]=1;
				for(int j=1;j<i;j++)if(a[j]<=a[i])gmax(f[i],f[j]+1);
				gmax(len,f[i]);
			}
			dif=len-pre;
			pre=len;
		}
		if(top==T)printf("%d\n",len);
		else printf("%d\n",len+(T-top)*dif);
	}
	return 0;
}
/*
【trick&&吐槽】


【题意】


【类型】


【分析】


【时间复杂度&&优化】


【数据】
15 12
1 2 3 4 5 99 99 99 99 99 6 7 8 9 10

10 10000000
1 2 3 4 5 6 7 8 9 10

12 3
9 10 11 12 5 6 7 8 1 2 3 4 
*/