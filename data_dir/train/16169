#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define sd(x) scanf("%d",&x)
#define pd(x) printf("%d",x)
#define sl(x) scanf("%lld",&x)
#define pl(x) printf("%lld",x)
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
#define N (int)(1e4+500)
int dpLcp[N][15],len;
vector<pair<pii,int> > L;
ll dp1[5005][5005],dp2[5005][5005];
ll mod=1e9+7;
int lcp(int x,int y){
    int ret=0;
    if(x==y){
        return len-x;
    }
    for(int i=14;i>=0&&x<len&&y<len;i--){
        if((1<<i)<len&&dpLcp[x][i]==dpLcp[y][i]){
            ret+=(1<<i);
            x+=(1<<i);
            y+=(1<<i);
        }
    }
    return ret;
}
void buildSuff(string& s){
    int n=s.size();
    for(int i=0;i<n;i++){
        dpLcp[i][0]=s[i]-'a';
    }
    for(int j=1;j<=14;j++){
        if((1<<j)>=n){
            break;
        }
        L.clear();
        for(int i=0;i<n;i++){
            if(i+(1<<j)>=n){
                dpLcp[i+(1<<j)][j-1]=-1;
            }
            L.pb(mp(mp(dpLcp[i][j-1],dpLcp[i+(1<<(j-1))][j-1]),i));
        }
        sort(all(L));
        for(int i=0;i<n;i++){
            dpLcp[L[i].se][j]=(i>0&&(L[i].fi.fi==L[i-1].fi.fi)&&(L[i].fi.se==L[i-1].fi.se))?dpLcp[L[i-1].se][j]:i;
        }
    }
}
void solve(){
    int n;
    sd(n);
    string s;
    cin>>s;
    s='#'+s;
    len=s.size();
    buildSuff(s);
    for(int i=0;i<=n;i++){
        dp2[0][i]=1;
    }
    for(int i=1;i<=n;i++){
        for(int j=1;j<=i;j++){
            int r=i-j+1;
            int l=i-2*j+1;
            if(s[r]=='0'){
                continue;
            }
            if(l<1){
                dp1[i][j]=dp2[r-1][j];
            }
            else{
                int pref=lcp(l,r);
                if(pref>=j){
                    dp1[i][j]=dp2[r-1][j-1];
                }
                else{
                    if(s[l+pref]<s[r+pref]){
                        dp1[i][j]=dp2[r-1][j];
                    }
                    else{
                        dp1[i][j]=dp2[r-1][j-1];
                    }
                }
            }
        }
        for(int j=1;j<=n;j++){
            dp2[i][j]=(dp2[i][j-1]+dp1[i][j])%mod;
        }
    }
    cout<<dp2[n][n];
}
int main(){
    //freopen("input.txt","r",stdin);
   //freopen("out.txt","w",stdout);
    int t=1;
   // sd(t);
   for(int i=1;i<=t;i++){
       //printf("Case #%d:\n",i);
       solve();
   }
   return 0;
}
