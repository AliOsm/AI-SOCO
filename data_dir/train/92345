#include <bits/stdc++.h>
using namespace std;
const int N = 1e5 + 10;
int n;
char a[110][110];
bool used[110][110];
vector<pair<int, int>> A, B; 
void Dfs(int y, int x, int type){
	if (type == 1){
		A.push_back({y, x});
	}
	else{
		B.push_back({y, x});
	}
	used[y][x] = true;
	for (int i=-1; i<=1; i++){
		for (int j=-1; j<=1; j++){
			if (abs(i+j) == 1){
				if (used[y+i][x+j] == false && a[y+i][x+j] == '0'){
					Dfs(y+i, x+j, type);
				}
			}
		}
	}
}
int main(){
	// freopen("input.txt", "r", stdin);
	// freopen("output.txt", "w", stdout);
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin>>n;
	pair<int, int> start, finish;
	cin>>start.first>>start.second>>finish.first>>finish.second;
	for (int i=0; i<=n+1; i++){
		for (int j=0; j<=n+1; j++){
			a[i][j] = '1';
		}
	}
	for (int i=1; i<=n; i++){
		for (int j=1; j<=n; j++){
			cin>>a[i][j];
		}
	}
	Dfs(start.first, start.second, 1);
	if (used[finish.first][finish.second] == true){
		cout<<0;
		return 0;
	}
	Dfs(finish.first, finish.second, 2);
	int ans = 1e9;
	for (int i=0; i<A.size(); i++){
		for (int j=0; j<B.size(); j++){
			int F = A[i].first - B[j].first;
			F = F * F;
			int S = A[i].second - B[j].second;
			S = S * S;
			ans = min(ans, F + S);
		}
	}
	cout<<ans;
}