#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll long long
#define ld long double
#define pp pair<ll,pair<ll,ll> >
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define hell 1000000007
#define f first
#define s second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree< ll , null_type , less<ll> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t = 1 ;
ll convert( string s )
{
    ll ans = 0 ;
    rep( i , 0 , sz(s) )
        ans = ans * 10 + (ll)(s[i]-'0') ;
    return ans ;
}
string tonum( ll x )
{
    ll xx = x ;
    string ans = "" ;
    while(x>0){
        ans += (char)('0'+(x%10)) ;
        x/=10 ;
    }
    reverse(all(ans));
    if(xx==0)ans+='0';
    if(xx < 10 )ans='0'+ans;
    return ans ;
}
void solve() 
{
    ll n , k ;
    cin >> n >> k ;
    vector<ll> v(n) , cnt(k+1,0) ;
    rep( i , 0 , n )
    {
        cin >> v[i];
        cnt[v[i]%k]++;
    }
    ll ans = 0 ;
    rep( i , 0 , k )
    {
		//cout << cnt[i] << " " ; 
        if( i == k - i || i == 0 )
            ans += cnt[i] / 2 ;
        else  if( i < k - i )
            ans += min( cnt[i] , cnt[k-i] ) ;
    }
    //cout << "\n" ;
    cout << ans+ans << "\n" ;
}   
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
