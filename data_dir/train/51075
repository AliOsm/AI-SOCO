#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
typedef pair<ll,ll> p2;
ll a[200005],f[2000005],res[200005],block,sum;
vector<pair<p2,ll>> v;
bool comp(pair<p2,ll> a,pair<p2,ll> b){
	if((a.first.first)/block<(b.first.first)/block)
	return true;
	else if((a.first.first)/block==(b.first.first)/block&&a.first.second<b.first.second)
	return true;
	return false;
}
void add(ll x){
	sum-=f[x]*f[x]*x;
	f[x]++;
	sum+=f[x]*f[x]*x;
}
void remove(ll x){
	sum-=f[x]*f[x]*x;
	f[x]--;
	sum+=f[x]*f[x]*x;
}
void solve(){
	ll n,t;
	cin>>n>>t;
	block=sqrt(n);
	for(ll i=1;i<=n;i++)
	cin>>a[i];
	v.resize(t);
	for(ll i=0;i<t;i++){
		ll l,r;
		cin>>l>>r;
		v[i]={{l,r},i};
	}
	sort(v.begin(),v.end(),comp);
	ll l=0,r=(-1);
	for(ll i=0;i<t;i++){
		while(r<v[i].first.second){
			r++;
			add(a[r]);
		}
		while(r>v[i].first.second){
			remove(a[r]);
			r--;
		}
		while(l<v[i].first.first){
			remove(a[l]);
			l++;
		}
		while(l>v[i].first.first){
			l--;
			add(a[l]);
		}
		res[v[i].second]=sum;
	}
	for(ll i=0;i<t;i++)
	cout<<res[i]<<"\n";
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    ll qc=1;
    for(ll i=1;i<=qc;i++)
    solve();
}
