#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<ll> vll;
int inf_int=2e9;
ll inf_ll=2e18;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
#define pb push_back
const double pi=3.1415926535898;
#define dout if(debug) cout
#define fi first
#define se second
#define sp setprecision
#define sz size()



template<typename T,typename T1>
void prin(vector<pair<T,T1> >& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i].fi<<" "<<a[i].se<<"\n";
    }
}

template<typename T,typename T1>
void prin(set<pair<T,T1> >& a)
{
    for(auto it=a.begin();it!=a.end();it++)
    {
        cout <<it->fi <<" "<<it->se<<"\n";
    }
}
template<typename T>
void prin(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i];
        if(i<a.size()-1)
            cout<<" ";
        else
            cout <<"\n";
    }
}


template<typename T>
void prin(set<T>& a)
{
    for(auto it=a.begin();it!=a.end();it++)
    {
        cout << *it<<" ";
    }
}
template<typename T>
void prin_new_line(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i]<<"\n";
    }
}
template<typename T,typename T1>
void prin_new_line(vector<pair<T,T1> >& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i].fi<<" "<<a[i].se<<"\n";
    }
}

int sum_vec(vector<int>& a)
{
    int s=0;
    for(int i=0;i<a.size();i++)
    {
        s+=a[i];
    }
    return s;
}
template<typename T>
T max(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=max(ans,a[i]);
    }
    return ans;
}

template<typename T>
T min(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=min(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(T a,T b,T c)
{
    return min(a,min(b,c));
}
template<typename T>
T max(T a,T b,T c)
{
    return max(a,max(b,c));
}

long double s_triangle(long double x1,long double y1,long double x2,long double y2,long double x3,long double y3)
{
    return abs(((x2-x1)*(y3-y1)-(x3-x1)*(y2-y1))/2);
}
bool overflow(ll a,ll b)
{
    if(a*b/b!=a)
        return true;
    return false;
}


#define rank asdsad
bool debug=0;
const int maxn=5e5+100;
ll mod=1e9+7;

vector<int> g[maxn];
set<int> used;
vector<int> com;
void dfs(int v)
{
    vector<int> a;
    if(g[v].sz==1)
    {
       for(auto it=used.begin();it!=used.end();)
        {
            if(*it==g[v][0])
            {
                it++;
            }
            else
            {
                auto it1=it;
                int to=*it;
                it++;
                used.erase(it1);
                a.pb(to);
            }
        }
    }
    else if(g[v].sz>=2)
    {
        for(int i=1;i<g[v].sz;i++)
        {
            int l=g[v][i-1],r=g[v][i];
            auto it=used.upper_bound(l);
            while(it!=used.end() && *it<r)
            {
                auto it1=it;
                int to=*it1;
                it++;
                used.erase(it1);
                a.pb(to);
            }
        }
        int f=g[v][0];
        auto it=used.begin();
        while(it!=used.end() && *it<f)
        {
                auto it1=it;
                int to=*it1;
                it++;
                used.erase(it1);
                a.pb(to);

        }
        it=used.upper_bound(g[v][g[v].sz-1]);
        while(it!=used.end())
        {
                auto it1=it;
                int to=*it1;
                it++;
                used.erase(it1);
                a.pb(to);
        }
    }
    else
    {
        for(auto it=used.begin();it!=used.end();)
        {
                auto it1=it;
                int to=*it;
                it++;
                used.erase(it1);
                a.pb(to);
        }
    }
    com.pb(v);
    for(int to:a)
    {
        dfs(to);
    }
}
vector<vector<int> > ans;
void solve()
{
     int n;
     scanf("%d",&n);
   //  cin >> n;
     int m;
     scanf("%d",&m);
    // cin >> m;
     for(int i=0;i<m;i++)
     {
         int a,b;
         scanf("%d %d",&a,&b);
         //cin >> a >> b;
         g[a].push_back(b);
         g[b].push_back(a);
     }
     for(int i=1;i<=n;i++)
     {
         used.insert(i);
         sort(g[i].begin(),g[i].end());
         g[i].resize(distance(g[i].begin(),unique(g[i].begin(),g[i].end())));
     }
     for(int i=1;i<=n;i++)
     {
         if(used.find(i)==used.end())
         {

         }
         else
         {
             used.erase(i);
             com.clear();
             dfs(i);
             ans.pb(com);
         }
     }
     printf("%d\n",(int)ans.sz);
    // cout << ans.sz<<"\n";
     for(int i=0;i<ans.sz;i++)
     {
       //  cout << ans[i].sz<< " ";
         printf("%d ",(int)ans[i].sz);
         for(int v:ans[i])
         {
             printf("%d ",v);
          //   cout << v <<" ";
         }
         printf("\n");
        //cout << "\n";
     }

}


// Object-Oriented Software Construction

#define FILE "attacks"
int main()
{

   //    freopen("input.txt","r",stdin);
   //    freopen("output.txt","w",stdout);

     //    freopen(FILE".in","r",stdin);
      //   freopen(FILE".out","w",stdout);
       if(!debug)
       {
            ios_base::sync_with_stdio(0);
            cin.tie(0);
            cout.tie(0);
       }

        int t=1;
        //scanf("%d",&t);
       // cin >> t;
         while(t--)
            solve();
        return 0;
}
