/**
░▄▀▄▀▀▀▀▄▀▄░░░░░░░░░
░█░░░░░░░░▀▄░░░░░░▄░
█░░▀░░▀░░░░░▀▄▄░░█░█
█░▄░█▀░▄░░░░░░░▀▀░░█
█░░▀▀▀▀░░░░░░░░░░░░█
█░░░░░░░░░░░░░░░░░░█
█░░░░░░░░░░░░░░░░░░█
░█░░▄▄░░▄▄▄▄░░▄▄░░█░
░█░▄▀█░▄▀░░█░▄▀█░▄▀░
░░▀░░░▀░░░░░▀░░░▀░░░
*/
#include <bits/stdc++.h>
#define br  break
#define off  exit( 0 )
#define cn   continue
#define rt   return
#define un   unsigned
#define do   double
#define cr   char
#define st   string
#define sc   scanf
#define pr   printf
#define mk   make_pair
#define pb   push_back
#define pf   push_front
#define p_f  pop_front
#define p_b  pop_back
#define ff   first
#define ss   second
#define vec  vector
#define gcd  __gcd
#define pi   acos( -1 )
#define ll   long long
#define N    1000256
#define M    1000000007
#define I    1000000000000000000
#define en                 printf( "\n" )
#define sqr( a )           ( ( a ) * ( a ) )
#define all( c )           ( c ).begin(), ( c ).end()
#define rev( c )           reverse( all( c ) )
#define srt( c )           sort( all( c ) )
#define mxx( x, y, z )     max( x, max( y, z ) )
#define mnn( x, y, z )     min( x, min( y, z ) )
#define mxn( x, y, z )     max( x, min( y, z ) )
#define mnx( x, y, z )     min( x, max( y, z ) )
#define pif( x, y )        sqrt( sqr( x ) + sqr( y ) )
#define dist( x, y, z, c ) sqrt( sqr( x - z ) + sqr( y - c ) )
#define speed              ios_base::sync_with_stdio( 0 ), cin.tie( 0 ), cout.tie( 0 )
#define toprun             ios_base::sync_with_stdio( 0 ), cin.tie( 0 )
using namespace std;
ll tests;
ll n, m, a, b, ans = M, sum[ 4005 ];
vector < ll > g[ 4005 ];
bool z[ 4005 ][ 4005 ];
void solve()
{
    cin >> n >> m;
    for( int i = 1; i <= m; i ++ )
    {
        cin >> a >> b;
        z[ a ][ b ] = z[ b ][ a ] = 1;
        g[ a ].push_back( b );
        g[ b ].push_back( a );
    }
    for( int i = 1; i <= n - 2; i ++ )
    {
        if( g[ i ].size() > 1 )
        {
            for( auto j: g[ i ] )
            {
                if( j > i && g[ j ].size() > 1 )
                {
                    for( auto k: g[ j ] )
                    {
                        if( k > j && z[ i ][ k ] == 1 )
                        {
                            ans = min( g[ i ].size() + g[ j ].size() + g[ k ].size() - ( ll )6, ans );

                        }
                    }
                }
            }
        }
    }
    if( ans == M )ans = -1;
    cout << ans;
}
int main()
{
    speed;
    /*cin >> tests;
    while( tests -- )*/
        solve();
}