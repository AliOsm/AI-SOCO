///God help me.
///Created by Al-amin.
///Time : 2018-07-30-21.27

#include<bits/stdc++.h>

using namespace std;
#define ll long long
int dp[5022][3000][2];
int arr[5022] , n;
int inf = 1e9;
int solve(int id , int k , int fg){
    if(k == 0)return 0;
    if(id > n)return inf;
    int &ret = dp[id][k][fg];
    if(ret != -1)return ret;
    ret = inf;
    if(fg){
        ret = min(ret,solve(id + 1, k , 0));
        int temp = min(arr[id-2]-1 , arr[id-1]);
        int cost = 0;
        if(temp >= arr[id]){
            cost += temp-arr[id]+1;
        }
        if(arr[id+1]>=arr[id]){
            cost += arr[id+1]-arr[id]+1;
        }
        return ret = min(ret , cost + solve(id + 2, k - 1, 1));
    }
    else{
        ret = min(ret,solve(id + 1, k , 0));
        int cost = 0;
        if(arr[id+1] >= arr[id]){
            cost += arr[id+1]-arr[id]+1;
        }
        if(arr[id-1] >= arr[id])
            cost += arr[id-1]-arr[id]+1;
        return ret = min(ret , cost + solve(id + 2 , k - 1, 1));
    }
}

int main()
{
    cin >> n;
    for(int i = 1; i<=n; i++)cin >> arr[i];
    memset(dp , -1, sizeof dp);
    int k = (n+1)/2;
    for(int i = 1; i<=k; i++){
        printf("%d ",solve(1 , i , 0));
    }
    return 0;
}
