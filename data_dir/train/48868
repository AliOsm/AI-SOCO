#include <cstdio>
#include <iostream>
#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <functional>
#include <cmath>
#include <sstream>
#include <utility>
#include <ctime>
#include <memory.h>
#include <cctype>
#include <cstdlib>
#include <limits>

using namespace std;

#pragma comment (linker, "/STACK:128000000")

#define y0 qwertyuiop
#define y1 asdfghjkl
#define forn(j, n) for(j=1; j<=n; j++)
#define sz size()
#define pb push_back
#define fors(w, s) for(set <int> :: iterator w=s.begin(); w!=s.end(); w++)
#define pii pair<int, int>
#define uns unsigned
#define vi vector <int>
#define vvi vector <vi>
#define inf 2000000000
#define o 1000000009


int j, n, k, l, q, p, i, h, t, x, m, p1=-1, p2, a[5005], d[5005];
string s;
bool b;

int func (int q)
{
	if (q<1)
	{
		return 0;
	}
	if (a[q]>-1)
	{
		return a[q];
	}
	int j, m=0;
	vi v;
	for (j=0; j<=(q>>1); j++)
	{
		v.pb(func(j-1)^func(q-j-2));
	}
	if (v.empty())
	{
		return a[q]=0;
	}
	sort (v.begin(), v.end());
	for (j=0; j<v.sz; j++)
	{
		if (m<v[j])
		{
			break;
		}
		if (m==v[j])
		{
			m++;
		}
	}
	return a[q]=m;
}

void tg ()
{
	freopen ("output.txt","r",stdin); freopen ("input.txt","w",stdout);
	
}

long long gcd (long long a, long long b)
{
	while (a>0)
	{
		swap (a, b);
		a%=b;
	}
	return b;
}

int main()
{
	//tg (); return 0;
	//freopen ("input.txt","r",stdin); freopen ("output.txt","w",stdout);
    //freopen ("nosimple.in","r",stdin); freopen ("nosimple.out","w",stdout);
	getline (cin, s);
	memset (a, -1, sizeof(a));
	a[1]=1;
	forn (j, s.sz-1)
	{
		if (b)
		{
			if (j==s.sz-1)
			{
				q^=(func(p));
				b=0;
				for (i=j-p; i<j; i++)
				{
					d[i]=p;
				}
				p=0;
				break;
			}
			if (s[j-1]==s[j+1])
			{
				p++;
			}
			else
			{
				q^=func(p);
				b=0;
				for (i=j-p; i<j; i++)
				{
					d[i]=p;
				}
				p=0;
			}
		}
		else
		{
			if (j==s.sz-1)
			{
				break;
			}
			if (s[j-1]==s[j+1])
			{
				p++;
				b=1;
			}
		}
	}
	b=0;
	if (q>0)
	{
		printf ("First\n");
		forn (j, s.sz-2)
		{
			if (b)
			{
				if (s[j-1]==s[j+1])
				{
					p++;
					if ((q^func(p-2)^func(d[j]-p-1))==0)
					{
						printf ("%d", j+1);
						return 0;
					}
				}
				else
				{
					q^=func(d[j-1]);
					p=0;
					b=0;
				}
			}
			else
			{
				if (s[j-1]==s[j+1])
				{
					p++;
					b=1;
					q^=func(d[j]);
					if ((q^func(d[j]-2))==0)
					{
						printf ("%d", j+1);
						return 0;
					}
				}
			}
		}
	}
	else
	{
		printf ("Second");
	}
	return 0;
}
