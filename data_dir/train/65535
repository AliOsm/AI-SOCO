// practice with Dukkha
#include <algorithm>
#include <iostream>

using namespace std;

int **alloc(int n, int m) {
	int **aa = new int *[n];
	for (int i = 0; i < n; i++)
		aa[i] = new int[m];
	return aa;
}

int main() {
	int n, m; cin >> n >> m;
	int **aa = alloc(n, m);
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			cin >> aa[i][j];
	int **rr = alloc(n, m);
	for (int j = 0; j < m; j++)
		for (int i = n - 1; i >= 0; i--)
			rr[i][j] = i + 1 < n && aa[i][j] <= aa[i + 1][j] ? rr[i + 1][j] : i;
	int *rr_ = new int[n];
	for (int i = 0; i < n; i++) {
		int r = -1;
		for (int j = 0; j < m; j++)
			r = max(r, rr[i][j]);
		rr_[i] = r;
	}
	int k; cin >> k;
	while (k--) {
		int l, r; cin >> l >> r, l--, r--;
		cout << (rr_[l] >= r ? "Yes" : "No") << '\n';
	}
	return 0;
}
