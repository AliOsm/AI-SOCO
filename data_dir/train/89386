#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define PB push_back
#define MP make_pair

#define rep(i,n) for(int i=0;i<(n);++i)
#define REP(i,n) for(int i=1;i<=(n);++i)
#define FOR(i,l,h) for(int i=(l);i<=(h);++i)
#define FORD(i,h,l) for(int i=(h);i>=(l);--i)
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl
#define tr(it,c) for(auto it=(c).begin(); it!=(c).end(); ++it)
#define all(c) (c).begin(), (c).end()

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long int64;
typedef pair<int,int> pii;

string s[40];
int precalc[40][40];

int calc(const string &a,const string &b)
{
	int l=min(a.size(),b.size());
	rep(i,l) if(a[i]!=b[i]) return i;
	return l;
}

int main(void)
{
	ios::sync_with_stdio(false);
	int n,k,ans=0; cin>>n>>k;
	rep(i,n) cin>>s[i];
	rep(i,n) rep(j,n) if(i<j) precalc[i][j]=calc(s[i],s[j]);
	rep(mask,1<<n)
	{
		bitset<20> b(mask);
		if(b.count()==k)
		{
			int res=0;
			rep(i,n) if(b[i]) rep(j,n) if(i<j && b[j])
			{
				res+=precalc[i][j];
			}
			ans=max(ans,res);
		}
	}
	cout<<ans<<endl;
}
