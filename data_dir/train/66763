#pragma comment(linker, "/stack:640000000")

#include<bits/stdc++.h>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<stdio.h>
using namespace std;
#define ll long long int
#define scanl(a) scanf("%lld",&a)
#define scanii(a,b) scanf("%d%d",&a,&b)
#define scaniii(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define scanll(a,b) scanf("%lld%lld",&a,&b)
#define scanlll(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define scani(a) scanf("%d",&a)
#define clr(a) memset(a,0,sizeof(a))
#define clr_(a) memset(a,-1,sizeof(a))
#define pb(a) push_back(a)
#define pii pair<int,int>
#define sqr(a) a*a
#define eps 1e-9
#define inf INT_MAX
#define pi acos(-1.0)
#define ff first
#define ss second
#define INF (ll)1e18
#define endl '\n'
#define m_p make_pair
#define vsort(v) sort(v.begin(),v.end())
#define all(v) v.begin(),v.end()
#define UNIQUE(X) X.erase( unique( X.begin(), X.end() ), X.end() )
int fx[]={0,0,-1,1,-1,1,1,-1};
int fy[]={1,-1,0,0,1,1,-1,-1};
ll lcm(ll a,ll b){return (a/__gcd(a,b))*b;}
ll bigmod(ll a,ll p,ll mod){ll ans=1;while(p){if(p&1)ans=ans*a%mod;a=a*a%mod;p>>=1;}return ans;}
ll power(ll x,ll n){if(n==0)return 1;else if(n%2==0){ll y=power(x,n/2);return y*y;}else return x*power(x,n-1);}
struct point{double x,y;point(){}point(double xx,double yy){x=xx;y=yy;}};
inline double Distance(point  a,point b){return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));}
#ifdef shaft
     #define debug(args...) {cerr<<"Debug: "; dbg,args; cerr<<endl;}
#else
    #define debug(args...)  // Just strip off all debug tokens
#endif

struct debugger{
    template<typename T> debugger& operator , (const T& v){
        cerr<<v<<" ";
        return *this;
    }
}dbg;
const int N=(int)2e6;
int n;
int pp[10];
ll arr[N];
ll dp[N][5];
int col[N][5];
ll p,q,r;
ll call(int pos,int cnt){
    if(pos==n+1){
        if(cnt==3)return 0LL;
        return -3LL*INF;
    }
    ll &ans=dp[pos][cnt];
    if(col[pos][cnt])return ans;
    col[pos][cnt]=1;
    ll p1=call(pos+1,cnt);
    ans=-4LL*INF;
    if(cnt==0){
        ll p2=arr[pos]*p+max(call(pos,cnt+1),call(pos+1,cnt+1));
        ans=max(ans,p2);
    }
    else if(cnt==1){
        ll p2=arr[pos]*q+max(call(pos,cnt+1),call(pos+1,cnt+1));
        ans=max(ans,p2);
    }
    else{
        ll p2=arr[pos]*r;
        ans=max(ans,p2);
    }
    ans=max(ans,p1);
    return ans;
}
int main()
{
    // ios_base::sync_with_stdio(0);
    // cin.tie(0);
    #ifdef shaft
        freopen("in.txt","r",stdin);
        ///freopen("out.txt","w",stdout);
    #endif ///shaft
    //srand(time(0));
    while(scani(n)==1){
        scanlll(p,q,r);
        for(int i=1;i<=n;i++){
            scanl(arr[i]);
        }
        clr(col);
        ll ans=call(1,0);
        printf("%lld\n",ans);
    }
    return 0;
}
