#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

template<typename T>
void out(T x) { cout << x << endl; exit(0); }
#define watch(x) cout << (#x) << " is " << (x) << endl

const int maxn = 1e6 + 5;

void pay(int dish, vector<int>& a) {
  for (int i=0; i<3; i++) {
    if (dish >> i & 1) {
      a[i]--;
    }
  }
}

int solve() {
  vector<int> v(3);
  for (int i=0; i<3; i++) cin>>v[i];
  int ans = 0;
  vector<int> dishes;
  for (int i=1; i<8; i++) dishes.push_back(i);

  for (int mask=0; mask<(1 << 7); mask++) {
    vector<int> a = v;
    for (int j=0; j<7; j++) {
      if (mask >> j & 1) {
	pay(dishes[j], a);
      }
    }
    if (a[0]>=0 && a[1]>=0 && a[2]>=0) {
      ans = max(__builtin_popcount(mask), ans);
    }
  }
  return ans;
}

int main() {
  ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);


  int t; cin>>t;
  while (t--) {
    cout<<solve()<<"\n";
  }
  

  return 0;
}
// don't forget to read in the input :^)
