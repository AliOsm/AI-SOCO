#include<bits/stdc++.h>
#define MOD 1000000007
#define ll long long
#define mp make_pair
#define pb push_back 
using namespace std;
bool isintersect(pair<int, int> A, pair<int, int> B){
	if(A.first > B.second || A.second < B.first)
		return false;
	return true;
}
int main(){
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	int n;
	cin >> n;
	string s;
	cin >> s;
	int ct1 = 0, ct2 = 0;
	ll sumi1 = 0, sumi2 = 0;
	for(int i = 0; i < s.length() / 2; i++){
		if(s[i] == '?')
			ct1++;
		else sumi1 += s[i] - '0';
	}
	for(int i = s.length() / 2; i < s.length(); i++){
		if(s[i] == '?')
			ct2++;
		else sumi2 += s[i] - '0';
	}
	pair<int, int> rng1 = mp(sumi1, sumi1 + ct1 * 9);
	pair<int, int> rng2 = mp(sumi2, sumi2 + ct2 * 9);
//	cout << rng1.first << " " << rng1.second << " " << rng2.first << " " << rng2.second << '\n';
	int trn = 1;
	int x = ct1, y = ct2;
	for(int i = 0; i < ct1 + ct2; i++){
		int d1 = rng1.second - rng2.first;// : 1e9;
		int d2 = rng2.second - rng1.first;// : 1e9;
		if(!trn){
			if(d1 < d2){
				if(x){
					x--;
					rng1.first += 9;
				}
				else {
					y--;
					rng2.second -= 9;
				}
			}
			else {
				if(x){
					x--;
					rng1.second -= 9;
				}
				else {
					y--;
					rng2.first += 9;
				}
			}
		}
		else{
			if(d1 < d2){
				if(x){
					rng1.second -= 9;
					x--;
				}
				else{
					rng2.first += 9; 
					y--;
				}
			}
			else{
				if(x){
					rng1.first += 9;
					x--;
				}
				else{
					rng2.second -= 9;
					y--;
				}
			}
		}
	//	cout << rng1.first << " " << rng1.second << " " << rng2.first << " " << rng2.second << '\n';
		trn = 1 -trn;
	}
	if(isintersect(rng1, rng2))
		cout << "Bicarp\n";
	else cout << "Monocarp\n";



}