#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>


using namespace std;
using namespace __gnu_pbds;

template <typename T> using 	Set = tree<T, null_type,
				less<T>, rb_tree_tag,
				tree_order_statistics_node_update>;

typedef long long int ll;
typedef pair <int, int> pii;

const int Max = 2e6 + 10;
const int Mod = 1e9 + 7;
const ll Inf = 1LL << 62;

int l[Max];
int r[Max];

int main() {
#ifdef Mr_Emrul
	freopen("inputf.in", "r", stdin);
#endif /// Mr_Emrul

	int n, ans = 0; scanf("%d", &n);
	Set <pii> lft, rgt;

	for(int i = 1; i <= n; i++) {
		scanf("%d %d", &l[i], &r[i]);
		lft.insert({l[i], i});
		rgt.insert({r[i], i});
	}

	for(int i = 1; i <= n; i++) {
		lft.erase({l[i], i});
		rgt.erase({r[i], i});

		pii mn = *lft.find_by_order(n - 2);
		pii mx = *rgt.find_by_order(0);

		//printf("%s\n", );

		//printf("%d %d\n", mn, mx);

		if(mx.first - mn.first + 1) {
			ans = max(ans, mx.first - mn.first);
			//printf("== %d\n", ans);
		}

		lft.insert({l[i], i});
		rgt.insert({r[i], i});
	}

	printf("%d\n", ans);
	return 0;
}