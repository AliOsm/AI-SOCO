/**
*
* Author: MARC
* Lang: GNU C++14
*
**/

#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair < int , int >
#define LS pair < ll , string >

typedef unsigned long long ull;
typedef long double ldbl;
typedef long long ll;
typedef double dbl;

const ldbl E = 2.71828182845904523536;
const ldbl pi = acos(-1);
const dbl eps = 1e-9;
const ll mod = 1e9+7;
const ll inf = 1LL<<30;

/** /////////// ** Code ** /////////// **/

const int N=100100;
ldbl mem1[33][33][222];
ldbl mem2[33][33][222];
ldbl prob_ren;
int a[33];
int n,k;

ldbl POW(ldbl a , ll p )
{
    if( p==0 )return 1; if( p==1 )return a;
    ldbl x=POW(a,p/2);
    if( p%2==0) return ((x)*x);
    return (((x)*x)*a);
}

int cnt=0;

ldbl dp1(int i,int j,int m){
    if(m == 0){
        if(i > j) return prob_ren;
        else return 0.0;

    }

    ldbl &ret=mem1[i][j][m];
    if(ret > -1) return ret;

    ret=0.0;

    if(i < j){
        for(int l=0 ; l<n ; l++){
            for(int r=l ; r<n ; r++){
                int nex_i=i , nex_j=j;
                if(i >= l && r >= i && j > r) nex_i=l+r-i , nex_j=j;
                else if(l > i && j >= l && r >= j) nex_i=i , nex_j=l+r-j;
                else if(i >= l && j >= i && r >= j) nex_i=l+r-i , nex_j=l+r-j;

                ret+=dp1(nex_i,nex_j,m-1);

            }
        }
    }

    if(i > j){
        for(int l=0 ; l<n ; l++){
            for(int r=l ; r<n ; r++){
                int nex_i=i , nex_j=j;
                if(j >= l && r >= j && i > r) nex_j=l+r-j , nex_i=i;
                else if(l > j && i >= l && r >= i) nex_j=j , nex_i=l+r-i;
                else if(j >= l && i >= j && r >= i) nex_j=l+r-j , nex_i=l+r-i;

                ret+=dp1(nex_i,nex_j,m-1);

            }
        }
    }



    return ret;

}


ldbl dp2(int i,int j,int m){
    if(m == 0){
        if(i < j) return prob_ren;
        else return 0.0;
    }

    ldbl &ret=mem2[i][j][m];
    if(ret > -1) return ret;

    ret=0.0;

    if(i < j){
        for(int l=0 ; l<n ; l++){
            for(int r=l ; r<n ; r++){
                int nex_i=i , nex_j=j;
                if(i >= l && r >= i && j > r) nex_i=l+r-i , nex_j=j;
                else if(l > i && j >= l && r >= j) nex_i=i , nex_j=l+r-j;
                else if(i >= l && j >= i && r >= j) nex_i=l+r-i , nex_j=l+r-j;

                ret+=dp2(nex_i,nex_j,m-1);

            }
        }
    }

    if(i > j){
        for(int l=0 ; l<n ; l++){
            for(int r=l ; r<n ; r++){
                int nex_i=i , nex_j=j;
                if(j >= l && r >= j && i > r) nex_j=l+r-j , nex_i=i;
                else if(l > j && i >= l && r >= i) nex_j=j , nex_i=l+r-i;
                else if(j >= l && i >= j && r >= i) nex_j=l+r-j , nex_i=l+r-i;

                ret+=dp2(nex_i,nex_j,m-1);

            }
        }
    }



    return ret;

}

int main()
{
    scanf("%d%d",&n,&k);
    for(int i=0 ; i<n ; i++) scanf("%d",&a[i]);

    ldbl exp_val=0;
    prob_ren=POW(2.0/( (n*(n+1))*1.0) , k);
    memset(mem1,-2,sizeof mem1);
    memset(mem2,-2,sizeof mem2);


    for(int i=0 ; i<n ; i++)
        for(int j=i+1 ; j<n ; j++)
            if(a[j] > a[i]) exp_val+=dp1(i,j,k);
            else exp_val+=dp2(i,j,k);


    cout<<fixed<<setprecision(10)<<exp_val;

    return 0;
}
