//IOI 2021
#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 100 + 17;

int n, m, a[MAXN][MAXN], sumr[MAXN], sumc[MAXN];
set<int> r, c;
vector<int> badr, badc;

void addr(int x) {
	if (r.count(x))	r.erase(x);
	else	r.insert(x);
}
void addc(int x) {
	if (c.count(x)) c.erase(x);
	else	c.insert(x);
}
void updr(int x) {
	for (int i = 1; i <= m; i++)
		a[x][i] = -a[x][i];
}
void updc(int x) {
	for (int i = 1; i <= n; i++)
		a[i][x] = -a[i][x];
}
void bad() {
	memset(sumr, 0, sizeof sumr);
	memset(sumc, 0, sizeof sumc);
	badr.clear();
	badc.clear();
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++)
			sumr[i] += a[i][j], sumc[j] += a[i][j];
	for (int i = 1; i <= n; i++)
		if (sumr[i] < 0) badr.pb(i);
	for (int i = 1; i <= m; i++)
		if (sumc[i] < 0) badc.pb(i);
}

int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m;
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++)
			cin >> a[i][j];
	while (true) {
		bad();
		if (!badc.size() && !badr.size()) break;
		if (badr.size() > badc.size())
			for (auto i : badr)
				addr(i), updr(i);
		else
			for (auto i : badc)
				addc(i), updc(i);
	}
	cout << r.size();
	for (auto i : r)
		cout << ' ' << i;
	cout << endl;
	cout << c.size();
	for (auto i : c)
		cout << ' ' << i;
	cout << endl;
	return 0;
}
