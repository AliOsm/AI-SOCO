#include <bits/stdc++.h>
#define ll long long
using namespace std;
const int N = 1e3 + 5, mod = 1e9 + 7;
int ncr[N][N], a[N], b[N], n, k, dp[N][N];
int get(int ind) {
	if (!ind) return 0;
	return b[ind - 1];
}
int solve(int ind, int col) {
	if (ind == n) return col == k;
	if (col >= k) return 0;
	int &ret = dp[ind][col];
	if (ret != -1) return ret;

	ret = solve(ind + 1, col);
	if (ind + 1 >= a[col]) {
		ret += (ncr[ind - get(col)][a[col] - 1] * 1ll * solve(ind + 1, col + 1) % mod) % mod;
		ret %= mod;
	}
	return ret;
}
int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cin >> k;

	for (int i = 0; i < k; i++)
		cin >> a[i], b[i] = a[i] + (i ? b[i - 1] : 0), n += a[i];
	for (int i = 0; i < N; i++)
		for (int j = 0; j <= i; j++) {
			if (!i || i == j) ncr[i][j] = 1;
			else ncr[i][j] = ncr[i - 1][j] + ncr[i - 1][j - 1];
			if (ncr[i][j] >= mod) ncr[i][j] -= mod;
		}
	memset(dp, -1, sizeof dp);
	cout << solve(0, 0) << endl;
	return 0;
}
