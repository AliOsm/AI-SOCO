/*<<head>> {{{*/
#include <bits/stdc++.h>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <string>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
/*}}}*/                         // zr, zm
const int MOD = (int)1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = (int)5e5+7;

// ------- 变量 ------- //

int n, a[N];

// ------- 函数 ------- //

int ton[N], b[N];
void b_sort() {
    rep(i, 1, n+2) ton[a[i]]++;
    int pos = 1;
    per(i, 0, N) while (ton[i] && ton[i]--) b[pos++] = i;
}

ll pre[N], suf[N];
pii check(int M) {
    a[n+1] = M;
    b_sort();
    pre[0] = 0; rep(i, 1, n+2) pre[i] = pre[i-1] + b[i];
    suf[n+2] = 0; per(i, 1, n+2) suf[i] = suf[i+1] + b[i];
    int pos = n + 1;
    rep(k, 1, n+2) {
        ll Left, Right;
        Left = pre[k];
        while (pos > k && b[pos] < k) pos--;
        Right = 1ll * k * (k - 1) + 1ll * (pos - k) * k + suf[pos+1];
        if (Left > Right) {
            return M >= b[k] ? mp(0, 1) : mp(0, 0);
        }
    }
    return mp(1, 0);
}

void Init() {
    rep(i, 1, n+1) scanf("%d", a+i);
}

int Solve() {
    b_sort();
    int L = 0, R = n;
    while (L < R) {
        int M = L + R >> 1;
        auto tmp = check(M);
        if (tmp.fi) {
            R = M;
        } else {
            if (tmp.se) R = M - 1;
            else L = M + 1;
        }
    }
    if (!check(L).fi) return puts("-1");
    int dw = L;
    L = 0; R = n;
    while (L < R) {
        int M = L + R + 1 >> 1;
        auto tmp = check(M);
        if (tmp.fi) {
            L = M;
        } else {
            if (tmp.se) R = M - 1;
            else L = M + 1;
        }
    }
    int up = L;
    ll sum = 0;
    rep(i, 1, n+1) sum += a[i];
    if (sum + dw & 1) dw++;
    for (int i = dw; i <= up; i += 2) printf("%d%c", i, " \n"[i==up]);
    return 0;
}

// ------- main ------- //

int main ()
{
    //ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d", &n)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}