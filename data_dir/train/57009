#ifdef D
#include "header.h"
#else
#include "bits/stdc++.h"
#endif

using namespace std;

#define type(x) __typeof((x).begin())
#define foreach(i, x) for(type(x) i = (x).begin(); i != (x).end(); i++)
#define ws ____ws

typedef long long ll;
typedef pair < int, int > ii;

const int inf = 1e9 + 333;
const ll linf = 1e18 + 333;

const int ADD = 1e5 + 5;
const int N = ADD + ADD;

int n;
int w[N], p[N];
ii a[N];
vector < ii > vs[N];
vector < int > ws[N];
map < ii, int > arr, dp;

int f(int x, int y) {
    if(x < 0 or y < 0)
        return 0;
    if(dp.find(ii(x, y)) != dp.end())
        return dp[ii(x, y)];
    return dp[ii(x, y)] = max(arr[ii(x, y)], max(f(x - 1, y), f(x, y - 1)));
}

int main () {
    
    scanf("%d", &n);
    
    for(int i = 1; i <= n; i++) {
        scanf("%d %d", &a[i].first, &a[i].second);
        vs[a[i].second - a[i].first + ADD].push_back(ii(a[i].first, i));
    }
    
    for(int i = 1; i <= n; i++) {
        scanf("%d", w + i);
        ws[w[i] + ADD].push_back(i);
    }
    
    for(int i = 0; i < N; i++) {
        if(vs[i].size() != ws[i].size()) {
            puts("NO");
            return 0;
        }
        sort(vs[i].begin(), vs[i].end());
        for(int it = 0; it < vs[i].size(); it++) {
            int x = vs[i][it].second;
            int y = ws[i][it];
            p[y] = x;
        }
    }
    
    for(int i = 1; i <= n; i++) {
        //printf("p[%d] = %d\n", i, p[i]);
        arr[a[p[i]]] = i;
    }
    
    for(int i = 1; i <= n; i++) {
        //printf("f_%d = %d\n", i, f(a[p[i]].first, a[p[i]].second));
        if(f(a[p[i]].first, a[p[i]].second) > i) {
            puts("NO");
            return 0;
        }
    }
    
    puts("YES");
    
    for(int i = 1; i <= n; i++) {
        printf("%d %d\n", a[p[i]].first, a[p[i]].second);
    }
    
    return 0;
    
}
