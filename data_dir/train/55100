//Solution by Tima
#include <bits/stdc++.h>
 
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
#define all(x) x.begin(), x.end()
 
using namespace std;    
const int N = int(3e5) + 12, mod = int(1e9)  + 7; 

int n,k, t[N];

map <int,int> cnt;

pair <ll,ll> a[N];


int main () {
	scanf("%d%d", &n, &k);
	for(int i = 1; i <= n; i++){
		scanf("%d", &t[i]);
		cnt[t[i]]++;
	}
	sort(t + 1,t + n + 1);
	ll ans = (ll)(1e18);
	ll res = 0, cur = 0;
	n = unique(t + 1, t + n + 1) - t - 1;


	for(int i = 1; i <= n; i++){
		if(cnt[t[i]] >= k) {
			ans = 0;
			break;
		}
		if(cnt[t[i]] + cur >= k){
			ll m = cur * (t[i] - 1) - res + (k - cnt[t[i]]);
			ans = min(ans,m);
		}
		a[i] = mp(res, cur);
		res += 1ll * cnt[t[i]] * t[i];
		cur += cnt[t[i]];
	}
	res = 0, cur = 0;

	for(int i = n; i > 0; i--){
		if(cnt[t[i]] >= k) {
			ans = 0;
			break;
		}
		if(cnt[t[i]] + cur >= k){
			ll m = res - cur * (t[i] + 1)  + (k - cnt[t[i]]);
			ans = min(ans,m);
		}
		else{
			ll m = res - cur * (t[i] + 1) + (k - cnt[t[i]]) + a[i].s * (t[i] - 1) - a[i].f;
			ans = min(m, ans);
		}
		res += 1ll * cnt[t[i]] * t[i];
		cur += cnt[t[i]];
	}
	printf("%lld", ans);

	return 0;
}