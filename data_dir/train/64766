#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
using namespace std;
typedef long long ll;

const int maxN = 1e5 + 10;
vector <int> adj[maxN];
int n,c[maxN];
vector < pair<int, int> > edge;
bool ok;

void dfs(int v, int p, int col)
{
    ok &= (c[v] == col);
    for (int i = 0 ; i < adj[v].size() ; i++)
    {
        int u = adj[v][i];
        if (u != p)
            dfs(u, v, col);
    }
}

bool check(int root)
{
    bool ret = true;
    for (int i = 0 ; i < adj[root].size() ; i++)
    {   
        ok = true;
        int v = adj[root][i];
        dfs(v, root, c[v]);
        ret &= ok;
    }
    return ret;
}

int32_t main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    cin >> n;
    for (int i = 1 ; i < n ; i++)  
    {
        int v,u;
        cin >> v >> u;
        v--, u--;
        adj[v].pb(u);
        adj[u].pb(v);
        edge.pb(mp(v, u));
    }

    for (int i = 0 ; i < n ; i++)
        cin >> c[i];

    int root1 = -1, root2 = -1;
    for (int i = 0 ; i < n - 1 ; i++)
    {
        int v = edge[i].first, u = edge[i].second;
        if (c[v] != c[u])
        {
            root1 = v;
            root2 = u;
        }
    }

    if (root1 == -1) //kolle derakht 1 range
        return cout << "YES" << endl << 1 << endl, 0; //har raase delkhaahi ok e

    //cout << root1 << " " << root2 << endl;

    if (check(root1))
        return cout << "YES" << endl << root1 + 1 << endl, 0;

    if (check(root2))
        return cout << "YES" << endl << root2 + 1 << endl, 0;
    cout << "NO" << endl;
    return 0;
} 