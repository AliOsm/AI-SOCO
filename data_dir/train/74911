#include <bits/stdc++.h>
using namespace std;

template<typename T>
void out(T x) { cout << x << endl; exit(0); }
#define watch(x) cout << (#x) << " is " << (x) << endl




typedef long long ll;
const ll mod = 1e9+7;
const int maxn = 1e6 + 5;




int divceil(int x, int y) {
    assert(y);
    return (x+y-1)/y;
}


string solve() {
    int n, k;
    string s;
    cin>>n>>k>>s;
    sort(s.begin(), s.end());

    int i=0;
    while (i<n && s[0]==s[i]) i++;


    // 1 char
    if (i == n) {
	return string(divceil(n, k), s[0]);
    }

    // kth char, then dump rest into first string
    if (i < k) {
	return string(1, s[k-1]);
    }


    // 2 chars
    // first letter is perfectly balanced, so rely on last char
    if (s[i] == s[n-1] && i==k) {
	string suffix = string(divceil(n-k, k), s[i]);
	return s[0] + suffix;
    }


    // take first char, then dump rest on us
    return s[0] + s.substr(k);
}



int main() {
    ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);

    int t; cin>>t;
    while (t--) {
	cout<<solve()<<"\n";
    }
  

    return 0;
}
