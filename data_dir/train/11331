#include<bits/stdc++.h>
using namespace std;
long long a,s,d[200002],f[200002],f1[200002],g,h,j,k,l,i,n,m,mod=1000000007;
vector<int> v[200002];
void dfs(int idx,int par){
    f[idx]++;
    f1[idx]++;
    for(auto it:v[idx]){
        if(it==par) continue;
        dfs(it,idx);
        f[idx]-=f[it];
        f1[idx]+=f1[it];
    }
    //k+=d[idx]*f[idx]*(n+1-f[idx]);
    for(auto it:v[idx]){
        if(it==par) continue;
        k=1ll*(k-f[it]*(n-f1[it])*d[idx])%mod;
    }//cout<<" "<<idx<<" "<<k<<endl;
    k=(k+(n)*d[idx])%mod;//cout<<" "<<idx<<" "<<k<<endl;

    return;
}

void df1(int idx,int par,int ze){
    k=(k+ze*f1[idx]*d[idx])%mod;//cout<<"*"<<idx<<" "<<k<<" "<<ze<<" "<<f[idx]<<" "<<f1[idx]<<endl;
    for(auto it:v[idx]){
        if(it!=par)df1(it,idx,-ze-f[idx]-f[it]);
    }
}
main(){
    cin>>n;
    for(i=1;i<=n;i++){
        cin>>d[i];
    }
    for(i=0;i<n-1;i++){
        cin>>a>>s;
        v[a].push_back(s);
        v[s].push_back(a);
    }

    dfs(1,0);
    df1(1,0,0);
    cout<<(k+mod)%mod;
}
