#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <functional>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <ll, int> pli;
typedef pair <db, db> pdd;
typedef vector<int> vi;
#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
#define sz(x) (int)(x.size())
#define ff first
#define ss second
#define endl "\n"
#define int  long long int
#define debug(x) (cerr << #x << ": " << x << "\n")
#define setbits(x) __builtin_popcount(x)
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p;}
const ll hell =987654319;
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;

typedef tree<int, null_type, less<int>, rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;


int32_t main()
{
    IOS;
    int n,k;
    cin>>n>>k;
    int l[n],r[n];pair<int,int> p[n];
    for(int i=0;i<n;i++)
    {
        cin>>l[i]>>r[i];
        p[i].first=l[i];
        p[i].second=i;
    }
    sort(p,p+n);vector<int>ans;int in;set<pair<int,int> >s;
    set<pair<int,int> >::iterator it;
    int diff;
    for(int i=0;i<n;i++)
    {
        
        in=p[i].second;
        while(!s.empty()&&(r[(*s.begin()).second]<l[in]))
            s.erase(s.begin());
        s.insert(m1(r[in],in));
        if(s.size()>k)
        {
            diff=s.size()-k;
            while(!s.empty()&&diff>0)
            {
                diff--;
                it=(--s.end());
                ans.pb((*it).second);
                s.erase(it);
            }
        }
    }
    cout<<ans.size()<<endl;
    for(int i=0;i<ans.size();i++)
        cout<<ans[i]+1<<" ";
    cout<<endl;
    return 0;
}

