// in the name of Allah

#include <bits/stdc++.h>

#define endl '\n'
#define mod 1000000007
#define sz(x) ((int) (x.size()))
#define deb(x) cout << #x << " " << x << endl

using namespace std;

int n, m;
int ct[3003];
vector <long long> g[3003];

bool okay() {
	for(int i=2; i<=m; i++) if(ct[1] <= ct[i]) return 0;
	return 1;
}

long long get(int up) {
	long long sum = 0;
	multiset <long long> st;
	for(int i=1; i<=m; i++) ct[i] = sz(g[i]);
	for(int i=2; i<=m; i++) {
		for(int j=0; j<sz(g[i]); j++) {
			if(ct[i] >= up) {
				sum += g[i][j];
				ct[i]--;
				ct[1]++;
			}
			else {
				st.insert(g[i][j]);
			}
		}
	}
	while(ct[1] < up) {
		if(sz(st) == 0) break;
		long long x = *st.begin();
		st.erase(st.find(x));
		sum += x;
		ct[1]++;
	}
	if(ct[1] >= up) return sum;
	return 1e18+1;
}

int main() {
	ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	int x, y;
	cin >> n >> m;
	memset(ct, 0, sizeof ct);
	for(int i=0; i<n; i++) {
		cin >> x >> y;
		ct[x]++;
		g[x].push_back(y);
	}
	if(okay()) {
		cout << 0 << endl;
		return 0;
	}
	for(int i=2; i<=m; i++) sort(g[i].begin(), g[i].end());
	long long sum = 1e18;
	for(int no=n; no>0; no--) sum = min(sum, get(no));
	cout << sum << endl;
	return 0;
}