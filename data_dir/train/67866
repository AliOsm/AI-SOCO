#include<bits/stdc++.h>

#define ll long long int
using namespace std;

const int N = 2e5 + 100;
int x[N], y[N];
vector<pair<int, int>> w[4][N + N];

int main() {
#ifdef HOME
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    int n;
    scanf("%d", &n);

    for (int i = 0; i < n; i++)
        scanf("%d%d", &x[i], &y[i]);

    ll ans = 0;

    for (int par = 0; par < 2; par++) {
        for (int i = 0; i < N + N; i++) {
            for (int j = 0; j < 4; j++) {
                w[j][i].clear();
            }
        }
        for (int i = 0; i < n; i++) {
            int nx = x[i] + y[i] + N,
                    ny = x[i] - y[i] + N;

            if (abs(nx) % 2 == par) {
                w[0][nx + 1].emplace_back(ny + 1, 1);
                w[1][1 - par].emplace_back(ny + 1, 1);
                w[1][nx + 1].emplace_back(ny + 1, 0);

                w[2][nx + 1].emplace_back(ny - 1, 1);
                w[3][1 - par].emplace_back(ny - 1, 1);
                w[3][nx + 1].emplace_back(ny - 1, 0);
            }
        }
        multiset<int> s[4];
        s[0].insert(N + N);
        s[1].insert(N + N);
        s[2].insert(0);
        s[3].insert(0);
        for (int i = 1 - par; i < N + N; i += 2) {
            for (int j = 0; j < 4; j++) {
                for (auto p : w[j][i]) {
                    if (p.second)
                        s[j].insert(p.first);
                    else
                        s[j].erase(s[j].find(p.first));
                }
            }
            int a = min(*s[2].rbegin(), *s[3].rbegin()),
                    b = max(*s[0].begin(), *s[1].begin()),
                    len = a - b;
            if (len >= 0) {
                ans += len / 2 + 1;
            }
        }
    }

    printf("%lld\n", ans);


    return 0;
}