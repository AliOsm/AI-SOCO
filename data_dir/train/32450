#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<vector>
#include<sstream>
#include<set>
#include<map>
#include<queue>
#include<algorithm>
#include<numeric>
#include<cassert>

using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
typedef vector<string> vs;

string str;
int idx;
string nextToken(){
	if(idx==str.size())return "";
	while(idx<str.size()&&str[idx]==' ')idx++;
	if(isalnum(str[idx])){
		int s=idx;
		while(idx<str.size()&&isalnum(str[idx]))idx++;
		return str.substr(s,idx-s);
	}
	return string(1,str[idx++]);
}

map<string,char> m;
string token;
char expr(), addend(), multiplier();

char expr(){
	char r=addend();
	while(token=="+"||token=="-"){
		string t=token;
		char k=addend();
		if(k=='x'||t=="-"&&k=='+')r='x';
		if(r!='x')r='+';
	}
	return r;
}
char addend(){
	char r=multiplier();
	while(token=="*"||token=="/"){
		string t=token;
		char k=multiplier();
		if(r=='+'||k=='+'||k=='x'||t=="/"&&k=='*')r='x';
		if(r!='x')r='*';
	}
	return r;
}
char multiplier(){
	token=nextToken();
	if(token=="("){
		char r=expr();
		token=nextToken();
		return r=='x'?r:'o';
	}
	else{	
		string name=token;
		token=nextToken();
		if(m.count(name))return m[name];
		return 'o';
	}
}
void run(){
	int n; getline(cin,str);
	n=atoi(str.c_str());
	
	rep(i,n){
		getline(cin,str); idx=0;
		nextToken(); nextToken();
		string name=nextToken();
		m[name]=expr();
	}
	getline(cin,str); idx=0;
	cout<<(expr()=='x'?"Suspicious":"OK")<<endl;
}

int main(){
	//int T=3; rep(U,T)
	run();
	return 0;
}
