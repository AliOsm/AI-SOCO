#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define f(i, x, n) for(int i = x; i < (int)(n); ++i)

int const N = 50;
int g[5][N + 1], vis[N << 1 | 1], vs, n, k;
vector<pair<int, pair<int, int> > > an;

inline void ad(int id, int i, int j) { an.push_back(make_pair(id, make_pair(i, j))); }

void kl(int i, int j){
	if (i == 2){
		if (g[i][j] == g[i - 1][j])ad(g[i][j], i - 1, j), g[i][j] = 0, --k;
	}else {
		if (g[i][j] == g[i + 1][j])ad(g[i][j], i + 1, j), g[i][j] = 0, --k;
	}
}

void chk(){
	f(i, 2, n + 1)if (g[2][i] && vis[g[2][i]] != vs && g[2][i - 1] == 0)ad(g[2][i], 2, i - 1), swap(g[2][i], g[2][i - 1]), vis[g[2][i - 1]] = vs;
	if (g[3][n] && vis[g[3][n]] != vs && g[2][n] == 0)ad(g[3][n], 2, n), swap(g[3][n], g[2][n]), vis[g[2][n]] = vs;
	for (int i = n - 1; i >= 1; --i)if (g[3][i] && vis[g[3][i]] != vs && g[3][i + 1] == 0)ad(g[3][i], 3, i + 1), swap(g[3][i], g[3][i + 1]), vis[g[3][i + 1]] = vs;
	if (g[2][1] && vis[g[2][1]] != vs && g[3][1] == 0)ad(g[2][1], 3, 1), swap(g[3][1], g[2][1]), vis[g[3][1]] = vs;
}

void klAll(){
	f(i, 1, n + 1)if (g[2][i])kl(2, i);
	f(i, 1, n + 1)if (g[3][i])kl(3, i);
}

int main(){
	scanf("%d%d", &n, &k);
	f(i, 1, 5)f(j, 1, n + 1)scanf("%d", g[i] + j);
	if (k == n << 1){
		klAll();
		if (k == n << 1) { printf("-1\n"); return 0; }
	}
	klAll();
	while (k){
		++vs;
		chk();
		klAll();
	}
	printf("%d\n", (int)an.size());
	f(i, 0, an.size())printf("%d %d %d\n", an[i].first, an[i].second.first, an[i].second.second);
}