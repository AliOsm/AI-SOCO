#include <iostream>
#include <algorithm>
#include <vector>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <stack>
#include <cstring>
#include <queue>
#include <set>
#include <cstdlib>
#include <fstream>
#include <map>

using namespace std;

#define mp make_pair
#define F first
#define S second

typedef long long ll;
typedef long double ld;

int a[555][555];
int b[555][555];
int v[555][555];
int n, m, q;

int getA (int x1, int y1, int x2, int y2) {
    int cnt = a[x2][y2] - a[x1-1][y2] - a[x2][y1-1] + a[x1-1][y1-1];
    return cnt;
}

int getB (int x1, int y1, int x2, int y2) {
    int cnt = b[x2][y2] - b[x1-1][y2] - b[x2][y1-1] + b[x1-1][y1-1];
    return cnt;
}

int main() {
//    freopen ("input.txt", "r", stdin);
    scanf ("%d%d\n", &n, &m);
    for (int i = 1; i <= n; i ++) {
        for (int j = 1; j <= m; j ++) {
            char x;
            scanf ("%c", &x);
            if (x == '.') v [i][j] = 1;
        }
        scanf ("\n");
    }
    for (int i = 1 ; i <= n; i ++)  {
        for (int j = 1; j <= m; j ++) {
            if (v[i][j] && v[i][j+1]) a[i][j] ++;
            if (v[i][j] && v[i+1][j]) b[i][j] ++;
        }
    }
    for (int i = 1; i <= n; i ++) {
        for (int j = 1; j <= m; j ++) {
            a[i][j] = a[i][j] + a[i-1][j] + a[i][j-1] - a[i-1][j-1];
            b[i][j] = b[i][j] + b[i-1][j] + b[i][j-1] - b[i-1][j-1];
        }
    }
    scanf ("%d", &q);
    while (q -- ) {
        int x1, y1, x2, y2;
        scanf ("%d%d%d%d", &x1, &y1, &x2, &y2);
        int cnt = getA (x1, y1, x2, y2-1) + getB (x1, y1, x2-1,y2);
        printf ("%d\n", cnt);
    }
    return 0;
}
