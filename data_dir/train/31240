#define  _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<map>
#include<cmath>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<cmath>
#include<stack>
#include<math.h>
#include<set>
#include<string>
#include<cstring>
#include<queue>
#include<complex>	
#include<math.h>
#include<memory.h>
#include<sstream>	
#include<cstdio>
using namespace std;


#define rep(i,n) for(int i=0;i<n;i++)
#define repi(i,a,n) for(int i=a;i<n;i++)
#define inf (0x7fffffff)
#define mp make_pair
#define read freopen("in.in","r",stdin)
#define write freopen("out.out","w",stdout)
#define scf(xx) scanf("%d",&xx)
typedef  long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef   double ld;

bool g[1001][1001]={false};
int n,m;
bool in_range(int x,int y){
    return x>=0 && x<n && y>=0 && y< m; 
}
int main(){
    //read;
    //write;
    memset(g,false,sizeof g);
    
    cin>>n>>m;
    int k; cin>>k;
    rep(i,k){
        int x,y;
        cin>>x>>y;
        x-- , y--;
        g[x][y]=1;
        int x1,y1,x2,y2,x3,y3;
        x1=x-1 ; y1=y-1;
        x2= x-1 ; y2=y ; 
        x3= x; y3=y-1;
        if (in_range(x1,y1) && in_range(x2,y2) && in_range(x3,y3) && g[x1][y1] && g[x2][y2] && g[x3][y3] ){
            cout<<i+1;
            return 0;
        }
        x1=x-1 ; y1=y+1;
        x2= x-1 ; y2=y ; 
        x3= x; y3=y+1;
        if (in_range(x1,y1) && in_range(x2,y2) && in_range(x3,y3) && g[x1][y1] && g[x2][y2] && g[x3][y3] ){
            cout<<i+1;
            return 0;
        }
        x1=x+1 ; y1=y-1;
        x2= x+1 ; y2=y ; 
        x3= x; y3=y-1;
        if (in_range(x1,y1) && in_range(x2,y2) && in_range(x3,y3) && g[x1][y1] && g[x2][y2] && g[x3][y3] ){
            cout<<i+1;
            return 0;
        }
        x1=x+1 ; y1=y+1;
        x2= x+1 ; y2=y ; 
        x3= x; y3=y+1;
        if (in_range(x1,y1) && in_range(x2,y2) && in_range(x3,y3) && g[x1][y1] && g[x2][y2] && g[x3][y3] ){
            cout<<i+1;
            return 0;
        }
    }
    cout<<0;
    return 0;
    
}
