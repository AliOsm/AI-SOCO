#include <bits/stdc++.h>

#define pb push_back
#define all(x) (x).begin(), (x).end()
#define sqr(x) (x).begin(), (x).end()
#define mp make_pair

using namespace std;

typedef long long ll;
typedef unsigned long long ull;

const int MAXN = 1e3+5;
const int INF = 2e9;
const int MOD = 1e9+7;

char arr[MAXN][MAXN];
bool dp[MAXN][MAXN][3][4];
int N, M;

int dx[] = {0, 1, 0, -1};
int dy[] = {1, 0, -1, 0};

bool inRange(pair <int,int> cords){
  return cords.first > 0 && cords.first <= N && cords.second > 0 && cords.second <= M && arr[cords.first][cords.second] != '*';
}

void calc(pair <int,int> cords, int move, int dir){
  if (move > 2 || !inRange(cords)) return;
  if (dp[cords.first][cords.second][move][dir] != false) return;
  
  dp[cords.first][cords.second][move][dir] = true;
  
  for (int i = 0; i < 4; i++){
    if (i != dir)
      calc(mp(cords.first + dx[i], cords.second + dy[i]), move + 1, i);
    else
      calc(mp(cords.first + dx[i], cords.second + dy[i]), move, i);
  }
  
}

int main(){
  scanf("%d %d", &N, &M);
    
  for (int i = 1; i <= N; i++)
    for (int j = 1; j <= M; j++)
      scanf(" %c", &arr[i][j]);
  
  pair <int, int> ST, FIN;
  
  for (int i = 1; i <= N; i++)
    for (int j = 1; j <= M; j++){
      if (arr[i][j] == 'S') ST = mp(i, j);
      if (arr[i][j] == 'T') FIN = mp(i, j);
      
      for (int k = 0; k < 3; k++)
        for (int ii = 0; ii < 4; ii++)
          dp[i][j][k][ii] = false;
      
    }
  
  for (int i = 0; i < 4; i++)
    calc(ST, 0, i);
    
  for (int i = 0; i < 3; i++)
    for (int j = 0; j < 4; j++)
      if (dp[FIN.first][FIN.second][i][j] == true)
        return printf("YES"), 0;
  
  printf("NO");
  return 0;
}