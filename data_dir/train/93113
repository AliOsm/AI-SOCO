#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
using namespace std;
#define N (int)1e5+5
int a[N];
int dp[N][22];
int dp1[N][22];
int n;
void pre(){
    mem(dp,0x7F);
    int i,j;
    for(j=0;j<n;j++)
        dp[j][0]=a[j];
    for(i=1;(1<<i)<=n;i++){
        for(j=0;j+(1<<i)-1<n;j++){
            dp[j][i]=min(dp[j][i-1],dp[j+(1<<(i-1))][i-1]);
        }
    }
}
void pre1(){
    mem(dp1,0);
    int i,j;
    for(j=0;j<n;j++)
        dp1[j][0]=a[j];
    for(i=1;(1<<i)<=n;i++){
        for(j=0;j+(1<<i)-1<n;j++){
            dp1[j][i]=max(dp1[j][i-1],dp1[j+(1<<(i-1))][i-1]);
        }
    }
}
int query(int i,int j){
    int k=(j-i+1);
    int p=0;
    while((1<<p)<=k)p++;
    p--;
    if(dp[i][p]<=dp[j-(1<<p)+1][p])
        return dp[i][p];
    else
        return dp[j-(1<<p)+1][p];
}
int query1(int i,int j){
    int k=(j-i+1);
    int p=0;
    while((1<<p)<=k)p++;
    p--;
    if(dp1[i][p]>=dp1[j-(1<<p)+1][p])
        return dp1[i][p];
    else
        return dp1[j-(1<<p)+1][p];
}
int main(){
    cin>>n;
    int i,j;
    for(j=0;j<n;j++){
        cin>>a[j];
    }
    pre();
    pre1();
    int ans=0;
    for(j=0;j<n;j++){
        int l=0,r=j;
        while(l<r){
            int mid=(l+r)>>1;
            if(abs(query(mid,j)-query1(mid,j))>=2){
                l=mid+1;
            }
            else
                r=mid;
        }
        int L=l;
        l=L;
        r=n-1;
        while(l<r){
            int mid=(l+r+1)>>1;
            if(abs(query1(L,mid)-query(L,mid))>=2){
                r=mid-1;
            }
            else
                l=mid;
        }
        int R=l;
        ans=max(ans,R-L+1);
    }
    cout<<ans;
    return 0;
}
