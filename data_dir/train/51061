#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=2e5+10;
const uli inf=1e18;
vector<int>g[mx];
vector<uli>w[mx];
uli ds[mx];
struct node{
  int u;
  uli w;
  node(int u,uli w):u(u),w(w){}
  bool operator <(node n)const{
    return w>n.w;
  }
};
void dij(int u){
  fill(ds,ds+mx,inf);
  priority_queue<node>q;
  q.push(node(u,0ll));
  ds[u]=0;
  while(!q.empty()){
    u=q.top().u;
    uli wu=q.top().w;
    q.pop();
    if(ds[u]!=wu)continue;
    for(int i=0;i<int(g[u].size());i++){
      int v=g[u][i];
      uli bet=wu+w[u][i];
      if(bet<ds[v]){
        ds[v]=bet;
        q.push(node(v,bet));
      }
    }
  }
}
void add(int u,int v,uli c){
  g[u].push_back(v);
  w[u].push_back(c);
}
int main(){
  int n,m;
  scanf("%d %d",&n,&m);
  while(m--){
    int u,v;
    uli c;
    scanf("%d %d %lld",&u,&v,&c);
    add(u,v,c+c);
    add(v,u,c+c);
  }
  for(int i=1;i<=n;i++){
    uli ai;
    scanf("%lld",&ai);
    add(0,i,ai);
    add(i,0,ai);
  }
  dij(0);
  for(int i=1;i<=n;i++)printf("%lld ",ds[i]);
  return 0;
}
