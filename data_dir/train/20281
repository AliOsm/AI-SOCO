#include <iostream>
#include <set>
#include <map>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>

using namespace std;

typedef long long ll;
const int MOD = 1e9 + 7;


int to[300000];
bool seen[300000];

void dfs(int node){
    seen[node] = true;
    
    
    if( !seen[ to[node] ] ) 
        dfs( to[node] );
    
}
int main() {

    int n; cin >> n;
    
    for(int i = 1; i <= n; i++)
        cin >> to[i];
        
    int ans = 0;
    int tot_b = 0;
    for(int i = 1; i <= n; i++)
    {
        int b; cin >> b;
        
        tot_b += b;
    }
    
    
    
    if(tot_b % 2 == 0)
        ans++;
    
    int components = 0;
    for(int i = 1; i <= n; i++){
        if( seen[i] ) continue;
        
        dfs(i);
        components++;
    }    
    
    
    if(components > 1)
        ans += (components);
    
    cout << ans << endl;
    
	return 0;
}
