//raja1999
#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx


using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define iinf (3000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >

//std::ios::sync_with_stdio(false);
ll x[100005],a[100005],b[100005];
vii v1,v2;
int main(){
	std::ios::sync_with_stdio(false);
	int n,s,i,val1,c=0;
	ll val=0;
	ll x1=0,x2=0,y1=0,y2=0,y3=0;
	ll ans=-100;
	cin>>n>>s;
	rep(i,n){
		cin>>x[i]>>a[i]>>b[i];
		val+= x[i];
	}	
	if(val%s==0){
		val=val/s;
	}
	else{
		val=val/s+1;
	}
	x1=0;
	x2=0;
	rep(i,n){
		if(a[i]>b[i]){
			x1+=x[i];
			y1+=x[i]*a[i];
			v1.pb(mp(b[i]-a[i],i));
		}
		else{
			x2+=x[i];
			y2+=x[i]*b[i];
			v2.pb(mp(a[i] -b[i],i));
		}
	}
	sort(v1.rbegin(),v1.rend());
	sort(v2.rbegin(),v2.rend());
	if(x1%s==0||x2%s==0){
		cout<<y1+y2<<endl;
	}
	else{
		if(x1%s+x2%s>s){
			cout<<y1+y2<<endl;
		}
		else{
			val1=0;
			y3=y1;
			c=0;
			int fl=0;
			int c1=x[v1[val1].ss];
			while(1){
				while(c1--){
					
					c++;
					y3+=v1[val1].ff;//a[v1[val1].ss]);
					if(c==x1%s){
						fl=1;
						break;
					}
				}
				
				if(fl==1){
					break;
				}
				val1++;
				c1=x[v1[val1].ss];
			}
			fl=0;
			ans=y3+y2;
			val1=0;
			c=0;
			c1=x[v2[val1].ss];
			while(1){
				while(c1--){
				
				c++;
				y2+=v2[val1].ff;
					if(c==x2%s){
						fl=1;
						break;
					}
				}
				
				if(fl==1)
					break;
				val1++;
				c1=x[v2[val1].ss];
			}
			ans=max(ans,y1+y2);
			cout<<ans<<endl;

		}
	}
} 
