#define _CRT_SECURE_NO_WARNINGS
#include <cstdio>
#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
#include <map>
#include <iterator>
#include <functional>
#include <set>
#include <stack>
#include <queue>
#include <deque>
#include <fstream>
#include <iomanip>
#include <unordered_map>
#include <unordered_set>
#include <numeric>
#include <cmath>
#include <list>
#include <sstream>
#include <tuple>

#define FOR(i,a,b) for(int i = (a); i < (b); ++i)
#define RFOR(i,b,a) for(int i = (b) - 1; i >= (a); --i)
#define REPEAT(i) FOR(counter1234,0,i)
#define iter(el, arr) for(auto& el : arr)
#define ALL(a) a.begin(), a.end()

#define ld long double
#define ll long long
#define pii pair<int, int>
#define pll pair<ll,ll>
#define MP make_pair
#define MT make_tuple
#define SZ(a) ll((a).size())
#define X first
#define Y second

#define endl '\n'
#define PB push_back
#define has(i, m) (m.find(i) != m.end())

#define vi vector<int>
#define vll vector<ll>
#define vld vector<ld>
#define vch vector<char>
#define vvi vector<vi>
#define vvll vector<vll>
#define vpii vector<pii>
#define vpll vector<pll>
#define vb vector<bool>
#define vvb vector<vb>
#define vs vector<string>
#define pdd pair<ld, ld>
#define vpll vector<pll>
#define vpdd vector<pdd>
#define pq priority_queue
#define mod 1000000007
using namespace std;

const ll INF = 1e18;
const ll MAXN = 51;

ll power(ll n, ll to, ll modulo = mod)
{
	ll res = 1;
	while (to)
	{
		if (to&1)
			res = (res*n) % modulo;
		n = (n*n) % modulo;
		to >>= 1;
	}
	return res;
}

char f[MAXN][MAXN];

int main()
{
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	//freopen("In.txt", "r", stdin);
	//freopen("Out.txt", "w", stdout);
		
	int n, m;
	cin >> n >> m;
	FOR(i, 0, n)
		FOR(j, 0, m)
		cin >> f[i][j];

	ll p2[51];
	p2[0] = 1;
	FOR(i, 1, 51)
		p2[i] = 2LL * p2[i - 1];

	ll ans = 0;

	int b, w;
	FOR(i, 0, n)
	{
		b = w = 0;
		FOR(j, 0, m)
			if (f[i][j] == '1')
				b++;
			else
				w++;
		
		ans += (p2[b] - 1);
		ans += (p2[w] - 1);
	}

	FOR(i, 0, m)
	{
		b = w = 0;
		FOR(j, 0, n)
			if (f[j][i] == '1')
				b++;
			else
				w++;

		ans += (p2[b] - 1);
		ans += (p2[w] - 1);
	}

	ans -= (m*n);
	cout << ans;
	return 0;
}