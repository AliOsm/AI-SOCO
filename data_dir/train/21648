#include <iostream>
#include <cctype>
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <fstream>


#define c0 ios_base :: sync_with_stdio(0); cin.tie (0);
#define ll long long
#define ull unsigned long long
#define ff first
#define ss second
#define sz(a) int(a.size())

#define FNAME ""

#define mp make_pair
#define pb push_back

#define pii pair < int, int >
#define pll pair < ll, ll >

using namespace std;

const int N = 1e5 + 17;
const int INF = 1e9 + 7;
const int MOD = 1e8 + 7;
const double eps = 1e-9;
const double pi = 3.14159265359;

int a[111], b[111], used[111];
int idx = 0;

void dfs(int v){
    used[v] = 1;
    for(int i = 0; i < idx; i++){
        if(used[i]) continue;
        if(a[v] > a[i] && a[v] < b[i]) dfs(i);
        else if(a[i] < b[v] && b[v] < b[i]) dfs(i);
    }
}

inline void solve(){
    int q;
    cin >> q;
    for(int i = 0, t, x, y; i < q; i++){
        cin >> t;
        if(t == 1) {
            cin >> a[idx] >> b[idx];
            idx++;
        }
        else {
            memset(used, 0, sizeof used);
            cin >> x >> y;
            dfs(x-1);
            if(used[y-1]) cout << "YES\n";
            else cout << "NO\n";
        }
    }

}

int T = 1;

int main() {
    c0
    while(T--) {
        solve();
    }
    return 0;
}
