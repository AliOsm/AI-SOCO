//============================================================================
// Name        : wuyiqi.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================
#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <cstring>
#include <cstdio>
#include <string>
#include <vector>
#include <cmath>
#include <stack>
#include <queue>
#include <map>
#include <set>
typedef long long lld;

const int inf = ~0u>>2;
const int maxn = 100010;

using namespace std;
int c[110];
int num[110][110];
int x[3000];
int y[3000];
struct pp{
    int a,b,c,d;
}ans[maxn];
int main() {
    int n;
    cin>>n;
    for(int i=1;i<=n;i++) cin>>c[i];
    for(int i=1;i<=n;i++) {
        for(int j=1;j<=c[i];j++) {
            cin>>num[i][j];
            x[num[i][j]] = i;
            y[num[i][j]] = j;
        }
    }
    int cnt=0,sum=0;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=c[i];j++) {
            int goal = sum+j;
            if(num[i][j] != goal) {

                ans[cnt].a=x[num[i][j]];
                ans[cnt].b=y[num[i][j]];
                ans[cnt].c=x[goal];
                ans[cnt].d=y[goal];
                //printf("i=%d j=%d %d %d %d %d\n",i,j,ans[cnt].a,ans[cnt].b,ans[cnt].c,ans[cnt].d);
                int tx=x[goal];
                int ty=y[goal];
                x[goal] = i;
                y[goal] = j;
                x[num[i][j]] = tx;
                y[num[i][j]] = ty;
                num[tx][ty] = num[i][j];
                num[i][j]=goal;
                cnt++;

            }
        }
        sum+=c[i];
    }
    printf("%d\n",cnt);
    for(int i=0;i<cnt;i++) {
        printf("%d %d %d %d\n",ans[i].a,ans[i].b,ans[i].c,ans[i].d);
    }
   /* for(int i=1;i<=n;i++) {
        for(int j=1;j<=c[i];j++) {
            printf("%d ",num[i][j]);
        }
        puts("");
     }*/
    return 0;
}








