#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <stack>
#include <set>
#include <iomanip>
#include <queue>
#include <map>
#include <functional>
#include <memory.h>
#include <list>
#include <sstream>
#include <ctime>
#include <climits>
#include <bitset>
#include <list>
#include <cassert>
#include <complex>

using namespace std;

/* Constants begin */
const long long inf = 1e18+7;
const long long mod = 1e9+7;
const double eps = 1e-12;
const double PI = 2*acos(0.0);
const double E = 2.71828;
/* Constants end */

/* Defines begin */
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define forn(i,n) for (ll (i)=0;(i)<(ll)(n);(i)++)
#define random (rand()<<16|rand())
#define sqr(x) (x)*(x)
#define base complex<double>
/* Defines end */

int n, k, l, r, s1, s2;

int ans[1005];

int main(void) {
  #ifndef ONLINE_JUDGE
      freopen("input.txt", "rt", stdin);
      freopen("output.txt", "wt", stdout);
  #endif
  cin >> n >> k >> l >> r >> s1 >> s2;
  forn(i, n){
    ans[i] = l;
  }
  s1 -= l * n;
  s2 -= l * k;
  s1 -= s2;
  while(s1 > 0){
    for(int i = k; i < n; ++i){
      if(s1 > 0){
        ++ans[i];
        --s1;
      }
    }
  }
  while(s2 > 0){
    for(int i = 0; i < k; ++i){
      if(s2 > 0){
        ++ans[i];
        --s2;
      }
    }
  }
  forn(i, n){
    printf("%d ", ans[i]);
  }
  printf("\n");
  return 0;
}
