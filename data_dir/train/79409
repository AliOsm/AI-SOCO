#include <iostream>
#include <iomanip>
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <string>
#include <assert.h>
#include <ctype.h>
#include <limits.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <bitset>
#include <deque>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <numeric>
using namespace std;

typedef long long ll;

const int N = 2e5;
int n, a[N], m, k;
vector<int> at[N];

int BS(int s) {
	int v = a[s];
	int p = lower_bound(at[v].begin(), at[v].end(), s) - at[v].begin();
	int l = p, r = (int)at[v].size() - 1, res = p;
	while (l <= r) {
		int mid = (l + r) >> 1;
		int need = at[v][mid] - s + 1 - (mid - p + 1);
		if (need <= k) {
			res = mid;
			l = mid + 1;
		} else
			r = mid - 1;
	}
	return res - p + 1;
}

int main(int argc, char **argv) {
//	freopen("in.txt", "r", stdin);
	scanf("%d%d%d", &n, &m, &k);
	for (int i = 0; i < n; ++i) {
		scanf("%d", &a[i]);
		at[a[i]].push_back(i);
	}
	int res = 0;
	for (int i = 0; i < n; ++i)
		res = max(res, BS(i));
	printf("%d\n", res);
	return 0;
}