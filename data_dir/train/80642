#include "bits/stdc++.h"
#define MAXN 100009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(__typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second
#define my_little_dodge 46
#define debug(x)  cerr<< #x <<" = "<< x<<endl;
using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
const int N=3e2+9;
string last,tmp;
int sz,dp[N+40][N][2],way[N+40][N][2];
void create(int len,int x){
	umax(len,(x+8)/9);
	string now;x--;
	for(int i=len;i>1;i--){
		if(x>=9)
			now+='9',x-=9;
		else{
			now+=x+'0';
			x=0;
		}
	}now+='1'+x;reverse(all(now));
	last=now;
}
int rec(int pos,int sum,int big){
	if(pos==sz)
		return (!sum and big);	
	int &ret=dp[pos][sum][big];
	if(~ret)
		return ret;ret=0;
	if(!big){
		for(int i=last[pos]-'0';i<10;i++)	
			if(sum-i>=0 and rec(pos+1,sum-i,(i!=last[pos]-'0'))){
				way[pos][sum][big]=i;
				return ret=1;
			}
		return ret;
	}	
	for(int i=0;i<10;i++)
		if(sum-i>=0 and rec(pos+1,sum-i,1)){
			way[pos][sum][big]=i;
			return ret=1;
		}
	return ret=0;		
}
bool solve(int x){
	sz=last.size();
	for(int i=0;i<=sz;i++)
		for(int j=0;j<=x;j++)
			for(int k=0;k<2;k++)
				dp[i][j][k]=-1;
	return rec(0,x,0);
}
void rep(int pos,int sum,int big){
	if(pos==sz){
		assert(!sum and big);
		return;
	}
	tmp+='0'+way[pos][sum][big];
	rep(pos+1,sum-way[pos][sum][big],big|(last[pos]-'0'<way[pos][sum][big]));
}
int main(){
    //~ freopen("file.in", "r", stdin);
	int n,x;
	scanf("%d%d",&n,&x);n--;
	create(0,x);puts(last.c_str());
	while(n--){
		scanf("%d",&x);
		if(solve(x)){
			rep(0,x,0);
			last=tmp;tmp.clear();
		}
		else
			create(last.size()+1,x);
		puts(last.c_str());
	}
	return 0;
}
