#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define ll long long
#define pii pair<int, int>

const int MAX = 1010;
bool used[MAX];
const ll mod = 1000000007ll;
ll pot[MAX], f[MAX];

ll mpow(ll n, ll p) {
	if(p == 0) return 1;
	ll aux = mpow(n, p/2);
	aux = (aux*aux)%mod;
	if(p%2 == 1) aux = (aux * n)%mod;
	return aux;
}

ll inv(ll n) {
	return mpow(n, mod - 2);
}


void init() {
	pot[0] = 1;
	for(int i = 1; i < MAX; i++)
		pot[i] = (2ll * pot[i - 1])%mod;
	f[0] = 1;
	for(ll i = 1; i < MAX; i++) {
		f[i] = (i*f[i - 1])%mod;
	}
}

int main() {
	init();
	int n, m; scanf("%d %d", &n, &m);

	if(n == 1) {
		printf("1\n");
		exit(0);
	}
	
	REP(i, m) {
		int v; scanf("%d", &v);
		used[v] = true;
	}
	ll ans = 1;
	vector<int> data;
	int total = 0;
	int i = 1;
	while(i <= n) {
		if(!used[i]) {
			int cnt = 0;
			int j = i;
			while(j + 1 <= n && !used[j + 1]) j++;
			if(i != 1) cnt++;
			if(j != n) cnt++;
			if(cnt == 2) {
				ans = (ans * pot[j - i])%mod;
			}
			data.pb(j - i + 1);
			total += j - i + 1;
			i = j;
		}
		i++;
	}

	ans = (ans * f[total])%mod;
	REP(i, SIZE(data)) {
		ans = (ans * inv(f[data[i]]))%mod;
	}
	printf("%lld\n", ans);
}