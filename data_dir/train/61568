#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define PB push_back
#define all(x) x.begin(), x.end()

typedef long long ll; 
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

const int N = 2000 * 100 + 10; 
int mod = 1000 * 1000 * 1000 + 7;

vector<pair<int, pii>> edges;

int sz[N], par[N];

int root(int x)
{
	return (par[x] == -1 ? x : par[x] = root(par[x]));
}


ll sum = 0;

bool mrg(int x, int y)
{
	x = root(x), y = root(y);
	if(x == y) return 0;
	sum += 1ll * sz[x] * sz[y];
	par[x] = y;
	sz[y] += sz[x];
	return 1;
}

ll ans[N];

int32_t main(int argc, char* argv[])
{
	ios::sync_with_stdio(0); cin.tie(0);
	memset(par, -1, sizeof par);
	for(int i = 0; i < N; i++) sz[i] = 1;
	int n, q;
	cin>> n >> q;
	for(int i = 1; i < n; i++)
	{
		int x, y, z;
		cin>> x >> y >> z;
		edges.PB({z, {x, y}});
	}
	sort(edges.begin(), edges.end());
	memset(ans, -1, sizeof ans);
	int prv = -1;
	for(auto u : edges)
	{
		int w = u.F, x = u.S.F, y = u.S.S;
		mrg(x, y);
		ans[w] = sum;
		//cout<< w << ' ' << s << endl;
	}
	ans[0] = 0;
	for(int i = 1; i < N; i++) if(ans[i] == -1) ans[i] = ans[i - 1];
	for(int i = 0; i < q; i++)
	{
		int x;
		cin>> x;
		cout<< ans[x] << " \n"[i == q - 1];
	}
}
