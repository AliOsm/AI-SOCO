#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
#include <string>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
const int mod = 1000000007;

int main() {
    ios::sync_with_stdio(false);
    int n, k, c = -1, d;
    string s;
    cin >> n >> k >> s; s += s + s;
    for (int i = 0; i < n; i++) if (s[i] == s[i + 1]) {c = i; break;}
    if (c == -1) {
        if (k % 2) cout << s.substr(1, n);
        else cout << s.substr(0, n);
        return 0;
    }
    d = c;
    while (d < n + n && s[d] == s[d + 1]) d++;
    if (d == n + n) {
        cout << s.substr(0, n);
        return 0;
    }
    c = d;
    while (d < c + n) {
        int e = d;
        while (s[e] != s[e + 1]) e++;
        //cout << d + 1 << ' ' << e - 1 << '\n';
        if (d + 1 <= e - 1) {
            if (s[d] == s[e]) {
                for (int i = d + 1; i <= min(e, d + k); i++) s[i] = s[d];
                for (int i = d + k + 1; i < e - k; i++) {
                    if (s[d] == 'B') {
                        if (i % 2 == (d + k) % 2) s[i] = 'B';
                        else s[i] = 'W';
                    } else {
                        if (i % 2 == (d + k) % 2) s[i] = 'W';
                        else s[i] = 'B';
                    }
                }
                for (int i = max(d, e - k); i < e; i++) s[i] = s[e];
            } else {
                if (k > (e - d) / 2) {
                    for (int i = d + 1; i <= (d + e) / 2; i++) s[i] = s[d];
                    for (int i = (d + e) / 2 + 1; i < e; i++) s[i] = s[e];
                } else {
                    for (int i = d + 1; i <= d + k; i++) s[i] = s[d];
                    for (int i = d + k + 1; i < e - k; i++) {
                        if (s[d + k] == 'B') {
                            if (i % 2 == (d + k) % 2) s[i] = 'B';
                            else s[i] = 'W';
                        } else {
                            if (i % 2 == (d + k) % 2) s[i] = 'W';
                            else s[i] = 'B';
                        }
                    }
                    for (int i = e - k; i < e; i++) s[i] = s[e];
                }
            }
        }
        e++;
        while (s[e] == s[e + 1]) e++;
        d = e;
    }
    cout << s.substr(n, c) << s.substr(c, n - c);
}
