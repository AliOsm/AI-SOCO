#include<bits/stdc++.h>
using namespace std;

#define ll             long long
#define LL             long long
#define pii            pair<int, int>
#define pll            pair<ll, ll>
#define pil            pair<int, ll>
#define pli            pair<ll, int>
#define vi             vector<int>
#define vl             vector<ll>
#define vii            vector<pii>
#define vll            vector<pll>
#define vil            vector<pil>
#define vli            vector<pli>
#define pb             push_back
#define ppb            pop_back
#define mp             make_pair
#define ff             first
#define ss             second
#define TN             typename
#define all(v)         v.begin(), v.end()
#define endl           '\n'

template <TN T> T gcd(T a, T b) {return !b ? a : gcd(b, a % b);}
template <TN T> T lcm(T a, T b) {return a * (b / gcd(a, b));}
template <TN T> T sqr(T a) {return a * a;}
template <TN T> T cube(T a) {return a * a * a;}
template <TN T> inline void smin(T &a, T b) {a = a < b ? a : b;}
template <TN T> inline void smax(T &a, T b) {a = a > b ? a : b;}
template <TN T> void fill(T a[], T n, T b) {for (int i = 0; i <= n; i++) a[i] = b;}

int in() {
	int n;
	scanf("%d", &n);
	return n;
}

ll Lin() {
	ll n;
	scanf("%lld", &n);
	return n;
}

double Din() {
	double n;
	scanf("%lf", &n);
	return n;
}

const ll inf = (ll)1e17;
const ll mod = (ll)1e9 + 7;
const int N = 1e5 + 5;

ll a[30];
string s;
vl tem[30];

int bs(int id, ll x) {
	int low = 0, high = tem[id].size() - 1, ans = 0;
	while (low <= high) {
		int mid = (low + high) >> 1;
		if (tem[id][mid] <= x) ans = mid + 1, low = mid + 1;
		else high = mid - 1;
	}
	return ans;
}

ll call(int left, int right) {
	if (left == right) return 0;
	int mid = (left + right) >> 1;
	for(int i = 1; i <= 26; i++) tem[i].clear();
	ll cur = 0;
	for (int i = mid + 1; i <= right; i++) {
		tem[s[i] - 'a' + 1].pb(cur);
		cur += a[s[i] - 'a' + 1];
	}
	for (int i = 1; i <= 26; i++) {
		sort(all(tem[i]));
	}
	ll ans = 0;
	cur = 0;
	for (int i = mid; i >= left; i--) {
		ans += bs(s[i] - 'a' + 1, -cur) - bs(s[i] - 'a' + 1, -cur - 1);
		cur += a[s[i] - 'a' + 1];
	}
	return ans + call(left, mid) + call(mid + 1, right);
}

int solve() {
	for (int i = 1; i <= 26; i++) {
		a[i] = Lin();
	}
	cin >> s;
	int n = (int)s.size();
	printf("%lld\n", call(0, n - 1));
	return 0;
}

int main() {
	int test = 1, tc = 0;
	//scanf("%d", &test);
	while (test--) {
		//printf("Case %d: ", ++tc);
		solve();
	}
	return 0;
}

