#include"bits/stdc++.h"
using namespace std;
#define fs first
#define sc second
#define mp make_pair
#define pb push_back
typedef long long int ll;
const ll N=1e6+2,inf=1e9+7;
void _run();
void no(){cout<<"Impossible\n",exit(0);}
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);
	_run();
	return 0;
}
ll Mod[4],pw[N][4],base[4],Hash[N][4];
string s;int n;
void _hashProcess()
{
    for(int i=0;i<4;i++)
    {
        Mod[i]=rand()%inf +inf;
        Hash[0][i]=0;
        pw[0][i]=1;
        base[i]=10;
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=0;j<4;j++)
        {
            Hash[i][j]=(Hash[i-1][j]*base[j]+(s[i-1]-'0'))%Mod[j];
            pw[i][j]=(pw[i-1][j]*10LL)%Mod[j];
        }
    }
}
ll _getHash(int l,int r,int id)
{
    return (Hash[r][id]-(Hash[l-1][id]*pw[r-l+1][id])%Mod[id]+Mod[id])%Mod[id];
}
void _result(int pls,int eql)
{
    for(int i=0;i<4;i++)
    {
        if((_getHash(1,pls,i)+_getHash(pls+1,eql,i))%Mod[i]!=_getHash(eql+1,n,i))
            return;
    }
    for(int i=1;i<=n;i++)
    {
        cout<<(char)s[i-1];
        if(i==pls)cout<<"+";
        else if(i==eql)cout<<"=";
    }
    cout<<"\n";exit(0);
}
void _run()
{
    cin>>s;n=(int)s.size();
    _hashProcess();
    for(int i=1;i<n;i++)
    {
        if((n-i)/2 >1&&s[i]!='0')_result(i,i+(n-i)/2);
        else if((n-i)/2==1)_result(i,i+(n-i)/2);
        _result(i,n-i);
        _result(i,n-i-1);
    }
}
