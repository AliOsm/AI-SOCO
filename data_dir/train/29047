//teja349
#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 << endl; prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx


using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >

//std::ios::sync_with_stdio(false);   
int color[312345]={0},s[312345];
set<int> seti,setn;
set<int>::iterator it;
vector<vi> adj(312345),vec(312345);

int dfs(int cur,int par){
	int i,j;
	rep(i,vec[cur].size()){
		if(color[vec[cur][i]]!=0){
			seti.erase(color[vec[cur][i]]);
		}
	}
	rep(i,vec[cur].size()){
		if(color[vec[cur][i]]==0){
			color[vec[cur][i]]=*seti.begin();
			it=seti.begin();
			seti.erase(it);
		}
	}
	rep(i,vec[cur].size()){
		seti.insert(color[vec[cur][i]]);
	}

	rep(i,adj[cur].size()){
		if(adj[cur][i]!=par)
			dfs(adj[cur][i],cur);
	}
	return 0;
}
int main(){
    std::ios::sync_with_stdio(false); 
    int n,m,i,u,v,val,j;
    cin>>n>>m;
    rep(i,m+20){
    	seti.insert(i+1);
    }

    rep(i,n){
    	cin>>s[i];
    	rep(j,s[i]){
    		cin>>val;

    		vec[i].pb(val);
    	}
    }
    rep(i,n-1){
    	cin>>u>>v;
    	u--;
    	v--;
    	adj[u].pb(v);
    	adj[v].pb(u);
    }
    dfs(0,-1);
    f(i,1,m+1){
        if(color[i])
    	setn.insert(color[i]);
    }
    if(setn.empty()){
    	cout<<1<<endl;
    }
    else{
    	cout<<setn.size()<<endl;
    }
    f(i,1,m+1){
    	if(color[i])
    		cout<<color[i]<<" ";
    	else
    		cout<<1<<" ";
    }
    return 0;
}

