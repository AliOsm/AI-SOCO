#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <stack>
#include <set>
#include <iomanip>
#include <queue>
#include <map>
#include <functional>
#include <memory.h>
#include <list>
#include <sstream>
#include <ctime>
#include <climits>
#include <bitset>
#include <list>
#include <cassert>
#include <complex>

using namespace std;

/* Constants begin */
const long long inf = 1e18+7;
const long long mod = 1e9+7;
const double eps = 1e-12;
const double PI = 2*acos(0.0);
const double E = 2.71828;
/* Constants end */

/* Defines begin */
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define forn(i,n) for (ll (i)=0;(i)<(ll)(n);(i)++)
#define random (rand()<<16|rand())
#define sqr(x) (x)*(x)
#define base complex<double>
/* Defines end */

ll a[100005], sz;
ll b[100005];

map<ll, ll> p;

ll Pow(ll a, ll n){
  ll res = 1;
  while(n > 0){
    if(n & 1LL){
      res *= a;
      res %= mod;
    }
    a *= a;
    a %= mod;
    n >>= 1LL;
  }
  return res;
}

int main(void) {
  #ifndef ONLINE_JUDGE
      freopen("input.txt","rt",stdin);
      freopen("output.txt","wt",stdout);
  #endif
  ll n, x, sum = 0; cin >> n >> x;
  forn(i, n){
    int cur; scanf("%d", &cur);
    a[i] = cur;
    sum += a[i];
  }
  forn(i, n){
    b[i] = sum - a[i];
    p[b[i]]++;
  }
  for(map<ll, ll> :: iterator i = p.begin(); i != p.end(); ++i){
    if(i->S > 1){
      p[i->F + 1] += i->S / x;
      i->S %= x;
    }
    if(i->S){
      cout << Pow(x, min((ll)i->F, sum)) << endl;
      exit(0);
    }
  }
  return 0;
}
