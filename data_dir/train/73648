#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)    for(long long i=a;i<=b;i++)
#define fr(i,a)      for(long long i=0;i<a;i++)
#define fd(i,a,b)    for(long long i=b;i>=a;i--)
#define clr(x)       memset(x,0,sizeof(x))
#define cln(x)       memset(x,-1,sizeof(x))
#define __           printf(" ")
#define _            printf("\n")
#define _o           printf("1\n")
#define stree        long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define snode        long long s,long long e,long long node
#define slft         s,mid,lft
#define srht         mid+1,e,rht
#define sin()        if(S<=s&&e<=E)
#define sout()       if(S>e||s>E)
#define mod          1000000007
#define read()       freopen("in.txt","r",stdin)
#define write()      freopen("out.txt","w",stdout)
#define sfl(x)       scanf("%I64d",&x)
#define sfll(x,y)    scanf("%I64d %I64d",&x,&y)
#define sflll(x,y,z) scanf("%I64d %I64d %I64d",&x,&y,&z)
#define pfl(x)       printf("%I64d",x)
#define pfll(x,y)    printf("%I64d %I64d",x,y)
#define pflll(x,y,z) printf("%I64d %I64d %I64d",x,y,z)
#define xx           200000

typedef long long ll;
typedef pair<long long,long long> pll;


vector<long long>vec[xx+20];
long long a[xx+10];
long long tree[525000];


void ini(snode){
    if(s==e) {
        tree[node]=1;
        return;
    }
    stree;
    ini(slft);
    ini(srht);
    tree[node]=tree[lft]+tree[rht];
    return;
}

long long S,E,ix;

void update(snode){
    if(s==e){
        tree[node]=0;
        return;
    }
    stree;
    if(ix<=mid) update(slft);
    else update(srht);
    tree[node]=tree[lft]+tree[rht];
    return;
}

long long qry(snode){
    sin() return tree[node];
    sout() return 0;
    stree;
    return qry(slft)+qry(srht);
}


main(){

    long long n;
    cin>>n;
    ini(1,n,1);
    fi(i,1,n) {
       sfl(a[i]);
       if(a[i]<=n) vec[a[i]].push_back(i);
    }
    long long ans=0;
    fi(i,1,n) {
        S=i+1;
        E=a[i];
        if(E>=S) ans+=qry(1,n,1);
        for(auto cur:vec[i]) {
            ix=cur;
            update(1,n,1);
        }
    }
    cout<<ans<<endl;

    return 0;
}
