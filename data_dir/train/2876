#include<bits/stdc++.h>

using namespace std;

#define fRead(x)        freopen(x,"r",stdin)
#define fWrite(x)       freopen (x,"w",stdout)

#define LL              long long
#define ULL             unsigned long long
#define ff              first
#define ss              second
#define pb              push_back
#define INF             2e16
#define PI              acos(-1.0)
#define mk              make_pair
#define pii             pair<int,int>
#define pll             pair<LL,LL>


#define min3(a,b,c)     min(a,min(b,c))
#define max3(a,b,c)     max(a,max(b,c))
#define min4(a,b,c,d)   min(a,min(b,min(c,d)))
#define max4(a,b,c,d)   max(a,max(b,max(c,d)))
#define SQR(a)          ((a)*(a))
#define FOR(i,a,b)      for(int i=a;i<=b;i++)
#define ROF(i,a,b)      for(int i=a;i>=b;i--)
#define REP(i,b)        for(int i=0;i<b;i++)
#define MEM(a,x)        memset(a,x,sizeof(a))
#define ABS(x)          ((x)<0?-(x):(x))

#define SORT(v)         sort(v.begin(),v.end())
#define REV(v)          reverse(v.begin(),v.end())


#define FastRead        ios_base::sync_with_stdio(0);cin.tie(nullptr);
const int N = 10010;
int n,valid;
int A[N],B[N],C[N];
int dp[N/2][N/2];

int ask(int x,int y)
{
    if(dp[x][y] != -1)return dp[x][y];
    cout << "? " << x << " " << y << endl;
    int res;
    cin >> res;
    return dp[x][y] = res;
}
int calc(int x,int y)
{
    int res = ask(0,y) ^ ask(x,0) ^ ask(0,0);
    return res;
}

int vis[N],id;
int main()
{
    MEM(dp,-1);
    cin >> n;
    vector<int>vec;
    //    0 1 2 4 3 5
    //    0 1 2 4 3 5
    //p0 ^ bj ^ pi ^ b0 ^ b0 ^ p0;
    for(int i = 0;i < n;i++){
        A[0] = i;id++;
        bool ok = true;
        for(int j = 0;j < n;j++){
            int r = calc(0,j) ^ A[0];
            B[j] = r;
            if(B[j] == 0 and A[B[j]] != j){
                ok = false;
                break;
            }
            if(r >= n or vis[r] == id){
                ok = false;
                break;
            }
            vis[r] = id;
        }
        for(int j = 0;j < n;j++){
            A[B[j]] = j;
        }
        for(int j = 0;j < n;j++){
            int r = calc(j,0) ^ B[0];
            if(A[j] != r)ok = 0;
        }
        if(ok){
//            for(int j = 0;j < n;j++)cout << A[j] << " ";
//            cout << endl;
//            for(int j = 0;j < n;j++)cout << B[j] << " ";
//            cout << endl << endl;
            vec.push_back(i);
        }
    }
    if(vec.size() == 0){
        cout << "NOOOO\n";
        return 0;
    }
    cout << "!" << endl;
    cout << vec.size() << endl;
    A[0] = vec[0];
    for(int j = 0;j < n;j++){
        int r = calc(0,j) ^ A[0];
        B[j] = r;
        A[B[j]] = j;
    }
    for(int i = 0;i < n;i++)cout << A[i] << " ";
    cout << endl;
}
/*
6
0 1 2 4 3 5
*/
