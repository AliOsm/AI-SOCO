#include<bits/stdc++.h>
using namespace std;
int n,m,h[200010];
vector<int> v[200010],iv[200010];
int id[200010],deg[200010];
bool flag[200010];
int vl[200010];
vector<int> pt[200010];
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)scanf("%d",&h[i]);
	for(int i=1,a,b;i<=m;i++)
	{
		scanf("%d%d",&a,&b);
		v[a].push_back(b);
		iv[b].push_back(a);
	}
	queue<int> q;
	for(int i=1;i<=n;i++)
	{
		deg[i]=v[i].size();
		if(!deg[i])q.push(i);
	}
	while(!q.empty())
	{
		int fr=q.front();q.pop();
		for(int &x:v[fr])flag[id[x]]=1;
		for(int i=0;;i++)
		{
			if(!flag[i])
			{
				id[fr]=i;
				break;
			}
		}
		for(int &x:v[fr])flag[id[x]]=0;
		for(int &x:iv[fr])
		{
			deg[x]--;
			if(!deg[x])q.push(x);
		}
	}
	for(int i=1;i<=n;i++)pt[id[i]].push_back(i);
	for(int i=1;i<=n;i++)vl[id[i]]^=h[i];
	bool s=0;
	for(int i=0;i<=n;i++)s|=(vl[i]!=0);
	if(!s)puts("LOSE");
	else
	{
		puts("WIN");
		for(int i=n;i>=0;i--)
		{
			if(vl[i])
			{
				for(int &x:pt[i])
				{
					if((vl[i]^h[x])<h[x])
					{
						h[x]^=vl[i];
						for(int &y:v[x])
						{
							if(!flag[id[y]])
							{
								flag[id[y]]=1;
								h[y]^=vl[id[y]];
							}
						}
						break;
					}
				}
				for(int i=1;i<=n;i++)printf("%d ",h[i]);
				return 0;
			}
		}
	}
	return 0;	
}