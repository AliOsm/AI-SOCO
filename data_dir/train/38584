//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>
#define mem(a,v) memset((a), (v), sizeof (a))
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int _i = 0; _i < (n); _i++) ni(a[_i])
#define nal(a, n) for (int _i = 0; _i < (n); _i++) nl(a[_i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define pil pair<int, long long>
#define pll pair<long long, long long>
#define vii vector<pii>
#define vil vector<pil>
#define vll vector<pll>
#define vi vector<int>
#define vl vector<long long>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef cc_hash_table<int,int,hash<int>> ht;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
const int MAXN = 1e6 + 5;
const double eps = 1e-9;

void solve() {
	string s; cin >> s;
	vi ans;
	for (int j = 0; j < s.size(); j++) {
		int i = j;
		for (; i < s.size() && s[i] == s[j]; i++);
		if ((i-j) % 2 == 1)
			ans.pb(s[j]-'a');
		j = i-1;
	}
	sort(ans.begin(), ans.end());
	ans.erase(unique(ans.begin(),ans.end()),ans.end());
	for (int i: ans)
		printf("%c", (char)(i+'a'));
	enl;
}

int main() {
	int t; cin >> t; while (t--) solve();
	return 0;
}
