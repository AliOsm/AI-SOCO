#pragma comment(linker, "/STACK:167177216")

#include <stdio.h>
#include <stack>
#include <math.h>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <string>
#include <memory.h>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <time.h>
#include <cassert>
#include <cstring>
//#include <unordered_set>

using namespace std;

#define mp make_pair
#define pb push_back
#define pii pair<int, int>
#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define x first
#define y second

typedef long long li;
typedef long double ld;
typedef unsigned long long uli;

const int INF = 1e9;
const ld eps = 1e-9;
const li MOD = (li)(4e6 + 37);
const li INF64 = (li)(INF) * (li)(INF);

const int ddx[] = {-1, 1, 1, -1};
const int ddy[] = {1, 1, -1, -1};
const int dx[] = {-1, -1, 0, 1, 1, 1, 0, -1};
const int dy[] = {0, 1, 1, 1, 0, -1, -1, -1};
const int dx4[] = {-1, 0, 1, 0};
const int dy4[] = {0, 1, 0, -1};
const int dxh[] = {-1, -1, -1, 1, 1, 1, 1, -1};
const int dyh[] = {1, -1, -1, -1, -1, 1, 1, 1};
const string dirs[] = {"RIGHT", "UP", "LEFT", "DOWN"};

string s[2222];
char a[2222][2222];
int n, m, k;
int up[2222];

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //freopen("errors.txt", "w", stderr);
    //ios_base::sync_with_stdio(false);
    cin >> n >> m >> k;
    getline(cin, s[0]);
    for(int i = 1; i <= n; i++)
    {
        getline(cin, s[i]);
        for(int j = 0; j < m; j++)
        {
            a[i][j + 1] = s[i][j];
            if(s[i][j] == 'U' && i != 2 && i % 2 == 1)
                up[j + 1]++;
        }
    }

    for(int j = 1; j <= m; j++)
    {
        int ans = 0;
        ans += up[j];
        int len = 0;
        for(int i = 2; i <= n; i++)
        {
            len++;
            int l = j - len, r = j + len;
            if(l >= 1 && a[i][l] == 'R')
                ans++;
            if(r <= m && a[i][r] == 'L')
                ans++;
        }

        cout << ans << ' ';
    }

    cout << endl;
    return 0;
}