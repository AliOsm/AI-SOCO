#include "bits/stdc++.h"
using namespace std;

const int maxn = 1e3 + 10;

int n, x;

int a[maxn];
vector <int> ans;

int sz, found;
vector <int> adj[maxn];
int deg[maxn];

vector <int> w;
int m, len;

void dfs(int v) {
  ++sz;

  if(v == x) {
    found = true;
    len = sz;
  }

  for(auto u: adj[v])
    dfs(u);
}

bool dp[maxn];

void solve() {
  for(int v = 1; v <= n; ++v) 
    if(a[v]) {
      adj[a[v]].push_back(v);
      ++deg[v];
    }

  for(int v = 1; v <= n; ++v)
    if(!deg[v]) {
      found = 0;
      sz = 0;

      dfs(v);

      if(!found)
	w.push_back(sz);
    }

  int m = w.size();

  dp[0] = true;

  for(int i = 0; i < m; ++i)
    for(int W = n; W >= w[i]; --W)
      dp[W] |= dp[W - w[i]];

  for(int i = 0; i <= n; ++i)
    if(dp[i])
      ans.push_back(i + len);
}

int main() {
  cin >> n >> x;

  for(int i = 1; i <= n; ++i)
    cin >> a[i];

  solve();

  sort(ans.begin(), ans.end());
  
  for(auto i: ans)
    cout << i << '\n';
  
  return 0;
}
