#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;
typedef long long LL;
#define INF 0x3f3f3f3f
#define eps 1e-10

const int MOD = 1e9+7;
int n, a, b, k;
LL f[5010], g[5010];

int main() {
	memset(g, 0, sizeof(g));
	scanf("%d%d%d%d", &n, &a, &b, &k);
	for (int i = 0; i <= n; i++)
		f[i] = i;
	while (k--) {
		for (int i = 1; i <= n; i++)
			if (i < b) g[i] = (f[b-1]-f[max(0, i+i-b)] - f[i]+f[i-1]) % MOD;
			else if (i > b) g[i] = (f[min(n, i+i-b-1)]-f[b] - f[i]+f[i-1]) % MOD;
			else g[i] = 0;
		for (int i = 1; i <= n; i++)
			f[i] = (f[i-1]+g[i]) % MOD;
	}
	printf("%I64d\n", (g[a]%MOD+MOD)%MOD);
	return 0;
}
