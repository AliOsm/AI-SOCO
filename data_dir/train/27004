#include <algorithm>
#include <iostream>
#include <cassert>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <numeric>
#include <cstdio>
#include <string>
#include <vector>
#include <cmath>
#include <ctime>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define endl '\n'
#define F first
#define S second
#define mp make_pair
#define ll long long
#define pb push_back
#define pii pair < int, int >
#define type(x) __typeof(x.begin())
#define foreach(i, x) for(type(x) i = x.begin(); i != x.end(); i++)
#define FOR(i, a, b) for(int i = a; i <= b; i++)
#define ROF(i, a, b) for(int i = a; i >= b; i--)
#define sol (root << 1)
#define sag (sol | 1)
#define orta ((bas + son) >> 1)
#define bit __builtin_popcount

#ifndef D
	#define dbgs(x) 0
	#define dbg(x) 0
	#define TIME 0
#else
	#define dbgs(x) cerr << (#x) << " --> " << (x) << ' '
	#define dbg(x) cerr << (#x) << " --> " << (x) << endl
	#define TIME cerr << "Tooks " << (double) clock() / CLOCKS_PER_SEC << " seconds." << endl
#endif

const int inf = 1e9 + 5;
const ll linf = 1e18 + 5;

int n, k, sum;

pii a[105];

int main () {
    
    ios :: sync_with_stdio(0);

	cin >> n >> k;

	FOR(i, 1, n)
	{
		cin >> a[i].F;

		a[i].S = i;
	}

	sort(a + 1, a + n + 1);

	int end = n + 1;

	FOR(i, 1, n)
	{
		sum += a[i].F;

		if(sum > k)
		{
			end = i;

			break;
		}
	}

	cout << end - 1 << endl;

	FOR(i, 1, end - 1)
		cout << a[i].S << " \n"[i == end - 1];

	return 0;
    
}
