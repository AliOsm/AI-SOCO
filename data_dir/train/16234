#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, pll> p3l;
typedef pair<char, ll> pcl;
typedef vector<char> vc;
typedef vector<ll> vll;
typedef vector<pll> vpll;
typedef vector<p3l> vp3l;
typedef vector<vll> vvll;
typedef vector<ld> vld;

const ll MOD = (int) 1000000007;

#define fan(i, a, n) for(ll i=a; i<n; ++i)
#define boost ios_base::sync_with_stdio(0);cout.tie(0);cin.tie(0)
#define fna(i, n, a) for(ll i=n-1; i>=a; --i)
#define fit(it, x) for(auto &it:x)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define pb push_back
#define rs resize
#define fst first
#define snd second
#define sz size
#define ins insert
#define ce cout << "\n"

//ll gcd(ll a, ll b) {
//  if (b == 0)
//    return a;
//  else
//    return gcd(b, a % b);
//}
//
//ld sqr(ld a) {
//  return a * a;
//}
//
//ll m = MOD;
//ll mulmod(ll a, ll b) {
//  a %= m;
//  if (b == 0)return 1;
//  if (b % 2 == 0) {
//    return mulmod((a * a) % m, b / 2) % m;
//  } else {
//    return (mulmod((a * a) % m, b / 2) % m * a) % m;
//  }
//}
//
//ll slv(multiset<ll> a,ll st){
//  ll ans = 0;
//  while(true){
//    auto it = a.lower_bound(st);
//    if(it == a.end())break;
//    ans+=st;
//    st*=2;
//    a.erase(it);
//  }
//  return ans;
//}
//
//ll m = MOD;
//ll mulmod(ll a, ll b) {
//  a %= m;
//  if (b == 0)return 0;
//  if (b % 2 == 0) {
//    return mulmod((a + a) % m, b / 2) % m;
//  } else {
//    return (mulmod((a + a) % m, b / 2) % m + a) % m;
//  }
//}
ll n,m;
set<pll> str,nus;
ll a[2005];
int obz[2005];
int main() {
  cin >> n >> m;

  fan(i,0,2*n){
    ll tmp;
    cin >> tmp;
    a[i + 1] = tmp;
    str.ins({tmp,i + 1});
  }
  fan(i,0,m){
    int k,q;
    cin >> k >> q;
    obz[k] = q;
    obz[q] = k;
    nus.ins({a[q],q});
    nus.ins({a[k],k});
  }

  ll t;
  cin >> t;
  ll tmp;
  while(!str.empty()){
    if(t == 2){
      cin >> tmp;
      str.erase({a[tmp],tmp});
      if(obz[tmp]){
        nus.erase({a[tmp],tmp});
        tmp = obz[tmp];
        cout << tmp << endl;
        str.erase({a[tmp],tmp});
        nus.erase({a[tmp],tmp});
      }else{
        if(!nus.empty()){
          tmp = nus.rbegin()->snd;
          cout << tmp << endl;
          str.erase({a[tmp],tmp});
          nus.erase({a[tmp],tmp});
          cin >> tmp;
          str.erase({a[tmp],tmp});
          nus.erase({a[tmp],tmp});
        }
        t = 1;
      }
    }else{
      if(!nus.empty()){
        tmp = nus.rbegin()->snd;
        cout << tmp << endl;
        str.erase({a[tmp],tmp});
        nus.erase({a[tmp],tmp});
        cin >> tmp;
        str.erase({a[tmp],tmp});
        nus.erase({a[tmp],tmp});
      }else{
        if(!str.empty()) {
          tmp = str.rbegin()->snd;
          cout << tmp << endl;
          str.erase({a[tmp], tmp});
        }
        if(!str.empty()){
          cin >> tmp;
          str.erase({a[tmp],tmp});
        }else{
          return 0;
        }
      }
    }
  }

  return 0;
}