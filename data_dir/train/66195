#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<stack>
#include<random>
#include<queue>
#include<list>
#include<math.h>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define nu 100001
//#define mod 1000000007
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i, n) for (int i = 0; i < int(n); i++)
const ll INF=9223372036854775807;
const ll mod=998244353;
int  MOD(int  a, int  b)
{
    if(a>b)
        return a-b;
    else
        return b-a;
}
int  max3(int  a,int  b, int  c)
{
    return max(c,max(a,b));
}
int  min3(int  a,int  b,int  c)
{
    return min(a,min(b,c));
}
ll  power(ll  x,ll  y )
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x);//%mod;
        y = y>>1;
        x = (x*x);//%mod;
    }
    return res;//%mod;
}
ll logg(ll  a)
{
    ll  x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
ll  gcd(ll  a,ll   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
ll abso(ll x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll  a,ll  b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
ll modinv(ll x)
{
    return power(x,mod-2);
}
int main()
{
    int n;
    cin>>n;
    vector<string> a(2*n-2);
    vector<string> b;
    vector<string> c;
    for(int i=0;i<2*n-2;i++)
    {
        cin>>a[i];
        if(a[i].size()==1)
        {
            b.pb(a[i]);
        }
        if(a[i].size()==n-1)
        {
            c.pb(a[i]);
        }
    }
    auto d=a;
    sort(all(a));
    
    vector<string> pos;
    pos.pb(c[0]+b[0]);
    pos.pb(c[0]+b[1]);
    pos.pb(c[1]+b[0]);
    pos.pb(c[1]+b[1]);
    pos.pb(b[0]+c[0]);
    pos.pb(b[0]+c[1]);
    pos.pb(b[1]+c[0]);
    pos.pb(b[1]+c[1]);
    for(int k=0;k<8;k++)
    {
        string temp="";
        vector<string> haha;
        for(int j=0;j<pos[k].size()-1;j++)
        {
            temp.pb(pos[k][j]);
            haha.pb(temp);
        }
        
        
        temp="";
        for(int j=pos[k].size()-1;j>=1;j--)
        {
            temp.pb(pos[k][j]);
            reverse(all(temp));
            
            haha.pb(temp);
            reverse(all(temp));
        }
        sort(all(haha));
        string ans(2*n-2,'P');
        if(haha==a)
        {
            map<string,vector<int>> g;
            for(int i=0;i<d.size();i++)
            {
                g[d[i]].pb(i);
            }
            string temp="";
            for(int j=0;j<pos[k].size()-1;j++)
            {
                temp.pb(pos[k][j]);
                ans[g[temp][g[temp].size()-1]]='P';
                g[temp].pop_back();
            }
            temp="";
            for(int j=pos[k].size()-1;j>=1;j--)
            {
                temp.pb(pos[k][j]);
                reverse(all(temp));
                ans[g[temp][g[temp].size()-1]]='S';
                g[temp].pop_back();
                reverse(all(temp));
            }
            cout<<ans;
            return 0;
        }
        
    }
}

