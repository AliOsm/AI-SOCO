#pragma GCC optimize(2)
#pragma GCC optimize(3)
#pragma GCC optimize(4)
#include<bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pi acos(-1.0)
#define LL long long
//#define mp make_pair
#define DEBUG
#define pb push_back
#define ls rt<<1, l, m
#define rs rt<<1|1, m+1, r
#define ULL unsigned LL
#define pll pair<LL, LL>
#define pli pair<LL, int>
#define pii pair<int, int>
#define piii pair<pii, int>
#define pdd pair<long double, long double>
#define mem(a, b) memset(a, b, sizeof(a))
#define fio ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define fopen freopen("in.txt", "r", stdin);freopen("out.txt", "w", stout);
//head

const int N = 1e3 + 5;
struct node {
    LL x, y, xx, yy;
}a[N];
map<int, map<int, int>> mp;
int main() {
    LL ans = 0;
    int n;
    scanf("%d", &n);
    for (int i = 1; i <= n; i++) {
        scanf("%lld %lld %lld %lld", &a[i].x, &a[i].y, &a[i].xx, &a[i].yy);
        ans += __gcd(abs(a[i].x-a[i].xx), abs(a[i].y-a[i].yy)) + 1;
    }
    for (int i = 1; i <= n; i++) {
        for (int j = i+1; j <= n; j++) {
            if(i == j) continue;
            LL t11 = a[i].y - a[i].yy, t12 = a[i].xx - a[i].x, t13 = a[i].y*a[i].xx - a[i].x*a[i].yy;
            LL t21 = a[j].y - a[j].yy, t22 = a[j].xx - a[j].x, t23 = a[j].y*a[j].xx - a[j].x*a[j].yy;
            LL d = t11*t22 - t21*t12;
            LL upx = t13*t22 - t23*t12;
            LL upy = t11*t23 - t21*t13;
            if(d == 0) continue;
            if(upx%d) continue;
            if(upy%d) continue;
            LL x = upx/d;
            LL y = upy/d;

            LL mx = max(min(a[i].x, a[i].xx), min(a[j].x, a[j].xx)) ,my = max(min(a[i].y, a[i].yy),min(a[j].y, a[j].yy));
            LL Mx = min(max(a[i].x, a[i].xx), max(a[j].x, a[j].xx)), My = min(max(a[i].y, a[i].yy),max(a[j].y, a[j].yy));

            if(mx <= x && x <= Mx && my <= y && y <= My) {
                mp[(int)x][(int)y] += 2;
            }
        }
    }
    for(auto it : mp) {
        for (auto itt: it.se) {
            LL t = sqrt(itt.se);
            ans -= t;
            //cout << ans << endl;
        }
    }
    cout << ans << endl;
    return 0;
}
