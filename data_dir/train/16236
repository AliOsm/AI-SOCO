#include<bits/stdc++.h>
using namespace std;
   
#define FilesX
   
   
#define rdi(i)                  scanf("%d", &i)
#define rdii(i, j)              scanf("%d%d", &i, &j)
#define rep(i, v)       for(int i=0;i<sz(v);++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define all(v)              ((v).begin()), ((v).end())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)
   
typedef long long         ll;
typedef unsigned long long   ull;
const ll OO = 1e8;
const ll OOL = 1e18;
   
const double EPS = (1e-7);
int dcmp(double x, double y) {  return fabs(x-y) <= EPS ? 0 : x < y ? -1 : 1;   }
   
#define pb                  push_back
#define MP                  make_pair
#define P(x)                cout<<#x<<" = { "<<x<<" }\n"
typedef long double       ld;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef pair<int, int>    pii;
typedef pair<ll, ll>      pll;
typedef vector<pair<int, int> > vii;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef vector<string>    vs;
typedef vector<ll>        vl;
typedef vector<vector<ll> >     vvl;
typedef vector<pair<ll, ll> >   vll;

ull gcd(ull a, ull b) { return (b == 0 ? a : gcd(b, a % b)); }
ull lcm(ull a, ull b) { return (a * (b / gcd(a, b))); }
   
ull power(ull a, ull b){
    if(b == 0) return 1;
    if(b == 1) return a;
    ull ans = power(a, b / 2);
    ans = ans * ans;
    if(b % 2 != 0) ans *= a;
    return ans;
}

int n;
string s;
int dif = 0;

bool check(int t){
    set<char> st;
    int a[100100] = {0};
    lp(i, t){
        st.insert(s[i]);
        a[s[i]]++;
    }
    if(st.size() == dif) return true;
    lp(i, n){
        int e = i + t;
        if(e >= n) return false;
        st.insert(s[e]);
        a[s[e]]++;
        a[s[i]]--;
        if(a[s[i]] == 0) st.erase(st.find(s[i]));
        if(st.size() == dif) return true;
    }
    return false;
}


int main()
{
#ifdef Files
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    ios::sync_with_stdio(false);
    
    cin >> n;
    cin >> s;
    set<char> st;
    rep(i, s) st.insert(s[i]);
    dif = st.size();
    int start = 0, end = n, ans = -1;
    
    while(start <= end){
        int midi = (start + end) / 2;
        if(check(midi)) end = midi - 1, ans = midi;
        else start = midi + 1;
    }
    cout << ans << endl;
    
    return 0;
}