#include <iostream>
#include <string>
#include <cstring>
#include <stdio.h>
#include <iomanip>
#include <math.h>
#include <vector>
#include<cctype>
#include<algorithm>
#include<set>
#include<stack>
#include<map>
#include<time.h>
#include<iterator>
#include <deque>
#include <sstream>
#include<queue>
#include<stdlib.h>
#include<bitset> 
#include <utility>
#include<assert.h>
#include<functional>
#include<limits.h>

#define fn(i,n) for(int (i) = 0;(i) < (n);(i)++)
#define f1n(i,n) for(int (i) = 1;(i) <= (n);(i)++)
#define mk(f,s) make_pair((f),(s))

#define defV(dp,e) memset(dp,e,sizeof dp)

#define ri(n) scanf("%d",&n)
#define rl(n) scanf("%lld",&n)
#define rs(s) scanf("%s",s)

#define PI acos(-1.0)

using namespace std;

typedef long long ll;
typedef pair<int, int > pp;

typedef vector<int  > v1;
typedef vector<ll  > vl;
typedef vector<pp  > vpp;
typedef vector<bool  > vb;
typedef vector<char > vc;
typedef vector<v1 > v2;

int const bound = 2e6 + 2, N = 5e5 + 2;
ll OO = 1e18;
int oo = 1e9, mod =oo+7;
int w,h;
double dp[2][1001][1001];

double rec(int tt,int rw,int rh){
    double &ret=dp[tt][rw][rh];
    if(ret!=-1.)return ret;
    if(!tt){
        if(!rw)return ret=0;
        if(!rh)return ret=1;
        return ret=rw*1.0/(rw+rh*1.0)+rh*1.0/(rh+rw*1.0)*rec(!tt,rw,rh-1);
    }else{
        if(!rw||!rh)return ret=0;
        if(rh>=2){
            ret=rh*1.0/(rh+rw*1.0);
            int nh=rh-1;
            double d1=rw*1.0/(rw+nh*1.0)*rec(!tt,rw-1,nh);
            double d2=nh*1.0/(rw+nh*1.0)*rec(!tt,rw,nh-1);
            return ret*=(d1+d2);
        }
        return ret=rh*1.0/(rh+rw*1.0)*rec(!tt,rw-1,rh-1);
    }
}
int main() {
    //	freopen("input.txt", "r", stdin);
    cin>>w>>h;
    fn(i,2)fn(j,1001)fn(k,1001)dp[i][j][k]=-1.0;
    printf("%.9f",rec(0,w,h));
    return 0;
}