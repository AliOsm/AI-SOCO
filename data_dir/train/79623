//in the name of god

#include<bits/stdc++.h>
#define int long long
using namespace std;

const int MAXN = 1101  ;
const int INF = 1e13;

vector < pair < int ,int > > a [ MAXN ] , b [ MAXN ] = {};

vector < pair < pair < int ,int> , int > > yal;

int n , vazn = 0 ;

bool mark[ MAXN ] = {}  ;
int dis [ MAXN ][ MAXN ] = {}  ;
int st, t [ MAXN ] , c [ MAXN ] = {}; ;
int dis2 [ MAXN ] = {};
void dij1()
{

    set<pair < int ,int> >s;
    for(int i = 1 ; i <= n; i++)
        if(i!=st)s.insert( {INF , i} );
    s.insert({0,st});
    dis[st][st]=0;
    pair<int ,int > p;
    while(s.size())
    {
        p = *s.begin();
        s.erase( p );
        if(p.first==INF)
            return ;
        for(auto u : a[ p.second ])
        {
            if(dis[st][ u.first ] > u.second + p.first)
            {
                s.erase( {dis[st][ u.first ] , u.first } );
                dis[st][ u.first ] = u.second + p.first;
                s.insert( { dis[st][ u.first ] , u.first} );

            }
        }
    }
}

void dij2()
{
    set<pair < int ,int> >s;
    fill(dis2 , dis2 + MAXN , INF) ;
    for(int i = 1 ; i <= n; i++)
        if(i!=st)s.insert( {INF , i} );
    s.insert({0,st});
    dis[st][st]=0;
    pair<int ,int > p;
    while(s.size())
    {
        p = *s.begin();
        s.erase( p );
        if(p.first==INF)
            return ;
        for(int i = 1 ; i <= n ; i++)
        {
            if(i == p.second || dis[p.second][i] > t[p.second])
                continue;
            if(dis2[i] > c[p.second] + p.first)
            {
                s.erase( {dis2[i] , i } );
                dis2[i] = c[p.second] + p.first;
                s.insert( { dis2[i] , i} );

            }
        }
    }
}
main()
{
    ios::sync_with_stdio(0);cin.tie(0);
    int m,s,tt;
    cin >> n >> m ;
    cin >> s >> tt ;
    int x , y , z;
    for(int i = 0 ; i < m ; i++)
    {
        cin >> x >> y >> z;
        a[x].push_back({y,z});
        a[y].push_back({x,z});
    }
    for(int  i = 1 ; i <= n ; i++)
        for(int j = 1 ; j <= n ; j++)
            dis[i][j] = INF ;
    for(int i = 1 ; i <= n ; i++)
    {
        cin >> t[i] >> c[i];
        st = i ;
        dij1();
    }
    if(s==tt)
        return cout << 0,0;
    st = s ;
    dij2();
    cout << (dis2 [ tt ] == INF ? -1 : dis2[tt] ) ;


}
