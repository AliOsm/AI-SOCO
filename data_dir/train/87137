#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
#define ll long long int
#define ld long double
#define pb push_back
#define mkp make_pair
#define pii pair<int, int> 
#define pll pair<long long int, long long int>
#define sci(x) scanf("%d", &x)
#define scl(x) scanf("%lld", &x)
#define fi first
#define sc second
#define eps 1e-9

const int N = 1000000;
vector<int> T[4 * N], A[N+5];
int Q[N];

void merge(vector<int> &A, vector<int> &B, vector<int> &C) {
	A.clear();
	int i = 0, j = 0, n = B.size(), m = C.size();
	while (i < n && j < m) {
		if (B[i] <= C[j]) A.pb(B[i++]);
		else A.pb(C[j++]);
	}
	while (i < n) A.pb(B[i++]);
	while (j < m) A.pb(C[j++]);
}

void make(int n, int start, int end) {
	if (start == end) {
		T[n] = A[start]; return;
	}
	int mid = (start + end) >> 1;
	make(n<<1, start, mid);
	make(n<<1|1, mid+1, end);
	merge(T[n], T[n<<1], T[n<<1|1]);
}

int query(int n, int start, int end, int l, int r) {
	if (start > l) return 0;
	if (end <= l) return T[n].end() - lower_bound(T[n].begin(), T[n].end(), r);
	int mid = (start + end) >> 1;
	return query(n<<1, start, mid, l, r) + query(n<<1|1, mid+1, end, l, r);
}

int main()
{
	ios_base::sync_with_stdio(false);cout.tie(0);cin.tie(0);

	int n, m, i, j, k, x, y, z;
	cin >> n >> m;
	for (i = 0; i < n; ++i) {
		cin >> x >> y;
		A[x].pb(y);
	}
	for (i = 1; i <= N; ++i) sort(A[i].begin(), A[i].end());
	make(1, 1, N);
	while (m--) {
		cin >> n;
		for (i = 0; i < n; ++i) cin >> Q[i];
		int ans = 0;
		for (i = 0; i < n; ++i) {
			ans += query(1, 1, N, Q[i], Q[i]);
			if (i != n-1) ans -= query(1, 1, N, Q[i], Q[i+1]);
		}
		cout << ans << endl;
	}

	return 0;
}
