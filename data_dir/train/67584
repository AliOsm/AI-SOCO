#include <bits/stdc++.h>
using namespace std;
#define ll long long

ll GCD(ll a, ll b)
{
    while ((a > 0) && (b > 0))
    {
        if (a > b) a%=b;
        else
            b%=a;
    }
    return a+b;
}

vector <ll> DIVISORS(ll a)// уникальные делители числа a
{
    vector <ll> emp;
    ll i;
    for(i=2; i*i<=a; i++)
    {
        if (a%i==0)
        {
            ll j = i;
            while (a%i==0)
                a/=i;
            emp.push_back(j);
        }
    }
    if (a > 1)
        emp.push_back(a);
    return emp;
}

vector <ll> bin(ll x, ll len)// бинарное представление числа x длины len
{
    vector <ll> emp;
    for(ll i=0; i<len; i++)
    {
        emp.push_back(x%2);
        x/=2;
    }
    return emp;
}

ll cnt(ll up, vector <ll> deliteli) // сколько чисел от 1 до up делятся хотя бы на одно из чисел из делителей
{
    ll sz = deliteli.size();
    ll mx = 1;
    ll i, j;
    ll answer = 0;
    for(i=0; i<sz; i++)
    {
        mx*=2;
    }
    for(i=0; i<mx; i++)
    {
        vector <ll> t = bin(i, sz);
        ll even = 0;
        ll number = 1;
        for(j=0; j<t.size(); j++)
        {
            even+=t[j];
            if (t[j])
                number*=deliteli[j];
        }
       // cout<<"numver = "<<number<<"  even = "<<even<<endl;
    if (number > 1)
    {
        if (even%2)
            answer+=(up/number);
        else
            answer-=(up/number);


    }




    }
    return answer;


}


void solve()
{
    ll a, b;
    cin>>a>>b;
    ll t = GCD(a, b);
    a/=t;
    b/=t;
    vector <ll> del = DIVISORS(b);

  /*  for(ll i=0; i<del.size(); i++)
        cout<<del[i]<<" /";*/
   // cout<<endl;
    ll small = cnt(a, del);
    ll big = cnt(b+a-1, del);
   // cout<<"sm = "<<small<<"  big = "<<big<<endl;

    ll really = big-small;
    cout<<(b-really)<<endl;


}


int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
/*
    vector <ll> rez = DIVISORS(13000);
    for(ll i=0; i<rez.size(); i++)
        cout<<rez[i]<<" ";
*/
      //  vector <ll> rez;
      //  rez.push_back(2);
      //  rez.push_back(5);
      //  cout<<cnt(22, rez);
        ll n;
        cin>>n;
        for(ll i=0; i<n; i++)
        {
            solve();
        }

    return 0;
}
