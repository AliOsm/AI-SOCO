#include <bits/stdc++.h>
typedef long long ll;
using namespace std;
int n, m;
vector<string>g;
int dx[] = {0, 0, 1, -1}, dy[] = {1, -1, 0, 0};
bool valid(int i, int j){
	return i >= 0 && i < n && j >= 0 && j < m;
}

vector<vector<int> >cnt, vis, res;
int get(int i, int j){
	vis[i][j] = 1;
	int ret = cnt[i][j];
	for(int k = 0; k < 4; k++){
		int ni = i + dx[k], nj = j + dy[k];
		if(valid(ni, nj) && g[ni][nj] == '.' && !vis[ni][nj])
			ret += get(ni, nj);
	}
	return ret;
}

void st(int i, int j, int val){
	vis[i][j] = 2;
	res[i][j] = val;
	for(int k = 0; k < 4; k++){
		int ni = i + dx[k], nj = j + dy[k];
		if(valid(ni, nj) && g[ni][nj] == '.' && vis[ni][nj] != 2)
			st(ni, nj, val);
	}
}

int main() {
	int q; scanf("%d%d%d", &n, &m, &q);
	g.resize(n);
	for(int i = 0; i < n; i++)
		cin>>g[i];

	cnt.resize(n, vector<int>(m, 0));
	for(int i = 0; i < n; i++){
		for(int j = 0; j < m; j++){
			if(g[i][j] == '*')
				continue;
			for(int k = 0; k < 4; k++){
				int ni = i + dx[k], nj = j + dy[k];
				if(valid(ni, nj) && g[ni][nj] == '*')
					cnt[i][j]++;
			}
		}
	}

	vis.resize(n, vector<int>(m, 0));
	res.resize(n, vector<int>(m, 0));
	for(int i = 0; i < n; i++){
		for(int j = 0; j < m; j++){
			if(!vis[i][j] && g[i][j] == '.')
				st(i, j, get(i, j));
		}
	}

	while(q--){
		int x, y; scanf("%d%d", &x, &y);
		printf("%d\n", res[x - 1][y - 1]);
	}
	return 0;
}
