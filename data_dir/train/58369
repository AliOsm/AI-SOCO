//https://github.com/dush1729/Competitive-Programming
#include "bits/stdc++.h"
using namespace std;
int n,lo=-1,hi=999999999,mid,q,r,greatest,diff,root;
vector <int> idx,v,divisor;
int main()
{
	cin>>n;

	while(lo<=hi)
	{
		mid=(lo+hi)/2;

		cout<<"> "<<mid<<endl;
		q++;

		cin>>r;
		if(r==1) lo=mid+1,greatest=mid+1;
		else hi=mid-1;
	}

	mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
	for(int i=1;i<=n;i++) idx.push_back(i);
	shuffle(idx.begin(),idx.end(),rng);

	int i;
	for(i=0;q<60 and i<n;i++)
	{
		cout<<"? "<<idx[i]<<endl;
		q++;

		cin>>r;
		v.push_back(r);
	}
	

	sort(v.begin(),v.end());
	if(not binary_search(v.begin(),v.end(),greatest)) v.push_back(greatest);
	for(int i=1;i<v.size();i++) diff=__gcd(diff,v[i]-v[i-1]);

	if(greatest-1ll*(n-1)*diff<0)
	{
		root=sqrtl(diff);
		for(int i=1;i<=r;i++)
			if(diff%i==0)
				divisor.push_back(i),divisor.push_back(n/i);

		sort(divisor.begin(),divisor.end());
		while(greatest-1ll*(n-1)*divisor.back()<0) divisor.pop_back();
		diff=divisor.back();
	}

	cout<<"! "<<greatest-1ll*(n-1)*diff<<" "<<diff<<endl;
}