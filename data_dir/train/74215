
#include<bits/stdc++.h>
using namespace std;
/**
********************************************************************
******************* Author:Bisnu sarkar ****************************
********************************************************************
**/
#define ull            unsigned long long
#define ll             long long
#define vi             vector<int>
#define pb             push_back
#define mp             make_pair
#define pii            pair<int,int>
#define vit            vector<int> :: iterator
#define sit            set<int> :: iterator
#define vrit           vector<int> :: reverse iterator
#define ff             first
#define ss             second
#define endl           '\n';
#define what_is(x)     cerr << #x << " is " << x << endl;
///*....Debugger....*/
#define error(args...) {vector <string> _v = split(#args, ','); err(_v.begin(), args); cout << endl;}
vector <string> split(const string &s, char c) {
    vector <string> v;
    stringstream ss(s); string x;
    while (getline(ss, x, c)) v.emplace_back(x);
    return move(v);
}
void err(vector <string> :: iterator it) {}
template <typename T, typename... Args>
void err(vector <string> :: iterator it, T a, Args... args) {
    cout << it -> substr((*it)[0] == ' ', it -> length()) << " = " << a << ", ";
    err(++it, args...);
}

int ini(){int x; scanf("%d",&x);return x;}
long long inl(){ long long x;scanf("%lld",&x); return x;}
double ind(){double x; scanf("%lf",&x);return x;}
#define Iin ini();
#define Lin inl();
#define Din ind();

int set_1(int n,int pos){return n = (n | (1<<pos));}
int reset_0(int n,int pos){return n= n & ~(1<<pos);}
bool check_bit(int n,int pos){return n = n & (1<<pos);}

int dx[8]= {1,0,-1,0,-1,-1,1,1};
int dy[8]= {0,1,0,-1,-1,1,-1,1};
const int N = (int) 1e6 + 5;
const int M = (int) 1e9 + 7;
const double pi=2* acos(0.0);
const double eps=1e-9;


ll ans=0ll;
map<int,bool>vis;
map<int,int>dis;

vector<int>res;
void bfs(vector<int>v,int m)
{
    queue<int>q;
    for(auto x: v){
        //   cout<<x<<endl;
        vis[x]=true;
        q.push(x);
        dis[x]=0;
    }

    while(!q.empty()){
        int x=q.front();
      //   cout<<x<<endl;
        q.pop();

        if(!vis[x+1]){
            res.push_back(x+1);

            q.push(x+1);
            vis[x+1]=true;
            dis[x+1]=dis[x]+1;
            ans+=dis[x+1];
            if((int)res.size() >=m)break;
        }
        if(!vis[x-1]){
            res.push_back(x-1);

            q.push(x-1);
            vis[x-1]=true;
            dis[x-1]=dis[x]+1;
            ans+=dis[x-1];
             if((int)res.size() >=m)break;
        }
    }

}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t=1,te=0;
    while(t--){
        int n,m,x;
        cin>>n>>m;
        vector<int>v;
        for(int i=1;i<=n;++i){
            cin>>x;
            v.push_back(x);
        }

        bfs(v,m);

        cout<<ans<<endl;
        for(auto x: res)cout<<x<<" ";

        //printf("Case %d: ",++te);
    }
    return 0;
}
