#include <bits/stdc++.h>

using namespace std;

typedef long long LL;

int n,m;
int cnt[200005],dp[200005];
int ans[200005],a[200005];
int x,dq,num;
int pre[200005];
bool flag[200005];
vector<int> v[200005];
void gcd(LL a, LL b, LL &d, LL &x, LL &y){

	if (!b) {

		d = a;

		x = 1;

		y = 0;

		return;

	}

	gcd(b, a % b, d, y, x), y -= x * (a / b);

}
int main()
{
	scanf("%d%d",&n,&m);
	for (int i=1;i<=m;++i) cnt[__gcd(i,m)]++;
	for (int i=1;i<=m;++i) flag[i]=true;
	for (int i=1;i<=m;++i) v[__gcd(i,m)].push_back(i);
	for (int i=1;i<=n;++i)
	{
		scanf("%d",&x);
		if (x==0) x=m;
				flag[x]=false;
		cnt[__gcd(x,m)]--;
	}
	for (int i=1;i<=m;++i) dp[i]=-1e9;
	dp[1]=cnt[1];pre[1]=0;
	for (int i=2;i<=m;++i)
	{
		for (int j=1;j*j<=i;++j)
		{
			if (i%j!=0) continue;
			if (dp[j]+cnt[i]>dp[i])
			{
				dp[i]=dp[j]+cnt[i];
				pre[i]=j;
			}
			if (j==1) continue;
			if (dp[i/j]+cnt[i]>dp[i])
			{
				dp[i]=dp[i/j]+cnt[i];
				pre[i]=i/j;
			}
		}
	}
	printf("%d\n",dp[m]);
	dq=m;
	while (dq!=0)
	{
		for (int i=0;i<v[dq].size();++i)
		{
			if (flag[v[dq][i]]==false) continue;
			++num;a[num]=v[dq][i];	
		}
		dq=pre[dq];
	}
	for (int i=1;i<=num;++i) ans[i]=a[num+1-i];
	for (int i=1;i<=num;++i) a[i]=ans[i];
	ans[1]=a[1];
	for (int i=2;i<=num;++i)
	{
		//dq
		LL A,B,X,Y,D;
		A=a[i-1];B=m;
		gcd(A,B,D,X,Y);
		B/=D;
		while (X<=0) X=X+B;
		//a[i-1]*X=gcd(A[i-1],m);
		dq=a[i]/D;
		ans[i]=X*dq%m;
	}
	for (int i=1;i<=num;++i) ans[i]%=m;
	for (int i=1;i<=num;++i) printf("%d ",ans[i]);
	return 0;
}