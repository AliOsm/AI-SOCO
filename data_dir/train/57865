#pragma comment(linker, "/STACK:134217728")

#include <cstdio>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <functional>
#include <numeric>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <complex>
#include <memory.h>

using namespace std;

typedef long long LL;

int n, k;

int a[1 << 7];
double dp[33][33][222];

int main()
{
	scanf("%d%d", &n, &k);
	for(int i = 0; i < n; ++i)
		scanf("%d", &a[i]);

	for(int i = 0; i < n; ++i)
		for(int j = 0; j < n; ++j)
			dp[i][j][0] = i < j ? 1.0 : 0.0;

	for(int t = 1; t <= k; ++t)
	{
		for(int i = 0; i < n; ++i)
			for(int j = 0; j < n; ++j)
				dp[i][j][t - 1] /= n * (n + 1) / 2;
		for(int i = 0; i < n; ++i)
			for(int j = 0; j < n; ++j)
				for(int L = 0; L < n; ++L)
					for(int R = L; R < n; ++R)
					{
						int toi, toj;
						if (L <= i && i <= R)
							toi = R - (i - L);
						else
							toi = i;
						if (L <= j && j <= R)
							toj = R - (j - L);
						else
							toj = j;
						dp[i][j][t] += dp[toi][toj][t - 1];
					}
	}
	double res = 0;
	for(int i = 0; i < n; ++i)
		for(int j = i + 1; j < n; ++j)
			res += a[i] > a[j] ? dp[i][j][k] : 1.0 - dp[i][j][k];
	printf("%.10lf\n", res);
	return 0;
}