#include<bits/stdc++.h>
using namespace std;
typedef int ll;
typedef long double ld;
typedef pair<ll,ll> p2;
const ll hell=pow(10,6)+5;
ll p[1000005],vis[1000005],c[1000005],cnt;
void dfs(ll i){
	vis[i]=1;
	cnt++;
	if(!vis[p[i]])
	dfs(p[i]);
}
void solve(){
	ll n,k,a=0,b=0;
	cin>>n>>k;
	for(ll i=1;i<=n;i++)
	cin>>p[i];
	vector<ll> v,g;
	for(ll i=1;i<=n;i++)
	if(!vis[i]){
		cnt=0;
		dfs(i);
		c[cnt]++;
		g.push_back(cnt);
	}
	sort(g.begin(),g.end());
	for(ll i=1;i<=n;i++)
	if(c[i]){
		ll x=c[i];
		for(ll j=0;(1<<j)<=x;j++){
			v.push_back((1<<j)*i);
			x-=(1<<j);
		}
		if(x);
		v.push_back(x*i);
	}
	bitset<hell> dp;
	dp.set(0);
	for(ll i=0;i<ll(v.size());i++)
	dp|=(dp<<v[i]);
	if(dp.test(k))
	a=k;
	else
	a=k+1;
	cnt=0;
	for(ll i=ll(g.size())-1;i>=0;i--)
	if(k){
		ll lo=min(g[i]/2,k);
		b+=2*lo;
		k-=lo;
		if(g[i]%2)
		cnt++;
	}
	if(k)
	b+=min(k,cnt);
	cout<<a<<" "<<b;
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    ll qc=1;
    for(ll i=1;i<=qc;i++)
    solve();
}
