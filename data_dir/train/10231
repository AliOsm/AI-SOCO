#pragma comment (linker, "/STACK:256000000")
 
#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>
#include <unordered_set>
//#include <random>
 
using namespace std;
 
typedef unsigned int uint32;
typedef long long int64;
typedef unsigned long long uint64;
typedef double ldouble;
typedef pair<int, int> pii;
typedef pair<int64, int64> pll;
typedef pair<pii, pii> piiii;
 
#define pb push_back
#define sq(x) ((x)*(x))
#define tmin(x,y,z) (min(min((x),(y)),(z)))
#define rand32() (((unsigned int)(rand()) << 16) | (unsigned int)(rand()))
#define rand64() (((unsigned int64)(rand32()) << 16) | (unsigned int64)(rand32()))
#define bit(mask, b) ((mask >> b) & 1)
#define biton(mask, bit) (mask | (((uint64)(1)) << bit))
#define bitoff(mask, bit) (mask & (~(((uint64)(1)) << bit)))
#define bitputon(mask, bit) (mask |= (((uint64)(1)) << bit))
#define bitputoff(mask, bit) (mask &= (~(((uint64)(1)) << bit)))
#define FAIL() (*((int*)(0)))++
#define INF ((int)(1e9) + 1337)
#define LINF ((int64)(1e18))
#define EPS (1e-7)
#define PI (3.1415926535897932384626433832795)
#define y1 yy1
#define y0 yy0
#define j0 jj0

//#define HMOD (1000000000000000003LL)
//#ifdef _MY_DEBUG
//#define HMOD 1000000007
//#endif
//#define HBASE 524287

//mt19937 ggen;
int n;
int toInt(string a)
{
	int ans = 0;
	for(int i = 0; i < a.size(); ++i)
	{
		ans *= 10;
		ans += a[i] - '0';
	}
	return ans;
}

void solve()
{
	string a;
	getline(cin, a);
	vector < pii > plus, minus;
	int en = 0, en1 = 0;
	for(int i = 0; i < a.size(); ++i)
	{
		if (a[i] == '?')
		{
			if (!i || a[i - 2] == '+')
				plus.push_back(pii(en++, 1));
			else
				minus.push_back(pii(en++, 1));
		}
		if (a[i] == '=')
		{
			string t = a.substr(i + 2);
			n = toInt(t);
		}
	}
	en = 0, en1 = 0;
	int bal = (int)plus.size() - (int)minus.size() - n;
	if (bal > 0)
	{
		for(int i = 0; i < minus.size(); ++i)
		{
			int t = min(n, bal + 1);
			minus[i].second = t;
			bal -= t - 1;
		}
	}
	else
	{
		bal = -bal;
		for(int i = 0; i < plus.size(); ++i)
		{
			int t = min(n, bal + 1);
			plus[i].second = t;
			bal -= t - 1;
		}
	}
	if (bal)
	{
		cout << "Impossible";
		return;
	}
	cout << "Possible\n";
	for(int i = 0; i < plus.size() + minus.size(); ++i)
	{
		if (en != plus.size() && plus[en].first == i)
		{
			if (i)
				cout << " + ";
			cout << plus[en++].second;
		}
		else
		{
			cout << " - " << minus[en1++].second;
		}
	}
	cout << " = " << n;
}

int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
    srand(1313);
	int t;
	solve();
    return 0;
}