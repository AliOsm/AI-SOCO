#include<bits/stdc++.h>
using namespace std;
 
#define pi 3.141592654
#define hell 1000000007 
#define io ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define fix(n) cout << fixed << setprecision(n)
#define in1(n,c) c n;cin>>n
#define in2(a,b,c) c a,b;cin>>a>>b
#define ina(a,n,c) c a[n];rep(i,0,n)cin>>a[i]
#define ins(s) string s;cin>>s
#define mset(a,n) memset(a,n,sizeof a)
#define Max(a,b) ((a)>(b)?(a):(b))
#define Min(a,b) ((a)<(b)?(a):(b))
#define rep(i,a,b) for (__typeof((b)) i=(a);i<(b);i++)
#define repp(i,a,b,p) for(__typeof((b)) i=(a);i<(b);i+=p)
#define ren(i,a,b) for(__typeof((a)) i=(a);i>=(b);i--)
#define lbd lower_bound
#define ubd upper_bound
#define ll  long long
#define ull unsigned long long
#define ld long double
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define vi vector<int>
#define vll vector<ll>
#define pii pair<int,int>
#define pll pair<ll,ll>
#define piii pair<pair<int,int>,int>
#define all(v) (v).begin(), (v).end()
#define sz(x) (ll)x.size()
#define out(n) cout<<n<<" "
#define outl(n) cout<<n<<endl
#define line cout<<endl
#define bug(n) {outl(n);return;}
ll n,ans[100005];
pair<pll,ll> a[100005];
ll fun(pll a, pll b){
    if(b.fi>=a.fi&&b.fi<=a.se)return 1;
    if(b.se>=a.fi&&b.se<=a.se)return 1;
    if(b.fi<a.fi&&b.se>a.se)return 1;
    return 0;
}
void solve(){
    cin>>n;
    rep(i,1,n+1)cin>>a[i].fi.fi>>a[i].fi.se,a[i].se=i;
    sort(a+1,a+n+1);
    stack<pair<pll,ll> > s;
    s.push(a[1]);
    rep(i,2,n+1){
        pair<pll,ll> d=s.top();
        if(d.fi.se<a[i].fi.fi){
            rep(j,1,i)ans[a[j].se]=1;
            rep(j,i,n+1)ans[a[j].se]=2;
            rep(j,1,n+1)out(ans[j]);line;
            return;
        }
        else if(d.fi.se<a[i].fi.se){
            d.fi.se=a[i].fi.se;
            s.pop();
            s.push(d);
        }
    }
    bug(-1);
}
void prep(){
    
}
int main(){
    io;
    ll t=1;
    cin>>t;
    prep();
    fix(12);
    while(t--)
        solve();
    return 0;
}