#include <bits/stdc++.h>
using namespace std;

const int N = 10000005;

int P[N];

int upto(int x, int n) {
        vector <int> p;
        while(x > 1) { int px = P[x];
            p.push_back(P[x]);
            while(x % px == 0) x /= px;
        }
        int sum = 0, sz = p.size();
        for(int i = 1; i < (1 << sz); i++) {
            int r = 1;
            for(int j = 0; j < sz; j++){
                if((i >> j) & 1) {
                    r *= p[j];
                }
            }
            if(__builtin_popcount(i) % 2) sum += n / r;
            else                          sum -= n / r;
        }
        return n - sum;
}

int main() {
        for(int i = 2; i < N; i++) {
            if(!P[i]) {
                for(int j = i; j < N; j += i) {
                    P[j] = i;
                }
            }
        }

        int test; cin >> test;
        while(test--) {
                int x, p, k; cin >> x >> p >> k;
                k += upto(p, x);
                int l = 1, r = N - 1, ans = -1;
                while(l <= r) {
                    int mid = (l + r) >> 1;
                    if(upto(p, mid) >= k) ans = mid, r = mid - 1;
                    else                             l = mid + 1;
                }
                cout << ans << endl;
        }
}
