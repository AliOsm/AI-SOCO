#include<bits/stdc++.h>
#define f first
#define s second 
#define ll long long
#define pb push_back
#define mp make_pair
#define FX fflush(stdin);cout<<fixed,cout.precision(18);
#define iOS ios_base::sync_with_stdio(false);cin.tie(NULL);
#define pii pair<int,int>
#define pll pair<long long,long long>
#define all(x) x.begin(), x.end()
#define endl '\n'
const long double eps=0.00000001;
const long long MOD=1e9+7;
const long long mod=998244353;
const double PI=3.141592653589793238463;
const long double pi = 4 * atan(1.0);
using namespace std;
void debug() {cout<<endl;}
template <typename H, typename... T> void debug(H p, T... t) {
   std::cout << p<<" ";
   debug(t...);
}
string s,t;
ll ans;
int n,m,k,q;
main()
{
	FX iOS
	int i,j; 
	cin>>q;
	for(j=0;j<q;++j)
	{
		cin>>n>>k>>s;
		t=s;
		ans=0;
		set<pair<int,char>>seta[k+5];
		map<char,int>mapa[k+5];
		for(i=0;i+k<n;++i)
		{
			seta[i%k].insert({i,s[i]});
			seta[i%k].insert({i+k,s[i+k]});
			seta[i%k].insert({n-i-1,s[n-i-1]});
			seta[i%k].insert({n-i-k-1,s[n-i-k-1]});
		}
		char best='.';
		for(i=0;i<k;++i)
		{
			for(auto it:seta[i])
			{
				mapa[i][it.s]++;
				if(best=='.')best=it.s;
				else if(mapa[i][it.s]>mapa[i][best])
					best=it.s;
			}
			for(auto it:seta[i])
			{
				t[it.f]=best;
			}
		}
		for(i=0;i<n;++i)
			if(s[i]!=t[i])ans++;
		cout<<ans<<endl;
		//cout<<t<<endl;
	}
}