#include <iostream>
#include <queue>
#include <set>
#include <algorithm>
#include <cmath>
#include <climits>
#include <algorithm>
#include <bitset>
#include <stack>
#include <sstream>
#include <vector>
#include <string>
#include <list>
#include <map>
#define DEBUG
#define ull long long
#define pii pair<int, int>
#define loop(xxx,n) for(int xxx = 0; xxx < n; xxx++)

using namespace std;

int zxc;
char a[8][8];
int main() {
	
	loop(i, 8) {
		string s;
		cin >> s;
		loop(j, 8)
			a[i][j] = s[j];
	}
//
//#ifdef DEBUG
//	cout << endl;
//	loop(i, 8) {
//		loop(j, 8)
//			cout << a[i][j];
//		cout << endl;
//	}
//#endif // DEBUG
//
	vector<int> w;
	w.push_back(INT_MAX);
	vector<int> b;
	b.push_back(INT_MAX);
	loop(i, 8) {
		loop(j, 8) {
			char p = a[i][j];
			int r = i, c = j;
			int moves = 0;
			
			if (p == 'W'){
				//printf("There is a White piece on %d %d\n", r, c);
				while (r > 0 && a[r-1][c] != 'B') {
					moves++;
					r--;
					if (r == 0) {
						w.push_back(moves);
						//printf("From %d %d W reached row 0 in %d moves\n", i, j, moves);
						break;
					}
				}
			}
			else if (p == 'B') {
				//printf("There is a Black piece on %d %d\n", r, c);
				while (r < 7 && a[r+1][c] != 'W') {
					moves++;
					r++;
					if (r == 7) {
						b.push_back(moves);
						//printf("From %d %d B reached row 7 with %d moves\n", i, j,moves);
						break;
					}
				}
			}
		}
	}

	int B = *min_element(b.begin(), b.end());
	int W = *min_element(w.begin(), w.end());

	if (B < W)
		cout << "B\n";
	else
		cout << "A\n";
	return 0;
}

/*
BBBBBB.B
..W...W.
......B.
........
.....W..
........
........
WWWWWW.W

*/