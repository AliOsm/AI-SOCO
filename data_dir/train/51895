#include<bits/stdc++.h>
#define st first
#define nd second
#define pb push_back
#define ppb pop_back
#define ppf pop_front
#define umax(x,y) x=max(x,y)
#define umin(x,y) x=min(x,y)
#define ll long long
#define ii pair<int,int>
#define iii pair<ii,int>
#define iiii pair<ii,ii>
#define sz(x) ((int) x.size())
#define orta ((bas+son)/2)
#define all(x) x.begin(),x.end()
#define dbgs(x) cerr<<(#x)<<" --> "<<(x)<<" "
#define dbg(x) cerr<<(#x)<<" --> "<<(x)<<endl;getchar()
#define pw(x) (1<<(x))
#define inf 1000000000000000000ll
#define MOD 1000000007
#define N 250005
#define M 2005
#define LOG 20
#define KOK 550
#define EPS 0.00001
using namespace std;

int a,b,c;
int p[M];
int mod=pw(30)-1;
int po[310][20];
unordered_map<int,int> dp[410][M];
vector<int> v;

void make_sorted(int& a,int& b,int& c) {

	if(a>b) swap(a,b);
	if(b>c) swap(b,c);
	if(a>b) swap(a,b);

}

int solve(int pos,int a,int b,int c) {

	if(pos==sz(v)) return 1;

	make_sorted(a,b,c);

	int par=b*M+c;

	if(dp[pos][a].count(par)) return dp[pos][a][par];

	int r=0;

	for(int i1=0;po[pos][i1]<=a;i1++) {

		for(int i2=0;po[pos][i2]<=b;i2++) {

			for(int i3=0;po[pos][i3]<=c;i3++) {

				r=(r+1ll*solve(pos+1,a/po[pos][i1],b/po[pos][i2],c/po[pos][i3])*(i1+i2+i3+1))&mod;

			}

		}

	}

	return dp[pos][a][par]=r;

}

int main() {

//	freopen("hur.gir","r",stdin);
//	freopen("hur.cik","w",stdout);

//	freopen("input.txt","r",stdin);

	scanf("%d %d %d",&a,&b,&c);

	for(int i=2;i<M;i++) {

		if(!p[i]) {

			v.pb(i);

			for(int j=i;j<M;j+=i) p[j]=1;

		}

	}

	reverse(all(v));

	for(int i=0;i<sz(v);i++) {

		po[i][0]=1;

		for(int j=1;j<=15;j++) po[i][j]=po[i][j-1]*v[i];

	}

	printf("%d",solve(0,a,b,c));

}