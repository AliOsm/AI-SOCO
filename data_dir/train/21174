#include<bits/stdc++.h>
#define god dimasi5eks
#pragma GCC optimize("O3")
#define fi first
#define se second
#define pb push_back
#define pf push_front
#define mod 1000000007
#define dancila 3.14159265359
#define eps 1e-9

using namespace std;

typedef long long ll;

int n, m, d, af[100002], mxdist[100002], ans;
vector<int> v[100002];

void dfs(int dad, int nod)
{
    for(int i = 0; i < v[nod].size(); ++i)
    {
        int vecin = v[nod][i];
        if(vecin == dad)
            continue;
        dfs(nod, vecin);
        if(af[vecin] || mxdist[vecin])
            mxdist[nod] = max(mxdist[nod], mxdist[vecin] + 1);
    }
}
void dfs2(int dad, int nod, int mx2)
{
    ans += (max(mxdist[nod], mx2) <= d);
    multiset<int> mxx;
    for(int i = 0; i < v[nod].size(); ++i)
    {
        int vecin = v[nod][i];
        if(vecin == dad)
            continue;
        if(af[vecin] || mxdist[vecin])
            mxx.insert(mxdist[vecin] + 1);
    }
    for(int i = 0; i < v[nod].size(); ++i)
    {
        int vecin = v[nod][i];
        if(vecin == dad)
            continue;
        if(af[vecin] || mxdist[vecin])
            mxx.erase(mxx.lower_bound(mxdist[vecin] + 1));
        int xx = mx2 + ((mx2 != 0) || af[nod]);
        if(!mxx.empty())
            xx = max(xx, *mxx.rbegin() + 1);
        dfs2(nod, vecin, xx);
        if(af[vecin] || mxdist[vecin])
            mxx.insert(mxdist[vecin] + 1);
    }
}
int main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n >> m >> d;
    for(int i = 1; i <= m; ++i)
    {
        int a;
        cin >> a;
        af[a] = 1;
    }
    for(int i = 1; i < n; ++i)
    {
        int a, b;
        cin >> a >> b;
        v[a].pb(b);
        v[b].pb(a);
    }
    dfs(0, 1);
    dfs2(0, 1, 0);
    cout << ans;
    return 0;
}
