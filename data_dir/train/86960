#include <iostream>
#include <cmath>
using namespace std;
typedef long long LL;
const LL MOD = 1000000007;
const int N = 52;

const double EPS=1e-6;

LL mpow(LL a, LL x) {
    if (x == 0) return 1;
    LL t = mpow(a, x>>1);
    if (x%2==1)
        return 1LL*t*t%MOD*a%MOD;
    return 1LL*t*t%MOD;
}

int a[7845+1][7845+1];
LL R,cnt;
void prt() {
    for(LL i=1;i<=cnt;i++){
        for(LL j=1;j<=cnt+1;j++){
            printf("%d ", a[i][j]?1:0);
        }
        printf("\n");
    }
    printf("\n");
}
void Gauss(LL n) {
    for(LL i=1;i<=n;i++){
        int mn=min(n,i+100);

        for(LL j=i+1;j<=mn;j++) {
            if (a[j][i]==0) continue;
            LL t=1LL*a[j][i]*mpow(a[i][i],MOD-2)%MOD;

            for(LL k=i;k<=mn;k++) {
                a[j][k]-=(1LL*t*a[i][k]%MOD);
                a[j][k]=(a[j][k]%MOD+MOD)%MOD;
            }
            a[j][n+1]-=(1LL*t*a[i][n+1]%MOD);
            a[j][n+1] = (a[j][n+1]%MOD+MOD)%MOD;
        }
        //printf("bu = %d\n", bu);
    }
    for(LL i=n;i>=1;i--){
        a[i][n+1]=1LL*a[i][n+1]*mpow(a[i][i],MOD-2)%MOD; 
        a[i][i]=1;
        int mx=max(1,(int)i-100);
        for(LL j=i-1;j>=mx;j--){
            a[j][n+1] -= 1LL*a[j][i]*a[i][n+1]%MOD;
            a[j][n+1] = (a[j][n+1]%MOD+MOD)%MOD;
            a[j][i]=0;
        }
    }
}

LL dx[4]={-1,0,1,0};
LL dy[4]={0,-1,0,1};
LL po[4], p[4];
LL id[202][202];
LL P(LL x, LL y) {return id[x+N][y+N];}

int main() {
    cin>>R; LL sum=0;
    for(LL i=0;i<4;i++) {
        cin>>p[i]; sum+=p[i];
    }
    for(LL i=0;i<4;i++) {
        po[i]=1LL*p[i]*mpow(sum,MOD-2)%MOD;
    }

    for(LL i=-R;i<=R;i++){
        for(LL j=-R;j<=R;j++){
            if(i*i+j*j<=R*R) {
                id[i+N][j+N] = ++cnt;
            }
        }
    }

    for(LL i=-R;i<=R;i++){
        for(LL j=-R;j<=R;j++){
            if (i*i+j*j>R*R)continue; 

            a[P(i,j)][P(i,j)]=1;
            for(LL d=0;d<4;d++) {
                LL nx=i+dx[d];
                LL ny=j+dy[d];
                if (nx*nx+ny*ny<=R*R) {
                    a[P(i,j)][P(nx,ny)]=((-1LL*po[d])%MOD+MOD)%MOD;
                }
            }
            a[P(i,j)][cnt+1]=1;
        }
    }
    //prt();
    Gauss(cnt);

    LL ret = a[P(0,0)][cnt+1];
    printf("%lld\n", ret);
}





