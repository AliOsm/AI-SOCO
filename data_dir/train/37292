#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
vector<ll> adj[100005],ans;
ll vis[100005],p[100005];
void dfs(ll node){
    vis[node]=1;
    for(auto &v:adj[node]){
        if(vis[v] && p[v]==0){
            cout<<"-1";
            exit(0);
        }
        dfs(v);
        if(p[v]==0)ans.push_back(v);
        p[v]=1;
    }
}
int main(){
    ios_base:: sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    ll n,k;cin>>n>>k;
    ll c[k];for(ll i=0;i<k;i++)cin>>c[i];
    for(ll i=1;i<=n;i++){
        ll t;cin>>t;
        for(ll j=1,x;j<=t;j++)cin>>x,adj[i].push_back(x);
    }
    for(ll i=0;i<k;i++){
        if(vis[c[i]])continue;
        dfs(c[i]);
        ans.push_back(c[i]);
        p[c[i]]=1;
    }
    cout<<ans.size()<<"\n";
    for(auto &ele:ans)cout<<ele<<" ";
}
