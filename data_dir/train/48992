#include <bits/stdc++.h>
using namespace std;
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long
#define ld long double
#define pb push_back
#define fe first
#define se second
#define st(x) sort(x.begin(),x.end())
#define rst(x) sort(x.rbegin(), x.rend())
#define all(x) x.begin(),x.end()
long double pi = 3.14159265358979323;
 
const double EPS = 1e-12;
const int N = 1e6 + 5;
const int mod = 1e9 + 7;
 
//for sleep...
bool cmp(const string &s , const string &t)
{
    if(s.size() < t.size())
        return true;
    else if(s.size() > t.size())
        return false;
    else
    {
        for(int i = 0 ; i < s.size() ; i++ )
        {
            if(s[i] < t[i])
                return true;
            else if(s[i] > t[i])
                return false;

        }
        return false;
    }
}
 
 
int main()
{
    fast;
    ll n;
    cin >> n ;
    string s;
    cin >> s ;
    if(n == 2)
    {
        cout << s[0] - '0' + s[1] - '0';
        return 0 ; 
    }
    string dummy;
    ll mid = n/2 ,idx = -1;
    vector < string > v;
    if(n % 2 == 0)
        mid--;
    for(int i = mid ; i < n; i++ )
    {
        if(s[i+1] != '0'){
            idx = i;
            break;
        }
    }
   
    if(idx != -1)
    {
        ll carry = 0 ,res = 0  ;
        for(int i = n - 1  , j = idx ; j >= 0; j--,i--)
        {
            if(i > idx)
            {
               
                res = s[j] - '0' + s[i] - '0' + carry ;
               
                carry = res/10;
            }
            else
            {
                res = s[j] - '0' + carry;
                carry = res/10;
            }
          
            dummy = dummy + to_string(res%10);
           
        }
       
        reverse(dummy.begin() , dummy.end());
       
        v.pb(dummy);
        dummy.clear();


    }

   
   
    if(n > 3){
    idx = 0 ;
    for(int i = mid - 1 ; i >= 0 ; i-- )
    {
        if(s[i+1] != '0')
        {
            idx = i ;
            break;
        }
    }
        ll carry = 0 ,res = 0  ;
        for(int i = n - 1 , j = idx ; i > idx; j--,i--)
        {
            if(j >= 0)
            {
                res = s[j] - '0' + s[i] - '0' + carry ;
                carry = res/10;
            }
            else
            {
                res = s[i] - '0' + carry;
                carry = res/10;
            }
            dummy = dummy + to_string(res%10);
        }
        reverse(dummy.begin() , dummy.end());
        v.pb(dummy);
        dummy.clear();
    }

   
    if(v.size() == 1)
    {
        cout << v[0];
        return 0 ;
    }
    sort(v.begin() , v.end() , cmp);
    cout << v[0];





















    
    return 0;
    
}