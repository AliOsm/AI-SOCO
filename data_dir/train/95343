#include <bits/stdc++.h>
using namespace std;

#define int long long
typedef pair <int, int> pii;

const int N = 1e5 + 10;
int n, st, cnt, is[N], mark[N];
pii ar[N];
vector <int> v, ans;
vector <pii> adj[N];
map <int, int> mp, mp2;

void dfs(int v) {
//	cout << v << ' ' << is[v] << endl;
	ans.push_back(v);
	for (; is[v] < adj[v].size();)
		if (!mark[adj[v][is[v]].second]) {
			mark[adj[v][is[v]].second] = 1;
			dfs(adj[v][is[v]++].first);
		}
		else
			is[v]++;
}

int32_t main() {
	cin >> n;
	for (int i = 0; i < n; i++) {
		int x, y;
		cin >> x >> y;
		ar[i] = {x, y};
		v.push_back(x);
		v.push_back(y);
	}
	sort(v.begin(), v.end());
	
	for (int i = 0; i < v.size(); i++)
		if (mp.find(v[i]) == mp.end()) {
//			cout << v[i] << " --> " << cnt << endl;
			mp[v[i]] = cnt, mp2[cnt++] = v[i];
		}
	
	for (int i = 0; i < n; i++) {
		int x = ar[i].first, y = ar[i].second;
		x = mp[x];
		y = mp[y];
		adj[x].push_back({y, i});
		adj[y].push_back({x, i});
//		cout << x << " <--> " << y << endl;
	}
	
	for (int i = 0; i < cnt; i++)
		if (adj[i].size() & 1) 
			st = i;
	dfs(st);
	
	for (int i : ans)
		cout << mp2[i] << ' ';
}
