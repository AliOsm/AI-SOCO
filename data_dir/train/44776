#include <bits/stdc++.h>

#define forsn(i,s,n) for(tint i=(s);i<(tint)(n); i++)
#define forn(i,n) forsn(i,0,n)
#define dforn(i,n) for(tint i = tint(n)-1; i >= 0; i--)
#define debug(x) cout << #x << " = "  << x << endl

using namespace std;

typedef long long tint;

void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		tint p = tint(v.size());
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

const tint MAXK = 256;
vector<tint> representante (MAXK);
tint repr (tint x)
{
	while (x != representante[x])
		x = representante[x];
	return x;
}

int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	tint n,k;
	while (cin >> n >> k)
	{
		vector<tint> p (n), tamanho (MAXK,1);
		forn(i,n)
			cin >> p[i];
		forn(i,MAXK)
			representante[i] = i;
			
		forn(i,n)
		{
			if (repr(p[i]) > 0)
			{
				while(tamanho[repr(p[i])] <= k)
				{
					if (repr(p[i]) == 0)
						break;
					tint r = tamanho[repr(p[i])]+tamanho[repr(repr(p[i])-1)];
					if (r > k)
						break;
					
					tamanho[repr(p[i])] = r;
					tamanho[repr(repr(p[i])-1)] = r;
					representante[repr(p[i])] = repr(repr(p[i])-1);
				}
			}
		}
		
		forn(i,n)
		{
			if (i)
				cout << " ";
			cout << repr(p[i]);
		}
		cout << "\n";
	}
	
	return 0;
}




