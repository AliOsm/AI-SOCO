#include <bits/stdc++.h>

#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define inf 0x3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl

using namespace std;
typedef long long  ll;
const int N = 2e5 + 4 , MOD = 1e9 + 7;

int memo[N][3] , n , cnt[3] , l , r;

int mul(int a , int b){
    return (1ll * a * b) % MOD;
}

int add(int a , int b){
    a += b;
    if(a >= MOD)
        a -= MOD;
    return a;
}

int solve(int indx , int rem){
    if(indx == n)
        return (!rem ? 1 : 0);
    int &ret = memo[indx][rem];
    if(~ret)
        return ret;

    ret = 0;
    for(int mod = 0 ; mod < 3 ; ++mod)
        ret = add(ret , mul(cnt[mod] , solve(indx + 1 , (rem + mod) % 3)));
    return ret;
}


int main(){
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
    cin >> n >> l >> r;

    vector<int> tmp(3 , 0);
    for(int i = 0 ; i < 3 ; ++i)
        tmp[i] += l / 3;

    for(int i = 0 ; i <= l % 3 ; ++i)
        tmp[i]++;

    for(int i = 0 ;  i < 3 ; ++i)
        cnt[i] += r / 3;

    for(int i = 0 ; i <= r % 3 ; ++i)
        cnt[i]++;

    for(int i = 0 ; i < 3 ; ++i)
        cnt[i] -= tmp[i];

    cnt[l % 3]++;

    memset(memo , -1 , sizeof memo);
    cout << solve(0 , 0) << '\n';
}
