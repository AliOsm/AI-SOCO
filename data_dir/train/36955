#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ff first
#define ss second
#define PI 2*acos(0.0)
#define all(a) a.begin(),a.end()
#define INF (1<<28)
#define mem(a,x) memset(a,x,sizeof(a))
#define SEGMENT_TREE left=2*node,right=left+1,mid=(b+e)/2
using namespace std;


/**------------------------------------BITMASK------------------------------------------**/
//int Change(int N, int pos){return N= N^(1<<pos);}
//bool Check(int N, int pos){return (bool)(N &(1<<pos));}
/**-----------------------------------------------------------------------------------------------**/

/**-----------------------------DIRECTION_ARRAY-------------------------**/
///------FOUR_DIRECTION---------///
//int fx[]={0,1,0,-1};
//int fy[]={1,0,-1,0};


///------EIGHT_DIRECTION---------///
//int fx[]={0,1,1,1,0,-1,-1,-1};
//int fy[]={1,1,0,-1,-1,-1,0,1};
/**--------------------------------------------------------------------------------------**/

//int gcd(int a, int b){return (a==0)? b: gcd(b%a,a);}
//int lcm(int a, int b){return (a/gcd(a,b))*b;}


/*****int exgcd(int A, int B, int *X, int *Y){


    int x2, y2, x1, y1, x, y, r, r1, r2, q;
    x2=1; y2=0;
    x1=0; y1=1;
    for(r2=A, r1=B; r1!=0 ; r2=r1, r1=r, x2=x1, y2=y1, x1=x, y1=y){

        q=r2/r1;
        r=r2%r1;
        x=x2-(x1*q);

        y=y2-(y1*q);
    }
    *X=x2;
    *Y=y2;
    return r2;

}******/




///-----------------------------START FROM HERE--------------------------------------///


vector<int>vv, VV;

bool mark[200005];
int arr[100005], cnt[200005];
void seive(){

    for(int i=2; i<=200000; i++){

        if(mark[i]==0){
            for(int j=i+i; j<=200000; j+=i)mark[j]=1;

        }
    }
    for(int i=2; i*i<=200000; i++){
        if(mark[i]==0)vv.pb(i);
    }

}

ll po(ll n, int x){

    ll ret=1;
    for(int i=1; i<=x; i++){
        ret*=n;
    }
    return ret;
}

int main(){

    seive();
    int n;
    //cout<<vv.size()<<endl;
    scanf("%d", &n);

    for(int i=1; i<=n; i++)scanf("%d", &arr[i]);

    ll ans=1;
    for(int i=0; i<vv.size(); i++){
        //int cnt=0;
        int ft=2000001, sn=2000001;

        for(int j=1; j<=n; j++){

            int cnt=0;
            while(arr[j]%vv[i]==0){
                arr[j]/=vv[i];
                cnt++;
            }
            if(cnt<ft){
                sn=ft;
                ft=cnt;
            }else if(sn>cnt){
                sn=cnt;
            }

        }
        ans*=po(vv[i], sn);
    }
    for(int i=1; i<=n; i++){
        if(arr[i]>1)cnt[arr[i]]++;
    }
    for(int i=1; i<=200000; i++){
        if(cnt[i]>=n-1)ans*=(ll)i;

    }
    cout<<ans;
}
