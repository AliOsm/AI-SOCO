#include <bits/stdc++.h>

#define x0 abc
#define y0 ABC
#define x1 abcd
#define y1 ABCD
#define xn abcde
#define yn ABCDE

#define l_b lower_bound
#define u_b upper_bound

#define fi first
#define se second
#define m_p make_pair

#define p_b push_back
#define po_b pop_back

#define ld long double
#define ll long long

#define re return
#define cont continue

#define MAXLL 9000000000000000000LL
#define MAXINT 2000000000

#define MINLL -9000000000000000000LL
#define MININT -2000000000

#define P acos(-1)

#define endl '\n'

#define OUT cout << "-------" << endl;

using namespace std;

vector <int> v[181];

int one, two, n, m, i, kol;

bool pole[181];

    void dfs1(int nom)
    {
        int i;

        kol++;

        pole[nom] = true;

        for (i = 0; i < v[nom].size(); i++)
            if (!pole[v[nom][i]]) dfs1(v[nom][i]);
    }

    void dfs2(int nom, int last)
    {
        int i;

        pole[nom] = true;

        for (i = 0; i < v[nom].size(); i++)
            if (pole[v[nom][i]] && v[nom][i] != last) {
                cout << "FHTAGN!" << endl;

                exit(0);
            }

        for (i = 0; i < v[nom].size(); i++)
            if (v[nom][i] != last) dfs2(v[nom][i], nom);
    }

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n >> m;

    if (n != m) {
        cout << "NO" << endl;

        re 0;
    }

    for (i = 1; i <= m; i++) {
        cin >> one >> two;

        v[one].p_b(two);

        v[two].p_b(one);
    }

    dfs1(1);

    if (kol < n) {
        cout << "NO" << endl;

        re 0;
    }

    for (i = 1; i <= n; i++) pole[i] = false;

    dfs2(1, -1);

    cout << "NO" << endl;

    return 0;
}
