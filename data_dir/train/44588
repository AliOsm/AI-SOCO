#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOR(i, a, b) for (int i = a; i < int(b); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define ll long long
#define pii pair<int, int>

const int MAX = 102;
char s[MAX];

int dp[MAX][MAX][MAX];
bool visited[MAX][MAX][MAX];

int R[1000], C[1000];
int n;

void init() {
	C['U'] = 1;
	C['D'] = -1;
	R['L'] = -1;
	R['R'] = 1;
}

int solve(int lvl, int r, int c) {
	if(!visited[lvl][r][c]) {
		visited[lvl][r][c] = true;
		if(lvl == n) {
			if(r == 100 && c == 100) dp[lvl][r][c] = 0;
			else dp[lvl][r][c] = -1000000;
		}
		else {
			dp[lvl][r][c] = solve(lvl + 1, r, c);
			dp[lvl][r][c] = max(dp[lvl][r][c], solve(lvl + 1, r + R[s[lvl]], c + C[s[lvl]]) + 1);
		}
	}
	return dp[lvl][r][c];
}

int main() {
	init();
	scanf("%d", &n);
	scanf("%s", s);
	printf("%d\n", solve(0, 100, 100));
}