#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ull unsigned long long int
#define Endl endl
#define mod  1000000007
#define mkp make_pair
#define pb push_back
#define cin(n) scanf("%d",&n)
#define cout(n) printf("%d ",n)
#define sf(n) scanf("%d",&n)
#define pf(n) printf("%d ",n)
#define bitget(n) __builtin_popcountll(n)
ll dx[] = {1,1,0,-1,-1,-1,0,1};
ll dy[] = {0,-1,-1,-1,0,1,1,1};
ll dxx[] = {1,-1,0,0};
ll dyy[] = {0,0,-1,1};
ll modexpo(ll x,ll y){if(y==0)return 1;if(y%2){ll viky=modexpo(x,y/2);
return (((x*viky)%mod)*viky)%mod;}else{ll viky=modexpo(x,y/2);return (viky*viky)%mod;
}}
ll intpoint(ll x1, ll y1, ll x2, ll y2) { return ( __gcd(abs(x1-x2),abs(y1-y2))+1); }
bool isvalid(ll x,ll y,ll n,ll m) { return (x>=0&&x<n&&y>=0&&y<m); }
// mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
// int pp = uniform_int_distribution<int>(0, kk-1)(rng);
// ---------------------///////////////---------------------------------
// ---------------------///////////////----------------------------------
// -------------/////////////////---------------------------------///////


int main() {
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    ll n;

    cin>>n;

    ll ap[n+11];

    for(ll i=0;i<n;i++){
    	cin>>ap[i];
    }	

    // ll ans = 0;

    // cin>>s;

    string ans = "";
    ll p = n;
    ll start = 0;
    ll end = n-1;
    ll val = 0;

	 while(start<=end){
	 	if(ap[start]>ap[end]){
	 		// char cc = '0' + ap[end];
	 		if(val<ap[end]){
	 			ans.push_back('R');
	 			
	 			val = ap[end];
	 			end--;
	 		}else if(val<ap[start]){
	 			ans.push_back('L');
	 			val = ap[start];
	 			start++;
	 			// val
	 		}else{
	 			break;
	 		}
	 	}else{
	 		if(val<ap[start]){
	 			ans.push_back('L');
	 			
	 			val = ap[start];
	 			start++;
	 		}else if(val<ap[end]){
	 			ans.push_back('R');
	 			val = ap[end];
	 			end--;
	 			// val
	 		}else{
	 			break;
	 		}
	 	}
	 }

	 cout<<ans.size()<<"\n";

	 cout<<ans;
    return 0;
}