#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef pair<int, int> pii;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define mod(n, m) ((n%m + m) % m)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'

pair<int, int> memo[10010];
map<int, int> hval;
string x;

const int base = 31, mod = 1e9 + 9;

pii solve(int idx)
{
	if (idx == sz(x))
		return {1, 0};
	if (idx > sz(x))
		return {0, 0};

	pii &ret = memo[idx];
	if (ret.first != -1)
		return ret;
	ret = {0, 0};

	int h = 1;
	pii hoba;
	for(int i = 0; i < 1000 && i + idx < sz(x); i++)
	{
		h = (h * base + x[i + idx])%mod;
		if (!hval.count(h))
			continue;
		if (solve(idx + i + 1).first)
			return ret = {1, hval[h]};
	}

	return ret;
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n, m;
	cin >> n >> x >> m;
	vector<string> vec(m + 1);

	erep(i, 1, m)
	{
		cin >> vec[i];
		reverse(all(vec[i]));
		int h = 1;
		for(char j : vec[i])
			h = (h * base + tolower(j))%mod;
		hval[h] = i;
	}

	reset(memo, -1);
	pii ret = solve(0);
	int curr = 0;

	while(ret.first > 0)
	{
		string y = vec[ret.second];
		reverse(all(y));
		cout << y << " ";
		curr += sz(y);
		ret = memo[curr];
	}

	return 0;
}
