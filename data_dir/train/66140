#pragma comment(linker, "/STACK:256000000")
#define _CRT_SECURE_NO_WARNINGS
#define _CRT_SECURE_NO_DEPRECATE
#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<string>
#include<cstring>
#include<algorithm>
#include<cmath>
#include <set>
#include <queue>
#include <map>
#include <vector>
#include <unordered_map>
#include <assert.h>

using namespace std;

#define mp make_pair
#define pub push_back
#define con continue
#define forn(i, n) for (int i = 0; i < int(n); ++i)
#define fornr(i, n) for (int i = n - 1; i >= 0; --i)
#define forab(i, a, b) for (int i = (a); i <= int(b); ++i)
typedef long long ll;
typedef pair <int, int> pii;
typedef vector <int> vi;
typedef vector < pii > vii;
typedef vector < vector < int> > vvi;
typedef vector < vector < pair < int, int > > > vvii;

const int ZEROS = (int)(1E+5 + 100);
const int INF = (int)1E+9;
const long double EPS = 1E-13;

ll snow[ZEROS];
ll melt[ZEROS];

ll ans[ZEROS];

ll d[ZEROS];
ll of[ZEROS];

int n;

int bin_search(int j) {
	int l = 1, r = n;
	int ans = -1;
	while (l <= r) {
		int mid = (l + r) / 2;
		ll cur = melt[mid] - melt[j - 1];

		if (cur >= snow[j]) {
			ans = mid;
			r = mid - 1;
		}
		else
			l = mid + 1;

	}
	return ans;
}

int main() {
#ifdef  _DEBUG
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> n;
	for(int i = 1; i <= n; ++i)
		cin >> snow[i];
	for(int i = 1; i <= n; ++i) {
		cin >> melt[i];
		melt[i] += melt[i - 1];
	}
	for (int i = 1; i <=  n; ++i) {
		int m = bin_search(i);
		if (m != -1) {
			of[m]++;
			ll cur = snow[i] - (melt[m - 1] - melt[i - 1]);
			if (cur > 0)
				d[m] += cur;
		}
	}
	for (int i = 1; i <= n; ++i)
		of[i] += of[i - 1];
	for (int i = 1; i <= n; ++i) {
		ans[i] = (i - of[i]) * (melt[i] - melt[i - 1]) + d[i];
		cout << ans[i] << " ";
	}
}