#include <iostream>
#include <cmath>
#include <string>
#include <conio.h>
#include <stdlib.h>
#include <cstring>
#include <fstream>
#include <iostream>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <vector>
#include <ctime>
#include <iomanip>

using namespace std;

#define fi first
#define se second
#define pf push_front
#define pb push_back
#define mk make_pair
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)x.size()
#define SWS ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0)
#define rfile freopen("input.txt", "r", stdin)
#define wfile freopen("output.txt", "w", stdout)
#define files rfile; wfile

typedef long long ll;
typedef long double ld;

const int Z = (int) 2e5 + 111;
const int inf = (int) 1e9 + 111;
const ll llinf = (ll) 1e18 + 5;
const int MOD = (int) 1e9 + 7;

int x[Z], y[Z], a[Z], b[Z];

int main() {
  srand(time(0));
  //files;
  SWS;

  int n;
  cin >> n;
  for (int i = 1; i <= n; ++i) {
    cin >> x[i] >> y[i];
  }
  map<pair<int, int>, bool> m;
  for (int i = 1; i <= n; ++i) {
    cin >> a[i] >> b[i];
    m[{a[i], b[i]}] = 1;
  }
  for (int i = 1; i <= n; ++i) {
    bool ok = true;
    map<pair<int, int>, bool> used;
    int nx = x[1] + a[i];
    int ny = y[1] + b[i];
    used[{a[i], b[i]}] = true;
    for (int j = 2; j <= n; ++j) {
      int need_x = nx - x[j];
      int need_y = ny - y[j];
      if (m.count({need_x, need_y}) && !used[{need_x, need_y}]) {
        used[{need_x, need_y}] = true;
      } else {
        ok = false;
      }
    }
    if (ok) {
      cout << nx << " " << ny;
      return 0;
    }
  }
  return 0;
}