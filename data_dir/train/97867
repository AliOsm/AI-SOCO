
// In The Name Of God

#include<bits/stdc++.h>
#define IOS ios::sync_with_stdio(false) 
#define rep(i,n) for(int i=0;i<(n);i++)
#define pb push_back
#define ll long long

using namespace std;
const int N = 5e3+22 ;
int inf=1e9 ;

int n,s,t,ct;
int lvl[N] ;
int ans[N][N] ;
vector<int>G[N] ;

struct ed
{
	int u,v,cap,flow,id;
}edge[N*2] ;

void add(int u,int v,int cap)
{
	G[u].pb(ct) ;
	edge[ct].u=u , edge[ct].v=v , edge[ct].cap=cap , edge[ct].id = ct++ ;
	G[v].pb(ct) ;
	edge[ct].u=v , edge[ct].v=u , edge[ct].cap=0 , edge[ct].id = ct++ ;
}

bool bfs()
{
	memset(lvl,0,sizeof(lvl)) ;
	lvl[s]=1;
	queue<int>q;
	q.push(s) ;
	while(q.size())
	{
		int u=q.front() ;
		q.pop() ;
		for(int i:G[u])
		{
			ed &e=edge[i] ;
			if(e.cap-e.flow==0 || lvl[e.v]) continue ;
			lvl[e.v]=lvl[u]+1 ;
			q.push(e.v) ;
		}
	}
	return lvl[t] ;
}

int sendflow(int u,int flow)
{
	if(u==t) return flow ;
	for(int i:G[u])
	{
		ed &e=edge[i] ;
		if(lvl[e.v]!=lvl[u]+1 || e.cap-e.flow==0) continue ;
		int cf=sendflow(e.v,min(flow,e.cap-e.flow)) ;
		if(cf)
		{
			e.flow+=cf;
			edge[e.id^1].flow-=cf;
			return cf;
		}
	}
	return 0 ;
}

int flow()
{
	int res=0,z;
	while(bfs())
	{
		while(z=sendflow(s,inf))
			res+=z ;
	}
	return res;
}

int main()
{IOS ;
	int x,y,sum=0,sum2=0,m;

	cin>>n>>m;
	s=2*n+2,t=s+1;
	rep(i,n) cin>>x , add(s,i,x) , sum+=x ;
	rep(i,n) cin>>x , add(i+n,t,x) , sum2+=x  ;
	rep(i,m) cin>>x>>y , x-- , y-- , add(x,y+n,inf) , add(y,x+n,inf) ;
	rep(i,n) add(i,i+n,inf) ;
//	cout<<flow()<<endl;

	if(sum!=sum2) return cout<<"NO",0 ;
	if(flow()==sum) cout<<"YES";
	else return cout<<"NO\n",0; 
	cout<<endl;

	rep(i,ct)
	{
		ed &e=edge[i] ;
		if(e.u<n && n<=e.v && e.v<2*n)
			ans[e.u][e.v-n]=e.flow ;
	}
	rep(i,n) rep(j,n) cout<<ans[i][j]<<" \n"[j==n-1] ;

	return 0 ;
}
