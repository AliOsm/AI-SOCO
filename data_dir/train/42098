#include <bits/stdc++.h>

using namespace std;
using matrix = vector<vector<long long>>;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

#define all(x) (x).begin(), (x).end()
#define int ll

queue<int> zero, one;
vector<vector<int>> path;

signed main() {

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    //cout.setf(ios::fixed);
    //cout.precision(20);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    string s;
    cin >> s;
    int id = 0;
    for (int i = 0; i < s.length(); ++i) {
        if (s[i] == '0') {
            if (!one.empty()) {
                zero.push(one.front());
                path[one.front()].push_back(i + 1);
                one.pop();
            }
            else {
                path.push_back(vector<int>(1, i + 1));
                zero.push(id++);
            }
        }
        else {
            if (!zero.empty()) {
                one.push(zero.front());
                path[zero.front()].push_back(i + 1);
                zero.pop();
            }
            else {
                cout << "-1";
                return 0;
            }
        }
    }
    if (!one.empty()) {
        cout << -1;
        return 0;
    }
    cout << path.size() << '\n';
    for (vector<int> i : path) {
        cout << i.size() << ' ';
        for (int j : i) {
            cout << j << ' ';
        }
        cout << '\n';
    }
}
