#include <iostream>
#include <vector>
#include <string>
#include <cassert>
#include <cstring>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <algorithm>
#include <map>
#include <cmath>
#include <numeric>
#include <functional>
#include <ctime>
#include <unordered_map>
#include <sstream>

using namespace std;
typedef long long Long;
typedef long double Double;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int,int> PII;
typedef pair<Long,Long> PLL;

int read(int &x) { return scanf("%d", &x); }
int read(int &x, int &y) { return scanf("%d%d", &x, &y); }
int read(int &x, int &y, int &z) { return scanf("%d%d%d", &x, &y, &z); }
int read(Long &x) { return scanf("%lld", &x); }
int read(Long &x, Long &y) { return scanf("%lld%lld", &x, &y); }
int read(double &x) { return scanf("%lf", &x); }
char buff[2000010];
int read(string &s) { int r = scanf("%s", buff); s = buff; return r; }

#define dlog2(n) ((n) == -1 ? 0 : (31-__builtin_clz(n)))

#define sz(a) int(a.size())

int main() {

	int N;
	read(N);
	set<int> S, SEEN;
	int L = 0;
	VI ANS;
	for (int i = 0; i < N; ++i) {
		int n;
		read(n);
		if (n < 0) {
			if (S.count(-n) == 0) {
				cout << -1 << endl;
				return 0;
			}
			S.erase(-n);
		} else {
			if (SEEN.count(n)) {
				cout << -1 << endl;
				return 0;
			}
			S.insert(n);
			SEEN.insert(n);
		}
		L++;
		if (S.size() == 0) {
			ANS.push_back(L);
			SEEN.clear();
			L = 0;
		}
	}
	if (S.size() > 0) {
		cout << -1 << endl;
		return 0;
	}
	cout << ANS.size() << endl;
	for (int i = 0; i < ANS.size(); ++i) {
		cout << ANS[i] << " ";
	}
	cout << endl;


}






















