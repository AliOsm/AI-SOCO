#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,sse3,sse4,popcnt,abm,mmx")

#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <fstream>


#define c0 ios_base :: sync_with_stdio(0); cin.tie (0);
#define ll long long
#define ull unsigned long long

#define FNAME ""

#define mp make_pair
#define pb push_back

#define pii pair < int, int >
#define pll pair < ll, ll >

using namespace std;

const int MaxN = 1e6 + 17;
const ll INF = 1e18 + 17;
const int MOD = 1e8 + 7;
const double eps = 1e-6;
const double pi = 3.14159265359;

ll n;

inline bool check (ll x) {
    ll Sum1 = 0, Sum2 = 0;
    ll N = n;
    while (n > 0) {
        Sum1 += min (x, n);
        n -= x;
        ll w = max (n / 10, 0ll);
        Sum2 += w;
        n -= w;
    }
    n = N;
    return Sum1 >= Sum2;
}
ll solve_c(ll n) {
    ll l = 1, r = n;
    ll ans = n;
    while (l <= r) {
        ll m = (l + r) >> 1;
        if (check (m)) {
            r = m - 1;
            ans = min (ans, m);
        }
        else
            l = m + 1;
    }
    return ans;
}
int solve_s(ll n) {
    for (int i = 1; i <= n; ++ i)
        if (check (i))
            return i;
    return 0;
}
int main() {
    #ifdef DEBUG
        freopen(".in", "r", stdin);
        freopen(".out", "w", stdout);
    #endif
    cin >> n;
    cout << solve_c(n) << endl;
//    cout << solve_s(n) << endl;
    return 0;
}
