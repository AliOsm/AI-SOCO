#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <cmath>
#include <cstring>
#include <cstdio>
#include <algorithm>
#include <string>
using namespace std;
#define pii pair<int, int>
#define pdd pair<double, double>
#define mp make_pair
#define x first
#define y second
#define L(s) ((int)(s).size())
#define pb push_back
int n;
string s;
string rules[11];
int st[11], fn[11];
inline int check(string s, string t) {
	int ans = 0;
	for(int i = 0; i + L(s) <= L(t); ++i) {
		if (t.substr(i, L(s)) == s) ++ans;
	}
	return ans;
}
inline bool fits(string s) {
	for(int i = 0; i < n; ++i) {
		int cnt = check(s, rules[i]);
		if (cnt < st[i] || cnt > fn[i]) return 0;
	}
	return 1;
}
set<string> df;
int main() {
	cin >> s;
	cin >> n;
	for(int i = 0; i < n; ++i) {
		cin >> rules[i] >> st[i] >> fn[i];
	}
	for(int i = 0; i < L(s); ++i) {
		for(int j = i; j < L(s); ++j) {
			df.insert(s.substr(i, j - i + 1));
		}
	}
	int ans = 0;
	for(set<string>::iterator it = df.begin(); it != df.end(); ++it) {
		if (fits(*it)) ++ans;
	}
	cout << ans << endl;
} 