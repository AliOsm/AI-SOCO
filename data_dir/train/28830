#include <bits/stdc++.h>
using namespace std;

int32_t main(){

    int n, m, k;
    cin >> n >> m >> k;
    vector<string> arr(n);
    for(int i = 0; i < n; i++)
        cin >> arr[i];

    vector<vector<int>> inp(n, vector<int>(m+1, 0));
    vector<vector<int>> dp(n, vector<int>(k+1, 1000000000));
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++)
            if( arr[i][j] == '1' )
                inp[i][j+1] = 1;
        for(int j = 1; j <= m; j++)
            inp[i][j] += inp[i][j-1];
    }

    int tt = 0;
    for(int i = 0; i < n; i++){
        for(int j = 1; j <= m; j++){
            for(int x = j; x <= m; x++){
                tt = inp[i][x] - inp[i][j-1];
                if( inp[i][m] - tt <= k )
                    dp[i][inp[i][m] - tt] = min(dp[i][inp[i][m] - tt], x-j+1);
            }
        }

        for(int j = inp[i][m]; j <= k; j++)
            dp[i][j] = 0;
    }

    vector<vector<int>> res(2, vector<int>(k+1, 1000000000));
    for(int i = 0; i <= k; i++)
        res[0][i] = dp[0][i];

    int cur = 1, prev = 0;
    for(int i = 1; i < n; i++, cur = 1-cur, prev = 1-prev){
        for(int j = 0; j <= k; j++){
            for(int x = 0; x+j <= k; x++)
                res[cur][x+j] = min(res[cur][x+j], res[prev][j] + dp[i][x]);
        }
        for(int j = 0; j <= k; j++)
            res[prev][j] = 1000000000;
    }

    cout << res[prev][k] << endl;

    return 0;
}