#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <typeinfo>
#include <utility>
#include <valarray>
#include <vector>
#include <cstring>
#include <unordered_map>
#include <unordered_set>

using namespace std;

#define ll long long
#define ull unsigned long long
#define all(aaa) aaa.begin(), aaa.end()
#pragma warning(disable : 4996)

const ll INF = 1e18;
const int M = 1e7;
vector<int> a[M + 1];

signed main() {
#ifdef HOME
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n;
	cin >> n;

	for (int i = 1; i <= n; i++) {
		int x;
		cin >> x;
		a[x].push_back(i);
	}

	vector<pair<int, int>> t;
	vector<ll> ans = { INF, -1, -1 };

	for (int i = 1; i <= M; i++) {
		t.clear();
		for (int j = i; j <= M && t.size() < 2; j += i) {
			int k = a[j].size();
			while (t.size() < 2 && k > 0) {
				k--;
				t.push_back({ j, a[j][k] });
			}
		}
		if (t.size() == 2) {
			ans = min(ans, { t[0].first * (ll)t[1].first / i, t[0].second, t[1].second });
		}
	}

	if (ans[1] > ans[2])
		swap(ans[1], ans[2]);
	cout << ans[1] << " " << ans[2]; 

	return 0;
}