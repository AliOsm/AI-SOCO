/*input
4
0 1 2 1
3 2 1 1

*/

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> PII;
typedef pair<ll , ll> PLL;
typedef long double ld;

#define pb push_back
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
int mod = 1000000007;
#define PI 3.14159265
#define endl '\n'
#define debug(x) cout << #x << " = " << x << endl;
#define MAX 200001

template < typename T > T GCD(T a, T b)            { ll t; while(a) { t = a; a = b % a; b = t; } return b; }
template < typename T > string toString(T a)       { return to_string(a); }
template < typename T > void toInt(string s, T &x) { stringstream str(s); str >> x;}
inline int add(int x, int y){ x += y; if(x >= mod) x -= mod; return x;}
inline int sub(int x, int y){ x -= y; if(x < 0) x += mod; return x;}
inline int mul(int x, int y){ return (x * 1ll * y) % mod;}
inline int powr(int a, ll b){
    int x = 1 % mod;
    while(b){
        if(b & 1) x = mul(x, a);
        a = mul(a, a);
        b >>= 1;
    }
    return x;
}
inline int inv(int a){ return powr(a, mod - 2);}

int cnt1[MAX], cnt2[MAX];

int main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int n;
  cin >> n;
  int v;
  vector <int> vec1;
  set <int> s1, s2;
  for (int i = 0; i < n; i++) {
    cin >> v;
    vec1.pb(v);
    cnt1[v]++;
    s1.insert(v);
  }
  vector <int> vec2;
  for (int i = 0; i < n; i++) {
    cin >> v;
    vec2.pb(v);
    cnt2[v]++;
    s2.insert(v);
  }
  vector <int> ans;
  for (int i = 0; i < n; i++) {
    v = vec1[i];
    int r = (n - v % n) % n;
    //cout << r << " ";
    if (cnt2[r] > 0) {
      ans.pb(r);
      cnt2[r]--;
      if (cnt2[r] == 0) {
        s2.erase(r);
      }
    }
    else {
      if (*s2.rbegin() < r) {
        r = *s2.begin();
      }
      else {
        r = *s2.lower_bound(r);
      }
      ans.pb(r);
      cnt2[r]--;
      if (cnt2[r] == 0) {
        s2.erase(r);
      }
      // int mx = *s2.lower_bound(r);
      // int mn = *s2.rbegin();
      // int r1 = (v + mx) % n;
      // int r2 = (v + mn) % n;
      // //cout << mx << " " << mx << " " << r1 << " " << r2 << endl;
      // if (r1 <= r2) {
      //   ans.pb(mx);
      //   cnt2[mx]--;
      //   if (cnt2[mx] == 0) {
      //     s2.erase(mx);
      //   }
      // }
      // else {
      //   ans.pb(mn);
      //   cnt2[mn]--;
      //   if (cnt2[mn] == 0) {
      //     s2.erase(mn);
      //   }
      // }
    }
  }
  // cout << endl;
  // for (auto it : ans) {
  //   cout << it << " ";
  // }
  // cout << endl;
  for (int i = 0; i < n; i++) {
    cout << (vec1[i] + ans[i]) % n << " ";
  }
  cout << endl;

  

  return 0;
}