#include <bits/stdc++.h>
using namespace std;
#define ll          long long
#define MOD         1000000007
#define ll          long long
#define pb          push_back
#define pii         pair<int,int>
#define vi          vector<int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define endl        '\n'
#define PI          3.14159265359d
#define sz(x)       (int)x.size()
int ans[100005],A[100005],mp[100005];
int res,bsz;
struct query
{
    int l,r,idx;
}Q[100005];
bool cmp(query q1,query q2)
{
    if(q1.l/bsz==q2.l/bsz)
        return q1.r<q2.r;
    return q1.l/bsz<q2.l/bsz;
}
inline void add(int x)
{
    if(A[x]>100000)
        return;
    if(mp[A[x]]==A[x])
        res--;
    mp[A[x]]++;
    if(mp[A[x]]==A[x])
        res++;
}
inline void del(int x)
{
    if(A[x]>100000)
        return;
    if(mp[A[x]]==A[x])
        res--;
    mp[A[x]]--;
    if(mp[A[x]]==A[x])
        res++;
}
int main()
{
    int n,m,i,L,R;
    scanf("%d%d",&n,&m);
    bsz=sqrt(n);
    for(i=0;i<n;i++)
        scanf("%d",&A[i]);
    for(i=0;i<m;i++)
    {
        scanf("%d",&Q[i].l);
        Q[i].l--;
        scanf("%d",&Q[i].r);
        Q[i].r--;
        Q[i].idx=i;
    }
    sort(Q,Q+m,cmp);
    res=L=0;
    R=0;
    add(0);
    for(i=0;i<m;i++)
    {
        while(R<Q[i].r)
        {
            R++;
            add(R);
        }
        while(R>Q[i].r)
        {
            del(R);
            R--;
        }
        while(L<Q[i].l)
        {
            del(L);
            L++;
        }
        while(L>Q[i].l)
        {
            L--;
            add(L);
        }
        ans[Q[i].idx]=res;
    }
    for(i=0;i<m;i++)
        printf("%d\n",ans[i]);
    return 0;
}
