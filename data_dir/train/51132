//codeforces
#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <algorithm>

using namespace std;

#define FOR(i,a,b) for ((i) = (a); i < (b); ++i)
#define rep(i,n) FOR(i,0,n)
#define FON(i,a,b) for ((i) = (b); i >= (a); --i)
#define repn(i,n) FON(i,0,n)
#define ll long long
#define dd double
#define pb push_back
#define mp make_pair
#define inf 100000000LL


dd dist(dd x1x , dd y1x, dd x2x , dd y2x)
 {
    return sqrt((x1x-x2x)*(x1x-x2x) + (y1x-y2x)*(y1x-y2x));
 }

int frmax(int x, int y)
 {
  if (x>y) y = x;
  return y;
 }
 
int frmin(int x, int y)
 {
  if (x>y) x = y;
  return x;
 } 
 
int frabs(int x)
 {
   if (x<0) x = -x;
   return x;
 }  
 
int x,y,d,xx,n,p,i,j,tr[2000],pr[2000],mm[1020][1020]; 
int ai[2000000],aj[2000000],aa[2000000],ans = 0;
bool b[2000];

int main()
{
  cin >> n >> p;
  FOR(i,1,n+1)
     {
      tr[i] = -1;
      pr[i] = -1;
     }
     
  FOR(i,1,n+1)
   FOR(j,1,n+1)
     mm[i][j] = -1;   
     
  rep(i,p)
   {
     cin >> x >> y >> d;
     tr[x] = y;
     pr[y] = x;
     mm[x][y] = d;
   } 
   
  FOR(i,1,n+1)
   {
      mm[i][i] = 10000000;
      xx = i;
      FOR(j,1,n+1)
         b[j] = true; 
      while (tr[xx] != -1 && b[xx])
       {
          b[xx] = false;  
          xx = tr[xx];
          if (xx != -1) mm[i][xx] = frmin(mm[i][pr[xx]],mm[pr[xx]][xx]);
       }
       
     mm[i][i] = 0;  
   } 
  
  
  FOR(i,1,n+1)
    if (tr[i] != -1 && pr[i] == -1)
     {
        FOR(j,1,n+1)
         if (i != j && tr[j] == -1 && pr[j] != -1 && mm[i][j] != -1) 
          {
             ++ans;
             ai[ans] = i;
             aj[ans] = j;
             aa[ans] = mm[i][j];
          }
     } 
 cout<<ans<<endl;
 FOR(i,1,ans+1)
  cout<<ai[i]<<" "<<aj[i]<<" "<<aa[i]<<endl;
}
