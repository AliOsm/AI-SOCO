#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <map>
#include <algorithm>
#include <cstring>
using namespace std;
const int maxn=1e6+10;
int n,a[maxn],b[maxn],v[maxn],linum,de[maxn],cnt,line[maxn],ans[maxn];
int st[maxn],to[maxn],nt[maxn],topt,s,t,nn[maxn],nnn;
bool f[maxn];
map<int,int>lc;
inline void add(int x,int y){to[topt]=y; nt[topt]=st[x]; st[x]=topt; topt++;}
void dfs(int x)
{
	de[x]--; nn[x]=++nnn; int p=st[x],now=nn[x];
	while (p!=-1)
	{
		st[x]=p;
		if (!f[p]) f[p]=f[p^1]=1,de[x]--,dfs(to[p]);
		if (nn[x]>now) break;
		p=nt[p];
	}
	ans[++cnt]=x;
}
int main()
{
	scanf("%d",&n); memset(st,-1,sizeof st);
	for (int i=1;i<n;i++) scanf("%d",&a[i]),v[++cnt]=a[i];
	for (int i=1;i<n;i++) scanf("%d",&b[i]),v[++cnt]=b[i];
	sort(v+1,v+cnt+1);
	for (int i=1;i<=cnt;i++) if (!lc.count(v[i])) lc[v[i]]=++linum,line[linum]=v[i];
	for (int i=1;i<n;i++)
	{
		if (a[i]>b[i]) {printf("-1\n"); return 0;}
		a[i]=lc[a[i]]; b[i]=lc[b[i]];
		add(a[i],b[i]); add(b[i],a[i]);
		de[a[i]]++; de[b[i]]++;
	}
	cnt=0; int num=0;
	for (int i=1;i<=linum;i++) if (de[i]&1) {if (!s) s=i;else t=i; num++;}
	if (num!=2 && num) {printf("-1\n"); return 0;}
	if (num==0) s=1;
	dfs(s);
	for (int i=1;i<=linum;i++) if (de[i]==1) {ans[++cnt]=i; break;}
	//printf("akakaak %d %d %d\n",s,t,cnt);
	if (cnt!=n) {printf("-1\n"); return 0;}
	for (int i=1;i<=n;i++) printf("%d%c",line[ans[i]],(i==n?'\n':' '));
return 0;
}