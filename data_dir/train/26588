/*
Nahid Hossain
Jahangirnagar University
Roll:54
*/
#include<bits/stdc++.h>
#define ll          long long int
#define db          double
#define pf          printf
#define sf          scanf
#define ff          first
#define ss          second
#define clr         clear()
#define sz          size()
#define pb          push_back
#define mk          make_pair
#define pi          acos(-1)
#define inf         2000000000000000000
#define mod         1000000007
#define ull         unsigned long long int
#define f(i,k,n)    for(i=k;i<n;i++)
#define fr(i,n,k)   for(i=n;i>=k;i--)
#define ent(a)      scanf("%lld",&a)
#define ent2(a,b)   scanf("%lld%lld",&a,&b)
#define ent3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define mem(a)      memset(a,0,sizeof(a))
#define vec(v,s)    vector<ll>v[s]
#define arr(a,s)    ll a[s];
//#define check(n,pos) (n&(1<<pos))
//#define set(n,pos)  (n|(1<<pos))
//knight and king//
int dr[]= {2,2,-2,-2,1,-1,1,-1};
int dc[]= {1,-1,1,-1,2,2,-2,-2};
int dr1[]= {0,0,1,1,1,-1,-1,-1};
int dc1[]= {1,-1,1,0,-1,0,1,-1};
int dr2[]= {0,0,1,-1};
int dc2[]= {1,-1,0,0};
////////////////////////////
using namespace std;
#define ma 100002
const int bl=350;

deque<int>g[bl];
int fr[ma][bl];

void update(ll l,ll r)
{
    ll i;
    ll seg1=(l)/bl;
    ll seg2=(r)/bl;
    ll pos1=l%bl;
    ll pos2=r%bl;
    if(seg1==seg2)
    {
        ll p=g[seg1][pos2];
        g[seg1].erase(g[seg1].begin()+pos2);
        g[seg1].insert(g[seg1].begin()+pos1,p);
        return;
    }
    ll p=g[seg2][pos2];
    fr[p][seg2]--;
    fr[p][seg1]++;
    for(ll i=seg1;i<seg2;i++)
    {
        ll p=g[i].back();
        fr[p][i]--;
        fr[p][i+1]++;
        g[i].pop_back();
        g[i+1].push_front(p);
    }
    g[seg2].erase(g[seg2].begin()+pos2+1);
    g[seg1].insert(g[seg1].begin()+pos1,p);

}

ll query(ll l,ll r,ll k)
{
    ll i,j,ans=0;
    ll seg1=(l)/bl;
    ll seg2=(r)/bl;
    ll pos1=l%bl;
    ll pos2=r%bl;
    if(seg1==seg2)
    {
        for(i=pos1;i<=pos2;i++)
        {
            ans+=(g[seg1][i]==k);
        }
    }
    else
    {
        for(i=pos1;i<g[seg1].sz;i++)ans+=(g[seg1][i]==k);
        for(i=seg1+1;i<seg2;i++)ans+=(fr[k][i]);
        for(i=0;i<=pos2;i++)ans+=(g[seg2][i]==k);
    }
    return ans;
}



int main()
{
    ll n,i,j,x;
    while(cin>>n)
    {
        for(i=0;i<n;i++)
        {
            cin>>x;
            g[i/bl].push_back(x);
            fr[x][i/bl]++;
        }

        ll ans=0;
        ll q,l,r,k,m;
        cin>>q;
        while(q--)
        {
            cin>>m;
            if(m==1)
            {
                cin>>l>>r;
                l=(l+ans-1)%n+1;
                r=(r+ans-1)%n+1;
                if(l>r)swap(l,r);
                update(l-1,r-1);
                continue;
            }
            cin>>l>>r>>k;
            l=(l+ans-1)%n+1;
            r=(r+ans-1)%n+1;
            k=(k+ans-1)%n+1;
            if(l>r)swap(l,r);
            ans=query(l-1,r-1 ,k);
            cout<<ans<<endl;
        }
    }
    return 0;
}
