#include<bits/stdc++.h>

using namespace std;

string Add(string p,string q){
	
	reverse(p.begin(),p.end());
	
	reverse(q.begin(),q.end());
	
	int lp = p.length();
	
	int lq = q.length();
	
	int lr = max(lp,lq);
	
	for(int i=0; i<(lr-lp); i++){
		
		p += '0';
	}
	
	for(int i=0; i<(lr-lq); i++){
		
		q += '0';
	}
	
	int carry = 0;
	
	string n;
	
	for(int i=0; i<lr; i++){
		
		int d = p[i]-'0'+q[i]-'0'+carry;
		
		n += (char)((d%10)+'0');
		
		carry = d/10;
	}
	
	while(carry){
		
		n += (char)((carry%10)+'0');
		
		carry /= 10;
	}
	
	reverse(n.begin(),n.end());
	
	return n;
}

string Same_len(string a,int l){
	
	int la = a.length();
	
	for(int i=0; i<(l-la); i++){
		
		a = '0'+a;
	}
	
	return a;
}

int main(){
	
	ios_base :: sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);
	
	int c = 0;
	
	int l;
	
	cin>>l;
	
	string N;
	
	cin>>N;
	
	vector <string> Num;
	
	if(l&1){
		
		string a,b;
		
		for(int i=0; i<l/2; i++){
			
			a += N[i];
		}
		
		for(int i=l/2; i<l; i++){
			
			b += N[i];
		}
		
		int k = l/2;
		
		if(N[k] != '0' && N[k-1] != '0' && N[k+1] != 0){
			
			Num.push_back(Add(a,b));
			
			a += b[0];
			
			b.erase(b.begin());
			
			Num.push_back(Add(a,b));
			
			int L = 0;
			
			int ll = Num.size();
			
			for(int i=0; i<ll; i++){
				
				int lll = Num[i].size();
				
				L = max(L,lll);
			}
			
			for(int i=0; i<ll; i++){
				
				Num[i] = Same_len(Num[i],L);
			}
		}
		
		else{
			
			while(b[0] == '0'){
				
				a += '0';
				
				b.erase(b.begin());
			}
			
			Num.push_back(Add(a,b));
			
			reverse(a.begin(),a.end());
			
			while(a[0] == '0'){
				
				b = '0'+b;
				
				a.erase(a.begin());
			}
			
			b = a[0]+b;
			
			a.erase(a.begin());
			
			reverse(a.begin(),a.end());
			
			Num.push_back(Add(a,b));
			
			int L = 0;
			
			int ll = Num.size();
			
			for(int i=0; i<ll; i++){
				
				int lll = Num[i].size();
				
				L = max(L,lll);
			}
			
			for(int i=0; i<ll; i++){
				
				Num[i] = Same_len(Num[i],L);
			}
		}
	}
	
	else{
		
		string a,b;
		
		for(int i=0; i<l/2; i++){
			
			a += N[i];
		}
		
		for(int i=l/2; i<l; i++){
			
			b += N[i];
		}
		
		if(b[0] != '0'){
			
			cout<<Add(a,b);
			
			return 0;
		}
		
		else{
			
			while(b[0] == '0'){
				
				b.erase(b.begin());
				
				a += '0';
			}
			
			Num.push_back(Add(a,b));
			
			reverse(a.begin(),a.end());
			
			while(a[0] == '0'){
				
				a.erase(a.begin());
				
				b = '0'+b;
			}
			
			b = a[0]+b;
			
			a.erase(a.begin());
			
			reverse(a.begin(),a.end());
			
			Num.push_back(Add(a,b));
			
			int L = 0;
			
			int ll = Num.size();
			
			for(int i=0; i<ll; i++){
				
				int lll = Num[i].size();
				
				L = max(L,lll);
			}
			
			for(int i=0; i<ll; i++){
				
				Num[i] = Same_len(Num[i],L);
			}
		}
	}
	
	sort(Num.begin(),Num.end());
	
	string Ans = Num[0];
	
	while(Ans[0] == '0'){
		
		Ans.erase(Ans.begin());
	}
	
	cout<<Ans;
}
