#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <queue>
#include <set>
#include <map>
#include <stack>
#include <cmath>
#include <ctime>
#include <string>
#include <cstdlib>
#include <algorithm>
using namespace std;
#define read freopen("C:\\Users\\USER\\Desktop\\in.txt", "r", stdin)
#define write freopen("C:\\Users\\USER\\Desktop\\out.txt", "a", stdout)
#define pii pair<int, int>
#define ff first
#define ss second
#define in(a) scanf("%I64d", &a)
#define ins(a) scanf("%s", a)
#define in2(a, b) scanf("%I64d%I64d", &a, &b)
#define in3(a, b, c) scanf("%I64d%I64d%I64d", &a, &b, &c)
#define pn printf("\n");
#define pcs(a) printf("Case %I64d: ", a)
#define pr(a) printf("%I64d\n", a)
#define pr(a) printf("%I64d\n", a)
#define prs(a) printf("%I64d ", a)
#define pr2(a, b) printf("%I64d %I64d\n", a, b)
#define pr3(a, b ,c) printf("%I64d %I64d %I64d\n", a, b, c)
#define vi vector<int>
#define msi map<string, int>
#define mii map<int, int>
#define si set<int>
#define cl clear()
#define sz size()
#define pb push_back
#define MAX(A,B) (((A)>(B))?(A):(B))
#define MIN(A,B) (((A)<(B))?(A):(B))
#define all(X) (X).begin(), (X).end ()
#define iter(it, X) for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
//int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//bool check(int n, int pos) {return (bool) (n & (1<<pos));}
//int on(int n, int pos) {return n | (1<<pos);}
//int off(int n, int pos) {return n & ~(1<<pos);}
//bool operator < (const data &d) const{return cost<d.cost;}
#define ext(a) {printf("%s\n", a); return 0;}
typedef long long LL;
typedef struct data sd;
LL A[100100], n;
LL bin(LL val)
{
    int l=0, r=n-1, m;


    while (l<=r)
    {
        m=(l+r)/2;

        if (A[m]==val) return m;
        else if (A[m]<val) l=m+1;
        else r=m-1;
    }
return r;
}
LL nc2(LL n)
{
    return n<2?0:(n*(n-1))/2;
}
int main()
{
    //use %I64d
    //read;
    LL i, j, k, p;

    in2(n, p);
    for (i=0; i<n; i++) in(A[i]);

    LL sum=0;
    for (i=0; i<n; i++)
    {
        k=bin(A[i]+p);
        sum+= nc2(k-i);
    }
pr(sum);
//file?
return 0;
}
