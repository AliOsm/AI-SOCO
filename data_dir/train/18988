#include<bits/stdc++.h>

#define _USE_MATH_DEFINES
#define ll long long
#define ins Not Needed Thing
#define ull unsigned long long
#define ld long double
#define Accepted 0
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mp make_pair
#define sz(x) (int)(x.size())
#define all(x) x.begin(),x.end()
#define F first
#define S second
#define emp What is it
#define SORRY FUL Accepted 
#define dimash the top one
#define I wish 
#define you be a little more calm
#define SpeedForce ios_base::sync_with_stdio(0), cin.tie(0)

using namespace std;

const double eps = 0.000001;
const ld pi = acos(-1);
const int maxn = 1e7 + 9;
const int mod = 1e9 + 7;
const ll MOD = 1e18 + 9;
const ll INF = 1e18 + 123;
const int inf = 2e9 + 11;
const int minn = 1e5 + 9;
const int N = 5e3 + 123;                                          
const int NN = 5e5 + 123;
const int PRI = 555557;
const int pri = 997;

int tests = 1;
int n, m, k, a[NN], cnt, ans;
string s;

void changed(char &c) {
	if(c == 118) {
		c = 60;
	} else if(c == 60) {
		c = 94;
	} else if(c == 94) {
		c = 62;
	} else if(c == 62) {
		c = 118;
	}
}

void changed2 (char &c) {
	if(c == 62) {
		c = 94;
	} else if(c == 94) {
		c = 60;
	} else if(c == 60) {
		c = 118;
	} else if(c == 118) {
		c = 62;
	}
}

inline void Solve () {
	SpeedForce;

	char s, e;
	cin >> s >> e >> n;
	char o = s;
	bool ok = 1, ok2 = 1;
	n %= 4;

	for (int i = 1; i <= n; i ++) {
		changed(o);
	}
	if(o == e) {
		ok = 0;
	}
	o = s;
	for (int i = 1; i <= n; i ++) {
		changed2(o);
	}
	if(o == e) {
		ok2 = 0;
	}
	if(!ok && !ok2)
		cout << "undefined";
	else if(ok && !ok2)
		cout << "ccw";
	else
		cout << "cw"; 
}

int main () {
//	freopen(".in", "r", stdin);
//	freopen(".out", "w", stdout);	
	// cin >> tests;
	while(tests --) {
		Solve ();
		// Ee Zadrot
	}	
}