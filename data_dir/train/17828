#include <iostream>
#include <fstream>
#include <vector>
#include <cmath>
#include <memory.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <map>
#include <set>
#include <assert.h>
#include <queue>
#include <sstream>
using namespace std;

#define FOR(i,a,b) for (int i = a; i <= b; ++i)
#define rep(i,n) for (int i = 0; i < n; ++i)
#define pb push_back
#define mp make_pair
#define pii pair<int, int>
#define f first
#define s second

const int INF = 1000000000;

string s1, s2, tmp, q, w;
int a[200000];
int g[3][200000];
void sync(string s, int nm) {
    int it = 0;
    while (it < s.size() && s[it] == '0') ++it;
    s.erase(0, it);
    reverse(s.begin(),s.end());
    int n = s.size();
    memset(a, 0, sizeof(a));
    for (int i = 0; i < n; ++i) a[i] = s[i] - '0';
    for (int it = 0; it < 150; ++it) {
        for (int i = 120000; i > 0; --i) {
            if (a[i] > 0 && a[i - 1] > 0) {
                a[i + 1]++;
                a[i]--;
                a[i-1]--;
            }
        }
        for (int i = 0; i < 120000; ++i) {
            if (a[i] > 0 && a[i + 1] > 0 && a[i + 2] == 0) {
                a[i + 2] = 1;
                a[i]--;
                a[i + 1]--;
            }
        }
    }
    for (int i = 0; i < 120000; ++i)
        g[nm][i] = a[i];
}

void big() {
    cout << ">" << endl;
    exit(0);
}
void smal() {
    cout << "<" << endl;
    exit(0);
}

int main() {
    cin >> s1 >> s2;
    sync(s1, 0);
    sync(s2, 1);
    for (int i = 120000; i >= 0; --i)
        if (g[0][i] > g[1][i]) big(); else if (g[1][i] > g[0][i]) smal();
    cout << "=" << endl;
}

