//In the name of Allah

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair <int , int> pii;

const int N = 1e6+10 , mod = 1e9+7;

int s1[4 * N] , s2[4 * N] , seg[4 * N];

inline void add(int s , int e , int ind , int l , int r , int val1 , int val2){
    if(s >= r || e <= l)
        return;
    if(s >= l && e <= r){
        s1[ind] += val1;
        s2[ind] += val2;
        return;
    }
    int mid = (s + e) / 2;
    add(s , mid , 2 * ind , l , r , val1 , val2);
    add(mid , e , 2 * ind + 1 , l , r , val1 , val2);
    seg[ind] = seg[2 * ind] + seg[2 * ind + 1] + min(s1[2 * ind] , s2[2 * ind + 1]);
    s1[ind] = s1[2 * ind] + s1[2 * ind + 1] - min(s1[2 * ind] , s2[2 * ind + 1]);
    s2[ind] = s2[2 * ind] + s2[2 * ind + 1] - min(s1[2 * ind] , s2[2 * ind + 1]);
}

inline pair <int , pii> query(int s , int e , int ind , int l , int r){
    if(s >= r || e <= l)
        return {0 , {0 , 0}};
    if(s >= l && e <= r)
        return {seg[ind] , {s1[ind] , s2[ind]}};
    int mid = (s + e) / 2;
    pair <int , pii> a = query(s , mid , 2 * ind , l , r);
    pair <int , pii> b = query(mid , e , 2 * ind + 1 , l , r);
    int x = min(a.second.first , b.second.second);
    return {a.first + b.first + x , {a.second.first + b.second.first - x , a.second.second + b.second.second - x}};
}

int32_t main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    string s;
    cin >> s;
    int n = s.length();
    for(int i = 0  ; i < n ; i++){
        if(s[i] == '(')
            add(0 , n , 1 , i , i + 1 , 1 , 0);
        else
            add(0 , n , 1 , i , i + 1 , 0 , 1);
    }
    int q;
    cin >> q;
    for(int i = 0 ; i < q ; i++){
        int l , r;
        cin >> l >> r;
        l--;
        cout << 2 * query(0 , n , 1 , l , r).first << "\n";
    }
    return 0;
}
