#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef vector<long long> vl;
typedef pair<long long , long long > pl;
#define po pop_back
#define pb push_back
#define mk make_pair
#define lw lower_bound
#define up upper_bound
#define ff first
#define ss second
#define boost ios_base::sync_with_stdio(); cin.tie(0); cout.tie(0);
#define MOD 1000000007
#define MAX 1e18 
#define MIN -1e18
#define rep(i,a,b) for(ll i=a;i<=b;i++)
#define per(i,a,b) for(ll i=a;i>=b;i--)
#define con continue
#define freopen freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define PI 3.14159265358979323846264338327950288419716939937510582097494459230781640628
typedef tree<ll , null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;

ll a,b,c[1234567],d[1234567],c1[1234][1234],e[1234567],n,j,i,l,r,x,y,k,ans,sum;
bool used[3234567],boo[1234][1234],lol[1234][1234];
ll T;
vector<ll> v1,v[1234567];
string s,s1[1234],ss;
char ch[1234][1234];
pl p[1234567];
priority_queue<ll> pq;
ll dx[4]={1,-1,0,0},dy[4]={0,0,1,-1};
map<ll,ll> mp,mp1;
queue<pl> q;
ll mn;
ll N=1ll<<32,tr[1234567];
bool dp[20][1000];
ll sum1,sum2,n1;
bool check(ll x,ll y){
    rep(i,0,3){
        if(lol[x+dx[i]][y+dy[i]]==lol[x][y] && x+dx[i] > 0 && x+dx[i] <= n && y+dy[i] > 0 && y+dy[i] <= n1)return 1;
    }
    return 0;
}
int main(){
    cin>>n>>n1>>k;
    rep(i,1,n){
        rep(j,1,n1){
            cin>>ch[i][j];
            lol[i][j]=(ch[i][j]=='1');
            //cout<<lol[i][j];
        }
        //cout<<'\n';
    }
    bool ok=false;
    rep(i,1,n){
        rep(j,1,n1){
            boo[i][j]=check(i,j);
            //cout<<boo[i][j];
            if(boo[i][j]==1){
                ok=true;
                q.push({i,j});
            }
        }
        //cout<<'\n';
    }
    //cout<<q.size()<<'\n';
    if(ok==false){
        rep(i,1,k){
            cin>>x>>y>>a;
            cout<<lol[x][y]<<"\n";
        }
        exit(0);
    }
    while(q.size()>0){
        pl p=q.front();
        q.pop();
        rep(i,0,3){
            if((p.ff+dx[i]) > 0 && p.ff+dx[i] <= n && p.ss + dy[i] > 0 && p.ss + dy[i] <=n1 &&boo[p.ff+dx[i]][p.ss+dy[i]]==0){
                boo[p.ff+dx[i]][p.ss+dy[i]]=1;
                q.push({p.ff+dx[i],p.ss+dy[i]});
                c1[p.ff+dx[i]][p.ss+dy[i]]=c1[p.ff][p.ss]+1;
//                cout<<p.ff+dx[i]<<" "<<p.ss+dy[i]<<' '<<c1[p.ff+dx[i]][p.ss+dy[i]]<<'\n';
            }
        }
    }
    rep(i,1,k){
        cin>>x>>y>>a;
        if(a < c1[x][y]){
            cout<<lol[x][y]<<'\n';
        }
        else{
            b=c1[x][y];
            if((b-a)%2==0){
                cout<<lol[x][y]<<"\n";
            }
            else{
                cout<<1-lol[x][y]<<'\n';
            }
        }
    }

}