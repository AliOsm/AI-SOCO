#include <bits/stdc++.h>

#define fi first
#define se second
#define ll long long

using namespace std;

const int N = 4e5 + 7;
const int M = 22;
const int mod = 1e9 + 7;

int q;
ll a[N];
ll s[N][M];
ll mx[N][M];
ll up[N][M];

void solve1()
{
    cin >> q;
    int cnt = 1;
    ll last = 0;
    a[0] = 1e18;
    for( int i = 0; i < M; i++ )s[1][i] = 1e17;
    while( q-- ){
        ll tp,x,y;
        cin >> tp >> x >> y;
        if( tp == 1 ){
            ll r = (last ^ x);
            ll w = (last ^ y);
            cnt += 1;
            a[cnt] = w;
            if( a[r] >= w ){
                up[cnt][0] = r;
            }else{
                int g = r;
                for( int i = M - 1; i >= 0; i-- ){
                    if( a[up[g][i]] < w ){
                        g = up[g][i];
                    }
                }
                up[cnt][0] = up[g][0];
            }
            s[cnt][0] = (up[cnt][0] == 0 ? (ll)1e17 : a[up[cnt][0]]);
            for( int i = 1; i < M; i++ ){
                up[cnt][i] = up[up[cnt][i - 1]][i - 1];
                if( up[cnt][i] != 0 )s[cnt][i] = s[up[cnt][i - 1]][i - 1] + s[cnt][i - 1];
                else s[cnt][i] = 1e17;
            }
        }else{
            ll ans = 0;
            ll r = (last ^ x);
            ll xx = (last ^ y);
            if( a[r] > xx ){
                last = 0;
                cout << "0\n";
                continue;
            }
            xx -= a[r];
            for( int i = M - 1; i >= 0; i-- ){
                if( s[r][i] <= xx ){
                    xx -= s[r][i];
                    r = up[r][i];
                    ans |= (1 << i);
                }
            }
            last = ans + 1;
            cout << ans + 1 << "\n";
        }
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0); srand(time(0));
    //freopen( "input.txt" , "r" , stdin );
    //freopen( "output.txt" , "w" , stdout );

    int cghf = 1;//cin >> cghf;
    while( cghf-- ){
        solve1();
    }
}
