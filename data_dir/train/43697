//raja1999

//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,avx,avx2")

#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string> 
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp> 
//setbase - cout << setbase (16)a; cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx
//cout.precision(x)  cout<<fixed<<val;  // prints x digits after decimal in val

using namespace std;
using namespace __gnu_pbds;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >
#define int ll

typedef tree<
int,
null_type,
less<int>,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;

//std::ios::sync_with_stdio(false);
int n,s;
int l[200005],r[200005];
int check(int mid){
	int gg=0,i,c=0,val;
	vi v;
	v.clear();
	rep(i,n){
		if(l[i]>mid){
			c++;
		}
		else if(r[i]>=mid){
			v.pb(l[i]);
		}
	}
	val=(n/2)+1-c;
	sort(v.rbegin(),v.rend());
	if(val>v.size()){
		return 0;
	}
	rep(i,val){
		gg+=mid-v[i];
	}
	if(gg<=s){
		return 1;
	}
	return 0;
}
main(){
	std::ios::sync_with_stdio(false); cin.tie(NULL);
	int t,t1;
	cin>>t;
	//t=1;
	t1=t;
	while(t--){
		vi v;
		v.clear();
		int i,ans=0;
		cin>>n>>s;
		rep(i,n){
			cin>>l[i]>>r[i];
			v.pb(l[i]);
			s-=l[i];
		}
		sort(all(v));
		int lo=v[n/2];
		int iinf=inf;
		iinf*=inf;
		int hi=iinf;
		while(lo<=hi){
			int mid=(lo+hi)/2;
			if(check(mid)){
				ans=mid;
				lo=mid+1;
			}
			else{
				hi=mid-1;
			}
		}
		cout<<ans<<endl;
	}
	return 0;
} 
	