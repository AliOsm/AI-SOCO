#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
#define MOD 998244353
#define EPS 1e-6
#define PI 3.14159265

int arr[105];
int n;
int Dp[105][105][105][2][2];

int solve(int index, int money, int def, bool even, bool start)
{
    if(index >= n)
        return 0;
    int &ans = Dp[index][money][abs(def)][even][start];
    if(ans != -1)
        return ans;
    ans = 0;
    if(def == 0 && !start && abs(arr[index] - arr[index - 1]) <= money)
    {
        ans = 1 + solve(index, money - abs(arr[index] - arr[index - 1]), 0, 0, 1);
    }
    if(arr[index] % 2 == 0)
    {
        int newDef = def + 1;
        bool newEven = even;
        if(newDef >= 0)
            newEven = 1;
        ans = max(ans, solve(index + 1, money, newDef, newEven, 0));
    }
    else
    {
        int newDef = def - 1;
        bool newEven = even;
        if(newDef < 0)
            newEven = 0;
        ans = max(ans, solve(index + 1, money, newDef, newEven, false));
    }
    return ans;
}

int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int money;
    cin >> n >> money;
    for(int i = 1; i <= n; i++)
        cin >> arr[i];
    memset(Dp, -1, sizeof Dp);
    cout << solve(1, money, 0, 1, 1);
}
