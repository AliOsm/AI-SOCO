#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <map>
#include <queue>
#include <set>
#include <iomanip>
#include <deque>
#include <cassert>
using namespace std;
#define INF 2001001001
#define MOD 1000000007
#define endl '\n'
typedef long long ll;
typedef long double ld;

set<pair<int,int>>ans;
int AX,AY,BX,BY,CX,CY;
int ANSX,ANSY,dis=200100100;

int getdis(int a, int b, int c,int d){
  return abs(a-c)+abs(b-d);
}

void getans(int a, int b, int c, int d){
  while (a<c){
    a++;
    ans.insert({a,b});
  }
  while (a>c){
    a--;
    ans.insert({a,b});
  }
  while (b<d){
    b++;
    ans.insert({a,b});
  }
  while (b>d){
    b--;
    ans.insert({a,b});
  }
}

int main()
{
  //ios_base::sync_with_stdio(0);cin.tie(0);
  cin>>AX>>AY>>BX>>BY>>CX>>CY;
  for (int i=0;i<=1000;i++)
    for (int j=0;j<=1000;j++)
      if (getdis(AX,AY,i,j)+getdis(BX,BY,i,j)+getdis(i,j,CX,CY)<dis){
	dis=getdis(AX,AY,i,j)+getdis(BX,BY,i,j)+getdis(i,j,CX,CY);
	ANSX=i;
	ANSY=j;
      }
  ans.insert({AX,AY});
  ans.insert({BX,BY});
  ans.insert({CX,CY});
  ans.insert({ANSX,ANSY});
  getans(AX,AY,ANSX,ANSY);
  getans(BX,BY,ANSX,ANSY);
  getans(ANSX,ANSY,CX,CY);
  cout<<ans.size()<<endl;
  for (set<pair<int,int>>::iterator it=ans.begin();it!=ans.end();it++)
    cout<<it->first<<' '<<it->second<<endl;
  return 0;
}
