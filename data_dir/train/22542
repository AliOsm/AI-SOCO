#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector<ii> vii;
typedef map<ll,ll> mll;
typedef vector<bool> vb;

#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash
#define endl "\n"
#define prina(arr,dau,cuoi) FTB(mmczmp,dau,cuoi)cout<<arr[mmczmp]<<" ";cout<<endl;
#define debug cout<<"debug\n"
#define pb push_back
#define pbg(ke,u,v) ke[u].pb(v);ke[v].pb(u);
#define X first
#define Y second
#define pi acos(-1.0)
#define lbnd(f,s,gt) lower_bound(f,s,gt)
#define ubnd(f,s,gt) upper_bound(f,s,gt)
#define all(s) s.begin(),s.end()
#define bitcount(n) __builtin_popcountll(n)
#define FTB(i,a,b) for(ll i=a,_b=b;i<=_b;i++)
#define FT(i,a,b) for(ll i=a,_b=b;i<_b;i++)
#define FGB(i,a,b) for(ll i=a,_b=b;i>=_b;i--)
#define FG(i,a,b) for(ll i=a,_b=b;i>_b;i--)
/////////////////////////////////////////////



ll n,m,q,x[3],y[3];



void Solve(){
    cin>>n>>m>>q;
    ll tmp=__gcd(n,m);
    ll h=n/tmp,k=m/tmp;
    while(q--){
        cin>>x[1]>>y[1]>>x[2]>>y[2];
        ll a,b;
        y[1]--;y[2]--;
        if(x[1]==1&&x[2]==1){
            if(y[1]/h==y[2]/h){
                cout<<"YES\n";
            }
            else cout<<"NO\n";
        }
        else if(x[1]==1&&x[2]==2){
            y[1]=y[1]/h;
            y[2]=y[2]/k;
            if(y[1]==y[2]) cout<<"YES\n";
            else cout<<"NO\n";
        }
        else if(x[1]==2&&x[2]==1){
            y[1]=y[1]/k;
            y[2]=y[2]/h;
            if(y[1]==y[2]) cout<<"YES\n";
            else cout<<"NO\n";

        }
        else if(x[1]==2&&x[2]==2){
            if(y[1]/k==y[2]/k){
                cout<<"YES\n";
            }
            else cout<<"NO\n";

        }

    }





}

int main(){
    ios::sync_with_stdio(0);cin.tie(0);

    //freopen("1.in","r",stdin);
    //freopen("1.out","w",stdout);


    int Test_numbers=1;
    //int Test_numbers;cin>>Test_numbers;

    while(Test_numbers--) Solve();

    //cerr << "\nTime run: " << 1000 * clock() / CLOCKS_PER_SEC << "ms\n";

	return 0;
}
