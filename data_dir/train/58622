#include <stdio.h>
#include <bits/stdc++.h>

#define uint unsigned int
#define ll long long
#define ull unsigned long long
#define ld long double
#define rep(i, l, r) for (int i = l; i < r; i++)
#define repb(i, r, l) for (int i = r; i > l; i--)
#define sz(a) (int)a.size()
#define fi first
#define se second
#define mp(a, b) make_pair(a, b)

using namespace std;

const int N = 100000;
const int inf = (int)1e9 + 1;
const ll big = (ll)1e18 + 1;
const int P = 239;
const int MOD = (int)1e9 + 7;
const int MOD1 = (int)1e9 + 9;
const double eps = 1e-9;
const double pi = atan2(0, -1);
const int ABC = 26;

int main()
{
    //freopen("a.in", "r", stdin);
    //freopen("a.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    //ll TL = 0.95 * CLOCKS_PER_SEC;
    //clock_t time = clock();
    ll n;
    cin >> n;
    ll l = 0, r = 1500000000, mid;
    while (r - l > 1)
    {
        mid = (l + r) / 2;
        if (mid * (mid + 1) * 3 <= n)
            l = mid;
        else
            r = mid;
    }
    ll cnt[6] = {0, 0, 0, 0, 0, 0};
    ll dx[6] = {1, -1, -2, -1, 1, 2};
    ll dy[6] = {2, 2, 0, -2, -2, 0};
    cnt[5] += l;
    n -= l * (l + 1) * 3;
    if (n > 0)
    {
        cnt[0]++;
        n--;
    }
    ll d;
    d = min(l, n);
    cnt[1] += d;
    n -= d;
    d = min(l + 1, n);
    cnt[2] += d;
    n -= d;
    d = min(l + 1, n);
    cnt[3] += d;
    n -= d;
    d = min(l + 1, n);
    cnt[4] += d;
    n -= d;
    d = min(l + 1, n);
    cnt[5] += d;
    n -= d;
    d = min(l + 1, n);
    cnt[0] += d;
    n -= d;
    ll x = 0, y = 0;
    rep(i, 0, 6)
    {
        x += dx[i] * cnt[i];
        y += dy[i] * cnt[i];
    }
    cout << x << " " << y << "\n";
    return 0;
}
