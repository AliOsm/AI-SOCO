#include<bits/stdc++.h>
using namespace std;
#define M            1000000007
#define C            998244353
#define int          long long 
#define D            double
#define S            second
#define F            first
#define pb           push_back
#define B(c)         (c).begin()
#define E(c)         (c).end()
#define all(c)       (c).begin(),(c).end()
#define rall(c)      (c).rbegin(),(c).rend()
#define lb           lower_bound
#define ub           upper_bound
#define si(c)        (int)((c).size())
typedef pair<int,int> pii;
typedef pair<int,pii> pipi;
typedef vector<vector<int> > vvi;
typedef map<int,int>  mp;
typedef priority_queue<int, vector<int>, greater<int> > pq;
const int N=2e5+1;
vector<int>G[N];
bool visited[N];
//vector<int>ans[2];
int R[N];
int primes[N];
void P(){
for(int i=2;i<=N;i++){
	    if(!primes[i]){
		for(int j=2*i;j<=N;j+=i){
		if(!primes[j])primes[j]=i;}
		}
	}
}
int root(int x){
	return R[x]==x?x:root(R[x]);
}
void union1(int x,int y){
	x=root(x),y=root(y);
	R[x]=R[y];
}
void dfs(int V){
	visited[V]=1;
	for(int i=0;i<G[V].size();i++){
		if(!visited[G[V][i]]){
			int to=G[V][i];
			dfs(to);
		}
	}
}
int  kruskal(pipi p[]){
	int x,y,cost=0,minimumcost=0;
	for(int i=0;i<N;i++){
		x=p[i].S.F,y=p[i].S.S;cost=p[i].F;
		if(root(x)!=root(y)){
			minimumcost+=cost;
			union1(x,y);
		}
	}return minimumcost;
}
int modpow(int x,int n){
	if(n==0)return 1;
	int u=modpow(x,n/2)%M;
	u=(u*u)%M;
	if(n%2)u=(u*x)%M;
	return u;
}
void intialize(){
	
}
void  solve(){
    int n,c2,c5,x=0;cin>>n;string s;
    int a,dp[n+1][n+1][2];dp[0][1][0]=0,dp[0][1][1]=0;
    dp[1][0][1]=0,dp[1][0][0]=0;
    for(int i=2;i<=n;i++)
    dp[0][i][0]=dp[i][0][1]=dp[0][i][1]=dp[i][0][0]=1e18;
    for(int i=1;i<=n;i++){
    	for(int j=1;j<=n;j++){
    		cin>>a;c2=c5=0;
    		if(!a)x=i,dp[i][j][0]=min(dp[i-1][j][0],dp[i][j-1][0]),
			dp[i][j][1]=min(dp[i-1][j][1],dp[i][j-1][1]);
    		else{
    		while(a%2==0)c2++,a/=2;
    		while(a%5==0)c5++,a/=5;
    		dp[i][j][0]=min(dp[i-1][j][0],dp[i][j-1][0])+c2;
    		dp[i][j][1]=min(dp[i-1][j][1],dp[i][j-1][1])+c5;}
		}
	}a=dp[n][n][0]>dp[n][n][1];
	if(x&&dp[n][n][a]>1){
		cout<<1<<endl;
		for(int i=2;i<=x;i++)cout<<'D';
		for(int j=2;j<=n;j++)cout<<'R';
		for(int i=x+1;i<=n;i++)cout<<'D';cout<<endl;
	}else{
		cout<<dp[n][n][a]<<endl;
		int i=n,j=n;
		while(i>1&&j>1){
			if(dp[i-1][j][a]<dp[i][j-1][a])s.pb('D'),i--;
			else s.pb('R'),j--;
		}while(i>1)s.pb('D'),i--;
		while(j>1)s.pb('R'),j--;
	for(int i=si(s)-1;i>=0;i--)cout<<s[i];cout<<endl;}
}
signed main(){   
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
	int t=1;
    //cin>>t;
	while(t--){
		solve();
	}
}