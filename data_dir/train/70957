#include <bits/stdc++.h>
using namespace std;

int flag;

int color[100005];
vector<int> X[100005];

void dfs(int i, int col, int par)
{
    color[i] = col;
    
    for(int j=0; j<X[i].size(); j++)
    {
        if(X[i][j]==par)
            continue;
        
        if(!color[X[i][j]])
            dfs(X[i][j], (col==1)?2:1, i);
        else
        {
            int new_col = (col==1)?2:1;
            
            if(color[X[i][j]]!=new_col)
                flag = 1;
        }
    }
}

int main()
{
    int N, M;
    scanf("%d %d", &N, &M);
    
    while(M--)
    {
        int x, y;
        scanf("%d %d", &x, &y);
        
        X[x].push_back(y);
        X[y].push_back(x);
    }
    
    for(int i=1; i<=N; i++)
    {
        if(!color[i])
            dfs(i, 1, -1);
    }
    
    int x = 0, one = 0;
    
    for(int i=1; i<=N; i++)
    {
        if(color[i]==1)
            one++;
    }
    
    if(flag)
        cout << -1 << "\n";
    else
    {
        printf("%d\n", one);
        
        for(int i=1; i<=N; i++)
            if(color[i]==1)
                printf("%d ", i);
        printf("\n");
        
        printf("%d\n", N-one);
        
        for(int i=1; i<=N; i++)
            if(color[i]==2)
                printf("%d ", i);
        printf("\n");
    }
    
    return 0;
}
