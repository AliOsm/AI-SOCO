#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair< ll, ll > ii;
typedef vector< ll > vi;
typedef vector< ii > vii;

#define INF 0x3F3F3F3F
#define LINF 0x3F3F3F3F3F3F3F3FLL
#define pb push_back
#define mp make_pair
#define pq priority_queue
#define LSONE(s) ((s)&(-s))
#define DEG_to_RAD(X)   (X * PI / 180)
#define F first
#define S second

#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

#define pi acos(-1.0)

const int N = 100010;
const int M = 26;

int n;
char s[N];
int ct = 1, tr[N][M];
multiset< int > st[N];

inline void addTrie(string str, int idx) {
  int x = 0;
  int sz = (int)str.size();
  for(int i = 0; i < sz; ++i) {
    int c = str[i] - 'a';
    if(!tr[x][c]) tr[x][c] = ct++;
    x = tr[x][c];
  }
  st[x].insert(sz);
}

int ans = 0;

void solve(int x = 0, int prof = 0) {
  bool ok = (x != 0 && st[x].empty());
  for(int i = 0; i < 26; ++i) {
    int nxt = tr[x][i];
    if(!nxt) continue;
    solve(nxt, prof + 1);
    if(st[x].size() < st[nxt].size()) st[x].swap(st[nxt]);
    for(int it : st[nxt]) st[x].insert(it);
    st[nxt].clear();
  }
  if(ok && !st[x].empty()) {
    st[x].insert(prof);
    multiset< int > :: iterator it = st[x].end(); it--;
    st[x].erase(it);
  }
  if(!x) for(int it : st[x]) ans += it;
}

int main() {
  scanf("%d", &n);
  for(int i = 0; i < n; ++i) {
    scanf(" %s", s);
    addTrie((string)s, i);
  }
  solve();
  printf("%d\n", ans);
  return 0;
}

