#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <algorithm>
#include <map>
#include <queue>
#include <clocale>
#include <bitset>
#include <cstring>
#include <memory.h>
#include <numeric>
#include <iomanip>
#include <stack>
#include <sstream>
#include <list>
#include <complex>

#pragma comment (linker, "/STACK:667177216")
#define ll long long
#define LL long long
#define ull unsigned long long
#define ld long double
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pb push_back
const ll mod = 1000000007;
#define INF (int)(2e9)
#define LINF (ll)(4e18)
#define forit(mas) for(auto(it)=(mas).begin();(it)!=(mas).end();(it)++)
#define pii pair<int,int>
#define M_PI 3.14159265358979323846

using namespace std;

vector<vector<int>>comp;
vector<vector<int>>g;
vector<int>used;
vector<int>kids;


int dfs(int v) {
	used[v] = 1;
	for (auto to : g[v]) {
		if (!used[to]) {
			kids[v] += dfs(to);
		}
	}
	return kids[v];
}

int main() {

#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n;
	cin >> n;
	g.resize(n);
	used.resize(n, 0);
	kids.resize(n, 1);
	for (int i = 0; i < n - 1; i++) {
		int a, b;
		cin >> a >> b;
		a--, b--;
		g[a].push_back(b);
		g[b].push_back(a);
	}
	if (n % 2) {
		cout << -1;
		return 0;
	}
	int v = -1;
	for (int i = 0; i < n; i++) {
		if (g[i].size() == 1) {
			v = i;
		}
	}
	dfs(v);
	int ans = 0;
	for (int i = 0; i < n; i++) {
		ans += kids[i] % 2 == 0;
	}
	cout << ans - 1;
	return 0;
}