#include <bits/stdc++.h>

#define fto(i, x, y) for(auto i = (x); i <= (y); ++i)
#define fdto(i, x, y) for(auto i = (x); i >= (y); --i)
#define ftoa(i, x, y, a) for(auto i = (x); i <= (y); i += a)
#define ftoit(it, var) for (auto it = var.begin(); it != var.end(); ++it)

#define ii pair<int, int>
#define mp make_pair
#define ff first
#define ss second

#define vi vector<int>
#define vii vector<ii>
#define ll long long
#define vll vector<ll>

#define eb emplace_back
#define ef emplace_front
#define lb lower_bound
#define ub upper_bound

#define oo 1000000007
#define OO 1000000000000000007LL

using namespace std;

#define Pro "tmp"
#define maxN 1007

int a[maxN][maxN];
int cnt[maxN];

int main() {
    #ifndef ONLINE_JUDGE
        freopen(Pro".inp", "r", stdin);
        freopen(Pro".out", "w", stdout);
    #endif // ONLINE_JUDGE

    int n;
    scanf("%d", &n);

    fto(i, 1, n*n) {
        int x;
        scanf("%d", &x);
        ++cnt[x];
    }

    if (n%2 == 0) {
        fto(i, 1, 1000) if (cnt[i]%4) {
            puts("NO");
            return 0;
        }

        puts("YES");
        int x = 1, y = 1;

        fto(i, 1, 1000) {
            fto(j, 1, cnt[i]/4) {
                a[x][y] = i;
                ++y;
                if (y > n/2) {
                    ++x;
                    y = 1;
                }
            }
        }

        fto(i, 1, n/2) {
            fto(j, 1, n/2) {
                a[n-i+1][j] = a[i][n-j+1] = a[n-i+1][n-j+1] = a[i][j];
            }
        }

        fto(i, 1, n) {
            fto(j, 1, n) printf("%d ", a[i][j]);
            puts("");
        }
    }
    else {
        int mod1 = 0, mod2 = 0;
        fto(i, 1, 1000) {
            if (cnt[i]%4 == 2) ++mod2;
            if (cnt[i]%4 == 1) ++mod1;
            if (cnt[i]%4 == 3) {
                ++mod2;
                ++mod1;
            }
        }

        if (mod2 > n-1) {
            puts("NO");
            return 0;
        }
        
        if (mod1 > 1) {
            puts("NO");
            return 0;
        }

        puts("YES");
        int x = 1, y = 1;

        fto(i, 1, 1000) {
            if (x == n/2+1) break;
            while (cnt[i] >= 4) {
                if (x == n/2+1) break;
                a[x][y] = i;
                cnt[i] -= 4;
                ++y;
                if (y > n/2) {
                    ++x;
                    y = 1;
                }
            }
        }

        fto(i, 1, 1000) {
            if (cnt[i]%4 == 1 || cnt[i]%4 == 3) {
                a[n/2+1][n/2+1] = i;
                --cnt[i];
                break;
            }
        }

        y = 1;
        fto(i, 1, 1000) {
            if (y == n/2+1) break;
            while (cnt[i]) {
                if (y == n/2+1) break;
                a[n/2+1][y++] = i;
                cnt[i] -= 2; 
            }
        }

        x = 1;
        fto(i, 1, 1000) {
            if (x == n/2+1) break;
            while (cnt[i]) {
                if (x == n/2+1) break;
                a[x++][n/2+1] = i;
                cnt[i] -= 2;
            }
        }

        fto(i, 1, n/2+1) {
            fto(j, 1, n/2+1) {
                a[n-i+1][j] = a[i][n-j+1] = a[n-i+1][n-j+1] = a[i][j];
            }
        }

        fto(i, 1, n) {
            fto(j, 1, n) printf("%d ", a[i][j]);
            puts("");
        }
    }
    return 0;   
}