#include <Bits/stdc++.h>

using namespace std;

const int N = 100;
int n, m, tmp;
int a,b;
vector <int> darkhast[N];
vector <int> graph[N];
vector <int> graph2;
vector <int> graph1; 
int mark[N];

void dfs(int x, int v) {
	mark[v] = 1;
	graph[x].push_back(v);
	for(int i = 0; i < darkhast[v].size(); i ++)
	{
		if(mark[darkhast[v][i]]==0)
		{
			dfs(x ,darkhast[v][i]);
		}
	}
	
}

int main() {
	cin >> n >> m;
	for(int i=0; i<m; i++)
	{
		int x, y;
		cin >> x >> y;
		darkhast[x].push_back(y);
		darkhast[y].push_back(x);
	}
	for(int i = 1; i <= n; i++)
	{
		if(mark[i]==0)
		{
			tmp++;
			dfs(tmp, i);
		}
	}

	for(int i = 1; i <= tmp; i++)
	{
		if(graph[i].size() > 3)
		{
			cout << -1;
			return 0;
		}
		if(graph[i].size() == 1)
		{	
			a++;
			graph1.push_back(i);
		}
		if(graph[i].size() == 2)
		{
			b++;	
			graph2.push_back(i);
		}
	}
	if(b > a)
	{
		cout << -1;
		exit(0);
	}
	if((a - b) % 3 != 0)
	{
		cout << -1;
		exit(0);
	}
	for(int i = 1; i <= tmp; i++)
	{
	if(graph[i].size() == 3)
	{
		for(int j = 0; j < 3; j ++)
			cout << graph[i][j] << " ";
	}
	}
	for(int i = 0; i < b; i++)
	{
		cout << graph[graph1[i]][0] << " " << graph[graph2[i]][0] << " " << graph[graph2[i]][1] << endl;
	}
	for(int i = b ; i < a; i += 3)	
	{
		cout << graph[graph1[i]][0] << " " << graph[graph1[i + 1]][0] << " " << graph[graph1[i + 2]][0] << endl;
	}
}

