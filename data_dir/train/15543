#include<bits/stdc++.h>
#define int long long
using namespace std;


const int INF = 9e18;

int n, m;


inline int f(int x, int d, int pos){
    /// 1 2 3 4 5 6 7 8 9
    ///         l
    /// 4 3 2 1 0 1 2 3 4
    int cur = x * n;
    int y = pos - 1;
    cur += d * y * (y + 1) / 2;
    y = n - pos;
    cur += d * y * (y + 1) / 2;
    return cur;
}

main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n >> m;
    int ans = 0;
    for(int i = 1; i <= m; i++){
        int x, d;
        cin >> x >> d;
        /// x + x + d * 1 + x + d * 2 + x + d * 3
        /// x + x * (n - mid + 1) + d * (mid * (mid + 1) / 2) > 0
        /// x + x * n - x * mid + x + d * mid * (mid + 1) / 2 > 0
        int l = 1, r = n;
        int cur = -INF;
        while(r - l > 2){
            int m1 = l + (r - l) / 3, m2 = r - (r - l) / 3;
            if(f(x, d, m1) > f(x, d, m2)){
                l = m1;
            }
            else{
                r = m2;
            }
        }
        for(int j = l; j <= r; j++){
            cur = max(cur, f(x, d, j));
        }
        l = 1, r = n;
        while(r - l > 2){
            int m1 = l + (r - l) / 3, m2 = r - (r - l) / 3;
            if(f(x, d, m1) >= f(x, d, m2)){
                l = m1;
            }
            else{
                r = m2;
            }
        }
        for(int j = l; j <= r; j++){
            cur = max(cur, f(x, d, j));
        }
        l = 1, r = n;
        while(r - l > 2){
            int m1 = l + (r - l) / 3, m2 = r - (r - l) / 3;
            if(f(x, d, m1) < f(x, d, m2)){
                l = m1;
            }
            else{
                r = m2;
            }
        }
        for(int j = l; j <= r; j++){
            cur = max(cur, f(x, d, j));
        }
        l = 1, r = n;
        while(r - l > 2){
            int m1 = l + (r - l) / 3, m2 = r - (r - l) / 3;
            if(f(x, d, m1) <= f(x, d, m2)){
                l = m1;
            }
            else{
                r = m2;
            }
        }
        for(int j = l; j <= r; j++){
            cur = max(cur, f(x, d, j));
        }
        ans += cur;
    }
    cout << fixed << setprecision(10) << ans / (double)n;
}

