#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse2")
#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#include <ext/pb_ds/detail/standard_policies.hpp>
#define int long long
#define all(x) x.begin(), x.end()
//#define boost() ios_base :: sync_with_stdio(0); cin.tie(); cout.tie(); cout << fixed; cout << setprecision(15); srand(time(NULL))
using namespace std;
using namespace __gnu_pbds;
typedef tree<pair <int, int>, null_type, less<pair <int, int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

string s;
int dp[55][55];

int sol (int l, int r) {
  if (l >= r) return 0;
  if (dp[l][r] != -1) return dp[l][r];
  int res = 0;
  for (int i = l; i <= (l + r) / 2; i++) {
    if (s[i] != s[r - (i - l)]) {
      res = max (res, r - l + 1);
      break;
    }
  }
  res = max (sol (l + 1, r), res);
  res = max (sol (l, r - 1), res);
  return dp[l][r] = res;
}

signed main () {
  memset (dp, -1, sizeof dp);
  cin >> s;
  cout << sol (0, s.size() - 1) << endl;
  return 0;
}

