#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define ff first
#define ss second

typedef long long int ll;
typedef vector< pair<ll, ll> > vii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<long long int> vll;
typedef pair<int, int> pii;

const ll INF = 1e18;
const ll inf = 1e9;
const ll MOD = 1e9 + 7;
const ll nax = 100000 + 10;

int visited[nax], arr[nax], be[nax], en[nax], dp[nax], n;

int solve(int i)
{
    if(dp[i] != -1)
        return dp[i];
    if(i == 0)
        return 0;
    dp[i] = solve(i - 1);
    if(en[arr[i]] != i) return dp[i];
    int mini = be[arr[i]];
    int xori = 0;
    memset(visited, 0, sizeof(visited));
    for(int j = i; j > 0; j--)
    {
        if(en[arr[j]] > i) break;
        mini = min(mini, be[arr[j]]);
        if(visited[arr[j]] == 0)
        {
            visited[arr[j]] = 1;
            xori = xori ^ arr[j];
        }
        if(mini == j) dp[i] = max(dp[i], solve(j - 1) + xori);
    }
    return dp[i];
}

int main()
{
    ios::sync_with_stdio(0);
    cin >> n;
    for(int i = 1; i <= n; i++)
    {
        cin >> arr[i];
        if(visited[arr[i]] == 0)
        {
            visited[arr[i]] = 1;
            be[arr[i]] = i;
        }
        en[arr[i]] = i;
    }
    memset(dp, -1, sizeof(dp));
    cout << solve(n);
    return 0;
}
