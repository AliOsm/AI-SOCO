#include <bits/stdc++.h>
#define pb push_back
#define Nmax 1000005
#define mp make_pair
#define fi first
#define se second
#define pii pair <int,int>

using namespace std;

int n;
int rmq1[Nmax][20],rmq2[Nmax][20],lg[Nmax],a[Nmax],b[Nmax];

inline void Rmq1()
{
    int i,j;
    for(i=1;i<=n;++i)
        rmq1[i][0]=a[i];
    for(j=1;j<20;++j)
        for(i=1;i<=n-(1<<j)+1;++i)
            rmq1[i][j]=max(rmq1[i][j-1],rmq1[i+(1<<(j-1))][j-1]);
}

inline void Rmq2()
{
    int i,j;
    for(i=1;i<=n;++i)
        rmq2[i][0]=b[i];
    for(j=1;j<20;++j)
        for(i=1;i<=n-(1<<j)+1;++i)
            rmq2[i][j]=min(rmq2[i][j-1],rmq2[i+(1<<(j-1))][j-1]);
}

inline int qry1(int x, int y)
{
    int t=lg[y-x+1];
    return max(rmq1[x][t],rmq1[y-(1<<t)+1][t]);
}

inline int qry2(int x, int y)
{
    int t=lg[y-x+1];
    return min(rmq2[x][t],rmq2[y-(1<<t)+1][t]);
}

inline int Cb1(int poz)
{
    int st=poz,dr=n,mij,sol=-1;
    while(st<=dr)
    {
        mij=((st+dr)>>1);
        int x=qry1(poz,mij) , y=qry2(poz,mij);
        if(x==y)
        {
            sol=mij; dr=mij-1;
        }
        else
            if(x>y) dr=mij-1;
            else st=mij+1;
    }
    return sol;
}

inline int Cb2(int poz)
{
    int st=poz,dr=n,mij,sol=-1;
    while(st<=dr)
    {
        mij=((st+dr)>>1);
        int x=qry1(poz,mij) , y=qry2(poz,mij);
        if(x==y)
        {
            sol=mij; st=mij+1;
        }
        else
            if(x>y) dr=mij-1;
            else st=mij+1;
    }
    return sol;
}

int main()
{
    int i,j,x,y,p1,p2;
    long long sol=0;
    #ifndef ONLINE_JUDGE
        freopen ("date.in","r",stdin);
        freopen ("date.out","w",stdout);
    #endif
    cin>>n;
    for(i=1;i<=n;++i) cin>>a[i];
    for(i=1;i<=n;++i) cin>>b[i];
    Rmq1();
    Rmq2();
    for(i=2;i<=n;++i) lg[i]=lg[(i>>1)]+1;
    for(i=1;i<=n;++i)
    {
        p1=Cb1(i);
        if(p1==-1) continue;
        p2=Cb2(i);
        sol+=p2-p1+1;
    }
    cout<<sol;
    return 0;
}
