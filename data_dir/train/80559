#include<bits/stdc++.h>
#define si(x) scanf("%d",&x)
#define sii(x,y) scanf("%d %d",&x,&y)
#define siii(x,y,z) scanf("%d %d %d",&x,&y,&z)
#define su(x) scanf("%u",&x)
#define sl(x) scanf("%ld",&x)
#define sli(x) scanf("%lld",&x)
#define slii(x,y) scanf("%lld %lld",&x,&y)
#define sliii(x,y,z) scanf("%lld %lld %lld",&x,&y,&z)
#define slu(x) scanf("%llu",&x)
#define sf(x) scanf("%f",&x)
#define slf(x) scanf("%lf",&x)
#define sc(x) scanf("%c",&x)
#define ss(x) scanf("%s",x)
#define pf printf
#define fpf fprintf
#define pb push_back
#define f(i,x,y,z) for(int i=x;i<y;i=i+z)
#define f1(i,x,y,z) for(int i=x;i>y;i=i-z)
#define MAX 10000000
#define pi 3.1415926535
#define mp make_pair
#define M 1000000009
#define xx first
#define yy second
#define N 100005
#define E 100005
#define vc vector
#define pq priority_queue
#define Q queue
#define prime 100003


using namespace std;

typedef long long int ll;
typedef unsigned long long int lu;

ll ar[100], nar[N];

vc < ll > v;

int main()
{
    ll n, k, larg, smal,smal1, val, val1;
    slii(n,k);
    for(ll i = 0; n>0; i++)
    {
        if((n&((1ll)<<i))>0)
        {
            v.pb(i);
            ar[i] = 1;
            n -= ((1ll)<<i);
        }
    }
    if(k<v.size())
    {
        pf("No\n");
        return 0;
    }
    n = 1;
    larg = v.back();
    ///cout<<larg;
    k -= (ll)v.size();
    while(1)
    {
        if(n>k) break;
        if(larg>=0) ar[larg] = 0;
        else nar[-larg] = 0;
        larg--;
        if(larg>=0) ar[larg] += (n*2);
        else nar[-larg] += (n*2);
        k -= n;
        if(larg>=0) n = ar[larg];
        else n = nar[-larg];
    }
    smal = min(v[0],larg);
    /*if(k!=0)
    {
        smal = min(v[0],larg);
        n = ar[smal];
        ar[smal] = 0;
        ///cout<<"asd";
        while(1)
        {
            if(n>k)
            {
                smal1 = smal-1;
                val1 = 2*k;
                val = n-k;
                k = 0;
                break;
            }
            smal--;
            k -= n;
            n *= 2;
        }
    }*/
    pf("Yes\n");
    ///return 0;
    while(larg>smal)
    {
        while(ar[abs(larg)]>0)
        {
            pf("%lld ",larg);
            ar[abs(larg)]--;
        }
        while(nar[abs(larg)]>0){
            pf("%lld ",larg);
            nar[abs(larg)]--;
        }
        larg--;
    }
    ///return 0;
    /*
    while(val>0)
    {
        val--;
        pf("%lld ",smal);
    }
    ///return 0;
    ///cout<<val1;
    ///return 0;
    while(val1>0)
    {
        val1--;
        pf("%lld ",smal1);
    }*/
    ///cout<<smal<<" "<<ar[smal]<<endl;
    if(k==0){
        while(ar[abs(smal)]>0){
            pf("%lld ",smal);
            ar[abs(smal)]--;
        }
        while(nar[abs(smal)]>0){
            pf("%lld ",smal);
            nar[abs(smal)]--;
        }
    }
    else{
        if(smal>=0) ar[smal]--;
        else nar[-smal]--;
        while(ar[abs(smal)]>0){
            pf("%lld ",smal);
            ar[abs(smal)]--;
        }
        while(nar[abs(smal)]>0){
            pf("%lld ",smal);
            nar[abs(smal)]--;
        }
        smal--;
        while(k>1){
            pf("%lld ",smal);
            smal--;
            k--;
        }
        pf("%lld %lld\n",smal,smal);
    }
    return 0;
}
