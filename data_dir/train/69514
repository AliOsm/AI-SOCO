#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair <ll, ll> pii;

const ll N = 1e4 + 10;
ll t, n;

void uni(vector <ll> &v, vector <pii> &res) {
	for (ll i : v) {
		if (!res.size())
			res.push_back({i, 1});
		else if (i != res.back().first) {
			if (res.back().second < 2)
				res.pop_back();
			res.push_back({i, 1});
		}
		else
			res.back().second++;
	}
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	cin >> t;
//	t = 1e6 / 4;
	for (ll q = 0; q < t; q++) {
		ll mn1 = 1e9, mn2 = 1, a1 = 1, a2 = 1;
		cin >> n;
//		n = 4;
		vector <ll> v;
		vector <pii> vec;
		for (ll i = 0; i < n; i++) {
			ll a;
			cin >> a;
//			a = 1e4;
			v.push_back(a);
		}
		sort(v.begin(), v.end());
		uni(v, vec);
//		cout << "v : ";
//		for (ll i : v)
//			cout << i << "," << ar[i] << " ";
//		cout << endl;
		for (ll i = 0; i < (ll)vec.size(); i++) {
			if (vec[i].second >= 4) {
				ll tmp1 = 16 * vec[i].first * vec[i].first, tmp2 = vec[i].first * vec[i].first;
				if (tmp1 * mn2 < tmp2 * mn1) {
					mn1 = tmp1;
					mn2 = tmp2;
					a1 = a2 = vec[i].first;
				}
			}
			if (i < (ll)vec.size() - 1 && vec[i].second >= 2 && vec[i + 1].second >= 2) {
				ll tmp1 = 4 * (vec[i].first + vec[i + 1].first) * (vec[i].first + vec[i + 1].first), tmp2 = vec[i].first * vec[i + 1].first;
				if (tmp1 * mn2 < tmp2 * mn1) {
					mn1 = tmp1;
					mn2 = tmp2;
					a1 = vec[i].first;
					a2 = vec[i + 1].first;
				}
			}
		}
		cout << a1 << " " << a1 << " " << a2 << " " << a2 << '\n';
	}
}

