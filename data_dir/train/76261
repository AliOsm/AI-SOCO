#include <bits/stdc++.h>
#define pi 3.1415926535897932384626
using namespace std;

struct vec
{
    long double x,y;
    bool operator ==(const vec &a) const{
        return x==a.x&&y==a.y;
    }
    bool operator <(const vec &a) const{
        if(a.x!=x) return x<a.x;
        return y<a.y;
    }
    vec operator +(const vec &a) const{
        return {x+a.x,y+a.y};
    }
    vec operator *(const long double &a) const{
        return {x*a,y*a};
    }
    vec operator -(const vec &a) const{
        return {x-a.x,y-a.y};
    }
    vec operator /(const long double &a) const{
        return {x/a,y/a};
    }
    long double len() const{
        return (x*x+y*y);
    }
    long double dot(const vec &a) const{
        return x*a.x+y*a.y;
    }
    long double crs(const vec &a) const{
        return x*a.y-y*a.x;
    }
    vec proj(const vec &a) const{
        return (a/a.len())*(*this).dot(a)/a.len();
    }
};


struct P
{
    int x,y;
    bool operator <(const P &a) const{
        //if(x!=a.x)
         return y>a.y;

    }
};


long long x,y,z,mod=1000000007;
//vector<long long> v,v1;
vector<int> v;
//vector<long long> v1;
int i,n,m,k,a,d,b,c,h,dx[10]={1,0,-1,0},dy[10]={0,1,0,-1};
int e;
int l[111111];

int o[4444444];

int j[1];
stack<int> s;
//set<int> s;
queue<int> q;
P u[1],u1[1];
//char r[1],r1[3];
string r,r1;
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
map<int,int> p;

//v.resize(unique(v.begin(),v.end())-v.begin());

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//rng();

bool as(P a,P b)
{
    return a.y<b.y;
}

int f(int n,int m)
{
    int k=0;
    if(n>m) return 0;
    for(;n<m;)
    {
        if(n%2) k+=o[n],n++;
        else if(m%2==0) k+=o[m],m--;
        else n/=2,m/=2;
    }
    return k+o[n];
}

int main()
{
    scanf("%d",&a);
    for(i=1;i<1000100;i*=2);
    for(int t=1;t<=a;t++)
    {
        scanf("%d",&c);
        n=987654321;
        m=-4435;
        e=0;
        for(int i=1;i<=c;i++)
        {
            scanf("%d",&d);
            d++;
            if(n<d)
            {
                e=1;
            }
            n=min(n,d);
            m=max(m,d);
        }
        if(e) y++;
        else o[n]++,l[t]=m;
    }
    x=y*(a-y)*2+y*y;
    for(int t=1;t<=1000001;t++)
    {

        o[t]+=o[t-1];
    }
    for(int t=1;t<=a;t++)
        x+=o[l[t]-1];
    printf("%lld",x);

}

