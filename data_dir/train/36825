/*****Enigma27*****/
#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define endl        '\n'
#define pll         pair<ll int,ll int>
#define vll          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define x           first
#define y           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define rep(i,a,b)  for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define gcd(a,b)    __gcd((a),(b))
#define lcm(a,b)    ((a)*(b)) / gcd((a),(b))
#define ios     ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#include <cassert>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
ll n,i,j,k,l,sum=0,flag=0,t,cnt,ans,r,a[2002]={0},visited[20002]={0},m;
vll v[20002];
void dfs(int node){
    visited[node]=1;
    for(auto j:v[node]){
        if(!visited[j]) dfs(j);
    }
}
int main()
{
    ios
    cin>>n>>m>>k;
    for(i=0;i<n;i++){
        int l=i,r=i+k-1;
        while(l<r&&r<n){
            v[l].pb(r);
            v[r].pb(l);
            l++;r--;
        }
    }
    ans=1;
    for(i=0;i<n;i++){
        if(!visited[i]){
            dfs(i);
            ans*=m;
            ans%=hell;
        }
    }
    cout<<ans<<endl;
    return 0;
} 