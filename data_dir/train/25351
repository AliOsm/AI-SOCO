// Charan Sriramula

#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll lg=14;
const ll N=2e5+5;
const ll INF=2e9;
const ll mod=1e9+7;
const double PI = 3.14159265358979323846;

#define ints(n) scanf("%d",&n)
#define intp(n) printf("%d\n",n)
#define longs(n) scanf("%lld",&n)
#define longp(n) printf("%lld\n",n)

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1LL;x=(x*x)%m;}return ans%m;}

ll n;
vector<ll> g[N];

int main()
{
  cin>>n;
  for(ll i=1;i<=n;i++)
  {
    ll u,v;
    cin>>u>>v;
    g[i].pb(u);
    g[i].pb(v);
    sort(all(g[i]));
  }
  ll kk=0;
  vector<ll> x;
  x.pb(g[1][0]);
  x.pb(g[1][1]);
  for(ll i=2;i<=n;i++)
  {
    ll dd=x.size();
    ll ff=x[dd-2];
    ll ss=x[dd-1];
    if(g[ff][0]==ss){x.pb(g[ff][1]);}
    else if(g[ff][1]==ss){x.pb(g[ff][0]);}
    else{kk=2;break;}
  }
  if(!kk)
  {
    ll cnt=0;
    for(auto i:x)
    {
      cnt++;
      cout<<i<<" ";
      if(cnt==n){exit(0);}
    }
  }
  //cout<<"here"<<endl;
  x.clear();
  x.pb(g[1][1]);
  x.pb(g[1][0]);
  for(ll i=2;i<=n;i++)
  {
    ll dd=x.size();
    ll ff=x[dd-2];
    ll ss=x[dd-1];
    if(g[ff][0]==ss){x.pb(g[ff][1]);}
    else if(g[ff][1]==ss){x.pb(g[ff][0]);}
    else{break;}
  }
  ll cnt=0;
  for(auto i:x)
  {
    cnt++;
    cout<<i<<" ";
    if(cnt==n){exit(0);}
  }
}
