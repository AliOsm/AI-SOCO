#include <bits/stdc++.h>
#define mx 200111
#define mp make_pair
#define pb push_back
#define ppb pop_back
#define ll long long
#define ff first
#define ss second
#define PI acos(-1.0)
using namespace std;
const int N = 100007;
const int mod = 1000000007;
const int inf = mod;
typedef pair<int,int> pp;

inline void scan(int &x){
    register int c = getchar();
    x = 0;
    for(; (c<48 || c>57); c = getchar());
    for(; c>47 && c<58; c = getchar()){
        x = (x<<1) + (x<<3) + c - 48;
    }
}
int n;
vector<int>vec;
vector<pp>temp;
int tree[4*mx];
void upd(int id,int tem,int val){
    while(id<=tem){
        tree[id]+=val;
        id += (id&-id);
    }
}
int query(int id){
    int sum = 0;
    while(id){
        sum += tree[id];
        id -= (id&-id);
    }
    return sum;
}
int main(){
    //freopen("in.txt","r",stdin);
//    ios_base::sync_with_stdio(false);
//    cin.tie(false);
//    cout.tie(false);

    cin>>n;
    for(int i=0;i<n;i++){
        int l,r;
        cin>>l>>r;
        l++,r++;
        temp.pb( {l,r} );
        vec.pb(l);
        vec.pb(r);
    }
    sort(vec.begin(),vec.end());
    int sz = unique(vec.begin(),vec.end())-vec.begin();
    map<int,int>mymap;
    int cnt=0;
    for(int i=0;i<sz;i++){
        mymap[ vec[i] ] = ++cnt;
    }
    for(int i=0;i<n;i++){
        upd( mymap[ temp[i].ff ], cnt , 1);
        upd( mymap[ temp[i].ss ]+1, cnt ,-1);
    }
    for(int i=1;i<=cnt;i++){
        if(query(i)>2){
           // cout<<query(i)<<endl;
            cout<<"NO"<<endl;
            return 0;
        }
    }
    cout<<"YES"<<endl;
    return 0;
}
