#include<bits/stdc++.h>
#define st first
#define nd second
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define umax(x,y) x=max(x,y)
#define umin(x,y) x=min(x,y)
#define ll long long 
#define ii pair<int,int>
#define iii pair<int,ii>
#define iiii pair<ii,ii>
#define sz(x) ((int) x.size())
#define orta ((bas+son)/2)
#define all(x) x.begin(),x.end()
#define pw(x) (1<<(x))
#define inf 100000009
#define MOD 1000000007 
#define N 200005
#define M 2750131
#define LOG 20
#define KOK 250
#define EPS 0.0000001
using namespace std;

struct seg {

	ll mn;
	ll S[N*4];

	void init() {memset(S,0,sizeof(S));}

	void up(int node,int bas,int son,int pos,int val) {

		if(bas>pos || son<pos) return ;
		if(bas>=pos && son<=pos) {S[node]+=val;umin(S[node],mn);return ;}

		up(node<<1,bas,orta,pos,val);
		up(node<<1|1,orta+1,son,pos,val);

		S[node]=S[node<<1]+S[node<<1|1];

	}

	ll get(int node,int bas,int son,int l,int r) {

		if(bas>r || son<l) return 0;
		if(bas>=l && son<=r) return S[node];

		return get(node<<1,bas,orta,l,r)+get(node<<1|1,orta+1,son,l,r);

	}

	ll call(int l,int r,int n) {

		if(l>r) return 0;

		return get(1,1,n,l,r);

	}

} s[2];

int main() {

	s[0].init();
	s[1].init();

	int n,k,a,b,q;

	scanf("%d %d %d %d %d",&n,&k,&a,&b,&q);

	s[0].mn=b;
	s[1].mn=a;

	while(q--) {

		int t;

		scanf("%d",&t);

		if(t==1) {

			int d,o;

			scanf("%d %d",&d,&o);

			s[0].up(1,1,n,d,o);
			s[1].up(1,1,n,d,o);

		}
		else {

			int p;

			scanf("%d",&p);

			printf("%lld\n",s[0].call(1,p-1,n)+s[1].call(p+k,n,n));

		}

	}

}