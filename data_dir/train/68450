#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define bit __builtin_popcount
#define all(x) x.begin(),x.end()
#define show(x) cout<<(#x)<<" is "<<(x)<<endl

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;

const ll INF=1e18+123;
const ld EPS=1e-9;
const int inf=1e9+123;
const int MOD=1e9+7;
const int N=3e5+123;
const int dx[]={0,0,1,-1};
const int dy[]={1,-1,0,0};

int a[N];

int f(ll x){
    int res=0;
    for(int i=0;i<=60;i++){
        if(x&(1ll<<i))res++;
    }
    return res;
}

int n,p[2][N];

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin>>n;
    ll x;
    for(int i=1;i<=n;i++){
        cin>>x;
        a[i]=f(x);
    }
    ll ans=0;
    bool t=0;
    p[0][0]=1;
    for(int i=1;i<=n;i++){
        int s=0,mx=0;
        t^=a[i]&1;
        for(int j=i;j<=min(i+66,n);j++){
            s+=a[j];
            mx=max(mx,a[j]);
            if(s>=mx+mx && s%2==0)ans++;
        }
        if(i>=68){
            ans+=p[t][i-68];
        }
        p[t][i]=1;
        p[0][i]+=p[0][i-1];
        p[1][i]+=p[1][i-1];
    }
    cout<<ans;
    return 0;
}
