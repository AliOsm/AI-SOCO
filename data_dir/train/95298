///In the name of GOD
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll MXN = 1e3 + 10;
ll bmm(ll a, ll b){
	if(b > a) swap(a, b);
	return (!b ? a : bmm(b, a % b));
}
ll n, Kol, Sigma, Ans, cnt = 1;
ll X[MXN], Y[MXN];
set<pair<pair<ll, ll>, pair<ll, ll>>> st;
map<pair<ll, ll>, ll> mp;
pair<ll, ll> Fix(ll a, ll b){
    ll g = bmm(abs(a), abs(b));
    if(g > 0) a /= g, b /= g;
    if(a < 0){
        a *= -1, b *= -1;
    }
    return {a, b};
}
int main(){
    ios::sync_with_stdio(0);cin.tie(0); cout.tie(0);
    cin >> n;
    for(int i = 1; i <= n; i ++) cin >> X[i] >> Y[i];
    for(int i = 1; i <= n; i ++){
        for(int j = i + 1; j <= n; j ++){
            ll x1 = X[i], x2 = X[j], y1 = Y[i], y2 = Y[j];
            ll sa, ma, sb, mb;
            if(x1 == x2)        sa = 1, ma = 0, sb = 0, mb = x2;
            else if(y1 == y2)   sa = ma = 0, sb = y1, mb = 0;
            else{
                pair<ll, ll> Pr = Fix(y1 - y2, x1 - x2);
                sa = Pr.first, ma = Pr.second;
                Pr = Fix(y1 * ma - sa * x1, ma);
                sb = Pr.first, mb = Pr.second;
            }
            auto itr = st.find({{sa, ma}, {sb, mb}});
            if(itr != st.end()) continue;
            mp[{sa, ma}] ++, Kol ++;
            st.insert({{sa, ma}, {sb, mb}});
        }
    }
    for(auto X : mp){
        Sigma += (X.second) * (X.second - 1) / 2;
    }
    Ans = Kol * (Kol - 1) / 2 - Sigma;
    cout << Ans;
    return 0;
}
/*!
    You are under no obligation to be the same person you were a minute ago,
    You have the right to grow !
*/
//! N.N