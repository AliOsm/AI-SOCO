//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC optimize("unroll-loops")

#include <stdio.h>
#include <bits/stdc++.h>

#define uint unsigned int
#define ll long long
#define ull unsigned long long
#define ld long double
#define rep(i, l, r) for (int i = l; i < r; i++)
#define repb(i, r, l) for (int i = r; i > l; i--)
#define sz(a) (int)a.size()
#define fi first
#define se second
#define mp(a, b) make_pair(a, b)

using namespace std;

inline void setmin(int &x, int y) { if (y < x) x = y; }
inline void setmax(int &x, int y) { if (y > x) x = y; }
inline void setmin(ll &x, ll y) { if (y < x) x = y; }
inline void setmax(ll &x, ll y) { if (y > x) x = y; }

const int N = 50;
const int inf = (int)1e9 + 1;
const ll big = (ll)1e18 + 1;
const int P = 239;
const int MOD = (int)1e9 + 7;
const int MOD1 = (int)1e9 + 9;
const double eps = 1e-9;
const double pi = atan2(0, -1);
const int ABC = 26;

void add(int &x, int y)
{
    x += y;
    if (x >= MOD)
        x -= MOD;
}

int dp[N + 1][N + 1][N + 1][N + 1];
// suff, 0 - even, 0 - odd, 1 - even

ll f(int n, int k) // k = 0 - четное, k = 1 - нечетное
{
    if (n == 0)
        return (k == 0 ? 1 : 0);
    else
        return (1LL << (n - 1)) % MOD;
}

ll pw2(int n)
{
    return (1LL << n) % MOD;
}

int main()
{
    //freopen("a.in", "r", stdin);
    //freopen("a.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    cout << fixed;
    //ll TL = 0.95 * CLOCKS_PER_SEC;
    //clock_t time = clock();
    int n, p;
    cin >> n >> p;
    int a[n];
    rep(i, 0, n)
        cin >> a[i];
    dp[n][0][0][0] = 1;
    repb(i, n - 1, -1)
        rep(c00, 0, n + 1)
            rep(c01, 0, n + 1)
                rep(c10, 0, n + 1)
                {
                    int c11 = (n - i) - c00 - c01 - c10;
                    if (c11 < 0)
                        continue;
                    if (a[i] == 0 || a[i] == -1)
                    {
                        if (c00 > 0)
                            add(dp[i][c00][c01][c10], pw2(c00 - 1) * pw2(c01) % MOD * pw2(c10) % MOD * f(c11, 1) % MOD * dp[i + 1][c00 - 1][c01][c10] % MOD);
                        if (c01 > 0)
                            add(dp[i][c00][c01][c10], pw2(c00) * pw2(c01 - 1) % MOD * pw2(c10) % MOD * f(c11, 0) % MOD * dp[i + 1][c00][c01 - 1][c10] % MOD);
                    }
                    if (a[i] == 1 || a[i] == -1)
                    {
                        if (c10 > 0)
                            add(dp[i][c00][c01][c10], pw2(c10 - 1) * pw2(c11) % MOD * pw2(c00) % MOD * f(c01, 1) % MOD * dp[i + 1][c00][c01][c10 - 1] % MOD);
                        if (c11 > 0)
                            add(dp[i][c00][c01][c10], pw2(c10) * pw2(c11 - 1) % MOD * pw2(c00) % MOD * f(c01, 0) % MOD * dp[i + 1][c00][c01][c10] % MOD);
                    }
                }
    /*rep(c00, 0, n + 1)
        rep(c01, 0, n + 1)
            rep(c10, 0, n + 1)
            {
                int c11 = (n - 1) - c00 - c01 - c10;
                if (c11 < 0)
                    continue;
                if (dp[1][c00][c01][c10] > 0)
                    cout << c00 << " " << c01 << " " << c10 << " " << c11 << " " << dp[1][c00][c01][c10] << "\n";
            }
    cout << "\n";*/
    int ans = 0;
    rep(c00, 0, n + 1)
        rep(c01, 0, n + 1)
            rep(c10, 0, n + 1)
            {
                int c11 = n - c00 - c01 - c10;
                if (c11 < 0)
                    continue;
                //if (dp[0][c00][c01][c10] > 0)
                //    cout << c00 << " " << c01 << " " << c10 << " " << c11 << " " << dp[0][c00][c01][c10] << "\n";
                if ((c01 + c11) % 2 == p)
                    add(ans, dp[0][c00][c01][c10]);
            }
    cout << ans << "\n";
    return 0;
}
