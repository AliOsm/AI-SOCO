#include<bits/stdc++.h>
#define ll long long int
#define getFaster ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define rev(i,n,init) for(int i=n;i>=init;i--)
#define MAXN 200005
using namespace std;
vector<int> v1;
vector<int> v2;
int count1[MAXN]={0};
int color[MAXN]={0};
bool checked[MAXN]={false};
vector<int> v[MAXN];
inline void dfs1()
{
    queue<int> q;
    q.push(1);
    color[1]=1;  
    checked[1]=true;
    while(!q.empty())
    {
        int vertex=q.front();
        q.pop();
            checked[vertex]=true;
            rep(j,0,v[vertex].size())
            {
               if(color[v[vertex][j]]==0)
              {
                if(color[vertex]==1)
                color[v[vertex][j]]=2;
                else
                color[v[vertex][j]]=1;
              }
              if(!checked[v[vertex][j]])
              {
                q.push(v[vertex][j]);
                checked[v[vertex][j]]=true;  
              }
                              
            }
            
    }    
}
int main()
{
    int n1;
    cin>>n1;
    rep(i1,1,n1+1)
    {
        int n,m;
        cin>>n>>m;
        rep(i,0,m)
        {
            int a,b;
            cin>>a>>b;
            v[a].push_back(b);
            v[b].push_back(a);
        }
       // v1.push_back(1);
     //   dfs(1,1);
        dfs1();
        rep(i,1,n+1)
        {
             if(color[i]==1)
             v1.push_back(i);
             else
             v2.push_back(i);   
        }
        if(v1.size()<v2.size())
        {
          cout<<v1.size()<<endl;    
          rep(i,0,v1.size())
          cout<<v1[i]<<" ";
          cout<<endl;
        }
        else
        {
          cout<<v2.size()<<endl;    
          rep(i,0,v2.size())
          cout<<v2[i]<<" ";
          cout<<endl;
      
        }    
        v1.clear();v2.clear();
        rep(i,0,n+1)
        {
          color[i]=0;
          v[i].clear();
          checked[i]=false;    
        }
        
    }
    return 0;
}