#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <string>
#include <cstring>
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
using namespace std;

int n;
string a, b;

int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> a >> b;

	int ans = 0;
	if(n % 2 == 1 && a[n / 2] != b[n / 2])
		ans++;
	for(int i = 0; i < n / 2; i++)
	{
		set<int> curr;
		curr.insert(a[i] - 'a');
		curr.insert(a[n - i - 1] - 'a');
		curr.insert(b[i] - 'a');
		curr.insert(b[n - i - 1] - 'a');
		if(curr.size() == 3 && ((a[i] == b[i] || a[i] == b[n - i - 1]) || (a[n - i - 1] == b[i] || a[n - i - 1] == b[n - i - 1])))
			ans++;
		else if(curr.size() == 3 && b[i] == b[n - i - 1]) 
			ans++;
		else if(curr.size() == 2 && ((a[i] == a[n - i - 1] && (a[i] == b[i] || a[i] == b[n - i - 1])) || (b[i] == b[n - i - 1] && (b[i] == a[i] || b[i] == a[n - i - 1]))))
			ans++;
		else if(curr.size() == 4 || curr.size() == 3)
			ans += 2;
	}

	cout << ans << "\n";
	return 0;
}