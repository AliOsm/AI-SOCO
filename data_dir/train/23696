#include <bits/stdc++.h>
using namespace std;

signed main() {
  ios::sync_with_stdio(false);

  int N, M;
  cin >> N >> M;

  vector<vector<int>> C1(N, vector<int>(2));
  vector<vector<int>> C2(M, vector<int>(2));
  for (int i = 0; i < N; ++i) {
    cin >> C1[i][0] >> C1[i][1];
    sort(C1[i].begin(), C1[i].end());
  }
  for (int i = 0; i < M; ++i) {
    cin >> C2[i][0] >> C2[i][1];
    sort(C2[i].begin(), C2[i].end());
  }

  auto check = [&](int b1, int e1, int b2, int e2) {
    int x = -1;
    for (int i = b1; i < e1; ++i) {
      for (int j = b2; j < e2; ++j) {
        if (C1[i] == C2[j]) continue;
        int t;
        if (C1[i][0] == C2[j][0] || C1[i][0] == C2[j][1]) {
          t = C1[i][0];
        } else if (C1[i][1] == C2[j][0] || C1[i][1] == C2[j][1]) {
          t = C1[i][1];
        } else continue;
        if (x == -1) x = t;
        else if (x != t) return 0;
      }
    }
    return x;
  };

  auto solve = [&]() {
    int c = check(0, N, 0, M);
    if (c) return c;
    for (int i = 0; i < N; ++i) {
      if (!check(i, i + 1, 0, M)) return -1;
    }
    for (int i = 0; i < M; ++i) {
      if (!check(0, N, i, i + 1)) return -1;
    }
    return 0;
  };

  cout << solve() << endl;

  return 0;
}
