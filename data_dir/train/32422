#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)    for(long long i=a;i<=b;i++)
#define fr(i,a)      for(long long i=0;i<a;i++)
#define fd(i,a,b)    for(long long i=b;i>=a;i--)
#define clr(x)       memset(x,0,sizeof(x))
#define cln(x)       memset(x,1,sizeof(x))
#define __           printf(" ")
#define _            printf("\n")
#define _o           printf("1\n")
#define stree        long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define mod          1000000007
#define read()       freopen("in.txt","r",stdin)
#define write()      freopen("out.txt","w",stdout)
#define sfl(x)       scanf("%I64d",&x)
#define sfll(x,y)    scanf("%I64d %I64d",&x,&y)
#define sflll(x,y,z) scanf("%I64d %I64d %I64d",&x,&y,&z)
#define pfl(x)       printf("%I64d",x)
#define pfll(x,y)    printf("%I64d %I64d",x,y)
#define pflll(x,y,z) printf("%I64d %I64d %I64d",x,y,z)
#define xx           100000

long long dx[5]={0,0,1,-1},dy[5]={-1,1,0,0};

char g[1010][1010];
long long n,m,k,ex,ey;
long long mem[1010][1010];
struct node{
   long long x,y;
}New;
queue<node>dq;

bool isin(long long x,long y){
   if(x<0||y<0||x>=n||y>=m) return false;
   if(g[x][y]=='#') return false;
   return true;
}

void bfs(){
    long long x,y;
    while(!dq.empty()){
        x=dq.front().x;
        y=dq.front().y;
        dq.pop();
        fr(d,4){
           long long cx=x,cy=y;
           fi(i,1,k){
              cx+=dx[d],cy+=dy[d];
              if(isin(cx,cy)==false) break;
              if(mem[cx][cy]>mem[x][y]+1){
                mem[cx][cy]=mem[x][y]+1;
                if(ex==cx&&ey==cy) return;
                New.x=cx,New.y=cy;
                dq.push(New);
              }
              if(mem[cx][cy]<=mem[x][y]) break;
           }
        }
    }
    return;
}


main(){
    fi(i,0,1000) fi(j,0,1000) mem[i][j]=mod;
    sflll(n,m,k);
    fr(i,n) scanf("%s",g[i]);
    sfll(New.x,New.y);

    New.x--,New.y--;
    mem[New.x][New.y]=0;
    sfll(ex,ey);ex--,ey--;
    dq.push(New);
    bfs();
    if(mem[ex][ey]>10000000) mem[ex][ey]=-1;
    pfl(mem[ex][ey]);_;
    return 0;
}
