#include <bits/stdc++.h>
#define Endl endl
#define Back back
using namespace std;
typedef long long ll;
typedef pair<ll,ll> pll;
const ll inf=(1ll<<61);
const ll mod=998244353;
const int MX=3e5+9;
ll l,r,k;
pll dp[20][3][(1<<12)];
ll pw[20];
vector<int>v;
pll DP(ll x,ll y,ll mask){
    int f=__builtin_popcount(mask);
    if(f>k)return {0,0};
    if(x==v.size())return {0,f<=k};
    pll &ret=dp[x][y][mask];if(ret.first!=-1)return ret;
    ret.first=ret.second=0;
    for(int i=0;i<=9;i++){
        if(y==0){
            pll x1=DP(x+1,0,(mask|(1<<i)));
            ret.second+=x1.second;
            ret.second%=mod;
            ret.first+=x1.first;
            ret.first%=mod;
            ret.first+=((((x1.second*pw[v.size()-1-x])%mod)*i)%mod);
            ret.first%=mod;
        }
        else{
            if(i<=v[x]){
                pll x1=DP(x+1,(i==v[x]),(mask|(1<<i)));
                ret.second+=x1.second;
                ret.second%=mod;
                ret.first+=x1.first;
                ret.first%=mod;
                ret.first+=((((x1.second*pw[v.size()-1-x])%mod)*i)%mod);
                ret.first%=mod;
            }
        }
    }
    return ret;
}
ll solve(ll x){
    if(x==0)return 0;
    v.clear();
    memset(dp,-1,sizeof(dp));
    while(x){
        v.push_back(x%10);
        x/=10;
    }
    reverse(v.begin(),v.end());
    ll ans=0;
    for(int i=1;i<v[0];i++){
        pll ret=DP(1,0,1<<i);
        ret.second%=mod;
        ans+=ret.first + (((ret.second*pw[v.size()-1])%mod)*i)%mod;
        ans%=mod;
    }
    pll ret=DP(1,1,(1<<v[0]));
    ans+=ret.first + ((((ret.second*pw[v.size()-1])%mod)*v[0])%mod);
    v.pop_back();
    while(!v.empty()){
        memset(dp,-1,sizeof(dp));
        for(int i=1;i<=9;i++){
            pll ret=DP(1,0,1<<i);
            ret.second%=mod;
            ans+=ret.first + (((ret.second*pw[v.size()-1])%mod)*i)%mod;
            ans%=mod;
        }
        v.pop_back();
    }
    return ans%mod;
}
//bool f(ll x){
//    int ret=0;
//    bool is[10]={0};
//    while(x){
//        if(is[x%10]==0)ret++;
//        is[x%10]=1;
//        x/=10;
//    }
//    return ret<=k;
//}
int main(){
    cin>>l>>r>>k;
    pw[0]=1;
    for(int i=1;i<20;i++)pw[i]=(pw[i-1]*10)%mod;
    cout<<(solve(r)-solve(l-1)+mod)%mod<<endl;
//    ll ans=0;
//    for(ll i=l;i<=r;i++){
//        ans+=i*f(i);
//        ans%=mod;
//    }
//    cout<<ans<<endl;
}
