#include <bits/stdc++.h>

#define F first
#define S second
#define pii pair<int, int>
#define pb push_back

using namespace std;

typedef long long ll;
typedef long double ld;

const int maxN = 1e6 + 10;

int x[maxN], y[maxN], p[maxN];
ll a[maxN], dp[maxN];

pair<ll, ll> lines[maxN];
int len;


bool cmp(int i, int j)
{
	return y[i] < y[j];
}

ll barkhord(pair<ll, ll> A, pair<ll, ll> B) 
{
	return (A.S - B.S + B.F - A.F - 1) / (B.F - A.F);
}

int main() {
	ios_base::sync_with_stdio(0); cin.tie(0);

	int n; cin >> n;
	for (int i=0; i<n; i++)
		cin >> x[i] >> y[i] >> a[i];

	for (int i=0; i<n; i++) p[i] = i;
	sort(p, p + n, cmp);

	lines[len ++] = {0, 0};
	int ptr = 0;

	ll ans = 0;

	for (int k=1; k<=n; k++)
	{
		int i = p[k - 1];
		while(ptr < len - 1 && barkhord(lines[ptr + 1], lines[ptr]) > x[i]) ptr ++;
		dp[k] = 1LL * x[i] * y[i] - a[i] + lines[ptr].F * x[i] + lines[ptr].S;

		if(dp[k] <= lines[len - 1].S) continue ;
		
		pair<ll, ll> curr = {-y[i], dp[k]};
		while(len >= 2 && barkhord(curr, lines[len - 1]) >= barkhord(lines[len - 1], lines[len - 2])) len --;
		lines[len ++] = curr;

		ptr = min(ptr, len - 1);

		ans = max(ans, dp[k]);
	}

	cout << ans << endl;

}
