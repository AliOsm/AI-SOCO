///                                                                            ببِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيم
#include <bits/stdc++.h>
#define br   break0#define off  exit( 0 )
#define cn   continue
#define rt   return
#define do   double
#define cr   char
#define st   string
#define sc   scanf
#define pr   printf
#define mk   make_pair
#define pb   push_back
#define pf   push_front
#define p_f  pop_front
#define p_b  pop_back
#define siz strlen
#define ff   first
#define ss   second
#define vec  vector
#define gcd  __gcd
#define pi   acos( -1 )
#define ll   long long
#define N    200256
#define M    1000000007
#define I    1000000000000000000
#define pll  pair < ll, ll >
#define pii  pair < int, int >
#define rep( a, b, c, d )  for( int a = b; a <= c; a += d )
#define rvv( a, b, c, d )  for( int a = b; a >= c; a -= d )
#define en                 printf( "\n" )
#define sqr( a )           a * a
#define all( c )           c.begin(), c.end()
#define srt( c )           sort( all( c ) )
#define rev( c )           reverse( all( c ) )
#define mxx( x, y, z )     max( x, max( y, z ) )
#define mnn( x, y, z )     min( x, min( y, z ) )
#define mxn( x, y, z )     max( x, min( y, z ) )
#define mnx( x, y, z )     min( x, max( y, z ) )
using namespace std;
ll tests;
ll ans;
char c[ 10 ][ 10 ];
bool d[ 10 ][ 10 ];
void solve()
{
    rep( i, 1, 8,  1 )
        rep( j, 1, 8, 1 )
            cin >> c[ i ][ j ];
    rep( i, 1, 8,  1 )
        if( c[ i ][ 1 ] == 'B' )
        {
            bool ok = 0, okk = 0;;
            rep( k, 1, 8, 1 )
            {
                if( c[ i ][ k ] != 'B' )ok = 1;
                if( d[ i ][ k ] != 1 )okk = 1;
            }
            if( ok == 0 && okk == 1 )
            {
                rep( k, 1, 8, 1 )d[ i ][ k ] = 1;
                ans ++;
            }
        }
    rep( j, 1, 8, 1 )
        if( c[ 1 ][ j ] == 'B' )
        {
            bool ok = 0, okk = 0;;
            rep( k, 1, 8, 1 )
            {
                if( c[ k ][ j ] != 'B' )ok = 1;
                if( d[ k ][ j ] != 1 )okk = 1;
            }
            if( ok == 0 && okk == 1 )
            {
                rep( k, 1, 8, 1 )d[ k ][ j ] = 1;
                ans ++;
            }
        }
    cout << ans;
}
int main()
{
    ios_base::sync_with_stdio( 0 );
    cin.tie( 0 );
    cout.tie( 0 );
    /*cin >> tests;
    while( tests -- )*/
        solve();
}

















