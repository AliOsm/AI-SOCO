///*** One Last Try ***///
#include<bits/stdc++.h>
using namespace std;
#define inf ( int )( 1e8 )
#define mxs (int)( 1e6 + 10 )
#define ll long long int
#define md  int mid = ( l + r )>>1;
//int dx[]={+1,-1,+0,+0};///Four Directions
//int dy[]={+0,+0,+1,-1};///Four directions
//int dx [] = {+1,-1,+0,+0,-1,-1,+1,+1};///Eight Directions
//int dy [] = {+0,+0,+1,-1,+1,-1,-1,+1};///Eight Directions
ll t, n, m, i, j, ans, k, a, b, c, d, e, row, col , pos , le , re , me;
ll lol , O_o , sum;
string s, s2, s3, s4;
map < ll , ll > mp;
priority_queue < ll > pq;
ll ar [ mxs ] , ar2 [ mxs ];
void brainfuck();
int main()
{
    ios_base::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    brainfuck();
    return 0;
}
void brainfuck()
{
    cin>>n>>m>>k;
    for ( i = 1 ; i <= n ; i++ )
    {
        cin>>ar [ i ];
        pq.push( ar [ i ] );
    }
    c = m*k;
    while( c-- )
    {
        mp [ pq.top() ]++;
        pq.pop();
    }
    vector < ll > shit;
    b = k;
    for ( i = 1 ; i <= n; i++ )
    {
        if ( !k )break;
        if ( mp.find(ar [ i ] ) != mp.end() && mp [ ar [ i ] ] )
        {
            ans += ar [ i ];
            mp [ ar [ i ] ]--;
            a++;
        }
        if ( a == m )
        {
            k--;
            if( k )shit.push_back( i );
            //k--;
            a = 0;
        }
    }
    cout<<ans<<"\n";
    for ( i = 0 ; i < b - 1; i++ )cout<<shit [ i ]<<" ";
}
