#include <bits/stdc++.h>
#include <ext/hash_set>
#include <ext/numeric>

using namespace __gnu_cxx;
using namespace std;

using ll = long long;
using vi = vector<int>;
using vll = vector<ll>;
using vvi = vector<vi>;
using pii = pair<int, int>;
using vii = vector<pii>;
using vb = vector<bool>;
using vs = vector<string>;
const int MOD = int(1e9 + 7);
const long double EPS = 1e-4;
const double PI = 3.1415926535897932384626433;
const ll INF = ll(1e9);
int di[] = {0, 0, 1, -1};
int dj[] = {1, -1, 0, 0};
#define all(x) x.begin(),x.end()

vi cnt(1 << 21);

vvi mem(1 << 21, vi(22, -1));
int solve(int msk, int k) {
	if (k == -1) return cnt[msk];

	int& ret = mem[msk][k];
	if (~ret) return ret;

	ret = solve(msk, k - 1);
	if (!(msk & (1 << k))) {
		ret += solve(msk ^ (1 << k), k - 1);
	}
	return ret;
}

const int sz = (1 << 20);
int pwr[sz];
int main() {
	ios::sync_with_stdio(false), cin.tie(nullptr);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif

	int n; cin >> n;
	for (int i = 0; i < n; ++i) {
		int x; cin >> x;
		cnt[x]++;
	}

	pwr[0] = 1;
	for (int i = 1; i < sz; ++i) {
		pwr[i] = pwr[i - 1] * 2;
		pwr[i] %= MOD;
	}

	int ans = 0;
	for (int i = 0; i < sz; ++i) {
		if (__builtin_popcount(i) % 2)
			ans -= pwr[solve(i, 20)];
		else
			ans += pwr[solve(i, 20)];
		if (ans < 0) ans += MOD;
		ans %= MOD;
	}
	cout << ans << endl;
}
