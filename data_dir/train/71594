//raja1999
#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx


using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >

//std::ios::sync_with_stdio(false);
string s;
int n,m;
int dp[55][2][2][2],vala[55],vald[55],valc[55],revvala[55],revvalc[55],revvald[55];
int compute(int pos,int fl1,int fl2,int fl3)
{
	if(pos==n)
	{
		if(fl1==0||fl2==0||fl3==0){
			return inf;
		}
		else
			return 0;
	}
	if(dp[pos][fl1][fl2][fl3]!=inf)
		return dp[pos][fl1][fl2][fl3];
	if(revvala[pos]!=-100)
	dp[pos][fl1][fl2][fl3]=min(compute(pos+1,min(fl1+1,1),fl2,fl3)+min(vala[pos],m-revvala[pos]),compute(pos+1,fl1,fl2,fl3));
	if(revvald[pos]!=-100)
	dp[pos][fl1][fl2][fl3]=min(dp[pos][fl1][fl2][fl3],compute(pos+1,(fl1),min(fl2+1,1),fl3)+min(vald[pos],m-revvald[pos]));
	if(revvalc[pos]!=-100)
	dp[pos][fl1][fl2][fl3]=min(dp[pos][fl1][fl2][fl3],compute(pos+1,(fl1),(fl2),min(fl3+1,1))+min(valc[pos],m-revvalc[pos]));
	return dp[pos][fl1][fl2][fl3];
}
int main(){
	std::ios::sync_with_stdio(false);
	int i,j,k,l;
	ll minn=inf;
	minn*=inf;
	cin>>n>>m;
	rep(i,55)
	{
		vala[i]=inf;
		valc[i]=inf;
		vald[i]=inf;
		revvala[i]=-100;
		revvalc[i]=-100;
		revvald[i]=-100;
		rep(j,2)
		{
			rep(k,2)
			{
				rep(l,2)
				dp[i][j][k][l]=inf;
			}
		}
	}
	rep(i,n)
	{
		cin>>s;
    	rep(j,m)
    	{
    		if(s[j]>='a'&& s[j]<='z')
    		{
    			vala[i]=min(vala[i],j);
    		}
    		else if(s[j]>='0'&& s[j]<='9')
    		{
    			vald[i]=min(vald[i],j);
    		}
    		else
    		{
    			s[j]='*';
    			valc[i]=min(valc[i],j);
    		}
    	}
    	fd(j,m-1,0)
    	{
    		if(s[j]>='a'&& s[j]<='z')
    		{
    			revvala[i]=max(revvala[i],j);
    		}
    		else if(s[j]>='0'&& s[j]<='9')
    		{
    			revvald[i]=max(revvald[i],j);
    		}
    		else
    		{
    			revvalc[i]=max(revvalc[i],j);
    		}
    	}
	}
	//cout<<dp[0][0][0][0]<<endl;
	minn=min(minn,(ll)compute(0,0,0,0));
	//cout<<dp[0][0][0][0]<<endl;
	//return 0;
	minn=min(minn,(ll)compute(0,1,0,0)+min(vala[0],m-revvala[0]));
	minn=min(minn,(ll)compute(0,0,1,0)+min(vald[0],m-revvald[0]));
	minn=min(minn,(ll)compute(0,0,0,1)+min(valc[0],m-revvalc[0]));
	cout<<minn<<endl;

} 
