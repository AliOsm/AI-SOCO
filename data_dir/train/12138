#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>


template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

const long long MAX = 5100000;
const long long INF = 1LL << 60;
const long long MOD = 1'000'000'007LL;
const long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;


int main()
{

	cin.tie(nullptr);
	ios::sync_with_stdio(false);

	ll n, k;
	cin >> n >> k;
	string s;
	cin >> s;

	bool flag = true;
	for (ll i = 0; i < k; i++) {
		ll id = i;
		while (id < n) {
			if (s[i] != s[id]) {
				flag = false;
				break;
			}
			id += k;
		}
		if (!flag) break;
	}
	if (flag) {
		cout << s.size() << "\n";
		cout << s << endl;
		return 0;
	}

	flag = true;
	for (ll i = k; i < n; i++) {
		if (s[i%k] > s[i]) {
			break;
		}
		if (s[i%k] < s[i]) {
			flag = false;
			break;
		}
	}
	if (flag) {
		for (ll i = 0; i < k; i++) {
			ll id = i;
			while (id < n) {
				s[id] = s[i];
				id += k;
			}
		}
		cout << s.size() << "\n";
		cout << s << "\n";
		return 0;
	}
	ll id = -1;
	for (ll i = k - 1; i >= 0; i--) {
		if (s[i] != '9') {
			id = i;
			char c = (char)(s[i] + 1);
			while (id < n) {
				s[id] = c;
				id += k;
			}
			break;
		}
	}
	for (ll i = 0; i < k; i++) {
		if (i == id % k) continue;
		char c;
		if (i < id % k) {
			c = s[i];
		}
		else {
			c = '0';
		}
		ll tmp = i;
		while (tmp < n) {
			s[tmp] = c;
			tmp += k;
		}
	}
	cout << s.size() << "\n";
	cout << s << "\n";
	return 0;

}