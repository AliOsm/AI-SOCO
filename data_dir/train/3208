#include <bits/stdc++.h>
typedef long long ll ;
using namespace std;
const int MAX = 1 << 19 ;

int popcount(ll mask)
{
     int res = 0 ;
     while(mask){
         mask &= (mask - 1);
         res++ ;
     }
     return res ;
}

int n , m , k ;
ll a[20];
ll rule[500][500];
ll memo[MAX][20] ;

ll f(ll mask , int last)
{
    int cnt = popcount(mask);
    if(cnt == n || cnt == m) return 0 ;

    ll &ret = memo[mask][last];

    if(ret != -1) return ret ;

    for(int j = 0 ; j < n ; j++){
        if(mask & (1 << j )) continue ;
        ret = max(ret , f(mask | (1 << j) , j) + rule[last][j] + a[j]);
    }

    return ret ;
}

int main()
{
   ios::sync_with_stdio(false) ;

   cin >> n >> m >> k ;
   for(int i = 0 ; i < n ; i++) cin >> a[i] ;

   for(int i = 0 ; i < k ; i++){
         int x , y , c;
         cin >> x >> y >> c ;
         rule[x - 1][y - 1] = c ;
   }

   memset(memo , -1 , sizeof(memo));

   cout << f(0 , n + 1) << endl ;


    return 0;
}
