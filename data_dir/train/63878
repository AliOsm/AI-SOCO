#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <numeric>
#include <iostream>


int main() {
  int n;
  scanf("%d", &n);
  std::vector<std::vector<int>> a;
  for (int i = 0; i < n; ++i) {
    int l;
    scanf("%d", &l);
    std::vector<int> v(l);
    for (int j = 0; j < l; ++j) scanf("%d", &v[j]);
    a.emplace_back(std::move(v));
  }
  int self_contained = 0;
  std::vector<int> max_values;
  for (int i = 0; i < n; ++i) {
    bool ok = false;
    int vmin = 1e7;
    int vmax = -1;
    for (int x : a[i]) {
      if (vmin < x) ok = true;
      vmin = std::min(vmin, x);
      vmax = std::max(vmax, x);
    }
    if (ok) ++self_contained;
    else max_values.emplace_back(vmax);
  }
  std::sort(max_values.begin(), max_values.end());
  long long result = 0;
  for (int i = 0; i < n; ++i) {
    bool ok = false;
    int vmin = 1e7;
    int vmax = -1;
    for (int x : a[i]) {
      if (vmin < x) ok = true;
      vmin = std::min(vmin, x);
      vmax = std::max(vmax, x);
    }
    // fprintf(stderr, "ok = %d, vmin = %d, vmax = %d\n", ok, vmin, vmax);
    if (ok) {
      result += n;
    } else {
      result += n - (std::upper_bound(max_values.begin(), max_values.end(), vmin) - max_values.begin());
    }
    // fprintf(stderr, "result = %lld\n", result);
  }
  printf("%lld\n", result);
}
