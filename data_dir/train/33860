
#include <bits/stdc++.h>

using namespace std;

const long long mod = 998244353;

const int MAXN = 200005;
char suff[MAXN];

long long solve(string s)
{
    int n = s.size();
    set <char> q;

    for (int i = n - 1; i > -1; --i)
    {
        q.insert(s[i]);
        if (q.size() == 1)
            suff[i] = *q.begin();
        else
            suff[i] = 0;
        if (i == n - 1)
            suff[i + 1] = *q.begin();
    }

    char t = s[0];
    long long cnt = 0;


    for (int i = 0; i < n; ++i)
    {
        if (s[i] != t)
            break;
        cnt++;
    }

    long long ans = 0;
    q.clear();
    for (int i = 0; i < n - 1; ++i)
    {
        if (suff[i + 1] == t)
        {
            ans += cnt + 1;
            ans %= mod;
        }
    }
    ans += cnt + 1;
    return ans;
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
   
    int n; cin >> n;
    string s; cin >> s;
    
    long long ans = 0;
    ans += solve(s);

    if (s[0] != s[n - 1])
    {
        reverse(s.begin(), s.end());
        ans += solve(s);
        ans %= mod;
        ans = ans + mod - 1;
        ans %= mod;
    }
    ans %= mod;
    cout << ans;

    return 0;
}