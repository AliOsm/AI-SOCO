#include <bits/stdc++.h>
using namespace std;

using ll = long long;

const int mod = 1e9 + 7;

int dp[5005][5005];
int sm[5005][5005];
int n, a, b, k;
vector < int > G[5005];

int main() {
        #ifdef CLown1331
            freopen("in.txt","r",stdin);
        #endif /// CLown1331

        while( cin >> n >> a >> b >> k ) {

                memset( dp, 0, sizeof dp );

                for( int i=1; i<=n; i++ ) {

                        dp[0][i] = i != b;
                        sm[0][i] = ( sm[0][i - 1] + dp[0][i] ) % mod;
                }

                for( int i=1; i<=k; i++ ) {

                        for( int j=1; j<=n; j++ ) {

                                if( j == b ) dp[i][j] = 0;
                                else {
                                        int len = abs( j - b ) - 1;

                                        int l = max( 1, j - len );
                                        int r = min( n, j + len );

                                        dp[i][j] = ( sm[i - 1][r] - sm[i - 1][l - 1] + mod ) % mod;
                                        dp[i][j] = ( dp[i][j] - dp[i - 1][j] + mod ) % mod;

                                }
                                sm[i][j] = ( sm[i][j - 1] + dp[i][j] ) % mod;
                        }

                }

                cout << dp[k][a] << "\n";

        }

        return 0;
}
