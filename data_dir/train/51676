/*
   Salim Shebli
   Russian,Syrian
   Faculty Of Information Technology
   University of Damascus
   Game Developer
 */
#include <bits/stdc++.h>
#define ll long long
#define mp make_pair
#define pb push_back

using namespace std;
ll n,b;
ll c[5010];
ll w[5010];
vector<ll>g[5010],g1[5010];
int dp[5010][5010][2];
ll sz[5010];
int dp2[5010][5010][2];
int sum(ll a,ll b)
{
    ll sol=a+b;
    if(sol>=1e9+10)
        return 1e9+10;
    return sol;
}
ll dfs(int v)
{
    sz[v]=1;
    ll mx=-1;
    ll id=-1;
    for(int i=0;i<g1[v].size();i++)
    {
       sz[v]+= dfs(g1[v][i]);
       if(sz[g1[v][i]]>mx)
       {
           mx=sz[g1[v][i]];
           id=i;
       }
    }
    if(id!=-1)
        g[v].pb(g1[v][id]);
    for(int i=0;i<g1[v].size();i++)
    {
        if(i!=id)
        {
            g[v].pb(g1[v][i]);
        }
    }
    for(int i=0;i<=sz[v]+4;i++)
    {
        dp[v][i][0]=1e9+10;
        dp[v][i][1]=1e9+10;
    }
    ll totsize=1;


        for(int i=0;i<=g[v].size();i++)
        {
             for(int j=0;j<=totsize+10;j++)
            {
                dp2[i][j][0]=1e9+10;
                dp2[i][j][1]=1e9+10;
            }
            if(i!=g[v].size())
                totsize+=sz[g[v][i]];

        }

    dp[v][0][1]=0;
     dp[v][1][1]=c[v]-w[v];
    dp[v][0][0]=0;
    dp[v][1][0]=c[v];
    dp2[0][1][1]=c[v]-w[v];
    dp2[0][1][0]=c[v];
     dp2[0][0][1]=0;
    dp2[0][0][0]=0;

    totsize=1;
        for(int i=0;i<=g[v].size();i++)
        {
            ll ntt=0;
            if(i!=g[v].size())
            {
                ll to=g[v][i];
                for(int j=0;j<=totsize+1;j++)
                {
         //       if(j==0&&i>1)continue;
           //     if(dp2[i][j][0]>=1e12)continue;


                    for(int k=0;k<=sz[to];k++)
                    {

                            ll nx=k+j;
                           if(nx<=sz[v])
                            {
                                dp2[i+1][nx][0]=min(dp2[i+1][nx][0],sum(dp2[i][j][0],dp[to][k][0]));
                                if(j>0)
                                    dp2[i+1][nx][1]=min(dp2[i+1][nx][1],min(sum(dp2[i][j][1],dp[to][k][1]),sum(dp2[i][j][1],dp[to][k][0])));
                            }
                            else break;
                    }
                }
                ntt+=sz[to];


            }

            for(int j=0;j<=totsize+1;j++)
                {
                    dp[v][j][0]=min(dp[v][j][0],dp2[i][j][0]);
                    if(j!=0)
                        dp[v][j][1]=min(dp[v][j][1],dp2[i][j][1]);
                }
                totsize+=ntt;

        }





    return sz[v];
}
int main()
{
    ios::sync_with_stdio(false);
    cin>>n>>b;
    for(int i=1;i<=n;i++)
    {
        cin>>c[i]>>w[i];
        ll p;
        if(i>1)
        {
            cin>>p;
        g1[p].pb(i);
        }
    }
    ll sz=dfs(1);
    ll mmax=0;
    //cout<<sz<<endl;
    for(ll i=0;i<=sz;i++)
    {
      //  cout<<dp[1][i][1]<<endl;
        if(dp[1][i][1]<=b)
        {
            mmax=max(mmax,i);
        }
        if(dp[1][i][0]<=b)
        {
            mmax=max(mmax,i);
        }
    }
    cout<<mmax<<endl;
    return 0;
}
