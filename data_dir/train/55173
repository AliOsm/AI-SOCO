#include <iostream>
#include <fstream>
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iomanip>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <sstream>
#include <string>
#include <vector>
using namespace std;

#define EPS 1e-9
#define INF MOD
#define MOD 1000000007LL
#define fir first
#define iss istringstream
#define sst stringstream
#define ite iterator
#define ll long long
#define mp make_pair
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<n;i++)
#define pi pair<int,int>
#define pb push_back
#define sec second
#define sh(i) (1LL<<i)
#define sz size()
#define vi vector<int>
#define vc vector
#define vl vector<ll>
#define vs vector<string>

ll n,k,a,c[1050],dp[1050][1050],fact[100010];
set<ll> S;
set<ll>::ite it;
map<ll,ll> M;


ll extgcd(ll a,ll b,ll& x, ll& y){
	ll d=a;
	if(b)d=extgcd(b,a%b,y,x),y-=(a/b)*x;
	else x=1,y=0;
	return d;
}

ll mod_inverse(ll a,ll m){
	ll x,y;
	extgcd(a,m,x,y);
	return ((ll)m+x%m)%m;
}

ll mod_fact(ll n,ll& e){
	e=0;
	if(!n)return 1;
	ll res=mod_fact(n/MOD,e);
	e+=n/MOD;
	if(n/MOD%2)return (ll)res*(MOD-fact[n%MOD])%MOD;
	return (ll)res*fact[n%MOD]%MOD;
}

ll mod_C(ll n,ll k){
	if(n<0||k<0||n<k)return 0;
	ll e1,e2,e3;
	ll a1=mod_fact(n,e1),a2=mod_fact(k,e2),a3=mod_fact(n-k,e3);
	if(e1>e2+e3)return 0;
	return (ll)a1*mod_inverse(a2*a3%MOD,MOD)%MOD;
}


void gen(ll n){
	if(n>INF-7)return;
	if(n>0)S.insert(n);
	gen(n*10+4);
	gen(n*10+7);
}

int main(){
	gen(0);
	int cur=1;
	for(it=S.begin();it!=S.end();it++){
		M[*it]=cur++;
	}
	cin>>n>>k;
	rep(i,n){
		cin>>a;
		c[M[a]]++;
	}
	dp[0][0]=1;
	rep2(i,1,1023)rep(j,i+1){
		if(j==0)dp[i][j]=dp[i-1][j];
		else dp[i][j]=(dp[i-1][j-1]*c[i]+dp[i-1][j])%MOD;
	}
	fact[0]=1;
	rep(i,100009)fact[i+1]=((ll)fact[i]*(i+1))%MOD;
	//rep(i,10)cout<<dp[1022][i]<<" ";cout<<endl;
	//rep(i,10)cout<<mod_C(c[0],i)<<" ";cout<<endl;
	ll ans=0;
	rep(i,min(k+1,1023LL))ans=(ans+dp[1022][i]*mod_C(c[0],k-i))%MOD;
	cout<<ans;
}
