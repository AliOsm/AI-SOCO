#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll int
#define ld long double
#define pp pair<ll,pair<ll,ll> >
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define hell 1000000007
#define f first
#define s second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree<ll , null_type , less<ll> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t = 1  ;
void solve()
{
    ll n , rem , x , tot = 0 ;
    cin >> n ;
    vector<ll> cnt(10,0) , occ[3] ;
    rep( i , 0 , n )
    {
        cin >> x ;
        tot += x ;
        cnt[x]++;
        occ[x%3].pb(x);
    }
    rep( i , 0 , 3 )
        sort(all(occ[i]));
    if(cnt[0]==0){cout<<"-1\n";return;}
    rem = tot%3 ;
    bool isOk = true ;
    if(rem)
    {
        if(rem==1)
        {
            if(sz(occ[1])!=0)
            {
                cnt[occ[1][0]]--;
            }
            else if(sz(occ[2])>1)
            {
                cnt[occ[2][0]]--;
                cnt[occ[2][1]]--;
            }
            else
                isOk=false;
        }
        else
        {
            if(sz(occ[2])!=0)
            {
                cnt[occ[2][0]]--;
            }
            else if(sz(occ[1])>1)
            {
                cnt[occ[1][0]]--;
                cnt[occ[1][1]]--;
            }
            else
                isOk=false;
        }
    }
    if(isOk==false){cout<<"-1";return;}
    string ans = "" ;
    for(ll i = 9 ; i >= 0 ; i-- )
    {
        rep( j , 0 , cnt[i] )
            ans += (char)('0'+i);
    }
    if(ans[0]=='0')ans="0";
    cout << ans << "\n" ;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
