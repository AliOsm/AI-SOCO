
// Problem : C. Splitting the Uniqueness
// Contest : Codeforces - Codeforces Round #180 (Div. 1)
// URL : https://codeforces.com/problemset/problem/297/C
// Memory Limit : 256 MB
// Time Limit : 1000 ms
// Powered by CP Editor (https://github.com/cpeditor/cpeditor)

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std;
using namespace __gnu_pbds;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>
ordered_set;	

#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<pii, int> para;
const ll inf = 1e18 + 7;
const ll maxN = 1e6 + 5;
const ll MOD = 1e9 + 7;

int n, a[maxN], b[maxN], ansA[maxN], ansB[maxN];
pii t[maxN];
map<int, bool> useda, usedb;

int getMex(int start, map<int, bool>& used) {
	FOR(i, start, n + 3) {
		if (!used[i]) return i;
	}
	assert(false);
}
// sprawdz MODULO!
int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);
	cin >> n;
	REP(i, n) {
		cin >> t[i].st;
		t[i].nd = i;	
	}
	sort(t, t + n);
	int div = n / 3;
	int prevN = n;
	int ileA = div + (n % 3 != 0);
	if (n % 3 != 0) n--;
	int ileB = div + (n % 3 != 0);
	if (n % 3 != 0) n--;
	int ileC = div;
	n = prevN;
	//cout << ileA << " " << ile
	REP(i, n) {
		if (i < ileA) {
			a[i] = i;
			b[i] = t[i].st - i;
		} else {
			if (i < ileA + ileB) {
				b[i] = i;
				a[i] = t[i].st - i;
			} else {
				b[i] = n - 1 - i;
				a[i] = t[i].st - b[i];
			}
		}
	}
	
	
	REP(i, n) {
		ansA[t[i].nd] = a[i];
		ansB[t[i].nd] = b[i]; 
	}
	
	cout << "YES\n";
	REP(i, n) {
		cout << ansA[i] << " ";
	}
	cout << endl;
	REP(i, n) {
		cout << ansB[i] << " ";
	}
	return 0;
}
 
