#include<bits/stdc++.h>
using namespace std;
const int MAX = 1010;
int d[4][MAX][MAX] , n,m;
bool vis[4][MAX][MAX];
int dirx[4]={0,0,-1,1} , diry[4]={-1,1,0,0};
string s[MAX];
void bfs(char t){
    int tp = t - '0';
    queue<pair<int,int> > q;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            if(s[i][j] == t){q.push({i,j});vis[tp][i][j] = true;d[tp][i][j] = 0;} else d[tp][i][j] = 1e8;
        }
    }
    while(!q.empty()){
        pair<int,int> v = q.front(); q.pop();
        int x1 = v.first , y1=v.second;
        for(int i=0;i<4;i++){
            int x2=x1 + dirx[i] , y2=y1 + diry[i];
            if(s[x2][y2] == '#')continue;
            if(x2<1 || x2>n || y2<1 || y2>m)continue;
            bool zx=true;
            if((s[x1][y1] != '.') && s[x2][y2] == s[x1][y1] ) zx=0;
            if(d[tp][x2][y2] > d[tp][x1][y1] + zx){
                d[tp][x2][y2] = d[tp][x1][y1] + zx;
                q.push({x2,y2});
            }
        }
    }
}
int main(){
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    cin>>n>>m;
    int onex,oney,twox,twoy,thrx,thry;
    for(int i=1;i<=n;i++){
        cin>>s[i];
        for(int j=m;j>=1;j--){
            s[i][j] = s[i][j-1];
            if(s[i][j] == '1'){onex=i ; oney=j;}
            if(s[i][j] == '2'){twox=i ; twoy=j;}
            if(s[i][j] == '3'){thrx=i ; thry=j;}
        }
        s[i][0]=0;
    }
    int ans = 1e8;
    bfs('1');
    bfs('2');
    bfs('3');
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            if(s[i][j] == '#')continue;
            int tmp;
            if(d[1][i][j] != 1e8 && d[2][i][j] !=1e8 && d[3][i][j]!=1e8)
                ans = min(ans  , d[1][i][j] + d[2][i][j] + d[3][i][j]-2);
        }
    }
    if(ans == 1e8){cout<<-1; return 0;}
    cout<<ans<<endl;
}
