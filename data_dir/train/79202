/*
 * test.cpp
 *
 *
 *      Author: Fireworks
 */

#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<iomanip>
#include<fstream>
#include<bitset>
#include<cstring>
#include<cstdlib>
#include<complex>
#include<list>
#include<sstream>

using namespace std;

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
long long mod = 1000000007LL;
long long base = 37;
long long large = 1000000000000000000LL;

//|x|+|y| is the minimum value
void gcdE(long long a,long long b,long long& d,long long& x,long long& y){
	if(!b){
		d=a;
		x=1;
		y=0;
	}else{
		gcdE(b,a%b,d,y,x);
		y-=x*(a/b);
	}
}

//to calculate (a/b) mod n, change it to ((a mod n)*inv(b,n)) mod n
long long inv(long long a,long long n){
	long long d,x,y;
	gcdE(a,n,d,x,y);
	return d==1?(x+n)%n:-1;
}


int main(){
	int n;
	cin>>mod>>n;
	vector<long long> a(n,0);
	for(int i=0;i<n;i++){
		cin>>a[i];
	}

	if(n==1){
		cout<<a[0]<<" "<<1<<endl;
		return 0;
	}
	if(n==mod){
		cout<<0<<" "<<1<<endl;
		return 0;
	}
	sort(a.begin(),a.end());
	if(2LL*(n-1)<mod){
		long long g = a[1]-a[0];
		long long cnt = 0;
		for(int i=0;i<n;i++){
			cnt+=1LL*(upper_bound(a.begin(),a.end(),(a[i]+g)%mod)-lower_bound(a.begin(),a.end(),(a[i]+g)%mod));
			//cnt+=upper_bound(a.begin(),a.end(),(a[i]+(int)mod-g)%mod)-upper_bound(a.begin(),a.end(),(a[i]+(int)mod-g)%mod);
		}
		long long k = n-cnt;
		long long d = (1LL*g*inv(k,mod))%mod;
		set<long long> s;
		for(int i=0;i<n;i++) s.insert(a[i]);
		long long p = a[0];
		cnt = 0;
		while(s.find(p)!=s.end()){
			cnt++;
			s.erase(p);
			p+=d;
			p%=mod;
		}
		long long base = a[0];
		p = a[0]+mod-d;
		p%=mod;
		while(s.find(p)!=s.end()){
			cnt++;
			s.erase(p);
			base=p;
			p+=mod-d;
			p%=mod;
		}
		if(cnt==1LL*n){
			cout<<base<<" "<<d<<endl;
		}else{
			cout<<-1<<endl;
			return 0;
		}

	}else{
		vector<bool> h(mod,true);
		for(int i=0;i<n;i++) h[a[i]]=false;
		vector<long long> b = a;
		a.clear();
		for(int i=0;i<mod;i++) if(h[i]) a.push_back(1LL*i);

		int n = (int)a.size();
		if(n==1){
			cout<<a[0]+1<<" "<<1<<endl;
			return 0;
		}
		long long g = a[1]-a[0];
		long long cnt = 0;
		for(int i=0;i<n;i++){
			cnt+=1LL*(upper_bound(a.begin(),a.end(),(a[i]+g)%mod)-lower_bound(a.begin(),a.end(),(a[i]+g)%mod));
			//cnt+=upper_bound(a.begin(),a.end(),(a[i]+(int)mod-g)%mod)-upper_bound(a.begin(),a.end(),(a[i]+(int)mod-g)%mod);
		}
		long long k = n-cnt;
		long long d = (1LL*g*inv(k,mod))%mod;
		set<long long> s;
		for(int i=0;i<n;i++) s.insert(a[i]);
		long long p = a[0];
		cnt = 0;

		long long base = a[0];
		while(s.find(p)!=s.end()){
			cnt++;
			s.erase(p);
			p+=d;
			p%=mod;
			base = p;

		}
		p = a[0]+mod-d;
		p%=mod;
		while(s.find(p)!=s.end()){
			cnt++;
			s.erase(p);
			p+=mod-d;
			p%=mod;
		}
		if(cnt==1LL*n){
			cout<<base<<" "<<d<<endl;
		}else{
			cout<<-1<<endl;
			return 0;
		}

	}

	/*int totalcase;
	int testcase=0;
	cin>>totalcase;
	ofstream out;
	out.open("result.txt");

	while(totalcase--){
		testcase++;
		out<<"Case #"<<testcase<<": ";
		cout<<testcase<<": "<<endl;


		//GOGOGO


		//END
	}
	out.close();*/

	return 0;
}
