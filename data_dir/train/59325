#include <bits/stdc++.h>
using namespace std;
const int N = 222222;

int d[N], is[N], n, m, t, k, l, r;
vector<int>G[N];
queue<int> q;
int par[N];
set<pair<int, int> > s;

int main () {
    ios::sync_with_stdio(0), cin.tie(0);
    cin >> n;
    m = n - 1;
    for (int i = 0, v, u; i < n - 1; i++) {
    	cin >> v >> u;
    	G[v].push_back(u);
    	G[u].push_back(v);
    	d[v] = d[u] = 1e9;
	}	
	d[1] = 0;
	q.push(1);
	while (q.size()) {
		int v = q.front();
		q.pop();
		for (auto u : G[v]) {
			if (d[u] > d[v] + 1) {
				s.erase({d[u], u});
				d[u] = d[v] + 1;
				s.insert({d[u], u});
				q.push(u);
				par[u] = v;
			}
		}
	}
	q.push(1);
	int ans = 0;
	for (int i = 1; i <= n; i ++) s.insert({d[i], i});
	while ((*s.rbegin()).first > 2) {
		int v = (*(s.rbegin())).second;
		v = par[v];
		s.erase({d[v], v});
		d[v] = 1;
		for (auto u : G[v]) {
			if (d[u] > d[v] + 1) {
				s.erase({d[u], u});
				d[u] = d[v] + 1;
				s.insert({d[u], u});
				q.push(u);
				par[u] = v;
			}
		}
		ans ++;
	}
	cout << ans;
    return (0);
}
