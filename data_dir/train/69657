#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=4e5+5;
ll a[M];
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n;
	cin>>n;
	for(ll i=1;i<=n;i++)
		cin>>a[i];
	ll pp=0;
	ll ans=0;
	while(1)
	{
		ll x=(1<<pp);
		std::vector<ll> v[2];
		for(ll i=1;i<=n;i++)
		{
			if((a[i]&x))
				v[1].pb(a[i]%x);
			else
				v[0].pb(a[i]%x);
		}
		sort(all(v[0]));
		sort(all(v[1]));
		ll ct=0;
		ll j=sz(v[0])-1;
		for(ll i=0;i<sz(v[0]);i++)
		{
			if(j<i)
				j=i;
			ct+=sz(v[0])-1-j;
			while(j>i && v[0][i]+v[0][j]>=x)
			{
				ct++;
				j--;
			}
		}
		j=sz(v[1])-1;
		for(ll i=0;i<sz(v[1]);i++)
		{
			if(j<i)
				j=i;
			ct+=sz(v[1])-1-j;
			while(j>i && v[1][i]+v[1][j]>=x)
			{
				ct++;
				j--;
			}
		}
		j=0;
		if(sz(v[0]) && sz(v[1]))
		{
			for(ll i=sz(v[0])-1;i>=0;i--)
			{
				ct+=j;
				while(j<sz(v[1]) && v[0][i]+v[1][j]<x)
				{
					ct++;
					j++;
				}
			}
		}
		if(ct%2)
			ans+=x;
		if(x>(ll)1e7)
			break;
		pp++;
	}
	cout<<ans<<"\n";
	return 0;
}