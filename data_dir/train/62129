//#pragma GCC optimize ("Ofast")
//#pragma GCC optimize ("unroll-loops")
//#pragma GCC target("avx,avx2,fma")

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md (l + ((r - l) / 2))
#define all(x) x.begin(),x.end()
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;


using ll = long long;

//#define int ll


const int N = 5e3 + 11, mod = 1e9 + 7, mod2 = 998244353;
const int MAX = 1e5 + 11;
const int INF1 = 2e9 + 11;
const ll INF2 = 2e18 + 11;
const double INF3 = 1e8 + 11;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0, 1, 1, -1, -1};
const int dy[] = {0, 0, 1, -1, 1, -1, 1, -1};
const double EPS = 1e-4;
const double PI = acos(-1.0);


template<typename T> using ordered_set = tree <T, null_type, less <T>, rb_tree_tag, tree_order_statistics_node_update>;
template<typename T1, typename T2> inline void chmin(T1 &a, T2 b) { if (a > b) a = b; }
template<typename T1, typename T2> inline void chmax(T1 &a, T2 b) { if (a < b) a = b; }


typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef vector <int> vi;


mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int n, par[N], m, ans[N], tin[N], timer, tout[N], up[15][N], nom[N][N];
vi g[N];
pair <pii, int> q[N];
void dfs(int v, int pr = 0) {
    par[v] = pr;
    tin[v] = ++timer;
    up[0][v] = pr;
    fo(i, 1, 13, 1) up[i][v] = up[i - 1][up[i - 1][v]];
    for (int to : g[v]) if (to != pr) dfs(to, v);
    tout[v] = timer;
}
bool upper(int a, int b) {
    return (tin[a] <= tin[b] and tout[b] <= tout[a]);
}
int lca(int a, int b) {
    if (upper(a, b)) return a;
    if (upper(b, a)) return b;
    foo(i, 13, 0, 1) {
        if (!upper(up[i][a], b) and up[i][a]) a = up[i][a];
    }
    return up[0][a];
}
main() {
    file("threesum");
    ios;
    cin >> n;
    fo(i, 1, n - 1, 1) {
        int u, v;
        cin >> u >> v;
        g[u].pb(v);
        g[v].pb(u);
        nom[u][v] = nom[v][u] = i;
        ans[i] = 1;
    }
    cin >> m;
    fo(i, 1, m, 1) cin >> q[i].F.F >> q[i].F.S >> q[i].S;
    dfs(1);
    sort(q + 1, q + m + 1,
         [](pair <pii, int> a, pair <pii, int> b) {
                return a.S < b.S;
            });
    fo(i, 1, m, 1) {
        int a = q[i].F.F, b = q[i].F.S;
        int l = lca(a, b);
        while (a != l) {
            int no = nom[a][par[a]];
            chmax(ans[no], q[i].S);
            a = par[a];
        }
        while (b != l) {
            int no = nom[b][par[b]];
            chmax(ans[no], q[i].S);
            b = par[b];
        }
    }
    fo(i, 1, m, 1) {
        int a = q[i].F.F, b = q[i].F.S;
        int l = lca(a, b);
        int mn = 1e6;
        while (a != l) {
            int no = nom[a][par[a]];
            chmin(mn, ans[no]);
            a = par[a];
        }
        while (b != l) {
            int no = nom[b][par[b]];
            chmin(mn, ans[no]);
            b = par[b];
        }
        if (mn != q[i].S) return !(cout << -1);
    }
    fo(i, 1, n - 1, 1) cout << ans[i] << " ";
    cerr << "\nTime elapsed: " << (clock() + 0.0) / CLOCKS_PER_SEC;
    return 0;
}
/**

*/
