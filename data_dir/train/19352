#pragma comment(linker, "/STACK:268435456")

#include<iostream>
#include<cstdio>

#include<string>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<stack>

#include<iomanip>
#include<memory.h>
#include<algorithm>
#include<cstring>
#include<ctime>
#include<cmath>
#include<cassert>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); ++i)
#define for1(i, n) for(int i = 1; i < (int)(n); ++i)
#define forr(i, n) for(int i = int(n) - 1; i >= 0; --i)
#define fore(i, a, b) for(int i = int(a); i <= int(b); ++i)
#define correct(x, y, n, m) (0 <= x && x < n && 0 <= y && y < m)
#define X first
#define Y second
#define all(a) a.begin(), a.end()
#define pb push_back
#define mp make_pair
#define sz(v) (int)(v.size())
#define hash archash
#define next arcnext
#define link arclink
#define y0 arcy0
#define y1 arcy1
#define log2 arclog2

template<typename T> inline T abs(T a){ return ((a < 0) ? -a : a); }
template<typename T> inline T sqr(T a){ return a * a; }
template<class T> T gcd(T a, T b) { return a ? gcd (b % a, a) : b; }
template<class T> T lcm(T a, T b) { return a / gcd (a, b) * b; }
template<class T> T sign(T a) { return a > 0 ? 1 : (a < 0 ? -1 : 0); }

typedef long long li;
typedef unsigned long long uli;
typedef long double ld;
typedef pair <int, int> pt;
typedef vector <int> vi; 
typedef vector <vector <int> > vvi;
typedef vector <pair <int, int> > vpt; 

const int dx[] = {-1, 0, 1,  0};
const int dy[] = { 0, 1, 0, -1};
const int dxK[] = {-1, -1, 0, 1, 1,  1,  0, -1};
const int dyK[] = { 0,  1, 1, 1, 0, -1, -1, -1};
const int dxKn[] = {-2, -1, 1, 2,  2,  1, -1, -2};
const int dyKn[] = { 1,  2, 2, 1, -1, -2, -2, -1};

const int N = int(1e3);
const int M = int(3e3) + 9;
const int LOGN = 22;
const int SQN = 350;
const int MOD = int(1e9) + 7;
const int INF = 1e9 + 100;
const li INF64 = 2e18;
const ld PI = 3.1415926535897932384626433832795;
const ld EPS = 1e-9;

bool mat[N + 5][N + 5];
int num = 2;
int pos[N];

void precalc(){
	int lst = 0;
	for1(i, 31){///!!!!!!!!!!!!!!! 35
		mat[num][lst] = mat[lst][num] = true;
		mat[num + 1][lst] = mat[lst][num + 1] = true;
		mat[num + 2][num] = mat[num][num + 2] = true;
		mat[num + 2][num + 1] = mat[num + 1][num + 2] = true;		
		//cout << lst << ' ' << num << endl;cout << lst << ' ' << num + 1 << endl;cout << num + 2 << ' ' << num << endl;cout << num + 1<< ' ' << num + 2 << endl;
		num += 3;
		lst = num - 1;
		pos[i] = lst;
	}

}

void add(int cnt){

	int len = cnt * 2;
	int lst = pos[cnt];
	while(len < 59){/////////70
		mat[num][lst] = mat[lst][num] = true;
		//cout << num << ' ' << lst << endl;
		++num;
		lst = num - 1;
		++len;
	}
	//cout << 1 << ' ' << lst << endl;
	mat[1][lst] = mat[lst][1] = true;
}

void solve(){
	precalc();
	int n;
	scanf("%d", &n);
	for(li i = 35; i >= 0; --i)
		if(n >= (li(1) << i))
			add(i), n -= (li(1) << i);

	//cout << num << endl;
	printf("%d\n", N);
	forn(i, N){
		forn(j, N)
			if(mat[i][j])
				printf("Y");
			else
				printf("N");
		puts("");
	}
}

int main(){

   /// freopen("input.txt", "r", stdin);
   ///// freopen("output.txt", "w", stdout);

    srand(time(NULL));
    cout << setprecision(10) << fixed;
    cerr << setprecision(10) << fixed;   

    solve();

    return 0;
}