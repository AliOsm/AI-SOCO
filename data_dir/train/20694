using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (int i=a;i<b;i++)
#define FORE(i,a,b) for (int i=a;i<=b;i++)
#define FORD(i,a,b) for (int i=a;i>=b; i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

struct node{
    ll m,s;
    bool operator <(const node &op)const{
        return op.m>m;
    }
};

int n,fi,mid,la;
ll f[100000+10],d,ans,sum[100000+10];
node a[100000+10];

int main(){
 //   freopen("codeforces.inp", "r", stdin);
 //   freopen(".out", "w", stdout);
    cin >> n >> d;
    FORE(i,1,n) cin >> a[i].m >> a[i].s;
    sort(a+1,a+n+1);
    FORE(i,1,n) sum[i]=sum[i-1]+a[i].s;

    FORE(i,1,n){
        fi=i;
        la=n+1;
        while (fi+1<la){
            mid=(fi+la)/2;
            if (a[mid].m-a[i].m>=d) la=mid;
            else fi=mid;
        }
        ans=max(ans,sum[fi]-sum[i-1]);
    }
    cout << ans;
}
