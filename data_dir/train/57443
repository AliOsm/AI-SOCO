
//g++ -o A A.cpp

//g++ -Wl,--stack,16777216 -o A A.cpp


//#include <bits/stdc++.h>
//using namespace std;

#include <iostream>
using std::cin;
using std::cout;
using std::string;
using std::endl;

#include <algorithm> 
using std::sort;
using std::min;
using std::max;
using std::pair;
//pair <int,int> data[100];sort(data,data+100);

#include <math.h>
//sqrt(123.123)
//ceil(0.12)=1
//pow(x,2)=x^2

#include<cstdio>
//printf()

#include <map>
using std::map;
//map <string,int> x;

#include <stdlib.h>
//abs(-123);

#include <vector>
using std::vector;
//vector<int> x;
//x.push_back(0);x.push_back(1);cout<<x[0]<<' '<<x[1];
//x[0]=100;
//x.pop_back();
//vector<int> x(10);     ==>   x[0]==x[1]==...=x[9]==0 default
//x.push_back(100);      ==>   x[10]=100; 
//vector<int> x(10,3);   ==>   x[0]==x[1]==...==x[9]==3;
//vector<int> y(x);      ==>   y[0]==y[1]==...==y[9]==3;
//cout<<x.size();        ==>   10
//x.reserve(4)           ==>   (memory alloc 4) && !(size+=4 don't change size) 

#include <queue>
using std::queue;

#include <deque>
using std::deque;

/*
int gcd(long long a, long long b)
{ 
    //O(log(max(a,b)))
    int t;
    while(b!=0)
    {
        t=a%b;
        a=b;
        b=t;
    }
    return a;
}
*/



/*
long long C(int x,int y)
{
    if(x<y){
        return 0;
    }
    long long answer=1;
    int i;
    if(y>x-y)
    {
        y=x-y;
    }
    for(i=1;i<=y;i++)
    {
        answer*=(x+1-i);
        answer/=i;
    }
    return answer;
}
*/




/*
//C(x,y) % mod
long long C(long long x,long long y)
{
    long long mod=1000000007;
    if(x<y){
        return 0;
    }
    long long answer=1;
    int i;
    if(y>x-y)
    {
        y=x-y;
    }
    for(i=1;i<=y;i++)
    {
        answer*=(x+1-i);
        answer%=mod;
    }
    for(i=1;i<=y;i++)
    {
        while(answer%i!=0){
            answer+=mod;
        }
        answer/=i;
        answer%=mod;
    }
    return answer%mod;
}


for (i=0; i<1010; i++) {
    c[i][0]=1;
    for (j=1; j<=i; j++) c[i][j]=(c[i-1][j-1]+c[i-1][j])%md;
}
*/
int data[1002][1002]={0,};
int color[1002][1002]={0,};
int hod=1;
int numOfHod[1000001]={0,};

void dfs(int x,int y){
    color[x][y]=hod;
    numOfHod[hod]++;
    if(data[x+1][y]==1 && color[x+1][y]==0){dfs(x+1,y);}
    if(data[x][y+1]==1 && color[x][y+1]==0){dfs(x,y+1);}
    if(data[x-1][y]==1 && color[x-1][y]==0){dfs(x-1,y);}
    if(data[x][y-1]==1 && color[x][y-1]==0){dfs(x,y-1);}
}

int main(){
    int n,m;cin>>m>>n;
    
    char x;
    for(int i=1;i<=m;i++){
        for(int j=1;j<=n;j++){
            cin>>x;
            if(x=='.'){
                data[i][j]=1;
            }
        }
    }
    
    
     for(int i=1;i<=m;i++){
        for(int j=1;j<=n;j++){
            if(data[i][j]==1 && color[i][j]==0){
                dfs(i,j);
                hod++;
            }
        }
    }
    int answer;
    int sosedi[4]={0,};
    for(int i=1;i<=m;i++){
        for(int j=1;j<=n;j++){
            
            if(data[i][j]==1){
                printf("%c",'.');
            }else{
                answer=1;
                sosedi[0]=color[i+1][j];
                sosedi[1]=color[i-1][j];
                sosedi[2]=color[i][j+1];
                sosedi[3]=color[i][j-1];
                sort(sosedi,sosedi+4);
                
                if(sosedi[0]!=0){
                    answer+=numOfHod[sosedi[0]];
                }
                for(int k=1;k<4;k++){
                    if(sosedi[k]!=sosedi[k-1]){
                        answer+=numOfHod[sosedi[k]];
                    }
                }
                printf("%d",answer%10);
                

            }
        }
        printf("%c",'\n');
    }
    
    
    
    return 0;
}
