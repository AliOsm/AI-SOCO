#include <bits/stdc++.h>
using namespace std;

#define fastIO                   \
    ios::sync_with_stdio(false); \
    cin.tie(NULL);               \
    cout.tie(NULL);
#define asc(s) sort(s.begin(), s.end())
#define des(s) sort(s.rbegin(), s.rend())
#define pb(x) push_back(x)
#define mp(x, y) make_pair(x, y)
#define all(v) v.begin(), v.end()
#define rev(v) reverse(v.begin(), v.end())
#define lower(s) transform(s.begin(), s.end(), s.begin(), ::tolower);
#define upper(s) transform(s.begin(), s.end(), s.begin(), ::toupper);
#define precision(x, p) fixed << setprecision(p) << x
#define set_bits(n) __builtin_popcount(n);
#define mod 1000000007
#define PI 3.14159265358979
typedef long long ll;

#ifndef ONLINE_JUDGE
#define debug(x) cout << x << endl;
#else
#define debug(x)
#endif

template <class T>
T gcd(T a, T b)
{
    return b ? gcd(b, a % b) : a;
}
template <class T>
T lcm(T a, T b) { return a * b / gcd(a, b); };

vector<string> split(string s)
{
    istringstream buf(s);
    istream_iterator<string> beg(buf), end;
    vector<string> list(beg, end);
    return list;
}

bool isvowel(char c)
{
    string s = "aeiou";
    if (find(s.begin(), s.end(), c) != s.end())
        return true;
    return false;
}

bool cmp(pair<int, int> &a, pair<int, int> &b)
{
    return a.second > b.second || (a.second == b.second && a.first > b.first);
}

bool cmp_graph(vector<int> &v, vector<int> &w)
{
    return v.size() >= w.size();
}

void sieve(int n)
{
    int prime[1000005];
    for (int i = 2; i <= n; i++)
    {
        prime[i] = 1;
    }

    for (int i = 2; i * i <= n; i++)
    {
        if (prime[i])
            for (int j = i * 2; j <= n; j += i)
            {
                prime[j] = false;
            }
    }
}

bool equivalent(string s, string t)
{
    // cout << s << ' ' << t << endl;
    if(s.size()==0) return false;
    if(s==t) return true;
    if(s.size()==1 && s != t) return false;

    int n = s.size();

    if(n&1) return false;
    int half = n>>1;
    string s1 = s.substr(0,half);
    string s2 = s.substr(half);
    
    string t1 = t.substr(0,half);
    string t2 = t.substr(half);

    bool ans = equivalent(s1,t2) &&  equivalent(s2,t1);
    
    if(ans) return ans;

    else return (equivalent(s1,t1)  && equivalent(s2,t2) );
}


void solve()
{
    string s,t;
    cin >> s >> t;

    if(equivalent(s,t))
        cout << "YES";
    
    else 
        cout << "NO";

}


int main()
{
    fastIO
            cout
        << setprecision(20);

#ifndef ONLINE_JUDGE
    freopen("in.txt", "rt", stdin);
    freopen("out.txt", "wt", stdout);
#endif

    int t = 1;
    // cin>>t;

    for (int test_case = 1; test_case <= t; test_case++)
    {
        solve();
    }
    return 0;
}