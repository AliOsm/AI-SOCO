#pragma comment (linker, "/STACK:256000000")
 
#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>

//#include <random>
 
using namespace std;


double PI = 3.1415926535897932384626433832795;
double EPS = 1e-9;
 
typedef unsigned int uint32;
typedef long long int64;
typedef unsigned long long uint64;
 
typedef pair<int, int> pii;
const int MAXN = 100100;
const int ROOT = 333;

int n, h, k;
int64 ans = 0;

int mod = 1e9 + 7;

inline int mul(int64 a, int64 b)
{
	return (a * (int64) b) % mod;
}

inline int sum(int64 a, int64 b)
{
	
	return (a + b) % mod;
}

string st;

string alf = "";

int var[66];

void solve()
{
	cin >> st;
	
	for(int i = 0; i < 64; ++i)
	{
		for(int j = i; j < 64; ++j)
		{
			if (i == j)
				var[i & j]++;
			else
				var[i & j] += 2;
		}
	}
	for(int i = 0; i < 10; ++i)
		alf += '0' + i;
	for(int i = 0; i < 26; ++i)
		alf += 'A' + i;
	for(int i = 0; i < 26; ++i)
		alf += 'a' + i;
	alf += "-_";

	int ans = 1;
	for(int i = 0; i < st.size(); ++i)
	{
		int p = -1;
		for(int j = 0; j < alf.size(); ++j)
		{
			if (st[i] == alf[j])
			{
				p = j;
				break;
			}
		}
		
		ans = mul(ans, var[p]);
	}
	cout << ans;
}
 
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
    srand(1313);
	int t;
	solve();
		
    return 0;
}  