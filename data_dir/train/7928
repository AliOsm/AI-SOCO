#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define f(i, x, n) for(int i = x; i < (int)(n); ++i)

int const N = 500, M = 100000;
int n, m, bad, cl[N + 1], dp[N + 1];
vector<pair<int, int> > g[N + 1];
vector<int> B;

bool cy(int v){
	cl[v] = 1;
	f(i, 0, g[v].size()){
		int u = g[v][i].first;
		if (g[v][i].second == bad)continue;
		if (cl[u] == 1)return true;
		if (cl[u] == 0 && cy(u))return true;
	}
	cl[v] = 2;
	return false;
}

int ch(int v, int d = 0){
	cl[v] = 1;
	dp[v] = d;
	f(i, 0, g[v].size()){
		int u = g[v][i].first;
		if (cl[u] == 1) { B.push_back(g[v][i].second); return dp[u]; }
		if (cl[u] == 0){
			int t = ch(u, d + 1);
			if (t == -1)return -1;
			if (t <= d) { B.push_back(g[v][i].second); return t == d ? -1 : t; }
		}
	}
	cl[v] = 2;
	return d;
}

void pl() { f(i, 1, n + 1)cl[i] = 0; }

int main(){
	scanf("%d%d", &n, &m);
	f(i, 1, m + 1){
		int a, b;
		scanf("%d%d", &a, &b);
		g[a].push_back(make_pair(b, i));
	}
	f(i, 1, n + 1)if (cl[i] == 0 && ch(i) == -1)break;
	if (B.empty()) { printf("YES\n"); return 0; }
	f(i, 0, B.size()){
		bad = B[i];
		pl();
		bool ok = true;
		f(i, 1, n + 1)if (cl[i] == 0 && cy(i)) { ok = false; break; }
		if (ok) { printf("YES\n"); return 0; }
	}
	printf("NO\n");
}