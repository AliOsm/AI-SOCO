#include <iostream>
#include <algorithm>
#include <map>
#include <vector>
using namespace std;

bool comparer(pair<int, int> p1, pair<int, int> p2)
{
  return p1.second < p2.second;
}

int main()
{
#ifndef ONLINE_JUDGE
  freopen("input.txt", "rt", stdin);
  freopen("output.txt", "wt", stdout);
#endif
  int n;
  cin >> n;

  map<int, int> rCount;
  for(int i = 0; i < n; i++)
  {
    int r;
    cin >> r;
    rCount[r]++;
  }

  vector<pair<int, int> > heap;
  for(map<int, int>::iterator p = rCount.begin(); p != rCount.end(); p++)
    heap.push_back(make_pair(p->second, p->first));
  make_heap(heap.begin(), heap.end());

  vector<vector<int> > snowmens;
  while(heap.size() >= 3)
  {
    vector<pair<int, int> > cr(3);
    for(int i = 0; i < cr.size(); i++)
    {
      cr[i] = heap.front();
      pop_heap(heap.begin(), heap.end());
      heap.pop_back();
    }
    sort(cr.rbegin(), cr.rend(), comparer);

    snowmens.push_back(vector<int>(3));
    for(int i = 0; i < cr.size(); i++)
      snowmens[snowmens.size() - 1][i] = cr[i].second;

    for(int i = 0; i < cr.size(); i++)
    {
      cr[i].first--;
      if(cr[i].first > 0)
      {
        heap.push_back(cr[i]);
        push_heap(heap.begin(), heap.end());
      }
    }
  }

  cout << snowmens.size() << endl;
  for(int i = 0; i < snowmens.size(); i++)
  {
    for(int j = 0; j < snowmens[i].size(); j++)
      cout << snowmens[i][j] << ' ';
    cout << endl;
  }
  
  return 0;
}