#include <iostream>
#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <map>
#include <vector>
#include <cstring>
#include <iomanip>
#include <set>
#include <sstream>
#include <ctime>

#define rust(a, b, c, d) sqrt(sqr(a - c) + sqr(b - d))

#define sqr(a) (a)*(a)
#define m_p make_pair
#define fi first
#define se second
#define fast_io ios_base::sync_with_stdio(0);cin.tie(0)
#define endl "\n"

typedef long long ll;
const int MAXINT=2147483640;
const ll MAXLL=9223372036854775800LL;
const ll MAXN=2000005;

using namespace std;

ll a[MAXN];
ll sum[MAXN], cnt[MAXN];
ll f[MAXN];

int main()
{


    //freopen("input.txt","r",stdin);
   // freopen("output.txt","w",stdout);
    fast_io;

    ll n, i, j, x, y, N = 2e6 + 1, ans = MAXLL;

    cin >> n >> x >> y;
    ll p = x / y;
    for (i = 1; i <= n; ++i) {
        cin >> a[i];
        f[a[i]]++;
    }
    for (i = 1; i <= N; ++i) cnt[i] = cnt[i - 1] + f[i];
    for (i = 1; i <= N; ++i) sum[i] = sum[i - 1] + i * f[i];

    for (i = 2; i <= N; ++i) {
        ll res = 0;
        for (j = i; j <= N; j += i) {
            ll best = max(j - i + 1, j - p);
            res += (cnt[best - 1] - cnt[j - i]) * x;
            res += ((cnt[j] - cnt[best - 1]) * j - (sum[j] - sum[best - 1])) * y;
    }
    ans = min(ans, res);
    }
    cout << ans << endl;
    return 0;
}