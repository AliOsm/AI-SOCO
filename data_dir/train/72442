#include<bits/stdc++.h>
#define x first
#define y second
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ins insert
#define all(v) v.begin(),v.end()
#define sz(v) (int)v.size()
#define up_b upper_bound
#define low_b lower_bound
#define rep(i,a,b) for(ll i=a;i<=b;i++)
#define rev(i,a,b) for(int i=b;i>=a;i--)
#define boost ios_base::sync_with_stdio(NULL),cin.tie(NULL),cout.tie(NULL)
#define nl '\n'

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<ll,int> pli;
typedef pair<int,ll> pil;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<pii> vii;

const int N=200001;
const int MXN=1000001;

vi g[N],c[N];
int cur=0;
bool us[N];
int p[N],num[N];
int mx[N];

void dfs(int v){
  us[v]=1;
  num[v]=cur;
  mx[cur]=max(mx[cur],v);
  for(int i=0;i<sz(g[v]);i++){
    int to=g[v][i];
    if(us[to])continue;
    dfs(to);
  }
}

int get(int v){
  return p[v]==v?v:(p[v]=get(p[v]));
}

int ans=0;

int main(){
  boost;
  int n,m;
  cin>>n>>m;
  for(int i=1;i<=m;i++){
    int u,v;
    cin>>u>>v;
    g[u].pb(v);
    g[v].pb(u);
  }
  for(int i=1;i<=n;i++){
    if(!us[i]){
      cur++;
      dfs(i);
    }
  }
  for(int i=1;i<=cur;i++){
    p[i]=i;
  }
  for(int i=1;i<n;i++){
    int v=get(num[i]);
    if(mx[v]==i)continue;
    if(get(num[i+1])==v)continue;
    else{
      ans++;
      int u=get(num[i+1]);
      p[u]=v;
      mx[v]=max(mx[v],mx[u]);
    }
  }
  cout<<ans;
  return 0;
}
