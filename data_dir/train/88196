#include<bits/stdc++.h>
using namespace std;
#pragma comment(linker, "/stack:200000000")
#define mod 1000000007
#define ll long long int
#define inf ( ll  )( 1e9 + 10 )
#define mxs (int)( 1e6 + 10 )
//#define md  int mid = ( l + r )>>1;
//int dx[]={+1,-1,+0,+0};///Four Directions
//int dy[]={+0,+0,+1,-1};///Four directions
//int dx [] = {+1,-1,+0,+0,-1,-1,+1,+1};///Eight Directions
//int dy [] = {+0,+0,+1,-1,+1,-1,-1,+1};///Eight Directions
int ans, t, n, m, i, j, k, a, b, c, d, e, f, g;
string s, s2, s3, s4;
int ar [ mxs ] , pos [ mxs ] ;
void brainfuck();
bool checker();
int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    ios_base::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    brainfuck();
    return 0;
}
void brainfuck()
{
    memset( pos , -1, sizeof pos );
    cin>>n>>m;
    for ( i = 1 ; i <= m; i++ )cin>>ar [ i ];
    if ( checker() )cout<<"-1";
}
bool checker()
{
    for ( i = 1 ; i < m; i++ )
    {
        a = ar [ i + 1 ];
        b = ar [ i ];
        if ( a > b )
        {
            c = a - b;
            if ( pos [ b ] == c )continue;
            else if ( pos [ b ] == -1 )pos [ b ] = c;
            else return 1;
        }
        else if ( a < b )
        {
            c = n - b;
            c += a;
            if ( pos [ b ] == c )continue;
            else if ( pos [ b ] == -1 )pos [ b ] = c;
            else return 1;
        }
        else
        {
            if ( pos [ b ] == n )continue;
            else if ( pos [ b ] == -1 )pos [ b ] = n;
            else return 1;
        }
    }
    a = 0;
    set < int > st , st2;
    for ( i = 1 ; i <= n; i++ )
    {
        if ( pos [ i ] == -1 )
        {
            a++;
            c = i;
        }
        else st.insert( pos [ i ] );
    }
    b = st.size();

    for ( i = 1 ; i <= n; i++ )
    {
        if ( st.count( i ) == 0 )
        {
            st2.insert( i );
        }
    }
    if ( a != n - b )return 1;

    set < int >::iterator it;
    for ( i = 1 ; i <= n; i++ )
    {
        if ( pos [ i ] == -1 )
        {
            it = st2.begin();
            pos [ i ] = *it;
            st2.erase( *it );
        }
    }
    //cout<<a<<" "<<b<<endl;
    /*
    if ( a <= 1 && b >= n - 1 )
    {
        for ( i = 1 ; i <= n; i++ )
        {
            if ( st.count( i ) )continue;
            else
            {
                pos [ c ] = i;
                break;
            }
        }
    }
    else return 1;*/
    for ( i = 1 ; i <= n; i++ )cout<<pos [ i ]<<" ";
    return 0;
}
/*

6 8
2 5 4 2 5 4 2 5

*/
