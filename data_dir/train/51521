/*<<head>> {{{*/
#include <bits/stdc++.h>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <string>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
/*}}}*/                         // zr, zm
const int MOD = (int)1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = (int)1e6+7;

// ---------------------------------------- 变量 ---------------------------------------- //

int n;
vi e[N];
int dp[N], ans[N];

// ---------------------------------------- 函数 ---------------------------------------- //

inline int add(ll a, int b) { a %= MOD; if ((a += b) >= MOD) a -= MOD; return a; }
inline int mul(ll a, int b) { a %= MOD; if ((a *= b) >= MOD) a %= MOD; return a; }

void dfs_1(int u, int f) {
	dp[u] = 1;
	for (auto v : e[u]) if (v != f) {
		dfs_1(v, u);
		dp[u] = mul(dp[u], dp[v] + 1);
	}
	//dd(u); de(dp[u]);
}

int up[N];
void dfs_2(int u, int f) {
	if (u == 1) ans[u] = dp[u];
	else ans[u] = mul(dp[u], (up[f] + 1));
	//dd(u); de(ans[u]);
	vi L, R;
	L.resize(sz(e[u])+7); R.resize(sz(e[u])+7);
	L[0] = R[sz(e[u])+1] = 1;
	rep(i, 0, sz(e[u])) {
		int v = e[u][i];
		L[i+1] = mul(L[i], dp[v] + 1);
	}
	per(i, 0, sz(e[u])) {
		int v = e[u][i];
		R[i+1] = mul(R[i+2], dp[v] + 1);
	}
	rep(i, 0, sz(e[u])) {
		int v = e[u][i];
		up[u] = mul(mul(L[i], R[i+2]), u == 1 ? 1 : (up[f] + 1));
		//dd(u); de(up[u]);
		dfs_2(v, u);
	}
}

void Init() {
	rep(i, 0, n+1) e[i].clear();

	rep(i, 2, n+1) {
		int p; scanf("%d", &p);
		e[p].pb(i);
	}
}

int Solve() {
	dfs_1(1, 0);
	dfs_2(1, 0);
	rep(i, 1, n+1) printf("%d%c", ans[i], " \n"[i==n]);
	return 0;
}

// ---------------------------------------- main ---------------------------------------- //

int main ()
{
    //ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d", &n)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}