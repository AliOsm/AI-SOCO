#include <bits/stdc++.h>
using namespace std;
//#define int long long
#define ld long double
#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define all(x) (x).begin(), (x).end()
#define forn(i,n) for(int i=0;i<(n);i++)
#define for1(i,n) for(int i=1;i<(n);i++)
const int MOD = 1e9 + 7 ;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1;}return res%p;}
const int N=101;
int add(int a,int b)
{
      a+=b;
      if(a>=MOD) a-=MOD;
      return a;
}
int sub(int a,int b)
{
      a-=b;
      if(a<0) a+=MOD;
      return a;
}
int mul(int a,int b)
{     
      return ((long long)a*b)%MOD;
}
int n,l,m;
struct matrix{
      int a[N][N];

      matrix(){
            for(int i=0;i<m;i++)
                  for(int j=0;j<m;j++)
                        a[i][j]=(int)(i==j);
      }
      matrix operator * (const matrix &b) const{
            matrix r=matrix();
            for(int i=0;i<m;i++)
                  for(int j=0;j<m;j++){
                        r.a[i][j]=0;
                        for(int k=0;k<m;k++)
                              r.a[i][j]=add(r.a[i][j],mul(a[i][k],b.a[k][j]));
                  }
            return r;
      }

};
matrix matrix_expo(matrix A,int p)
{
      if(p==0) return matrix();
      if(p&1) return A*matrix_expo(A,p-1);
      return matrix_expo(A*A,p/2);
}

int32_t main(){
      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      #endif
      cin>>n>>l>>m;
      matrix A,B,C;
      for(int i=0;i<m;i++) for(int j=0;j<m;j++) A.a[i][j]=0,C.a[i][j]=0,B.a[i][j]=0;
      for(int i=0;i<n;i++)
      {
            int x;
            cin>>x;
            for(int j=0;j<m;j++)
            {
                  A.a[j][(j+x)%m]++;
            }
      }
      int w[n];
      for(int i=0;i<n;i++)
      {
            int x;
            cin>>x;
            w[i]=x;
            for(int j=0;j<m;j++)
            {
                  B.a[j][(j+x)%m]++;
            }
      }
      for(int i=0;i<n;i++)
      {
            int x;
            cin>>x;
            x+=w[i];
            for(int j=0;j<m;j++)
            {
                  C.a[j][(j+x)%m]++;
            }
      }
      //for(int i=0;i<N;i++) for(int j=0;j<N;j++) cout<<A.a[i][j]<<" ";
      matrix ans=A*matrix_expo(B,l-2)*C;
      cout<<ans.a[0][0]<<"\n";
}     

