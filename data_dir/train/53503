#include <bits/stdc++.h>

using namespace std;

int n, m, v[3002][3002], a, b, x, y, z, q[9000002];
unsigned long long bb[3002][3002];

int main()
{
  cin >> n >> m >> a >> b;
  cin >> q[0] >> x >> y >> z;
  for (int i = 1; i <= n * m; i++)
    q[i] = (1ll * q[i - 1]  * x + y) % z;
  for (int i = 1; i <= n; i++)
    for (int j = 1; j <= m; j++)
      v[i][j] = q[(i - 1) * m + j - 1];
  for (int i = 1; i <= n; i++) {
    deque<int>dq;
    for (int j = 1; j <= b; j++) {
      while (!dq.empty() && v[i][dq.back()] > v[i][j])
        dq.pop_back();
      dq.push_back(j);
    }
    bb[i][1] = v[i][dq.front()];
    for (int j = b + 1; j <= m; j++) {
      while (!dq.empty() && dq.front() < j - b + 1)
        dq.pop_front();
       while (!dq.empty() && v[i][dq.back()] > v[i][j])
        dq.pop_back();
      dq.push_back(j);
      bb[i][j - b + 1] = v[i][dq.front()];
    }
  }
  unsigned long long sum = 0;
  for (int i = 1; i <= m; i++) {
    deque<int>dq;
    for (int j = 1; j <= a; j++) {
      while (!dq.empty() && bb[dq.back()][i] > bb[j][i])
        dq.pop_back();
      dq.push_back(j);
    }
    sum += bb[dq.front()][i];
    for (int j = a + 1; j <= n; j++) {
      while (!dq.empty() && dq.front() < j - a + 1)
        dq.pop_front();
       while (!dq.empty() && bb[dq.back()][i] > bb[j][i])
        dq.pop_back();
      dq.push_back(j);
      sum += bb[dq.front()][i];
    }
  }
  cout << sum;
  return 0;
}
