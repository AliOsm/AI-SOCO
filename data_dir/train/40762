#include <iostream>
#include <bits/stdc++.h>
#define ll long long

using namespace std;

const ll Mod = 998244353;
ll n,a[100100],dp[100100][201][2],Pref[201][2];


//for(ll i = n-1; i>=0; i--)
//    {
//        for(ll j = 200 ; j>=1; j--)
//        {
//            for(ll k=0; k<=1; k++)
//            {
//                if(a[i] != -1 && !k && a[i] < j)   continue;
//                if(i == n - 1 && a[i] != -1 && a[i] > j)  continue;
//                ll Res = 0;
//                if(a[i] == -1)
//                {
//                    if(i == n - 1 && k)
//                        for(ll q = j ; q>=1; q--)  Res+=dp[i + 1][q][1],Res%=Mod;
//                    else if(i == n-1 && !k)
//                        Res+=dp[i + 1][j][1],Res%=Mod;
//                    else if(k)
//                        for(ll q = 1 ; q<=200 ; q++)  Res+=dp[i + 1][q][q > j || i == 0 ? 0 : 1],Res%=Mod;
//                    else
//                        for(ll q = j; q<=200; q++)  Res+=dp[i+1][q][q == j ? 1 : 0],Res%=Mod;
//                }
//                else   Res+=dp[i + 1][a[i]][a[i] > j ? 0 : 1],Res%=Mod;
//                dp[i][j][k]+=Res;
//            }
//        }
//    }

int main()
{
    cin >> n;
    for(ll i=0; i<n; i++)   cin >> a[i];
    for(ll i =1; i<=200; i++)
        for(ll k=0; k<2; k++)  dp[n][i][k] = 1, Pref[i][k] = 1 + Pref[i - 1][k];
    for(ll i = n-1; i>=0; i--)
    {
        for(ll j = 200 ; j>=1; j--)
        {
            for(ll k=0; k<=1; k++)
            {
                if(a[i] != -1 && !k && a[i] < j)   continue;
                if(i == n - 1 && a[i] != -1 && a[i] > j)  continue;
                ll Res = 0;
                if(a[i] == -1)
                {
                    if(i == n - 1 && k)
                        Res+=Pref[j][1];
                    else if(i == n-1 && !k)
                        Res+=dp[i + 1][j][1];
                    else if(k)
                    {
                        if(i == 0)  Res+=Pref[200][0];
                        else
                        {
                            Res+=Pref[200][0] - Pref[j][0] + Mod * 2;
                            Res+=Pref[j][1];
                        }
                    }
                    else
                    {
                        Res+=Pref[200][0] - Pref[j][0] + Mod * 2;
                        Res+=Pref[j][1] - Pref[j - 1][1] + Mod * 2;
                    }
                }
                else   Res+=dp[i + 1][a[i]][a[i] > j ? 0 : 1];
                dp[i][j][k]+=(Res % Mod);
            }
        }
        for(ll j=1; j<=200; j++)
            for(ll k=0; k<=1; k++)  Pref[j][k] = Pref[j - 1][k] + dp[i][j][k] + Mod * 2, Pref[j][k]%=Mod;
    }
    cout << dp[0][1][1];
    return 0;
}
