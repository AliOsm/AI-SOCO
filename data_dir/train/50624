#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define se second
#define fi first

typedef long long ll;
const long long INF = 1e9;
const long long MOD = 1e9 + 7;

int a[200010] , n;
ll dp[200010][2];
bool markf[200010] , marks[200010] , pendf[200010] , pends[200010];

void DFSf (int v);
void DFSs (int v);
int main(){
	
	cin >> n;
	for(int i = 2 ; i <= n ; i++)	cin >> a[i];
	for(int i = 2 ; i <= n ; i++){
		if(!markf[i])	DFSf(i);
	}
	
	for(int i = 2 ; i <= n ; i++){
		if(dp[i][0] == -1)	cout << "-1" << endl;
		else	cout << i - 1 + dp[i][0] << endl;
	}
	
	
}
void DFSf (int v){
	//cout << v << endl;
	pendf[v] = true;
	if(v - a[v] <= 0)	dp[v][0] = a[v];
	else if(pends[v - a[v]])	dp[v][0] = -1;
	else if(marks[v - a[v]]){
		dp[v][0] = dp[v - a[v]][1];
		if(dp[v][0] != -1)	dp[v][0] += a[v];
	}
	else{
		DFSs(v - a[v]);
		dp[v][0] = dp[v - a[v]][1];
		if(dp[v][0] != -1)	dp[v][0] += a[v];
	}
	
	markf[v] = true;
	pendf[v] = false;
}
void DFSs (int v){
	//cout << v << endl;
	pends[v] = true;
	if(v + a[v] > n)	dp[v][1] = a[v];
	else if(pendf[v + a[v]])	dp[v][1] = -1;
	else if(markf[v + a[v]]){
		dp[v][1] = dp[v + a[v]][0];
		if(dp[v][1] != -1)	dp[v][1] += a[v];
	}
	else{
		DFSf(v + a[v]);
		dp[v][1] = dp[v + a[v]][0];
		if(dp[v][1] != -1)	dp[v][1] += a[v];
	}
	
	marks[v] = true;
	pends[v] = false;
}