#include <bits/stdc++.h>
#define base 1000000007LL
#define ll long long
#define X first
#define Y second
#define pb push_back
#define EPS 1e-9
#define all(a) (a).begin(), (a).end()
#define sz(a) int((a).size())
#define ms(s, n) memset(s, n, sizeof(s))
#define FOR(i,a,b) for (int i = (a); i <= (b); i++)
#define FORE(i,a,b) for (int i = (a); i >= (b); i--)
#define FORALL(it, a) for (__typeof((a).begin()) it = (a).begin(); it != (a).end(); it++)
using namespace std;
typedef pair<int, int> II;
typedef pair<int, II> III;

double PI = acos(-1);

struct point {
    ll x, y;
    point(ll x = 0, ll y = 0) {
        this->x = x;
        this->y = y;
    }
    bool operator== (point& p) {
        return p.x == x && p.y == y;
    }
} a[100010], origin;

struct vecto {
    ll x, y;
    vecto(ll x = 0, ll y = 0) {
        this->x = x;
        this->y = y;
    }
};

vecto toVec(point a, point b)
{
    return vecto(b.x - a.x, b.y - a.y);
}

ll crossProduct(vecto a, vecto b)
{
    return a.x * b.y - a.y * b.x;
}

ll dotProduct(vecto a, vecto b)
{
    return a.x * b.x + a.y * b.y;
}

ll dist(point a, point b)
{
    return (a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y);
}

int main()
{
    //int t = 0;
    ios::sync_with_stdio(0);
    //freopen("inp.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    int n;
    cin >> n;
    FOR(i,0,n-1) cin >> a[i].x >> a[i].y;
    double res = 1e15;
    FOR(i,0,n-1) {
        int prev = (i-1+n)%n;
        int next = (i+1) % n;
        if (dotProduct(toVec(a[prev], a[next]), toVec(a[next], a[i])) >= 0) res = min(res, sqrt(dist(a[i], a[next])));
        else if (dotProduct(toVec(a[next], a[prev]), toVec(a[prev], a[i])) >= 0) res = min(res, sqrt(dist(a[i], a[prev])));
        else res = min(res, crossProduct(toVec(a[prev], a[next]), toVec(a[prev], a[i])) / sqrt(dist(a[prev], a[next])));
    }
    cout << fixed << setprecision(9) << res/2;
    return 0;
}
