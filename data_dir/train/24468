#include<bits/stdc++.h>
#include <iostream>
#include<string>
#include<cmath>
#include<algorithm>
#include<vector>
#include<stdio.h>
#include<stack>
using namespace std;
typedef vector<int> vi; 
typedef vector<vi> vvi;
typedef pair<int,int> ii;
#define ll long long
#define rep(i,a,b) for(long long i=a;i<b;i+=1)
#define rrep(i,a,b) for(int i=a;i>b;i-=1)
#define vi vector<int>
#define vii vector<vector<int> >
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mp make_pair
void solve()
{
    int n,q;
    cin>>n>>q;
    queue< pair<int,int> > qu;
    vector< queue<int> > e(n+5);
    int i=1,a,b,u=0;
    bool visited[q+5];
    fill(visited,visited+q+1,false);
    while(q--)
    {
    	scanf("%d%d",&a,&b);
    	if(a==1)
    	{
    		e[b].push(i);
    		qu.push(mp(i,b));
    		u++;
    		i++;
		}
		if(a==2)
		{
			while(!e[b].empty())
			{
				int x,y;
				x=e[b].front();
				visited[x]=true;
				e[b].pop();
				u--;
			}
		}
		if(a==3)
		{
			while(!qu.empty() && qu.front().first<=b)
			{
				int x=(qu.front()).first;
				if(!visited[x])
				{
                    u--;
                    visited[x]=true;
                    e[qu.front().second].pop();
                }
				qu.pop();
			}
		}
		printf("%d\n",u);
	}
}
int main()
{
    /*ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);*/
    int t=1;
    //cin>>t;
    while(t--)
        solve();
    return 0;
}