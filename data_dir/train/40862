#include<bits/stdc++.h>
#define lf double
#define ll long long
#define cc pair<char,char>
#define ull unsigned ll
#define ii pair<int,int>
#define li pair<ll,int>
#define iii pair<int,ii>
#define iiii pair<ii,ii>
#define iiii2 pair<int,iii>
#define lii pair<ll,ii>
#define lolo pair<ll,ll>
#define heap priority_queue
#define mp make_pair
#define st first
#define nd second
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define all(x) x.begin(),x.end()
#define len(x) strlen(x)
#define sz(x) (int) x.size()
#define orta ((bas+son)/2)
#define min3(x,y,z) min(min(x,y),z)
#define max3(x,y,z) max(max(x,y),z)
#define dbgs(x) cerr<<(#x)<<" --> "<<(x)<<" "
#define dbg(x) cerr<<(#x)<<" --> "<<(x)<<endl;getchar()
#define MOD 1000000007
#define inf 1050000000
#define N 300005
#define LOG 20
#define magic 100
#define KOK 250
#define EPS 0.0025
#define pw(x) (1<<(x))
#define PI 3.1415926535
using namespace std;

int n,m,x,y,vx,vy;

void rotate() {

	while(vx!=1 || vy!=1) {

		if(vx==1 && vy==-1) {

			if(n-x<y) {

				y=y-n+x;
				x=n;
				vx=-1;
				vy=-1;

			}
			else if(y<n-x) {

				x=x+y;
				y=0;
				vx=1;
				vy=1;

			}
			else {

				printf("%d 0",n);
				exit(0);

			}

		}
		else if(vx==-1 && vy==-1) {

			if(x<y) {

				y=y-x;
				x=0;
				vx=1;
				vy=-1;

			}
			else if(y<x) {

				x=x-y;
				y=0;
				vx=-1;
				vy=1;

			}
			else {

				printf("0 0");
				exit(0);

			}

		}
		else {

			if(x<m-y) {

				y=y+x;
				x=0;
				vx=1;
				vy=1;

			}
			else if(m-y<x) {

				x=x-m+y;
				y=m;
				vx=-1;
				vy=-1;

			}
			else {

				printf("0 %d",m);

				exit(0);

			}

		}

	}

}

lolo exgcd(int x,int y) {

	lolo now={1,-x/y};

	if(x%y==0) return {1,-x/y+1};

	if(y%(x%y)==0) return now;

	lolo res=exgcd(y,x%y);

	return {1ll*now.st*res.nd,1ll*res.st+1ll*now.nd*res.nd};

}

int main() {

//	freopen("input.txt","r",stdin);
 	
 	scanf("%d %d %d %d %d %d",&n,&m,&x,&y,&vx,&vy);

 	if(vx==0) {

 		if(x==0 || x==n) {

 			if(vy==-1) printf("%d %d",x,0);
 			else printf("%d %d",x,m);

 		}
 		else {

 			printf("-1");

 		}

 		return 0;

 	}

 	if(vy==0) {

 		if(y==0 || y==m) {

 			if(vx==-1) printf("%d %d",0,y);
 			else printf("%d %d",n,y);

 		}
 		else {

 			printf("-1");

 		}

 		return 0;

 	}

 	rotate();

 	if((x-y)%(__gcd(n,m))!=0) {

 		printf("-1");

 		return 0;

 	}

 	lolo res;

 	if(x==y) {

 		res.st=m;
 		res.nd=-n;

 	}
 	else {

	 	res=exgcd(max(n,m),min(n,m));

	 	if(m>n) swap(res.st,res.nd);

	 	res.st*=(x-y)/(__gcd(n,m));

	 	res.nd*=(x-y)/(__gcd(n,m));

 	}

 	if(res.st>0) {

 		ll dv=(res.st+(m/__gcd(n,m))-1)/(m/__gcd(n,m));

 		res.st-=dv*(m/__gcd(n,m));

 		res.nd+=dv*(n/__gcd(n,m));

 	}

 	ll dv=abs(res.st)/(m/__gcd(n,m))+1;

 	res.st+=dv*(m/__gcd(n,m));

 	res.nd-=dv*(n/__gcd(n,m));

 	res.nd=-res.nd;

 	if(res.st%2==1 && res.nd%2==1) {

 		printf("%d %d",n,m);

 	}
 	else if(res.st%2==1 && res.nd%2==0) {

 		printf("%d 0",n);

 	}
 	else if(res.st%2==0 && res.nd%2==1) {

 		printf("0 %d",m);

 	}
 	else {

 		printf("0 0");

 	}

}