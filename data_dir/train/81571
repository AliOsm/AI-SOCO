#include <bits/stdc++.h>
#define cerr if (false) cerr

using namespace std;

typedef long long ll;

ll n;
string s;
set<int> d, r, banned;
int voter = 0;

int main() {
    cin >> n >> s;
    for (int i = 0; i < n; i++) {
        if (s[i] == 'D')
            d.insert(i);
        else
            r.insert(i);
    }

    while(d.size() && r.size()) {
        if (banned.find(voter) != banned.end()) {
            cerr << "VOTER " << voter << " banned, continuing" << endl;
            voter = (voter + 1) % n;
            continue;
        }
        if (s[voter] == 'D') {
            auto rightr = r.lower_bound(voter);
            if (rightr != r.end()) {
                banned.insert(*rightr);
                r.erase(rightr);
            } else {
                banned.insert(*r.begin());
                r.erase(r.begin());
            }
        } else {
            auto rightd = d.lower_bound(voter);
            if (rightd != d.end()) {
                banned.insert(*rightd);
                d.erase(rightd);
            } else {
                banned.insert(*d.begin());
                d.erase(d.begin());
            }
        }
        voter = (voter + 1) % n;
        /*auto dvoter = d.lower_bound(voter);
        auto rvoter = r.lower_bound(voter);

        if (dvoter != d.end() && rvoter != d.end()) {
            cerr << "D AND R: " << *dvoter << ' ' << *rvoter << endl;
            if (*dvoter < *rvoter) {
                banned.insert(*rvoter);
                r.erase(rvoter);
            } else {
                banned.insert(*dvoter);
                d.erase(dvoter);
            }
        } else {
            if (dvoter != d.end()) {
                cerr << "D " << *dvoter << endl;
                banned.insert(*r.begin());
                r.erase(r.begin());
            }
            if (rvoter != r.end()) {
                cerr << "R " << *rvoter << endl;
                banned.insert(*d.begin());
                d.erase(d.begin());
            }
        }*/
    }

    if (d.size()) {
        cout << "D" << endl;
    } else {
        cout << "R" << endl;
    }
}
