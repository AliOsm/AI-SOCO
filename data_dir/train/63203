#include <bits/stdc++.h>
using namespace std;
#define sc(a)           scanf("%d", &a)
#define sc2(a, b)       scanf("%d%d", &a, &b)
#define sc3(a, b, c)    scanf("%d%d%d", &a, &b, &c)
#define pr(args...) { vector<string> _v = split(#args, ','); err(_v.begin(), args); puts("");}
vector<string> split(const string& s, char c) {
	vector<string> v;
	stringstream ss(s);
	string x;
	while (getline(ss, x, c))
		v.emplace_back(x);
	return move(v);
}
void err(vector<string>::iterator it) {}
template<typename T, typename... Args>
void err(vector<string>::iterator it, T a, Args... args) {
	cerr << a << ' ';
	err(++it, args...);
}
#define MP              make_pair
#define pb              push_back
#define mem(a, b)       memset((a), (b), sizeof(a))
#define x first
#define y second
typedef pair<int , int > pii;
typedef map<int , int > mii;
typedef vector<int > vi;
typedef long long LL;
static constexpr int inf = std::numeric_limits<int >::max();
const int MAX=100100;
struct data {
    int cost;
    string name;
    data(int a, string b)
    {
        cost=a;
        name=b;
    }
    bool operator < (const data &d) const{return cost>d.cost;}
};
vector<data>A[MAX];
int main()
{
  //  freopen("input.txt", "r", stdin);
    int n, m, i, j, k, temp;
    string t;

    sc2(n, m);
    while (n--)
    {
        cin>>t;
        sc2(j, k);
        A[j].pb(data(k, t));
    }
    for (i=1; i<=m; i++) sort(A[i].begin(), A[i].end());

    for (i=1; i<=m; i++)
    {
        if (A[i].size()==2||A[i][1].cost!=A[i][2].cost)
        {
            cout<<A[i][0].name<<" "<<A[i][1].name<<endl;
        }
        else cout<<"?"<<endl;
    }


return 0;
}