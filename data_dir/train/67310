#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <functional>
#include <algorithm>
#include <cassert>
#include <cstring>
#include <queue>
#include <cstdio>
#include <cmath>
#include <sstream>
#include <bitset>
 
using namespace std;
 
typedef long long Long;
typedef vector<int> VI;
typedef vector<VI> VVI;
 
#define MOD 1000000009
#define PRIME 31LL
#define mul(a, b) (((a) * 1LL * (b)) % MOD)
#define add(a, b) (((a) + (b)) % MOD)
#define sub(a, b) (a > b ? (a-b) % MOD : (a-b+MOD) % MOD)
struct Hashes {
    VVI PH;
    VI PO;
    VVI NEXT;
#define append(h, x) ((PRIME * (h) + (x)) % MOD)
    Hashes(string s) : PH(26, VI(s.size())), PO(s.size(), 1), NEXT(26, VI(s.size(), -1)) {
        for (int i = 1; i < s.size(); ++i) {
            PO[i] = mul(PO[i-1], PRIME);
        }
        for (int i = 0; i < 26; ++i) {
            int h = 0;
            for (int j = 0; j < s.size(); ++j) {
                h = append(h, s[j] == i + 'a');
                PH[i][j] = h;
            }
            int last = -1;
            for (int j = s.size() - 1; j >= 0; --j) {
                if (s[j] == i + 'a') {
                    last = j;
                }
                NEXT[i][j] = last;
            }
        }
    }
    int query(int c, int i, int j) {
        if (i == 0) return PH[c][j];
        return sub(PH[c][j], mul(PH[c][i-1], PO[j-i+1]));
    }
    int query(int i, int j) {
        vector<int> IDS;
        for (int c = 0; c < 26; ++c) {
            if (NEXT[c][i] == -1 || NEXT[c][i] > j) continue;
            IDS.push_back(c);
        }
        sort(IDS.begin(), IDS.end(), [&](int a, int b) { return NEXT[a][i] < NEXT[b][i]; });
        int tot = 0;
        for (int c = 0; c < IDS.size(); ++c) {
            tot = add(tot, mul(query(IDS[c], i, j), c+1));
        }
        return tot;
    }
};
 
int main(int argc, char *argv[]) {
 
    int N, M;
    cin >> N >> M;
    string S = "abcd";
    cin >> S;
    Hashes H(S);
    for (int i = 0; i < M; ++i) {
        int x, y, l;
        scanf("%d%d%d", &x, &y, &l);
        x--;y--;
        puts((H.query(x, x+l-1) == H.query(y, y+l-1) ? "YES": "NO"));
    }
 
 
}
 
/*
 
 
7 4
abacaba
1 1 1
1 4 2
2 1 3
2 4 3
 
 */