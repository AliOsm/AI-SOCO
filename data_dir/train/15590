#include <bits/stdc++.h>
using namespace std;

int n, m;

char buff[505];
string grid[505];

bool check(int i, int j) {
	return grid[i][j] == '*' && grid[i - 1][j] == '*' && grid[i + 1][j] == '*' && grid[i][j - 1] == '*' && grid[i][j + 1] == '*';
}

void hapus(int x, int y) {
	grid[x][y] = '.';
	for (int i = x - 1; i >= 0; i--) {
		if (grid[i][y] == '.') break;
		grid[i][y] = '.';
	}

	for (int i = x + 1; i < n; i++) {
		if (grid[i][y] == '.') break;
		grid[i][y] = '.';
	}

	for (int j = y - 1; j >= 0; j--) {
		if (grid[x][j] == '.') break;
		grid[x][j] = '.';
	}

	for (int j = y + 1; j < m; j++) {
		if (grid[x][j] == '.') break;
		grid[x][j] = '.';
	}
}

int main() {
	scanf("%d %d", &n, &m);
	for (int i = 0; i < n; i++) {
		scanf(" %s", buff);
		grid[i] = buff;
	}

	bool ok = 0;
	for (int i = 1; i < n - 1 && !ok; i++) {
		for (int j = 1; j < m - 1 && !ok; j++) {
			if (check(i, j)) {
				ok = 1;
				hapus(i, j);
			}
		}
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (grid[i][j] == '*') {
				ok = 0;
				break;
			}
		}
	}

	printf("%s\n", ok ? "YES" : "NO");

	return 0;
}