#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 200200;
char s[N] , tmp[N];
int n ;
vector< pair<int,int> >v[33];
vector<int>vec;
vector<string>out;
string a[N];

bool vis[N];

void dfs(int u){
    vis[u]=1;
    vec.push_back(u);
    int len = a[u].length();
    for(int i=0;i<len;i++)
        for(auto p:v[ a[u][i]-'a' ])
            if( !vis[p.first] )
                dfs(p.first);
}

int main(){
memset(s,' ',sizeof s);

scanf("%d",&n);
for(int i=0;i<n;i++){
    bool used[33]={0};
    scanf("%s",tmp);
    int m = strlen(tmp);
    for(int j=0;j<m;j++){
        if( used[ tmp[j]-'a' ] ){
            printf("NO\n");
            return 0;
        }
        used[ tmp[j]-'a' ]=1;
        v[ tmp[j]-'a' ].push_back( {i,j} );
    }
    a[i]=(string)(tmp);
}

int pos[111],shift=1<<12;
for(int i=0;i<n;i++)
if( !vis[i] ){
    vec.clear();
    dfs(i);
    int mn=shift,mx=shift;

    memset(pos,-1,sizeof pos);

    pos[ a[ vec[0] ][ 0 ]-'a' ]=shift;

    for(auto u:vec){
        int len = a[u].length();
        int A=-1;
        for(int j=0;j<len;j++){
            int c = a[u][j]-'a';
            if( pos[c]!=-1 ){
                if( A==-1 )A=pos[c]-j;
                else
                if( A!=pos[c]-j){
                    printf("NO\n");
                    return 0;
                }
            }
        }

        if( A<0 )continue;
        for(int j=A;j<len+A;j++){

            if( s[j] !=' ' && s[j] != a[u][j-A] ){
                printf("NO\n");
                return 0;
            }

            s[ j ]=a[u][j-A];
            pos[ s[j]-'a' ]=j;
            mn=min(mn,j);
            mx=max(mx,j);
        }
    }
    if( mn >mx )break;
    string t="";
    for(int p=mn;p<=mx;p++)t+=s[p];
    for(int p=mn;p<=mx;p++)s[p]=' ';
    out.push_back(t);
}

sort(out.begin(),out.end());
for(auto t:out)printf("%s",t.c_str());printf("\n");
return 0;
}

