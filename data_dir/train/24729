#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <set>
#include <string>
#include <vector>

using namespace std;

const int MaxN = 102, NA = -1, MaxC = 0x3F3F3F3F;

int a [MaxN] [MaxN];
int m, n;

int main (void)
{
 int i, j, k, l;
 while (scanf (" %d %d", &n, &m) != EOF)
 {
  if (n == 1 && m == 1)
   printf ("1\n");
  else if (n == 1 && m == 4)
   printf ("2 4 1 3\n");
  else if (n == 4 && m == 1)
   printf ("2\n4\n1\n3\n");
  else if (m * n <= 4)
   printf ("-1\n");
  else if (m > 2)
  {
   k = 1;
   l = 1;
   for (i = 0; i < n; i++)
    for (j = 0; j < m; j++)
    {
     l ^= 1;
     if (l)
      a[i][j] = k++;
    }
   l = 0;
   for (i = 0; i < n; i++)
    for (j = 0; j < m; j++)
    {
     l ^= 1;
     if (l)
      a[i][j] = k++;
    }
   for (i = 0; i < n; i++)
    for (j = 0; j < m; j++)
    {
     if (i + 1 < n && abs (a[i][j] - a[i + 1][j]) == 1)
      assert (false);
     if (j + 1 < m && abs (a[i][j] - a[i][j + 1]) == 1)
      assert (false);
    }
   for (i = 0; i < n; i++)
    for (j = 0; j < m; j++)
     printf ("%d%c", a[i][j], j + 1 < m ? ' ' : '\n');
  }
  else
  {
   k = 1;
   l = 1;
   for (j = 0; j < m; j++)
    for (i = 0; i < n; i++)
    {
     l ^= 1;
     if (l)
      a[i][j] = k++;
    }
   l = 0;
   for (j = 0; j < m; j++)
    for (i = 0; i < n; i++)
    {
     l ^= 1;
     if (l)
      a[i][j] = k++;
    }
   for (i = 0; i < n; i++)
    for (j = 0; j < m; j++)
    {
     if (i + 1 < n && abs (a[i][j] - a[i + 1][j]) == 1)
      assert (false);
     if (j + 1 < m && abs (a[i][j] - a[i][j + 1]) == 1)
      assert (false);
    }
   for (i = 0; i < n; i++)
    for (j = 0; j < m; j++)
     printf ("%d%c", a[i][j], j + 1 < m ? ' ' : '\n');
  }
  fflush (stdout);
 }
 return 0;
}
