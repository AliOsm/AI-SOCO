#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const ll N=300011;
const ll mod=998244353;
void snum(ll &a){scanf("%lld",&a);}
void snum(ll &a, ll &b){scanf("%lld %lld",&a,&b);}
void snum(ll &a, ll &b, ll &c){scanf("%lld %lld %lld",&a,&b,&c);}
void snum(ll &a, ll &b, ll &c, ll &d){scanf("%lld %lld %lld %lld",&a,&b,&c,&d);}

vector<ll> adj[N];
ll col[N];
bool ok=true;
ll con1,con2;

void dfs(ll u, ll c){
	col[u]=c;
	if(c==1){
		con1++;
	}else{
		con2++;
	}
	ll sz=adj[u].size();
	for(ll i=0; i<sz; i++){
		ll v=adj[u][i];
		if(col[v]==0){
			dfs(v,c%2+1);
		}else{
			if(col[u]==col[v]){
				ok=false;
			}
		}
	}
	return;
}

void limpia(ll n){
	for(ll i=0; i<=n; i++){
		adj[i].clear();
		col[i]=0;
	}
	return;
}

ll fp(ll a, ll b){
	if(b==0) return 1;
	if(b==1) return a;
	ll t=fp(a,b/2);
	t=(t*t)%mod;
	if(b%2==1) return (t*a)%mod;
	return t;
}

void solve(){
	ll n,m;
	snum(n,m);
	limpia(n);
	ll x,y;
	for(ll i=0; i<m; i++){
		snum(x,y);
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	bool aux=true;
	ll ans=1;
	for(ll i=1; i<=n; i++){
		con1=0;
		con2=0;
		if(col[i]==0){
			ll ac=0;
			ok=true;
			dfs(i,1);
			if(ok){
				ac+=fp(2,con1);
				ac+=fp(2,con2);
			}
			ans*=ac;
			ans%=mod;
			aux=(aux&ok);
		}
	}
	if(aux){
		printf("%lld\n",ans);
	}else{
		printf("0\n");
	}
	return;
}

int main(){
	ll t;
	snum(t);
	while(t--){
		solve();
	}
	return 0;
}

