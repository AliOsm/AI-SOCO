#include<bits/stdc++.h>
using namespace std;

#define scl(x) scanf("%lld",&x)
#define sc(x)  scanf("%d",&x)
#define ll long long
#define lop(i,n) for(int i=0;i<n;++i)
typedef pair<int, int> ii;
typedef pair<ll, ll> pll;


const int N=48e5+100;

vector<int> uncom;
int com(int v){
	return lower_bound(uncom.begin(),uncom.end(),v)-uncom.begin();
}
int l[N],r[N],n;
int cov[N],cnt[N];
void addRange(int idx,int s,int e,int l,int r,int v){
	if(e<l||s>r)return;
	if(l<=s&&e<=r){
		cov[idx]+=v;
		return;
	}
	int L=(idx<<1)|1,R=L+1,m=s+((e-s)>>1);
	addRange(L,s,m,l,r,v);
	addRange(R,m+1,e,l,r,v);
	cnt[idx]=(cov[L]? m-s+1:cnt[L]) + (cov[R]? e-(m+1)+1:cnt[R]);
}
int main(){
#ifndef ONLINE_JUDGE
	freopen("i.txt","r",stdin);
#endif
	sc(n);
	lop(i,n){
		sc(l[i]);
		sc(r[i]);
		uncom.push_back(l[i]-1);
		uncom.push_back(l[i]);
		uncom.push_back(l[i]+1);
		uncom.push_back(r[i]-1);
		uncom.push_back(r[i]);
		uncom.push_back(r[i]+1);
	}
	sort(uncom.begin(),uncom.end());
	uncom.erase(unique(uncom.begin(),uncom.end()),uncom.end());
	lop(i,n){
		addRange(0,0,uncom.size()-1,com(l[i]),com(r[i]),1);
	}
	lop(i,n){
		int ocnt=(cov[0] ? uncom.size():cnt[0]);
		addRange(0,0,uncom.size()-1,com(l[i]),com(r[i]),-1);
		if((cov[0] ? uncom.size():cnt[0])==ocnt){
			cout<<i+1<<endl;
			return 0;
		}
		addRange(0,0,uncom.size()-1,com(l[i]),com(r[i]),1);
	}
	cout<<-1<<endl;
}
