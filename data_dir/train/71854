#ifdef DEBUG
#define _GLIBCXX_DEBUG
#endif

#include <bits/stdc++.h>

using namespace std;

mt19937 mrand(random_device{} ()); 

int rnd(int x) {
  return mrand() % x;
}

typedef long double ld;
typedef long long ll;

#ifdef DEBUG
#define eprintf(...) fprintf(stderr, __VA_ARGS__), fflush(stderr)
#else
#define eprintf(...) ;
#endif

#define pb push_back
#define mp make_pair
#define sz(x) ((int) (x).size())
#define TASK "text"

const int inf = (int) 1.01e9;
const ld eps = 1e-9;
const ld pi = acos((ld) -1.0);

const int mod = (int) 1e9 + 7;

void add(int &x, int y) {
  if ((x += y) >= mod) {
    x -= mod;
  }
}

int mult(int x, int y) {
  return (long long) x * y % mod;
}

int myPower(int x, int pw) {
  int res = 1;
  for (; pw; pw >>= 1) {
    if (pw & 1) {
      res = mult(res, x);
    }
    x = mult(x, x);
  }
  return res;
}

void precalc() {
}


const int maxn = (int) 1e3 + 10;
char s[maxn], q[maxn];

int read() {
  if (scanf("%s%s", s, q) < 2) {
    return 0;
  }
  return 1;
}

const int maxc = 26;
int perm[maxc];

void solve() {
  int n = (int) strlen(s);
  for (int i = 0; i < maxc; ++i) {
    perm[i] = -1;
  }
  for (int i = 0; i < n; ++i) {
    int a = s[i] - 'a', b = q[i] - 'a';
    if (perm[a] != -1 && perm[a] != b) {
      printf("-1\n");
      return;
    }
    if (perm[b] != -1 && perm[b] != a) {
      printf("-1\n");
      return;
    }
    perm[a] = b, perm[b] = a;
  }
  vector<pair<int, int> > ans;
  for (int i = 0; i < maxc; ++i) {
    if (perm[i] > i) {
      ans.pb(mp(i, perm[i]));
    }
  }
  printf("%d\n", sz(ans));
  for (int i = 0; i < sz(ans); ++i) {
    printf("%c %c\n", ans[i].first + 'a', ans[i].second + 'a');
  }
}

int main() {
  precalc();
#ifdef LOCAL
  freopen(TASK ".out", "w", stdout);
  assert(freopen(TASK ".in", "r", stdin));
#endif

  while (1) {
    if (!read()) {
      break;
    }
    solve();
#ifdef DEBUG
    eprintf("Time %.2f\n", (double) clock() / CLOCKS_PER_SEC);
#endif
  }
  return 0;
}
