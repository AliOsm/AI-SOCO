#include <bits/stdtr1c++.h>
using namespace std;
const int maxn = 3e5;

int n, k;
struct pii {
	int a;
	int i;
	friend int operator<(const pii &a, const pii &b) {
		if (a.a != b.a)
			return a.a > b.a;
		return a.i < b.i;
	}
};

set<pii> seta;
set<pii> setb;
char stra[10008][108];
char strb[10008][108];

int tmp;
int main() {
	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		scanf("%d", &tmp);
		seta.insert( { tmp, i });
		setb.insert( { tmp, i });
	}


	int cnta = 0;
	int cntb = 0;

	if (seta.size()>=3) {
		auto it1 = seta.begin();
		auto it2 = it1;
		it2++;
		auto it3 = it2;
		it3++;

		pii p1 = *it1;
		pii p2 = *it2;
		pii p3 = *it3;

		seta.erase(it1);
		seta.erase(it2);
		seta.erase(it3);

		p1.a--;
		p2.a--;
		p3.a--;
		if(p1.a<0)p1.a=0;
		if(p2.a<0)p2.a=0;
		if(p3.a<0)p3.a=0;

		seta.insert(p1);
		seta.insert(p2);
		seta.insert(p3);

		for (int i = 0; i < n; i++) {
			stra[cnta][i] = '0';
		}
		stra[cnta][p1.i] = '1';
		stra[cnta][p2.i] = '1';
		stra[cnta][p3.i] = '1';
		cnta++;
	}

	while (seta.begin()->a > (--seta.end())->a) {
		auto it1 = seta.begin();
		auto it2 = it1;
		it2++;
		pii p1 = *it1;
		pii p2 = *it2;
		seta.erase(it1);
		seta.erase(it2);
		p1.a--;
		p2.a--;
		if(p1.a<0)p1.a=0;
		if(p2.a<0)p2.a=0;

		seta.insert(p1);
		seta.insert(p2);

		for (int i = 0; i < n; i++) {
			stra[cnta][i] = '0';
		}
		stra[cnta][p1.i] = '1';
		stra[cnta][p2.i] = '1';

		//cout<<stra[cnt]<<endl;

		cnta++;

	}

	while (setb.begin()->a > (--setb.end())->a) {
		auto it1 = setb.begin();
		auto it2 = it1;
		it2++;
		pii p1 = *it1;
		pii p2 = *it2;
		setb.erase(it1);
		setb.erase(it2);
		p1.a--;
		p2.a--;
		if(p1.a<0)p1.a=0;
		if(p2.a<0)p2.a=0;

		setb.insert(p1);
		setb.insert(p2);

		for (int i = 0; i < n; i++) {
			strb[cntb][i] = '0';
		}
		strb[cntb][p1.i] = '1';
		strb[cntb][p2.i] = '1';

		//cout<<stra[cnt]<<endl;

		cntb++;

	}


	if(seta.begin()->a>setb.begin()->a){
		printf("%d\n",seta.begin()->a);
		printf("%d\n",cnta);
		for(int i=0;i<cnta;i++){
			printf("%s\n",stra[i]);
		}
	}else{
		printf("%d\n",setb.begin()->a);
		printf("%d\n",cntb);
		for(int i=0;i<cntb;i++){
			printf("%s\n",strb[i]);
		}
	}



	return 0;
}
