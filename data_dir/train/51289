#include<bits/stdc++.h>

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef vector<ll> vll;
typedef vector<vll> vvl;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,ll> pll;
const ll MOD = 1000000007;
const long double PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

void stringToUpper(string& strToConvert)
{
	transform(strToConvert.begin(), strToConvert.end(), strToConvert.begin(), ::toupper);
}

void stringToLower(string& strToConvert)
{
	transform(strToConvert.begin(), strToConvert.end(), strToConvert.begin(), ::tolower);
}

int n, x[3], ans[12345], curr;

int main()
{
	ssync;
	cin >> n;
	cout << "? 1 2" << endl;
	cin >> x[0];
	curr += x[0];
	cout << "? 2 3" << endl;
	cin >> x[1];
	curr += x[1];
	cout << "? 1 3" << endl;
	cin >> x[2];
	curr += x[2];
	curr /= 2;
	ans[1] = curr - x[1];
	ans[2] = curr - x[2];
	ans[3] = curr - x[0];
	curr = ans[3];
	for(int i=3; i<n; i++)
	{
		cout << "? " << i << " " << i+1 << endl;
		cin >> x[0];
		ans[i+1] = x[0] - curr;
		curr = ans[i+1];
	}
	cout << "! ";
	for(int i=1; i<=n; i++)
		cout << ans[i] << " ";
	cout << endl;
	return 0;
}
