#include <bits/stdc++.h>

using namespace std;

#define long long long
//#define double __float128
#define INF (long) 1e18
#define MOD ((long) 1e9 + 7)
#define mll map<long, long>
#define pll pair<long, long>
#define umap unordered_map
#define umll umap<long, long>
#define pb push_back
#define FOR(i, a, b) \
  for (long i = a; i < (long) b; i++)
#define SORT(v, atr) \
  sort(v.begin(), v.end(), \
    [](auto &a, auto &b) { return a.atr < b.atr; });
#define UNSORT(v, atr) \
  sort(v.begin(), v.end(), \
    [](auto &a, auto &b) { return a.atr > b.atr; });
#define PRINTV(v) \
  FOR (_i, 0, v.size()) \
    cout << v[_i] << " "; \
  cout << "\n";

set<long> gera_primos(long n)
{
  set<long> primos;
  vector<bool> crivo(n+1);
  primos.insert(2);
  for (long i = 3; i <= n; i += 2) {
    if (crivo[i]) continue;
    primos.insert(i);
    for (long j = i; j <= n; j += i) {
      crivo[j] = true;
    }
  }
  return primos;
}

struct Link
{
  long from, to, t;
};

struct Node
{
  bool visitado = false;
  bool cor = false;
  set<long> in, out;
};

long a[1000][1000];

int main()
{
  ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

  string s, t;
  cin >> s >> t;

  long total = 0;
  FOR (i, 0, s.size()) {
    bool ok = false;
    FOR (j, 0, t.size()) {
      if (s[i+j] != t[j]) {
        ok = true;
        break;
      }
    }
    if (not ok) {
      total++;
      i += t.size() - 1;
    }
  }
  cout << total << "\n";
}
