#include <bits/stdc++.h>

using namespace std;

#define long long long
#define INF (long) 1e18
#define MOD ((long) 1e9 + 7)
#define mll map<long, long>
#define pll pair<long, long>
#define pb push_back
#define FOR(i, a, b) \
  for (long i = a; i < (long) b; i++)
#define SORT(v, atr) \
  sort(v.begin(), v.end(), \
    [](auto &a, auto &b) { return a.atr < b.atr; });
#define UNSORT(v, atr) \
  sort(v.begin(), v.end(), \
    [](auto &a, auto &b) { return a.atr > b.atr; });
#define PRINTV(v) \
  FOR (_i, 0, v.size()) \
    cout << v[_i] << " "; \
  cout << "\n";

set<long> gera_primos(long n)
{
  set<long> primos;
  vector<bool> crivo(n);
  primos.insert(2);
  for (long i = 3; i <= n; i += 2) {
    if (crivo[i]) continue;
    primos.insert(i);
    for (long j = i; j <= n; j += i) {
      crivo[j] = true;
    }
  }
  return primos;
}

struct Link
{
  long from, to, cost;
};

struct Node
{
  bool visitado = false;
  long dist;
  vector<long> in, out;
};

int main()
{
  ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

  long n, t, c;
  cin >> n >> t >> c;

  vector<long> a(n);
  for (auto &x : a) cin >> x;

  long total = 0;
  long cont = 0;
  FOR (i, 0, c) {
    if (a[i] > t) cont++;
  }
  if (cont == 0) total++;
  FOR (i, c, n) {
    if (a[i - c] > t) cont--;
    if (a[i] > t) cont++;
    if (cont == 0) total++;
  }
  printf("%lld\n", total);
}
