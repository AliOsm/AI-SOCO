#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC target("avx,avx2,fma")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("input.txt");ofstream out("C:\\Users\\BOG\\Desktop\\output.txt");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

ll a, all = 0, mod = 998244353, s = 0, good = 0;
vec<vec<int>> l;

ll binpow(ll x, ll k){
    x%=mod;
    if(k<2) return k==1 ? x : 1;
    return (binpow((x*x)%mod, k/2)*(k%2==1 ? x : 1))%mod;
}

ll modInv(ll x){
    return binpow(x%mod, mod-2);
}

int main() {
    fast;
    cin>>a;
    l = vec<vec<int>>(a);
    map<int, ll> mp;
    for(int q=0; q<a; q++){
        int k; cin>>k;
        s += k;
        l[q] = vec<int>(k);
        for(int w=0; w<k; w++) cin>>l[q][w], mp[l[q][w]]++;
    }
    all = a*s;
    ll ia = modInv(a);
    for(int q=0; q<a; q++){
        for(int w=0; w<l[q].size(); w++){
            good += ((((mp[l[q][w]]*ia)%mod)*modInv((int)l[q].size()))%mod)*ia;
            good %= mod;
        }
    }
    good%=mod;
    all = modInv(all);
    cout<<good;
}