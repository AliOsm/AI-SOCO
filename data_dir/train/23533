/* practice with Dukkha */
#if 1
#pragma GCC target ("avx2")
#pragma GCC optimization ("O3")
#pragma GCC optimization ("unroll-loops")
#endif

#include <stdio.h>

#define N	2000

int next[1 + N * N * 2], jj[1 + N * N * 2];

int link(int l, int j) {
	static int l_ = 1;

	next[l_] = l;
	jj[l_] = j;
	return l_++;
}

char visited[N];
int *aa;

void dfs(int i) {
	int l;

	if (visited[i])
		return;
	visited[i] = 1;
	for (l = aa[i]; l; l = next[l]) {
		int j = jj[l];

		dfs(j);
	}
}

int main() {
	static int ao[N], ai[N];
	int n, i, j, k;

	scanf("%d", &n);
	for (i = 0; i < n; i++)
		for (j = 0; j < n; j++) {
			int a;

			scanf("%d", &a);
			if (i != j && a) {
				ao[i] = link(ao[i], j);
				ai[j] = link(ai[j], i);
			}
		}
	for (k = 0; k < 2; k++) {
		aa = k == 0 ? ao : ai;
		dfs(0);
		for (i = 0; i < n; i++) {
			if (!visited[i]) {
				printf("NO\n");
				return 0;
			}
			visited[i] = 0;
		}
	}
	printf("YES\n");
	return 0;
}
