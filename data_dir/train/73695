#include <iostream>
#include <vector>
#include <algorithm>
#include <memory>
#include <map>
#include <unordered_map>
#include <set>
#include <queue>
#include <unordered_set>
#include <functional>
#include <climits>
#include <cstring>
#include <cmath>
#include <numeric>
#include <random>
#include <tuple>
#include <chrono>

using namespace std;
using ll = long long;
using ull = unsigned long long;
const int oo = numeric_limits<int>::max() / 2;
mt19937 rnd(std::chrono::steady_clock::now().time_since_epoch().count());

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  auto solve = []() {
    int n, k;
    cin >> n >> k;
    if (n < k) {
      cout << "NO" << endl;
      return;
    }
    if ((n - k + 1) % 2 == 1) {
      cout << "YES" << endl;
      for(int i = 0; i < k - 1; ++i) {
        cout << 1 << " ";
      }
      cout << n - k + 1 << endl;
      return;
    }
    
    if (n < 2 * k) {
      cout << "NO" << endl;
      return;
    }
    if ((n - 2 * k) % 2 == 0) {
      cout << "YES" << endl;
      for(int i = 0; i < k - 1; ++i) {
        cout << 2 << " ";
      }
      cout << n - 2 * (k - 1) << endl;
      return;
    }
    cout << "NO" << endl;
  };

  int T;
  cin >> T;
  for(int i = 0; i < T; ++i) {
    solve();
  }

  return 0;
}
