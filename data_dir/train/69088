//Solution by Tima
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda

using namespace std;    
const int N = int(1e6), M = int(3e5) + 10, mod = int(1e9)  + 7;


int readInt() {
	char x = getchar();
	while (!isdigit(x)) x = getchar();
	int res = 0;
	while (isdigit(x)) res = res * 10 + x - '0', x = getchar();
	return res;
}
void writeInt(ll x) {
	if (x > 9) writeInt(x / 10);
	putchar(x % 10 + '0');
}

int d[N + 10], lp[N + 10];

int n,m,a[M], t[4*M];
ll s[4*M];

void build(int v,int tl,int tr){
	if(tl == tr){
		s[v] = a[tl];
		t[v] = a[tl];
		return;
	}
	int tm = (tl + tr) >> 1;
	build(v + v, tl, tm);
	build(v + v + 1, tm + 1, tr);
	s[v] = s[v + v] + s[v + v + 1];
	t[v] = max(t[v + v], t[v + v + 1]);
} 

void upd(int v,int tl,int tr,int l,int r){
	if(tl > r || l > tr) return;
	if(t[v] <= 2) return;
	if(tl == tr){
		s[v] = d[s[v]];
		t[v] = s[v];
		return;
	}
	int tm = (tl + tr) >> 1;
	upd(v + v, tl, tm, l, r);
	upd(v + v + 1, tm + 1, tr, l, r);
	t[v] = max(t[v + v], t[v + v + 1]);
	s[v] = s[v + v] + s[v + v + 1];
}

ll sum(int v,int tl,int tr,int l,int r){
	if(tl > r || l > tr) return 0;
	if(l <= tl && tr <= r){
		return s[v];
	}
	int tm = (tl + tr) >> 1;
	return sum(v + v, tl, tm, l, r) + sum(v + v + 1, tm + 1, tr, l, r);
}

void precalc(){
	for(int i = 4; i <= N; i += 2) lp[i] = 2;
	for(int i = 3; i <= 1000; i += 2) if(!lp[i]){
		for(int j = i * i; j <= N; j += (i + i)){
			lp[j] = i;
		}
	}
	d[1] = 1;
	int x = 1,p,c;
	for(int i = 2; i <= N; i++){
		if(!lp[i]) lp[i] = i;
		x = i, p = lp[i],c = 0;
		while(x % p == 0){
			x /= p;
			c++;
		}
		d[i] = d[x] * (c + 1);
	}
}

int main () {
	precalc();
	n = readInt();
	m = readInt();
	for(int i = 1; i <= n; i++){
		a[i] = readInt();
	}

	build(1,1,n);

	for(int i = 1,tp,l,r; i <= m; i++){
		tp = readInt();
		l = readInt();
		r = readInt();
		if(tp == 1){
			upd(1,1,n,l,r);
		}
		else{
			writeInt(sum(1,1,n,l,r));
			putchar('\n');
		}	
	}

	                   
return 0;
}