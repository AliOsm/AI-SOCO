#include <bits/stdc++.h>

using namespace std;

#define fastio ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)

int n,k,x;
int arr[5000+5];
priority_queue<pair<long long,long long> >dp[5000+5];

long long solve(){
    for(int i=n;i>=0;i--){
        for(int j=1;j<=x+1;j++){

            while(!dp[j-1].empty() && dp[j-1].top().second>i+k)dp[j-1].pop();

            if(j==1){
                if(i+k-1>=n){
                    dp[j].push(make_pair(arr[i],i));
                }
                continue;
            }



            pair<long long,long long>now;
            if(!dp[j-1].empty()){
                if(dp[j-1].top().second==i){
                    pair<long long,long long>temp=dp[j-1].top();
                    dp[j-1].pop();

                    if(!dp[j-1].empty()){
                        now=dp[j-1].top();
                        dp[j-1].push(temp);
                    }
                    else {
                        dp[j-1].push(temp);
                        continue;
                    }
                }
                else now=dp[j-1].top();
            }
            else continue;

            dp[j].push(make_pair(arr[i]+now.first,i));
        }
        /*for(int j=1;j<=x+1;j++){
            priority_queue<pair<long long,long long> >temp=dp[j];
            cout<<j<<": ";
            while(!temp.empty()){
                cout<<temp.top().first<<" "<<temp.top().second<<" ,";
                temp.pop();
            }
            cout<<endl;
        }
        cout<<endl;*/
    }
    if(dp[x].empty())return -1;
    return dp[x].top().first;
}
int main(){

    scanf("%d %d %d",&n,&k,&x);
    for(int i=1;i<=n;i++)scanf("%d",&arr[i]);

    printf("%lld\n",solve());

    return 0;
}
