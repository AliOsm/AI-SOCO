//IOI 2021
#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 2 * 100 * 1000 + 17, MAXS = 1000 * 1000 + 17, SQ = 450;

bool cmp_mo(pii A, pii B) {
	if (A.ff / SQ != B.ff / SQ)
		return A.ff < B.ff;
	return A.ss < B.ss;
}

int n, q, a[MAXN], cnt[MAXS], b[MAXN];
ll sum, ans[MAXN];
pii query[MAXN];

void add(int x) {
	if (x == 0)
		return;
	sum += 1LL * cnt[x] * cnt[x] * x;
}

void del(int x) {
	if (x == 0)
		return;
	sum -= 1LL * cnt[x] * cnt[x] * x;
}

int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> q;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	for (int i = 1; i <= q; i++)
		cin >> query[i].ff >> query[i].ss;
	iota(b + 1, b + q + 1, 1);
	sort(b + 1, b + q + 1, [](int i, int j) { return cmp_mo(query[i], query[j]); });
	int mos = 0, moe = 0;
	for (int j = 1; j <= q; j++) {
		int i = b[j];
		while (moe < query[i].ss) {
			del(a[++moe]);
			cnt[a[moe]]++;
			add(a[moe]);
		}
		while (moe > query[i].ss) {
			del(a[moe]);
			cnt[a[moe]]--;
			add(a[moe--]);
		}
		while (mos < query[i].ff) {
			del(a[mos]);
			cnt[a[mos]]--;
			add(a[mos++]);
		}
		while (mos > query[i].ff) {
			del(a[--mos]);
			cnt[a[mos]]++;
			add(a[mos]);
		}
		ans[i] = sum;
	}
	for (int i = 1; i <= q; i++)
		cout << ans[i] << endl;
	return 0;
}
