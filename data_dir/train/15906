#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector<ii> vii;
typedef map<ll,ll> mll;
typedef vector<bool> vb;

#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash
#define endl "\n"
#define prina(arr,dau,cuoi) FTB(mmczmp,dau,cuoi)cout<<arr[mmczmp]<<" ";cout<<endl;
#define debug cout<<"debug\n"
#define pb push_back
#define pbg(ke,u,v) ke[u].pb(v);ke[v].pb(u);
#define x first
#define y second
#define pi acos(-1.0)
#define lbnd(f,s,gt) lower_bound(f,s,gt)
#define ubnd(f,s,gt) upper_bound(f,s,gt)
#define all(s) s.begin(),s.end()
#define bitcount(n) __builtin_popcountll(n)
#define FTB(i,a,b) for(ll i=a,_b=b;i<=_b;i++)
#define FT(i,a,b) for(ll i=a,_b=b;i<_b;i++)
#define FGB(i,a,b) for(ll i=a,_b=b;i>=_b;i--)
#define FG(i,a,b) for(ll i=a,_b=b;i>_b;i--)
/////////////////////////////////////////////

const int mod=1e9+7,maxn=2e5;
ll a,b,n,tmp,tu[maxn+5],mau[maxn+5],res[2005];
ii z[2005];

ll p(ll a,ll b){
    if(b==0) return 1;
    if(b&1) return a*p(a,b-1)%mod;
    return p(a*a%mod,b/2)%mod;
}

void precompute(){
    tu[0]=1;
    FTB(i,1,maxn) tu[i]=tu[i-1]*i%mod;
    mau[maxn]=p(tu[maxn],mod-2);
    FGB(i,maxn-1,0) mau[i]=mau[i+1]*(i+1)%mod;
}

ll C(ll n,ll k){
    return tu[n]*mau[k]%mod*mau[n-k]%mod;
}

void Solve(){
    precompute();
    cin>>a>>b>>n;
    FTB(i,1,n){
        cin>>z[i].x>>z[i].y;
    }
    n++;
    z[n].x=a,z[n].y=b;
    sort(z+1,z+n+1);
    FTB(i,1,n){
        res[i]=C(z[i].x+z[i].y-2,z[i].x-1);
        FT(j,1,i) if(z[j].y<=z[i].y){
            res[i]-=res[j]*C(z[i].x+z[i].y-z[j].x-z[j].y,z[i].x-z[j].x)%mod;
            res[i]=(res[i]+mod)%mod;
        }

    }
    cout<<res[n];
}


int main(){
    ios::sync_with_stdio(0);cin.tie(0);

    //freopen("1.in","r",stdin);
    //freopen("1.out","w",stdout);


    int Test_numbers=1;
    //int Test_numbers;cin>>Test_numbers;

    while(Test_numbers--) Solve();

    //cerr << "\nTime run: " << 1000 * clock() / CLOCKS_PER_SEC << "ms\n";

	return 0;
}
