/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class A357 {
public:
    void solve(istream& in, ostream& out) {
        int m;
        in >> m;
        vector<int> c(m);
        for (int i = 0; i < m; ++i)
            in >> c[i];
        int x, y;
        in >> x >> y;
        const int sum = accumulate(c.begin(), c.end(), 0);
        int cur_sum = 0;
        for (int i = 0; i < m; ++i) {
            int g1 = cur_sum, g2 = sum - cur_sum;
            if (g1 >= x && g1 <= y && g2 >= x && g2 <= y) {
                out << i + 1 << "\n";
                return;
            }
            cur_sum += c[i];
        }
        out << 0 << "\n";
    }
};


int main() {
	std::ios::sync_with_stdio(false); cin.tie(nullptr);
	A357 solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
