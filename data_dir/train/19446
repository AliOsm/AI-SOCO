#include <bits/stdc++.h>
#include <ext/hash_set>
#include <ext/numeric>

using namespace __gnu_cxx;
using namespace std;

typedef long long ll;
typedef vector<ll> vi;
typedef vector<ll> vll;
typedef vector<vi> vvi;
typedef pair<int, int> pii;
typedef vector<pii> vii;
typedef vector<bool> vb;
typedef vector<string> vs;
const ll MOD = (int)1e9 + 7;
const long double EPS = 1e-4;
const ll INF = (int) 1e9;
int di[] = {0, 0, 1, -1};
int dj[] = {1, -1, 0, 0};
#define all(x) x.begin(),x.end()


int main() {
	ios::sync_with_stdio(0), cin.tie(0);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif

	string s; cin >> s;
	int k; cin >> k;
	int sym = count(all(s), '?') + count(all(s), '*');
	int ln = s.length() - sym;
	if (k < ln) {
		for (int i = 0; i < s.length(); ++i) {
			if (i && (s[i] == '?' || s[i] == '*')) {
				s[i - 1] = '_';
				ln--;
				if (ln == k) break;
			}
		}
	}
	else if (k > ln) {
		for (int i = 0; i < s.length(); ++i) {
			if (i && s[i] == '*') {
				char c = s[i - 1];
				while (ln < k) {
					s.insert(s.begin() + (i - 1), c);
					ln++;
				}
				break;
			}
		}
	}

	if (ln != k) cout << "Impossible" << endl;
	else {
		for (int i = 0; i < s.length(); ++i) {
			if (s[i] == '_' || s[i] == '*' || s[i] == '?')
				continue;
			cout << s[i];
		}
		cout << endl;
	}
}
