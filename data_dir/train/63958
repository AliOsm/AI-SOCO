#include<iostream>
#include<cstdio>
#include<cstring>
#include<vector>
#include<algorithm>
#define N 6010
using namespace std;
int n;
int r[N];
vector<int> edge[N];
int dp[N];
int ans;
void dfs (int cur, int fa) {
     int pos = lower_bound(dp + 1, dp + 1 + n, r[cur]) - dp;
     ans = max(ans, pos);
     int tmp = dp[pos];
     dp[pos] = r[cur];
     for (int i = 0; i < edge[cur].size(); ++i) {
         int v = edge[cur][i];
         if (v == fa) {
            continue;
         }
         dfs(v, cur);
     }
     dp[pos] = tmp;
}
int main() {
    int a,b;
    while (cin>>n) {
          for (int i = 1; i <= n; ++i) {
              scanf("%d", r + i);
              edge[i].clear();
          }
          for (int i = 1; i < n; ++i) {
              scanf("%d%d", &a, &b);
              edge[a].push_back(b);
              edge[b].push_back(a);
          }
          ans = 0;
          memset(dp, 0x7f, sizeof(dp));
          for (int i = 1; i <= n; ++i) {
              dfs(i, 0);
          }
          cout<<ans<<endl;
    }
    return 0;
}
