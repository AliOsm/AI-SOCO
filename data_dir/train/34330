/*jai mata di
let's rock*/
#include<bits/stdc++.h>
using namespace std;
const int N=2004;
char s[N][N];
int par[N],vis[N],dp[N],rnk[N];
int get(int x)
{
    if(par[x]==x) return x;
    else return (par[x]=get(par[x]));
}
void mergeSet(int x,int y)
{
    int px=get(x);
    int py=get(y);
    if(px==py) return ;
    if(rnk[px]<rnk[py])
        par[px]=py;
    else
        par[py]=px;
    if(rnk[px]==rnk[py]) rnk[px]++;
}
int flag=1,f=1;
vector<int>g[N];
void dfs(int u)
{
    vis[u]=flag+1;
    dp[u]=1;
    for(int i=0;i<g[u].size();i++)
    {
        int v=g[u][i];
        if(vis[v]==flag+1){
            f=0;
            return ;
        }
        else if(vis[v]==0) dfs(v);
        dp[u]=max(dp[u],1+dp[v]);
    }
    vis[u]=flag+2;
}
int main()
{
    int n,m;
    scanf("%d %d",&n,&m);
    int i,j;
    for(i=1;i<=n+m;i++)
        {
            par[i]=i;
            rnk[i]=1;
        }
    for(i=1;i<=n;i++)
        scanf("%s",s[i]+1);
    for(i=1;i<=n;i++){
        for(j=1;j<=m;j++){
            if(s[i][j]=='=')
                mergeSet(i,n+j);
        }
    }
    for(i=1;i<=n;i++){
        for(j=1;j<=m;j++){
            if(s[i][j]=='>')
            {
                int px=get(i);
                int py=get(n+j);
                if(px==py){
                    printf("No\n");
                    return 0;
                }
                g[px].push_back(py);
            }
            else if(s[i][j]=='<')
            {
                int px=get(i);
                int py=get(n+j);
                if(px==py){
                    printf("No\n");
                    return 0;
                }
                g[py].push_back(px);
            }
        }
    }
    for(i=1;i<=n+m;i++){
        int p=get(i);
        if(!vis[p]) dfs(p);
        if(f==0){
            printf("No\n");
            return 0;
        }
        int cnt=1;
        flag+=4;
    }
    printf("Yes\n");
    for(i=1;i<=n;i++)
        printf("%d ",dp[get(i)]);
    printf("\n");
    for(i=1;i<=m;i++)
        printf("%d ",dp[get(n+i)]);
    printf("\n");
    return 0;
}

