#include <cstdio>
#include <vector>
#include <cstring>
using namespace std;
#define REP(i,n) for(int i=0;i<(n);i++)

char mp[41][41];

int sum[41][41];

int tr[41][41][41][41];

int f(int i)
{
	return (i&(i+1))-1;
}

int get_sum(int a, int b, int c, int d)
{
	int res=0;
	for(int i=a;i>=0;i=f(i))
	for(int j=b;j>=0;j=f(j))
	for(int k=c;k>=0;k=f(k))
	for(int l=d;l>=0;l=f(l))
		res+=tr[i][j][k][l];
	return res;
}

void inc(int a, int b, int c, int d)
{
	for(int i=a;i<40;i|=i+1)
	for(int j=b;j<40;j|=j+1)
	for(int k=c;k<40;k|=k+1)
	for(int l=d;l<40;l|=l+1)
		tr[i][j][k][l]++;
}

int testbit(int n, int m)
{
	return (n>>m)&1;
}

int get_sum(int a[8])
{
	int res=0;
	for(int i=0;i<(1<<4);i++)
	{
		int b[4];
		int sign=1;
		for(int j=0;j<4;j++)
			if(testbit(i,j))
			{
				b[j]=a[2*j]-1;
				sign*=-1;
			}
			else
				b[j]=a[2*j+1];
//		printf("%d %d %d %d: %d\n",b[0],b[1],b[2],b[3],get_sum(b[0],b[1],b[2],b[3])*sign);
		res+=get_sum(b[0],b[1],b[2],b[3])*sign;
	}
	return res;
}

int main()
{
	int n,m,q;
	scanf("%d%d%d",&n,&m,&q);
	REP(i,n)
		scanf("%s",mp[i]);
	REP(i,n) REP(j,m)
		sum[i+1][j+1]=mp[i][j]-'0'+sum[i][j+1]+sum[i+1][j]-sum[i][j];
	REP(i,n) REP(j,m)
		for(int k=i+1;k<=n;k++)
			for(int l=j+1;l<=m;l++)
			{
				int cursum=sum[k][l]-sum[i][l]-sum[k][j]+sum[i][j];
				if(cursum==0)
				{
					inc(i,j,k-1,l-1);
				}
			}
	while(q--)
	{
		int a[8];
		int b[4];
		REP(i,4)
			scanf("%d",&b[i]);
		a[0]=b[0]-1;
		a[1]=39;
		a[2]=b[1]-1;
		a[3]=39;
		a[4]=0;
		a[5]=b[2]-1;
		a[6]=0;
		a[7]=b[3]-1;
//		for(int i=0;i<4;i++)
//		{
//			a[2*i]=0;
//			a[2*i+1]=39;
//		}
		printf("%d\n",get_sum(a));
	}
	return 0;
}
