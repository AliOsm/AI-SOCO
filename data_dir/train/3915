// High above the clouds there is a rainbow...

#include<bits/stdc++.h>

#define F first
#define S second
#define PB push_back
#define sz(s) int((s).size())
#define bit(n,k) (((n)>>(k))&1)
#define y1 STRANGE

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;

const int maxn=1e3+10,mod=1e9+7;
const ll inf=1e18;

int sm[maxn][maxn],n,m;

ll solve(int a,int b,bool is){
    ll num= 1ll*a*b /2;
    if((a&1) && (b&1))  num+=__builtin_popcount((a-1) ^ (b-1)) &1;
    if(is) return 1ll*a*b - num;
    return num;
}

ll calc(int a,int b){
    if(a==0 || b==0) return 0;
    --a,--b;
    ll ans=0;

    int A=a/n, B=b/m, am=(a%n)+1, bm=(b%m)+1;

    ll on= sm[am][bm], of= am*bm- on;
    ans+= solve(A+1,B+1,0)*of + solve(A+1,B+1,1)*on;

    on= sm[am][m] - sm[am][bm], of= am*(m-bm) - on;
    ans+= solve(A+1,B,0)*of + solve(A+1,B,1)*on;

    on= sm[n][bm] - sm[am][bm], of= bm*(n-am) - on;
    ans+= solve(A,B+1,0)*of + solve(A,B+1,1)*on;

    on= sm[n][m] - sm[am][m] - sm[n][bm] + sm[am][bm], of= (n-am)*(m-bm) - on;
    ans+= solve(A,B,0)*of + solve(A,B,1)*on;

    return ans;
}

int main(){
    ios_base::sync_with_stdio(false);cin.tie(0);

    int q; cin>>n>>m>>q;
    for(int i=1;i<=n;i++){
	string s; cin>>s;
	for(int j=1;j<=m;j++){
	    sm[i][j]= sm[i-1][j] + sm[i][j-1] - sm[i-1][j-1] + (s[j-1]=='1');
	}
    }
    while(q--){
	int x1,y1,x2,y2; cin>>x1>>y1>>x2>>y2; --y1,--x1;
	cout<< calc(x2,y2) - calc(x1,y2) - calc(x2,y1) + calc(x1,y1) <<"\n";
    }
}
// Deathly mistakes:
//  * Read the problem curfully.
//  * Check maxn.
//  * Overflows.
