#include <bits/stdc++.h>
     
using namespace std;
typedef long long ll;
typedef vector<int> vl ;
     
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define all(v) (v).begin(),(v).end()
#define max(a,b) (a>b ? a : b)
#define min(a,b) (a<b ? a : b)
 
const int MOD = 1000000007;
const int N = 1000005;
const double PI =4*atan(1);
const double eps = 1e-7;
const long long oo = 1e18;

ll _sieve_size;bitset<10000010> bs;vl primes;
void sieve(ll upperbound) {
  _sieve_size = upperbound + 1;bs.set();bs[0] = bs[1] = 0;
  for (ll i = 2; i <= _sieve_size; i++) if (bs[i]) {
    for (ll j = i * i; j <= _sieve_size; j += i) bs[j] = 0;primes.push_back((int)i); }
}

bool isPrime(ll N) {
  if (N <= _sieve_size) return bs[N];
  for (int i = 0; i < (int)primes.size(); i++)if (N % primes[i] == 0) return false;
  return true;
}

ll power(ll x, ll y,ll p){ll res = 1;x = x % p;
        while (y > 0){if (y & 1)res = (res*x) % p;y = y>>1;x = (x*x) % p;}return res;}
ll n,x;

int main(){
    ios::sync_with_stdio(0);
    //freopen("easy.txt","r",stdin);
    cin >> x >> n;
    sieve(1000000);
    vl v;
    for(int i=1;i<=sqrt(x);i++){
      if(x%i)continue;
      if(isPrime(i)){
        v.pb(i);
      }
      if(x!=i*i){
        if(isPrime(x/i)){
          v.pb(x/i);
        }
      }
    }
    ll ans=1;
    for(auto t:v){
      ll z=t;
      //cout << t << endl;
      int cnt=1;
      ll y=n;
      while(y){
        y/=t;
        ans=((ans%MOD)*(power(z,y-y/t,MOD)%MOD)%MOD)%MOD;
        z*=t;
        cnt++;

      }

    }
    cout << ans%MOD;

    return 0;
}