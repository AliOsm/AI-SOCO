#include <bits/stdc++.h>
using namespace std;

int n, k, c, dp[101][101][30], adj[30][30]; char u, v, s[101];

int solve(int idx = 0, int rem = k, int prv = 26) {
	if (rem < 0)
		return -1e9;

	if (!s[idx])
		return 0;

	int& ret = dp[idx][rem][prv];

	if (~ret)
		return ret;

	ret = solve(idx + 1, rem, s[idx] - 'a') + adj[prv][s[idx] - 'a'];

	for (int i = 0; i < 26; ++i) {
		ret = max(ret, solve(idx + 1, rem - 1, i) + adj[prv][i]);
	}

	return ret;
}

int main() {
	cin >> s >> k >> n;
	while (n--) {
		cin >> u >> v >> c;
		adj[u - 'a'][v - 'a'] = c;
	}
	memset(dp, -1, sizeof(dp));
	cout << solve();
	return 0;
}