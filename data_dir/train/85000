#include <iostream>
#include <list>
#include <cmath>
#include <algorithm>
#include <map>
#include <vector>
#include <cstdio>
#include <queue>
#include <unordered_set>

using namespace std;

const long long infLL = 1e18;
const long long evil = 62233;

pair<int,int> a[12000];
int c[10];

struct edge{
    int v;
    int c;
    //int f;
    int rev;
};

vector<edge> e[12000];

void add(int u, int v, int w){
    if(w == 0) return;
    edge fw,bw;
    fw.v = v;
    bw.v = u;
    fw.c = w;
    bw.c = 0;
    //fw.f = bw.f = 0;
    fw.rev = e[v].size();
    bw.rev = e[u].size();
    e[u].push_back(fw);
    e[v].push_back(bw);
}

bool visited[12000];
int m;
int sp[12000];
int pr[12000];
int sr[12000];
int gr[12000];
int go(){
    for(int i = 0; i < m; i++)
        visited[i] = false;
    visited[0] = true;
    sp[0] = 0;
    gr[0] = 1e9;
    int k = 0;
    int l = 1;
    while(k < l){
        int &u = sp[k];
        for(int i = 0; i < e[u].size(); i++){
            if(e[u][i].c){
                int v = e[u][i].v;
                if(!visited[v]){
                    visited[v] = true;
                    pr[v] = u;
                    gr[v] = min(gr[u], e[u][i].c);
                    sr[v] = i;
                    sp[l++] = v;
                }
            }
        }
        k++;
    }
    int v = m - 1;
    if(!visited[v]) return 0;
    int res = gr[v];
    while(v){
        int u = pr[v];
        int i = sr[v];
        int j = e[u][i].rev;

        e[u][i].c -= res;
        e[v][j].c += res;
        v = u;
    }
    return res;
}

int main()
{
    int n, b, q;
    scanf("%d%d%d", &n, &b, &q);
    for(int i = 0; i < q; i++){
        scanf("%d%d", &a[i].first, &a[i].second);
    }
    a[q++] = {0, 0};
    a[q++] = {b, n};
    sort(a, a + q);
    for(int i = 1; i < q; i++){
        int dx = a[i].first - a[i - 1].first;
        int dy = a[i].second - a[i - 1].second;
        if(dy < 0){cout << "unfair"<<endl; return 0;}
        if(dx < dy){cout << "unfair"<<endl; return 0;}
        add(0, i, dy);
        for(int j = 1; j <= 5; j++){
            int t = (a[i].first + 5 - j) / 5;
            add(i, q + j, t - c[j]);
            c[j] = t;
        }
    }
    for(int j = 1; j <= 5; j++){
        add(q + j, q + 6, n / 5);
    }
    m = q + 7;
    int ans = 0;
    while(true){
        int z = go();
        if(z) ans += z; else break;
    }
    if(ans != n) {cout << "unfair"<<endl; return 0;}
    cout << "fair";
    return 0;
}
