/* 489F */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 505;
__int64 dp[2][maxn][maxn];
char s[maxn];
int cs[maxn];
int C[maxn];
int C_[maxn][maxn];
int n, m, mod;
	
void init() {
	rep(i, 0, maxn)
		C[i] = i*(i-1)/2%mod;
	rep(i, 0, maxn)
		rep(j, 0, maxn)
			C_[i][j] = i*j%mod;
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	scanf("%d %d %d", &n, &m, &mod);
	
	init();
	rep(i, 0, m) {
		scanf("%s", s);
		rep(j, 0, n) {
			if (s[j] == '1')
				++cs[j];
		}
	}
	
	int n2 = 0, n1 = 0, n0 = 0;
	
	rep(i, 0, n) {
		if (cs[i] == 0)
			++n2;
		else if (cs[i] == 1)
			++n1;
		else
			++n0;
	}
	
	int n_ = n - n0 + 1;
	int p = 0, q = 1;
	
	dp[0][n2][n1] = 1;
	rep(ii, m, n) {
		rep(i, 0, n_) {
			rep(j, 0, n_) {
				if (dp[p][i][j] == 0)
					continue;
				if (j >= 2)
					dp[q][i][j-2] = (dp[q][i][j-2] + C[j]*dp[p][i][j]) % mod;
				if (i>0 && j>0)
					dp[q][i-1][j] = (dp[q][i-1][j] + C_[i][j]*dp[p][i][j]) % mod;
				if (i >= 2)
					dp[q][i-2][j+2] = (dp[q][i-2][j+2] + C[i]*dp[p][i][j]) % mod;
			}
		}
		p = q;
		q = !q;
	}
	
	__int64 ans = dp[p][0][0];
	
	printf("%I64d\n", ans);
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
