#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef pair<int, int> pi;

vector<vector<int> >t;
vector<int> pare, c, val;
vector<vector<double> > v;
vector<double> sol;

bool ok = true;
int cnt = 1;

int dfs(int r) {
  val[r] = 1;
  for (int x: t[r]) {
    if (x != pare[r]) {
      val[r] += dfs(x);
      for (auto y: v[x])
        v[r].push_back(y);
    }
  }
  sort(v[r].begin(), v[r].end());
  if (c[r] > val[r]-1) {
    ok = false;
    cout << "NO" << endl;
    exit(0);
  }
  else {
    if (val[r] == 1) {
      v[r].push_back(100'000*cnt);
      sol[r] = 100'000*cnt;
      cnt++;
    }
    else {
      if (c[r] == 0) v[r].push_back(v[r][0] - 2000);
      else if (c[r] == val[r]-1) v[r].push_back(v[r].back() + 2000);
      else v[r].push_back((v[r][c[r]] + v[r][c[r]-1])/2);
      sol[r] = v[r].back();
    }
  }
  return val[r];
}


int main() {
  ios_base::sync_with_stdio(false); cin.tie(NULL); 
  int n;
  cin >> n;
  t = vector<vector<int> >(n);
  val = c = pare = vector<int> (n);
  v = vector<vector<double> >(n);
  sol = vector<double>(n);
  int rt = 0;
  for (int i = 0; i < n; i++) {
    int p;
    cin >> p >> c[i];
    p--;
    if (p >= 0) {
      t[p].push_back(i);
      t[i].push_back(p);
      pare[i] = p;
    }
    else {
      rt = i;
      pare[i] = i;
    }
  }
  dfs(rt);
  if (!ok) cout << "NO" << endl;
  else {
    cout << "YES" << endl;
    vector<pair<double, int> > so(n);
    for (int i = 0; i < n; i++) {
      so[i] = {sol[i], i};
    }
    sort( so.begin(), so.end());
    vector<int> res(n);
    for (int i = 0; i < n; i++)
      res[so[i].second] = i;
    
    
    
    for (auto x: res)
      cout << x+1 << " ";
    cout << endl;
  }
}

