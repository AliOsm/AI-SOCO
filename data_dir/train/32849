
// In the name of God
// Code by: mrMaster

#include <bits/stdc++.h>

using namespace std;

inline int in() {int x; scanf("%d",&x); return x;}
#define debug(x) cerr << #x << '=' << (x) << endl
#define FOR(i,j,k) for(int i=j;i<k;++i)
#define bpc __builtin_popcount
#define blz __builtin_clz
#define btz __builtin_ctz
#define Size(x) ((int)(x).size())
#define endl '\n'
#define boost ios_base :: sync_with_stdio(false) , cin.tie(0) , cout.tie(0)
#define pb push_back
#define X first
#define Y second

typedef long long ll;
typedef long double ld;
typedef pair<int,int>pii;

const int INF = 1e9 + 10;
const ll LINF = 1000ll*1000*1000*1000*1000*1000 + 100;
const int MN = 1e5 + 10;
const int MK = 40 + 5;

vector<pii>vec[MN];
int n,m;
int len[MN];
int mk[MK] , cnt[MK];

void input()
{
	cin >> n >> m;
	for(int i=0;i<n;++i){
		int k;
		cin >> k;
		len[i] = k;
		for(int j=0;j<k;++j){
			int t;
			cin >> t;
			--t;
			vec[t].pb(pii(i,j));
		}
	}
//	for(int i=0;i<m;++i){
//		for(int j=0;j<Size(vec[i]);++j) cout << vec[i][j].X << ' ' << vec[i][j].Y << endl;
//		cout << "--------\n";
//	} 
}

bool check(int mod1 , int a ,int mod2 , int b)
{
	int g = __gcd(mod1 , mod2);
	return (a%g) == (b%g);
}

bool check1(int d ,int mod)
{
	for(int i=1;i<MK;++i){
		if(!cnt[i]) continue;
		if(!check(d , mod , i , mk[i])) return false;
	}
	return true;
}

void Add(int d , int mod)
{
	++cnt[d] , mk[d] = mod;
}

void solve(int val)
{
	int ans = 0 , p = 0;
	for(int i=0;i<Size(vec[val]);++i){
		int d = len[vec[val][i].X];
		int mod = vec[val][i].Y;
		if(p <= i) p = i+1 , mk[d] = mod , ++cnt[d];
		while(p < Size(vec[val]) && vec[val][p].X-1 == vec[val][p-1].X && check1(len[vec[val][p].X] , vec[val][p].Y))
			Add(len[vec[val][p].X] , vec[val][p].Y) , ++p;
		--cnt[d];
		ans = max(ans , p-i);
		//cout << i <<  ' ' << p-1 << endl;
	}
	cout << ans << endl;
}

int main()
{
	boost;
	input();
	for(int i=0;i<m;++i) solve(i);
	return 0;
}


