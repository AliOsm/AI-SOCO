#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp> #include <ext/pb_ds/tree_policy.hpp> using namespace __gnu_pbds;
using namespace std;
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
#define F first 
#define S second
#define sqr(x) ((x) * (x))
#define cub(x) ((x) * (x) * (x))
#define pii pair<int, int>
#define all(c) c.begin(), c.end()
#define tr(c, it) for(decltype (c.begin()) it = c.begin(); it != c.end(); it++)
#define fon(i, n) for(int i = 0; i < int(n); i++)
#define fo1(i, n) for(int i = 1; i <= int(n); i++)
#define fo(i, x, n) for(int i = x; i < int(n); i++)
#define eps 1e-12
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define lb lower_bound
#define ub upper_bound
#define ins insert
#define inf 2e9
#define sz 200100
#define N 1000010
#define M 1000000007
   
#define name "input"
#define isFile 0

typedef long long ll;	typedef unsigned long long ull;	typedef long double ld;
int bPow(int v, int u, int mod){	if(!u)	return 1;	int res = bPow(v, u / 2, mod);	res = (res * 1ll * res) % mod;	if(u & 1) res = (res * 1ll * v) % mod;	return res;} 
bool fb(ll x){return 0;}
int bSearch(int l, int r){	while(r - l > 1){	int m = (l + r) / 2;	if(fb(m))	l = m;	else		r = m;}	if(fb(l + 1))	l++;	if(!fb(l))		l = 0;	return l;}
void faster(){	ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);	if(isFile){	freopen(name".in", "r", stdin); freopen(name".out", "w", stdout); }}
vector<int> prime; bool notprime[N];
void resh(){ int n = N - 10;	for(int i = 2; i < n; i++)	if(!notprime[i]){	prime.pb(i); for(int j = i; j < n; j += i) notprime[j] = 1;}}
int is_comp(ll p){	for(int i = 0; prime[i] * 1ll * prime[i] <= p; i++){	if(p % prime[i] == 0)	return prime[i]; }	return 0;	}
bool is_prime(ll p){	for(int i = 0; prime[i] * 1ll * prime[i] <= p; i++){	if(p % prime[i] == 0)	return 0; }	return 1;	}
int gcd(int a, int b){	if(a > b)	swap(a, b);	if(!a)	return b;	return gcd(b % a, a);	}

ll r;
int main()
{
	faster();
	resh();
	cin >> r;
	r--;
	if(r < 4 || is_prime(r))
		cout << "NO";
	else
	if(r % 2 == 0)
		cout << "1 " << r / 2 - 1;
	else{
	for(int i = 3; 1ll * i * i <= r; i += 2)
		if(r % i == 0 && r / i > i + 1 && (r / i - i - 1) % 2 == 0){
			cout << i << ' ' << (r / i - i - 1) / 2;
			return 0;
		}	

		cout << "NO";
	}
	return 0;					
}	