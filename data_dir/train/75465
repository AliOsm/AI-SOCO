#include <cstdlib>
#include <iostream>
#include <map>
#include <stdio.h>
#include <vector>
#include<bits/stdc++.h>
#include <ctype.h>
#include <list>
#include <stack>
#include <queue>
#include <string.h>
#include <iomanip>
#include <string>
#include <algorithm>
#include <cmath>
#define _CRT_SECURE_NO_DEPRECATE
#define INF 1000000000
#define Set(a, s) memset(a, s, sizeof (a))
#define forpos(i,j,k) for (int i=0 ; i<j ; i+=k)
#define forneg(i,j,k) for (int i=j ;i>=0 ;i-=k)
#define PI 3.14159265358979323846
#define pf printf
#define SSTR( x ) dynamic_cast< std::ostringstream & >( \
       ( std::ostringstream() << std::dec << x ) ).str()
#include<queue>
#define UNVISITED 0
#define VISITED  1


using namespace std;

typedef long long ll;
typedef std::pair<int,int> ii;
typedef std::pair<std::string,int> si;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef std::pair<int , ii> iii ;
class CompareDist
{
public:
    bool operator()(ii x,ii y) {
      if(x.first==y.first)
      return x.second<y.second;
      return x.first>y.first ;
  }
};
int number(int n){
    return (n*(n-1)/2) ;
}

int main(){
    //ios_base::sync_with_stdio(false);
     int n ;
     int males[366],females[366];

     cin>>n;
          forpos(i,366,1)males[i]=females[i]=0;

     forpos(i,n,1)
     {
         char x ; int a , b;
         cin>> x >> a >> b;
         a--;b--;
         for(int i = a ; i<=b ; i++)
            if(x=='M')males[i]++;
            else females[i]++;
     }

        int mx =0;
     forpos(i,366,1)
        mx=max(mx,min(males[i],females[i]));
    cout<<mx*2;
    return 0 ;
}

