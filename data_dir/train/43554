#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>
#include <assert.h>

#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

using namespace std;
typedef long long mt;

template<typename T>
constexpr mt infValue = std::is_same<T, int>::value ? 2000100007 : 8600000000000000007ll;
template<typename T>
constexpr mt maxValue = std::is_same<T, int>::value ? 1000000007 : 1000000000000000001ll;

#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= (b); ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

const mt INF = infValue<mt>;
const long long MOD = 998244353ll;// 1000000007ll;//1000000007ll;
const double EPS = 1e-6;
const mt MAX = maxValue<mt>;
using pr = pair<mt, mt>;

#define N 201050
#define K 8
#define P 3
#define M (N * N)
#define p2(x) ((((x) * (x)) % (MOD)))
#define mxy(x, y) ((((x) * (y)) % (MOD)))

mt gcd(mt a, mt b) {
	return b ? gcd(b, a % b) : a;
}

mt n;
int main(void)
{
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	scanf("%d", &n);
	mt sum = (n * (n + 1)) >> 1;
	repe(1, n, i) {
		if (gcd(sum - i, i) != 1) {
			puts("Yes");
			printf("1 %d\n", i);

			printf("%d ", n - 1);
			repe(1, n, j)
				if(j != i)printf("%d ", j);
			putc('\n', stdout);
			return  0;
		}
	}
	puts("No");

	return 0;
}