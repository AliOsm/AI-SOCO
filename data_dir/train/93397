#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
 
using namespace std;
using namespace __gnu_pbds;
 
#define debug(s) cerr << #s << " = " << s << '\n'
#define all(v) (v).begin(), (v).end()
#define mem(a,val) memset(a, val, sizeof a)
 
#define ff first
#define ss second
typedef long long ll;
 
//typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

int main() {
  int tc;
  scanf("%d", &tc);
  while (tc--) {
    int n, k;
    scanf("%d %d", &n, &k);
    if (k > n) {
      printf("NO\n");
      continue;
    }
    if ((n - (k - 1)) % 2 == 1) {
      printf("YES\n");
      for (int i = 0; i < k - 1; ++i) printf("1 ");
      int d = n - (k - 1);
      printf("%d\n", d);
      continue;
    }
    if (n & 1) {
      printf("NO\n");
      continue;
    }
    if (2 * k > n) {
      printf("NO\n");
      continue;
    }
    printf("YES\n");
    for (int i = 0; i < k - 1; ++i) printf("2 ");
    int d = n - (2 * (k - 1));
    printf("%d\n", d);
  }
}