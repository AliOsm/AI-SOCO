#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <iomanip>
#include <vector>
#include <cstring>
#include <string>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <list>

#include <cmath>
#include <algorithm>
#include <cassert>
#include <bitset>
#include <complex>
#include <climits>
#include <functional>
using namespace std;

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ll, ll> l4;
typedef pair<double, double> dd;
#define mp make_pair
#define pb push_back

#define debug(x) cerr << #x << " = " << x << " "


const ll L = 840, N = 8, maxn = N*L;
ll d[N+1][maxn+1];
inline void Max(ll &a, ll b)
{
    if (a < b) a = b;
}
int main()
{
    ll w;
    scanf("%lld", &w);
    memset(d[0], -1, sizeof(d[0]));
    d[0][0] = 0;
    for (int i = 1; i <= N; ++i)
    {
        ll x; scanf("%lld", &x);
        ll mod = L/i;
        memcpy(d[i], d[0], sizeof(d[i]));
        for (ll k = min(mod-1, x); k >= 0; --k)
        {
            for (ll prev = maxn-k*i; prev >= 0; --prev)
                if (d[i-1][prev] >= 0)
                    Max(d[i][prev+k*i], d[i-1][prev] + (x-k)/mod);
        }
    }
    ll ans = 0;
    for (ll r = min(maxn, w); r >= 0; --r)
    {
        ll left = w-r;
        ll cnt = min(d[N][r], left/L);
        Max(ans, cnt*L+r);
    }
    printf("%lld\n", ans);
    
}
