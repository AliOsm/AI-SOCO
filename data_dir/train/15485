#include<bits/stdc++.h>
#define ll long long
#define pii pair<int,int>
#define piii pair<int,pair<int,int> >
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define SIZE 10000002
#define MOD (ll)1000000007
using namespace std;

inline ll getnum()
{
    char c = getchar();
    ll num,sign=1;
    for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
    for(num=0;c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}

int A[14];
char S[13];
int primes[]={0,11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47};

int main()
{
    int tot=0;
    
    puts("2");
    fflush(stdout);
    gets(S+1);
    if(S[1]=='y')A[2]=1,tot++;
    
    puts("3");
    fflush(stdout);
    gets(S+1);
    if(S[1]=='y')A[3]=1,tot++;
    
    puts("5");
    fflush(stdout);
    gets(S+1);
    if(S[1]=='y')A[5]=1,tot++;
    
    puts("7");
    fflush(stdout);
    gets(S+1);
    if(S[1]=='y')A[7]=1,tot++;
    
    if(tot==0)
    {
        puts("prime");
        fflush(stdout);
        return 0;
    }
    if(tot>=2)
    {
        puts("composite");
        fflush(stdout);
        return 0;
    }
    
    int flag=0;
    
    for(int i=1;i<=11;i++)
    {
        printf("%d\n",primes[i]);
        fflush(stdout);
        gets(S+1);
        
        if(S[1]=='y')
        {
            puts("composite");
            fflush(stdout);
            return 0;
        }
    }
    
    for(int i=1;i<=10;i++)
    {
        if(A[i])
        {
            printf("%d\n",i*i);
            fflush(stdout);
            gets(S+1);
            
            if(S[1]=='y')
            {
                puts("composite");
                fflush(stdout);
                return 0;
            }
            else
            {
                puts("prime");
                fflush(stdout);
                return 0;
            }
        }
    }
}