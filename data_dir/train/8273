#include <bits/stdc++.h>
using namespace std;
#define clr(i, j)     memset(i, j, sizeof(i))
typedef long long     ll;
typedef long double   ld;
ll n, c[100001], inc[100001], dc[100001];
vector<ll> adj[100001];
void dfs(int i, int p)
{
    for(int j=0; j<adj[i].size(); j++)
    {
        if(adj[i][j] == p)
            continue;
        dfs(adj[i][j], i);
    }
    ll pog = c[i] + inc[i] - dc[i];
    if(pog > 0)
        dc[i] += pog;
    else
        inc[i] += -pog;
    inc[p] = max(inc[i], inc[p]);
    dc[p] = max(dc[p], dc[i]);
}
int main()
{
    cin >> n;
    for(int i=0; i<n-1; i++)
    {
        int x, y;
        cin >> x >> y;
        adj[x].push_back(y);
        adj[y].push_back(x);
    }
    for(int i=1; i<=n; i++)
        cin >> c[i];
    dfs(1, 0);
    cout << ll(inc[1] + dc[1]) << endl;
}
