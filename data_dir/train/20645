//#pragma GCC optimize("unroll-loops")
//#pragma GCC optimize("O3")
#include<bits/stdc++.h>

using ll = long long int;
using ull = unsigned long long int;
using dd = double;
using ldd = long double;

namespace Mods {

const int mod197 = 1e9 + 7;
const int mod199 = 1e9 + 9;
const int modfft = 998244353;
int MOD = mod197;

void Hplus(int& h, int b, int mod = MOD) {
    h += b;
    if (h > mod)
        h -= mod;
}

void Hminus(int& h, int b, int mod = MOD) {
    h -= b;
    if (h < 0)
        h += mod;
}

void Hmuliply(int& h, int b, int mod = MOD) {
    h = (1LL * h * b) % mod;
}

ll binPow(ll a, ll n, int mod = MOD) {
    ll ans = 1;
    while (n > 1) {
        if (n & 1)
            ans = ans * a % mod;
        n >>= 1;
        a = a * a % mod;
    }
    if (n)
        ans = ans * a % mod;
    return ans;
}
}

namespace someUsefull {
template<typename T1, typename T2>
inline void checkMin(T1& a, T2 b) {
    if (a > b)
        a = b;
}

template<typename T1, typename T2>
inline void checkMax(T1& a, T2 b) {
    if (a < b)
        a = b;
}
}

//name spaces
using namespace std;
using namespace Mods;
using namespace someUsefull;
//end of name spaces

//defines
#define ff first
#define ss second
#define all(x) (x).begin(), (x).end()

#define NO cout << "NO" << '\n';
#define No cout << "No" << '\n';
#define YES cout << "YES" << '\n';
#define Yes cout << "Yes" << '\n';
//end of defines


//debug defines
#ifdef HOME
    #define debug(x) cout << #x << " " << x << endl;
    #define debug_p(x) cout << #x << " " << x.ff << " " << x.ss << endl;
    #define debug_v(x) {cout << #x << " "; for (auto ioi : x) cout << ioi << " "; cout << endl;}
    #define debug_vp(x) {cout << #x << " "; for (auto ioi : x) cout << '[' << ioi.ff << " " << ioi.ss << ']'; cout << endl;}
    #define debug_v_v(x) {cout << #x << "/*\n"; for (auto ioi : x) { for (auto ioi2 : ioi) cout << ioi2 << " "; cout << '\n';} cout << "*/" << #x << endl;}
    int jjj;
    #define wait() cin >> jjj;
    #define PO cout << "POMELO" << endl;
    #define OL cout << "OLIVA" << endl;
    #define gen_clock(x) ll x = clock(); cout << "Clock " << #x << " created" << endl;
    #define check_clock(x) cout << "Time spent in " << #x << ": " << clock() - x << endl; x = clock();
    #define reset_clock(x) x = clock();
    #define say(x) cout << x << endl;
    #define check(x) {if (!(x)) cout << #x << " " << "was failed!" << endl;}
    #define castom(x) {x;}
#else
    #define debug(x) 0;
    #define debug_p(x) 0;
    #define debug_v(x) 0;
    #define debug_vp(x) 0;
    #define debug_v_v(x) 0;
    #define wait() 0;
    #define PO 0;
    #define OL 0;
    #define gen_clock(x) 0;
    #define check_clock(x) 0;
    #define reset_clock(x) 0;
    #define say(x) 0;
    #define check(x) 0;
    #define castom(x) 0;
#endif // HOME
//end of debug defines

bool hm(pair<ll, ll> a, pair<ll, ll> b, ll t) {
    return a.ss - b.ss <= t;
}

ll gd(pair<ll, ll> a, pair<ll, ll> b) {
    return abs(a.ff - b.ff) + abs(a.ss - b.ss);
}

void solve() {
    ll x, y, ax, ay, bx, by;
    ll xs, ys, t;
    cin >> x >> y >> ax >> ay >> bx >> by >> xs >> ys >> t;
    int ans = 0;
    vector<pair<ll, ll>> have;
    have.push_back({x, y});
    while (hm(have.back(), {xs, ys}, t)) {
        have.push_back({have.back().ff * ax + bx, have.back().ss * ay + by});
    }
    debug_vp(have);
    for (int i = 0; i < have.size(); ++i) {
        ll dist = gd(have[i], {xs, ys});
        if (dist > t)
            continue;
        checkMax(ans, 1);
        for (int j = i + 1; j < have.size(); ++j) {
            dist += gd(have[j], have[j - 1]);
            if (dist <= t) {
                checkMax(ans, j - i + 1);
            } else {
                break;
            }
        }
        dist = gd(have[i], {xs, ys});
        for (int j = i - 1; j >= 0; --j) {
            dist += gd(have[j], have[j+ 1]);
            if (dist <= t) {
                checkMax(ans, i - j + 1);
            }
            else {
                break;
            }
        }
    }
    cout << ans;

}

signed main() {
    ios_base::sync_with_stdio(false);
    cout.tie(0);
    cin.tie(0);
    int t;
    t = 1;
    //cin >> t;
    for (int i = 0; i < t; ++i) {
        solve();
    }
    return 0;

}
/*



*/
