#include <bits/stdc++.h>
using namespace std;

int A[36];
vector<int> X, Y;

int main() {

    int N, M;
    cin >> N >> M;

    for(int i=0; i<N; i++)
        cin >> A[i];

    int block1 = N/2;
    int block2 = N - block1;

    for(int i=0; i<(1<<block1); i++)
    {
        int sum = 0;

        for(int j=0; j<block1; j++)
            if(i & (1<<j))
                sum = (sum + A[j]) % M;

        X.push_back(sum);
    }

    for(int i=0; i<(1<<block2); i++)
    {
        int sum = 0;

        for(int j=0; j<block2; j++)
            if(i & (1<<j))
                sum = (sum + A[block1+j]) % M;

        Y.push_back(sum);
    }

    int ans = 0;
    sort(Y.begin(), Y.end());

    for(int i=0; i<X.size(); i++)
    {
        int tmpAns = X[i];
        int indx = lower_bound(Y.begin(), Y.end(), M - X[i]) - Y.begin() - 1;

        if(indx >= 0)
            tmpAns += Y[indx];

        ans = max(ans, tmpAns);
        ans = max(ans, (X[i] + Y[ Y.size()-1 ])%M);
    }

    printf("%d\n", ans);
    return 0;
}
