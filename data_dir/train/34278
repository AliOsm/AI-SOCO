#include <bits/stdc++.h>
#define pb push_back
#define sc second
#define fr first
#define mk make_pair
#define ll long long
#define ii pair<int,int>
#define mp make_pair
using namespace std;
int d,s;
int dp[5005][505];
ii par[5005][505];
int par2[5005][505];
int bfs(int x , int rem)
{
    // v is pairs
    for(int i=0;i<=5000;i++)
    {
        for(int j=0;j<=500;j++)
            {
                dp[i][j] = 1e9;
                par2[i][j] = 1e9;
            }
    }
    dp[x][rem] = 0;
    queue < ii > q ;
    q.push(mp(x,rem));
    while(!q.empty())
    {
        ii u = q.front();
        q.pop();

        for(int j=0; j<=9; j++)
        {
            int x2 = u.fr;
            int rem2 = u.sc;
            x2 = x2-j;
            rem2 = (rem2*10+j)%d;
            if(dp[x2][rem2] == 1e9)
            {
                dp[x2][rem2] = 1+dp[u.fr][u.sc];
                par[x2][rem2] = u;
                par2[x2][rem2] = min(j,par2[x2][rem2]);
                q.push(mp(x2,rem2));
            }
        }
    }
    vector < int > v;
    if(dp[0][0] == 1e9)
    {
        cout<<-1;
        return 0;
    }
    ii temp = mp(0,0);
    int cnt = dp[0][0];
    while(cnt)
    {
        v.push_back(par2[temp.fr][temp.sc]);
        temp = par[temp.fr][temp.sc];
        cnt--;
     }
    reverse(v.begin(),v.end());
    for(int i=0;i<v.size();i++)
        cout<<v[i];
 ///   cout<<dp[0][0]<<endl;
}
int main()
{
   cin>>d>>s;

   bfs(s,0);

}
