#include <bits/stdc++.h>
using namespace std;
int n;
map<string,int> m;
string st;
int main(){
    ios_base::sync_with_stdio(false);
    cin>>n;
    for(int i=0,c;i<n;++i){
        cin>>c>>st;
        sort(st.begin(),st.end());
        if(m.count(st)){
            m[st] = min(m[st],c);
        }else{
            m[st] = c;
        }
    }
    if(m.count("AB")){
        if(m.count("A")){
            m["A"] = min(m["A"],m["AB"]);
        }else{
            m["A"] = m["AB"];
        }
        if(m.count("B")){
            m["B"] = min(m["B"],m["AB"]);
        }else{
            m["B"] = m["AB"];
        }
    }
    if(m.count("AC")){
        if(m.count("A")){
            m["A"] = min(m["A"],m["AC"]);
        }else{
            m["A"] = m["AC"];
        }
        if(m.count("C")){
            m["C"] = min(m["C"],m["AC"]);
        }else{
            m["C"] = m["AC"];
        }
    }
    if(m.count("BC")){
        if(m.count("B")){
            m["B"] = min(m["B"],m["BC"]);
        }else{
            m["B"] = m["BC"];
        }
        if(m.count("C")){
            m["C"] = min(m["C"],m["BC"]);
        }else{
            m["C"] = m["BC"];
        }
    }
    if(m.count("A")&&m.count("B")){
        if(m.count("AB")){
            m["AB"] = min(m["AB"],m["A"]+m["B"]);
        }else{
            m["AB"] = m["A"] + m["B"];
        }
    }
    if(m.count("A")&&m.count("C")){
        if(m.count("AC")){
            m["AC"] = min(m["AC"],m["A"]+m["C"]);
        }else{
            m["AC"] = m["A"] + m["C"];
        }
    }
    if(m.count("B")&&m.count("C")){
        if(m.count("BC")){
            m["BC"] = min(m["BC"],m["B"]+m["C"]);
        }else{
            m["BC"] = m["B"] + m["C"];
        }
    }
    if(m.count("AB")&&m.count("C")){
        if(m.count("ABC")){
            m["ABC"] = min(m["ABC"],m["AB"]+m["C"]);
        }else{
            m["ABC"] = m["AB"] + m["C"];
        }
    }
    if(m.count("AC")&&m.count("B")){
        if(m.count("ABC")){
            m["ABC"] = min(m["ABC"],m["AC"]+m["B"]);
        }else{
            m["ABC"] = m["AC"] + m["B"];
        }
    }
    if(m.count("BC")&&m.count("A")){
        if(m.count("ABC")){
            m["ABC"] = min(m["ABC"],m["BC"]+m["A"]);
        }else{
            m["ABC"] = m["BC"] + m["A"];
        }
    }
    if(m.count("ABC"))
        cout<<m["ABC"];
    else
        cout<<-1;
}