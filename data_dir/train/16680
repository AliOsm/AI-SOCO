#include <cstdio> 

#define N (1 << 20)
#define mod 1000000007 

int n, a[N], f[N];
long long p[N];

long long solve ()
{
	for (int i = 0; i < 20; i++)
		for (int mask = 0; mask < N; mask++)
			if ((1 << i) & mask)
				f[(1 << i) ^ mask] += f[mask];

	p[0] = 1LL;
	for (int i = 1; i < N; i++)
		p[i] = p[i-1] * 2LL % mod;

	long long ans = 0;

	for (int mask = 1; mask < N; mask++)
	{
		int bit = __builtin_popcount (mask);

		if (bit % 2 != 0)
			ans += (p[f[mask]] - 1);
		else
			ans -= (p[f[mask]] - 1);

		ans %= mod;
		if (ans < 0)
			ans += mod;
	}

	ans = (p[n] - 1 - ans) % mod;
	if (ans < 0)
		ans += mod;

	return ans;
	
}

int main ()
{
	scanf ("%d", &n);
	for (int i = 1; i <= n; i++)
	{
		scanf ("%d", &a[i]);
		f[a[i]]++;
	}

	printf ("%lld\n", solve());
	return 0;
}