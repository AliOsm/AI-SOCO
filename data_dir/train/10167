#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <climits>
#include <unordered_map>
#include <iterator> 
using namespace std;
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define inf32 INT_MAX
#define inf64 LLONG_MAX
#define PI acos(-1)
#define cos45 cos(PI/4)
#define ld long double
#define inf 1e14
const int mod = (1e9) + 7;
const double eps = 1e-9;
const int siz = 1e5 + 5, siz2 = 1e5 + 5;
int n, m;
vector<int> adj[siz];
int gcd(int a, int b) {
	return b == 0 ? a : gcd(b, a%b);
}
int main()
{
	scanf("%d%d", &n, &m);
	if (m < n - 1) {
		printf("Impossible\n");
		return 0;
	}
	int tot = 0;
	for (int i = 1; i < n; i++) {
		adj[i].push_back(i + 1);
		tot++;
	}
	bool done = true;
	if (m != n - 1) {
		done = false;
		for (int i = 1; i < n - 1; i++) {
			for (int j = i + 2; j <= n; j++) {
				if (gcd(i, j) == 1) {
					adj[i].push_back(j);
					tot++;
					if (tot == m) {
						done = true;
						break;
					}
				}
			}
			if (done) {
				break;
			}
		}
	}
	if (done) {
		printf("Possible\n");
		for (int i = 1; i <= n; i++) {
			for (auto v : adj[i]) {
				if (v > i) {
					printf("%d %d\n", i, v);
					tot--;
					if (!tot) {
						return 0;
					}
				}
			}
		}
	}
	else {
		printf("Impossible\n");
	}
	return 0;
}