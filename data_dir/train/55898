#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ldbl;
typedef pair<int, int> pii;
typedef pair<unsigned, unsigned> puu;
typedef pair<ll, ll> pll;
typedef pair<ull, ull> pull;
typedef vector<int> vi;
typedef vector<unsigned> vu;
typedef vector<ll> vll;
typedef vector<ull> vull;
typedef vector<pii> vpii;
typedef vector<puu> vpuu;
typedef vector<pll> vpll;
typedef vector<pull> vpull;
typedef vector<string> vstr;
typedef vector<double> vdbl;
typedef vector<ldbl> vldbl;
#define pb push_back
#define ppb pop_back
#define pfr push_front
#define ppfr pop_front
#define emp emplace
#define empb emplace_back
#define be begin
#define rbe rbegin
#define all(x) (x).be(), (x).end()
#define rall(x) (x).rbe(), (x).rend()
#define fst first
#define fir first
#define sec second
#define mkp make_pair
#define brif(cond) if (cond) break
#define ctif(cond) if (cond) continue
#define retif(cond) if (cond) return
static inline void canhazfast() {ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}
template<typename T> T gcd(T a, T b) {return b == 0 ? a : gcd(b, a%b);}
template<typename T> T extgcd(T a, T b, T &x, T &y)
{
    T x0 = 1, y0 = 0, x1 = 0, y1 = 1;
    while (b) {
        T q = a/b; a %= b; swap(a, b);
        x0 -= q*x1; swap(x0, x1);
        y0 -= q*y1; swap(y0, y1);
    }
    x = x0; y = y0; return a;
}
static inline int ctz(unsigned x) {return __builtin_ctz(x);}
static inline int ctzll(ull x) {return __builtin_ctzll(x);}
static inline int clz(unsigned x) {return __builtin_clz(x);}
static inline int clzll(ull x) {return __builtin_clzll(x);}
static inline int popcnt(unsigned x) {return __builtin_popcount(x);}
static inline int popcntll(ull x) {return __builtin_popcountll(x);}
static inline int bsr(unsigned x) {return 31^clz(x);}
static inline int bsrll(ull x) {return 63^clzll(x);}

ll calc(const char s[])
{
    int d = 0;
    ll res = 0;
    for (int i = 0; s[i]; ++i) {
        if (s[i] == '(') res += d++;
        else --d;
    }
    return res;
}

int main()
{
    canhazfast();

    static char ans[600016];
    int n, b, e;
    ll k, cur = 0;

    cin >> n >> k;
    retif(2*k > ll(n-1)*n) cout << "Impossible", 0;
    b = 0, e = n;
    while (b < e) {
        int m = (b+e+1)/2;
        ll c = ll(m-1)*m/2+ll(n-m)*m;
        if (c > k) e = m-1;
        else b = m;
    }
    cur = ll(b-1)*b/2+ll(n-b)*b;
    e = 2*n-b;
    for (int i = 0; i < b; ++i) ans[i] = '(';
    for (int i = b; i < e; i += 2) ans[i] = '(', ans[i+1] = ')';
    for (int i = e; i < 2*n; ++i) ans[i] = ')';
    //cerr << "ini = " << ans << "\ncur = " << cur << '\n';
    //assert(k-cur < n-b);
    for (int i = b+2; i < e && cur < k; i += 2) {
        swap(ans[i-1], ans[i]);
        ++cur;
    }
    //assert(cur == k);
    //assert(calc(ans) == k);
    cout << ans;

    return 0;
}
