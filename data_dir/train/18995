#include <bits/stdc++.h>

using namespace std;

int dp[105][105][200][2];
struct node{
    char ch;
    int v;
};
vector<node>vv[105];

int solve(int u, int U, char ch,int pl){

    if(dp[u][U][ch][pl]!=-1)return dp[u][U][ch][pl];
    int ret=pl^1;
    if(pl==0){

        for(int i=0; i<vv[u].size(); i++){

            int v=vv[u][i].v;
            char CH=vv[u][i].ch;
            if(CH>=ch){

                ret=solve(v, U, CH, pl^1);
                if(!ret)return dp[u][U][ch][pl]=ret;

            }


        }
        return dp[u][U][ch][pl]=ret;

    }else{

         for(int i=0; i<vv[U].size(); i++){

            int v=vv[U][i].v;
            char CH=vv[U][i].ch;
            if(CH>=ch){

                ret=solve(u, v, CH, pl^1);
                if(ret)return dp[u][U][ch][pl]=ret;

            }


        }
        return dp[u][U][ch][pl]=ret;


    }

}

int main(){

    int n,m;
    scanf("%d %d", &n, &m);

    for(int i=1; i<=m; i++){
        int u, v, ch;

        scanf("%d %d", &u, &v);
        getchar();
        scanf("%c", &ch);
        node X;
        X.v=v;
        X.ch=ch;
        vv[u].push_back(X);
    }
    memset(dp,-1,sizeof(dp));

    for(int i=1; i<=n; i++){
        for(int j=1; j<=n; j++){

   //         if(dp[i]['0']>dp[j]['0'])printf("A");
     //       else printf("B");
            if(solve(i,j, '0', 0) == 0)printf("A");
            else printf("B");
        }
        printf("\n");
    }

}
