#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <sstream>
#include <queue>
#include <deque>
#include <bitset>
#include <iterator>
#include <list>
#include <stack>
#include <map>
#include <set>
#include <functional>
#include <numeric>
#include <utility>
#include <iomanip>
#include <limits>
#include <time.h>
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> ii;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--) {
        ll n, l, r;
        cin >> n >> l >> r;
        l--, r--;
        ll size = r - l + 1;
        vector<int> ans;
        for (ll i = 1; i <= n - 1; i++) {
            ll cost = 2 * (n - i);
            ll tmp_l = l - cost;
            if (tmp_l < 0) {
                for (ll j = i; j <= n; j++) {
                    for (ll k = j + 1; k <= n; k++) {
                        l--;        
                        if (l < 0) ans.push_back(j);
                        if (ans.size() == size) break;
                        l--;
                        if (l < 0) ans.push_back(k);
                        if (ans.size() == size) break;
                    }
                    if (ans.size() == size) break;
                }
                break;
            }
            l -= cost;
        }
        if (ans.size() != size) ans.push_back(1);
        for (const auto &each : ans) cout << each << " ";
        cout << '\n';
    }
    return 0;
}

