#include <iostream>
#include <cmath>
#include <algorithm>
#include <vector>

using namespace std;

typedef long long ll;

const ll N = 1e5 + 100;
const ll MOD = 1e9 + 7;

vector<ll> v, v2;
ll a[N];

ll pow(ll a, ll b)
{
	if (b == 0)
		return 1;
	ll x = pow(a, b/2);
	return (b & 1) ? x * x % MOD * a % MOD : x * x % MOD;
}

int main()
{
	ios::sync_with_stdio(false);

	ll n;
	cin >> n;

	for (ll i=0; i<n; i++)
	{
		ll t;
		cin >> t;
		a[t]++;
	}

	for (ll i=N-2; i>=0; i--)
		a[i] += a[i+1];

	ll sum = 0;

	for (int i=N-1; i>=1; i--)
	{
		v.clear();
		v2.clear();

		for (ll j=1; j*j<=i; j++)
			if (i % j == 0)
			{
				v.push_back(j);
				if (i/j != j)
					v2.push_back(i/j);
			}

		for (ll j=ll(v2.size())-1; j>=0; j--)
			v.push_back(v2[j]);


		ll ans = 1;
		ll used = 0;

		//cout << i << " : " << v.size() << " " << a[i] << " " << sum << "\n";

		for (ll j=ll(v.size())-1; j>=0; j--)
		{
			ll cnt = j + 1;
			ll val = v[j];
			ll out = pow(cnt, a[val] - used);

			if (j == v.size() - 1)
			{
				out -= pow(cnt-1, a[val] - used);
				out %= MOD;
				if (out < 0)
					out += MOD;
			}

			used = a[val];
			ans *= out;
			ans %= MOD;
		}

		sum += ans;
		sum %= MOD;
	}

	cout << sum;

	return 0;
}