#include<bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;
using namespace std;

#define fr first
#define sc second
#define memset(X,Y) memset(X,Y,sizeof X)
#define all(X) X.begin(),X.end()
#define SZ size()
#define mp make_pair
#define pb push_back
#define error(args...){vector<string> _v = split(#args,','); err(_v.begin(),args); }
vector <string> split(const string &s,char c){
    vector<string> v;
    stringstream ss(s);
    string x;
    while(getline(ss,x,c))
        v.emplace_back(x);
    return move(v);
}
void err(vector<string>:: iterator it){}
template<typename T,typename ... Args>
void err(vector<string>::iterator it, T a, Args ... args){
    cerr << it->substr((*it)[0] == ' ',it->length())
         << " = " << a <<" " ;
    err(++it,args...);
}
template <typename T>
using order_set = tree<T, null_type, less<T>, rb_tree_tag,
    tree_order_statistics_node_update>;

typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vi;
double pi=acos(-1);
const ll N = 5 * (1e5) + 10,M = 1e6,mod=1e9 + 7,K=30;

ll OO = 1e18;
int a,b,c,n;

int main(){
    cin>>a>>b>>c>>n;
    int ans=n-(a+b-c);
    if(ans<1)ans=-1;
    if(n==0)ans=-1;
    if(c>a||c>b)ans=-1;
    if(a>n||b>n)ans=-1;
    cout<<ans;

}

/*

*/
