/*||>>>> Praveen Ojha <<<<>>>> 11 June 2019 <<<<>>>> 07:29:02 <<<<||*/
// #pragma GCC optimize("Ofast") //(Very Fast but Inaccurate)
// #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native") //(Small operations in many loops)
// #pragma GCC optimize("unroll-loops")
// #pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("O3")
#include <bits/stdc++.h>
using namespace std;
#define int long long
#define F first
#define S second
#define mod 1000000007
#define inf 1e18+5
#define sz(x) (int)x.size()
#define PI 3.141592653589793238510
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define __ ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define vi vector<int>
#define vpii vector<pair<int,int> > 
#define vvi vector<vector<int> >
#define PRINT_TIME cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s." <<endl;
#define sim template < class c
#define ris return * this
#define dor > debug & operator <<
#define eni(x) sim > typename   enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {
sim > struct rge { c b, e; };
sim > rge<c> range(c i, c j) { return rge<c>{i, j}; }
sim > auto dud(c* x) -> decltype(cerr << *x, 0);
sim > char dud(...);
struct debug {
#ifdef LOCAL
~debug() { cerr << endl; }
eni(!=) cerr << boolalpha << i; ris; }
eni(==) ris << range(begin(i), end(i)); }
sim, class b dor(pair < b, c > d) {
  ris << "(" << d.first << ", " << d.second << ")";
}
sim dor(rge<c> d) {
  *this << "[";
  for (auto it = d.b; it != d.e; ++it)
    *this << ", " + 2 * (it == d.b) << *it;
  ris << "]";
}
#else
sim dor(const c&) { ris; }
#endif
};
#define imie(...) " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] "
typedef long double ld;
typedef pair<int,int> pii;
//Read Problems Carefully & Check for corner cases N=0,1 ?
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
const int N=1000005;
int pw[N];
int32_t main(){__
	string s;
	cin>>s;
	int n=s.length();
	string tt;
	int cnt[4]={1,1,1,1};
	int cnt0=0;
	for(int i=0;i<n;i++){
		if(s[i]=='1' && cnt[0])
		{
			cnt[0]--;
			continue;
		}
		if(s[i]=='8' && cnt[1])
		{
			cnt[1]--;
			continue;
		}
		if(s[i]=='6' && cnt[2])
		{
			cnt[2]--;
			continue;
		}
		if(s[i]=='9' && cnt[3])
		{
			cnt[3]--;
			continue;
		}
		if(s[i]=='0')
		{
			cnt0++;
			continue;
		}
		tt+=s[i];
	}
	n-=(4+cnt0);
	int t=1;
	for(int i=0;i<n;i++){
		pw[i]=t;
		t=(t*10)%7;
	}
	int rem=0;
	for(int i=0;i<n;i++){
		rem+=(pw[n-i-1]*(tt[i]-'0'))%7;
	}
	// reverse(all(tt));
	map <int,string> mp;
	s="1689";
	do{
		mp[stoll(s)%7]=s;
	}while(next_permutation(all(s)));
	rem*=4;
	rem%=7;
	// debug()<< imie(tt);
	for(int i=0;i<7;i++){
		if((rem+i)%7==0){
			cout<<tt;
			cout<<mp[i];
			for(int j=0;j<cnt0;j++)
				cout<<'0';
			cout<<"\n";
			return 0;
		}
	}
	cout<<0<<"\n";
return 0;
}