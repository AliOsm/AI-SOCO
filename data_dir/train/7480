#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

typedef long long ll;

ll dp[2][1<<20];

struct Friend {
	int id, bm;
	ll x, k;
	bool operator< (Friend f) const {
		return k < f.k || (k == f.k && id < f.id);
	}
} fs[100];

int main() {
	int n, m, mi, bm, pid, all_mask;
	ll x, k, ans;
	ll b;

	scanf("%d%d%I64d", &n, &m, &b);
	for (int i = 0; i < n; i++) {
		scanf("%I64d%I64d%d", &x, &k, &mi);
		bm = 0;
		while (mi--) {
			scanf("%d", &pid);
			pid--;
			bm |= (1 << pid);
		}
		fs[i] = (Friend) {i, bm, x, k};
	}

	sort(fs, fs + n);
	all_mask = (1 << m) - 1;
	ans = 0x7fffffffffffffffll;

	for (int i = 0; i <= all_mask; i++)
		dp[0][i] = 0x7fffffffffffffffll;

	dp[0][0] = 0ll;
	dp[0][fs[0].bm] = fs[0].x;
	if (dp[0][all_mask] != 0x7fffffffffffffffll)
		ans = min(ans, dp[0][all_mask] + fs[0].k * b);

	for (int i = 1; i < n; i++) {
		for (int j = 0; j <= all_mask; j++)
			dp[i&1][j] = dp[i&1^1][j];
		for (int j = 0; j <= all_mask; j++)
			if (dp[i&1^1][j] != 0x7fffffffffffffffll)
				dp[i&1][j|fs[i].bm] = min(dp[i&1][j|fs[i].bm], dp[i&1^1][j] + fs[i].x);
		if (dp[i&1][all_mask] != 0x7fffffffffffffffll)
			ans = min(ans, dp[i&1][all_mask] + fs[i].k * b);
	}

	printf("%I64d\n", ans == 0x7fffffffffffffffll ? -1ll : ans);

	return 0;
}