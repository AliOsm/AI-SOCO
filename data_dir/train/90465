# include <bits/stdc++.h>

using namespace std;

const int N = 105;
const int M = 1e6 + 2;

int n, m, a[N][N], p[M], d[N][N];
int used[N];
vector <int> ans;

int main(){
	cin >> n;
	
	for(int i = 1; i <= n; i ++)
		for(int j = 1; j <= n; j ++){
			char ch;
			cin >> ch;
			a[i][j] = ch - '0';
		}
			
	scanf("%d", &m);
	
	for(int i = 1; i <= m; i ++)
		scanf("%d", p+i);
	
	for(int i = 1; i <= n; i ++){
		queue <int> q;
		memset(used, 0, sizeof(used));
		used[i] = 1;
		q.push(i);
		while(!q.empty()){
			int v = q.front();
			q.pop();
			for(int j = 1; j <= n; j ++){
				if(a[v][j] && !used[j]){
					used[j] = 1;
					d[i][j] = d[i][v] + 1;
					q.push(j);
				}
			}
		}
	}
	
	for(int i = 1; i <= m; i ++){
		int l = i, r = min(i + n, m);
		while(l <= r){
			int md = (l + r) >> 1;
			if( d[ p[i] ][ p[md] ] == (md - i) )
				l = md + 1;
			else 
				r = md - 1;
		}
		ans.push_back(p[i]);
		l --;
		i = max(i, l - 1);
	}
	
	cout << ans.size() << endl;
	
	for(int i = 0; i < ans.size(); i ++)
		cout << ans[i] << " ";
}