#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
#include <random>
#include <cassert>
#include <sstream>
using namespace std;
#define F first
#define S second
#define pb push_back
#define MP make_pair
#define ALL(x) begin(x), end(x)
#define SZ(x) (int)(x).size()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define rep1(i, a, b) for(int i = a; i < b; ++i)
#define per1(i, a, b) for(int i = a; i >= b; --i)
#define IOS ios_base::sync_with_stdio(0); cin.tie(0)
#define ln(i, n) " \n"[i == n]
typedef long long LL;
typedef long double LDB;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
//////////////////////
const long double eps = 1e-13;
const long double PI = acos(-1);
const int INF = (int)1e9;
const LL  INFF = (LL)1e18;
const int mod = (int)1e9 + 7;
const int MXN = (int)1e6 + 7;
inline LL add(LL v1, LL v2){
	v1 += v2;
	if (v1 >= mod) v1 -= mod;
	if (v1 < 0) v1 += mod;
	return v1;
}
char s[MXN];
int a[3];
int sum[MXN][3];
int main(){
	int n; scanf("%d %s", &n, s + 1);
	for (int i = 1; i <= n; i++) {
		a[ s[i] - '0' ]++;
	}
	for (int i = n; i >= 1; i--) {
		for (int j = 0; j < 3; j++)
			sum[i][j] = sum[i+1][j];
		sum[i][ s[i] - '0' ]++;
	}
	for (int i = 1; i <= n; i++) {
		int v = s[i] - '0';
		if (a[v] > n / 3) {
			if (v == 0) {
				if (sum[i][0] == a[v] - n / 3) {
					a[v]--;
					if (a[1] < n / 3) {
						a[1]++;
						s[i] = '1';
					} else {
						a[2]++;
						s[i] = '2';
					}
				}
			} else if(v == 1) {
				if (a[0] < n / 3) {
					a[1]--;
					a[0]++;
					s[i] = '0';
				} else if (sum[i][1] == a[v] - n / 3) {
					a[1]--;
					a[2]++;
					s[i] = '2';
				}
			} else {
				if (a[0] < n / 3) {
					a[0]++;
					a[2]--;
					s[i] = '0';
				} else {
					a[1]++;
					a[2]--;
					s[i] = '1';
				}
			}
		}
	}
	printf("%s\n", s + 1);
	return 0;
}
