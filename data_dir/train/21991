// copied by Nurstan Duisengaliev
// skatal
#include <bits/stdc++.h>
 
#define ll long long
#define all(x) x.begin(), x.end()
#define in insert
#define mp make_pair
#define F first
#define S second
#define ppf pop_front
#define pb push_back
#define ppb pop_back
#define pf push_front
#define pii pair <int, int>
#define boost() ios_base::sync_with_stdio(0), cin.tie(0)
#define sz(x) (int)x.size()
 
using namespace std;
 
const int N = (int)2e6 + 123;
const int mod = 998244353;
const ll INF = (ll)1e18 + 7;
int n;
ll f[N];      
ll binpow (int x, int y) {
	if (y == 0) return 1;
	if (y % 2 == 0) {
		ll o = binpow (x, y / 2);
		return (o * o) % mod;	
	}
	else return (binpow (x, y - 1) * x) % mod;
}
ll com (int n, int k) {
	return (f[n] * binpow (f[k], mod - 2)) % mod;
}
void solve () {
	cin >> n;
	f[0] = 1;
	for (int i = 1; i <= n; i ++) {
		f[i] = f[i - 1] * i;
		f[i] %= mod;
	}
	ll sum = 0;
	for (int k = 1; k < n; k ++) {
		sum += com (n, k);
		sum %= mod;	
	}
	cout << ((((f[n] * n) % mod) + mod) - sum) % mod;
}   	
 
main () {
//	freopen (".in", "r", stdin);
//	freopen (".out", "w", stdout);
	boost ();
	int TT = 1;
//    cin >> TT;
	while (TT --) {
		solve ();
	}
	return 0;	
}