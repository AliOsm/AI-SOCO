#include <iostream>
#include <vector>
using namespace std;
typedef long long LL;
const int N = 100000 + 10;
int n,a[N];
int size[N], hson[N], par[N];
vector<int> g[N];
void FirstDFS(int u,int p){
    size[u] = 1; par[u] = p;
    int mxsiz = 0;
    for(auto v: g[u]) {
        if(v != p) {
            FirstDFS(v, u);
            size[u] += size[v];
            if (size[v] > mxsiz) {
                mxsiz = size[v], hson[u] = v;
            }
        }
    }
}
int cnt[N], ansMax;
LL ans[N], tmp;
bool vis[N];
void update(int u, int val) {
    cnt[a[u]] += val;
    if (val > 0 && cnt[a[u]] == ansMax) {
        tmp += a[u];
    }
    if (val > 0 && cnt[a[u]] > ansMax) {
        tmp = a[u]; ansMax = cnt[a[u]];
    }
    for (auto v: g[u]) {
        if (vis[v] == 0 && v != par[u]) {
            update(v, val);
        }
    }
}
void SecondDFS(int u,int isHson) {
    for(auto v: g[u]) {
        if (v != par[u] && v != hson[u]) {
            SecondDFS(v, 0);
        }
    }
    if (hson[u] > 0) {
        SecondDFS(hson[u], 1);
        vis[hson[u]] = 1;
    }
    update(u, 1);
    ans[u] = tmp;
    if (hson[u] > 0) {
        vis[hson[u]] = 0;
    }
    if (isHson == 0) {
        update(u, -1);
        tmp = ansMax = 0;
    }
}
int main() {
    scanf("%d",&n);
    for(int i=1;i<=n;i++) scanf("%d",&a[i]);
    for(int i=1;i<n;i++) {
        int u,v; 
        scanf("%d%d",&u,&v);
        g[u].push_back(v);
        g[v].push_back(u);
    }
    FirstDFS(1, 0);
    SecondDFS(1, 0);
    for(int i=1;i<=n;i++) {
        printf("%lld ", ans[i]);
    }
}


                    






