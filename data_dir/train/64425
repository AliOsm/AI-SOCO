/*
ID: essi
LANG: C++
TASK: .cpp
*/
// tnx for Sofia Melnyk,   great coder and my favorite competitive programmer
#include <bits/stdc++.h>
using namespace std;
#define sep ios::sync_with_stdio(0),cin.tie(0)
#define ll unsigned long long int
#define all(n) n.begin(), n.end()
const int MXI = 2e5+14;
vector <int> Tree[MXI];
vector<bool> use(MXI);
map<pair<int, int>, bool> edge;
//map<int ,bool> edge[MXI];
int main() {
    sep;
    int n, u, v; cin >> n;
    vector<int> a(n);
    for (int i = 1; i < n; ++i) {
    	cin >> u >> v;
    	Tree[u].emplace_back(v); Tree[v].emplace_back(u);
    	edge[{u,v}] = 1; edge[{v,u}] = 1;
    	//edge[u][v] = 1; edge[v][u] = 1;
    };

    for (int i = 0; i < n; ++i) cin >> a[i];
    use[1] = 1;
	if (a[0] != 1) {cout << "No\n"; return 0;};
	int ind = 1;
	for (int i = 0; i < n; ++i) {
		int l = a[i];
		int ch = 0;
		for (int adj: Tree[l])
			if (use[adj] == 0)
				++ch;
		for (int j = ind; j < ind + ch; ++j) {
			if (edge.count({l,a[j]}) == 0) {cout << "No\n"; return 0;};
			use[a[j]] = 1;
		};
		ind+= ch;
	}
	cout << "Yes\n";
    return 0;
}	