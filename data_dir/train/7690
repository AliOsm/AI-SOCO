// 21.04.2012        ABBYY001
//

/*

*/

# include <stdio.h>
# include <math.h>

const int N = 100001;

int n, m, k, l, r;
int p [N], kp;

void Print ();
void Primes (int * p);

int main ()
{
# ifndef ONLINE_JUDGE
   freopen ("input.txt", "r", stdin);
   freopen ("output.txt", "w", stdout);
# endif

   int i, j;

   scanf ("%d", &n);

//   Primes (p);
   k = (int) sqrt ((double) n) + 2;

   for ( i=2, m=n; i <= n; i++ )
   {
      if ( i > k ) { m += 1; break; }
      if ( n%i == 0 )
         m += n/i, n /= i, i--;
   }

   printf ("%d", m);

# ifndef ONLINE_JUDGE
//   Print ();
# endif

   return 0;
}

void Primes (int * p)   // calculate primes
{
   int i, j, k, ki, pj;
   bool ok;

   p [0] = 2, p [1] = 3, p [2] = 5, p [3] = 7, p [4] = 11, p [5] = 13;
   p [6] = 17, p [7] = 19, p [8] = 23, p [9] = 29, p [10] = 31;
   p [11] = 37, p [12] = 41, p [13] = 43, p [14] = 47, p [15] = 53;
   p [16] = 59, p [17] = 61, p [18] = 67, p [19] = 71, p [20] = 73;
   p [21] = 79, p [22] = 83, p [23] = 89, p [24] = 97, p [25] = 101;

   for ( i=26; i < N; i++ )
   {
      for ( k=p [i-1]+2; ; k+=2 )
      {
         ki = (int) sqrt ((double) k) + 2;
         for ( ok=true, j=0; pj = p [j], pj < ki; j++ )           // ??? p [j] < ki ???
            if ( k % pj == 0 )
               { ok = false; break;}
         if ( ok ) break;
      }
      p [i] = k;
   }
   kp = i;
}

void Print ()
{
   printf ("%d %d\n", kp, p [kp-1]);
}
