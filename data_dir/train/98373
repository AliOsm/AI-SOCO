#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <cassert>
#include <queue>
#include <bitset>
#include <ctime>
using namespace std;
#define forr(i, a, b) for(int i = (a); i < (int) (b); i++)
#define forn(i, n) forr(i, 0, n)
#define db(v) cerr << #v << " = " << v << endl
#define pb push_back
#define sz(x) ((int)x.size())
#define fst first
#define snd second
typedef long long ll;
typedef pair<int, int> ii;
const int MAXN=100500;
const ll INF=(ll)1e18;

int n,m,A[MAXN];
vector<int> g[MAXN];

ll P(int c, int id){
    vector<int> &r=g[id];
    ll ans=0;
    //~ printf("r = ");
    forn(i,sz(r)){
        //~ printf("%d ",r[i]);
        ans+=abs(r[i]-c);
    }
    //~ puts("");
    return ans;
}

int main(){
    while(scanf("%d%d",&n,&m)>=1){
        forn(i,MAXN)g[i].clear();
        forn(i,m){
            scanf("%d",&A[i]); --A[i];
        }
        forn(i,m){
            if(i-1>=0&&A[i-1]!=A[i]){
                g[A[i]].pb(A[i-1]);
            }
            if(i+1<m&&A[i+1]!=A[i]){
                g[A[i]].pb(A[i+1]);
            }
        }
        if(m<=2){
            puts("0");
            continue;
        }
        ll mn=INF;
        int mnid=-1;
        int to=-1;
        forn(i,n){
            //~ printf("Value %d gives %lld\n", i+1, P(i, i));
            int a=-1;
            int b=n-1;
            while(b-a>1){
                int c=(a+b)/2;
                if(P(c,i)<P(c+1,i)){
                    b=c;
                } else {
                    a=c;
                }
            }
            // HANDLE BOUNDARY CASES SEPARATELY...
            // THE LIST GOES LIKE: ... 0, 0, 0, 0, 1, 1, 1, 1, 1 ...
            int w=a+1;
            // OR: ALL ONES
            if(P(0,i)<P(1,i)){
                w=0;
            }
            ll k=P(w,i)-P(i,i);
            if(mn>k){
                mn=k;
                mnid=i;
                to=w;
            }
            //~ printf("After processing %d: mn=%lld, mnid=%d, to=%d\n",i,mn,mnid,to);
        }
        //~ printf("The solution is changing %d to %d\n", mnid+1,to+1);
        ll ans=0;
        forn(i,m-1){
            int a=A[i]==mnid?to:A[i];
            int b=A[i+1]==mnid?to:A[i+1];
            ans+=abs(a-b);
        }
        printf("%lld\n",ans);
    }
    return 0;
}
