#include<bits/stdc++.h>
#include<unordered_map>
using namespace std;
typedef double D;
typedef long long ll;
const ll mod=1e9+7;
const ll inf=(1ll<<60);
const int MX=1e5+9;
int n;
ll dp[MX],a[MX],b[MX],pos;
vector<ll>M,B;
bool bad(ll m1,ll b1,ll m2,ll b2,ll m3,ll b3){
    return 1.0*(b1-b3)*(m2-m1)<1.0*(b1-b2)*(m3-m1);
}
void add(ll m,ll b){
    while(M.size()>=2&&bad(M[M.size()-2],B[M.size()-2],M[M.size()-1],B[M.size()-1],m,b))
        M.pop_back(),B.pop_back();
    M.push_back(m);
    B.push_back(b);
}
ll query(ll x){
    if(pos>M.size()-1)pos=M.size()-1;
    while(pos+1<M.size()-1&&M[pos+1]*x+B[pos+1]<=M[pos]*x+B[pos])pos++;
    return M[pos]*x+B[pos];
}
int main(){
    scanf("%d",&n);
    for(int i=0;i<n;i++)scanf("%lld",&a[i]);
    for(int i=0;i<n;i++)scanf("%lld",&b[i]);
    dp[0]=0;
    add(b[0],0);
    for(int i=1;i<n;i++){
        dp[i]=query(a[i]);
        add(b[i],dp[i]);
    }
    cout<<dp[n-1]<<endl;
}
