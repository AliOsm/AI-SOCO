#include <bits/stdc++.h>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d %d", &a, &b)
#define sc3(a, b, c) scanf("%d %d %d", &a, &b, &c)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
vector<ii> vx;
vector<ii> vy;
vector<ii> carax, caray;
vector<int> VX, VY;
int n;
bool simula(int x, int y) {
  int coco = 0;
  for (int i = 0; i < carax.size(); i++) {
    if (carax[i].first <= x and carax[i].second >= x and caray[i].first <= y and
        caray[i].second >= y)
      coco++;
  }
  return coco >= (n - 1);
}
int main() {
  sc(n);
  for (int i = 0; i < n; i++) {
    int x1, y1;
    int x2, y2;
    sc2(x1, y1);
    sc2(x2, y2);
    vx.pb({x1, 0});
    vx.pb({x2, 1});
    vy.pb({y1, 0});
    vy.pb({y2, 1});
    carax.pb({x1, x2});
    caray.pb({y1, y2});
  }
  sort(vx.begin(), vx.end());
  sort(vy.begin(), vy.end());
  int dentro = 0;
  for (int i = 0; i < 2 * n; i++) {

    if (dentro >= n - 1) {
      VX.pb(vx[i].first);
    }

    if (vx[i].second == 0)
      dentro++;
    else
      dentro--;

    if (dentro >= n - 1) {
      VX.pb(vx[i].first);
    }
  }
  dentro = 0;
  for (int i = 0; i < 2 * n; i++) {

    if (dentro >= n - 1) {
      VY.pb(vy[i].first);
    }

    if (vy[i].second == 0) {
      dentro++;
    } else {
      dentro--;
    }
    if (dentro >= n - 1) {
      VY.pb(vy[i].first);
    }
  }
  for (int x : VX) {
    for (int y : VY) {
      if (simula(x, y)) {
        prie(x);
        pri(y);
        return 0;
      }
    }
  }
  assert(false);
}
