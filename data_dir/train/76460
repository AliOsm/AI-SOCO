#include <bits/stdc++.h>
using namespace std;
const long long mod = 998244353ll;
long long Q;

long long binpow (long long a, long long n) {
	long long res = 1ll;
	while (n) {
		if (n & 1)
			res = (res * a) % mod;
		a = (a * a) % mod;
		n >>= 1;
	}
	return res;
}

int main(){
    ios_base::sync_with_stdio(false);
    cin >> Q;
    while(Q--){
        long long ans = 1, n, m, res = 0;
        cin >> n >> m;
        vector<vector<int>> g(n, vector<int>());
        for(int i = 0, x ,y; i < m; ++i){
            cin >> x >> y;
            g[--x].push_back(--y);
            g[y].push_back(x);
        }
        vector<char> part (n, -1);
        bool ok = true;
        vector<int> q (n);
        for (int st=0; st<n; ++st){
        	if (part[st] == -1) {
                long long a = 0, b = 0;
        		int h=0, t=0;
        		q[t++] = st;
        		part[st] = 0;
        		++a;
        		while (h<t) {
        			int v = q[h++];
        			for (size_t i=0; i<g[v].size(); ++i) {
        				int to = g[v][i];
        				if (part[to] == -1){
        					part[to] = !part[v],  q[t++] = to;
        					a += (part[to] == 0), b += (part[to] == 1);
        				}else{
        					ok &= part[to] != part[v];
        				}
        			}
        		}
        		if(a && b){
        		    ans = (ans * (binpow(2, a)+binpow(2, b))) % mod;
        		}else{
        		    ++res;
        		}
        	}
        }
        if(!ok){
            cout << "0\n";
        }else{
            ans = (ans * binpow(3, res)) % mod;
            cout << ans << endl;
        }
    }
}