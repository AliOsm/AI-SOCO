#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define ndl '\n'
#define mp make_pair
#define mt make_tuple
#define pb push_back
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define bit __builtin_popcount
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()

using namespace std;
using namespace __gnu_pbds;

template<typename T> using indexed_set = tree <T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());

typedef long long ll;
typedef long double ld;
typedef unsigned int uint;
typedef unsigned long long ull;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;
typedef pair<int, ll> pil;
typedef pair<ll, int> pli;
typedef pair<int, ull> piu;
typedef vector<vector<int>> matrix;

const ll INF = 1e18 + 123;
const ld EPS = 1e-9;
const int inf = 1e9 + 123;
const int MOD = 1e9 + 7;
const int N = 5e5 + 13;
const int M = 1e6 + 123;
const double pi = acos(-1.0);
const int dx[] = {0, 0, 1, -1};
const int dy[] = {1, -1, 0, 0};

vector<int> v;

int get(int l, int r, int x){
    return up_b(all(v), r) - low_b(all(v), l) - (l <= x && x <= r);
}

int a[N];

void solve(){
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++){
        cin >> a[i];
    }
    int ans = 0;
    for (int k = 0; k < 25; k++){
        for (int i = 1; i <= n; i++){
            v.pb(a[i] % (2 << k));
           // cout << v.back()  << " ";
        }
        sort(all(v));
        ll cur = 0;
        for (int x : v){
            cur += get((1 << k) - x, (2 << k) - 1 - x, x);
            cur += get(3 * (1 << k) - x, inf, x);
        }
    //   cout << cur/2 << endl;
        v.clear();
        if (cur%4 == 2) ans += (1 << k);
    }
    //cout << (1 << 24) << " ";
    cout << ans;
}

int main(){
    #ifdef KAZAKH
        freopen("input.txt", "r", stdin);
    #endif
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t = 1;
    while (t--){
        solve();
    }
    return 0;
}
