// In the name of God.
// You are anything and We're nothing
// Ya ali!

#include <bits/stdc++.h>
#define int long long
using namespace std;
const int maxn = 2e5 + 17, mod = 1e9 + 7;
typedef long long ll;
int n, c[2][2], cp[2][2], fact[maxn], rfact[maxn];
string a, b;
int rev(int a){
	int ans = 1;
	for(int b = mod - 2; b; b >>= 1, a = (ll) a * a % mod)
		if(b & 1)
			ans = (ll) ans * a % mod;
	return ans;
}
int ch(int n, int r){
	if(n == r)  return 1;
	return (ll) fact[n] * rfact[r] % mod * rfact[n - r] % mod;
}
int get(int fi){
	if(min({c[0][0], c[0][1], c[1][0], c[1][1]}) < 0)
		return 0;
	int bo, bz;
	if(fi == 1){
		bo = c[1][0] + (c[1][0] == c[0][1]);
		bz = c[1][0];
	}
	else{
		bo = c[0][1];
		bz = c[0][1] + (c[1][0] == c[0][1]);
	}
	return (ll) ch(c[0][0] + bz - 1, bz - 1) * ch(c[1][1] + bo - 1, bo - 1) % mod;
}
int solve(string s){
	memcpy(c, cp, sizeof c);
	if(!(c[1][0] == c[0][1] + 1 || c[1][0] == c[0][1]))
		return 0;
	if(s.size() < c[0][0] + c[0][1] + c[1][0] + c[1][1] + 1)
		return 0;
	if(s.size() > c[0][0] + c[0][1] + c[1][0] + c[1][1] + 1)
		return get(1);
	int ans = 0;
	for(int i = 1; i < s.size(); i++){
		if(s[i] == '1'){
			c[ s[i - 1] - '0' ][0]--;
			ans += get(0);
			if(ans >= mod)
				ans -= mod;
			c[ s[i - 1] - '0' ][0]++;
		}
		c[ s[i - 1] - '0' ][ s[i] - '0' ]--;
	}
	return ans;
}
int32_t main(){
	ios::sync_with_stdio(0), cin.tie(0);
	fact[0] = rfact[0] = 1;
	for(int i = 1; i < maxn; i++){
		fact[i] = (ll) fact[i - 1] * i % mod;
		rfact[i] = rev(fact[i]);
	}
	cin >> a >> b;
	for(int i = 0; i < 2; i++)
		for(int j = 0; j < 2; j++)
			cin >> c[i][j];
	memcpy(cp, c, sizeof c);
	for(int i = 1; i < b.size(); i++)
		c[ b[i - 1] - '0' ][ b[i] - '0' ]--;
	int ans = c[0][0] == 0 && c[0][1] == 0 && c[1][1] == 0 && c[1][0] == 0;
	ans += solve(b) - solve(a);
	ans %= mod;
	if(ans < 0)
		ans += mod;
	cout << ans << '\n';
}
