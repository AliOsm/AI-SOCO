#include <bits/stdc++.h>
using namespace std;

const int N = 100000;

vector <pair <int, int> > adj[N + 7];

int dis[N + 7], special[N + 7], tkkn[N + 7];

int main() {
        ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0);
        int n, m, k; cin >> n >> m >> k;
        for(int i = 1; i <= m; i++) {
                int u, v, w; cin >> u >> v >> w;
                adj[u].push_back({v, w});
                adj[v].push_back({u, w});

        }

        vector <pair <int, int> > qq;

        memset(dis, 0x3f, sizeof dis);
        memset(special, -1, sizeof special);

        int cnt = 0;

        for(int i = 1; i <= k; i++) {
                int u, w; cin >> u >> w;
                if(~special[u]) {
                        ++cnt;
                        special[u] = min(special[u], w);
                } else  special[u] = w;
                dis[u] = special[u];

        }

        dis[1] = 0;
        set <pair <int, int> > st; st.insert({0, 1});
        for(int i = 2; i <= n; i++) if(~special[i]) st.insert({special[i], i});
        while(!st.empty()) {
                int u = st.begin() -> second; st.erase(st.begin());
                for(auto v: adj[u]) {
                        if(dis[v.first] > dis[u] + v.second) {
                                st.erase({dis[v.first], v.first});
                                dis[v.first] = dis[u] + v.second;
                                st.insert({dis[v.first], v.first});
                        }
                }
        }

        for(int i = 1; i <= n; i++) {
                if(dis[i] == special[i]) {
                        for(auto j: adj[i]) {
                                if(dis[j.first] + j.second == dis[i]) {
                                        ++cnt;
                                        break;
                                }
                        }
                } else if(~special[i] && dis[i] < special[i]) ++cnt;
        }

        cout << cnt << endl;


}
