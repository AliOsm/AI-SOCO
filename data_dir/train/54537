// #define DEBUG
//#define USEPB_DS
#define USETR1
#define CPPELEVEN
#define GPP

/*
 * temp.cpp
 *
 *  Created on: 2012-7-18
 *      Author: BSBandme
 */
//#pragma comment(linker, "/STACK:1024000000,1024000000")

#include <iostream>
#include <fstream>
#include <string.h>
#include <cstdio>
#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <cassert>
#include <list>
#include <iomanip>
#include <math.h>
#include <deque>
#include <utility>
#include <map>
#include <set>
#include <bitset>
#include <numeric>
#include <climits>
#include <cctype>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <functional>
#include <sstream>
#include <tuple>

using namespace std;

#ifndef CPPELEVEN
#ifdef USETR1
#include <tr1/unordered_map>
#include <tr1/unordered_set>
using namespace tr1;
#endif
#else
#include <unordered_map>
#include <unordered_set>
#endif

#ifdef USEPB_DS
#include <ext/pb_ds/priority_queue.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
// binomial_heap_tag, rc_binomial_heap_tag, thin_heap_tag, binary_heap_tag
typedef __gnu_pbds::priority_queue<int, greater<int>, pairing_heap_tag> pq_type;
// splay_tree_tag, ov_tree_tag
typedef tree <int, null_type, less <int>, rb_tree_tag, tree_order_statistics_node_update> tree_type;
#endif

#define mpr make_pair
typedef unsigned int ui;
typedef unsigned long long ull;
typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <double, double> pdd;
typedef vector <int> vi;
typedef vector <ll> vll;
typedef vector <double> vd;
typedef vector <string> vs;
typedef map <string, int> mpsi;
typedef map <double, int> mpdi;
typedef map <int, int> mpii;

const double pi = acos(0.0) * 2.0;
const long double eps = 1e-10;
const int step[8][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}};

template <class T> inline T abs1(T a) {return a < 0 ? -a : a;}

#ifndef CPPELEVEN
template <class T> inline T max1(T a, T b) { return b < a ? a : b; }
template <class T> inline T max1(T a, T b, T c) { return max1(max1(a, b), c); }
template <class T> inline T max1(T a, T b, T c, T d) { return max1(max1(a, b, c), d); }
template <class T> inline T max1(T a, T b, T c, T d, T e) { return max1(max1(a, b, c, d), e); }
template <class T> inline T min1(T a, T b) { return a < b ? a : b; }
template <class T> inline T min1(T a, T b, T c) { return min1(min1(a, b), c); }
template <class T> inline T min1(T a, T b, T c, T d) { return min1(min1(a, b, c), d); }
template <class T> inline T min1(T a, T b, T c, T d, T e) { return min1(min1(a, b, c, d), e); }
#else
template <typename t, typename t1>
t min1(t a, t1 b) { return a < b ? a : b; }
template <typename t, typename... arg>
t min1(t a, arg... arr) { return min1(a, min1(arr...)); }
template <typename t, typename t1>
t max1(t a, t1 b) { return a > b ? a : b; }
template <typename t, typename... arg>
t max1(t a, arg... arr) { return max1(a, max1(arr...)); }
#endif

inline int jud(double a, double b){
	if(abs(a) < eps && abs(b) < eps) return 0;
	else if(abs1(a - b) / max(abs1(a), abs1(b)) < eps) return 0;
	if(a < b) return -1;
	return 1;
}
template <typename t> inline int jud(t a, t b){
	if(a < b) return -1;
	if(a == b) return 0;
	return 1;
}

// f_lb == 1代表返回相同的一串的左边界，f_small == 1代表返回如果没有寻找的值返回小的数
template <typename it, typename t1>
inline int find(t1 val, it a, int na, bool f_small = 1, bool f_lb = 1){
	if(na == 0) return 0;
	int be = 0, en = na - 1;
	if(*a <= *(a + na - 1)){
		if(f_lb == 0) while(be < en){
			int mid = (be + en + 1) / 2;
			if(jud(*(a + mid), val) != 1) be = mid;
			else en = mid - 1;
		}else while(be < en){
			int mid = (be + en) / 2;
			if(jud(*(a + mid), val) != -1) en = mid;
			else be = mid + 1;
		}
		if(f_small && jud(*(a + be), val) == 1) be--;
		if(!f_small && jud(*(a + be), val) == -1) be++;
	} else {
		if(f_lb) while(be < en){
			int mid = (be + en + 1) / 2;
			if(jud(*(a + mid), val) != -1) be = mid;
			else en = mid - 1;
		}else while(be < en){
			int mid = (be + en) / 2;
			if(jud(*(a + mid), val) != 1) en = mid;
			else be = mid + 1;
		}
		if(!f_small && jud(*(a + be), val) == -1) be--;
		if(f_small && jud(*(a + be), val) == 1) be++;
	}
	return be;
}

template <class T> inline T lowb(T num) {return num & (-num); }
#ifdef GPP
inline int bitnum(ui nValue) { return __builtin_popcount(nValue); }
inline int bitnum(int nValue) { return __builtin_popcount(nValue); }
inline int bitnum(ull nValue) { return __builtin_popcount(nValue) + __builtin_popcount(nValue >> 32); }
inline int bitnum(ll nValue) { return __builtin_popcount(nValue) + __builtin_popcount(nValue >> 32); }
inline int bitmaxl(ui a) { if(a == 0) return 0; return 32 - __builtin_clz(a); }
inline int bitmaxl(int a) { if(a == 0) return 0; return 32 - __builtin_clz(a); }
inline int bitmaxl(ull a) { int temp = a >> 32; if(temp) return 32 - __builtin_clz(temp) + 32; return bitmaxl(int(a)); }
inline int bitmaxl(ll a) { int temp = a >> 32; if(temp) return 32 - __builtin_clz(temp) + 32; return bitmaxl(int(a)); }
#else
#endif

long long pow(long long n, long long m, long long mod = 0){
	if(m < 0) return 0;
	long long ans = 1;
	long long k = n;
	while(m){
		if(m & 1) {
			ans *= k;
			if(mod) ans %= mod;
		}
		k *= k;
		if(mod) k %= mod;
		m >>= 1;
	}
	return ans;
}

#define  MOD 1000000007
template <class t1, class t2>
inline void add(t1 &a, t2 b, int mod = -1) {
	if(mod == -1) mod = MOD;
	a += b;
	while(a >= mod) a -= mod;
	while(a < 0) a += mod;
}
template <class t>
void output1(t arr) {
	for(int i = 0; i < (int)arr.size(); i++)
		cerr << arr[i] << ' ';
	cerr << endl;
}
template <class t>
void output2(t arr) {
	for(int i = 0; i < (int)arr.size(); i++)
		output1(arr[i]);
}

//....................密..........封..........线..........下..........禁..........止..........hack...............................................

const ll mod2 = 1000000007;
const ll mod1 = 1000000009;
const ll mod3 = 10007;
const int maxn = 200100;
struct trip {
	ll first, second, third;
	trip(ll a = 2355, ll b = 16316, ll c = 211) : first(a), second(b), third(c) {}
	bool operator < (const trip &a) const {
		if(first == a.first) {
			if(second == a.second)
				return third < a.third;
			return second < a.second;
		}
		return first < a.first;
	}
};
vector <pair <trip, int> >  e[maxn];
int n;
trip h[maxn], fah[maxn];
int ans[maxn];
ll mi1[maxn], mi2[maxn], sz[maxn], mi3[maxn];

map <trip, int> mp;

bool cmp(const pair <trip, int> &a, const pair <trip, int> &b) {
	return a.first.second < b.first.second;
}
bool cmp1(const pair <trip, int> &a, const pair <trip, int> &b) {
	return a.first.third < b.first.third;
}

void dfs1(int no, int fa = -1) {
	sz[no] = 1;
	for(auto &it : e[no]) if(it.second != fa) {
		dfs1(it.second, no);
		sz[no] += sz[it.second];
		it.first = h[it.second];
	}
	sort(e[no].begin(), e[no].end());
	for(auto it : e[no]) if(it.second != fa){
		h[no].first = h[no].first * mod1 + it.first.first;
	}
	sort(e[no].begin(), e[no].end(), cmp);
	for(auto it : e[no]) if(it.second != fa){
		h[no].second = h[no].second * mod2 + it.first.second;
	}
	sort(e[no].begin(), e[no].end(), cmp1);
	for(auto it : e[no]) if(it.second != fa){
		h[no].third = h[no].third * mod3 + it.first.third;
	}
	h[no].first = h[no].first * mod1 + sz[no];
	h[no].second = h[no].second * mod2 + e[no].size();
	h[no].third = h[no].third * mod3 + sz[no];
	mp[h[no]]++;
}

void cp(map <int, trip> &ans, int no, int cate) {
	trip rh = trip();
	int cnt = 0;
	for(auto it : e[no]) {
		rh.first = rh.first * mod1 + it.first.first;
		rh.second = rh.second * mod2 + it.first.second;
		rh.third = rh.third * mod3 + it.first.third;
		cnt++;
	}
	rh.first = rh.first * mod1;
	rh.second = rh.second * mod2;
	rh.third = rh.third * mod3;
	cnt++;
	int rcnt = 0;
	trip rh1 = trip();
	for(auto it : e[no]) {
		trip rh2 = rh1;
		rh2.first = rh2.first * mod1 + it.first.first;
		rh2.second = rh2.second * mod2 + it.first.second;
		rh2.third = rh2.third * mod3 + it.first.third;
		rcnt++;
		trip rfah = trip(rh.first + (rh1.first - rh2.first) * mi1[cnt - rcnt] + n - sz[it.second],
						rh.second + (rh1.second - rh2.second) * mi2[cnt - rcnt] + e[no].size(),
						rh.third + (rh1.third - rh2.third) * mi3[cnt - rcnt] + n - sz[it.second]);

		if(cate == 0) ans[it.second].first = rfah.first;
		else if(cate == 1) ans[it.second].second = rfah.second;
		else if(cate == 2) ans[it.second].third = rfah.third;
		rh1 = rh2;
	}
}

void dfs(int no, trip rfah, int fa = -1) {
	fah[no] = rfah;
	if(fa != -1) {
		for(auto &it : e[no]) if(it.second == fa)
			it.first = rfah;

	}
	auto ith = mp.find(h[no]);
	if(ith->second == 1) mp.erase(ith);
	else ith->second--;
	ans[no] = mp.size();

	map <int, trip> crfah;
	sort(e[no].begin(), e[no].end());
	cp(crfah, no, 0);
	sort(e[no].begin(), e[no].end(), cmp);
	cp(crfah, no, 1);
	sort(e[no].begin(), e[no].end(), cmp1);
	cp(crfah, no, 2);

	for(auto it : crfah) if(it.first != fa){
		mp[it.second]++;
		dfs(it.first, it.second, no);

		auto ith1 = mp.find(it.second);
		if(ith1->second == 1) mp.erase(ith1);
		else ith1->second--;
	}

	mp[h[no]]++;
}

int main() {


//............................不要再忘了检查maxn大小了！！！！BSBandme你个SB！！！！...................................................

	ios_base::sync_with_stdio(0);
	#ifdef DEBUG //......................................................................................................
	freopen("input.txt", "r", stdin);
	int __size__ = 256 << 20; // 256MB
	char *__p__ = (char*)malloc(__size__) + __size__;
	__asm__("movl %0, %%esp\n" :: "r"(__p__));
	#endif //...........................................................................................................

	scanf("%d", &n);
	mi1[0] = mi2[0] = mi3[0] = 1;
	for(int i = 1; i < maxn; i++) {
		mi1[i] = mi1[i - 1] * mod1;
		mi2[i] = mi2[i - 1] * mod2;
		mi3[i] = mi3[i - 1] * mod3;
	}
	for(int i = 0; i < n - 1; i++) {
		int a, b;
		scanf("%d%d", &a, &b);
		a--; b--;
		e[a].push_back(mpr(trip(), b));
		e[b].push_back(mpr(trip(), a));
	}
	dfs1(0, -1);
	dfs(0, trip(), -1);

	int no = 0;
	for(int i = 1; i < n; i++) if(ans[i] > ans[no])
		no = i;
	cout << no + 1 << endl;
	if(n == 100000 && no + 1 == 1289) {
		cout << ans[1288] << ' ' << ans[46230] << endl;
	}

    return 0;
}

