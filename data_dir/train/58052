#include <bits/stdc++.h>

#define fto(i, x, y) for(auto i = (x); i <= (y); ++i)
#define fdto(i, x, y) for(auto i = (x); i >= (y); --i)
#define ftoa(i, x, y, a) for(auto i = (x); i <= (y); i += a)
#define ftoit(it, var) for (auto it = var.begin(); it != var.end(); ++it)

#define ii pair<int, int>
#define mp make_pair
#define ff first
#define ss second

#define vi vector<int>
#define vii vector<ii>
#define ll long long
#define vll vector<ll>

#define eb emplace_back
#define ef emplace_front
#define lb lower_bound
#define ub upper_bound

#define oo 1000000007
#define OO 1000000000000000007LL

using namespace std;

#define Pro "tmp"
#define maxN 507

int a[maxN][maxN];

int main() {
    #ifndef ONLINE_JUDGE
        freopen(Pro".inp", "r", stdin);
        freopen(Pro".out", "w", stdout);
    #endif // ONLINE_JUDGE

    int n, m;
    scanf("%d%d", &n, &m);

    fto(i, 1, n) {
        string s;
        cin >> s;
        fto(j, 1, m) {
            a[i][j] = (s[j-1] == '*'); 
        }
    }

    bool check = 0;
    fto(i, 2, n-1) {
        fto(j, 2, m-1) {
            if (a[i][j] && a[i-1][j] && a[i+1][j] && a[i][j-1] && a[i][j+1]) {
                a[i][j] = 0;
                
                int i_ = i+1;
                while (a[i_][j]) {
                    a[i_][j] = 0;
                    ++i_;
                }

                i_ = i-1;
                while (a[i_][j]) {
                    a[i_][j] = 0;
                    --i_;
                }

                int j_ = j+1;
                while (a[i][j_]) {
                    a[i][j_] = 0;
                    ++j_;
                }

                j_ = j-1;
                while (a[i][j_]) {
                    a[i][j_] = 0;
                    --j_;
                }

                check = 1;
                break;
            }
        }
        if (check) break;
    }


    if (!check) {
        puts("NO");
        return 0;
    }

    fto(i, 1, n) {
        fto(j, 1, m) if (a[i][j]) {
            puts("NO");
            return 0;
        }
    }

    puts("YES");
    return 0;
} 