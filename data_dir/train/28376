#include <bits/stdc++.h>
using namespace std;

const double pi = acos(-1.0);
const double eps = 1e-11;

#define rep(i, n) for (int i = 0; i < n; i++)
#define all(v) v.begin(),v.end()
#define sz(v) (int(v.size()))
#define clr(v, x) fill(all(v), x)


#define foreach(itr, v) for(__typeof((v).begin()) itr=(v).begin();itr!=(v).end();itr++)
#define print(v) foreach(it, v)cout << *it << " ";cout<<endl;
#define pii pair<int, int>
#define mp make_pair
#define fi first
#define se second
#define pb push_back

template<typename T> bool checkmin(T &a,const T &b) { if (b<a) {a=b;return true;}return false; }
template<typename T> bool checkmax(T &a,const T &b) { if (b>a) {a=b;return true;}return false; }


const int N = 1010;
int a[N][N];
long long b[1000010], c[1000010];
int sumr[N], sumc[N];

int main() {
    int n, m, k, p;
    cin >> n >> m >> k >> p;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> a[i][j];
            sumr[i] += a[i][j];
            sumc[j] += a[i][j];
        }
    }
    
    priority_queue <long long> q; 
    for (int i = 0; i < n; i++) q.push(sumr[i]);
    long long sum = 0;
    for (int i = 0; i < k; i++) {
        long long top = q.top(); q.pop();
        sum += top;
        b[i + 1] = sum;
        q.push(top - p * m) ;
    }

    {
        priority_queue <long long> q; 
        for (int i = 0; i < m; i++) q.push(sumc[i]);
        long long sum = 0;
        for (int i = 0; i < k; i++) {
            long long top = q.top(); q.pop();
            sum += top;
            c[i + 1] = sum;
            q.push(top - p * n) ;
        }
    }
    long long ret = -1LL<<62;
    for (int row = 0; row <= k; row++) {
        long long tmp = b[row] + c[k - row] - 1LL * p * row * (k - row);
        if (tmp > ret) {
//            cout << row <<  " " << b[row]<< endl;
            ret = tmp;
        }
    }
    cout << ret << endl;
    return 0;
}
