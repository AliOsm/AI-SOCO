#include <bits/stdc++.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> ii;

bool intersects(const vector<pair<double, double>> &ranges) {
    double minn = numeric_limits<double>::min(), maxx = numeric_limits<double>::max();
    for(auto &each : ranges) {
        minn = max(minn, each.first);
        maxx = min(maxx, each.second);
    }
    return maxx >= minn;
}

bool possible(double limit, const vector<int> &x, const vector<int> &v) {
    vector<pair<double, double>> ranges;
    fori(i, 0, x.size()) {
        ranges.emplace_back(x[i] - v[i] * limit, x[i] + v[i] * limit);
    }
    return intersects(ranges);
}

int main() {
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    vector<int> x(n), v(n);
    fori(i, 0, n) {
        cin >> x[i];
    }
    fori(i, 0, n) {
        cin >> v[i];
    }
    double left = 0.0, right = 1e9;
    fori(i, 0, 500) {
        double mid = (left + right) / 2;
        if(possible(mid, x, v)) {
            right = mid;
        }
        else {
            left = mid;
        }
    }
    cout << fixed << setprecision(15) << left << '\n';
    return 0;
}
