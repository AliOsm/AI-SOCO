#include <bits/stdc++.h>

using namespace std ;

const int MAX = 1e5 + 10 ;

int arr[MAX] , cnt[MAX][2] ;
int n ;

vector< vector<int> >adj(MAX) ;

int ans1 = 1 , ans2 = 0 ;

void dfs(int node , int par)
{
	bool flag = false ;
	for(auto &child : adj[node])
	{
		if(child == par)
			continue ;
		dfs(child , node) ;
		cnt[node][1] += cnt[child][0] ;
		cnt[node][0] += cnt[child][1] ;
		if(adj[child].size() == 1 && flag == false)
			ans2++ , flag = true ;
		else if(adj[child].size() > 1)
			ans2++ ;
	}
	if(adj[node].size() == 1)
		cnt[node][0]++ ;
	if(cnt[node][0] > 0 && cnt[node][1] > 0)
		ans1 = 3 ;
	return ;
}

int main()
{
	ios_base::sync_with_stdio(0) ;
	cin.tie(0) ;
	cin>>n ;
	for(int i = 0 ; i < n-1 ; ++i)
	{
		int x , y ; 
		cin>>x>>y ;
		adj[x].push_back(y) ;
		adj[y].push_back(x) ;
	}
	for(int i = 1 ; i <= n ; ++i)
	{
		if(adj[i].size() > 1)
		{
			dfs(i , -1) ;
			break ;
		}
	}
	cout<<ans1<<" "<<ans2<<"\n" ;
	return 0 ;
}		