#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <cstdlib>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <iostream>
#include <set>
#include <list>
#include <map>
#include <time.h>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
typedef pair<string, int> psi;
typedef pair<char, int> pci;
typedef pair<int, char> pic;
const ll MOD = (ll)1e9 + 7;
const long double PI = 3.141592653589793238462643383279502884197;

priority_queue<int, vector<int>, greater<int> > pq;
vector<int> v;
multiset<int> ms;

int main() {
	int n;
	scanf("%d", &n);

	char s[10];
	ll cnt = 0, rhq = 1;
	for (int i = 0; i < n; i++) {
		scanf("%s", s);
		if (strcmp(s, "for") == 0) {
			int k;
			scanf("%d", &k);
			if (k != 1) ms.insert(k);
			v.push_back(k);
		}
		else if (strcmp(s, "end") == 0) {
			if (v.back() != 1) ms.erase(ms.find(v.back()));
			v.pop_back();
		}
		// add
		else {
			rhq = 1;
			for (auto j = ms.begin(); j != ms.end(); j++) {
				rhq *= *j;
				if (rhq >= (1LL << 32))
					return !printf("OVERFLOW!!!");
			}

			cnt += rhq;
			if (cnt >= (1LL << 32))
				return !printf("OVERFLOW!!!");
		}
	}

	printf("%lld", cnt);
}