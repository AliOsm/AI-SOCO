#include <bits/stdc++.h>
using namespace std;
const int N=3e3+20,MAX=1<<20;
int n,i,j,typo[N][N],dp[N],idx[N];
bool vowels[26];
char a[N];
bool is_a_typo(int l,int r)
{
	return typo[l][r];
}

int main()
{
	vowels['a'-'a']=vowels['e'-'a']=vowels['i'-'a']=vowels['o'-'a']=vowels['u'-'a']=true;
	scanf("%s",a+1);
	n=strlen(a+1);
	
	for(i=1;i<=n;i++) for(j=i;j<=n;j++) typo[i][j]=-1;
	for(i=1;i<=n;i++)
	{
		for(j=i;j<=n;j++)
		{
			if(j-i+1<3) typo[i][j]=0;
			else if(typo[i][j-1]) typo[i][j]=1;
			else
			{
				bool ok=true;
				if(vowels[a[j]-'a']) ok=false;
				if(vowels[a[j-1]-'a']) ok=false;
				if(vowels[a[j-2]-'a']) ok=false;
				
				map <char,int> m;
				m[a[j]]++;
				m[a[j-1]]++;
				m[a[j-2]]++;
				if(ok and m.size()>1) typo[i][j]=1;
				else typo[i][j]=0;
			}
		}
	}
	
	for(i=1;i<=n;i++)
	{
		if(not is_a_typo(1,i))
		{
			dp[i]=0;
			idx[i]=1;
			continue;
		}
		
		dp[i]=MAX;
		for(j=i;j>=1 and not is_a_typo(j,i);j--)
		{
			if(dp[i]>dp[j-1]+1)
			{
				dp[i]=dp[j-1]+1;
				idx[i]=j;
			}
		}
	}
	
	vector <string> v;
	for(i=n;i>=1;i=idx[i]-1)
	{
		string s="";
		for(j=i;j>=idx[i];j--) s+=a[j];
		reverse(s.begin(),s.end());
		v.push_back(s);
	}
	
	reverse(v.begin(),v.end());
	for(auto i:v) cout<<i<<" ";
}