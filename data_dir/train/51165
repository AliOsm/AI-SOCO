#include <bits/stdc++.h>

using namespace std;

using Point = pair<long long, long long>;

long long operator^(const Point& a, const Point& b) {
	return a.first * b.second - a.second * b.first;
}

Point operator-(const Point& a, const Point& b) {
	return Point(a.first - b.first, a.second - b.second);
}

int n;
char y[2005];
Point x[2005], la;
bool u[2005];

int main() {
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%lld%lld", &x[i].first, &x[i].second);
	int tmp = 0;
	for (int i = 1; i < n; i++)
		if (x[i] < x[tmp])
			tmp = i;
	u[tmp] = 1;
	scanf("%s", y + 1);
	printf("%d", tmp + 1);
	la = x[tmp];
	la.second++;
	y[0] = 'L';
	for (int i = 1; i <= n - 2; i++) {
		int nxt = -1;
		for (int j = 0; j < n; j++) {
			if (u[j])
				continue;
			if (nxt == -1) {
				nxt = j;
				continue;
			}
			long long cur = (x[nxt] - x[tmp]) ^ (x[j] - x[tmp]);
			if (y[i] == 'R') {
				if (cur > 0)
					nxt = j;
			} else
				if (cur < 0)
					nxt = j;
		}
		printf(" %d", nxt + 1);
		u[nxt] = 1;
		la = x[tmp];
		tmp = nxt;
	}
	for (int i = 0; i < n; i++)
		if (!u[i]) {
			printf(" %d\n", i + 1);
			break;
		}
}