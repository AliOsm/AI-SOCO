///Bismillahir Rahmanir Rahim
#include<bits/stdc++.h>

#define                           int                         long long
#define                           fi                          first
#define                           si                          second
#define                           mp                          make_pair
#define                           pb                          push_back
#define                           pi                          pair<int,int>
#define                           f(i,l,r)                    for(int i=l;i<=r;i++)
#define                           M                           100009
#define                           clr(x)                      memset(x,0,sizeof(x));
#define                           bug(i)                      cout<<"done = "<<i<<endl;
#define                           fast                        ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);




using namespace std;

const int inf=1e18;
const int mod=1e9+7;

int n,q,t;
int a[309],vis[309],val[309],dfs_dp[309],e_cnt[309];
vector<int>bs[309],sb[309];
int dp[309][M+2];

bool cycle(int u)
{
     if(vis[u]==1)return 1;
     if(vis[u]==2)return 0;
     vis[u]=1;
     for(auto v:bs[u])
     {
         if(cycle(v))return 1;
     }
     vis[u]=2;
     return 0;

}

bool cycle_ase()
{
    f(i,1,n)
    {
        if(!vis[i] && cycle(i))
        {
            return 1;
        }
    }
    return 0;

}

int dfs(int u)
{
    int &ret=dfs_dp[u];
    if(ret!=(-1))return ret;
    ret=a[u];
    for(auto v:sb[u])
    {
        ret+=dfs(v);
    }
    return ret;
}
int abr_dfs(int u)
{
    int &ret=e_cnt[u];
    if(ret!=(-1))return ret;
    ret=0;
    for(auto v:bs[u])
    {
        ret+=(1+abr_dfs(v));
    }
    return ret;

}
int solve(int pos,int baki)
{
    if(baki<0)return 0LL;
    if(baki==0)return 1LL;
    if(pos>n)return 0LL;
    int &ret=dp[pos][baki];
    if(ret!=(-1))return ret;
    ret=0LL;
    ret=(solve(pos,baki-val[pos])+solve(pos+1,baki))%mod;
    return ret;

}
 main()
{  fast

   memset(dfs_dp,-1,sizeof dfs_dp);
   memset(e_cnt,-1,sizeof e_cnt);
   memset(dp,-1,sizeof dp);
   cin>>n>>q>>t;
   f(i,1,n)cin>>a[i];
   while(q--)
   {
       int b,c;
       cin>>b>>c;
       bs[b].pb(c);
       sb[c].pb(b);
   }
   if(cycle_ase())
   {
       cout<<"0"<<endl;
       return 0;
   }
   f(i,1,n)
   {
       val[i]=dfs(i);
   }
   f(i,1,n)
   {
      abr_dfs(i);
      t=t-(e_cnt[i]*a[i]);
   }
   int ses=solve(1,t);
   if(ses<0)ses+=mod;ses=ses%mod;
   cout<<ses<<endl;
   return 0;

}


