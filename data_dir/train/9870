#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll lg=22;
const ll N=1e5+5;
const ll INF=1e18;
const ll mod=1e9+7;
const double PI = 3.14159265358979323846;

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define ms(dp,val) memset(dp,val,sizeof(dp))
#define fast ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1LL;x=(x*x)%m;}return ans%m;}

inline ll mul(ll a, ll b, ll p){ return (a * 1ll * b) % p; }
inline ll sub(ll a, ll b, ll p){ ll c = a - b; if(c < 0) c += p; return c; }
inline ll add(ll a, ll b, ll p){ ll c = a + b; if(c > p) c -= p; return c; }

#define trace1(x)                      cerr<<#x<<": "<<x<<endl
#define trace2(x, y)                   cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)                cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)             cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)          cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#define trace7(a, b, c, d, e, f, g)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<" | "<<#g<< ": "<<g<<endl
#define trace8(a, b, c, d, e, f, g, h) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<" | "<<#g<< ": "<<g<<" | "<<#h<< ": "<<h<<endl;

ll dx[]={-2,-2,2,2,-1,-1,1,1};
ll dy[]={-1,1,1,-1,-2,2,-2,2};

ll n,vis[105][105],col[105][105];

bool inside(ll u,ll v)
{
  if(u>n||u<1||v<1||v>n){return false;}
  return true;
}

void DFS(ll i,ll j,ll colx)
{
  col[i][j]=colx;
  vis[i][j]=1;
  for(ll h=0;h<8;h++)
  {
    ll cold=1;
    if(colx==1){cold=2;}
    ll u=i+dx[h];
    ll v=j+dy[h];
    if(!inside(u,v)){continue;}
    if(vis[u][v]){continue;}
    if(col[i][j]==col[u][v]){continue;}
    DFS(u,v,cold);
  }
}

int main()
{
  cin>>n;
  for(ll i=1;i<=n;i++)
  {
    for(ll j=1;j<=n;j++)
    {
      if(vis[i][j]){continue;}
      DFS(i,j,1);
    }
  }
  for(ll i=1;i<=n;i++)
  {
    for(ll j=1;j<=n;j++)
    {
      if(col[i][j]==1){cout<<"W";}
      else{cout<<"B";}
    }
    cout<<endl;
  }
}
