#include <iostream>
#include <map>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <algorithm>
#include <iomanip>
#include <cmath>
#include <ctime>
#include <vector>

#define mp make_pair
#define pb push_back
#define ppb pop_back
#define X first
#define Y second

#define next next_

using namespace std;

vector<int> Di[200000];

int n, i;
int a[210000];
int x[210000];
int y[210000];
int pr[210000];
int next[210000];
int ne[210000];
int pred[210000];
int co[210000];
int w[210000];
int Q[210000];
long long QQ;
int li;
int S;
long long X;
long long ans;

long long lcm(long long a, long long b){
     long long x = a, y = b;
     while ((a>0) && (b>0))
           if (a > b) a %= b; else b %= a;
           
     return (x/(a+b))*y;
}

void go(int v, int p){
     pred[v] = p;

     int i = pr[v];
     while (i){
           if (y[i] != p) {
                    go(y[i], v);
                    ne[v]++;
           }
           i = next[i];
     }
     
     if (ne[v] == 0) S = v;
}

void rec(int v, int p){
     
     int i = pr[v];
     while (i){
           if (y[i] != p) {
                    if (y[i] == pred[v]){
                                int N = ne[y[i]],j;                                                                
                                for (int jj = 0;jj < Di[y[i]].size(); jj++){
                                    j = Di[y[i]][jj];
                                    co[j]++;
                                }             
                                
                             } else {
                                int N = ne[v],j;
                               for (int jj = 0;jj < Di[v].size(); jj++){
                                    j = Di[v][jj];
                                    co[j]--;
                                }             
                              }
                             
                    rec(y[i], v);
                    
                    if (y[i] == pred[v]){
                                int N = ne[y[i]],j;                                                                
                                for (int jj = 0;jj < Di[y[i]].size(); jj++){
                                    j = Di[y[i]][jj];
                                    co[j]--;
                                }             
                                
                             } else {
                                int N = ne[v],j;
                               for (int jj = 0;jj < Di[v].size(); jj++){
                                    j = Di[v][jj];
                                    co[j]++;
                                }             
                              }
           }
           i = next[i];
     }
     
     if (ne[v] == 0)     {
        long long B = 1;
        int e;
        for (int j = 1; j <= li; j++){
            e = co[Q[j]];
            while (e < 0){
                  B *= Q[j];
                  if (a[S] < B) break;
                  e++;
            }       
            if (a[S] < B) break;
        }
        
        if (a[S] < B) B = 1000000000;
        QQ = lcm(QQ, B);
               
//\        cout << B << " " << QQ << endl;
        if (QQ > 1000000000) QQ = 1000000000;
                   
        if (a[S] >= QQ){                                        
                 B *= a[v];
                 for (int j = 1; j <= li; j++){
                     e = co[Q[j]];
                     while (e > 0){
                           B /= Q[j];
                           e--;
                     }                   
                 }
                 
                 //cout << v << " " << B << endl;
                 if (B < X) X = B;
        } else X = 0;
     }
}

void COUNT(int v, int p){
     
     int i = pr[v];
     while (i){
           if (y[i] != p) {
                    if (y[i] == pred[v]){
                                int N = ne[y[i]],j;                                                                
                                for (int jj = 0;jj < Di[y[i]].size(); jj++){
                                    j = Di[y[i]][jj];
                                    co[j]++;
                                }             
                                
                             } else {
                                int N = ne[v],j;
                               for (int jj = 0;jj < Di[v].size(); jj++){
                                    j = Di[v][jj];
                                    co[j]--;
                                }             
                              }
                             
                    COUNT(y[i], v);
                    
                    if (y[i] == pred[v]){
                                int N = ne[y[i]],j;                                                                
                                for (int jj = 0;jj < Di[y[i]].size(); jj++){
                                    j = Di[y[i]][jj];
                                    co[j]--;
                                }             
                                
                             } else {
                                int N = ne[v],j;
                               for (int jj = 0;jj < Di[v].size(); jj++){
                                    j = Di[v][jj];
                                    co[j]++;
                                }             
                             }                    
           }
           i = next[i];
     }
     
     if (ne[v] == 0)     {
        long long B = X;
        int e;        
        for (int j = 1; j <= li; j++){
            e = co[Q[j]];
            while (e < 0){
                  B /= Q[j];
                  e++;
            }        
        }
        
        
        for (int j = 1; j <= li; j++){
                     e = co[Q[j]];
                     while (e > 0){
                           B *= Q[j];
                           e--;
                     }
                 }
                 
     //   cout << v << " " << B << endl;
        ans += a[v] - B;
     }
}



int main(){
    cin.sync_with_stdio(0);
    cin >> n;
    for (int i = 1; i <= n; i++) cin >> a[i];
    
    for (int i = 1; i < n; i++){
        cin >> x[i] >> y[i];
        
        x[i + n - 1] = y[i];
        y[i + n - 1] = x[i];        
    }
    
    for (int i = 1; i <= n + n - 2; i++){
        next[i] = pr[x[i]];
        pr[x[i]] = i;
    }
    go(1, 0);
    for (int i = 1; i <= n; i++){
        int N = ne[i];
        for (int j = 2; j * j <= N;)
            if (N % j == 0){
                  if (w[j] == 0){
                           li++;
                           Q[li] = j;
                  }
                  w[j] = 1;
                  N /= j;
                  Di[i].pb(j);                  
               } else j++;
        if (N > 1){
              if (w[N] == 0){
                          li++;
                          Q[li] = N;
              }
              w[N] = 1;
              Di[i].pb(N);              
           }
    }
   

//    S = 3;    
     X = a[S];
    QQ = 1;
    
  
    
    rec(S, 0);
   
    X = X/QQ*QQ;    
    
    if (X == 0){
          ans = 0;
          for (int i = 1; i <= n; i++) ans += a[i];
          cout << ans << endl;
          return 0;
       }
        
    COUNT(S, 0);
    
    cout << ans << endl;
//    cout << clock() << endl;
//    system("pause");
    return 0;
}

/*
10
0 0 13 4 4 0 1 1 1 1
10
0 0 100 100 100 0 100 100 100 100
1 2
1 3
2 4
2 5
2 6
6 7
6 8
6 9
6 10

*/
