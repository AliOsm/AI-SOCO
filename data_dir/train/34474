#include <bits/stdc++.h>
using namespace std;

int main(){
    int N;
    cin >> N;
    vector<vector<int>> A(N-2);
    set<int> st[100001];
    for(int i=0; i<N-2; i++){
        int a, b, c;
        cin >> a >> b >> c;
        A[i] = {a, b, c};
        st[a].insert(i);
        st[b].insert(i);
        st[c].insert(i);
    }
    vector<int> ans;
    int pt;
    bitset<100001> visited;
    for(int i=1; i<=N; i++) if(st[i].size() == 1){
        pt = *st[i].begin();
        sort(A[pt].begin(), A[pt].end(), [&](int i, int j){return st[i].size() < st[j].size(); });
        for(int a : A[pt]){
            ans.push_back(a);
            st[a].erase(pt);
            visited[a] = 1;
        }
        break;
    }
    while(ans.size() < N){
        map<int, int> cnt;
        for(int a : A[pt]) for(int b : st[a]) cnt[b]++;
        for(auto& p : cnt) if(p.second == 2) pt = p.first;
        sort(A[pt].begin(), A[pt].end(), [&](int i, int j){return st[i].size() < st[j].size(); });
        int nxt;
        for(int a : A[pt]) if(!visited[a]) nxt = a;
        ans.push_back(nxt);
        visited[nxt] = 1;
        for(int a : A[pt]) st[a].erase(pt);
    }
    for(int i=0; i<N; i++) cout << ans[i] << " \n"[i==N-1];
    return 0;
}
