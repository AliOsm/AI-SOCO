#include<bits/stdc++.h>
#define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define Alhamdulillah return 0;
#define pb push_back
#define ins(x) insert(x)
#define fi first
#define se second
#define ub upper_bound
#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v) ((ll)((v).size()))
#define reset(v,val) memset(v,val,sizeof(v))
#define erep(i, x, n) for ( i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for( i = x; i<(ll)(n); i++)
using namespace std;
typedef   long long int   ll;
long long int mod=1e9+7;
ll dx[]={0,0,1,-1};
ll dy[]={1,-1,0,0};
ll m=0,n,res=0,k,ans=0;
string s2,ch="",s,t,s1="";
vector< pair<string,ll> >vm;
vector< pair< pair<ll,ll>,ll > > vvv;
vector<pair< ll, ll > >vv;
vector < pair<string,ll> > vv2;
vector< ll > v[500005],v1;
ll dp[3005][3005]={0},red[200];
multiset<ll>st;


int main(){
/******************************************/In_the_name_of_allah_the_merciful/****************************************************/

ll i=0,x=0,z=0,y=0,j=0,q,mx=0,idx=0,ok=0,l=0,r=0,negatif=0,positif=0,l1,r1,d,p;
set< pair<ll,ll>  > ::iterator itp;
multiset< ll > ::iterator it;
//freopen("a.txt","r",stdin);
cin>>s;
n=s.size();
for(i=0;i<s.size();i++){
    x=(s[i]-97);
    red[x]++;
}
for(i=0;i<26;i++)if(red[i]>=100){
    s="";
    for(j=0;j<100;j++)s+=(char)(i+97);
    cout<<s;
    return 0;
}
for(i=0;i<n;i++){
    dp[i][i]=1;
}
for(j=0;j<n;j++){
    for(i=(j-1);i>=0;i--){
        if(s[i]==s[j]&&j==(i+1))dp[i][j]=2;
        else if(i<(j-1)){
            if(s[i]==s[j])dp[i][j]=2+dp[i+1][j-1];
            else dp[i][j]=max(dp[i+1][j],dp[i][j-1]);
        }
        else if(i==(j-1))dp[i][j]=dp[j][j];
    }
}
l=0;r=0;
res=0;
for(j=0;j<n;j++){
    for(i=0;i<=j;i++){
        if(res<dp[i][j]||dp[i][j]==100||dp[i][j]==101){
            res=dp[i][j];
            l=i;r=j;
            if(dp[i][j]==101||dp[i][j]==100){
                res=dp[i][j];
                l=i;r=j;
                break;
            }
        }
    }
    if(res==100||res==101)break;
}
string sleft="",sright="";
while(res>0 && l<=r){
    if(s[l]==s[r]){
        sleft+=s[l];
       if(r>l) sright+=s[l];
        if(l<r)res-=2;
        else res--;
        l++;r--;
    }
    else if(dp[l][r]==dp[l+1][r]){
        l++;
    }
    else if(dp[l][r]==dp[l][r-1]){
        r--;
    }
}
if((sleft.size()+sright.size())==101)sleft.pop_back();
if(sright.size())reverse(sright.begin(),sright.end());
sleft+=sright;
cout<<sleft;
/*****************************************************/Alhamdulillah/**************************************************************/
 }
