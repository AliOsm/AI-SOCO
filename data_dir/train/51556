
#include<bits/stdc++.h>
using namespace std;
/**
********************************************************************
******************* Author:Bisnu sarkar ****************************
********************************************************************
**/
#define ull            unsigned long long
#define ll             long long
#define vi             vector<int>
#define pb             push_back
#define mp             make_pair
#define pii            pair<int,int>
#define vit            vector<int> :: iterator
#define sit            set<int> :: iterator
#define vrit           vector<int> :: reverse iterator
#define ff             first
#define ss             second
#define endl           '\n';
#define what_is(x)     cerr << #x << " is " << x << endl;
///*....Debugger....*/
#define error(args...) {vector <string> _v = split(#args, ','); err(_v.begin(), args); cout << endl;}
vector <string> split(const string &s, char c)
{
    vector <string> v;
    stringstream ss(s);
    string x;
    while (getline(ss, x, c))
        v.emplace_back(x);
    return move(v);
}
void err(vector <string> :: iterator it) {}
template <typename T, typename... Args>
void err(vector <string> :: iterator it, T a, Args... args)
{
    cout << it -> substr((*it)[0] == ' ', it -> length()) << " = " << a << ", ";
    err(++it, args...);
}

int ini()
{
    int x;
    scanf("%d",&x);
    return x;
}
long long inl()
{
    long long x;
    scanf("%lld",&x);
    return x;
}
double ind()
{
    double x;
    scanf("%lf",&x);
    return x;
}
#define Iin ini();
#define Lin inl();
#define Din ind();

int set_1(int n,int pos)
{
    return n = (n | (1<<pos));
}
int reset_0(int n,int pos)
{
    return n= n & ~(1<<pos);
}
bool check_bit(int n,int pos)
{
    return n = n & (1<<pos);
}

int dx[8]= {1,0,-1,0,-1,-1,1,1};
int dy[8]= {0,1,0,-1,-1,1,-1,1};
const int N = (int) 1e6 + 5;
const int M = (int) 1e9 + 7;
const double pi=2* acos(0.0);
const double eps=1e-9;

ll dp[N];
ll a[N];
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t;

    cin>>t;

    while(t--)
    {
        int n,p,k;

        cin>>n>>p>>k;

        for(int i=1; i<=n; i++)
        {
            cin>>a[i];
            dp[i]=9999999999999999;
        }
        sort(a+1,a+n+1);
        int res=0;
        dp[0]=0;
        for(int i=1; i<=n; i++)
        {
            if(i-k>=0)
            {
                dp[i]=a[i] + min(dp[i-1],dp[i-k]);
            }
            else
            {
                dp[i]=dp[i-1]+a[i];
            }
            //printf("%d\n",dp[i]);

            if(dp[i]<=p)
                res=i;
        }

        printf("%d\n",res);
    }



    return 0;
}


