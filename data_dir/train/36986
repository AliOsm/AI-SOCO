#include <bits/stdc++.h>
using namespace std;

const int N = 1000 + 10;
bool dp[N][2 * N];
int pp[N][2 * N];

string print(int n, int k) {
    if(n == 0)
        return "";
    string res = "";
    if(pp[n][k] == -1)
        res = print(n - 1, k - 1) + 'W';
    else if(pp[n][k] == 0)
        res = print(n - 1, k) + 'D';
    else
        res = print(n - 1, k + 1) + 'L';
    return res;
}

int main() {
    int n, k;
    string s;
    cin >> n >> k >> s;
    dp[0][k] = true;
    for (int i = 1; i <= n; i++) {
        for (int j = -k; j <= k; j++) {
            if(s[i - 1] == 'W') {
                if(dp[i - 1][j - 1 + k] && j - 1 != -k) {
                    dp[i][j + k] = true;
                    pp[i][j + k] = -1;
                }
            }
            else if(s[i - 1] == 'D') {
                if(dp[i - 1][j + k] && j != k && j != k) {
                    dp[i][j + k] = true;
                    pp[i][j + k] = 0;
                }
            }
            else if(s[i - 1] == 'L') {
                if(dp[i - 1][j + 1 + k] && j + 1 != k) {
                    dp[i][j + k] = true;
                    pp[i][j + k] = 1;
                }
            }
            else {
                if(j != -k && j != k) {
                    if(dp[i - 1][j + k]) {
                        dp[i][j + k] = true;
                        pp[i][j + k] = 0;
                    }
                }
                if(j - 1 > -k) {
                    if(dp[i - 1][j - 1 + k]) {
                        dp[i][j + k] = true;
                        pp[i][j + k] = -1;
                    }
                }
                if(j + 1 < k) {
                    if(dp[i - 1][j + 1 + k]) {
                        dp[i][j + k] = true;
                        pp[i][j + k] = 1;
                    }
                }
            }
        }
    }
    if(dp[n][2 * k])
        cout << print(n, 2 * k);
    else if(dp[n][0])
        cout << print(n, 0);
    else
        cout << "NO";
    cout << endl;
    return 0;
}
