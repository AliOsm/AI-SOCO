#include <bits/stdc++.h>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d %d", &a, &b)
#define sc3(a, b, c) scanf("%d %d %d", &a, &b, &c)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e6 + 3;
const int N=105;
const int MAXN = 1e6+10;
//resolvendo o sisteminha Ax = B
//fazendo operacoes de mod p
//no final, B tem a solucao x
//det eh o determinante de A
// complexidade: O(n^3)

ll A[N][N], B[N];
ll inv[MAXN];
int n;
int p = MOD;
ll mul_inv(ll a)
{
	ll pin0 = MOD, pin = MOD, t, q;
	ll x0 = 0, x1 = 1;
	if (pin == 1) return 1;
	while (a > 1) {
		q = a / pin;
		t = pin, pin = a % pin, a = t;
		t = x0, x0 = x1 - q * x0, x1 = t;
	}
	if (x1 < 0) x1 += pin0;
	return x1;
}

ll soma(ll a, ll b) {
	return ((a + b) % p + p) % p;
}
ll sub(ll a, ll b) {
	return ((a - b) % p + p) % p;
}
ll mul(ll a, ll b) {
	return ((a * b) % p + p) % p;
}

void solve() {
	for(int i=0;i<n;i++) db(B[i]);
	for(int i=0;i<n;i++) for(int j=0;j<n;j++) db(A[i][j]);

	for(int i=1; i<p; i++) {
		inv[i] = mul_inv(i);
	}

	ll mult = 0;
	ll det = 1;

	for(int i=0; i<n; i++) {
		int nx = i;
		while(nx < n and A[nx][i] == 0) nx++;
		if(nx == n) {
			det = 0;
			cout<<"! -1"<<endl;
			exit(0);
			//NO SOLUTION or INFINITY SOLUTIONS
		}
		if(nx != i) {
			swap(A[nx], A[i]);
			swap(B[nx], B[i]);
			det = -det;
		}

		det = mul(det, A[i][i]);

		// normalizando
		mult = inv[A[i][i]];
		for(int j=0; j<n; j++) {
			A[i][j] = mul(A[i][j], mult);
		}
		B[i] = mul(B[i], mult);

		for(int j=0; j<n; j++) {
			if(j == i) continue;
			if(A[j][i] != 0) {
				mult = A[j][i];
				for(int k=0; k<n; k++) {
					A[j][k] = sub(A[j][k], mul(mult, A[i][k]));
				}
				B[j] = sub(B[j], mul(mult, B[i]));
			}
		}
	}
	for(int i=0;i<n;i++) db(B[i]);
	for(int i=0;i<n;i++) for(int j=0;j<n;j++) db(A[i][j]);
}
ll powe(ll i, int j){
		if(j==0) return 1;
		if(j&1) return (i*powe(i, j-1))%MOD;
		ll x = powe(i, j/2);
		return (x*x)%MOD;
}
ll eval(ll x){
	ll resp = 0;
	for(int i=0;i<=10;i++) resp += B[i]*powe(x, i);
	return resp%MOD;
}
int main()
{
	n = 11;
	for(int i=0;i<=10;i++){
		cout<<"? "<<i<<endl;
		int x;
		cin>>x;
		A[i][0] = 1;
		for(int j=1;j<=10;j++) {
			A[i][j] = powe(i, j)%MOD;
		}
		B[i] = x;
	}
	solve();
	for(int i=0;i<p;i++) {
		if( eval(i) == 0){
			cout<<"! " << i<<endl;;
			return 0;
		}
	}
	cout<<"! -1"<<endl;

}
