#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>
#include <assert.h>

#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

using namespace std;
typedef long long mt;

template<typename T>
constexpr mt infValue = std::is_same<T, int>::value ? 2000100007 : 8600000000000000007ll;
template<typename T>
constexpr mt maxValue = std::is_same<T, int>::value ? 1000000007 : 1000000000000000001ll;

#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= (b); ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

const mt INF = infValue<mt>;
const long long MOD = 1000000007ll;//1000000007ll;
const double EPS = 1e-6;
const mt MAX = maxValue<mt>;
using pr = pair<mt, mt>;

#define N 2011
#define K 2
#define P 200
#define M (1000111)

mt n, m;
mt a[N], b[N];
mt c[N][N];
mt y, t, x;
int main(void)
{
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	scanf("%d %d", &n, &m);
	rep(0, n, i)
		scanf("%d", a + i), y ^= a[i];
	rep(0, m, i)
		scanf("%d", b + i), t ^= b[i];
	rep(0, n - 1, i) c[i][m - 1] = a[i];
	rep(0, m - 1, i) c[n - 1][i] = b[i];
	y ^= a[n - 1], t ^= b[m - 1];
	if ((y ^ b[m - 1]) == (t ^ a[n - 1])) {
		puts("YES");
		c[n - 1][m - 1] = y ^ b[m - 1];
		rep(0, n, i) {
			rep(0, m, j)
				printf("%d ", c[i][j]);
			putc('\n', stdout);
		}
	}
	else puts("NO");

	return 0;
}