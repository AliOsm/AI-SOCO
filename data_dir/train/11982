#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
ll mod = 1000000007, oo = 1000000009;

void Emsawy() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
}

#define clr(v,d)     memset(v, d, sizeof(v))
#define sz(v)	     ((int)((v).size()))
#define all(v)	     ((v).begin()), ((v).end())
#define allr(v)	     ((v).rbegin()), ((v).rend())
#define V	         vector
#define MP	         make_pair
#define bug(n)           cout<< #n <<" = "<< n << endl;
int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };
int dy[] = { 0, 0, 1, -1, 1, -1, -1, 1 };

V<V<int> > adj;
const ll N = 100000 + 5;
double cal(ll h, ll c, ll n, bool dis) {
	ll items = (h + n - 1) / n;
	ll price = items * c;
	if (dis)
		return price * 0.8;
	return price;
}
int main() {

	Emsawy();
	ll H, M, h, d, c, n;
	while (cin >> H >> M >> h >> d >> c >> n) {
		if (H >= 20){
			cout <<fixed << setprecision(9) << cal(h, c, n, 1) << endl;
		}
		else {
			ll add = (20 - H - 1) * 60 + (60 - M);
			double bef = cal(h, c, n, 0);
			double aft = cal(h + add * d, c, n, 1);
			if (bef - aft >= 1e-12)
				cout << fixed << setprecision(9) << aft << endl;
			else
				cout << fixed << setprecision(9) << bef << endl;
		}
	}
	return 0;
}
 