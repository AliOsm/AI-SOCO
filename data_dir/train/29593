#pragma GCC optimize("O3")
//#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define ld  double
#define pii pair<int,int>
#define pip pair<int,pii>
#define ppi pair<pii,int> 
#define ppp pair<pii,pii>
#define pb push_back
#define ppb pop_back
#define pf push_front
#define ppf pop_front
#define ff first
#define ss second
#define inf (ll)(1e9+11)
#define warmup ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
const int N = 100003;
ll mod=1e9+7;
int freq[N];
unordered_set<int> g[N];

signed main()
{
    warmup
    
    int n;
    cin>>n;
    int a[3][n+1],i,j,sz=1,x,y,z,f=-1,h=-1;
    for(i=1;i<=n-2;++i)
    {
        cin>>a[0][i]>>a[1][i]>>a[2][i];
        g[a[0][i]].insert(i), g[a[1][i]].insert(i), g[a[2][i]].insert(i);
    }
    
    unordered_set<int> v[3];
    for(i=1;i<=n;++i)
        if(g[i].size()<=2)
            v[g[i].size()].insert(i);
    
    i=*v[1].begin();
    v[1].erase(i);
    cout<<i<<' ';
    j=*g[i].begin();
    while(sz<=n-3)
    {
        x=a[0][j], y=a[1][j], z=a[2][j];
        g[x].erase(j), g[y].erase(j), g[z].erase(j);
        if(g[x].size()==1 and (f!=x))
        {
            cout<<x<<' ';
            j=*g[x].begin();
            if(sz==1)
                v[2].erase(x),f=*v[2].begin(),h=*v[1].begin();
        }   
        else if(g[y].size()==1 and (f!=y))
        {
            cout<<y<<' ';
            j=*g[y].begin();
            if(sz==1)
                v[2].erase(y),f=*v[2].begin(),h=*v[1].begin();
        }   
        else
        {
            cout<<z<<' ';
            j=*g[z].begin();
            if(sz==1)
                v[2].erase(z),f=*v[2].begin(),h=*v[1].begin();
        } 
        ++sz;
    }   
    cout<<f<<' '<<h;
    
    return 0;
}
