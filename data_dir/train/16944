#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define f(i, x, n) for(int i = x; i < (int)(n); ++i)

int const N = 1000000;
int k, n;
char s[N + 1], a[N + 1], b[N + 1], out[30];

bool ok(vector<char> const &p, vector<int> const &vis, char a, char b){
	if (p[a - 'a'] == b)return true;
	if (p[a - 'a'])return false;
	if (vis[b - 'a'])return false;
	return true;
}

void kil(vector<char> &p, vector<int> &vis, char a, char b){
	p[a - 'a'] = b;
	vis[b - 'a'] = 1;
}

void yes(vector<char> &p, vector<int> &vis){
	int j = 0;
	f(i, 0, k)if (!p[i]){
		while (vis[j])++j;
		vis[j] = true;
		p[i] = 'a' + j;
	}
	f(i, 0, p.size())out[i] = p[i];
	out[k] = 0;
	printf("YES\n%s\n", out);
}

void no() { printf("NO\n"); }

bool gol(vector<char> p, vector<int> vis, int ii, string const &a, string const &b){
	f(i, ii, n){
		f(j, a[i] + 1, b[i] + 1)if (ok(p, vis, s[i], j)) { kil(p, vis, s[i], j); yes(p, vis); return true; }
		if (!ok(p, vis, s[i], a[i]))return false;
		kil(p, vis, s[i], a[i]);
	}
	yes(p, vis);
	return true;
}

bool gor(vector<char> p, vector<int> vis, int ii, string const &a, string const &b){
	f(i, ii, n){
		f(j, a[i], b[i])if (ok(p, vis, s[i], j)) { kil(p, vis, s[i], j); yes(p, vis); return true; }
		if (!ok(p, vis, s[i], b[i]))return false;
		kil(p, vis, s[i], b[i]);
	}
	yes(p, vis);
	return true;
}

void solve(){
	scanf("%d%s%s%s", &k, s, a, b);
	
	vector<char> p(k, 0);
	vector<int> vis(k, 0);
	
	n = strlen(s);
	f(i, 0, n)if (a[i] == b[i]){
		if (ok(p, vis, s[i], a[i]))kil(p, vis, s[i], a[i]);
		else return no();
	}else {
		f(j, a[i] + 1, b[i])if (ok(p, vis, s[i], j)) { kil(p, vis, s[i], j); return yes(p, vis); }
		string aa(a), bb(b);
		bb[i] = a[i];
		f(j, i + 1, n)bb[j] = 'a' + k - 1;
		if (gol(p, vis, i, aa, bb))return;
		bb = b;
		aa[i] = b[i];
		f(j, i + 1, n)aa[j] = 'a';
		if (gor(p, vis, i, aa, bb))return;
		return no();
	}
	return yes(p, vis);
}

int main(){
	int t;
	scanf("%d", &t);
	while (t--)solve();
}