#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef pair<int, int> pii;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define mod(n, m) (((n%m) + m)%m)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'

const int N = 1e5 + 5, mod = 998244353;

ll even[N], odd[N], arr[N];
int n;

void generateEven(int idx)
{
	ll val = 0;
	ll curr = arr[idx];
	vector<int> dig;

	while (curr)
	{
		int r = curr % 10;
		curr /= 10;
		dig.push_back(r);
	}

	for (int i = sz(dig) - 1; i >= 0; i--)
	{
		val = val * 10ll + dig[i];
		val = val * 10ll;
		val %= mod;
	}

	even[idx] = val;
}

void generateOdd(int idx)
{
	ll val = 0;
	ll curr = arr[idx];
	vector<int> dig;

	while (curr)
	{
		int r = curr % 10;
		curr /= 10;
		dig.push_back(r);
	}

	for (int i = sz(dig) - 1; i >= 0; i--)
	{
		val = val * 10ll;
		val = val * 10ll + dig[i];
		val %= mod;
	}

	odd[idx] = val;
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> n;
	rep(i, 0, n)
		cin >> arr[i];

	sort(arr, arr + n);

	rep(i, 0, n)
	{
		generateEven(i);
		generateOdd(i);
	}
	ll res = 0, allOdd = 0;
	rep(i, 0, n)
		allOdd = (allOdd + odd[i]) % mod;
	rep(i, 0, n)
	{
		res = (res + (n * 1ll * even[i])%mod + allOdd) % mod;
	}
	cout << res << endl;
//	cout << arr[i] << " " << even[i] << " " << odd[i] << endl;

	return 0;
}
