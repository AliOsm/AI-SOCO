#include <bits/stdc++.h>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
const int MOD = (int)1e9+7;
const int N = (int)1e6+7;

// -------------------------------------------------- 变量 -------------------------------------------------- //

int n, m, a, b, k;
int ar[N];
char s[N], s1[N], s2[N];
map <string, int> M;

// -------------------------------------------------- 函数 -------------------------------------------------- //

void Init() {
}

ll h[N], p[N];

bool check(ll M) {
	int le, ri = 0;
	rep(i, 0, n) {
		le = ri;
		while (min(abs(h[i] - p[le]), abs(h[i] - p[ri])) + p[ri] - p[le] <= M) {
			ri++;
			if (ri == m) return 1;
		}
	}
	return 0;
}

int Solve() {
	rep(i, 0, n) scanf("%lld", h+i);
	rep(i, 0, m) scanf("%lld", p+i);
	ll L = 0, R = (ll)1e12;
	while (L < R) {
		ll M = L + (R - L >> 1);
		if (check(M)) R = M;
		else L = M + 1;
	}
	return printf("%lld\n", L);
}

// -------------------------------------------------- main -------------------------------------------------- //

int main ()
{
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d%d", &n, &m)) {
        //if (n == 0) break;
        //static int kase = 0; printf("Case #%d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}