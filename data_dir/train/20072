



#include<bits/stdc++.h>
using namespace std;

#define LL                  long long
#define ull                 unsigned long long LL
#define scl(n)              scanf("%lld", &n)
#define scf(n)              scanf("%lf", &n)
#define sci(n)              scanf("%d", &n)
#define scii(n,m)           scanf("%d %d",&n,&m)
#define sciii(n,m,p)        scanf("%d %d %d",&n,&m,&p)

#define MOD                 1000000007
#define MODP                99999999999973LL
#define pb                  push_back
#define mp                  make_pair
#define pp                  pair<LL,LL>
#define memo(a,b)           memset(a,b,sizeof(a))
#define INF                 1e9
#define EPS                 1e-8
#define Pi                  acos(-1.0)

#define N 200005


int main()
{
    LL n;
    cin>>n;

    LL a[n],b[n],x[n],y[n];

    map< pair<LL,LL>,bool >Map;
    for(int i=0;i<n;i++)
    {
        cin>>a[i]>>b[i];

        Map[ mp(a[i],b[i]) ]=true;
    }

    for(int i=0;i<n;i++)
    {
        cin>>x[i]>>y[i];
    }

    LL t_x,t_y;
    for(int i=0;i<n;i++)
    {
        t_x=a[0]+x[i];
        t_y=b[0]+y[i];

        int cnt=0;
        for(int j=0;j<n;j++)
        {
            LL tem_x=t_x-x[j];
            LL tem_y=t_y-y[j];

            if( Map[ mp(tem_x,tem_y) ]==true )
            {
                cnt++;
            }
            else
                break;
        }

        if(cnt==n)
        {
            cout<<t_x<<" "<<t_y<<endl;
            break;
        }

    }

    return 0;
}


/* LL dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* LL dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* LL dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* LL dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction
