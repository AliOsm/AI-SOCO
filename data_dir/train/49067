//  Copyright Â© 2018 Diego Garcia Rodriguez del Campo. All rights reserved.

#include<bits/stdc++.h>
#define MAX 200005
#define optimiza_io cin.tie(0); ios_base::sync_with_stdio(0);
using namespace std;
typedef long long i64;

i64 N, M, LIM;
i64 a[MAX];
i64 tree[2*MAX+10];
i64 sum[MAX];

i64 qry( i64 x )
{
    x += N + 1;
    i64 tmp = 0;
    for( i64 i = x; i > 0; i -= i & -i )
        tmp += tree[i];
    return tmp;
}

void upd( i64 x )
{
    x += N + 1;
    for( i64 i = x; i <= LIM ; i += i & -i )
        tree[i] ++;
}

i64 ans( i64 K )
{
    memset( tree , 0 , sizeof tree );
    i64 tmp = 0;
    upd( 0 );
    for( i64 i = 1; i <= N; i ++ )
    {
        sum[i] = sum[i - 1];
        if( a[i] < K )
            sum[i]--;
        else
            sum[i]++;
        tmp += qry( sum[i] - 1 );
        upd( sum[i] );
    }
    return tmp;
}

int main()
{
    optimiza_io
    cin >> N >> M;
    LIM = 2*N+4;
    for( i64 i = 1; i <= N; i ++ )
        cin >> a[i];
    cout << ans( M ) - ans( M + 1 ) << "\n";
    return 0;
}
