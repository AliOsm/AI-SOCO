#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vvi;
typedef vector<pii> vii;
typedef vector<vector<pii> > vvii;
typedef long double ld;
typedef map<int, int> mapii;
typedef map<string, int> mapsi;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pi  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) { x, {y, z } }

const int N = 5005;
int n;
vector<pair<int, pii> > vec;
int arr[5005];


int grid[5001][5001], mx[5001][5001];

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> n;

	rep(i, 0, n)
	{
		cin >> arr[i];
		grid[i][i] = arr[i];
	}
	rep(t, 0, n)
	{
		rep(i, 0, n)
		{
			if (!t)
				mx[i][i] = grid[i][i];
			else
			{
				if (i + t >= n)
					continue;
				int j = i + t;
				grid[i][j] = grid[i][j - 1] ^ grid[i + 1][j];

				mx[i][j] = max(grid[i][j], max(mx[i][j-1], mx[i+1][j]));
			}
		}
	}



	int q;
	cin >> q;
	while (q--)
	{
		int u, v;
		cin >> u >> v;
		u--, v--;
		cout << mx[u][v] << endl;
	}

	return 0;
}
