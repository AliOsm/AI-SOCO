#include <bits/stdc++.h>

using namespace std;
using ll = long long;
using ii = pair<int, int>;
#define ff first
#define ss second
#define pb push_back

const int N = 300005;

int n, m;
vector<int> adj[N];
ll ans[N];
int va[N], vb[N];
pair<int, ii> v[N];
ll psum[N], ssum[N];

int bs(int dif) {
	int l = 1, r = n;
	int an = 1;
	while(l <= r) {
		int mid = (l + r) / 2;
		if(v[mid].ff <= dif) {
			an = mid;
			l = mid + 1;
		}
		else {
			r = mid -1 ;
		}
	}
	return an;
}

int main(){
	scanf("%d %d", &n, &m);
	for(int i = 1; i <= n; i++) {
		scanf("%d %d", va + i, vb + i);
		v[i] = make_pair(vb[i] - va[i], make_pair(va[i], vb[i]));
	}
	sort(v + 1, v + n + 1);
	for(int i = 1; i <= n; i++){
		psum[i] = psum[i-1] + v[i].ss.ss;
	}
	for(int i = n; i >= 1; i--) {
		ssum[i] = ssum[i+1] + v[i].ss.ff;
	}
	
	for(int i = 1; i <= n; i++){
		int dif = vb[i] - va[i];
		ll id = bs(dif);
		ans[i] = id * va[i] + psum[id];
		ans[i] -= va[i] + vb[i];
		ans[i] += ssum[id+1] + 1LL * (n - id) * vb[i];
	}

	for(int i = 0; i < m; i++){
		int x, y;
		scanf("%d %d", &x, &y);
		ans[x] -= min(va[x] + vb[y], va[y] + vb[x]);
		ans[y] -= min(va[x] + vb[y], va[y] + vb[x]);
	}

	for(int i = 1; i <= n; i++) {
		printf("%lld ", ans[i]);
	}
	printf("\n");
	return 0;
}

