#include <bits/stdc++.h>
#ifndef M_PI
#define M_PI 3.14159265358979323846264338327
#endif // M_PI
#define endl "\n"
#define S struct
#define X first
#define Y second
#define V vector
#ifndef __linux__
#define LLD "%I64d"
#else
#define LLD "%ll""d"
#endif
#define FOR(x, y, z) for (int x = (y); x < (z); ++x)
#define FORR(x, y, z) for (int x = (y); x > (z); --x)
#define GET(a, n) for (int __i = 0; __i < (n); ++__i) cin >> a[__i];
#define GETM(a, n, m) for (int __i = 0; __i < (n); ++__i) for (int __j = 0; __j < m; ++__j) cin >> a[__i][__j];
#define PRINTM(a, n, m) for (int __i = 0; __i < (n); ++__i) { for (int __j = 0; __j < m; ++__j) cout << a[__i][__j] << " ";  cout << endl; };
#define PRINT(a, n) for (int __i = 0; __i < (n); ++__i) cout << a[__i] << " ";
#define IT(a) a.begin(), a.end()
#define SQR(x) (x) * (x)
#define CASE(a, s) cout << "Case #" << a << ": " << s << endl;
#define DEB(a) cout << #a << " = " << (a) << endl; cout.flush();
#define DEBA(a) for (auto __i: a) cout << __i << " "; cout << endl; cout.flush();
#define IFDEB(b, a) if (b) { cout << #a << " = " << (a) << endl; cout.flush(); }
using namespace std;
typedef long long LL;
typedef long double LD;
typedef unsigned long long ULL;
typedef pair <int, int> PII;
typedef pair <LL, LL> PLL;
const int MOD = 1000000007;
S Sync_stdio { Sync_stdio() { cin.tie(NULL); ios_base::sync_with_stdio(false); } } _sync_stdio;
S FAIL { FAIL () { cout << "CHANGE!!!" << endl;}};

int main()
{
    int n;
    cin >> n;
    vector <int> v(n);
    GET(v, n);
    int k;
    cin >> k;
    vector <int> w(k);
    GET(w, k);
    int j = 0;
    vector <pair <int, char>> res;
    FOR (i, 0, k) {
        int pre = j;
        LL sum = 0;
        LL minc = LLONG_MAX;
        LL maxc = LLONG_MIN;
        while (j < n && sum < w[i]) {
            sum += v[j];
            maxc = max(maxc, (LL)v[j]);
            minc = min(minc, (LL)v[j]);
            ++j;
        }
        if (sum != w[i]) {
            cout << "NO";
            return 0;
        }
        if (j - pre == 1) {
            continue;
        }
        if (maxc == minc) {
            cout << "NO";
            return 0;
        }
        int pos = 0;
        FOR (l, pre, j - 1) {
            if (v[l] == maxc && v[l + 1] != maxc) {
                pos = l;
            }
        }
        FOR (l, pre + 1, j) {
            if (v[l] == maxc && v[l - 1] != maxc) {
                pos = l;
            }
        }
        int cur = pos - pre + i;
        if (v[pos - 1] == maxc) {
            FOR (l, pos + 1, j) {
                res.push_back({cur, 'R'});
            }
            FOR (l, pre, pos) {
                res.push_back({cur, 'L'});
                --cur;
            }
        } else {
            FOR (l, pre, pos) {
                res.push_back({cur, 'L'});
                --cur;
            }
            FOR (l, pos + 1, j) {
                res.push_back({cur, 'R'});
            }
        }
    }
    if (j != n) {
        cout << "NO";
        return 0;
    }
    cout << "YES" << endl;
    for (auto i: res) {
        cout << i.X + 1 << " " << i.Y << endl;
    }
}
