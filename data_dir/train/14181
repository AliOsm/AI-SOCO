#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define MAX ((double)(1e9))
#define pi (2.0*acos(0))
#define M ((int)(998244353))
#define NN ((int)(3e5 + 5))
#define N ((int)(2e5 + 5))
#define eps ((double)(1e-12))
#define logn 21


using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef unsigned long long ull;


typedef tree < ll,  null_type,  less < ll >,  rb_tree_tag,  tree_order_statistics_node_update > o_set;
/// o_set s;
/// s.order_of_key(k) : Number of items strictly smaller than k .
/// *(s.find_by_order(k)) : K-th element in a set (counting from zero).

map < pair < int , int >  ,  bool > mm;

void edge(int n , int i , int k, int fin)
{
    for(int j = 0; j<k; j++){
        printf("%d %d\n",n,i+j);
    }
    for(int j = i; j<=fin; j += 2){
        mm[make_pair(j,1+j)] = 1;
    }
}

int main()
{
    int k, n;
    scanf("%d",&k);
    if(!(k&1)){
        printf("NO\n");
        return 0;
    }
    printf("YES\n");
    if(k==1){
        printf("2 1\n2 1\n");
        return 0;
    }
    n = 2*k+4;

    printf("%d %d\n",n,(n*k)/2);
    edge(2*k+3,1,k-1,k-1);
    printf("%d %d\n",2*k+3,2*k+4);
    edge(2*k+4,k+2,k-1,k*2);
    for(int i = 1; i<=k; i++){
        for(int j = i+1; j<=k+1; j++){
            if(!mm[make_pair(i,j)]) printf("%d %d\n",i,j);
        }
    }
    for(int i = k+2; i<=2*k+1; i++){
        for(int j = i+1; j<=2*k+2; j++){
            if(!mm[make_pair(i,j)]) printf("%d %d\n",i,j);
        }
    }
    return 0;
}
