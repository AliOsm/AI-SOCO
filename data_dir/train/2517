#include <bits/stdc++.h>

#define FI(i,a,b) for(int i=(a);i<=(b);i++)
#define FD(i,a,b) for(int i=(a);i>=(b);i--)

#define LL long long
#define Ldouble long double
#define PI 3.1415926535897932384626

#define PII pair<int,int>
#define PLL pair<LL,LL>
#define mp make_pair
#define fi first
#define se second

using namespace std;

map<string, int> M;
int p, n, len;

string myname, a, b;
char str[105];

struct ppl{
	int point;
	string so;
	bool operator<(const ppl &k) const{
		return point > k.point || (point == k.point && so < k.so);
	}
};

ppl s[105];

int main(){
	cin >> myname;
	scanf("%d\n", &n);
	FI(q, 1, n){
		cin.getline(str, 105);
		len = strlen(str);
		
		a = b = "";
		
		int pos, pt;
		FI(i, 0, len - 1){
			if(str[i] == ' '){
				pos = i + 1;
				break;
			}
			a += str[i];
		}
		
		if(str[pos] == 'p') pt = 15;
		if(str[pos] == 'c') pt = 10;
		if(str[pos] == 'l') pt = 5;
		
		int trig = -1, u = -1;
		FD(i, len - 1, 0){
			if(str[i] == '\'') trig = i;
			if(str[i] == ' '){
				if(u == -1) u = -2;
				else{
					u = i + 1;
					break;
				}
			}
		}
		FI(i, u, trig - 1) b += str[i];
		
		int id;
		
		if(b == myname) swap(a, b);
		
		if(a == myname){
			if(!M.count(b)){
				id = M[b] = ++p;
				s[p] = (ppl){0, b};
			}
			else id = M[b];
			
			s[id].point += pt;
		}
		else{
			if(!M.count(a)){
				id = M[a] = ++p;
				s[p] = (ppl){0, a};
			}
			if(!M.count(b)){
				id = M[b] = ++p;
				s[p] = (ppl){0, b};
			}
		}
	}
	sort(s + 1, s + p + 1);
	FI(i, 1, p) cout << s[i].so << endl;
	return 0;
}