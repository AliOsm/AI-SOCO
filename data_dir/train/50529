#include <iostream>
#include <fstream>
#include <cstring>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <iomanip>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <iterator>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define bit __builtin_popcount
#define all(x) x.begin(),x.end()

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;

const ll INF=1e18+123;
const ld EPS=1e-9;
const int inf=1e9+123;
const int MOD=1e9+7;
const int N=1e6+123;
const int dx[]={0,0,1,-1};
const int dy[]={1,-1,0,0};

int s[N],d[N];

vector<pii>v;

queue<pii>q;

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int n;
	cin>>n;
	for(int i=0;i<n;i++){
		cin>>d[i]>>s[i];
		if(d[i]==1){
			q.push(mp(i,s[i]));
		}
	}
	while(!q.empty()){
		pii z=q.front();
		q.pop();
		if(d[z.x]==0){
			continue;
		}
		v.push_back(mp(z.x,z.y));
		d[z.y]--;
		s[z.y]^=z.x;
		if(d[z.y]==1){
			q.push(mp(z.y,s[z.y]));
		}
	}
	cout<<v.size()<<endl;
	for(int i=0;i<v.size();i++){
		cout<<v[i].x<<" "<<v[i].y<<endl;
	}
	return 0;
}