#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

void maximize(int &a,int b)
{
  a=max(a,b);
}

const int limit=1000000;

int n,cases;
int a[limit];
int when[20][20];
int sol[limit];
int le[limit],ri[limit];
vector<int> lista[limit];
int maxiact[20];

int main()
{
  ios::sync_with_stdio(false);
  cin>>n>>cases;
  for (int i=1;i<=n;i++)
    cin>>a[i];
  for (int cas=0;cas<cases;cas++) {
    cin>>le[cas]>>ri[cas];
    lista[ri[cas]].push_back(cas);
  }
  for (int i=1;i<=n;i++) {
    int c=a[i];
    for (int b=0;b<20;b++)
      maxiact[b]=0;
    for (int b=0;b<20;b++)
      if (c&(1<<b))
	maxiact[b]=i;
    for (int b1=0;b1<20;b1++)
      if (c&(1<<b1))
	for (int b2=0;b2<20;b2++)
	  maximize(maxiact[b2],when[b1][b2]);
    for (int b1=0;b1<20;b1++)
      if (c&(1<<b1))
	for (int b2=0;b2<20;b2++)
	  maximize(when[b1][b2],maxiact[b2]);
    vector<int> &lis=lista[i];
    for (int ilis=0;ilis<int(lis.size());ilis++) {
      int cas=lis[ilis];
      int l=le[cas];
      int d=a[l];
      bool found=false;
      for (int b2=0;b2<20 and not found;b2++)
	if (d&(1<<b2))
	  found=l<=maxiact[b2];
      sol[cas]=found;
    }
  }
  for (int cas=0;cas<cases;cas++)
    if (sol[cas]) cout<<"Shi"<<endl;
    else cout<<"Fou"<<endl;
}

