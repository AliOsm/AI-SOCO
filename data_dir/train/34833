#include <algorithm>
#include <iostream>
#include <cmath>
#include <fstream>
#include <vector>
#include <iomanip>
#include <string>
#include <queue>
#include <cstring>
#include <map>
#include <stack>
#include <set>
#include <memory.h>
     
using namespace std;
     
typedef long long ll;
typedef long double ld;
     
#define y1 trololo
     
const ld pi = acos(-1.0);
const int intINF = (int)1e9;
     
template <typename T>
T gcd(T a, T b) {
    while (a > 0 && b > 0) {
        if (a > b) a %= b; else b %= a;
    }
    return (a + b);
}
     
template <typename T>
T lcm(T a, T b) {
    return a / gcd(a, b) * b;
}
     
template <typename T>
bool prime(T n) {
    if (n <= 1) {
        return false;
    }
    T i = 2;
    while (i * i <= n) {
        if (n % i == 0) {
            return false;
        }
        ++i;
    }
    return true;
}
     
ll get_power(ll a, ll b, ll mod) {
    if (b == 0) {
        return 1 % mod;
    }
    ll ans = get_power(a, b / 2, mod);
    ans = (ans * ans) % mod;
    if (b % 2) {
        ans *= a;
    }
    ans %= mod;
    return ans;
}
     
template<typename T, typename U> 
U power(T a, T b, U modulo) {
    ll A = (ll)a, B = (ll)b, C = (ll)modulo;
    return (U)get_power(A, B, C);
}  

void solveTask() {
    int n, k, a, b;
    cin >> n >> k >> a >> b;
    int cnt, last;
    vector<int> ans;
    if (a >= b) {
        ans.push_back(1);
        --a;
        cnt = 1, last = 1;
    } else {
        ans.push_back(2);
        --b;
        cnt = 1, last = 2;
    }
    for (int i = 2; i <= n; ++i) {
        if (a >= b) {
            if (last == 2) {
                cnt = 1, last = 1;
                --a;
                ans.push_back(1);
            } else {
                if (cnt + 1 <= k) {
                    ++cnt;
                    --a;
                    ans.push_back(1);
                } else {
                    if (b == 0) {
                        cout << "NO" << endl;
                        return;
                    }
                    --b;
                    ans.push_back(2);
                    cnt = 1, last = 2;
                }
            }
        } else {
            if (last == 1) {
                cnt = 1, last = 2;
                --b;
                ans.push_back(2);
            } else {
                if (cnt + 1 <= k) {
                    ++cnt;
                    --b;
                    ans.push_back(2);
                } else {
                    if (a == 0) {
                        cout << "NO" << endl;
                        return;
                    }
                    --a;
                    ans.push_back(1);
                    cnt = 1, last = 1;
                }
            }
        }
    }
    for (int i = 0; i < ans.size(); ++i) {
        if (ans[i] == 1) cout << "G"; else cout << "B";
    }
    cout << endl;
}
 
int main() {
#ifndef ONLINE_JUDGE  
    freopen("input.txt", "r", stdin);
//freopen("output.txt", "w", stdout);
#else
    // online submission
#endif    
    ios_base::sync_with_stdio(false);
    solveTask();
    return 0;
}