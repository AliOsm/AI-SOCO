#include <iostream>
#include <cmath>
#include <string>
#include <stack>

using namespace std;

int open[100005];

void setOpen(string s, char c1, char c2)
{
    stack <int> S;
    for (int i = 0; i<s.length(); i++)
    {
        if (s[i] == c1)
            S.push(i);
        else if (s[i] == c2)
        {
            if (!S.empty())
            {
                open[i] = S.top();
                S.pop();
            }
            else
                open[i] = -1;
        }
    }
}

int len[100005];
int tedad[100005];

int main()
{
    string s;
    cin >> s;
    setOpen(s, '(', ')');
    setOpen(s, '[', ']');

   for (int i = 0; i<s.length(); i++)
        if (s[i] == ')' || s[i] == ']')
        {
            int Open = open[i];
            if (Open == -1)
                continue;
            if (Open == i-1 || len[i-1] == i - Open - 1)
            {
                len[i] = len[i-1] + 2;
                tedad[i] = tedad[i-1] + (s[i] == ']');
                if (Open)
                {
                    len[i] += len[Open-1];
                    tedad[i] += tedad[Open-1];
                }
            }
        }
    int ans = 0;
    string sans = "";
    for (int i = 0; i<s.length(); i++)
       ans = max(ans, tedad[i]);
    for (int i = 0; i<s.length(); i++)
        if (tedad[i] == ans)
        {
            int j = i;
            int p = 0, bSaw = 0;
            while (bSaw < ans || p)
            {
                sans += s[j];
                if (s[j] == ')')
                    p++;
                else if (s[j] == '(')
                    p--;
                else if (s[j] == '[')
                    bSaw++;
                j--;
            }
            break;
       }
    cout << ans << endl;
    for (int i = sans.length()-1; i>=0; i--)
        cout << sans[i];
    cout << endl;
    return 0;
}
