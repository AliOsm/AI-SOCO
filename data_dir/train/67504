#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)    for(long long i=a;i<=b;i++)
#define fr(i,a)      for(long long i=0;i<a;i++)
#define fd(i,a,b)    for(long long i=b;i>=a;i--)
#define clr(x)       memset(x,0,sizeof(x))
#define cln(x)       memset(x,-1,sizeof(x))
#define __           printf(" ")
#define _            printf("\n")
#define _o           printf("1\n")
#define stree        long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define snode        long long s,long long e,long long node
#define slft         s,mid,lft
#define srht         mid+1,e,rht
#define sin()        if(S<=s&&e<=E)
#define sout()       if(S>e||s>E)
#define mod          1000000007
#define read()       freopen("in.txt","r",stdin)
#define write()      freopen("out.txt","w",stdout)
#define sfl(x)       scanf("%I64d",&x)
#define sfll(x,y)    scanf("%I64d %I64d",&x,&y)
#define sflll(x,y,z) scanf("%I64d %I64d %I64d",&x,&y,&z)
#define pfl(x)       printf("%I64d",x)
#define pfll(x,y)    printf("%I64d %I64d",x,y)
#define pflll(x,y,z) printf("%I64d %I64d %I64d",x,y,z)
#define xx           100000


long long a[xx+10];
vector<int>vec[xx+10];
int cnt[70];

set<pair<int,int> >st;
int dpt[xx+10];
int ans=mod;
int t=1;
int par[xx+10];

void bfs(int s){
   queue<int>q;
   q.push(s);
   dpt[s]=0;
   a[s]=t;
   while(!q.empty()){
      int cur=q.front();
      q.pop();
      for(auto nxt:vec[cur]) if(a[nxt]==t){
            //if(nxt==s) cout<<s<<" "<<dpt[cur]<<endl;
            if(nxt==par[cur]) continue;
            ans=min(dpt[cur]+dpt[nxt]+1,ans);
      }
      else{
          a[nxt]=t;
          dpt[nxt]=dpt[cur]+1;
          q.push(nxt);
          par[nxt]=cur;
      }
   }
   t++;
}

main(){
    long long n;
    sfl(n);
    clr(cnt);
    //cout<<n<<endl;
    fr(i,n) {
        sfl(a[i]);
        fr(j,63) if((1ll<<j)&a[i]) cnt[j]++;
    }
    fr(i,63) if(cnt[i]>2) {
       cout<<3<<endl;
       return 0;
    }
    cln(cnt);
    fr(i,n) {
        fr(j,63) if((1ll<<j)&a[i]) {
            if(cnt[j]!=-1) st.insert({cnt[j],i});
            cnt[j]=i;
        }
    }
    for(auto cur:st) {
            vec[cur.first].push_back(cur.second);
            vec[cur.second].push_back(cur.first);
            //cout<<cur.first<<" "<<cur.second<<endl;
    }
   clr(a);t=1;
   fr(i,n) bfs(i);
   if(ans==mod) ans=-1;
   cout<<ans<<endl;



    return 0;
}
