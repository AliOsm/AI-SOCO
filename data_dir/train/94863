#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<ll> point;
#define F first
#define S second



int main()
{
	#ifdef DGC
		//freopen("a.txt", "r", stdin);
		//freopen("b.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(0), cin.tie(0);

	int n, m;
	cin >> n >> m;

	vector<int> mp(m+1);
	vector<vector<ll>> c(m+1);

	for (int i = 0, x, w; i < n; ++i)
	{
		cin >> x >> w;
		++mp[x];
		c[x].push_back(w);
	}

	for (auto &i : c)
	{
		sort(i.begin(), i.end());
		//for (int j = 1; j < i.size(); ++j)
			//i[j] += i[j-1];
	}

	ll ans = numeric_limits<ll>::max();
	for (int t = max(1, mp[1]); t <= n; ++t)
	{
		vector<ll> s;
		ll tmp = 0;
		int e = 0;
		for (int i = 2; i <= m; ++i)
		{
			int q = mp[i]-t+1, g = 0;
			for (auto k : c[i])
			{
				if (++g <= q)
				{
					tmp += k;
					++e;
				}
				else
					s.push_back(k);
			}
		}

		sort(s.begin(), s.end());
		reverse(s.begin(), s.end());
		e = t-mp[1]-e;
		for (; e > 0; --e)
		{
			tmp += s.back();
			s.pop_back();
		}

		ans = min(ans, tmp);
	}

	cout << ans << "\n";

	return 0;
}

