#include<bits/stdc++.h>
#define int long long int
#define ull unsigned long long int
#define getFaster ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define rev(i,n,init) for(int i=n;i>=init;i--)
#define MAXN 200005
#define MOD 1000000007
#define f first
#define s second
#define endl '\n'
#define pii pair<int,int>
#define precise(i) cout<<fixed<<setprecision(i)
using namespace std;
const double PI = atan(1.0)*4;
const int64_t INF=100000000000000003;
const int32_t LOG=21;
const int BIG=pow(2,20);
const int N=100005;        
 int a[100005];
 vector<int>v[2000005];
 bool check[100005];
 map<int,bool> m;
 set<int> s;
 vector<int> sol;
 int cnt[2000005];
 int lim=1000001;
 void base_case(int n)
 {
     rep(i,0,n)
     {
         v[a[i]+lim].push_back(i);
     }
     rep(i,1,lim)
     {
        int x=v[lim-i].size();
        int y=v[i+lim].size();
        if(x!=y){cout<<-1<<endl;exit(0);}
        rep(j,0,x)
        {
           if(v[lim-i][j]<v[i+lim][j]){cout<<-1<<endl;exit(0);}
        }
     }
 }
 int32_t main(){
         getFaster;
         int n;
         cin>>n;
         rep(i,0,n)cin>>a[i];
         rep(i,0,n)
         {
            cnt[a[i]+lim]++;
         }
         bool g=true;
         rep(i,1,lim)
         {
            if(cnt[lim-i]!=cnt[i+lim])
            {
               g=false;
               break;
            }  
         }
         if(!g){cout<<-1<<endl;
          return 0;}
        
         base_case(n);
         sol.push_back(-1);
         rep(i,0,n)
         {
            int cur=a[i];
            //cout<<"i is "<<i<<endl;
            if(a[i]<0)
            {
                s.erase(-a[i]);
            }
            else if(a[i]>0)
            {
                if(s.count(a[i])>0)
                {
                     cout<<-1<<endl;
                     return 0;        
                }
                else if(m[a[i]]==true)
                {
                   cout<<-1<<endl;
                   return 0;
                }  
                else
                {s.insert(a[i]);m[a[i]]=true;}  
            }
            if(s.size()==0)
            {
                sol.push_back(i);
                m.clear();
            }

         }
         //cout<<"YO"<<endl;
         cout<<sol.size()-1<<endl;
         rep(i,1,sol.size())
         {
             cout<<sol[i]-sol[i-1]<<" ";
     
         }
         cout<<endl;
         return 0;
}