#include <bits/stdc++.h>
#define SZ(x) (int)x.size()
#define X first
#define Y second
const int SZ=1e3+5;
const int mod=1e9+7;
typedef long long ll;
const ll oo=(1LL<<62);
const double PI=acos(-1);
using namespace std;

int n,m,z;
string s,t;
int dp[SZ][SZ][10][2];

int DP(int i,int j,int k,bool suq)
{
	if(i==n || j==m || k==0)
		return 0;
	if(dp[i][j][k][suq]!=-1)
		return dp[i][j][k][suq];
	
	int c1=0,c2=0,c3=0,c4=0;
	
	if(s[i]==t[j])
		c1=DP(i+1,j+1,k,true)+1;

	if(suq)
		c2=DP(i,j,k-1,false);
	else
		c3=DP(i+1,j,k,false),
		c4=DP(i,j+1,k,false);

	return dp[i][j][k][suq]=max(max(c1,c2),max(c3,c4));
}

int main()
{
	cin>>n>>m>>z>>s>>t;
	memset(dp,-1,sizeof dp);
	cout<<DP(0,0,z,0);
}