
// Problem : A. Yet Another Tetris Problem
// Contest : Codeforces Round #627 (Div. 3)
// URL : https://codeforces.com/contest/1324/problem/A
// Memory Limit : 256 MB
// Time Limit : 2000 ms
// Powered by CP Editor (https://github.com/cpeditor/cp-editor)

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std;
using namespace __gnu_pbds;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>
ordered_set;	

#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<pii, int> para;
const ll inf = 1e18 + 7;
const ll maxN = 1e6 + 5;
const ll MOD = 1e9 + 7;

int n, t;
map<vi, bool> m;

void solve() {
	cin >> n;
	vi vec(n);
	m.clear();
	REP(i, n) cin >> vec[i];
	int ile = 0;
	while (!m[vec]) {
		m[vec] = true;
		int x = *min_element(vec.begin(), vec.end());
		REP(i, n) {
			vec[i] -= x;
		}
		ile = 0;
		REP(i, n) {
			if (vec[i] == 0) {
				vec[i] += 2;
				ile++;
			}
		}
		if (ile == n) break;
	}
	if (ile == n) cout << "YES\n";
	else cout << "NO\n";
}

int main() {
	ios_base::sync_with_stdio(0);
	cin >> t;
	REP(_, t) solve();
	return 0;
}
