/* 331C2 */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1
#define ll				__int64

__int64 ten[20];
map<pair<int,ll>, pair<int,ll> > tb;
map<pair<int,ll>, pair<int,ll> >::iterator iter;

pair<int,ll> dfs(int pmx, __int64 n) {
	if (n <= 0)
		return mp((int)n, 0LL);
	
	iter = tb.find(mp(pmx, n));
	if (iter != tb.end()) {
		return iter->sec;
	}
	
	int mx = pmx;
	int a[20];
	__int64 nn = n;
	rep(i, 0, 20) {
		a[i] = nn % 10;
		nn /= 10;
		mx = max(a[i], mx);
	}
	
	pair<int, ll> p;
	
	if (n%100 <= 90) {
		p = dfs(pmx, n-mx);
		++p.sec;
		return p;
	}
	
	int i, j, k;
	
	for (i=1; i<20; ++i) {
		if (a[i] < 9)
			break;
	}
	j = i;
	int mx_ = pmx;
	for (i=j; i<20; ++i)
		mx_ = max(mx_, a[i]);
	
	if (n < ten[j]) {
		p = dfs(pmx, n-mx);
		++p.sec;
		return p;
	}
	
	p = dfs(mx_, n%ten[j]);
	pair<int,ll> ret = dfs(pmx, n/ten[j]*ten[j]+p.fir);
	ret.sec += p.sec;
	
	return tb[mp(pmx, n)] = ret;
}

void init() {
	ten[0] = 1LL;
	rep(i, 1, 20)
		ten[i] = ten[i-1] * 10;
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	init();
	__int64 n;
	
	scanf("%I64d", &n);
	pair<int,ll> p = dfs(0, n);
	printf("%I64d\n", p.sec);
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
