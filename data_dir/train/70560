#include <iostream>
#include <bits/stdc++.h>
#include <string>
using namespace std;

#define pb push_back
#define ull unsigned long long
#define ll long long
#define F first
#define S second
#define PI acos(-1)
#define EPS 1e-9
#define BASE 31ll
#define BASE2 53ll
#define ld double
#define MAX 1000000000
#define NIL 0
#define INF 1e15
#define infi 1e16
#define rd(a) scanf("%d",&a)
#define rd2(a,b) scanf("%d %d",&a,&b)
#define rd3(a,b,c) scanf("%d %d %d",&a,&b,&c)
#define rdll(a) scanf("%I64d",&a)
#define sz(a) (int) a.size()
#define lp(i,a,n) for(int i=(a); i<=(n) ; ++i)
#define lpd(i,n,a) for(int i=(n); i>=(a) ; --i)
#define pi acos(-1)
#define lc (x << 1)
#define rc (x << 1 | 1)
#define cp(a,b)                 ( (conj(a)*(b)).imag() )	// a*b sin(T), if zero -> parllel
#define dp(a,b)                 ( (conj(a)*(b)).real() )	// a*b cos(T), if zero -> prep
#define angle(a)                (atan2((a).imag(), (a).real()))
#define X real()
#define Y imag()
#define vec(a,b)                ((b)-(a))

#define int64 long long


typedef complex<double>point;
typedef complex<double>CX;
typedef pair<int,int>ii;
typedef pair<int,ii>tri;
typedef pair<vector<int>,int>vii;
typedef pair<int, int> pii;
typedef pair<ii,ii> line;
typedef pair<ll, ll> pll;
typedef vector<int> vi;

const int N=1000005;


ll mod=1e9+7;
int gcd(int a, int b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
bool is_vowel(char c){if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u')return 1;return 0;}
ld getDistance(ld x1,ld y1,ld x2,ld y2){return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));}
ll extended_euclidean(ll a,ll b,ll &x,ll &y){if(b==0){x=1;y=0;return a;}ll g = extended_euclidean(b,a%b,y,x);y -= (a/b)*x;return g;}
ll power(ll base,ll p){if(p==1)return base;if(!p)return 1ll;ll ret=power(base,p/2);ret*=ret;ret%=mod;if(p&1)ret*=base;return ret%mod;}



int a[30],n,acc[1001][30];
string s;
ll dp[1001][1001],dp2[1001][1001];
bool isValid(int s,int e){
     if(e==n)e--;
     if(e<s)return 1;
     lp(i,0,26){
        int sum=acc[e][i];
        if(s>0)sum-=acc[s-1][i];
        if(sum){
            if(a[i]<e-s+1)return 0;
        }
     }
     return 1;
}
ll solve(int s,int idx){
   if(idx==n){
        return isValid(s,idx-1)&&s!=n;
   }
   if(dp[s][idx]!=-1)return dp[s][idx];
   ll ret=0;//cout<<s<<' '<<idx<<endl;
   if(isValid(s,idx)){
      ret+=solve(s,idx+1)%mod;
      ret+=solve(idx+1,idx+1)%mod;
   }
   return dp[s][idx]=ret%mod;
}
ll solveMN(int s,int idx){
   if(idx==n){
        if(isValid(s,idx-1)){
            if(s==n)return 0;
            return 1;
        }
        return 1e9;
   }
   if(dp[s][idx]!=-1)return dp[s][idx];
   ll ret=1e9;//cout<<s<<' '<<idx<<endl;
   if(isValid(s,idx)){
      ret=min(ret,solveMN(s,idx+1));
      ret=min(ret,solveMN(idx+1,idx+1)+1);
   }
   return dp[s][idx]=ret;
}
ll solveMX(int s,int idx){
   if(idx==n){
      return (idx-s);
   }
   if(dp2[s][idx]!=-1)return dp2[s][idx];
   ll ret=0;//cout<<s<<' '<<idx<<endl;
   if(isValid(s,idx)){
     if(solve(s,idx+1)>0)
      ret=max(solveMX(s,idx+1),ret);
     if(solve(idx+1,idx+1)>0||(idx+1==n))
      ret=max(max(ret,(idx-s+1)*1LL),solveMX(idx+1,idx+1));
   }
   return dp2[s][idx]=ret;
}
int main(){
 //freopen("test.in","r",stdin);
 cin>>n>>s;
 lp(i,0,26)cin>>a[i];
 lp(i,0,n-1){
    acc[i][s[i]-'a']++;
    if(i)lp(j,0,26)acc[i][j]+=acc[i-1][j];
 }
 memset(dp,-1,sizeof(dp));
 cout<<solve(0,0)<<endl;
 memset(dp,-1,sizeof(dp));
 memset(dp2,-1,sizeof(dp2));
 cout<<solveMX(0,0)<<endl;
 memset(dp,-1,sizeof(dp));
 cout<<solveMN(0,0)<<endl;
 return 0;
}
