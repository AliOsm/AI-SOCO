//bismillahir rahmanir rahim            //Author:Fayed Anik
 
#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
 
using namespace std;
//using namespace __gnu_pbds;
 
/*
template <typename T>  using ordered_set =
    tree<T, null_type, less<T>,   /// greater<T> for sorting decreasingly
    rb_tree_tag, tree_order_statistics_node_update>;
*/

#define         ll                          long  long
#define         lf                          double
#define         pb(x)                       push_back(x)
#define         ull                         unsigned long long
#define         sfl(a)                      scanf("%lld",&a)
#define         sf(a)                       scanf("%d",&a)
#define         pf(a)                       printf("%d\n",a)
#define         pfl(a)                      printf("%lld\n",a)
#define         FOR(x,n)                    for(ll x=1;x<=n;++x)
#define         pii                         pair< ll , ll >
#define         mp(a,b)                     make_pair(a,b)
#define         mod                         1000000007
#define         INF                         2e18
#define         f1                          first
#define         f2                          second
#define         all(v)                      v.begin(),v.end()
#define         PI                          acos(-1)
#define         printminusone               printf("-1\n")
#define         bug                         printf("bug")
#define         FILEIN                      freopen("in.txt","r",stdin)
#define         FILEOUT                     freopen("out.txt","w",stdout)
 
//ll SET(ll mask,ll pos){ return mask = (mask | (1ll<<pos)); }
//ll RESET(ll mask,ll pos){ return mask = mask & ~(1ll<<pos); }
//bool CHECK(ll mask,ll pos) { return (bool) (mask & (1ll<<pos)); }
//priority_queue <ll, vector<ll>, greater<ll> > pq;

#define lim 500005

stack< pair<ll,ll> > st;

ll a[lim],L[lim],R[lim],arrL[lim],arrR[lim],ans[lim];

int main(){
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    ll n;
    sfl(n);
    for(ll i=1;i<=n;i++){
        sfl(a[i]);
    }
    L[1] = -1;
    st.push(mp(a[1],1));
    for(ll i=2;i<=n;i++){
        if(st.empty()){
            st.push(mp(a[i],i));
            L[i] = -1;
        }
        else{
            bool f=1;
            while(!st.empty()){
                pii t = st.top();
                if(t.f1>=a[i]){
                    st.pop();
                }
                else{
                    f=0;
                    L[i] = t.f2;
                    st.push(mp(a[i],i));
                    break;
                }
            }
            if(f){
                st.push(mp(a[i],i));
                L[i] = -1;
            }
        }
    }
    while(!st.empty()) st.pop();
    R[n] = -1;
    st.push(mp(a[n],n));
    for(ll i=n-1;i>=1;i--){
        if(st.empty()){
            R[i]=-1;
            st.push(mp(a[i],i));
        }
        else{
            bool f=1;
            while(!st.empty()){
                pii t = st.top();
                if(t.f1>=a[i]){
                    st.pop();
                }
                else{
                    f = 0;
                    R[i]=t.f2;
                    st.push(mp(a[i],i));
                    break;
                }
            }
            if(f){
                R[i]=-1;
                st.push(mp(a[i],i));
            }
        }
    }
    /*
    for(ll i=1;i<=n;i++){
        cout << L[i] <<" ";
    }
    cout << endl;
    for(ll i=1;i<=n;i++){
        cout << R[i] <<" ";
    }
    cout << endl;
    return 0;
    */

    for(ll i=1;i<=n;i++){
        if(L[i]==-1){
            arrL[i] = i*a[i];
        }
        else{
            arrL[i] = arrL[L[i]] + (i-L[i]) * a[i];
        }
    }

    for(ll i=n;i>=1;i--){
        if(R[i]==-1){
            arrR[i] = (n-i+1)*a[i];
        }
        else{
            arrR[i] = arrR[R[i]] + (R[i]-i) * a[i];
        }

        //cout << arrR[i] << endl;

    }

    //cout << arrR[1] << endl;

    ll optind=1,mx=arrL[1]+arrR[1]-a[1];
    for(ll i=2;i<=n;i++){
        if(arrL[i]+arrR[i]-a[i]>mx){
            mx = arrL[i]+arrR[i]-a[i];
            optind = i;
        }
    }
    ans[optind] = a[optind];
    for(ll i=optind-1;i>=1;i--){
        ans[i] = min(ans[i+1],a[i]);
    }
    for(ll i=optind+1;i<=n;i++){
        ans[i] = min(ans[i-1],a[i]);
    }
    for(ll i=1;i<=n;i++){
        printf("%lld ",ans[i]);
    }
    printf("\n");
    return 0;
}

