/*
@@@@@@@@@@@@@@@@PP!!__......::ii@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@NNGG@@MM..............MM$$oo@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@UU--..::00@@II..........GGGG..^^NN@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@UU..........FF@@##,,......IINN....,,WW@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@WW..............--##NNll....++@@''....::NN@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@^^............--::JJ@@@@dd....NNrr......++@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@LL....--rrooqqDDNN@@@@@@@@@@WWcc00JJ........UU@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@EEGGWW@@NNDD@@@@@@@@@@@@@@@@@@@@@@VV......^^@@NN%%AANN@@@@@@@@@@##%%%%qq%%NN@@@@@@@@003333AAwwwwWW@@@@NNwwdd%%%%##@@@@@@DDSSddGGGGGGGGddWW@@@@ddGG@@@@@@@@UUAANN@@@@@@GGAAGGGGmmNN@@@@@@@@UUddGGGGGGGG
@@DDqqffrr..^^@@@@@@@@@@@@@@@@@@@@@@OO......NN@@''''..22@@@@@@@@WW............EE@@@@@@ll..........GG@@@@PP..........::NN@@::..............ee@@%%....NN@@@@NN....%%@@@@##............&&@@@@WW..........,,
ff..........QQ@@@@@@@@@@@@@@@@@@@@@@NN....RR@@;;..!!..))@@@@@@@@GG....$$##!!....NN@@@@,,..ff00####@@@@@@))..rrWWdd....77@@OOUUZZ....oo##AA@@@@JJ..!!@@@@@@AA....NN@@@@55..''88##--..!!@@@@AA....GG88GGWW
::........oo@@@@@@@@@@@@@@@@@@@@@@@@@@--==@@EE..!!qq..!!@@@@@@@@cc..//@@@@oo....NN@@MM....00@@@@@@@@@@@@,,..$$@@@@''..JJ@@@@@@OO..''@@@@@@@@@@!!..ss@@@@@@TT..;;@@@@@@ll..II@@@@rr..;;@@@@ll..rr@@@@@@@@
--......~~@@@@@@@@@@@@@@@@@@@@@@@@@@@@FF@@NN....NN@@..''NN@@@@@@,,..JJNNEE....++@@@@44....,,::::00@@@@MM....ooww;;..!!NN@@@@@@cc..rr@@@@@@@@NN....RR@@@@@@::..FF@@@@@@__..))SS//..,,QQ@@@@::....!!::11@@
........DD@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;;..~~NN##....MM@@@@00....--......++NN@@@@ll....,,''::NN@@@@ZZ..'',,....nn@@@@@@@@@@::..**@@@@@@@@%%....NN@@@@00....##@@@@DD....::....((@@@@@@WW....''''..JJ@@
......SSUU))@@@@@@@@@@@@@@@@@@@@@@@@@@@@oo........''....GG@@@@SS....wwAAqqWW@@@@@@@@,,..SS@@@@@@@@@@@@cc..))NN!!..ii@@@@@@@@NN....UU@@@@@@@@aa..--@@@@@@SS....@@@@@@VV..,,NN))..^^@@@@@@qq..''@@@@@@@@@@
''..;;@@,,''@@@@@@@@@@@@@@@@@@@@@@@@@@QQ....11PP**FF,,..oo@@@@((..==@@@@@@@@@@@@@@MM....55NNMMWW@@@@@@__..55@@SS....NN@@@@@@dd....NN@@@@@@@@OO....oo00dd''..ss@@@@@@//..((@@00....##@@@@cc..!!NNNN00@@@@
!!..WWPP....NN@@@@@@@@@@@@@@@@@@@@@@@@::..;;@@@@@@@@//..++@@@@''..**@@@@@@@@@@@@@@ee..........!!@@@@##....QQ@@00....GG@@@@@@((..^^@@@@@@@@@@@@ii..........((@@@@@@NN....44@@@@''..LL@@@@__..........AA@@
CCee00......OO@@@@@@@@@@@@@@@@@@@@@@NNGGqq@@@@@@@@@@0055UU@@@@RRAANN@@@@@@@@@@@@@@MMaawwaaaaFFMM@@@@NNPPdd@@@@@@RRVV00@@@@@@UUZZDD@@@@@@@@@@@@@@UU2211oo##@@@@@@@@@@AA55NN@@@@88PP##@@@@qqZZeeFFoo55@@@@
@@NN::......aa@@@@@@@@@@@@@@@@@@@@@@@@@@@@QQ**ee@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NN@@@@@@@@@@@@@@NN@@@@@@@@@@NNNN@@@@@@@@@@@@@@@@@@@@NNNNNN@@@@@@@@@@@@@@@@@@@@@@NNNN@@@@@@@@@@@@@@@@NNNN@@@@@@@@@@@@@@@@
@@EE........ssUU^^WW@@@@@@@@@@NNmmee((::......aa@@@@NN22NN@@@@@@@@WWccNN@@@@@@VVddooqq@@@@@@SSddAA%%@@@@@@ooqqZZdd@@@@@@@@LLOO@@@@@@GGccFFNN@@@@OOVV$$PP@@@@@@5544AAFF@@@@QQAA@@@@&&LLGGOO@@@@%%55dd%%@@
@@NN........;;WW....ww@@@@((................;;@@@@@@@@LL@@@@@@@@@@aa~~55@@@@@@**%%CC22@@@@OO**@@@@IIWW@@NNssUUoooo@@@@@@%%//11@@@@@@@@ee00@@@@@@ff@@@@EESS@@@@**GGRRiiNN@@##aa@@@@qqLLMMWW@@@@GGFF&&UU@@
@@@@UU......--NN!!....++NNOO''..............WW@@@@@@@@))00@@@@@@00//ddccMM@@@@LLddSS**@@@@8822@@@@ffNN@@NNII##PPaa@@@@@@//AAiiRR@@@@@@CC##@@@@@@iiNN@@ooRR@@@@22ddRRff@@@@##22@@@@3377##MM@@@@OODDSSii@@
@@@@@@qq......MM((......--UU@@**..........##@@@@@@@@@@FFeemm@@@@##%%@@UU88@@@@33GGGGRR@@@@@@44qqwwRR@@@@@@OO@@@@GG@@@@WWEE@@WWdd@@@@@@%%NN@@@@@@OOPP%%EE@@@@@@$$@@@@RRNN@@NNRR@@@@##ZZmm$$@@@@UUddmmSS@@
@@@@@@@@QQ::..qqPP..........11@@MM__..::00@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NNNN@@@@
@@@@@@@@@@@@**GG%%..............DDNNGG@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@NNcc::......::==GG@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  
*/
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cstdio>
#include <numeric>
#include <cstring>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <list>
#include <cmath>
#include <bitset>
#include <cassert>
#include <queue>
#include <stack>
#include <deque>
      
       
       
using namespace std;
template<typename T1, typename T2>inline void chkmin(T1 &x, T2 y) { if (x > y) x = y; }
template<typename T1, typename T2>inline void chkmax(T1 &x, T2 y) { if (x < y) x = y; }
/** long longerface */
       
inline long long readChar();
template <class T = long long> inline T readInt(); 
template <class T> inline void writeInt( T x, char end = 0 );
inline void writeChar( long long x ); 
inline void writeWord( const char *s );
       
/** Read */
       
static const long long buf_size = 4096;
       
inline long long getChar() {
    static char buf[buf_size];
    static long long len = 0, pos = 0;
    if (pos == len) {
        pos = 0, len = fread(buf, 1, buf_size, stdin);
    }
    if (pos == len) {
        return -1;
    }
    return buf[pos++];
}
       
inline long long readChar() {
    long long c = getChar();
    while (c <= 32) {
        c = getChar();
    }
    return c;
}
       
template <class T>
inline T readInt() {
    long long s = 1, c = readChar();
    T x = 0;
    if (c == '-')
        s = -1, c = getChar();
    while ('0' <= c && c <= '9')
        x = x * 10 + c - '0', c = getChar();
    return s == 1 ? x : -x;
}
       
/** Write */
       
static long long write_pos = 0;
static char write_buf[buf_size];
       
inline void writeChar( long long x ) {
    if (write_pos == buf_size)
        fwrite(write_buf, 1, buf_size, stdout), write_pos = 0;
    write_buf[write_pos++] = x;
}
       
template <class T> 
inline void writeInt( T x, char end ) {
    if (x < 0)
        writeChar('-'), x = -x;
       
    char s[24];
    long long n = 0;
    while (x || !n)
        s[n++] = '0' + x % 10, x /= 10;
    while (n--)
        writeChar(s[n]);
    if (end)
        writeChar(end);
}
       
inline void writeWord( const char *s ) {     while (*s)
writeChar(*s++); }
       
struct Flusher {
    ~Flusher() {
        if (write_pos)
            fwrite(write_buf, 1, write_pos, stdout), write_pos = 0;
    }
} flusher;   
#define sz(c) (long long)(c).size()
#define all(c) (c).begin(), (c).end()
#define rall(c) (c).rbegin(), (c).rend()
#define left left228
#define right right228
#define rank rank228
#define y1 y1228                                                         
#define read(FILENAME) freopen((FILENAME + ".in").c_str(), "r", stdin)
#define write(FILENAME) freopen((FILENAME + ".out").c_str(), "w", stdout)
#define files(FILENAME) read(FILENAME), write(FILENAME)
#define pb push_back
const string FILENAME = "input";
const int MAXN = 100002;


int n, q;
double a[MAXN];
double sum[MAXN];
double mod[MAXN];
double mod1[MAXN];
int len;



double getsum(int l, int r) {
    int f = l / len;
    int f1 = r / len;
    double ans = 0.0;
    for (int i = f; i <= f1; i++) {
        int gl = i * len;
        int gr = i * len + len - 1;
        chkmin(gr, n - 1);
        if (l <= gl && gr <= r) {
            ans += sum[i] * mod[i] + (gr - gl + 1) * mod1[i];
        } else {
            for (int is = max(l, gl); is <= min(r, gr); is++) {
                ans += mod[i] * a[is] + mod1[i];
            }
        }
    }
    return ans;
}


void add(int l, int r, double multm, double summ) {
    int f = l / len;
    int f1 = r / len;
    for (int i = f; i <= f1; i++) {
        int gl = i * len;
        int gr = i * len + len - 1;
        chkmin(gr, n - 1);
        if (l <= gl && gr <= r) {
            mod[i] *= multm;
            mod1[i] *= multm;
            mod1[i] += summ;
          //  cout << i + 1 << ' ' << "kek" << endl;
        } else {
           // cout << i + 1 << endl;
            for (int is = gl; is <= gr; is++) {
                a[is] = a[is] * mod[i] + mod1[i];
            }
            for (int is = max(gl, l); is <= min(gr, r); is++) {
                a[is] = a[is] * multm + summ;
         //      cout << is + 1 << ' ';
            }
       //     cout << endl;
            mod[i] = 1;
            mod1[i] = 0;
            sum[i] = 0;
            for (int is = gl; is <= gr; is++) {
                sum[i] += a[is];
            }
        }
    }
}


int main() {
   //read(FILENAME);
    n = readInt(), q = readInt();
    len = (int)sqrt(n);
    for (int i = 0; i < n; i++) {
        a[i] = readInt();
        sum[i / len] += a[i];
    }
    for (int i = 0; i <= n / len; i++) {
        mod[i] = 1.0;
    }
    for (int it = 0; it < q; it++) {
        int t = readInt();
        if (t == 2) {
            int l = readInt(), r = readInt();
            l--, r--;
            printf("%.10lf\n", getsum(l, r));
        } else {
            int l = readInt(), r = readInt(), l1 = readInt(), r1 = readInt();
            l--, r--;
            l1--, r1--;
            double ft = getsum(l, r);
            double ft1 = getsum(l1, r1);
            add(l, r, 1.0 - 1.0 / double(r - l + 1), 1.0 / double(r1 - l1 + 1) * ft1 * 1.0 / double(r - l + 1) );
            add(l1, r1, 1.0 - 1.0 / double(r1 - l1 + 1), 1.0 / double(r1 - l1 + 1) * ft * 1.0 / double(r - l + 1));
        }
    }
    return 0;
}
