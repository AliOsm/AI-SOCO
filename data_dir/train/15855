#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define sd(x) scanf("%d",&x)
#define pd(x) printf("%d",x)
#define sl(x) scanf("%lld",&x)
#define pl(x) printf("%lld",x)
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
#define N (int)(1e5+25)
vector<int> G[N];
bitset<1005> books[1005];
bitset<1005> invert;
int n,m,q;
int t[N],r[N],c[N],k[N],tot=0;
int ans[N];
void apply(int x){
    if(t[x]<=2){
        tot-=books[r[x]].count();
        if(t[x]==1)
            books[r[x]].set(c[x]);
        else
            books[r[x]].reset(c[x]);
        tot+=books[r[x]].count();
    }
    else if(t[x]==3){
        tot-=books[r[x]].count();
        books[r[x]]^=invert;
        tot+=books[r[x]].count();
    }
}
void rem(int val,int x){
    if(t[x]<=2){
        tot-=books[r[x]].count();
        if(val==0)
            books[r[x]].reset(c[x]);
        else if(val==1)
            books[r[x]].set(c[x]);
        tot+=books[r[x]].count();
    }
    else if(t[x]==3){
        tot-=books[r[x]].count();
        books[r[x]]^=invert;
        tot+=books[r[x]].count();
    }
}
void dfs(int x){
    int qq=-1;
    if(t[x]<=2){
        qq=books[r[x]].test(c[x]);
    }
    apply(x);
    ans[x]=tot;
    for(int i=0;i<G[x].size();i++){
        int to=G[x][i];
        dfs(to);
    }
    rem(qq,x);
}
void solve(){
    sd(n);sd(m);sd(q);
    for(int i=1;i<=m;i++){
        invert.set(i);
    }
    for(int i=1;i<=q;i++){
        sd(t[i]);
        if(t[i]<=2){
            sd(r[i]);
            sd(c[i]);
        }
        else if(t[i]==3){
            sd(r[i]);
        }
        else{
            sd(k[i]);
        }
        if(t[i]==4){
            G[k[i]].pb(i);
        }
        else{
            G[i-1].pb(i);
        }
    }
    dfs(0);
    for(int i=1;i<=q;i++){
        cout<<ans[i]<<endl;
    }
}
int main(){
   //freopen("input.txt","r",stdin);
   //freopen("out.txt","w",stdout);
    int t=1;
   // sd(t);
   for(int i=1;i<=t;i++){
       //printf("Case #%d:\n",i);
       solve();
   }
   return 0;
}
