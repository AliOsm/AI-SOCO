#include <bits/stdc++.h>

using namespace std;

typedef unsigned uint;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ldbl;
typedef pair<int, int> pii;
typedef pair<uint, uint> puu;
typedef pair<ll, ll> pll;
typedef pair<ull, ull> pull;
typedef vector<int> vi;
typedef vector<uint> vu;
typedef vector<ll> vll;
typedef vector<ull> vull;
typedef vector<pii> vpii;
typedef vector<puu> vpuu;
typedef vector<pll> vpll;
typedef vector<pull> vpull;
typedef vector<string> vstr;
typedef vector<double> vdbl;
typedef vector<ldbl> vldbl;
#define pb push_back
#define ppb pop_back
#define pfr push_front
#define ppfr pop_front
#define emp emplace
#define empb emplace_back
#define be begin
#define rbe rbegin
#define all(x) (x).be(), (x).end()
#define rall(x) (x).rbe(), (x).rend()
#define fir first
#define sec second
#define mkp make_pair
#define brif(cond) if (cond) break
#define ctif(cond) if (cond) continue
#define retif(cond) if (cond) return
static inline void canhazfast() {ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}
template<typename T> T gcd(T a, T b) {return b ? gcd(b, a%b) : a;}
template<typename T> T extgcd(T a, T b, T &x, T &y)
{
    T x0 = 1, y0 = 0, x1 = 0, y1 = 1;
    while (b) {
        T q = a/b; a %= b; swap(a, b);
        x0 -= q*x1; swap(x0, x1);
        y0 -= q*y1; swap(y0, y1);
    }
    x = x0; y = y0; return a;
}
static inline int ctz(unsigned x) {return __builtin_ctz(x);}
static inline int ctzll(ull x) {return __builtin_ctzll(x);}
static inline int clz(unsigned x) {return __builtin_clz(x);}
static inline int clzll(ull x) {return __builtin_clzll(x);}
static inline int popcnt(unsigned x) {return __builtin_popcount(x);}
static inline int popcntll(ull x) {return __builtin_popcountll(x);}
static inline int bsr(unsigned x) {return 31^clz(x);}
static inline int bsrll(ull x) {return 63^clzll(x);}

#define MOD 1000000007
//#define add(a, b) ((a)+(b) < MOD ? (a)+(b) : (a)+(b)-MOD)
//#define sub(a, b) ((a) < (b) ? (a)+MOD-(b) : (a)-(b))
#define mul(a, b) (ull(a)*(b)%MOD)
#define sqr(a) mul(a, a)

uint add(uint a, uint b) { return a+b < MOD ? a+b : a+b-MOD; }
uint sub(uint a, uint b) { return a < b ? a+MOD-b : a-b; }

uint modpow(uint b, uint e)
{
    uint r = 1;
    for (; e; e >>= 1) {
        if (e&1) r = mul(r, b);
        b = mul(b, b);
    }
    return r;
}

uint modinv(uint n) { return modpow(n, MOD-2); }

#define MX 100016

int l[MX], r[MX], q[MX];
pii ev[2*MX];

int main()
{
    canhazfast();

    int n, x, y;
    int w, b = 0, e = 0;
    uint ans = 0;

    cin >> n >> x >> y;
    x -= y;
    w = x/y;
    for (int i = 0; i < n; ++i) {
        cin >> l[i] >> r[i];
        ++r[i];
        ev[2*i] = mkp(l[i], i);
        ev[2*i+1] = mkp(r[i], -1);
    }
    sort(ev, ev+2*n);
    for (int i = 0; i < 2*n; ++i) {
        int t = ev[i].fir, j = ev[i].sec;
        if (j < 0) {
            q[e++] = t;
            continue;
        }
        while (b < e && q[b] < t-w) ++b;
        uint cost = mul(r[j]-l[j], y);
        if (b < e) {
            int re = q[--e];
            cost = add(cost, mul(t-re, y));
        } else {
            cost = add(cost, x);
        }
        ans = add(ans, cost);
    }
    cout << ans;

    return 0;
}
