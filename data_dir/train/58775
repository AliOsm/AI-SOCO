//In the name of God

#include <iostream>
#include <vector>
#include <cstdlib>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
using namespace std;
#define lol long long
#define mp make_pair
const int MAXN=1e5+10,Mod=1e9+7;
lol fact[2*MAXN],dp[MAXN],ps[MAXN],inv[MAXN*2];
pair <lol,lol> a[MAXN];

lol power(lol x,lol y)
{
  if(!y)
    return 1;
  lol ans=power(x,y/2);
  ans*=ans;
  ans%=Mod;
  if(y%2)
    ans*=x;
  ans%=Mod;
  return ans;
}

lol c(int n,int r)
{
  lol ans=fact[n];
  ans*=inv[r];
  ans%=Mod;
  ans*=inv[n-r];
  ans%=Mod;
  return ans;
}

int main()
{
  fact[0]=1;
  inv[0]=1;
  for(int i=1;i<2*MAXN;i++)
    {
      fact[i]=(fact[i-1]*i)%Mod;
      inv[i]=power(fact[i],Mod-2);
    }
  int w,h,n;
  cin>>w>>h>>n;
  for(int i=1;i<=n;i++)
    cin>>a[i].first>>a[i].second;
  n++;
  a[n].first=w;
  a[n].second=h;
  sort(a+1,a+1+n);
  for(int i=1;i<=n;i++)
    {
      dp[i]=c(a[i].first+a[i].second-2,a[i].first-1);
      dp[i]%=Mod;
      for(int j=1;j<i;j++)
	if(a[j].first<=a[i].first and a[j].second<=a[i].second)
	  {
	    dp[i]-=dp[j]*c(a[i].first-a[j].first+a[i].second-a[j].second,a[i].first-a[j].first);
	    dp[i]%=Mod;
	    dp[i]+=Mod;
	    dp[i]%=Mod;
	  }
    }
  cout<<dp[n]<<endl;
  return 0;
}
