#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
const int inf_int = 1e9 + 100;
const ll inf_ll = 8e18;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef long double dbl;
#define pb push_back
const double pi = 3.1415926535898;
#define dout if(debug) cout
#define fi first
#define se second
#define sp setprecision
#define sz(a) (int(a.size()))
#define all(a) a.begin(),a.end()
bool debug = 0;
const int MAXN = 210;
const int LOG = 20;
const long long mod = 1e9 + 7;
const int MX = 2e7 + 100;
typedef long long li;
const li MOD = 1000000000949747713ll;
const int N = 100100;

int a[MAXN];

int dp[MAXN][MAXN][1020];

inline void upd(ll &x) {
   while (x >= mod)
        x -= mod;
}

inline void upd(int &x) {
    while (x >= mod)
        x -= mod;
}

void solve() {
    int n, k;
    cin >> n >> k;
    for (int i = 1; i <= n; ++i) {
        cin >> a[i];
    }
    sort(a + 1, a + n + 1);
    reverse(a + 1, a + n + 1);
    dp[1][1][0] = 1;
    dp[1][0][0] = 1;
    for (int i = 1; i <= n - 1; ++i) {
        int val = abs(a[i + 1] - a[i]);
        dout << i <<" : "<<val<<endl;
        for (int j = 0; j <= n; ++j) {
            for (int c = 0; c <= k; ++c) {
                if (dp[i][j][c]) {
                    if (c + j * val <= k) {
                        dp[i + 1][j + 1][c + j * val] += dp[i][j][c];
                        upd(dp[i + 1][j + 1][c + j * val]);
                        dp[i + 1][j][c + j * val] += (1ll * dp[i][j][c] * (j+1) )%mod;
                        upd(dp[i + 1][j][c + j * val]);
                        if (j > 0) {
                            dp[i + 1][j - 1][c + j * val] += (1ll * dp[i][j][c] * (j) )%mod;;
                            upd(dp[i + 1][j - 1][c + j * val]);
                        }
                    }
                }

            }
        }
    }
    ll ans = 0;
    for(int c = 0; c<=k;++c){
        ans+=dp[n][0][c];
    }
    dout <<"Ans "<<ans<<endl;
    ans%=mod;
    cout << ans<<"\n";

}



signed main() {
#ifdef zxc
    debug = 1;
    freopen("../input.txt", "r", stdin);
    // freopen("small_out.txt","w",stdout);
  // freopen("../output.txt", "w", stdout);
#else

#endif //zxc
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cout.setf(ios::fixed);
    cout.precision(20);
    int t = 1;

    while (t--)
        solve();
}