#include <iostream>
#include<bits/stdc++.h>
using namespace std;
struct point {
	int x, y;

};
point king;

int n;

long long dist[8];
long long dx, dy, d;
char type[8];

int main() {

	scanf("%d%d%d", &n, &king.x, &king.y);

	for (int i = 0; i < n; i++) {
		long long x, y;
		char t;
		cin >> t >> x >> y;

		dx = king.x - x;
		dy = king.y - y;
		d = dx * dx + dy * dy;
		if (dy == 0) {		//horizontal
			if (dx > 0) {	//left
				if (d < dist[0] || dist[0] == 0)
					dist[0] = d, type[0] = t;
			}
			else {
				if (d < dist[4] || dist[4] == 0)
					dist[4] = d, type[4] = t;
			}
		}
		else if (dx == 0) {	//vertical
			if (dy > 0) {	//down
				if (d < dist[6] || dist[6] == 0)
					dist[6] = d, type[6] = t;
			}
			else {
				if (d < dist[2] || dist[2] == 0)
					dist[2] = d, type[2] = t;
			}
		}
		else if (abs(dy) == abs(dx)) {	//diagonal
			if (dx > 0 && dy < 0) {		//upper left
				if (d < dist[1] || dist[1] == 0)
					dist[1] = d, type[1] = t;
			}
			if (dx > 0 && dy > 0) {	//down left
				if (d < dist[7] || dist[7] == 0)
					dist[7] = d, type[7] = t;
			}
			if (dx < 0 && dy < 0) {	//upper right
				if (d < dist[3] || dist[3] == 0)
					dist[3] = d, type[3] = t;
			}
			if (dx < 0 && dy > 0) {	//down right
				if (d < dist[5] || dist[5] == 0)
					dist[5] = d, type[5] = t;
			}
		}
	}

	for (int i = 0; i < 8; i++) {
		if (i % 2 == 0 && dist[i] > 0 && type[i] != 'B') {
			printf("YES\n");
			return 0;
		}
		if (i % 2 == 1 && dist[i] > 0 && type[i] != 'R') {
			printf("YES\n");
			return 0;
		}
	}
	printf("NO\n");
	return 0;
}
