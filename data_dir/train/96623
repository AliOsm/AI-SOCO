#include <bits/stdc++.h>

using namespace std;


#include <bits/stdc++.h>

using namespace std;

#define MAX 500002

int n;
char buf[3];
vector<pair<int, int> > v[MAX];

int ans[MAX];
#include<unordered_map>

int ord[MAX];
int st[MAX];
int en[MAX];
int oo = 0;
int siz[MAX];
int dep[MAX];

inline void dfs2(int b, int pr = -1){
	ord[oo] = b;
	st[b] = oo;
	oo++;
	siz[b] = 1;
	for (int i = 0; i < v[b].size(); i++){
		dfs2(v[b][i].first, b);
		siz[b] += siz[v[b][i].first];
	}
	en[b] = oo;
}
int cnt[(1<<22)];

int num[MAX];
inline void dfs(int b, int pr = -1, int val = 0, int d = 0,bool flag=false){
	int id = 0;
	num[b] = val;
	dep[b] = d;
	ans[b] =0;
	for (int i = 0; i < v[b].size(); i++){
		if (siz[v[b][id].first] < siz[v[b][i].first]){
			id = i;
		}
	}
	for (int i = 0; i < v[b].size(); i++){
		if (i == id){
			continue;
		}
		dfs(v[b][i].first, b, val^v[b][i].second, d + 1,false);
		ans[b] = max(ans[b], ans[v[b][i].first]);
	}
	if (v[b].size()){
		dfs(v[b][id].first, b, val^v[b][id].second, d + 1, true);
		ans[b] = max(ans[b], ans[v[b][id].first]);
	}
	{
		int v = val;
		int dd = d;
		int FF = cnt[v];
		if (FF != -1){
			ans[b] = max(ans[b], FF + dd - d * 2);
		}
		for (int k = 0; k < 22; k++){
			int ff = cnt[v ^ (1 << k)];
			if (ff != -1){
				ans[b] = max(ans[b], ff + dd - d * 2);
			}
		}
		cnt[val] = max(cnt[val], d);
	}
	for (int i = 0; i < v[b].size(); i++){
		if (i == id)continue;
		int go = v[b][i].first;
		for (int j = st[go]; j < en[go]; j++){
			int v = num[ord[j]];
			int dd = dep[ord[j]];
			int FF = cnt[v];
			if (FF != -1){
				ans[b] = max(ans[b], FF + dd - d * 2);
			}
			for (int k = 0; k < 22; k++){
				int ff = cnt[v ^ (1 << k)];
				if (ff != -1){
					ans[b] = max(ans[b], ff+ dd - d * 2);
				}
			}
		}
		for (int j = st[go]; j < en[go]; j++){
			int v = num[ord[j]];
			int dd = dep[ord[j]];
			cnt[v] = max(cnt[v], dd);
		}
	}
	if (flag == false){
		for (int j = st[b]; j < en[b]; j++){
			cnt[num[ord[j]]] = -1;
		}
	}
}
int main(){
	scanf("%d", &n);
	for (int i = 1; i < n; i++){
		int a;
		scanf("%d", &a);
		a--;
		scanf("%s", buf);
		int k = (buf[0] - 'a');
		k = 1 << k;
		v[a].push_back(make_pair(i, k));
	}
	memset(cnt, -1, sizeof(cnt));
	dfs2(0);
	dfs(0);
	for (int i = 0; i < n; i++){
		printf("%d\n", ans[i]);
	}

	return 0;
}