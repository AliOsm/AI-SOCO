#include <bits/stdc++.h>
using namespace std;

#ifdef LOCAL_CHECK
#define trace(x) cerr << #x << ": " << x << " ";
#define trnl cerr << "\n";
#else
#define trace(x) {}
#define trnl {}
#endif
typedef long long lolo;
typedef unsigned long long ulolo;
typedef pair<int, int> pii;
#define F(i,a,b) for(int i=(a);i<(b);++i)
#define R(i,n) F(i,0,n) 
#define FD(i,n) for(int i=(n-1);i>=0;--i)
#define SZ(x) ((int)(x).size())
#define ALL(x) (x).begin(),(x).end()
#define fi first
#define se second
#define M_PI           3.14159265358979323846

const int INF = 1e9 + 23;
const int MOD = 1e9 + 9;
const int N = 100 + 10;

string s1, s2, v;
int p[N];
int dp[N][N][N];
int fr[N][N][N];

int getPref(int k, char c) {
  while (k > -1 && v[k+1] != c) k = p[k];
  if (k+1 < SZ(v) && v[k+1] == c) ++k;
  return k;
}

void kmp() {
  p[0] = -1;
  F(i, 1, SZ(v)) {
    p[i] = getPref(p[i-1], v[i]);
  }
}

void solve() {
  kmp();
  R(i, SZ(s1)+1) R(j, SZ(s2)+1) R(k, SZ(v)) {
    int val = dp[i][j][k];
    if (i < SZ(s1)) {
      if (dp[i+1][j][k] < val) {
        dp[i+1][j][k] = val;
        fr[i+1][j][k] = 1;
      }
    }
    if (j < SZ(s2)) {
      if (dp[i][j+1][k] < val) {
        dp[i][j+1][k] = val;
        fr[i][j+1][k] = 2;
      }
    }
    if (i < SZ(s1) && j < SZ(s2) && s1[i] == s2[j]) {
      int pr = getPref(k-1, s1[i]);
      if (pr+1 < SZ(v)) {
        if (dp[i+1][j+1][pr+1] < val + 1) {
          dp[i+1][j+1][pr+1] = val + 1;
          fr[i+1][j+1][pr+1] = 3 + k;
        }
      }
    }
  }
}

void print() {
  int best = 0, bk = 0;
  R(k, SZ(v)) {
    int now = dp[SZ(s1)][SZ(s2)][k];
    if (now > best) {
      best = now;
      bk = k;
    }
  }
  if (best == 0) {
    cout << "0\n";
    return;
  }
  string ans = "";
  int i = SZ(s1), j = SZ(s2), k = bk;
  while (dp[i][j][k]) {
    int f = fr[i][j][k];
    if (f == 1) --i;
    else if (f == 2) -- j;
    else {
      --i, --j;
      k = f - 3;
      ans.push_back(s1[i]);
    }
  }
  reverse(ALL(ans));
  cout << ans << "\n";
}

int main()
{
  ios_base::sync_with_stdio(0);
  cin >> s1 >> s2 >> v;
  solve();
  print();
}
// g++ -W -Wall -Wextra -pedantic -std=c++0x -o p main.cpp