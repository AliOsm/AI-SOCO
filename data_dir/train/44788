#include <bits/stdc++.h>
using namespace std;

inline long long nxt() {
    long long ret = 0;
    bool isneg = false;
    register char c = getchar();
    while (1) {
        if (c == '-') {
            c = getchar();
            isneg = true;
            break;
        }
        if (isdigit(c)) {
            break;
        }
    }
    while (isdigit(c)) {
        ret = ret * 10 + c - '0';
        c = getchar();
    }
    return isneg ? -ret : ret;
}

vector<vector<int> > g;
vector<int> col;
long long mod = 1000000007;

struct Ans {
    long long b, w;
};

Ans dfs(int v, int p = -1) {
    Ans a;
    a.b = a.w = 1;
    if (col[v]) {
        a.w = 0;
        for (int to : g[v]) {
            if (to == p) {
                continue;
            }

            Ans cur = dfs(to, v);
            a.b = (a.b * cur.b + a.b * cur.w) % mod;
        }
    } else {
        a.b = 0;
        for (int to : g[v]) {
            if (to == p) {
                continue;
            }
            Ans cur = dfs(to, v);

            Ans tmp;
            tmp.w = (a.w * cur.b + a.w * cur.w) % mod;
            tmp.b = (a.w * cur.b + a.b * cur.w + a.b * cur.b) % mod;
            a = tmp;
        }
    }
    return a;
}

int main() {
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    g.assign(n, vector<int>());
    col.assign(n, 0);
    for (int i = 0; i < n - 1; ++i) {
        int p;
        cin >> p;
        g[i + 1].push_back(p);
        g[p].push_back(i + 1);
    }

    for (int i = 0; i < n; ++i) {
        cin >> col[i];
    }

    Ans a = dfs(0);
    cout << a.b << endl;
    return 0;
}
