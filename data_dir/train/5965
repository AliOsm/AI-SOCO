    #include<bits/stdc++.h>
     
    using namespace std;
    #define          CIN                    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
    #define          ll                     long long int
    #define          ld                     long double
    #define          ull                    unsigned long long int
    #define          pii                    pair < int, int>
    #define          pll                    pair < ll, ll>
    #define          MOD                    1000000007
    #define          vi                     vector<int>
    #define          vl                     vector<ll>
    #define          pb                     push_back
    #define          min3(a,b,c)            min(a,min(b,c))
    #define          min4(a,b,c,d)          min(d,min(a,min(b,c)))
    #define          max3(a,b,c)            max(a,max(b,c))
    #define          max4(a,b,c,d)          max(d,max(a,max(b,c)))
    #define          ms(a,b)                memset(a,b,sizeof(a))
    #define          mp                     make_pair
    #define          gcd(a, b)              __gcd(a,b)
    #define          lcm(a, b)              ((a)*(b)/gcd(a,b))
    #define          PI                     acos(-1.0)
    #define          zero(a)                memset(a,0,sizeof a)
    #define          all(v)                 v.begin(),v.end()
    #define          Max(v)                 *max_element(all(v))
    #define          Min(v)                 *min_element(all(v))
    #define          Upper(c,x)             (upper_bound(c.begin(),c.end(),x)-c.begin())
    #define          Lower(c,x)             (lower_bound(c.begin(),c.end(),x)-c.begin())
    #define          Unique(X)              (X).erase(unique(all(X)),(X).end())
    #define          no                     cout << "NO" << endl ;
    #define          yes                    cout << "YES" << endl ;
    ///bool operator < ( const Node& p ) const{ return cost < p.cost ; }
    ///priority_queue<int,vector<int>,greater<int> >pq;
    ///string str = "abcdefghijklmnopqrstuvwxyz";
    ///string s2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" ;
    ///string s = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" ;
    ///string s = std::bitset<64>(n).to_string();
     
    ///--------------Graph Moves--------------------------------------
    ///const int fx[] = {+1,-1,+0,+0};
    ///const int fy[] = {+0,+0,+1,-1};
    ///const int fx[] = {+0,+0,+1,-1,-1,+1,-1,+1}; ///King's move
    ///const int fy[] = {-1,+1,+0,+0,+1,+1,-1,-1}; ///king's Move
    ///const int fx[] = {-2,-2,-1,-1,+1,+1,+2,+2}; ///knight's move
    ///const int fy[] = {-1,+1,-2,+2,-2,+2,-1,+1}; ///knight's move
    ///---------------------------------------------------------------
    ///sort( all( v ) ) ;
    ///if( ){yes ;}else{no ;}
     
    vector < ll > v, v1, v2, v3, v4 ;
    vector < pll > vec, vec1, vec2 ;
    vector < pair < ll, pll > > vec3 ;
    vector < ll > adj[ 200005 ] ;
    map < ll, ll > Mp ;
    map < pll, ll > Mp1, Mp2 ;
    set < ll > st,st1,st2, st3 ;
    queue < ll > Q ;
    stack < ll > Stk ;
    multiset < pll > S, S2 ;
    multiset < ll > :: iterator it ;
     
     
     
    int main()
    {
        CIN ;
        ll t, a, b ;
        cin >> t ;
        while( t-- )
        {
            cin >> a >> b ;
            ll c = b - a ;
            if( c == 0 )
                cout << c << endl ;
            else if( c > 0 )
            {
                if( c & 1 )
                    cout << 1 << endl ;
                else
                    cout << 2 << endl ;
            }
            else
            {
                if( c & 1 )
                    cout << 2 << endl ;
                else
                    cout << 1 << endl ;
            }
        }
     
        return 0 ;
    }