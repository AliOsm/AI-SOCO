//      ——By DD_BOND 

#include<bits/stdc++.h>

#define fi first
#define se second
#define MP make_pair
#define pb push_back
#define INF 0x3f3f3f3f
#define pi 3.1415926535898
#define lowbit(a)  (a&(-a))
#define lson l,(l+r)/2,rt<<1
#define rson (l+r)/2+1,r,rt<<1|1
#define Min(a,b,c)  min(a,min(b,c))
#define Max(a,b,c)  max(a,max(b,c))
#define debug(x)  cerr<<#x<<"="<<x<<"\n";

//#pragma GCC optimize(3)
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

using namespace std;

typedef long long ll;
typedef pair<int,int> P;
typedef pair<ll,ll> Pll;
typedef unsigned long long ull;

const int seed=131;
const ll LLMAX=2e18;
const int MOD=1e9+7;
const double eps=1e-8;
const int MAXN=1e6+10;
const int hmod1=0x48E2DCE7;
const int hmod2=0x60000005;

inline ll sqr(ll x){ return x*x; }
inline int sqr(int x){ return x*x; }
inline double sqr(double x){ return x*x; }
ll gcd(ll a,ll b){ return b==0? a: gcd(b,a%b); }
ll exgcd(ll a,ll b,ll &x,ll &y){ ll d; (b==0? (x=1,y=0,d=a): (d=exgcd(b,a%b,y,x),y-=a/b*x)); return d; }
ll qpow(ll a,ll n){ll sum=1;while(n){if(n&1)sum=sum*a%MOD;a=a*a%MOD;n>>=1;}return sum;}
inline int dcmp(double x){  if(fabs(x)<eps) return 0;   return (x>0? 1: -1); }

P a[MAXN];
vector<P>q[MAXN];
int b[MAXN],bit[MAXN],ans[MAXN];

bool cmp(P x,P y){
    if(x.fi==y.fi)  return x.se<y.se;
    return x.fi>y.fi;
}

void add(int p,int n){
    for(int i=p;i<=n;i+=lowbit(i))  bit[i]++;
}

int query(int p){
    int sum=0;
    for(int i=p;i>=1;i-=lowbit(i))  sum+=bit[i];
    return sum;
}

int main(void)
{
    ios::sync_with_stdio(false);    cin.tie(0);   cout.tie(0);   
    //freopen("/Users/dd_bond/My_Mac/Resource/Project__C++/testdata.in","r",stdin);
    //freopen("/Users/dd_bond/My_Mac/Resource/Project__C++/testdata.out","w",stdout);
    int n;  cin>>n;
    for(int i=1;i<=n;i++)    cin>>a[i].fi,a[i].se=i,b[i]=a[i].fi;
    int m;  cin>>m;
    for(int i=1;i<=m;i++){
        int k,p;    cin>>k>>p;
        q[k].pb(P(p,i));
    }
    sort(a+1,a+n+1,cmp);
    for(int i=1;i<=n;i++){
        add(a[i].se,n);
        for(int j=0;j<(int)q[i].size();j++){
            P p=q[i][j];
            int l=1,r=n,res=0;
            while(l<=r){
                int mid=(l+r)>>1;
                if(query(mid)>=p.fi)    res=mid,r=mid-1;
                else    l=mid+1;
            }
            ans[p.se]=res;
        }
    }
    for(int i=1;i<=m;i++)    cout<<b[ans[i]]<<endl;
    return 0;
}
