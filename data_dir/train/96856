#include <iostream>
#include <vector>
#include <algorithm>
#include <map>

using namespace std;

const int maxn = 2e5 + 10;

int main() {
	int n = 0;
	int k = 0;
	cin >> n;
	map< int, int> cnt;
	for (int i = 0; i < n; i++) {
		int x = 0;
		cin >> x;
		cnt[x]++;
	}
	vector < int > a;
	for (const auto& x: cnt) {
		a.push_back(x.second);
	}
	sort(a.begin(), a.end());
	int ans = 0;
	for (int l = 1; (1 << (l - 1)) <= a.back(); l++) {
		int ll = 0;
		int v = 1 << (l - 1);
		int rr = a.back() / v + 1;
		while (rr - ll > 1) {
			int mid = (rr + ll) >> 1;
			int v = 0;
			for (int x: a) {
				if ((1ll << v) * mid <= x) {
					v++;
				}
			}
			if (v >= l) {
				ll = mid;
			} else {
				rr = mid;
			}
			int tmp = 0;
			for (int j = 0; j < l; j++) {
				tmp += ll * (1 << j);
			}
			ans = max(ans, tmp);
		}
	}
	cout << ans << endl;
	return 0;
}