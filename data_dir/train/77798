#include "bits/stdc++.h"
#define FI first.first
#define SE first.second
#define TH second
#define fi first
#define se second
#define th second

using namespace std;

class DebugStream {}LOG;
template <typename T>DebugStream &operator<<(DebugStream &s, const T&) { return s; }
#ifdef DEBUG
#define LOG clog
#endif

typedef long long ll;
typedef pair<ll, ll> ii;
typedef long double ld;

const int maxN = 2e5 + 9, maxV = 1e6 + 9, MOD = 1e9 + 7, SQ = 335, lg = 20, bs = 29;

int n, m, ks[maxN], kcps[maxN];
ii ofer[maxN];
stack<int> stcs[maxN];
int tiempo[maxN];

bool isposs(int x) {
	memcpy(kcps, ks, sizeof ks);
	memset(tiempo, -1, sizeof tiempo);
	for(int i = 0; i < m && ofer[i].fi <= x; i++)
		tiempo[ofer[i].se] = ofer[i].fi;

	for(int i = 0; i < n; i++)
		if(tiempo[i] != -1)
			stcs[tiempo[i]].push(i);
	int amo = 0;
	for(int i = 1; i <= min(x, maxN - 2); i++) {
		amo++;
		while(stcs[i].size()) {
			int cr = stcs[i].top();
			stcs[i].pop();
			int tores = min(amo, kcps[cr]);
			amo -= tores;
			kcps[cr] -= tores;
		}
	}
	amo += x - min(x, maxN - 2);
	for(int i = 0; i < n; i++) amo -= kcps[i] * 2;
	return amo >= 0;
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	#ifdef DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif

	cin >> n >> m;

	for(int i = 0; i < n; i++)
		cin >> ks[i];

	for(int i = 0; i < m; i++)
		cin >> ofer[i].fi >> ofer[i].se, ofer[i].se--;

	sort(ofer, ofer + m);
	int le = -1, ri = maxN * 3, mi;

//	LOG << isposs(7) << '\n';
//	return 0;
	while(le + 1 < ri) {
		mi = (le + ri) / 2;
		if(isposs(mi))
			ri = mi;
		else
			le = mi;
	}

	cout << ri << '\n';
}
