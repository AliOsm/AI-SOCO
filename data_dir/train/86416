#include <bits/stdc++.h>
using namespace std;

#define loop(i,n) for(int i = 0;i < int(n);i++)
#define rloop(i,n) for(int i = int(n);i >= 0;i--)
#define range(i,a,b) for(int i = int(a);i <= int(b);i++)
#define SZ(c) int(c.size())
#define ALL(c) c.begin(), c.end()
#define RALL(c) c.rbegin(), c.rend()
#define PI acos(-1)
#define pb push_back
#define mp make_pair
#define fr first
#define sc second
#define sfi1(v) scanf("%d",&v)
#define sfi2(v1,v2) scanf("%d %d",&v1,&v2)
#define sfi3(v1,v2,v3) scanf("%d %d %d",&v1,&v2,&v3)
#define sfll1(v) scanf("%I64d",&v);
#define sfll2(v1,v2) scanf("%I64d %I64d",&v1,&v2)
#define sfll3(v1,v2,v3) scanf("%I64d %I64d %I64d",&v1,&v2,&v3)
#define endl '\n'

typedef vector<int> vi;
typedef vector<pair<int,int> > vii;
typedef long long ll;
typedef pair<int, int> pii;



int main()
{

#ifndef ONLINE_JUDGE
	//freopen("in.in", "r", stdin);
	//freopen("out.in", "w", stdout);
#endif
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    string s;
    int k;
    cin >> s >> k;
    int mn = 0 , mx = 0;
    int q = 0 , star = 0;
    for(char c : s){
        if(c == '?'){
            mn -= 1;
            q++;
        }else if(c == '*'){
            mn -= 1;
            mx += 1000;
            star++;
        }else{
            mn++;
            mx++;
        }
    }

    if(k >= mn && k <= mx){
        int have = SZ(s) - q - star - q - star;
        int x = 0;
        if(have + q + star < k){
            x = k - (have + q + star);
            k = have + q + star;
        }

        string ans;
        for(char c : s){
            if(c == '?'){
                if(have == k){
                    ans.pop_back();
                }else{
                    have++;
                }
            }else if(c == '*'){
                if(x){
                    while(x){
                        ans += ans.back();
                        x--;
                    }
                }else{
                    if(have == k){
                        ans.pop_back();
                    }else{
                        have++;
                    }
                }
            }else{
                ans += c;
            }
        }

        cout << ans << endl;
        //cout << SZ(ans) << endl;

    }else{
        cout << "Impossible" << endl;
    }


    return 0;
}
