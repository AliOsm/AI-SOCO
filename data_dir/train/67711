#include<bits/stdc++.h>
#define ll long long
#define ff first
#define ss second
#define debug(x) cout << #x << ": " << x << "\n";
using namespace std;

const int maxn = 2e5+5;

int a,b,c,cnt;
int mx,mxnode;
vector<int>g[maxn];
bool vis[maxn];
int dis[maxn];
vector<int>vec;

void dfs(int n,int d)
{
    vis[n] = 1;
    dis[n] = d;
    if(dis[n] > mx)
    {
        mx = max(mx,dis[n]);
        mxnode = n;
    }
    for(auto v : g[n])
    {
        if(vis[v]==0)
        {
            dfs(v,d+1);
        }
    }
}
bool dfs2(int n,int x)
{
    vis[n] = 1;
    if(n == x)
        return true;
    for(auto v : g[n])
    {
        if(!vis[v])
        {
            if(dfs2(v,x))
            {
                vec.push_back(v);
                return true;
            }
        }
    }
    return false;
}

void dfs3(int n,int s,int d)
{
    vis[n] = 1;
    dis[n] = d;
    for(auto v : g[n])
    {
        if(!vis[v])
        {
            dfs3(v,s,d+1);
        }
    }
    if(n != a && n != b)
    {
        if(abs(dis[n]-dis[s]) > mx)
        {
            mx = abs(dis[n]-dis[s]);
            c = n;
        }
    }
}

int main()
{
    int n;
    scanf("%d",&n);
    for(int i = 1; i < n; i++)
    {
        int u,v;
        scanf("%d %d",&u,&v);
        g[u].push_back(v);
        g[v].push_back(u);
    }
    for(int i = 1; i <= n; i++)
    {
        if(g[i].size() == 1)    /// leaf node hole
        {
            dfs(i,1);
            break;
        }
    }
    a = mxnode;
    mx = 1;
    memset(vis,0,sizeof(vis));
    memset(dis,0,sizeof(dis));
    dfs(mxnode,1);
    cnt += dis[mxnode]-1;
    b = mxnode;
    memset(vis,0,sizeof(vis));
    memset(dis,0,sizeof(dis));
    dfs2(a,b);
    memset(vis,0,sizeof(vis));
    memset(dis,0,sizeof(dis));
    for(int i = 0; i < vec.size(); i++)
        vis[vec[i]] = 1;
    mx = -1;
    for(int i = 0; i < vec.size(); i++)
    {
        dfs3(vec[i],vec[i],1);
    }
    cout << cnt+mx << "\n";
    cout << a << " " << b << " " << c << "\n";
    return 0;
}
