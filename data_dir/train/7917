#include <bits/stdc++.h>
#define endl '\n'

//#pragma GCC optimize ("O3")
//#pragma GCC target ("sse4")

#define SZ(x) ((int)x.size())
#define ALL(V) V.begin(), V.end()
#define L_B lower_bound
#define U_B upper_bound
#define pb push_back

using namespace std;
template<class T, class T2> inline int chkmax(T &x, const T2 &y) { return x < y ? x = y, 1 : 0; }
template<class T, class T2> inline int chkmin(T &x, const T2 &y) { return x > y ? x = y, 1 : 0; }
const int MAXN = (1 << 20);

int n, m;
int a[MAXN], co[MAXN];

void read()
{
	cin >> n >> m;
	for(int i = 0; i < n; i++) cin >> a[i];
	for(int i = 0; i < n; i++) cin >> co[i];
}

void solve()
{
	vector<pair<int, int> > Q;
	for(int i = 0; i < n; i++) Q.pb({co[i], i});

	sort(ALL(Q));
	reverse(ALL(Q));

	while(m--)
	{
		int bst, cnt;
		cin >> bst >> cnt;
		bst--;

		int64_t answer = min(cnt, a[bst]);
		cnt -= answer;
		a[bst] -= answer;

		answer *= (int64_t)co[bst];

		while(cnt)
		{
			if(Q.empty()) break;

			int i = Q.back().second;
			if(a[i] == 0)
			{
				Q.pop_back();
				continue;
			}

			int64_t C = min(cnt, a[i]);
			cnt -= C;
			a[i] -= C;

			answer += C * 1ll * co[i];
		}

		if(cnt) cout << 0 << endl;
		else cout << answer << endl;
	}
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	read();
	solve();
	return 0;
}

