#include <bits/stdc++.h>
using namespace std;
int dp[110][8];
int pre[110][8];
bool Min(int& x, int y)
{
        if(x == -1 || y < x) {
                x = y;
                return true;
        }
        return false;
}
string s;
int main()
{
        cin >> s;
        int n = s.length();
        for(int i = 0; i < n; i++) {
                if(s[i] == '0') {
                        puts("YES\n0");
                        return 0;
                }
        }
        bool flag = false;
        for(int first = 0; first < n; first++) {
                memset(dp, -1, sizeof(dp));
                memset(pre, -1, sizeof(pre));
                dp[first + 1][(s[first]-'0')%8] = first;
                for(int i = first + 1; i < n; i++) {
                        for(int j = 0; j < 8; j++) if(dp[i][j] != -1){
                                //remove
                                if(Min(dp[i + 1][j], dp[i][j] + 1)) {
                                        pre[i + 1][j] = j;
                                }
                                //not remove
                                if(Min(dp[i + 1][(j * 10 + s[i]-'0') % 8], dp[i][j])) {
                                        pre[i + 1][(j * 10+s[i]-'0')%8] = j;
                                }
                        }
                }
                void print(int i, int j, int k);
                if(dp[n][0] != -1) {
                        flag = true;
                        puts("YES");
                        print(n, 0, first);
                        return 0;
                }
        }
        if(!flag) puts("NO");
        return 0;
}
void print(int i, int j, int first)
{
        if(i == first) {
                printf("%c", s[first]);
                return ;
        }
        print(i - 1, pre[i][j], first);
        if(dp[i - 1][pre[i][j]] == dp[i][j]) {
                printf("%c", s[i - 1]);
        }
}
