#pragma GCC optimize("Ofast")
/*#pragma GCC optimize("no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native")*/
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stdio.h>
#include <cstdio>
#include <math.h>
#include <cmath>
#include <string>
#include <cstring>
#include <queue>
#include <deque>
#include <random>
#include <iomanip>
#include <bitset>
                      
using namespace std;
                      
template<typename T> void uin(T &a, T b) {
    if (b < a) {
        a = b;
    }
}
                      
template<typename T> void uax(T &a, T b) {
    if (b > a) {
        a = b;
    }
}

#define int long long
#define ghost signed
#define left left228
#define right right228
#define prev prev228
#define list list228
#define next next228

const int N = 1000 * 1000 + 228;

int deg[N];

ghost main() {
	int n, m;
	scanf("%lld %lld", &n, &m);
	int u = 0, v = 0;
	for (int i = 0; i < m; ++i) {
		scanf("%lld %lld", &u, &v);
		++deg[u];
		++deg[v];
	}
	int bad = 0;
	for (int i = 1; i <= n; ++i) {
		bad += deg[i] * (n - deg[i] - 1);
	}
	bad /= 2;
	int res = n * (n - 1) * (n - 2) / 6 - bad;
	printf("%lld\n", res);
	return 0;
} // kek ;






