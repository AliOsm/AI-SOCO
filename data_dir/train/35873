#include <iostream>
#include <string>
#include <iomanip>
#include <fstream>
#include "stdio.h"
#include <vector>
#include <algorithm>
#include <stack>
#include <queue>
#include <cmath>
#include <set>
using namespace std;


/*
int main()
{
	int n,m;
	cin>>n>>m;
	int x = min(n,m);
	if (x%2==1)
	{
		cout<<"Akshat"<<endl;
	}
	else cout<<"Malvika"<<endl;
}


int main()
{
	int n;
	cin>>n;
	vector<int> a(n);
	for (int i = 0; i < n; i++)
	{
		cin>>a[i];
	}
	int dec = 0;
	int inc = 0;
	bool in = false;
	bool de = false;
	int st = -1;
	int end = -1;
	int mx = -1;
	vector<int> in1;
	vector<int> in2;
	vector<int> dec;
	for (int i = 1; i < n; i++)
	{
		if (a[i] > a[i-1] && in)
		{
			continue;
		}
		else if (a[i] > a[i-1] && !in)
		{
			inc++;
			in = true;
			end = i;
			de = false;
		}
		else if (a[i] < a[i-1] && !de)
		{
			st = i;
			mx = a[i-1];
			dec++;
			in = false;
			de = true;
		}
	}
	if (de) end = n;
	
	if (inc <= 2 && dec <= 1)
	{
		if (dec == 1)
		{
			bool ok1,ok2;
			ok1 = false;
			ok2 = false;
			if (st > 1)
			{
				if (a[end-1] > a[st-2]) ok1 = true;
			}
			else ok1 = true;
			if (end < n)
			{
				if (a[end] > a[st-1]) ok2 = true;
			}
			else
				ok2 = true;
			if (ok1 && ok2) cout<<"yes"<<endl<<st<<" "<<end<<endl;
		}
		else
		{
			cout<<"yes"<<endl;
			cout<<1<<" "<<1<<endl;
		}
	}
	else cout<<"no"<<endl;
}


int main()
{
	int t;
	cin>>t;
	while (t--)
	{
		long long n,k,d1,d2;
		cin>>n>>k>>d1>>d2;
		long long t1,t2,t3;
		t1 = d1;
		t2 = d1 - d2;
		t3 = 0;
		bool yes = false;
		if (t2 >= 0 && t1+t2 <=k && (k - (t1+t2))%3 == 0)
		{
			long long rem = k+ (t1-t2) + (t1-t3);
			if (rem <= n)
			{
				if ((n-rem)%3==0) yes = true;
			}
		}
		t1 = d1+d2;
		t2 = d2;
		t3 = 0;
		if (t1+t2 <=k && (k - (t1+t2))%3 == 0)
		{
			long long rem = k+ (t1-t2) + (t1-t3);
			if (rem <= n)
			{
				if ((n-rem)%3==0) yes = true;
			}
		}
		
		t1 = d2;
		t2 = d2-d1;
		t3 = 0;
		if (t2 >=0 && t1+t2 <=k && (k - (t1+t2))%3 == 0)
		{
			long long rem = k+ (t1-t2) + (t1-t3);
			if (rem <= n)
			{
				if ((n-rem)%3==0) yes = true;
			}
		}
		t1 = d2;
		t2 = d1;
		t3 = 0;
		if (t1 >= t2 && t1+t2 <=k && (k - (t1+t2))%3 == 0)
		{
			long long rem = k+ (t1-t2) + (t1-t3);
			if (rem <= n)
			{
				if ((n-rem)%3==0) yes = true;
			}
		}
		t1 = d1;
		t2 = d2;
		t3 = 0;
		if (t1 >= t2 && t1+t2 <=k && (k - (t1+t2))%3 == 0)
		{
			long long rem = k+ (t1-t2) + (t1-t3);
			if (rem <= n)
			{
				if ((n-rem)%3==0) yes = true;
			}
		}
		t1 = d1+d2;
		t2 = d1;
		t3 = 0;
		if (t1+t2 <=k && (k - (t1+t2))%3 == 0)
		{
			long long rem = k+ (t1-t2) + (t1-t3);
			if (rem <= n)
			{
				if ((n-rem)%3==0) yes = true;
			}
		}
		if (yes) cout<<"yes"<<endl;
		else cout<<"no"<<endl;
	}
}


int main()
{
	string s;
	cin>>s;
	long long ae = 0;
	long long ao = 0;
	long long be = 0;
	long long bo = 0;
	for (int i = 0; i < s.size(); i++)
	{
		if (s[i] == 'a' && i %2==0) ae++;
		if (s[i] == 'a' && i %2==1) ao++;
		if (s[i] == 'b' && i %2==0) be++;
		if (s[i] == 'b' && i %2==1) bo++;
	}
	long long even = ae*ao + be*bo;
	long long odd = (ae*(ae+1)) / 2 + (be*(be+1))/2 + (ao*(ao+1))/2 + (bo*(bo+1))/2;
	cout<<even<<" "<<odd<<endl;
	
}


int main()
{
	int n;
	cin>>n;
	string s;
	cin>>s;
	string a[] = {"vaporeon", "jolteon", "flareon", "espeon", "umbreon", "leafeon", "glaceon", "sylveon"};
	for (int i = 0; i < 8; i++)
	{
		if (s.size() == a[i].size())
		{
		bool ok = true;
			for (int j = 0; j < s.size(); j++)
			{
				if (s[j] == '.') continue;
				if (s[j] != a[i][j]) ok = false;
			}
			if (ok) cout<<a[i]<<endl;
		}
	}
}


int main()
{
	int n,m;
	cin>>n>>m;
	if (n > 0 && m > 0)
	{
		double mx = 0.0;
		pair<int,int> best[4];
		pair<int,int> a[4];
		for (int i = 1; i <= m; i++)
		{
			for (int j = 0; j <= m-1; j++)
			{
				a[0] = make_pair(0,0);
				a[1] = make_pair(0,i);
				a[2] = make_pair(n,j);
				a[3] = make_pair(n,m);
				sort(a , a+4);
				double r = 0.0;
					for (int k = 1;k < 4; k++)
					{
						r += sqrt((a[k].first-a[k-1].first)*(a[k].first-a[k-1].first) + (a[k].second-a[k-1].second)*(a[k].second-a[k-1].second));
					}
					if (r >= mx)
					{
						mx = r;
						best[0] = a[0];
						best[1] = a[1];
						best[2] = a[2];
						best[3] = a[3];
					}
				while (next_permutation(a, a+4))
				{
					r = 0.0;
					for (int k = 1;k < 4; k++)
					{
						r += sqrt((a[k].first-a[k-1].first)*(a[k].first-a[k-1].first) + (a[k].second-a[k-1].second)*(a[k].second-a[k-1].second));
					}
					if (r >= mx)
					{
						mx = r;
						best[0] = a[0];
						best[1] = a[1];
						best[2] = a[2];
						best[3] = a[3];
					}
				}
			}
		}
		for (int i = 1; i <= n; i++)
		{
			for (int j = 0; j <= n-1; j++)
			{
				a[0] = make_pair(0,0);
				a[1] = make_pair(i,0);
				a[2] = make_pair(j,m);
				a[3] = make_pair(n,m);
				sort(a , a+4);
				double r = 0.0;
					for (int k = 1;k < 4; k++)
					{
						r += sqrt((a[k].first-a[k-1].first)*(a[k].first-a[k-1].first) + (a[k].second-a[k-1].second)*(a[k].second-a[k-1].second));
					}
					if (r >= mx)
					{
						mx = r;
						best[0] = a[0];
						best[1] = a[1];
						best[2] = a[2];
						best[3] = a[3];
					}
				while (next_permutation(a, a+4))
				{
					r = 0.0;
					for (int k = 1;k < 4; k++)
					{
						r += sqrt((a[k].first-a[k-1].first)*(a[k].first-a[k-1].first) + (a[k].second-a[k-1].second)*(a[k].second-a[k-1].second));
					}
					if (r >= mx)
					{
						mx = r;
						best[0] = a[0];
						best[1] = a[1];
						best[2] = a[2];
						best[3] = a[3];
					}
				}
			}
			
		}
		for (int i = 0; i < 4; i++) cout<<best[i].first<<" "<<best[i].second<<endl;
	
	}
	else if (n == 0)
	{
		cout<<0<<" "<<1<<endl;
		cout<<0<<" "<<m<<endl;
		cout<<0<<" "<<0<<endl;
		cout<<0<<" "<<m-1<<endl;
	}
	else
	{
		cout<<1<<" "<<0<<endl;
		cout<<n<<" "<<0<<endl;
		cout<<0<<" "<<0<<endl;
		cout<<n-1<<" "<<0<<endl;
	}
}


int main()
{
	int n1,n2,n3,t1,t2,t3;
	int k;
	cin>>k>>n1>>n2>>n3>>t1>>t2>>t3;
	int a[10001] = {0};
	int b[10001] = {0};
	int c[10001] = {0};
	for (int i = 0; i < k; i++)
	{
		if (i+n1 < k)
		{
			a[i+n1] = a[i] + t1;
		}
	}
	for (int i = 0; i < k; i++)
	{
		b[i] = max(b[i], a[i] + t1);
		if (i+n2 < k)
		{
			b[i+n2] = b[i] + t2;
		}
	}
	for (int i = 0; i < k; i++)
	{
		c[i] = max(c[i], b[i] + t2);
		if (i+n3 < k)
		{
			c[i+n3] = c[i] + t3;
		}
	}
	cout<<c[k-1]+t3<<endl;
}



int main()
{
	int n,m;
	cin>>n>>m;
	set<int> r,c;
	while (m--)
	{
		int a,b;
		cin>>a>>b;
		r.insert(a);
		c.insert(b);
	}
	vector<vector<double> > dp(n+1, vector<double> (n+1, 0));
	
	for (int i = 0; i <= n-r.size(); i++)
	{
		for (int j = 0; j <= n-c.size(); j++)
		{
			dp[i][j] = 0.0;
			if (i == j && i == 0) continue;
			dp[i][j] = 1;
			if (i > 0 && j > 0)
			{
				dp[i][j] += (((double)i*j) / ((double)n*n)) * (dp[i-1][j-1]);
			}
			if (i > 0) dp[i][j] += (((double)i*(n-j)) / ((double)n*n)) * (dp[i-1][j]);
			if (j > 0) dp[i][j] += (((double)j*(n-i)) / ((double)n*n)) * (dp[i][j-1]);
			double rem = (n-j)*(n-i);
			dp[i][j] /= (1.0- rem / ((double)n*n));
		}
	}
	cout<<dp[n-r.size()][n-c.size()]<<endl;

}


int main()
{
	string s;
	cin>>s;
	double p;
	cin>>p;
	double sm = 0;
	for (int i = s.size() - 1; i >=0; i--)
	{
		if (s[i] == '?') sm += p;
		else sm += s[i]-'0';
	}
	cout<<sm / s.size()<<endl;
}


1 4 9 16 25 36 49 64 81 100 121 144 169 196 225 256 289
1 9 25 49 81 121 169


int main()
{
	int n;
	cin>>n;
	vector<pair<double, double> > a(n);
	for (int i = 0; i < n; i++) {cin>>a[i].first>>a[i].second;
	a[i].second/=100;
	}
	vector<pair<double, int> > r(n);
	for (int i = 0; i < n; i++) r[i] = make_pair(a[i].first* a[i].second / (1-a[i].second), i);
	sort(r.begin(), r.end());
	double sm = 0.0;
	double res = 0.0;
	reverse(r.begin(), r.end());
	for (int i = n-1; i >=0; i--)
	{
		int in = r[i].second;
		res += a[in].first + sm*a[in].first*a[in].second;
		sm += 1-a[in].second;
	}
	cout<<fixed<<setprecision(15)<<res<<endl;
}


vector<vector<int> > tr;

double dfs(int i, int d, int p)
{
	double exp = 1.0/d;
	for (int j = 0; j < tr[i].size(); j++)
	{
		if (tr[i][j] == p) continue;
		exp += dfs(tr[i][j], d+1, i);
	}
	return exp;
}


int main()
{
	int n;
	cin>>n;
	tr = vector<vector<int> > (n);
	for (int i = 1; i < n; i++)
	{
		int a,b;
		cin>>a>>b;
		tr[a-1].push_back(b-1);
		tr[b-1].push_back(a-1);
	}
	cout<<fixed<<setprecision(15)<<dfs(0,1,0)<<endl;
}


int main()
{
	int n=0;
	scanf("%d",&n);
	long long sm = 0;
	int a[300001] = {0};
	int b[300001] = {0};
	int sz = 0;
	int ai=0,xi=0;
	int k=0;
	while (n--)
	{
		int op;
		scanf("%d",&op);
		if (op == 1)
		{
			
			scanf("%d %d",&ai, &xi);
			sm += ai*xi;
			a[ai-1] += xi;
		}
		else if (op == 2)
		{
			scanf("%d",&k);
			sz++;
			b[sz] = k;
			sm += k;
		}
		else
		{
			k = b[sz];
			sm -= k;
			sm -= a[sz];
			a[sz-1] += a[sz];
			a[sz] = 0;
			sz--;
		}
		printf("%.7f\n",sm / (sz+1.0));
	}
}


int main()
{
	int n;
	scanf("%d",&n);
	vector<pair<int,int> > pp;
	vector<pair<int,int> > pn;
	vector<pair<int,int> > np;
	vector<pair<int,int> > nn;
	int k = 0;
	while (n--)
	{
		int a,b;
		scanf("%d %d",&a,&b);
		if (a==0 ||b==0)
		{
			k += 4;
		}
		else
		{
			k += 6;
		}
		if (a >= 0)
		{
			if (b >= 0) pp.push_back(make_pair(a,b));
			else pn.push_back(make_pair(a,-b));
		}
		else
		{
			if (b >= 0) np.push_back(make_pair(-a,b));
			else nn.push_back(make_pair(-a,-b));
		}
	}
	sort(pp.begin(), pp.end());
	sort(pn.begin(), pn.end());
	sort(np.begin(), np.end());
	sort(nn.begin(), nn.end());
	printf("%d\n",k);
	for (int i = 0;i < pp.size(); i++)
	{
		if (pp[i].first != 0) printf("1 %d R\n",pp[i].first);
		if (pp[i].second != 0) printf("1 %d U\n",pp[i].second);
		printf("2\n");
		if (pp[i].second != 0) printf("1 %d D\n",pp[i].second);
		if (pp[i].first != 0) printf("1 %d L\n",pp[i].first);		
		printf("3\n");
	}
	for (int i = 0;i < pn.size(); i++)
	{
		if (pn[i].first != 0) printf("1 %d R\n",pn[i].first);
		if (pn[i].second != 0) printf("1 %d D\n",pn[i].second);
		printf("2\n");
		if (pn[i].second != 0) printf("1 %d U\n",pn[i].second);
		if (pn[i].first != 0) printf("1 %d L\n",pn[i].first);		
		printf("3\n");
	}
	for (int i = 0;i < np.size(); i++)
	{
		if (np[i].first != 0) printf("1 %d L\n",np[i].first);
		if (np[i].second != 0) printf("1 %d U\n",np[i].second);
		printf("2\n");
		if (np[i].second != 0) printf("1 %d D\n",np[i].second);
		if (np[i].first != 0) printf("1 %d R\n",np[i].first);		
		printf("3\n");
	}
	for (int i = 0;i < nn.size(); i++)
	{
		if (nn[i].first != 0) printf("1 %d L\n",nn[i].first);
		if (nn[i].second != 0) printf("1 %d D\n",nn[i].second);
		printf("2\n");
		if (nn[i].second != 0) printf("1 %d U\n",nn[i].second);
		if (nn[i].first != 0) printf("1 %d R\n",nn[i].first);		
		printf("3\n");
	}
	
}


int main()
{
	int n,m,k;
	cin>>n>>m>>k;
	vector<bool> a(n, false);
	int kk;
	for (int i = 0; i < k; i++) {cin>>kk;a[kk-1] = true;}
	if (k == n) cout<<-1<<endl;
	else
	{
		if ((n*(n-1))/2 - k+1 < m)
		{
			cout<<-1<<endl;
			return 0;
		}
		int c = -1;
		int d = -1;
		for (int i = 0; i < n; i++)
		{
			if (a[i]) c = i;
			else d =i;
		}
		int rem = m;
		for (int i = 0; i < n; i++)
		{
			if (i == d) continue;
			rem--;
			cout<<i+1<<" "<<d+1<<endl;
		}
		for (int i = 0; i < n; i++)
		{
			if (i==d) continue;
			if (i == c) continue;
			if (rem == 0) break;
			for (int j= 0; j < i; j++)
			{
				if (!a[i] && j == c) {
				rem--;
				cout<<i+1<<" "<<j+1<<endl;
				}
			}
			for (int j= i+1; j < n; j++)
			{
				if (j == d) continue;
				if (rem==0) break;
				if (a[i] && j == c) continue;
				rem--;
				cout<<i+1<<" "<<j+1<<endl;
			}
		}
	}
}


vector<int> g;
vector<vector<int> > t;
vector<int> in;
vector<int> r;
void dfs(int i, int p, int odd, int ev, int d)
{
	if (d%2==0)
	{
		in[i] += (ev%2);
		in[i]%=2;
		if (g[i] == in[i])
		{
			for (int j=0; j < t[i].size(); j++)
			{
				if (t[i][j] == p) continue;
				dfs(t[i][j], i, odd,ev,d+1);
			}
		}
		else
		{
			r.push_back(i+1);
			for (int j=0; j < t[i].size(); j++)
			{
				if (t[i][j] == p) continue;
				dfs(t[i][j], i, odd, ev+1, d+1);
			}
		}
	}
	else
	{
		in[i] += (odd%2);
		in[i]%=2;
		if (g[i] == in[i])
		{
			for (int j=0; j < t[i].size(); j++)
			{
				if (t[i][j] == p) continue;
				dfs(t[i][j], i, odd, ev, d+1);
			}
		}
		else
		{
			r.push_back(i+1);
			for (int j=0; j < t[i].size(); j++)
			{
				if (t[i][j] == p) continue;
				dfs(t[i][j], i, odd+1, ev, d+1);
			}
		}
	}
}

int main()
{
	int n;
	cin>>n;
	t = vector<vector<int> > (n);
	g = vector<int> (n);
	in = vector<int> (n);
	for (int i = 0; i < n-1; i++)
	{
		int a,b;
		cin>>a>>b;
		t[a-1].push_back(b-1);
		t[b-1].push_back(a-1);
	}
	for (int i = 0; i < n; i++) cin>>in[i];
	for (int i = 0; i < n; i++) cin>>g[i];
	dfs(0,0,0,0,0);
	cout<<r.size()<<endl;
	for (int i = 0; i < r.size(); i++)
	{
		cout<<r[i]<<endl;
	}
}


int main()
{
	int n;
	cin>>n;
	vector<pair<int,int> > r;
	int np[100000] = {0};
	np[1] = np[0] = 1;
	vector<bool> tk(n+1, false);
	for (long long i = 2; i < 100000; i++)
	{
		if (np[i]) continue;
		for (long long j = i*i; j < 100000; j+= i)
		{
			np[j] = 1;
		}
	}
	for (int i = 3; i < n; i++)
	{
		if (np[i] == 0)
		{
			vector<int> pr;
			for (int j = i; j <= n; j+= i)
			{
				if (!tk[j]) pr.push_back(j);
			}
			if (pr.size()%2==0)
			{
				for (int j = 1; j < pr.size(); j+=2)
				{
					r.push_back(make_pair(pr[j-1], pr[j]));
					tk[pr[j-1]] = tk[pr[j]] = true;
				}
			}
			else if (pr.size() > 2)
			{
				r.push_back(make_pair(pr[2], pr[0]));
				tk[pr[2]] = tk[pr[0]] = true;
				for (int j = 4; j < pr.size(); j+=2)
				{
					r.push_back(make_pair(pr[j-1], pr[j]));
					tk[pr[j-1]] = tk[pr[j]] = true;
				}
			}
		}
	}
	vector<int> pr;
	for (int j = 2; j <= n; j+= 2)
	{
		if (!tk[j]) pr.push_back(j);
	}
	if (pr.size()%2==0)
	{
		for (int j = 1; j < pr.size(); j+=2)
		{
			r.push_back(make_pair(pr[j-1], pr[j]));
			tk[pr[j-1]] = tk[pr[j]] = true;
		}
	}
	else if (pr.size() > 2)
	{
		r.push_back(make_pair(pr[2], pr[0]));
		tk[pr[2]] = tk[pr[0]] = true;
		for (int j = 4; j < pr.size(); j+=2)
		{
			r.push_back(make_pair(pr[j-1], pr[j]));
			tk[pr[j-1]] = tk[pr[j]] = true;
		}
	}
	cout<<r.size()<<endl;
	for (int i = 0; i < r.size(); i++) cout<<r[i].first<<" "<<r[i].second<<endl;
}


long long gcd(long long x,long long b)
{
	if (b==0) return x;
	return gcd(b, x%b);
}
unsigned long long lcm(long long x, long long b)
{
	unsigned long long g = gcd(x,b);
	unsigned long long mx = max(x,b);
	unsigned long long mn = min(x,b);
	mx/=g;
	if ((1ll<<62) / mx < mn) return (1ll << 62);
	return mn*(mx);
}

vector<long long> a;
vector<bool> tk;
vector<vector<int> > t;
unsigned long long dfs1(int i)
{
	if (i!= 0 && t[i].size() == 1) return 1;
	tk[i] = true;
	unsigned long long rs = 0;
	unsigned long long lcmv = 1;
	for (int j = 0; j < t[i].size(); j++)
	{
		if (tk[t[i][j]]) continue;
		lcmv= lcm(lcmv, dfs1(t[i][j]));
	}
	tk[i] = false;
	if ((1ll<<62) / lcmv < ((unsigned long long)t[i].size()-1ll)) return (1ll << 62);
	rs = lcmv * ((unsigned long long)t[i].size()-1ll);
	if ((1ll<<62) / lcmv < ((unsigned long long)t[i].size())) return (1ll << 62);
	if (0 == i)
	{
		rs = lcmv * ((unsigned long long)t[i].size());
	}
	
	return rs;
}
long long dfs2(int i, long long val)
{
	long long mn = 10000000000ll;
	if (i!=0&& t[i].size() == 1)
	{	
		if (val==0) return 0;
		return a[i] / val;
	}
	tk[i] = true;
	long long dis;
	if (0==i) dis = val / (t[i].size());
	else dis = val / (t[i].size()-1);
	
	for (int j = 0; j < t[i].size(); j++)
	{
		if (tk[t[i][j]]) continue;
		mn = min(mn, dfs2(t[i][j], dis));
	}
	return mn;
}

int main()
{
	int n;
	cin>>n;
	t = vector<vector<int> > (n);
	a = vector<long long> (n);
	tk = vector<bool> (n);
	long long sm = 0;
	for (int i = 0; i < n; i++) {
	cin>>a[i];
	sm += a[i];
	}
	for (int i = 1; i < n; i++)
	{
		int x,y;
		cin>>x>>y;
		t[x-1].push_back(y-1);
		t[y-1].push_back(x-1);
	}
	unsigned long long val = dfs1(0);
	if (val >= (1ll<<62))
	{
		cout<<(sm)<<endl;
		return 0;
	}
	long long ans = dfs2(0,val);
	cout<<(sm - (val * ans))<<endl;
}


double pw(double a, int p)
{
	if (p==0) return 1;
	if (p%2==0)
	{
		double r = pw(a, p/2);
		return r*r;
	}
	else
	{
		return a*pw(a, p-1);
	}
}

int main()
{
	int n,m;
	cin>>m>>n;
	double res = 0.0;
	double pr = 0.0;
	for (int i = m; i >=1; i-- )
	{
	
		double p = pw((i-1.0) / (double)m , n);
		double p2 = pw((i) / (double)m , n);
		pr = (1-p) - (1.0-p2);
		res += ((double)i) * pr;
	}
	cout<<fixed<<setprecision(10)<<res<<endl;
}


int pr[16];
vector<int> a;
vector<int> m;
int dp[100][(1<<16)+1];
pair<int,int> p[100][(1<<16)+1];

int sol(int i, int msk)
{
	if (i == a.size()) return 0;
	if (dp[i][msk] != -1) return dp[i][msk];
	int mn = 1000000;
	pair<int,int> mn2 = make_pair(-1,-1);
	for (int j = 1; j < 60; j++)
	{
		int msk2 = m[j];
		if ((msk2&msk) > 0) continue;
		int sl = abs(j-a[i]) + sol(i+1, msk|msk2);
		if (mn > sl)
		{
			mn = sl;
			mn2.first = j;
			mn2.second = msk|msk2;
		}
	}
	p[i][msk ] =  mn2;
	dp[i][msk] = mn;
	return mn;
}

int main()
{
	pr[0] = 2;
	pr[1] = 3;
	pr[2] = 5;
	pr[3] = 7;
	pr[4] = 11;
	pr[5] = 13;
	pr[6] = 17;
	pr[7] = 19;
	pr[8] = 23;
	pr[9] = 29;
	pr[10] = 31;
	pr[11] = 37;
	pr[12] = 41;
	pr[13] = 43;
	pr[14] = 47;
	pr[15] = 53;
	int n;
	cin>>n;
	m = vector<int> (60);
	for (int i = 1; i < 60; i++)
	{
		int ms = 0;
		for (int j = 0; j < 16; j++)
		{
			if (i%pr[j] == 0) ms |= (1<<j);
		}
		m[i] = ms;
	}
	for (int i = 0; i < 100; i++) for (int j = 0; j < (1<<16); j++) dp[i][j] = -1;
	a = vector<int> (n);
	for (int i = 0; i < n; i++) cin>>a[i];
	int sl = sol(0,0);
	int msk = 0;
	for (int i = 0; i < n; i++)
	{
		cout<<p[i][msk].first<<endl;
		msk = p[i][msk].second;
	}
	
}


class el{
	public:
	int o,c,r;
};

int t[3000000];
int op[1000000];
int cl[1000000];
string s;
el sol(int i, int j, int in, int a, int b)
{
	
	if (i >= a && j <= b)
	{
		el res;
		res.o = op[j];
		if (i > 0) res.o -= op[i-1];
		res.c = cl[j];
		if (i > 0) res.c -= cl[i-1];
		res.r = t[in];
		return res;
	}
	if (i > b || j < a)
	{
		el res;
		res.o = 0;
		res.c = 0;
		res.r = 0;
		return res;
	}
	int md = (i+j) / 2;
	el r1 = sol(i, md, in*2, a,b);
	el r2 = sol(md+1, j,in*2+1, a,b);
	int res = r1.r + r2.r;
	res += min(r1.o-r1.r, r2.c-r2.r);
	int o = r1.o+r2.o;
	int c = r1.c+r2.c;
	el ret;
	ret.r = res;
	ret.o = o;
	ret.c = c;
	return ret;
}

el con(int i, int j, int in)
{
	if (i == j)
	{
		el res;
		res.o = 0;
		res.c = 0;
		res.r = 0;
		if (s[i] == '(') res.o = 1;
		else res.c = 1;
		t[in] = res.r;
		return res;
	}
	int md = (i+j) / 2;
	el r1 = con(i, md, in*2);
	el r2 = con(md+1, j,in*2+1);
	int res = r1.r + r2.r;
	res += min(r1.o-r1.r, r2.c-r2.r);
	int o = r1.o+r2.o;
	int c = r1.c+r2.c;
	el ret;
	ret.r = res;
	ret.o = o;
	ret.c = c;
	t[in] = ret.r;
	return ret;
}

int main()
{
	cin>>s;
	for (int i = 0; i < s.size(); i++)
	{
		if (s[i] == '(') op[i]++;
		else cl[i]++;
		if (i)
		{
			op[i] += op[i-1];
			cl[i] += cl[i-1];
		}
	}
	con(0,s.size()-1, 1);
	int m;
	cin>>m;
	while (m--)
	{
		int l,r;
		cin>>l>>r;
		el res = sol(0,s.size()-1, 1,l-1, r-1);
		cout<<res.r*2<<endl;
	}
	
}
*/

int main()
{
	unsigned long long m;
	int k;
	cin>>m>>k;
	unsigned long long res = 0;
	unsigned long long ch[65][65];
	for (int i = 0; i < 65; i++) for (int j = 0; j < 65; j++) ch[i][j] = 0;
	for (int i = 0; i < 65; i++)
	{
		ch[i][0] = 1;
		if (i) ch[0][i] = 0;
	}
	for (int i = 1; i < 65; i++)
	{
		for (int j = 1; j < 65; j++)
		{
			if (i < j) ch[i][j] = 0;
			else if (i==j) ch[i][j] = 1;
			else ch[i][j] = ch[i-1][j] + ch[i-1][j-1];
		}
	}
	unsigned long long lo = 1;
	unsigned long long hi = 1000000000000000000ull;
	unsigned long long md;
	unsigned long long up;
	while (lo <= hi)
	{
		md = (lo+hi) / 2;
		int cnt = 0;
		res = 0;
		
		cnt = 0;
		for (int i = 63; i >=0; i--)
		{
			if ((md & (1ll<<i)) > 0)
			{
				if (k-cnt-1 >=0)
					res += ch[i][k-1-cnt];
				cnt++;
			}
		}
		if (res < m)
		{
			lo = md+1;
		}
		else if (res > m)
			hi = md-1;
		else
		{
			cout<<md<<endl;
			return 0;
		}
	}
}