#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>
#include <cstring>
using namespace std;
const int N=2e6+10;
const int inf=1e9+7;
int a[N],b[N],c[N];
int i,j,n,m,ans,x,y,t,z,k;
int l[N],r[N],q[N];
int d[N];

void build(int l,int r,int v)
{
//cout<<l<<' '<<r<<endl;
if (l==r) {
           d[v]=a[l];
           return ;
            }
int t=(l+r)/2;
build(l,t,v*2);
build(t+1,r,v*2+1);
d[v]=d[v*2] & d[v*2+1];

}
int query (int v,int l,int r,int x,int y)
{
 //cout<<l<<' '<<r<<' '<<x<<' '<<y<<endl;
 if(x<=l && y>=r) return d[v];
 if (x>r || y<l) return (1<<30)-1;
int t=(l+r)/2;
return query(2*v,l,t,x,y) & query(2*v+1,t+1,r,x,y);

}


int main()
{

 //   freopen("marathon.in","r",stdin);
  //  freopen("marathon.out","w",stdout);
scanf("%d%d",&n,&m);
for (i=0;i<m;i++) {
 scanf("%d%d%d",&l[i],&r[i],&q[i]);
 l[i]--;r[i]--;
}

for (int mask=0;mask<30;mask++)
{
 for (i=0;i<n;i++) c[i]=0;
 for (i=0;i<m;i++)
   if (q[i] & (1<<mask) )
     {
      c[l[i]]++;
      c[r[i]+1]--;
     }
  for (i=0;i<n;i++)
   {
     if (i) c[i]+=c[i-1];
     if (c[i]) a[i] |= (1<<mask);
   }

}
build(0,n-1,1);

//printf("YES\n");
//for (i=0;i<n;i++) printf("%d ",a[i]);

for (i=0;i<m;i++)
 {
  int t=query(1,0,n-1,l[i],r[i]);
  //cout<<t<<' ';;
  if (t!=q[i]) {
                            cout<<"NO";
                            return 0;
  }
                            }
printf("YES\n");
for (i=0;i<n;i++) printf("%d ",a[i]);
}
