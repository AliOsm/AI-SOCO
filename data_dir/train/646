#include <bits/stdc++.h>
using namespace std;
using ll = long long;

constexpr int N = 1001;
unordered_map<int, int> sr[N];
unordered_map<int, int> sc[N];
int a[N][N];
int buff[N];
int rmax[N];
int cmax[N];

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(nullptr);
  cout.tie(nullptr);

  int n, m;
  cin >> n >> m;
  for(int i = 0; i < n; ++i) {
    for(int j = 0; j < m; ++j) {
      cin >> a[i][j];
    }
  }

  for(int i = 0; i < n; ++i) {
    int id = 0;
    copy(a[i], a[i] + m, buff);
    sort(buff, buff + m);
    for(int j = 0; j < m; ++j) {
      if (!sr[i].count(buff[j])) {
        sr[i][buff[j]] = ++id;
      }
    }
    rmax[i] = id;
  }
  for(int j = 0; j < m; ++j) {
    int id = 0;
    for(int i = 0; i < n; ++i) {
      buff[i] = a[i][j];
    }
    sort(buff, buff + n);
    for(int i = 0; i < n; ++i) {
      if (!sc[j].count(buff[i])) {
        sc[j][buff[i]] = ++id;
      }
    }
    cmax[j] = id;
  }

  for(int i = 0; i < n; ++i) {
    for(int j = 0; j < m; ++j) {
      int r = sr[i][a[i][j]];
      int c = sc[j][a[i][j]];
      if (r > c) {
        cout << max(rmax[i], cmax[j] + r - c) << " "; 
      } else {
        cout << max(cmax[j], rmax[i] + c - r) << " ";
      }
    }
    cout << endl;
  }
  return 0;
}
