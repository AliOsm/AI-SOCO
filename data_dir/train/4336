#include<bits/stdc++.h>
using namespace std;
int n,a[100001],l[100001],r[100001],root,ans;
map<int,int>mark;
set<int>s;
void dfs(int root,int left_child,int right_child)
{
    if(left_child<=a[root] && a[root]<=right_child)
        s.insert(a[root]);
    if(l[root]!=-1 && left_child<a[root])
        dfs(l[root],left_child,min(a[root]-1,right_child));
    if(r[root]!=-1 && right_child>a[root])
        dfs(r[root],max(a[root]+1,left_child),right_child);
}
int main()
{
    cin>>n;
    for(int i=1;i<=n;i++)
    {
        cin>>a[i]>>l[i]>>r[i];
        mark[l[i]]=1;
        mark[r[i]]=1;
    }
    for(int i=1;i<=n;i++)
        if(!mark[i])
            root=i;
    dfs(root,-1,1000000001);
    for(int i=1;i<=n;i++)
        if(s.find(a[i])==s.end())
            ++ans;
    cout<<ans;
}