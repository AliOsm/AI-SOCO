#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("input.txt");ofstream out("output.txt");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

ll X1,Y1,X2,Y2;
vec<ll> px1,py1,px2,py2;

int main(){
    fast;
    int z; cin>>z;
    for(; z; z--){
        str t; cin>>t;
        ll a = t.size(), cx=0, cy=0, x1=0, x2=0,y1=0,y2=0;
        vec<ll> mx1,my1, mx2,my2,kx1,kx2,ky1,ky2;
        for(char c : t){
            if(c=='W') cy++;
            if(c=='S') cy--;
            if(c=='A') cx--;
            if(c=='D') cx++;
            kx1.pb(cx);
            kx2.pb(cx);
            ky1.pb(cy);
            ky2.pb(cy);
            x1 = min(x1, cx);
            x2 = max(x2, cx);
            y1 = min(y1, cy);
            y2 = max(y2, cy);
            mx1.pb(x1);
            my1.pb(y1);
            mx2.pb(x2);
            my2.pb(y2);
        }
        ll o  = (x2-x1+1)*(y2-y1+1);
        X1 = x1;
        Y1 = y1;
        X2 = x2;
        Y2 = y2;
        //for(int q=0; q<a; q++) cout<<mx1[q]<<" "<<my1[q]<<" "<<mx2[q]<<" "<<my2[q]<<endl;
        px1 = vec<ll>(a);
        px2 = vec<ll>(a);
        py1 = vec<ll>(a);
        py2 = vec<ll>(a);
        px1[0] = mx1[0];
        px2[0] = mx2[0];
        py1[0] = my1[0];
        py2[0] = my2[0];
        for(int q=1; q<a; q++){
            px1[q] = min(px1[q-1], mx1[q]);
            px2[q] = max(px2[q-1], mx2[q]);
            py1[q] = min(py1[q-1], my1[q]);
            py2[q] = max(py2[q-1], my2[q]);
        }
        mx1.clear();
        mx2.clear();
        my1.clear();
        my2.clear();
        ll tx1=cx, tx2=cx, ty1 = cy, ty2 = cy;
        for(int q=a-1; q>=0; q--){
            mx1.pb(tx1);
            mx2.pb(tx2);
            my1.pb(ty1);
            my2.pb(ty2);
            char c = t[q];
            if(c=='W') cy--;
            if(c=='S') cy++;
            if(c=='A') cx++;
            if(c=='D') cx--;
            tx1 = min(tx1, cx);
            tx2 = max(tx2, cx);
            ty1 = min(ty1, cy);
            ty2 = max(ty2, cy);
        }
        vec<ll> sx1(a),sy1(a),sx2(a),sy2(a);
        sx1[0] = mx1[0];
        sx2[0] = mx2[0];
        sy1[0] = my1[0];
        sy2[0] = my2[0];
        for(int q=1; q<a; q++){
            sx1[q] = min(sx1[q-1], mx1[q]);
            sx2[q] = max(sx2[q-1], mx2[q]);
            sy1[q] = min(sy1[q-1], my1[q]);
            sy2[q] = max(sy2[q-1], my2[q]);
        }
        reverse(sx1.begin(), sx1.end());reverse(sx2.begin(), sx2.end());reverse(sy1.begin(), sy1.end());reverse(sy2.begin(), sy2.end());
        //for(int q=0; q<a; q++) cout<<sx1[q]<<" "<<sy1[q]<<" "<<sx2[q]<<" "<<sy2[q]<<endl;
       // cout<<o<<endl;
        for(int q=1; q<a; q++){
            ll nx1 = min(px1[q-1], sx1[q]+1), nx2 = max(max(kx1[q-1]+1,px2[q-1]), sx2[q]+1);
            o = min(o, (nx2-nx1+1)*(Y2-Y1+1));
          //  cout<<q<<": "<<px1[q-1]<<" "<<sx1[q]+1<<"    "<<px2[q-1]<<" "<<sx2[q]+1<<" "<<kx1[q-1]+1<<"     "<<o<<endl;
        }
        //cout<<o<<endl;

        for(int q=1; q<a; q++){
            ll nx1 = min(min(kx1[q-1]-1,px1[q-1]), sx1[q]-1), nx2 = max(px2[q-1], sx2[q]-1);
            o = min(o, (nx2-nx1+1)*(Y2-Y1+1));
        }
       // cout<<o<<endl;

        for(int q=1; q<a; q++){
            ll ny1 = min(py1[q-1], sy1[q]+1), ny2 = max(max(ky2[q-1]+1,py2[q-1]), sy2[q]+1);
            o = min(o, (ny2-ny1+1)*(X2-X1+1));
        }
       // cout<<o<<endl;

        for(int q=1; q<a; q++){
            ll ny1 = min(min(ky1[q-1]-1,py1[q-1]), sy1[q]-1), ny2 = max(py2[q-1], sy2[q]-1);
            o = min(o, (ny2-ny1+1)*(X2-X1+1));
            //cout<<q<<": "<<py1[q-1]<<" "<<sy1[q]-1<<"    "<<py2[q-1]<<" "<<sy2[q]-1<<"     "<<o<<endl;
        }
        cout<<o<<"\n";
    }
}