#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>



#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) ) Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}




int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	ios_base::sync_with_stdio(0);
	tint n;
	while (cin >> n)
	{
		vector<tint> a (n);
		forn(i,n)
			cin >> a[i];
		sort(a.begin(),a.end());
		vector<pair<tint,tint> > c(1, make_pair(a[0],1));
		forsn(i,1,n)
			if (a[i] != a[i-1])
				c.push_back(make_pair(a[i],1));
			else
				c.back().second++;
		tint k = c.size();
		vector<tint> dp (k+1,0);
		dp[1] = c[0].first*c[0].second;
		forsn(i,2,k+1)
			if (c[i-2].first + 1 == c[i-1].first)
				dp[i] = max(dp[i-1], dp[i-2] + c[i-1].first*c[i-1].second);
			else
				dp[i] = dp[i-1] + c[i-1].first*c[i-1].second;
		cout << *max_element(dp.begin(),dp.end()) << endl;
	}
	return 0;
}



