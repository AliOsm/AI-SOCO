#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;

vector<int> edges[5000];

vector<int> ans;

vector<int> ce[5000];
int cnt;

bool ask(int x)
{
	cout << "? " << x << '\n';
	fflush(stdout);
/*	cnt++;
	for(int j=0;j<edges[x].size();j++)
		ce[x].push_back(edges[x][j]);*/
	int k;
	cin >> k;
	if(k==0) exit(0);
	int y;
	ce[x].clear();
	for(int i=0;i<k;i++)
	{
		cin >> y;
		ce[x].push_back(y);
	}
	if(ce[x].size()==2)
	{
		cout << "! " << x << '\n';
		fflush(stdout);
//		cout << cnt << '\n';
		return 1;
	}
	return 0;
}
bool vis[5000];

int proceed(int y)
{
	for(int j=0;j<ce[y].size();j++)
	{
		if(!vis[ce[y][j]])
		{
			vis[ce[y][j]] = 1;
			return ce[y][j];
		}
	}
	return 1;
}

void test()
{
	int H;
	cin >> H;
	if(H==0) exit(0);
	int y;
/*	for(int i=127;i>=2;i--)
	{
		edges[(i-1+215)%127+1].push_back((i/2-1+215)%127+1);
		edges[(i/2-1+215)%127+1].push_back((i-1+215)%127+1);
	}*/
/*	int x;
	for(int i=1;i<(1<<H)-1;i++)
	{
		cin >> x >> y;
		edges[x].push_back(y);
		edges[y].push_back(x);
	}*/
	cnt = 0;
	for(int i=1;i<=(1<<H);i++)
	{
		vis[i] = 0;
		ce[i].clear();
	}
	int cur = 1;
	int d;
	vector<int> a;
	vis[cur] = 1;
	if(ask(cur)) return;
	else if(ce[cur].size()==1)
	{
		d = 0;
		a.push_back(cur);
	}
	else
	{
		vector<int> b;
		a.push_back(cur);
		y = proceed(cur);
		while(1)
		{
			a.push_back(y);
			if(ask(y)) return;
			else if(ce[y].size()==1)
				break;
			else
				y = proceed(y);
		}
		y = proceed(cur);
		while(1)
		{
			b.push_back(y);
			if(ask(y)) return;
			else if(ce[y].size()==1)
				break;
			else
				y = proceed(y);
		}
		reverse(a.begin(),a.end());
		for(int j=0;j<b.size();j++)
			a.push_back(b[j]);
		cur = a[a.size()/2];
		d = (a.size()/2);
		while(a.back()!=cur)
			a.pop_back();
	}
//	cout << cur << ": " << d << '\n';
	while(H-d > 4)
	{
		vector<int> b;
		int y = proceed(cur);
		while(1)
		{
			b.push_back(y);
			if(ask(y)) return;
			else if(ce[y].size()==1)
				break;
			else
				y = proceed(y);
		}
		for(int j=0;j<b.size();j++)
			a.push_back(b[j]);
		cur = a[a.size()/2];
		d = a.size()/2;
		while(a.back()!=cur)
			a.pop_back();
	}
	cur = proceed(cur);
	if(ask(cur)) return;
	int s1 = proceed(cur);
	int s2 = proceed(cur);
	if(ask(s1)) return;
	if(ask(s2)) return;
	int s3 = proceed(s1);
	int s4 = proceed(s1);
	if(ask(s3)) return;
	if(ask(s4)) return;
	int s5 = proceed(s2);
	if(ask(s5)) return;
	int s6 = proceed(s2);
	cout << "! " << s6 << '\n';
//	cout << cnt << '\n';
	fflush(stdout);
}

int main()
{
	int T;
	cin >> T;
	while(T--) test();
}