#include <bits/stdc++.h>
#define LL long long
#define pb push_back
using namespace std;

int n, a[100100];
vector<pair<int,int>> v, edge;
set<pair<int,int> > st;
int ans = -1;
int add, sum;

int main() {
	cin>>n;
	for(int i = 0; i < n; i++) {
		cin>>a[i];
		sum += a[i];
		v.push_back({a[i], i});
		if(a[i] > 1) ans++;
	}
	if(sum < 2 * n - 2) {
		cout<<"NO"<<endl;
		return 0;
	}
	sort(v.rbegin(), v.rend());
	int last = -1, start = -1;
	for(auto it : v) {
		int x = it.first;
		int y = it.second;
		if(x > 1) {
			if(last != -1) {
				a[last]--;
				a[y]--;
				edge.push_back({last, y});
			}
			last = y;
		}
	}
	if(edge.empty()) st.insert({a[last], last});
	for(int i = 0; i < edge.size(); i++) {
		int x = edge[i].first;
		int y = edge[i].second;
		if(i == 0) st.insert({a[x], x});
		st.insert({a[y], y});
	}
	for(auto node : v) {
		if(node.first > 1) continue;
		int curr = node.second;
		if(add == 0) {
			auto it = st.find({a[last], last});
			add++;
			int cnt = it->first;
			int last = it->second;
			st.erase(it);
			edge.push_back({curr, last});
			cnt--;
			if(cnt) st.insert({cnt, last});
			continue;
		}
		auto it = st.end();
		it--;
		add++;
		int cnt = it->first;
		int last = it->second;
		st.erase(it);
		edge.push_back({curr, last});
		cnt--;
		if(cnt) st.insert({cnt, last});
	}
	ans += min(2, add);
	cout<<"YES"<<" "<<ans<<endl;
	cout<<edge.size()<<endl;
	for(auto it : edge) cout<<it.first+1<<" "<<it.second+1<<endl;
	return 0;
}