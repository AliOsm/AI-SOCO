#include <bits/stdc++.h>
using namespace std;
#define F first
#define S second
#define R cin>>
#define Z class
#define ll long long
#define ln cout<<'\n'
#define in(a) insert(a)
#define pb(a) push_back(a)
#define pd(a) printf("%.10f\n",a)
#define mem(a) memset(a,0,sizeof(a))
#define all(c) (c).begin(),(c).end()
#define iter(c) __typeof((c).begin())
#define rrep(i,n) for(ll i=(ll)(n)-1;i>=0;i--)
#define REP(i,m,n) for(ll i=(ll)(m);i<(ll)(n);i++)
#define rep(i,n) REP(i,0,n)
#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)
ll check(ll n,ll m,ll x,ll y){return x>=0&&x<n&&y>=0&&y<m;}void pr(){ln;}
template<Z A,Z...B>void pr(const A &a,const B&...b){cout<<a<<(sizeof...(b)?" ":"");pr(b...);}
template<Z A>void PR(A a,ll n){rep(i,n){if(i)cout<<' ';cout<<a[i];}ln;}
const ll MAX=1e9+7,MAXL=1LL<<61,dx[8]={-1,0,1,0,-1,-1,1,1},dy[8]={0,1,0,-1,-1,1,1,-1};
typedef pair<ll,ll> P;

class BIT{
public:
  int n,bit[1000001];
  BIT(){fill(bit,bit+1000001,0);}
  void add(int i,int x){
    while(i<=n){
      bit[i]+=x;
      i+=i&-i;
    }
  }
  int sum(int i){
    int s=0;
    while(i>0){
      s+=bit[i];
      i-=i&-i;
    }
    return s;
  }
};

BIT b=BIT();

void Main() {
  b.n=1000000;
  ll n,T;
  cin >> n >> T;
  rep(i,n) {
    int x;
    R x;
    b.add(x,1);
  }
  while(T--) {
    int x;
    R x;
    if(x>0) b.add(x,1);
    else {
      x*=-1;
      ll l=0,r=1000000;
      while(l+1<r) {
        ll m=(l+r)/2;
        if(b.sum(m)<x) l=m;
        else r=m;
      }
      b.add(r,-1);
    }
  }
  rep(i,1000001) {
    if(b.sum(i)) {
      pr(i);
      return;
    }
  }
  pr(0);
}

int main(){ios::sync_with_stdio(0);cin.tie(0);Main();return 0;}
