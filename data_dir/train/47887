#include<bits/stdc++.h>
using namespace std;

#define ll           long long
#define pii          pair<ll,ll>
#define bug(a)       cerr << #a << " : " << a << endl;
#define FastRead     ios_base::sync_with_stdio(false);cin.tie(NULL);

const int MAX = 2e5+10;

vector<int>adj[MAX] , G[MAX];
int dist[MAX] , a[MAX];

void BFS(int src)
{
    fill(dist,dist+MAX,1e8);

    queue<int>q;
    q.push(src);
    dist[src] = 0;

    while(!q.empty())
    {
        int u = q.front();
        q.pop();

        for(auto i : adj[u])
        {
            if(dist[i] > dist[u]+1)
            {
                dist[i] = dist[u]+1;
                q.push(i);
            }
        }
    }
}

int main()
{
#ifdef Aaman007
    freopen("input.txt","r",stdin);
    // freopen("output.txt","w",stdout);
#endif // Aaman007

    FastRead

    int n,m,u,v,k;

    cin >> n >> m;

    for(int i=0;i<m;i++)
    {
        cin >> u >> v;

        adj[v].push_back(u);
        G[u].push_back(v);
    }

    cin >> k;

    for(int i=1;i<=k;i++)
        cin >> a[i];

    BFS(a[k]);

    int mn = 0 , mx = 0;
    for(int i=1;i<k;i++)
    {
        int d = dist[a[i+1]];
        bool flag = 0 , flag2 = 0;

        for(auto j : G[a[i]])
        {
            if(dist[j] < d)
            {
                flag = 1;
                flag2 = 1;
                break;
            }
            else if(dist[j] == d && j != a[i+1])
                flag2 = 1;
        }
        if(flag)
            mn++;
        if(flag2)
            mx++;
    }

    cout << mn << " " << mx << endl;
}
