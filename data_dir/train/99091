
#include<bits/stdc++.h>


using namespace std;

using ll   = long long;
using ii   = pair < int , int >;
using i3   = pair < int , ii >;
using li   = pair < ll , int >;
using lii  = pair <  ll,  ii >;
using vi   = vector < int >;
using vl   = vector < ll >;
using vli  = vector < li >;
using vii  = vector < ii >;
using vi3  = vector < i3 >;
using vlii = vector < lii >;

const int N = 2e5 + 5;
const ll INF = 1e17;
const double eps = 1e-12 , PI = acos(-1);

int n , m;

ll a[N];
vi adj[N];

void solve(int cs){
    scanf("%d %d" , &n , &m);

    int k = n / m;
    for(int i = 1 ; i <= n ; i ++){
        scanf("%lld" , &a[i]);
        adj[a[i]%m].push_back(i);
    }

    vii can;


    ll ans = 0ll;
    for(int j : {0 , 1}){
        for(int i = 0 ; i < m ; i ++){

            while( adj[i].size() > k ){
                can.push_back({i + j*m , adj[i].back()});
                adj[i].pop_back();
            }

            while( adj[i].size() < k ){
                if(can.size() == 0)break;

                int dx  = can.back().second;
                int val = can.back().first;
                can.pop_back();

                adj[i].push_back(dx);

                ans   += 1ll * (i + j*m - val);
                a[dx] += 1ll * (i + j*m - val);

            }

        }
    }

    printf("%lld\n" , ans);
    for(int i = 1 ; i <= n ; i ++){
        printf("%lld%c" , a[i] , i == n ? '\n' : ' ');
    }
}

main(){
    int t = 1;
    //scanf("%d" , &t);

    for(int cs = 1 ; t -- ; cs ++){
        solve(cs);
    }

    return 0;
}


