#include <bits/stdc++.h>
#define EPS (1e-6)
#define INF 1e9
#define INFLL 1e18
#define MOD 998244353
#define f first
#define s second
#define pb push_back
using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
//const int N = 200002;
const int N = 200002, MAX = 10;
int n;
char arr[MAX];
string s[N];
string temp;


bool build(int i,int j, bool les = false) {
    if(j == s[i].length())
        return les;
    if(les) {
        if(s[i][j] == '?')
            temp[j] = '9';
        return build(i, j+1, les);
    } else {
        if(s[i][j] == '?') {
            temp[j] = s[i+1][j];
            bool ret = build(i, j+1, les);
            if(ret)
                return true;
            char prev = s[i+1][j] - 1;
            if(prev < '0' || (prev == '0' && !j))
                return false;
            temp[j] = prev;
            return build(i, j+1, true);
        } else {
            if(s[i][j] > s[i+1][j])
                return false;
            else if(s[i][j] < s[i+1][j])
                return build(i, j+1, true);
            else
                return build(i, j+1, les);
        }
    }
}

bool solve(int i) {
    if(s[i].length()<s[i+1].length()) {
        for(int j = 0;j<s[i].length();j++)
            if(s[i][j] == '?')
                s[i][j] = '9';
        return true;
    } else if (s[i].length() > s[i+1].length()) {
        return false;
    }
    temp = s[i];
    if(build(i,0)) {
        s[i] = temp;
        return true;
    }
    return false;
}

int main() {
    scanf("%d",&n);
    for(int i =0;i<n;i++) {
        scanf("%s",arr);
        s[i] = arr;
    }
    for(int i = 0;i<s[n-1].length();i++)
        if(s[n-1][i] == '?')
            s[n-1][i] = '9';
    for(int i = n-2;i>=0;i--)
        if(!solve(i))
            return printf("NO"), 0;
    printf("YES\n");
    for(int i =0;i<n;i++)
        printf("%s\n",s[i].c_str());
    return 0;
}
