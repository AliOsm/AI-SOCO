#include <iostream>
#include <algorithm>
#include <map>
using namespace std;
typedef long long ll;

int N;
int A[105];
map<int, int> P;
map<int, int> grundy;

int getGrundy(int x)
{
    if (grundy.count(x))
        return grundy[x];

    ll g = 0;
    for (int i = 0; i < 29; i++)
    {
        if (!(x >> i))
            break;
        int y = (x>>(i + 1))|(x&((1<<i) - 1));
        g |= 1LL<<getGrundy(y);
    }
    
    int ret = 0;
    while ((g & (1LL<<ret)))
        ret++;
    return grundy[x] = ret;
}

int main()
{
    ios::sync_with_stdio(0);

    cin >> N;
    for (int i = 0, a; i < N; i++)
    {
        cin >> a;
        for (int j = 2; (ll)j*j <= a; j++)
            if (a % j == 0)
            {
                int cnt = 0;
                while (a % j == 0)
                {
                    a /= j;
                    cnt++;
                }
                P[j] |= 1<<(cnt - 1);
            }
        if (a > 1)
            P[a] |= 1;
    }

    int ans = 0;
    for (map<int, int>::iterator it = P.begin(); it != P.end(); it++)
        ans ^= getGrundy(it->second);

    if (ans > 0)
        cout << "Mojtaba\n";
    else
        cout << "Arpa\n";

    return 0;
}
