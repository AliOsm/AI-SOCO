#include<bits/stdc++.h>

using namespace std;
const int MAXN = 2010;
const int INF = 0x3f3f3f3f;

int r[MAXN];
string s,p;

int n;
int memo[MAXN][MAXN];

int dp(int pos,int q){
	if(q == 0) return 0;
	if(pos > n) return INF;
	
	if(memo[pos][q] != -1) return memo[pos][q];
	
	int sem = dp(pos + 1,q);
	if(r[pos] != INF){
		int com = dp(r[pos] + 1,q - 1) + r[pos] - pos + 1 - (int) p.size();
		return memo[pos][q] = min(com,sem);
	}
	
	return memo[pos][q] = sem;
}

int main(){
	memset(memo,-1,sizeof memo);
	memset(r,INF,sizeof r);
	cin >> s >> p;
	
	n = s.size();
	
	for(int i = 0;i < s.size();i++){
		int cnt = 0;
		int k = -1;
		for(int j = i;j < s.size();j++){
			if(cnt < p.size() && s[j] == p[cnt]) cnt ++;
			if(cnt == p.size()){
				k = j;
				break;
			}
		}
		if(k != -1) r[i] = k;
	} 
	
	for(int i = 0;i <= n;i++){
		int resp = 0;
		for(int j = 1;j <= n / ((int) p.size());j++){
			int h = dp(0,j);
			if(i >= h && i <= n - (j * (int) p.size())) resp = j;
		}
		
		cout << resp << " ";
	}
}