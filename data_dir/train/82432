/*
ID: xildar91
PROG: cowtour
LANG: C++11
*/
#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<ll> vll;
int inf_int=2e9;
ll inf_ll=2e18;
typedef pair<int,int> pii;
#define pb push_back
const double pi=3.1415926535898;
#define dout if(debug) cout
#define fi first
#define se second
#define sp setprecision
#define sz size()
template<typename T>
void prin(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i];
        if(i<a.size()-1)
            cout<<" ";
        else
            cout <<"\n";
    }
}
template<typename T>
void prin(set<T>& a)
{
    for(auto it=a.begin();it!=a.end();it++)
    {
        cout << *it<<" ";
    }
}
template<typename T>
void prin_new_line(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i]<<"\n";
    }
}
template<typename T,typename T1>
void prin_new_line(vector<pair<T,T1> >& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i].fi<<" "<<a[i].se<<"\n";
    }
}

int sum_vec(vector<int>& a)
{
    int s=0;
    for(int i=0;i<a.size();i++)
    {
        s+=a[i];
    }
    return s;
}
template<typename T>
T max(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=max(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=min(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(T a,T b,T c)
{
    return min(a,min(b,c));
}
template<typename T>
T max(T a,T b,T c)
{
    return max(a,max(b,c));
}
#define debug 0
double s_triangle(double x1,double y1,double x2,double y2,double x3,double y3)
{
    return abs(((x2-x1)*(y3-y1)-(x3-x1)*(y2-y1))/2);
}
#define x1 gfgs
#define y1 asd
struct point{
    double x,y;
};
double dis(point a,point b)
{
    return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));

}
#define rank asdasd
const int maxn=600000;
vector<ll> t(4000000);
vector<ll> a;
vector<int> g[maxn];
ll tin[maxn],tout[maxn],timer=-1;
ll order[maxn];
vector<ll> add(4000000);
inline void push(int v)
{
    if(add[v])
    {
        t[v*2]=add[v];
        t[v*2+1]=add[v];
        add[v*2]=add[v];
        add[v*2+1]=add[v];
        t[v]=add[v];
        add[v]=0;
    }
}
void dfs(int v,int p=-1)
{
    timer++;
    tin[v]=timer;
    order[timer]=v;
    for(int i=0;i<g[v].sz;i++)
    {
        int to=g[v][i];
        if(p!=to)
        {
            dfs(to,v);
        }
    }
    tout[v]=timer;
}
void build(int v,int tl,int tr)
{
    if(tl==tr)
    {
        t[v]=a[order[tl]];
    }
    else
    {
        int tm=(tl+tr)>>1;
        build(v*2,tl,tm);
        build(v*2+1,tm+1,tr);
        t[v]=(t[v*2]|t[v*2+1]);
    }
}
ll res(int v,int tl,int tr,int l,int r)
{
    if(l>r)
        return 0;
    if(tl==l && tr==r)
    {
        push(v);
        dout << tl<<" "<<tr<<" "<<t[v]<<endl;
        return t[v];
    }
    int tm=(tl+tr)>>1;
    push(v);
    ll ans=(res(v*2,tl,tm,l,min(r,tm))|res(v*2+1,tm+1,tr,max(l,tm+1),r));
    t[v]=t[v*2]|t[v*2+1];
    return ans;
}
void update(int v,int tl,int tr,int l,int r,ll val)
{
    if(l>r)
        return;
    if(tl==l && tr==r)
    {
        add[v]=val;
        push(v);
        t[v]=val;
        return;
    }
    int tm=(tl+tr)>>1;
    push(v);
    update(v*2,tl,tm,l,min(r,tm),val);
    update(v*2+1,tm+1,tr,max(tm+1,l),r,val);
    t[v]=t[v*2]|t[v*2+1];
}

void solve()
{
    int n,m;
    cin >> n >> m;
    a.resize(n+100);
    for(int i=0;i<n;i++)
    {
        cin >> a[i];
        a[i]=(1ll<<a[i]);
    }
    for(int i=0;i<n-1;i++)
    {
        int x,y;
        cin >> x >> y;
        x--;y--;
        g[x].pb(y);
        g[y].pb(x);
    }
    dfs(0);
    for(int i=0;i<n;i++)
    {
        dout << order[i]<<" ";
    }
    dout << endl;
    build(1,0,n-1);
    for(int i=0;i<n;i++)
    {
        dout << tin[i]<<" "<<tout[i]<<endl;
    }
    for(int i=0;i<m;i++)
    {
        ll x;
        cin >> x;
        if(x==1)
        {
            ll y;
            cin >> x >> y;
            x--;
            y=1ll<<y;
            int l=tin[x],r=tout[x];
            update(1,0,n-1,l,r,y);
        }
        else
        {
            int x;
            cin >> x;
            x--;
            int l=tin[x],r=tout[x];
            ll z=res(1,0,n-1,l,r);
            ll ans=0;
            dout << z <<" ";
            while(z>0)
            {
                ans+=z%2;
                z=z>>1;
            }
            cout << ans<<"\n";
            dout<<" "<<l<<" "<<r<<endl;
        }
    }




}
#define FILE "cowtour"
int main()
{

      //  freopen("laundro_matt.txt","r",stdin);
      //  freopen("output.txt","w",stdout);

        // freopen(FILE".in","r",stdin);
        //  freopen(FILE".out","w",stdout);
       if(!debug)
       {
           ios_base::sync_with_stdio(0);
            cin.tie(0);
            cout.tie(0);
       }
        int t=1;
        while(t--)
            solve();
        return 0;
}
