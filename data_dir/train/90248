#include <cstdio>
#include <cstring>
#include <iostream>
#include <vector>
using namespace std;

#define REP(i,n) for(int i=0;i<(n);i++)

int nextint()
{
	int t;
	scanf("%d",&t);
	return t;
}

int go[300001][26];
char t[300001];
int  p[300001];

vector<vector<pair<int,int> > > v;
char str[500001];
int res;

int mgo(int a, int b)
{
	a=go[a][b];
	if(!t[a])
		res++;
	return a;
}

void dfs(int cur, int pos)
{
	for(int i=0;i<v[cur].size();i++)
	{
		int to=v[cur][i].first;
		int start=v[cur][i].second;
		int npos=pos;
		while(str[start])
		{
			npos=mgo(npos,str[start]-'a');
			start++;
		}
		dfs(to,npos);
	}
}

int main()
{
	int n;
	scanf("%d",&n);
	v.resize(n);
	int top=0;
	for(int i=1;i<n;i++)
	{
		int p=nextint()-1;
		v[p].push_back(make_pair(i,top));
		scanf("%s",str+top);
		top+=strlen(str+top)+1;
	}
	scanf("%s",t);
	int m=strlen(t);
	for(int i=1;i<m;i++)
	{
		int j=p[i-1];
		while(j && t[j]!=t[i])
			j=p[j-1];
		if(t[j]==t[i])
			p[i]=j+1;
		else
			p[i]=0;
	}
	for(int j=0;j<=m;j++)
	{
		for(int k=0;k<26;k++)
		{
			if(t[j]==k+'a')
				go[j][k]=j+1;
			else
				go[j][k]=j?go[p[j-1]][k]:0;
		}
	}
	dfs(0,0);
	printf("%d\n",res);
}
