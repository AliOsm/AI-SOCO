// in the name of Allah

#include <bits/stdc++.h>
using namespace std;

#define endl '\n'
#define pb push_back
#define ll long long
#define double long double
#define sz(x) ((int) (x.size()))

#define fr first
#define se second

const ll mod = 998244353;

inline ll add(ll a, ll b) {
	a += b;
	if(a >= mod) return a - mod;
	return a;
}

inline ll mul(ll a, ll b) {
	a *= b;
	if(a >= mod) return a % mod;
	return a;
}

inline ll power(ll a, ll b) {
	ll p = 1;
	while(b) {
		if(b&1) p = mul(p, a);
		a = mul(a, a);
		b /= 2;
	}
	return p;
}

pair <ll, ll> norm(pair <ll, ll> a) {
	ll g = __gcd(a.fr, a.se);
	a.fr /= g;
	a.se /= g;
	return a;
}

int main() {
	ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

	int n;
	cin >> n;
	int x[n], y[n];
	for(int i=0; i<n; i++) {
		cin >> x[i] >> y[i];
	}

	set < pair < ll, pair <ll, ll> > > st;
	map < pair <ll, ll>, set < pair <ll, ll> > > mp;

	for(int i=0; i<n; i++) {
		for(int j=i+1; j<n; j++) {
			ll A = y[i] - y[j];
			ll B = x[j] - x[i];
			ll C = - A * x[i] - B * y[i];
			ll g = __gcd(C, __gcd(A, B));
			A /= g;
			B /= g;
			C /= g;
			if(A < 0) {
				A *= -1;
				B *= -1;
				C *= -1;
			}
			else if(A == 0 && B < 0) {
				B *= -1;
				C *= -1;
			}
			st.insert({A, {B, C}});

			if(x[i] == x[j]) mp[{0, 1}].insert({x[i], 0});
			else if(y[i] == y[j]) mp[{1, 0}].insert({y[i], 0});
			else {
				mp[norm({B, A})].insert(norm({C, A}));
			}
		}
	}
	ll all = sz(st);
	all = all * (all - 1) / 2;
	for(auto e : mp) {
		all -= sz(e.se) * (sz(e.se)-1) / 2;
	}
	cout << all << endl;

	return 0;
}