#include <bits/stdc++.h>
using namespace std;
typedef long long lld;
#define PB push_back
#define FF first
#define SS second

lld ten[20];
inline lld remK(lld n, int k){
	// 0-base
	return n/ten[k+1]*ten[k]+n%ten[k];
}
inline int count0(lld n){
	int ret = 0;
	while(n){
		ret+=(n%10==0);
		n/=10;
	}
	return ret;
}

int main(){
	ios_base::sync_with_stdio(0);cin.tie(0);
	lld n, k; cin>>n>>k;
	ten[0]=1;
	for(int i=1;ten[i-1]<=n or i<=k;i++) ten[i]=ten[i-1]*10;
	if(k > count0(n)){
		int ans = 0; bool flag = 0;
		while(n){
			ans++;
			if(n%10 == 0) flag=1;
			n/=10;
		}
		cout<<ans-flag<<'\n';
		return 0;
	}
	lld test = n; int ans = 0;
	while(test%ten[k]!=0){
		ans++;
		int bit; lld temp = test;
		for(bit=0;temp;bit++){
			if(temp%10!=0) break;
			temp/=10;
		}
		test = remK(test, bit);
	}
	cout<<ans<<'\n';
	return 0;
}