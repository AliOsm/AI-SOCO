//#include "stdafx.h"
#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <cmath>
#include <ctime>
#include <map>

using namespace std;

typedef long long ll;

const int NMax = 200001;
const int cntTree = 262145;
const double eps = 1e-9;
const double PI = 3.141592653589793238462;
const ll MD = (ll) 1e16;

#define Min(x,y) ((x) > (y) ? (y) : (x))
#define Max(x,y) ((x) > (y) ? (x) : (y))
#define Sqr(x) ((x) * (x))
#define Abs(x) ((x) < (0) ? (-(x)) : (x))

bool status[2001];
int a[2001];
int n;

void dfs(int v)
{
	status[v] = true;
	for (int u = 0;u <= Min(n,v);u++)
		if (2 * n - 1 - v >= n - u && status[v + n - 2 * u] == false) dfs(v + n - 2 * u);
}

int main()
{
    #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      freopen("output.txt", "w", stdout);
    #endif
	cin >> n;
	for (int i = 1;i <= 2 * n - 1;i++) cin >> a[i];
	int k = 0;
	for (int i = 1;i <= 2 * n - 1;i++) 
		if (a[i] < 0) k++;
	dfs(k);
	for (int i = 0;i <= 200;i++) 
		if (status[i] == true)
		{
			k = i;
			break;
		}
	int ans = 0;
	for (int i = 1;i <= 2 * n - 1;i++) a[i] = Abs(a[i]);
	sort(a + 1,a + 2 * n);
	for (int i = 1;i <= k;i++) ans -= a[i];
	for (int i = k + 1;i <= 2*n - 1;i++) ans += a[i];
	cout << ans << endl;

	return 0;
}