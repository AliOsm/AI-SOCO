#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
#include <bits/stdc++.h>
#define all(c) c.begin(),c.end()
#define ll long long
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define mod 1000000007
#define PI 3.1415926536
#define pll pair<ll, ll>
using namespace std;

typedef unsigned long long ull;

bool is_prime(ll n) {
    for (ll i = 2; i * i <= n; ++i) {
            if (n % i == 0) {
                  return false;
            }
    }
    return true;
}

inline ll getPow(ll a,ll b) {
    ll res = 1ll,tp = a;
    while (b){
       if (b&1ll) {
           res *= tp;
       }
       tp *= tp;
       res %= 8;
       tp %= 8;
       b >>= 1ll;
    }
    return res;
}
ll vec_mult(ll x1, ll y1, ll x2, ll y2, ll x3, ll y3) { return abs((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1));}
void ok() { puts("YES"); exit(0);}
void no() { puts("NO"); exit(0);}
inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}
// please, accepted!

int main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    multiset<ll> buf;
    ll n = nxt();
    ll k = nxt();
    for(int i = 0; i < n; i++) {
        buf.insert(nxt());
    }
    ll t = 0;
    for(int i = 0; i < k; i++) {
        while(buf.size() && *buf.begin() <= t) {
            buf.erase(buf.begin());
        }
        if(buf.size() == 0) {
            cout << 0 << endl;
        }
        else {
            cout << *buf.begin() - t << endl;
            t +=  *buf.begin() - t;
        }
    }
    return 0;

}
