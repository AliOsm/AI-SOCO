#include <cstdio>
#include <algorithm>
#include <vector>

const int kN = 1000000 + 5;

std::vector<int> edges[kN];
int n, m;
bool vis[kN];

int main() {
  scanf("%d%d", &n, &m);
  for (int i = 0; i < m; ++ i) {
    int a, b;
    scanf("%d%d", &a, &b); -- a; -- b;
    edges[a].emplace_back(b);
  }
  std::vector<int> candidates;
  for (int u = 0; u < n; ++ u) if (!vis[u]) {
    candidates.emplace_back(u);
    for (int v : edges[u])
      vis[v] = true;
  }
  std::fill(vis, vis + n, false);
  std::vector<int> result;
  std::reverse(candidates.begin(), candidates.end());
  for (int u : candidates) if (!vis[u]) {
    result.emplace_back(u);
    for (int v : edges[u])
      vis[v] = true;
  }
  printf("%d\n", result.size());
  for (int u : result)
    printf("%d\n", u + 1);
}
