#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#define REP(i, n) for (int i = 0; i < (n); i++)

using namespace std;
using ll = long long;

int main() {
  cin.tie(nullptr);
  ios::sync_with_stdio(false);
  int N, M, K;
  ll TA, TB;
  cin >> N >> M >> TA >> TB >> K;
  vector<ll> A(N), B(M);
  REP(i, N) cin >> A[i];
  REP(i, M) cin >> B[i];
  if (K >= N) {
    cout << -1 << '\n';
    return 0;
  }
  ll ans = -1e18;
  for (int i = 0; i <= K; i++) {
    int j = lower_bound(B.begin(), B.end(), A[i] + TA) - B.begin();
    if (j + K - i >= M) {
      cout << -1 << '\n';
      return 0;
    }
    ans = max(ans, B[j + K - i] + TB);
  }
  cout << ans << '\n';
}
