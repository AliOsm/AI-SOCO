#include <bits/stdc++.h>
using namespace std;
vector<long long> powers;
unordered_map<int,vector<int> > place;
int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    long long num = 1;
    for(int i = 1;i <= 55;i++)
        num *= 2,powers.push_back(num);
    int n;
    cin >> n;
    vector<int> A(n);
    for(int i = 0;i < n;i++)
        scanf("%d",&A[i]),place[A[i]].push_back(i);
    long long pairs = 0;
    for(int i = 0;i < n;i++)
    {
        for(int j = 0;j < powers.size();j++)
        {
            long long toFind = powers[j] - A[i];
            vector<int>::iterator it = upper_bound(place[toFind].begin(),place[toFind].end(),i);
            pairs += place[toFind].end() - it;
        }
    }
    cout << pairs;
}

