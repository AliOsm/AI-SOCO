#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define N 1010

int n, m, k;
int ans[N * N];
char G[N][N];
int compID[N][N];
int vis[N][N];
int dx[4] = {0, 0, -1, 1};
int dy[4] = {-1, 1, 0, 0};
int comp = 0;
void dfs(int x, int y){
    vis[x][y] = 1;
    compID[x][y] = comp;
    for(int i = 0; i < 4; i++){
        int u = x + dx[i];
        int v = y + dy[i];
        if(u <= 0 || u > n || v <= 0 || v > m) continue;
        if(vis[u][v]) continue;
        if(G[u][v] == '*'){
            ans[comp]++;
            continue;
        }
        dfs(u, v);
    }
}

int main() {
//    freopen("in.in", "r", stdin);
//    freopen("out.out", "w", stdout);
    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n >> m >> k;
    for(int i = 1; i <= n; i++) for(int j = 1; j <= m; j++) cin >> G[i][j];
    for(int i = 1; i <= n; i++) for(int j = 1; j <= m; j++){
        if(vis[i][j]) continue;
        if(G[i][j] == '*') continue;
        comp++;
        dfs(i, j);
    }
    while(k--){
        int x, y; cin >> x >> y;
        cout << ans[compID[x][y]] << endl;
    }
    
    return 0;
}