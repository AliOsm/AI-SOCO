#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>


using namespace std;
using namespace __gnu_pbds;

#define rep(i,a,n) for (int i=(a);i<(n);i++)
#define per(i,a,n) for (int i=(n)-1;i>=(a);i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define SZ(x) (int)x.size()

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<int,int> pii;
typedef pair<ll,ll>pll;
typedef vector<pii> vpii;

template<typename T>
T getint() {
    T x=0,p=1;
    char ch;
    do{ch=getchar();}while(ch <= ' ');
    if(ch=='-')p=-1,ch=getchar();
    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();
    return x*p;
}

mt19937 gen(chrono::system_clock::now().time_since_epoch().count());

template<typename T1,typename T2>bool umin(T1 &x,const T2&y){if(x>y)return x=y,true;return false;}
template<typename T1,typename T2>bool umax(T1 &x,const T2&y){if(x<y)return x=y,true;return false;}

const int maxn=(int)1e6+10;
const int inf=(int)1e9+5;
const int mod=(int)1e9+7;
const ll llinf=(ll)1e18+5;
const ld pi=acos(-1.0);

int w[maxn];
int last[maxn];
int n,m,q;
int a[11][100100];
int timer;
int get(int x){
    if(x==w[x])return x;
    return w[x]=get(w[x]);
}

struct node {
     int cnt;
     int le[11],ri[11];
     node(){}
     node(node a,node b,int c){
        ++timer;
        cnt=a.cnt+b.cnt;
        rep(i,1,n+1){
            w[a.ri[i]]=a.ri[i];
            w[b.le[i]]=b.le[i];
            last[a.ri[i]]=timer;
            last[b.le[i]]=timer;
        }
        rep(i,1,n+1){
            if(::a[i][c]==::a[i][c+1]){
                int x=get(a.ri[i]);
                int y=get(b.le[i]);
                if(x==y)continue;
                cnt--;
                w[x]=y;
            }
        }
        for(int i=1;i<=n;++i){
            if(last[a.le[i]]==timer)le[i]=get(a.le[i]);
            else le[i]=a.le[i];
            if(last[b.ri[i]]==timer)ri[i]=get(b.ri[i]);
            else ri[i]=b.ri[i];
        }
     }
};

node t[400500];
int cnt;

void build(int v,int tl,int tr){
    if(tl==tr){
        t[v].cnt=n;
        for(int i=1;i<=n;++i){
            t[v].le[i]=t[v].ri[i]=++cnt;
        }
        rep(i,1,n)if(a[i][tl]==a[i+1][tl]){
            t[v].le[i+1]=t[v].ri[i+1]=t[v].le[i];
            t[v].cnt--;
        }
        return;
    }
    int tm=(tl+tr)/2;
    build(v+v,tl,tm);
    build(v+v+1,tm+1,tr);
    t[v]=node(t[v+v],t[v+v+1],tm);
}

node get(int v,int l,int r,int tl,int tr){
    if(l<=tl&&tr<=r)return t[v];
    int tm=(tl+tr)/2;
    if(r<=tm)return get(v+v,l,r,tl,tm);
    if(l>tm)return get(v+v+1,l,r,tm+1,tr);
    return node(get(v+v,l,r,tl,tm),get(v+v+1,l,r,tm+1,tr),tm);
}


int main() {
//    freopen("input.txt","r",stdin);
//    freopen("output.txt","w",stdout);

    n=getint<int>();
    m=getint<int>();
    q=getint<int>();
    rep(i,1,n+1)rep(j,1,m+1)a[i][j]=getint<int>();

    build(1,1,m);
    while(q--){
        int l=getint<int>();
        int r=getint<int>();
        printf("%d\n",get(1,l,r,1,m).cnt);
    }
    return 0;
}
