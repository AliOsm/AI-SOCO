#include<bits/stdc++.h>
#define MOD 1000000007
#define ll long long
#define mp make_pair
#define pb push_back 
using namespace std;
string A, B, t[101];
int lcp[100010], len[100010], lenf[100010], lenb[100010], temp[100010];
void callcp(){
	int i=1,j=0;
	while(i<A.length()){
		if(A[i] == A[j]){
			lcp[i] = j+1;
			j++;
			i++;
		}
		else{
			if(!j){
				lcp[i] =0;
				i++;
			}
			else{
				j=lcp[j-1];
			}
		}
	}
	for(int i = A.length(); i > 0; i--)
		lcp[i] = lcp[i-1];
	lcp[0]=-1;
}
void kmp(){
	int i=0,j=0;
	while(i<B.length()){
		while(A[j]!=B[i]&&j!=-1){
			j=lcp[j];
		}
		j++;
		len[i - j + 1] = j;
		if(j==A.length()){
			//cout<<"Found at index "<<i-j+1<<"\n";
			j=lcp[j];
		}
		i++;
	}
}
int main(){
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	string s;
	cin >> s;
	int m;
	cin >> m;
	int ans = 0;
	for(int p = 0; p < m; p++){
		cin >> t[p];
		if(t[p].length() == 1){
			continue;
		}
		A = t[p];
		B = s;
		memset(len, 0, sizeof(len));
		memset(lcp, 0, sizeof(lcp));
		callcp();
		kmp();
		
		//
		//for(int i = 0; i < B.length(); i++)
		//	cout << len[i] << " ";
		// cout << '\n';
		
		for(int i = 0; i < B.length(); i++)
			lenf[i] = len[i];
		
		string x = s;
		string y = t[p];
		reverse(x.begin(), x.end());
		reverse(y.begin(), y.end());
		A = y;
		B = x;
		memset(len, 0, sizeof(len));
		memset(lcp, 0, sizeof(lcp));
		callcp();
		kmp();
		memset(temp, 0, sizeof(temp));
		/*
		for(int i = 0; i < B.length(); i++)
			cout << len[i] <<  " ";
		cout << '\n';
		*/
		for(int i = 0; i < B.length(); i++){
			temp[i] = len[i];
		}
		reverse(temp, temp + B.length());
		/*
		for(int i = 0; i < B.length(); i++)
			cout << temp[i] << " ";
		cout << '\n';
		*/
		for(int i = B.length() - 2; i >= 0; i--){
			temp[i] = max(temp[i + 1], temp[i]);
		}
		int mk = 0;

		for(int i = 0; i < B.length(); i++){
			if(lenf[i] + temp[i + t[p].length() - 1] >= t[p].length()){
				//cerr << p + 1 << '\n';
				//cerr << p + 1 << " " <<  i << " " << lenf[i] << " " << temp[i + lenf[i]] << '\n';
				mk = 1;
				break;
			}
		}
		ans += mk;

	}
	cout << ans << '\n';
}