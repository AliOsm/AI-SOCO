#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, pll> p3l;
typedef pair<char, ll> pcl;
typedef vector<char> vc;
typedef vector<ll> vll;
typedef vector<pll> vpll;
typedef vector<p3l> vp3l;
typedef vector<vll> vvll;
typedef vector<ld> vld;

const ll MOD = (int) 998244353;

#define fan(i, a, n) for(ll i=a; i<n; ++i)
#define boost ios_base::sync_with_stdio(0);cout.tie(0);cin.tie(0)
#define fna(i, n, a) for(ll i=n-1; i>=a; --i)
#define fit(it, x) for(auto &it:x)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define pb push_back
#define rs resize
#define fst first
#define snd second
#define sz size
#define ins insert
#define ce cout << "\n"

ld sqr(ld a) {
  return a * a;
}
const int N = 500002;
int t[N];

int get(int i){
  int sum = 0;
  for(;i >= 0;i = (i & (i + 1)) - 1){
    sum += t[i];
  }
  return sum;
}

void inc(int i){
  for(;i < N;i = (i | (i + 1))){
    t[i]++;
  }
}

int get(int l,int r){
  return get(r) - get(l - 1);
}
int dp[N];
int main() {
  int n,k,d;
  cin >> n >> k >> d;
  vll a(n);
  fan(i,0,n){
    cin >> a[i];
  }
  sort(all(a));
  dp[0] = 1;
  inc(0);
  int l = 0;
  fan(i,0,n){
    while(l < i && (a[i] - a[l] > d))
      ++l;
    dp[i + 1] = (get(l,i - k + 1) >= 1);
    if(dp[i + 1])inc(i + 1);
  }
  if(dp[n])cout << "YES";else cout << "NO";
  return 0;
}