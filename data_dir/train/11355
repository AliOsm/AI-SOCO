#include "bits/stdc++.h"
using namespace std;

vector < int > v[405], g[405];
queue < int > q;
bool vis[405];
map < pair < int, int >, bool > mp;
int n, dist[405];

int bfs(vector < int > v[405]) {
    fill(dist, dist + 403, 10000);
    memset(vis, 0, sizeof(vis));
    q.push(1);    
    dist[1] = 0;
    vis[1] = 1;
    while (!q.empty()) {
        int cur = q.front();
        q.pop();
        for (auto i : v[cur]) {
            if (!vis[i]) {
                vis[i] = 1;
                q.push(i);
                dist[i] = 1 + dist[cur];
            }
        }
    }
    return (dist[n] == 10000 ? -1 : dist[n]);
}

int main(){
    int m, l, r;
    cin >> n >> m;
    for (int i = 0; i < m; ++i) {
        cin >> l >> r;
        v[l].push_back(r);
        v[r].push_back(l);
        if (l > r) {
            swap(l, r);
        }
        mp[{l, r}] += 1;
    }
    for (int i = 1; i < n; ++i) {
        for (int j = i + 1; j <= n; ++j) {
            if (!mp.count(make_pair(i, j))) {
              g[i].push_back(j); 
              g[j].push_back(i);
            }
        }
    }
    int x = bfs(v), y = bfs(g);
    if (x == -1 || y == -1) {
        cout << -1;
    }
    else {
        cout << max(x, y);
    }
}
