#include <stdio.h>
#include <math.h>
#include <string.h>
#include <limits.h>
#include <stdlib.h>
#include <algorithm>
#include <iostream>
#include <utility>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>

using namespace std;

#define long long long
#define fi first
#define se second
typedef pair<int,int> ii;

const int INF = 1e9;
int ans[5003];
int A[20003], B[20003];
int mn[5003];
int hit[5003];

int main()
{
	// ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	// freopen("input.in", "r", stdin);

	int n, m;
	scanf("%d %d", &n, &m);
	for(int i = 0; i < m; i++)
	{
		scanf("%d %d", &A[i], &B[i]);
		A[i] %= n;
		B[i] %= n;
	}

	for(int i = 0; i < n; i++)
	{
		
		// printf("I : %d\n", i);
		memset(hit, 0, sizeof hit);
		for(int j = 0; j < n; j++)
			mn[j] = INF;

		for(int j = 0; j < m; j++)
		{
			// printf("	%d %d\n", A[j], B[j]);
			int cost = (A[j] > B[j])? B[j]+n : B[j];
			hit[A[j]]++;
			mn[A[j]] = min(cost, mn[A[j]]);
		}

		for(int j = 0; j < n; j++)
		{
			if(hit[j])
				ans[i] = max(ans[i], (hit[j]-1)*n + mn[j]);
		}

		for(int j = 0; j < m; j++)
		{
			B[j] = (B[j]-1+n)%n;
			A[j] = (A[j]-1+n)%n;
		}
	}
	for(int i = 1; i <= n; i++)
		printf("%d%c", ans[i%n], (i == n)? '\n' : ' ');
}








