
// In the name of God

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define Size(x) ((int)(x).size())
typedef long long ll;
typedef long double ld;
typedef pair<int , int>pii;
typedef complex<double>point;
const int INF = 1e9 + 10;

namespace fevrie{
	const int MX = 1<<21 , LG = 21 , MOD = 17 * 7 * (1<<23) + 1;

	int a[MX] , b[MX];
	int bpw(int a,int b){
		int cur = a , ret = 1;
		while(b){
			if(b&1) ret = 1ll * ret * cur % MOD;
			cur = 1ll * cur * cur % MOD;
			b>>=1;
		}
		return ret;
	}

	void ntt(int a[] , int inv){
		for(int i=0;i<MX;++i){
			int j = 0;
			for(int l=0;l<LG;++l)
				if(i&1<<l) j |= 1<<(LG-l-1);
			if(i < j) swap(a[i] , a[j]);
		}
		for(int len=2;len<=MX;len*=2){
			int wn = bpw(3 , (MOD-1)/len);
			if(inv == -1) wn = bpw(wn , MOD-2);
			
			for(int i=0;i<MX;i+=len){
				int cur = 1;
				for(int j=0;j<len/2;++j){
					int X = a[i+j] + 1ll * cur * a[i+j+len/2] % MOD;
					int Y = a[i+j] + MOD - 1ll * cur * a[i+j+len/2] % MOD;
					if(X >= MOD) X -= MOD;
					if(Y >= MOD) Y -= MOD;
					a[i+j] = X , a[i+j+len/2] = Y;
					cur = 1ll * cur * wn % MOD;
				}
			}
		}
		if(inv == -1)
			for(int i=0;i<MX;++i) a[i] = 1ll * a[i] * bpw(MX , MOD-2) % MOD;
	}
	void mul(int *A,int *B,int n,int *C){
		fill(a , a + MX , 0);
		fill(b , b + MX , 0);
		for(int i=0;i<n;++i)
			a[i] = A[i] , b[i] = B[i];
		ntt(a , 1);
		ntt(b , 1);
		for(int i=0;i<MX;++i) a[i] = 1ll * a[i] *  b[i] % MOD;
		ntt(a , -1);
		for(int i=0;i<n;++i) C[i] = a[i];
	}
}
const int MN = 1e6 + 10;

int n , m , mark[MN] , res[MN];

int main(){
	ios_base :: sync_with_stdio(false) , cin.tie(0) , cout.tie(0);
	cin >> n >> m;
	for(int i=0;i<n;++i){
		int x;cin>>x;
		mark[x] = 1;
	}
	fevrie::mul(mark , mark , m+1 , res);
	vector<int>ans;
	for(int i=0;i<=m;++i){
		if(res[i] > 0 && !mark[i]) return cout << "NO\n" , 0;
		if(!res[i] && mark[i]) ans.pb(i);
	}
	cout << "YES\n" << Size(ans) << '\n';
	for(auto x:ans) cout << x << ' ';
	cout << '\n';
	return 0;
}

