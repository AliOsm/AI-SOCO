#include <bits/stdc++.h>

#ifdef DEBUG
#define eprintf(...) fprintf(stderr, __VA_ARGS__)
#else
#define eprintf(...)
#endif

using namespace std;
using ll = long long;

const int N = 200005;

int dn[N][20];
int v[N];

int fn(int i, int j){
	if(j == 0) return v[i];
	if(~dn[i][j]) return dn[i][j];
	return dn[i][j] = max(fn(i, j-1), fn(i + (1 << (j-1)), j-1));
}

int lg(int x) {
	return 31 - __builtin_clz(x);
}

int getmn(int l, int r){ // [l, r]
	int lz = lg(r - l + 1);
	return max(fn(l, lz), fn(r - (1 << lz) + 1, lz));
}

int n;
int a[N];
int last[N];

int main() {
	memset(dn, -1, sizeof dn);

	scanf("%d", &n);

	for(int i = 1; i <= n; i++) {
		scanf("%d", a + i);
	}

	int q;
	scanf("%d", &q);

	for(int i = 1; i <= q; i++) {
		int t;
		scanf("%d", &t);
		if(t == 1) {
			int p, x;
			scanf("%d %d", &p, &x);
			last[p] = i;
			a[p] = x;
		}
		else {
			scanf("%d", v + i);
		}
	}

	for(int i = 1; i <= n; i++) {
		if(last[i] + 1 <= q) {
			a[i] = max(a[i], getmn(last[i] + 1, q));
		}
		printf("%d%c", a[i], " \n"[i == n]);
	}
}
