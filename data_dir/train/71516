#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<cstring>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<cstdlib>
#include<complex>
#include<list>
#include<cassert>
#include<iomanip>
#include<limits>
#include<fstream>
#include<unordered_map>

using namespace std;

//#define double long double

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
typedef pair<int,ii> iii2;
typedef pair<ii,ii> iiii;
typedef vector<int> vi;
long long mod = 1000000007;
long long large = 2000000000000000000LL;


vector<double> a;
vector<int> pa;



vector<vector<int> > adj;
void dfs(int u,int parent){
	pa[u] = parent;
	for(int j=0;j<(int)adj[u].size();j++){
		int v = adj[u][j];
		if(v!=parent){
			dfs(v,u);
		}
	}
}



int main(){

	int n;
	cin>>n;
	a.assign(n,0);
	for(int i=0;i<n;i++) scanf("%lf",&a[i]);
	adj.assign(n,vector<int>());
	for(int i=0;i<n-1;i++){
		int x,y;
		scanf("%d%d",&x,&y);
		adj[x].push_back(y);
		adj[y].push_back(x);
	}

	pa.assign(n,-1);
	dfs(0,-1);


	vector<double> sum(n,0);
	for(int i=1;i<n;i++){
		sum[pa[i]]+=1.0-a[i];
	}


	int q;
	cin>>q;
	double tot = 0;
	for(int i=0;i<n;i++) tot+=1.0-a[i];
	for(int i=0;i<n;i++) if(pa[i]!=-1) tot-=(1.0-a[i])*(1.0-a[pa[i]]);
	cout<<setprecision(5)<<fixed;
	while(q--){
		int x;
		double y;
		scanf("%d%lf",&x,&y);
		tot-=1.0-a[x];
		tot+=(1.0-a[x])*sum[x];
		if(pa[x]!=-1){
			tot+=(1.0-a[pa[x]])*sum[pa[x]];
			sum[pa[x]]-=1.0-a[x];
		}
		a[x] = y;
		tot+=1.0-a[x];
		tot-=(1.0-a[x])*sum[x];
		if(pa[x]!=-1){
			sum[pa[x]]+=1.0-a[x];
			tot-=(1.0-a[pa[x]])*sum[pa[x]];
		}
		printf("%.5lf\n",tot);

	}



    return 0;
}
