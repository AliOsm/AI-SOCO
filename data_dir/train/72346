#include <bits/stdc++.h>
using namespace std;
#define int long long
typedef long long ll;

int32_t main() {
    //ios::sync_with_stdio(false);
    //cin.tie(0);
    //cout.tie(0);
    int n, m;
    cin >> n >> m;
    vector<int> remaining(n);
    for(int i = 0; i < n; ++i) {
        cin >> remaining[i];
    }
    vector<int> cost(n);
    set<pair<int, int>> cheapest;
    for(int i = 0; i < n; ++i) {
        cin >> cost[i];
        cheapest.insert({cost[i], i});
    }
    int res = 0;
    for(int i = 0; i < m; ++i) {
        int kind, amount;
        cin >> kind >> amount;
        //cout << "here: " << kind << ' ' << amount << '\n';
        kind--;
        int take = min(amount, remaining[kind]);
        int currCost = cost[kind]*take;
        amount -= take;
        remaining[kind] -= take;
        if(remaining[kind] == 0) cheapest.erase({cost[kind], kind});
        //if(cheapest.empty()) break;
        while(amount > 0 && cheapest.size()) {
            kind = cheapest.begin()->second;
            take = min(amount, remaining[kind]);
            currCost += cost[kind] * take;
            //cout << kind << ' ' << remaining[kind] << '\n';
            //cout << cheapest.size() << '\n';
            amount -= take;
            remaining[kind] -= take;
            if(remaining[kind] == 0) cheapest.erase({cost[kind], kind});
        }
        if(amount > 0) currCost = 0;
        cout << currCost << '\n';
    }
    //cout << res << '\n';
    return 0;
}























    
