#include<bits/stdc++.h>
#define ll long long
#define mod 1000000007ll
using namespace std;
char str[502][502];
ll mem[2][502][502];
int dirx1[]= {0, 1}, diry1[]= {1, 0};
int dirx2[]= {0, -1}, diry2[]= {-1, 0};
int main()
{
    int n, m;
    scanf("%d %d", &n, &m);
    for(int i=1; i<=n; i++)
    scanf("%s", str[i]+1);
    int g= (n+m-2)>>1;
    bool f= 0;
    for(int i=1; i<=n; i++)
    for(int j=i; j<=n; j++)
    {
        int x1= i, x2= j;
        int y1= 1+(g-(i-1));
        int y2= m-(g-(n-j));
        mem[f][x1][x2]= (y1>=1 && y1<=m && y2>=1 && y2<=m && y1<=y2 && str[x1][y1]==str[x2][y2]);
    }
    for(int k=g-1; k>=0; k--)
    {
        f^= 1;
        memset(mem[f], 0, sizeof mem[f]);
        for(int i=1; i<=n; i++)
        for(int j=i; j<=n; j++)
        {
            int x1= i, x2= j;
            int y1= 1+(k-(i-1));
            int y2= m-(k-(n-j));
            if(y1>=1 && y1<=m && y2>=1 && y2<=m && y1<=y2 && str[x1][y1]==str[x2][y2])
            {
                for(int p=0; p<2; p++)
                for(int q=0; q<2; q++)
                {
                    int ax= x1+dirx1[p];
                    int ay= y1+diry1[p];
                    int bx= x2+dirx2[q];
                    int by= y2+diry2[q];
                    if(ax>=1 && ax<=n && bx>=1 && bx<=n && ax<=bx && ay>=1 && ay<=m && by>=1 && by<=m && ay<=by)
                    mem[f][x1][x2]+= mem[f^1][ax][bx], mem[f][x1][x2]%= mod;
                }
            }
        }
    }
    printf("%lld\n", mem[f][1][n]);
    return 0;
}
