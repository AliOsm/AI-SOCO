#pragma GCC optimize ("O3")
#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define OO 4e18
#define oo 1e9
#define yalla ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define sz  100005
#define re return
#define F first
#define S second
#define pll pair<ll,ll>
#define mod  1000000007
#define pi acos(-1)
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int,null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
string s,t;
bool chess[10][10];
int r1,r2,c1,c2,ans;
int tox[]={2,2,-2,-2,1,-1,-1,1};
int toy[]={1,-1,-1,1,2,2,-2,-2};
///
bool valid(int r,int c)
{
 re(r>=1&&c>=1&&r<=8&&c<=8);
}
int main()
{
   yalla;
   cin>>s>>t;
   r1=s[0]-'a'+1,c1=s[1]-'0';
   r2=t[0]-'a'+1,c2=t[1]-'0';
   ///rook
   for(int i=1;i<=8;i++)
    chess[i][c1]=chess[r1][i]=1;
   ///knight
   chess[r2][c2]=1;
   for(int i=0;i<8;i++)
   {int r=r2+tox[i];
    int c=c2+toy[i];
    if(valid(r,c))
     chess[r][c]=1;
   }
   ///ans
   for(int i=1;i<=8;i++)
    for(int y=1;y<=8;y++)
     {if(!chess[i][y])
      {bool ok=1;
        for(int j=0;j<8;j++)
        {int r=i+tox[j];
         int c=y+toy[j];
         if(valid(r,c)&&((r==r1&&c==c1)||(r==r2&&c==c2)) )
            ok=0;
        }
       ans+=ok;
      }
     }
   cout<<ans<<endl;
  re 0;
}
