#include<bits/stdc++.h>
using namespace std;

struct team{
    string name;
    int points,gof,goe;
    team(){}
    team(string n,int p,int gf,int ge):name(n),points(p),gof(gf),goe(ge){}
    bool operator < (const team a)const{
        if(a.points < points){return true;}
        else if(a.points==points){
            if(a.gof - a.goe < gof-goe){return true;}
            else if(a.gof - a.goe == gof-goe){
                if(a.gof < gof)return true;
                else if(a.gof==gof){

                    if(a.name < name )return true;
                }


            }
        }
        return false;
    }

};

template <class T>
int toI(T t){stringstream ss;ss<<t;int r;ss>>r;return r;}

int main(){
    int n,g1,g2;
    string line;
    getline(cin,line);
    n = toI(line);
    team teams[n];

    for(int i=0;i<n;i++){getline(cin,line);teams[i]=team(line,0,0,0);}
    int c = (n*(n-1))/2;

    for(int i=0;i<c;i++){
        getline(cin,line);
        for(int j=0;j<line.size();j++){
            if(line[j]=='-' or line[j]==':')line[j] =' ';
        }
        stringstream ss;ss<<line;
        string A,B;
        int g1,g2;
        ss>>A>>B>>g1>>g2;

        if(g1>g2){
            for(int j=0;j<n;j++){
                if(teams[j].name == A){
                    teams[j].points+=3;teams[j].gof += g1;teams[j].goe += g2;
                }
                if(teams[j].name == B){
                    teams[j].points+=0;teams[j].gof += g2;teams[j].goe += g1;
                }

            }
        }else if(g1 < g2){
            for(int j=0;j<n;j++){
                if(teams[j].name == B){
                    teams[j].points+=3;teams[j].gof += g2;teams[j].goe += g1;
                }
                if(teams[j].name == A){
                    teams[j].points+=0;teams[j].gof += g1;teams[j].goe += g2;
                }

            }

        }else{
            for(int j=0;j<n;j++){
                if(teams[j].name == A){
                    teams[j].points+=1;teams[j].gof += g1;teams[j].goe += g2;
                }
                if(teams[j].name == B){
                    teams[j].points+=1;teams[j].gof += g2;teams[j].goe += g1;
                }

            }
        }
        //cout<<A<<" :: "<<B<<" :: "<<g1<<" :: "<<g2<<endl;
    }
    sort(teams+0,teams+n);
    vector<string> sol;
    for(int i=0;i<n/2;i++){
        sol.push_back(teams[i].name);
        //cout<<teams[i].name <<" "<<teams[i].points<<" : "<<teams[i].gof<<" : "<<teams[i].goe<<endl;
    }
    sort(sol.begin(),sol.end());
    for(int i=0;i<sol.size();i++)cout<<sol[i]<<endl;
}
