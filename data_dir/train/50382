#include <bits/stdc++.h>

using namespace std;

#define maxn 200010
#define maxa 1000010
#define S 450
typedef long long ll;

struct query {
  int l, r, idx;
}q[maxn];

bool cmp(query A, query B) {
  if (A.l/S != B.l/S) return A.l/S < B.l/S;
  return A.r < B.r;
}

ll arr[maxn], ans[maxn], mp[maxa], ret;

void add(int id) {
  ret = ret - mp[arr[id]] * mp[arr[id]] * arr[id];
  mp[arr[id]]++;
  ret = ret + mp[arr[id]] * mp[arr[id]] * arr[id];
}

void remove(int id) {
  ret = ret - mp[arr[id]] * mp[arr[id]] * arr[id];
  mp[arr[id]]--;
  ret = ret + mp[arr[id]] * mp[arr[id]] * arr[id];
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int n, qq;
  cin >> n >> qq;
  for (int i = 1; i <= n; ++i) cin >> arr[i];
  for (int i = 1; i <= qq; ++i) {
    cin >> q[i].l >> q[i].r;
    q[i].idx = i;
  }
  sort(q + 1, q + 1 + qq, cmp);
  int curl = 1, curr = 1;
  for (int i = 1; i <= qq; ++i) {
    int lft = q[i].l, rgt = q[i].r, id = q[i].idx;
    while (curl < lft) remove(curl++);
    while (curl > lft) add(--curl);
    while (curr <= rgt) add(curr++);
    while (curr > rgt + 1) remove(--curr);
    ans[id] = ret;
  }
  for (int i = 1; i <= qq; ++i) cout << ans[i] << '\n';
}
