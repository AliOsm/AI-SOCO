//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define vi vector<int>

const int maxn=(int)(2e5+5);
const ll mod=(ll)(998244353);
int a[maxn];
map<int,int> m1;
int dp[maxn],pre[maxn];

int main()
{

    int n,m,k;cin>>n>>m>>k;

    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }

    sort(a,a+n);vector<int> v;

    for(int i=0;i<k;i++)
    {
        v.pb(a[i]);
    }

    vector< pii > vec;

    for(int i=0;i<m;i++)
    {
        int yi,xi;

        cin>>xi>>yi;

        if(m1[xi])
        {
            m1[xi]=max(m1[xi],yi);
        }

        else
        {
            m1[xi]=yi;
        }
    }

    for(auto x:m1)
    {
        vec.pb({x.second,x.first});
    }

    pre[0]=v[0];

    for(int i=1;i<v.size();i++)
    {
        pre[i]=pre[i-1]+v[i];
    }

    fill(dp,dp+maxn,INT_MAX);

    for(int i=0;i<v.size();i++)
    {
        dp[i]=min(dp[i],pre[i]);

        for(int j=0;j<vec.size();j++)
        {
            if(i+1>=vec[j].second)
            {
                int diff=vec[j].second-vec[j].first;

                int add1=i-vec[j].second<0?0:dp[i-vec[j].second],add2=pre[i]-(i-diff<0?0:pre[i-diff]);

                dp[i]=min(dp[i],add1+add2);
            }
        }
    }

    cout<<dp[v.size()-1]<<endl;


    return 0;
}
