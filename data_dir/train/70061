// Charan Sriramula (@msd_007 && @furious__)

#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll N=1e5+5;
const ll INF=2e18;
const ll mod=1e9+7;

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define OPT ios_base::sync_with_stdio(false);cin.tie(NULL);

ll n,m,a[105],dp[102][50][5055];

ll F(ll i,ll odd,ll even,ll sum,ll cnt)
{
	ll maxi=0;
	if(sum>m){return cnt-1;}
	if(sum==m){return cnt;}
	if(i==n){return cnt;}
	if(dp[i][cnt][sum]!=-1){return dp[i][cnt][sum];}
	if(a[i]%2)
	{
		if(odd+1==even)
		{
			maxi=max(maxi,F(i+1,odd+1,even,sum,cnt));
			maxi=max(maxi,F(i+1,0,0,sum+abs(a[i]-a[i+1]),cnt+1));
		}
		else{maxi=max(maxi,F(i+1,odd+1,even,sum,cnt));}
	}
	else
	{
		if(even+1==odd)
		{
			maxi=max(maxi,F(i+1,odd,even+1,sum,cnt));
			maxi=max(maxi,F(i+1,0,0,sum+abs(a[i]-a[i+1]),cnt+1));
		}
		else{maxi=max(maxi,F(i+1,odd,even+1,sum,cnt));}
	}
	return dp[i][cnt][sum]=maxi;
}

int main()
{
	cin>>n>>m;
	memset(dp,-1,sizeof(dp));
	for(ll i=1;i<=n;i++){cin>>a[i];}
	cout<<F(1,0,0,0,0)<<endl;
}