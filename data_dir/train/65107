
#include <iostream>
#include <stack>
#include <string>
#include <vector>

using std::vector;
using std::string;
using std::stack;
using std::cin;
using std::cout;

int main () {
 int n;
 cin >> n;
 string answer;
 answer.reserve(n + n);
 vector<int> open(n + n);
 vector<int> left(n);
 vector<int> right(n);
 const char op_b = '(';
 const char cl_b = ')'; 
 const string impossible = "IMPOSSIBLE"; 

 stack<int> st;
 for (int i = 0; i < n; ++i) {
  cin >> left[i];
  cin >> right[i];
  open[i] = answer.size();
  st.push(i);
  answer += op_b;
  while (!st.empty() && open[st.top()] + left[st.top()] <= answer.size()) {
   if (open[st.top()] + right[st.top()] < answer.size()) {
    cout << impossible;
    return 0;
   }
   answer += cl_b;
   st.pop(); 
  }
 }

 if (!st.empty()) {
  cout << impossible;
 } else {
  cout << answer;
 }
 return 0;
}