#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <cassert>
// ss
using namespace std;
int dx[8]={-1,-1,-1,0,1,1, 1, 0};
int dy[8]={-1, 0, 1,1,1,0,-1,-1};
/*
 -- Valid
 -- const (10^9>sz)
 -- array index
 -- less or more , check if
 -- even or odd
 */

const int N=500005;
int n ,z,s;
int a[N];
int ans;
int m;
vector<int> v;
int main(){
    cin>>n>>s;
    s--;
    for(int i=0;i<n;i++){
        cin>>a[i];
        if(!a[i]&&i!=s){z++;}
        if(a[i]&&i!=s){
            v.push_back(a[i]);
        }
    }
    if(a[s]){ans++;a[s]=0;}
    m=0;
    if(v.size()){
    sort(v.begin(),v.end());
    }
    int pos=0;
    ans+=z;
    while(1){
        if(pos>=v.size()){break;}
        int ww=v[pos];
        while(z&&ww>m+1){z--;m++;}
        while(ww>m+1&&pos<v.size()){
            v.pop_back();
            ans++;
            m++;
        }
            m=max(m,ww);
        pos++;
    }
    cout<<ans<<endl;
    return 0;//rev Ab steps
}