#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

typedef long long int64;
typedef long double real;

#ifdef DEBUG
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#else
#define eprintf(...) assert (true)
#endif

#ifdef WIN32
#define INT64 "%I64d"
#else
#define INT64 "%lld"
#endif

using namespace std;

const int MaxN = 10004, NA = -1, MaxC = 0x3F3F3F3F;

int dx [MaxN], dy [MaxN];
int k, m, n;

int main (void)
{
 int i, x, y, dx, dy, cur;
 int64 res;

 while (scanf (" %d %d", &n, &m) != EOF)
 {
  scanf (" %d %d", &x, &y);
  scanf (" %d", &k);

  res = 0;
  for (i = 0; i < k; i++)
  {
   scanf (" %d %d", &dx, &dy);
   cur = MaxC;
   if (dx > 0)
    cur = min (cur, (n - x) / +dx);
   if (dx < 0)
    cur = min (cur, (x - 1) / -dx);
   if (dy > 0)
    cur = min (cur, (m - y) / +dy);
   if (dy < 0)
    cur = min (cur, (y - 1) / -dy);
   res += cur;
   x += cur * dx;
   y += cur * dy;
  }

  printf (INT64 "\n", res);
 }

 return 0;
}
