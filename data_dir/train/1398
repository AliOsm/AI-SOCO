#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define mod 1000000007LL
#define IN freopen("pieaters.in","r",stdin)
#define OUT freopen("pieaters.out","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 2

using namespace __gnu_pbds;
using namespace std ;

typedef tree< i64, null_type, less<i64>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef pair<i64, i64> pii;

#define maxn 1000005
#define INF 2000000000
#define alpha 26

int isTaken[105] ;
string ara[105] , bara[105] ;

int main()
{
    int n , m ;

//    scanf("%d %d",&n,&m) ;

    cin>>n>>m ;

    for(int i=1 ; i<=n ; i++)
    {
        cin>>ara[i] ;
        bara[i] = ara[i] ;
        reverse( bara[i].begin() , bara[i].end() ) ;
    }

    string Left = "" , Right = "" ;

    for(int i=1 ; i<=n ; i++)
    {
        for(int j=i-1 ; j>=1 ; j--)
        {
            if( ara[i]==bara[j] )
            {
                isTaken[i] = 1 ; isTaken[j] = 1 ;
                Left += ara[i] ;
                Right += ara[i] ;
            }
        }
    }

    for(int i=1 ; i<=n ; i++)
    {
        if( !isTaken[i] )
        {
            int fl = 1 ;
            for(int j=0 , k=m-1 ; j<k ; j++,k--)
            {
                if( ara[i][j] != ara[i][k] ) fl = 0 ;
            }
            if(fl)
            {
                Left += ara[i] ;
                break ;
            }
        }
    }

    string ans = Left ;
    reverse(Right.begin() , Right.end()) ;
    ans += Right ;

    cout<<ans.size()<<endl ;
    cout<<ans<<endl ;

    return 0 ;
}
