// in the name of Allah

#include <bits/stdc++.h>

#define endl '\n'
#define PI acos(-1.0)
#define sz(x) (int) (x.size())

using namespace std;

int par[223456];
vector <int> g[223456];

void dfs(int u, int p) {
	par[u] = p;
	for(int v : g[u]) {
		if(v == p) continue;
		else dfs(v, u);
	}
}

int h[223456];

int main() {
	ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	int n, sum = 0;
	cin >> n;
	n++;
	for(int i=0; i<n; i++) {
		cin >> h[i];
		sum += h[i];
	}
	bool f = 1;
	for(int i=1; i<n; i++) {
		if(h[i] > 1 && h[i-1] > 1) {
			f = 0;
			break;
		}
	}
	if(f) {
		cout << "perfect" << endl;
		return 0;
	}
	cout << "ambiguous" << endl;
	int last = 0;
	int cnt = 1;
	for(int i=0; i<n; i++) {
		for(int j=0; j<h[i]; j++) {
			g[last].push_back(cnt);
			g[cnt].push_back(last);
			cnt++;
		}
		last = cnt-1;
	}
	dfs(1, 0);
	for(int i=1; i<=sum; i++) cout << par[i] << " "; cout << endl;
	
	for(int i=0; i<223456; i++) g[i].clear();
	cnt = 1;
	vector <int> foo, bar;
	foo.push_back(0);
	for(int i=0; i<n; i++) {
		for(int j=0; j<h[i]; j++) {
			int idx = j % (int) (foo.size());
			last = foo[idx];
			g[last].push_back(cnt);
			g[cnt].push_back(last);
			bar.push_back(cnt);
			cnt++;
		}
		foo = bar;
		bar.clear();
	}
	dfs(1, 0);
	for(int i=1; i<=sum; i++) cout << par[i] << " "; cout << endl;
	return 0;
}