/* Author haleyk10198 */
/* �@��:  haleyk10198 */
/* CF handle: haleyk100198*/
/* FOR ACM-ICPC WF*/
#include <bits/stdc++.h>

using namespace std;
using ll = long long;
using vi = vector<int>;
using vvi = vector<vi>;
using pii = pair<int, int>;

#define pb push_back

constexpr auto MOD = 1000000007LL;
constexpr auto LINF = (1LL << 60);
constexpr auto INF = 2147483647LL;
constexpr auto PI = 3.1415926535897932384626433;
constexpr auto EPS = 1E-9;

template<typename T1, typename T2>
ostream &operator<<(ostream &out, const pair<T1, T2> p) {
    out << p.first << ' ' << p.second;
    return out;
}

template<typename T1, typename T2>
istream &operator>>(istream &in, pair<T1, T2> &p) {
    in >> p.first >> p.second;
    return in;
}

template<typename T>
istream &operator>>(istream &in, vector<T> &v) {
    for (auto &x: v)
        in >> x;
    return in;
}

template<typename T>
ostream &operator<<(ostream &out, vector<T> v) {
    for (int i = 0; i < v.size(); i++)
        out << v[i] << (i + 1 == v.size() ? '\n' : ' ');
    out.flush();
    return out;
}

#if __cplusplus < 201703L
#define mp make_pair
#endif

#define MAXN 200010

int n, m, q;
int a[MAXN], ina[MAXN], b[MAXN], fa[20][MAXN], last[MAXN], rr[MAXN];

int getPrev(int x){
    int i = ina[x]-1;
    if(i < 0) i += n;
    return a[i];
}

void build(){
    for(int i = 1; i < 20; i++){
        for(int j = 1; j <= m; j++){
            fa[i][j] = fa[i-1][fa[i-1][j]];
        }
    }

    return;
}

int getfa(int x){
    for(int i = 0; i < 20; i++){
        if((1<<i)&(n-1)){
            x = fa[i][x];
        }
    }

    return x;
}

int main() {
#ifdef LOCAL
    freopen("../input.txt", "r", stdin);
//		freopen("output.txt","w",stdout);
    freopen("../debug.txt", "w", stderr);
#endif
    ios_base::sync_with_stdio(false);

    cin >> n >> m >> q;
    for(int i = 0; i < n; i++){
        cin >> a[i];
        ina[a[i]] = i;
    }

    for(int i = 1; i <= m; i++){
        cin >> b[i];
        fa[0][i] = last[getPrev(b[i])];
        last[b[i]] = i;
    }

    build();
    for(int i = 1; i <= m; i++){
        rr[i] = getfa(i);
        rr[i] = max(rr[i-1], rr[i]);
    }

    for(int i = 0, x, y; i < q; i++){
        cin >> x >> y;
        cout << (rr[y] >= x);
    }

    cout << endl;

    return 0;
}
