   #include <bits/stdc++.h>
 
//    #include <boost/multiprecision/cpp_int.hpp>
// #define int long long
 #define inf  1000000007
 #define pa pair<int,int>
 #define ll long long
 #define pal pair<double,double>
 #define ppap pair<pa,int>
  #define PI 3.14159265358979323846
  #define paa pair<int,char>
  #define  mp make_pair
  #define  pb push_back
  #define EPS (1e-8)
                                          
    int dx[8]={0,1,0,-1,1,1,-1,-1};
    int dy[8]={1,0,-1,0,-1,1,1,-1};
                                            using namespace std;
                                   			class pa3{
                                            	public:
                                            	int x;
                                   				int y,z;
                                            	pa3(int x=0,int y=0,int z=0):x(x),y(y),z(z) {}
                                            	bool operator < (const pa3 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		 return z<p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                   				bool operator > (const pa3 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		 return z>p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa3 &p) const{
                                            		return x==p.x && y==p.y && z==p.z;
                                            	}
                                            		bool operator != (const pa3 &p) const{
                                            			return !( x==p.x && y==p.y && z==p.z);
                                            	}
                                            
                                            };
                                            
                                            class pa4{
                                            	public:
                                            	int x;
                                            	int y,z,w;
                                            	pa4(int x=0,int y=0,int z=0,int w=0):x(x),y(y),z(z),w(w) {}
                                            	bool operator < (const pa4 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		if(z!=p.z)return z<p.z;
                                            		return w<p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator > (const pa4 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		if(z!=p.z)return z>p.z;
                                            		return w>p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa4 &p) const{
                                            		return x==p.x && y==p.y && z==p.z &&w==p.w;
                                            	}
                                            		
                                            
                                            };
                                            class pa2{
                                            	public:
                                            	int x,y;
                                            	pa2(int x=0,int y=0):x(x),y(y) {}
                                            	pa2 operator + (pa2 p) {return pa2(x+p.x,y+p.y);}
                                            	pa2 operator - (pa2 p) {return pa2(x-p.x,y-p.y);}
                                            	bool operator < (const pa2 &p) const{
                                            		return y != p.y ? y<p.y: x<p.x;
                                            	}
                                            	bool operator > (const pa2 &p) const{
                                            		return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa2 &p) const{
                                            		return abs(x-p.x)==0 && abs(y-p.y)==0;
                                            	}
                                            	bool operator != (const pa2 &p) const{
                                            		return !(abs(x-p.x)==0 && abs(y-p.y)==0);
                                            	}
                                            		
                                            
                                            };
                                            
 
                      
                                string itos( int i ) {
                                ostringstream s ;
                                s << i ;
                                return s.str() ;
                                }
                                 
                                int gcd(int v,int b){
                                	if(v==0) return b;
                                	if(b==0) return v;
                                	if(v>b) return gcd(b,v);
                                	if(v==b) return b;
                                	if(b%v==0) return v;
                                	return gcd(v,b%v);
                                }
                 
                            
                                int mod;
int extgcd(int a, int b, int &x, int &y) {
    if (b == 0) {
        x = 1;
        y = 0;
        return a;
    }
    int d = extgcd(b, a%b, y, x);
    y -= a/b * x;
    return d;
}
pa operator+(const pa & l,const pa & r) {   
    return {l.first+r.first,l.second+r.second};                                    
}    
pa operator-(const pa & l,const pa & r) {   
    return {l.first-r.first,l.second-r.second};                                    
}  
                                
                int pr[10000100];
                int inv[10000010];
                
                int beki(int wa,int rr,int warukazu){
                	if(rr==0) return 1%warukazu;
                	if(rr==1) return wa%warukazu;
                	wa%=warukazu;
                	if(rr%2==1) return ((ll)beki(wa,rr-1,warukazu)*(ll)wa)%warukazu;
                	ll zx=beki(wa,rr/2,warukazu);
                	return (zx*zx)%warukazu;
                }
 
                
    			int comb(int nn,int rr){
    				if(rr<0 || rr>nn || nn<0) return 0;
    				int r=pr[nn]*inv[rr];
    				r%=mod;
    				r*=inv[nn-rr];
    				r%=mod;
    				return r;
    			}
               
                void gya(int ert){
                	pr[0]=1;
                	for(int i=1;i<=ert;i++){
                		pr[i]=((ll)pr[i-1]*i)%mod;
                	}
                		inv[ert]=beki(pr[ert],mod-2,mod);
                	for(int i=ert-1;i>=0;i--){
                		inv[i]=(ll)inv[i+1]*(i+1)%mod;
                	}
                }
                
              //   cin.tie(0);
    		//	ios::sync_with_stdio(false);
    			//priority_queue<pa3,vector<pa3>,greater<pa3>> pq;            
                 //sort(ve.begin(),ve.end(),greater<int>());
 //   mt19937(clock_per_sec);
  //  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()) ;


vector<string> ask(int l,int r){
	cout<<"? "<<l<<" "<<r<<endl;
	int k=(r-l+1);
	vector<string> S; 
	for(int i=0;i<k*(k+1)/2;i++){
		string s;
		cin>>s;
		sort(s.begin(),s.end());
		S.pb(s);
	}
	return S;
}

signed main(){
	
	
//cin.tie(0);
//ios::sync_with_stdio(false);

	int n;
	cin>>n;
	if(n<=2){
		string str[3];
		for(int i=1;i<=n;i++){
			cout<<"? "<<i<<" "<<i<<endl;
			cin>>str[i];
		}
		cout<<"! ";
		for(int i=1;i<=n;i++)cout<<str[i];
		cout<<endl;
		return 0;
	}
	if(n%2){
		int n1=n/2;
		int n2=n-n1;
		vector<string> s1=ask(1,n1);
		vector<string> s2=ask(n1+1,n);
		vector<string> vs=ask(1,n);
		
		multiset<char> moji;
		multiset<string> se;
		for(auto v:vs)se.insert(v);
		for(auto x:se)if(x.length()==1)moji.insert(x[0]);
		for(auto x:s1)se.erase(se.find(x));
		for(auto x:s2)se.erase(se.find(x));
		vector<pair<char,char>>P;
		
		
		
		for(int i=0;i<n1;i++){
		//	cout<<i<<endl;
			int cnt[26]={};
			for(auto x:se)if(x.length()==i+2)for(auto c:x)cnt[c-'a']++;
			for(int j=0;j<i;j++){
				cnt[P[j].first-'a']-=i-j+1;
				cnt[P[j].second-'a']-=i-j+1;
			}
		//	for(int j=0;j<26;j++)cout<<cnt[j];
		//	cout<<endl;
			vector<char> tmp;
			for(int j=0;j<26;j++)for(int k=0;k<cnt[j];k++){
				tmp.pb((char)('a'+j));
				moji.erase(moji.find(tmp.back()));
			}
			P.pb(mp(tmp[0],tmp[1]));
		}
		string mae(n1,'*'),ato(n2,'*');
		ato[n2-1]=*moji.begin();
		for(int i=1;i<=n/2;i++){
			int len=(i+3)/2;
			int cnt[26]={};
			if(i%2){
				for(auto v:s2)if(v.length()==len)for(auto c:v)cnt[c-'a']++;
				for(int j=1;j<len;j++)cnt[ato[j-1]-'a']-=j;
				for(int j=1;j<=len;j++)cnt[ato[n2-j]-'a']-=j;

				for(int j=0;j<26;j++)if(cnt[j]%(len))ato[len-2]=(char)('a'+j);
				mae[len-2]=P[len-2].first^P[len-2].second^ato[len-2];
			}
			else{
				for(auto v:s1)if(v.length()==len)for(auto c:v)cnt[c-'a']++;

				for(int j=1;j<=len;j++)cnt[mae[j-1]-'a']-=j;
				for(int j=1;j<len;j++)cnt[mae[n1-j]-'a']-=j;

				for(int j=0;j<26;j++)if(cnt[j]%(len))mae[n1-len+1]=(char)('a'+j);
				ato[n1-len+1]=P[n1-len+1].first^P[n1-len+1].second^mae[n1-len+1];		
			}
		}
		reverse(mae.begin(),mae.end());
		cout<<"! "<<mae<<ato<<endl;
	}
	else{
		int n1=n/2-1;
		int n2=n/2;
		vector<string> s1=ask(1,n1);
		vector<string> s2=ask(n1+2,n);
		vector<string> vs=ask(1,n);
		
		multiset<char> moji;
		multiset<string> se;
		for(auto v:vs)se.insert(v);
		for(auto x:se)if(x.length()==1)moji.insert(x[0]);
		for(auto x:s1)se.erase(se.find(x));
		for(auto x:s2)se.erase(se.find(x));
		vector<pair<char,char>>P;
		
		char man;
		for(auto v:se)if(v.length()==1)man=v[0];
		
		for(int i=0;i<n1;i++){
		//	cout<<i<<endl;
			int cnt[26]={};
			for(auto x:se)if(x.length()==i+2)for(auto c:x)cnt[c-'a']++;
			cnt[man-'a']-=i+2;
			for(int j=0;j<i;j++){
				cnt[P[j].first-'a']-=i-j+1;
				cnt[P[j].second-'a']-=i-j+1;
			}
		//	for(int j=0;j<26;j++)cout<<cnt[j];
		//	cout<<endl;
			vector<char> tmp;
			for(int j=0;j<26;j++)for(int k=0;k<cnt[j];k++){
				tmp.pb((char)('a'+j));
				moji.erase(moji.find(tmp.back()));
			}
			P.pb(mp(tmp[0],tmp[1]));
		//	cout<<tmp[0]<<tmp[1]<<endl;
		}
		string mae(n1,'*'),ato(n2,'*');
		moji.erase(moji.find(man));
		ato[n2-1]=*moji.begin();
		for(int i=1;i<=n1;i++){
			int len=(i+3)/2;
			int cnt[26]={};
			if(i%2){
				for(auto v:s2)if(v.length()==len)for(auto c:v)cnt[c-'a']++;
				for(int j=1;j<len;j++)cnt[ato[j-1]-'a']-=j;
				for(int j=1;j<=len;j++)cnt[ato[n2-j]-'a']-=j;

				for(int j=0;j<26;j++)if(cnt[j]%(len))ato[len-2]=(char)('a'+j);
				mae[len-2]=P[len-2].first^P[len-2].second^ato[len-2];
			}
			else{
				for(auto v:s1)if(v.length()==len)for(auto c:v)cnt[c-'a']++;

				for(int j=1;j<=len;j++)cnt[mae[j-1]-'a']-=j;
				for(int j=1;j<len;j++)cnt[mae[n1-j]-'a']-=j;

				for(int j=0;j<26;j++)if(cnt[j]%(len))mae[n1-len+1]=(char)('a'+j);
				ato[n1-len+1]=P[n1-len+1].first^P[n1-len+1].second^mae[n1-len+1];		
			}
		}
		reverse(mae.begin(),mae.end());
		cout<<"! "<<mae<<man<<ato<<endl;
		
		
	}
	

	return 0; 
 }