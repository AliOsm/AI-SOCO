#include <bits/stdc++.h>

using namespace std;

#define rep(i,a,n) for (int i=(a);i<(n);i++)
#define per(i,a,n) for (int i=(n)-1;i>=(a);i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define SZ(x) (int)x.size()

typedef long long ll;
typedef double ld;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<int,int> pii;
typedef pair<ll,ll>pll;
typedef vector<pii> vpii;

template<typename T>
T getint() {
    T x=0,p=1;
    char ch;
    do{ch=getchar();}while(ch <= ' ');
    if(ch=='-')p=-1,ch=getchar();
    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();
    return x*p;
}

mt19937 gen(chrono::system_clock::now().time_since_epoch().count());

template<typename T1,typename T2>bool umin(T1 &x,const T2&y){if(x>y)return x=y,true;return false;}
template<typename T1,typename T2>bool umax(T1 &x,const T2&y){if(x<y)return x=y,true;return false;}

const int maxn=(int)1e5+10;
const int inf=(int)1e9+5;
const int mod=(int)1e9+7;
const ll llinf=(ll)1e18+5;
const ld pi=acos(-1.0);

int t[4*maxn];
int pu[4*maxn];

int val[maxn];

void push(int v){
    t[v+v]+=pu[v];
    pu[v+v]+=pu[v];
    t[v+v+1]+=pu[v];
    pu[v+v+1]+=pu[v];
    pu[v]=0;
}

void add(int v,int l,int r,int x,int tl,int tr){
    if(l<=tl&&tr<=r){
        t[v]+=x;
        pu[v]+=x;
        return;
    }
    push(v);
    int tm=(tl+tr)/2;
    if(l<=tm)add(v+v,l,r,x,tl,tm);
    if(r>tm)add(v+v+1,l,r,x,tm+1,tr);
    t[v]=max(t[v+v],t[v+v+1]);
}

int get(int v,int l,int r,int tl,int tr){
    if(l>tr||r<tl)return -inf;
    if(l<=tl&&tr<=r){
        return t[v];
    }
    push(v);
    int tm=(tl+tr)/2;
    return max(get(v+v,l,r,tl,tm),get(v+v+1,l,r,tm+1,tr));
}

int main(){
   // freopen("input.txt","r",stdin);
   // freopen("output.txt","w",stdout);

    ios_base::sync_with_stdio(0);
    int n;
    cin>>n;
    rep(i,0,n){
        int p;
        cin>>p;
        int t;
        cin>>t;
        if(t==0){
            add(1,1,p,-1,1,n);
        }else{
            int x;
            cin>>x;
            val[p]=x;
            add(1,1,p,1,1,n);
        }
        if(get(1,1,n,1,n)<=0){
            cout<<-1<<'\n';
        }else{
            if(get(1,n,n,1,n)>0){
                cout<<val[n]<<'\n';
                continue;
            }
            int lf=1,rg=n;
            while(rg-lf>1){
                int md=(lf+rg)/2;
                if(get(1,md,n,1,n)>0){
                    lf=md;
                }else rg=md;
            }
            cout<<val[lf]<<endl;
            //assert(get(1,lf,n,1,n)>0);
           // assert(get(1,lf+1,n,1,n)<=0);
        }
    }


    return 0;
}
