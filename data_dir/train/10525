#include<bits/stdc++.h>
#define inf 1000000009
using namespace std;
int ara[200005], b[200005], nxt[200005], ind[200005], lev[200005], ans[200005];
char str[200005];
vector<int>vec[200005];
int seg[4*200005];
void update(int n, int s, int e, int ind, int val)
{
    if(s==ind && e==ind)
    {
        seg[n]= val;
        return;
    }
    if(s>ind || e<ind)
        return;
    int mid= (s+e)>>1;
    update(n*2, s, mid, ind, val);
    update(n*2 +1, mid+1, e, ind, val);
    seg[n]= min(seg[n*2], seg[n*2 +1]);
    return;
}
int query(int n, int s, int e, int l, int r)
{
    if(s>=l && e<=r)
        return seg[n];
    if(s>r|| e<l)
        return inf;
    int mid= (s+e)>>1;
    return min(query(n*2, s, mid, l, r), query(n*2 +1, mid+1, e, l, r));
}
void dfs(int x, int c, int n)
{
    lev[c]= x;
    if(c>=n)ans[x]= lev[c-n+1];
    for(int i=0; i<vec[x].size(); i++)
    {
        int y= vec[x][i];
        dfs(y, c+1, n);
    }return;
}
int main()
{
    int n, m, q, p= 0, x, y;
    scanf("%d %d %d", &n, &m, &q);
    for(int i=1; i<=n; i++)scanf("%d", &ara[i]);ara[n+1]= ara[1];
    for(int i=1; i<=n; i++)nxt[ ara[i] ]= ara[i+1];
    for(int i=1; i<=m; i++)scanf("%d", &b[i]);
    for(int i=m; i>=1; i--)
        vec[ ind[ nxt[ b[i] ] ] ].push_back(i), ind[ b[i] ]= i, ans[i]= inf;
    dfs(0, 0, n);
    for(int i=1; i<=m; i++)
        update(1, 1, m, i, ans[i]);
    while(q--)
    {
        scanf("%d %d", &x, &y);
        x= query(1, 1, m, x, y);
        if(x<=y)str[p++]= '1';
        else str[p++]= '0';
    }for(int i=0; i<p; i++)printf("%c", str[i]);puts("");
    return 0;
}
