#include <bits/stdc++.h>
#define endl '\n'
#define N 1'000'000
using namespace std;
typedef long long ll;
bool is_prime[N+1];
int max_prime_divisor[N+1];
void generate_primes() {
    memset(is_prime, true, sizeof is_prime);
    is_prime[0] = is_prime[1] = false;
    for(int i = 2; i <= N; i++) {
        if(is_prime[i]) {
            max_prime_divisor[i] = i;
            for(int j = 2 * i; j <= N; j += i) {
                is_prime[j] = false;
                max_prime_divisor[j] = i;
            }
        }
    }
}
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    generate_primes();
    int x2;
    cin >> x2;
    int x0 = x2;
    for(int x1 = x2; x1 == x2 || x1 % max_prime_divisor[x2] != 0; x1--) {
        if(!is_prime[x1]) {
            x0 = min(x0, x1 - max_prime_divisor[x1] + 1);
        }
    }
    cout << x0 << endl;
    return 0;
}
