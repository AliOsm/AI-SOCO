#pragma GCC optimize("O3")
#include<bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
typedef long long ll;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=LLONG_MAX;
const int inf=INT_MAX;
const int nmax=3e5+5;
const int mod=1e9+7;
using namespace std;
int n,q,i,x,sz[nmax],bg[nmax],pr[nmax],ans[nmax];
vector<int>a[nmax];
bool troid(int x,int c)
{
	return ((sz[x]-sz[c])*2<=sz[x] && bg[c]*2<=sz[x]);
}
void dfs(int x,int p)
{
	sz[x]=1,pr[x]=p;
	for(int i=0;i<a[x].size();i++)
	{
		dfs(a[x][i],x);
		bg[x]=max(bg[x],sz[a[x][i]]);
		sz[x]+=sz[a[x][i]];
	}
}
void solve(int x)
{
	if(sz[x]==1)ans[x]=x;
	else
	{
		int bst=0;
		for(int i=0;i<a[x].size();i++)
		{
			solve(a[x][i]);
			if(sz[a[x][bst]]<sz[a[x][i]])bst=i;
		}
		int c=ans[a[x][bst]];
		while(!troid(x,c))c=pr[c];
		ans[x]=c;
	}
}
int main()
{
    //freopen("sol.in","r",stdin);
	//freopen("sol.out","w",stdout);
	ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
    cin>>n>>q;
    for(i=2;i<=n;i++)
	{
		cin>>x;
		a[x].pb(i);
	}
	dfs(1,1);
	solve(1);
	while(q--)
	{
		cin>>x;
		cout<<ans[x]<<endl;
	}
	return 0;
}
