#include<bits/stdc++.h>
using namespace std;

struct node{
    int u;
    int d;
};

int deg[505];
vector<int> one;
vector<int> more;

int main()
{
    int n; cin >> n;
    for (int i = 1; i  <= n; i++){
        int d; cin >> d;
        deg[i] = d;
        if (d == 1) one.push_back(i);
        else more.push_back(i);
    }

    if (one.size() == n){
        cout << "NO\n";
        return 0;
    }

    vector<pair<int,int>> ans;

    int len = more.size() - 1;
    for (int i = 1; i < more.size(); i++){
        int u = more[i-1];
        int v = more[i];
        ans.push_back({u, v});
        deg[u]--; deg[v]--;
    }

    if (more.size()){
        if (one.size() > 0){
            ans.push_back({one[0], more[0]});
            deg[more[0]]--;
            deg[one[0]]--;
            len++;
        }
        if (one.size() > 1){
            ans.push_back({one.back(), more.back()});
            deg[one.back()]--;
            deg[more.back()]--;
            len++;
        }
    }

    bool ok = true;
    int id = 0;
    for (auto u : one){
        if (deg[u]){
            ok = false;
            if (id < more.size()){
                while(!deg[ more[id] ]){
                    if (id + 1 < more.size()) id++;
                    else break;
                }

                if (id < more.size() && deg[more[id]]){
                    deg[more[id]]--;
                    ans.push_back({u, more[id]});
                    ok = true;
                }
            }
            if (!ok){
                cout << "NO\n";
                return 0;
            }
        }
    }

    cout << "YES " << len << endl;
    cout << ans.size() << endl;
    for (auto p : ans) cout << p.first << " " << p.second << endl;

    return 0;
}
