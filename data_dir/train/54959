#include <bits/stdc++.h>

//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>

//using namespace __gnu_pbds;
using namespace std;

//template<typename T>
//using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef vector<int> vi;
typedef long long ll;

#define pb push_back
#define inf 0x3f3f3f3f
#define all(v) (v).begin() , (v).end()
#define ones(n) __builtin_popcount(n)

int di[] = {0, 0, 1, -1, 1, 1, -1, -1};
int dj[] = {1, -1, 0, 0, -1, 1, 1, -1};

const int N = 1e6 + 5;
int l[N] , r[N];
bool good_l[N] , good_r[N];

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
#endif
    int n;
    string s;
    cin >> n >> s;

    int opened = 0 , b = 1;
    for (int i = 0 ;i < n ;i++) {
        opened += s[i] == '(';
        opened -= s[i] == ')';
        b &= opened >= 0;
        good_l[i] = b;
        l[i] = opened;
    }

    opened = 0 , b = 1;
    for (int i = n - 1 ;i >= 0 ;i--) {
        opened += s[i] == ')';
        opened -= s[i] == '(';
        b &= opened >= 0;
        good_r[i] = b;
        r[i] = opened;
    }

    int cnt = 0;
    for (int i = 0 ;i < n ;i++) {
        if ((i == 0 || good_l[i - 1]) && (i == n - 1 || good_r[i + 1])) {
            int left = (s[i] == ')') + (i == 0 ? 0 : l[i - 1]);
            int right = (s[i] == '(') + (i == n - 1 ? 0 : r[i + 1]);
            cnt += left == right;
        }
    }
    printf("%d" , cnt);
}