#include<bits/stdc++.h>

using namespace std;

#define fRead(x)        freopen(x,"r",stdin)
#define fWrite(x)       freopen (x,"w",stdout)

#define LL              long long
#define ULL             unsigned long long
#define ff              first
#define ss              second
#define pb              push_back
#define INF             2e16
#define PI              acos(-1.0)
#define mk              make_pair
#define pii             pair<int,int>
#define pll             pair<LL,LL>


#define min3(a,b,c)     min(a,min(b,c))
#define max3(a,b,c)     max(a,max(b,c))
#define min4(a,b,c,d)   min(a,min(b,min(c,d)))
#define max4(a,b,c,d)   max(a,max(b,max(c,d)))
#define SQR(a)          ((a)*(a))
#define FOR(i,a,b)      for(int i=a;i<=b;i++)
#define ROF(i,a,b)      for(int i=a;i>=b;i--)
#define REP(i,b)        for(int i=0;i<b;i++)
#define MEM(a,x)        memset(a,x,sizeof(a))
#define ABS(x)          ((x)<0?-(x):(x))

#define SORT(v)         sort(v.begin(),v.end())
#define REV(v)          reverse(v.begin(),v.end())


#define FastRead        ios_base::sync_with_stdio(0);cin.tie(nullptr);
const int N = 100005;
int n,m;
LL ara[10][N];
LL st[10][N];

ULL hs = 3797;
ULL F[N],H[10][N];
ULL seg(LL id,LL x, LL y) {
    return H[id][y] - F[y - x + 1] * H[id][x - 1];
}

int main()
{
    F[0] = 1;
    for(int i = 1;i < N ;i++)F[i] = F[i-1] * hs;

    scanf("%d %d",&n,&m);
    for(int i = 0;i < m;i++){
        for(int j = 1;j <= n;j++){
            scanf("%d",&ara[i][j]);
            st[i][ara[i][j]] = j;
            H[i][j] = H[i][j-1] * hs + ara[i][j];
        }
    }
    LL answer = 0;
    for(int j = 1;j <= n;j++){
        LL number = ara[0][j];
        LL max_index = 0;
        for(LL k = 0;k < m;k++){
            max_index = max(max_index,st[k][number]);
        }
        LL len = n - max_index + 1;
        LL lo = 1 , hi = len, mid ,ans;

        while(lo <= hi)
        {
            mid = (lo + hi)/2;
            bool ok = 1;
            for(LL i = 1;i < m;i++){
                LL s1 = st[i-1][number];
                LL s2 = st[i][number];
                if(seg(i-1,s1,s1+mid-1) != seg(i,s2,s2+mid-1)){
                    ok = 0;break;
                }
            }
            if(ok){
                ans = mid;
                lo = mid + 1;
            }else{
                hi = mid - 1;
            }
        }
        answer = answer + ans;
    }
    cout << answer << "\n";


}
