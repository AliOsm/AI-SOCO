#include <cstdio>
#include <vector>

#define lld I64d

using namespace std;
typedef long long LL;

const int maxn = 100001;

int val[maxn];

vector <int> adj[maxn];

pair<LL,LL> dfs(int v, int p)
{
	LL mxm = 0, mxp = 0;
	for (int u: adj[v])
	{
		if (u == p)
			continue;
		auto ret = dfs(u, v);
		if (ret.first > mxm)
			mxm = ret.first;
		if (ret.second > mxp)
			mxp = ret.second;
	}
	mxm += (val[v] - mxm + mxp > 0ll ? val[v] - mxm + mxp : 0ll);
	mxp += (val[v] - mxm + mxp < 0ll ? mxm - val[v] - mxp : 0ll);
	return { mxm , mxp };
}

int main()
{
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n - 1; ++i)
	{
		int u, v;
		scanf("%d %d", &u, &v);
		u --, v --;
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
	for (int i = 0; i < n; ++i)
		scanf("%d", val + i);
	printf("%lld\n", dfs(0, -1).first + dfs(0, -1).second);
	return 0;
}
