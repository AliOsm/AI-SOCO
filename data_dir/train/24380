#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

const int N = 1e6 + 7;
const int SQRT = 500 + 7;

pair<pair<int, int>, int> q[N];
int cnt[N], a[N];
ll ans[N];

bool cmp(pair<pair<int, int>, int> a, pair<pair<int, int> ,int> b)
{
	if (a.first.first / SQRT == b.first.first / SQRT)
		return a.first.second < b.first.second;
	return a.first.first < b.first.first;
}

int l = 0, r = 0;
ll sum = 0;

void update(int num, bool t)
{
	sum -= 1LL * cnt[num] * 1LL * cnt[num] * num;
	if (t)
		cnt[num]++;
	else
		cnt[num]--;	
	sum += 1LL * cnt[num] * 1LL * cnt[num] * num;
}

int main()
{
	ios::sync_with_stdio(false), cin.tie(0);

	int n, m;
	cin >> n >> m;
	
	for (int i=0; i<n; i++)
		cin >> a[i];

	for (int i=0; i<m; i++)
	{
		cin >> q[i].first.first >> q[i].first.second;
		q[i].second = i;
	}

	sort(q, q+m, cmp);

	for (int i=0; i<m; i++)
	{
		int s = q[i].first.first - 1;
		int e = q[i].first.second;
		int ind = q[i].second;

		while (r < e)
			update(a[r++], 1);
		while (l > s)
			update(a[--l], 1);
		while (r > e)
			update(a[--r], 0);
		while (l < s)
			update(a[l++], 0);

		ans[ind] = sum;
	}

	for (int i=0; i<m; i++)
		cout << ans[i] << "\n";
	return 0;
}
