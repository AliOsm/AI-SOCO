#include <bits/stdc++.h>

#define x0 abc
#define y0 ABC
#define x1 abcd
#define y1 ABCD
#define xn abcde
#define yn ABCDE

#define l_b lower_bound
#define u_b upper_bound

#define fi first
#define se second
#define m_p make_pair

#define p_b push_back
#define po_b pop_back

#define ld long double
#define ll long long

#define MAXLL 1000000000000000000LL
#define MAXINT 2000000000

#define MINLL -1000000000000000000LL
#define MININT -2000000000

#define P acos(-1)

#define endl '\n'

#define OUT cout << "-------" << endl;

using namespace std;

vector <ll> v[120001], vn;

ll a, b, c[120001], n, m, i, z, k, l, zn;

    ll Check(ll d)
    {
        if (d == v[z].size())
        return -1;

        ll i, del = v[z][d] - v[z][0];

        for (i = 0; i < v[z].size(); i++) {
            a = v[z][i];

            b = v[z][(i + d) % v[z].size()];

            if (a < b)
            swap(a, b);

            if (min(a - b, n - (a - b)) != del) return -1;
        }

        return del;
    }

    ll gcd(ll a, ll b)
    {
        if (a < b)
        swap(a, b);

        while (b != 0) {
            a %= b;

            swap(a, b);
        }

        return a;
    }

    ll lcm(ll a, ll b)
    {
        return a * b / gcd(a, b);
    }

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n >> m;

    for (i = 1; i <= m; i++) {
        cin >> a >> b;

        if (a < b)
        swap(a, b);

        v[min(a - b, n - (a - b))].p_b(a);

        v[min(a - b, n - (a - b))].p_b(b);
    }

    for (z = 1; z <= n; z++) {
        if (v[z].size() == 0)
        continue;

        sort(v[z].begin(), v[z].end());

        vn.clear();

        for (i = 0; i < v[z].size() - 1; i++)
            if (v[z][i] != v[z][i + 1]) vn.p_b(v[z][i]);

        vn.p_b(v[z][v[z].size() - 1]);

        v[z] = vn;
    }

    for (z = 1; z <= n; z++) {
        if (v[z].size() == 0)
        continue;

        zn = MAXLL;

        for (i = 1; i * i <= v[z].size(); i++)
            if (v[z].size() % i == 0) {
                if (Check(i) != -1)
                zn = min(zn, Check(i));

                if (Check(v[z].size() / i) != -1)
                zn = min(zn, Check(v[z].size() / i));
            }

        if (zn == MAXLL) {
            cout << "No" << endl;

            return 0;
        }

        k++;

        c[k] = zn;
    }

    l = c[1];

    for (i = 1; i <= k; i++) {
        l = lcm(l, c[i]);

        if (l >= n)
        break;
    }

    if (l < n)
    cout << "Yes";
    else cout << "No";

    cout << endl;

    return 0;
}
