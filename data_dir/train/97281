#include <bits/stdc++.h>
using namespace std;

const int N = 5005, INF = 0x3f3f3f3f;

int a[N], b[N], c[N], dp[N][N][4];

int f(int idx, int k, int flg) {
        if(!idx)
            return (k == 0 ? 0 : INF);
        if(~dp[idx][k][flg])
                return dp[idx][k][flg];
        int res = INF;
        if(!flg) {
                res = min(max(0, c[idx + 1] - b[idx + 1]) + f(idx - 1, k - 1, 2), f(idx - 1, k, 1));
        } else if(flg == 1) {
                res = min(a[idx + 1] - b[idx + 1] + f(idx - 1, k - 1, 2), f(idx - 1, k, 1));
        } else {
                res = a[idx] - c[idx] + f(idx - 1, k, 0);
        }
        return dp[idx][k][flg] = res;
}

int main() {
        int n; cin >> n;
        for(int i = 1; i <= n; i++) cin >> a[i];
        for(int i = 2; i <= n; i++) b[i] = min(a[i], a[i - 1] - 1);
        for(int i = n - 1; i > 0; i--) c[i] = min(a[i], a[i + 1] - 1);
        memset(dp, -1, sizeof dp);
        for(int i = 1; i <= (n + 1) / 2; i++)
                cout << f(n, i, 0) << " ";
}
