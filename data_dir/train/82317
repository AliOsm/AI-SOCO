//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC optimize("unroll-loops")
 
#include <iostream>
#include <stdlib.h>
#include <cmath>
#include <algorithm>
#include <vector>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <random>
#include <assert.h>
#include <memory.h>
#include <time.h>
#include <bitset>
 
#define uint unsigned int
#define ll long long
#define ull unsigned long long
#define ld long double
#define rep(i, l, r) for (int i = (l); i < (r); i++)
#define repb(i, r, l) for (int i = (r); i > (l); i--)
#define sz(a) (int)a.size()
#define fi first
#define se second
#define mp(a, b) make_pair(a, b)
#define rank qwertyuio
#define next dfghjk
#define plus fsghsf
#define minus ytryr
 
using namespace std;
 
inline bool setmin(int &x, int y) { return (y < x) ? x = y, 1 : 0; }
inline bool setmax(int &x, int y) { return (y > x) ? x = y, 1 : 0; }
inline bool setmin(ll &x, ll y) { return (y < x) ? x = y, 1 : 0; }
inline bool setmax(ll &x, ll y) { return (y > x) ? x = y, 1 : 0; }
 
const int N = 1000;
const int inf = (int)1e9 + 1;
const ll big = (ll)1e18 + 1;
const int P = 239;
const int P1 = 31;
const int P2 = 57;
const int MOD = (int)1e9 + 7;
const int MOD1 = (int)1e9 + 9;
const int MOD2 = 998244353;
const ld eps = 1e-12;
const double pi = atan2(0, -1);
const int ABC = 26;
 
int a[N];
int ans[N + 1][N];
 
int main()
{
    //freopen("a.in", "r", stdin);
    //freopen("a.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    //ll TL = 10.95 * CLOCKS_PER_SEC;
    //clock_t time = clock();
    int n;
    cin >> n;
    rep(i, 0, n) {
        cin >> a[i];
    }
    vector<vector<int> > v(1);
    rep(i, 0, n + 1) {
        v[0].push_back(i);
    }
    rep(i, 0, n) {
        while (sz(v) > 0 && sz(v.back()) == 1) {
            v.pop_back();
        }
        if (sz(v) == 0) {
            rep(j, 0, a[i]) {
                ans[j][i] = 1;
            }
            continue;
        }
        int x = v.back()[0], y = v.back()[1];
        ans[x][i] = 1; a[i]--;
        rep(j, 0, n + 1) {
            if (j != x && j != y && a[i] > 0) {
                ans[j][i] = 1;
                a[i]--;
            }
        }
        vector<vector<int> > nv;
        for (auto it : v) {
            vector<int> v1, v2;
            for (int z : it) {
                if (ans[z][i] == 0) {
                    v1.push_back(z);
                } else {
                    v2.push_back(z);
                }
            }
            if (sz(v1) > 1) {
                nv.push_back(v1);
            }
            if (sz(v2) > 1) {
                nv.push_back(v2);
            }
        }
        v.swap(nv);
    }
    cout << n + 1 << "\n";
    rep(i, 0, n + 1) {
        rep(j, 0, n) {
            cout << ans[i][j];
        }
        cout << "\n";
    }
    return 0;
}