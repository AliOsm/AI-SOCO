#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

#ifdef WIN32
#define INT64 "%I64d"
#else
#define INT64 "%lld"
#endif

typedef long long int64;

const int MaxN = 405, NA = -1, MaxC = 0x7F7F7F7F;

int a [MaxN];
int res;
int n;

int solve (int x)
{
 int i, res;
 res = 0;
 for (i = 0; i < n; i++)
 {
  res += x / a[i];
  x %= a[i];
 }
 return res;
}

int main (void)
{
 int i, j;
 int cur, temp, num, tn;
 while (scanf (" %d", &n) != EOF)
 {
  for (i = 0; i < n; i++)
   scanf (" %d", &a[i]);
  res = MaxC;
  for (i = n - 2; i >= 0; i--)
  {
   cur = 0;
   num = 0;
   for (j = i + 1; j < n; j++)
   {
    tn = (a[i] - cur) / a[j];
    temp = tn * a[j];
    if (solve (cur + temp + a[j]) > num + tn + 1)
     res = min (res, cur + temp + a[j]);
    cur += temp;
    num += tn;
   }
  }
  if (res == MaxC)
   res = NA;
  printf ("%d\n", res);
 }
 return 0;
}
