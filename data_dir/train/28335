#define _CRT_SECURE_NO_WARNINGS 1
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <algorithm>
#include <numeric>
#include <sstream>
#include <iostream>
#include <cmath>
#include<cstring>
#include <cstdio>
#include <stack>
#include<iomanip>
#include<queue>
#include<functional>
#include<iterator>
#include<new>
#include<cstdlib>
using namespace std;
#define pi 3.141592653589793
#define ii pair<int,int>
#define llll pair<ll,ll>
#define ll long long
#define p10(ans) printf("%0.10f\n", ans);
#define pr(ans) printf("%d\n", ans);
#define scc(x)  scanf("%c", &c);
#define pll(ans) printf("%lld\n", ans);
#define scll(x) scanf("%lld",&x);
#define sci(x)  scanf("%d",&x);
#define pc(ans)  printf("%c", ans);
#define scanfchararray(arr) scanf("%s", arr);
#define printfstring(s)    printf("%s\n", s.c_str());
#define all(v)             v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v)            ((int)((v).size()))
#define mk(x,y)                      make_pair(x,y)
#define mod 1000000007
#define mem(arr,d) memset(arr,d,sizeof(arr))
#define ninf -10000000000000000;
#define inf 10000000000000000;
int ans = 0;
bool vis[100010];
vector<pair<int,ll>>arr[100010];
int rkm[100010];
void dfs(int s, bool del,ll sum)
{
	vis[s] = 1;
	if (arr[s].size() == 1 && vis[arr[s][0].first])
	{
		if (sum > rkm[s])del = true;
	}
	else {
		for (int i = 0; i < arr[s].size(); ++i)
		{
			if (vis[arr[s][i].first])continue;
			dfs(arr[s][i].first, ((max(sum + arr[s][i].second,arr[s][i].second) > rkm[arr[s][i].first]) ? true : del), max(sum + arr[s][i].second, arr[s][i].second));
		}
	}
	(del) ? ++ans : ans;
}
int main()
{
	int n,u,c;
	sci(n);
	for (int i = 1; i <= n; ++i)sci(rkm[i]);
	for (int i = 1; i < n; ++i)
	{
		sci(u); sci(c);
		arr[i + 1].push_back(mk(u, c));
		arr[u].push_back(mk(i + 1, c));
	}
	dfs(1, false, 0);
	pr(ans);
}

