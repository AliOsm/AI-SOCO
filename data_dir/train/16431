#include <iostream>
#include <algorithm>
#include <vector>
#include <cstring>
using namespace std;

const int MAXN = 100005;

typedef pair<int,int> pi;
typedef long long ll;

int dp[105][120000][2];
int offset = 100*100;
int k;
int a[105];
int b[105];

int solve(int pos, int score, int flag){

    if(!pos && !flag )
        return -(1 << 30);

    if(pos == 0 )
    {
        if( score == 0)
            return 0;

        return -(1 << 30);
    }

    if( dp[pos][score+offset][flag] != -1)
        return dp[pos][score+offset][flag];

    int ans = solve(pos - 1, score, flag);
    ans = max(ans, a[pos] + solve(pos - 1, score - a[pos] + k * b[pos], 1) );

    return dp[pos][score+offset][flag] = ans;

}
int main()
{
    ios::sync_with_stdio(0);
    int n; cin >> n >> k;

    for(int i = 1; i <= n; i++)
        cin >> a[i];

    for(int i = 1; i <= n; i++)
        cin >> b[i];

    memset(dp, -1, sizeof dp);
    int ans = solve(n, 0, 0);

    if( ans < 0)
        cout << -1 << endl;
    else
        cout << ans << endl;


    return 0;
}
