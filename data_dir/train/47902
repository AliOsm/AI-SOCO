#include<bits/stdc++.h>
#define REP(i,j,k) for(int i=j;i<k;++i)
#define RREP(i,j,k) for(int i=(int)j-1;i>=k;--i)
#define int long long
#define pb emplace_back
#define P pair<int,int>
#define F first
#define S second
#define ALL(x) x.begin(),x.end()
#define sz(a) (int)(a).size()
#define MX 1005
#define oo 1e18
#define L d*2
#define R (d*2+1)
#define mid (l+r>>1)
#define Ls l,mid,d*2
#define Rs mid+1,r,d*2+1
#define MIN(x,y) (x=min(x,(y)))
#define MAX(x,y) (x=max(x,(y)))
#define mo (int)(1e9+7)
#define IOS cin.tie(0) ,cout.tie(0), cout.sync_with_stdio(0)
using namespace std;
int n,m,w,dp[MX][MX],a[MX],b[MX],p[MX],c,d,ok[MX],cnt,sum,t,ans;
vector<int> G[MX];
int find(int x){return x==p[x]?x:p[x]=find(p[x]);}
main(){
	IOS;
	cin>>n>>m>>w;
	REP(i,1,n+1) cin>>a[i],p[i] = i,G[i].pb(i);
	REP(i,1,n+1) cin>>b[i];
	while(m--){
		cin>>c>>d, c = find(c),d = find(d);
		if(c!=d){
			p[c] = d;
			for(auto u:G[c]) G[d].pb(u);
		}
	}
	REP(i,1,n+1) if(!ok[find(i)]){
		c = find(i), ok[c] = 1, cnt = sum = 0, t++;
		for(auto u:G[c]) cnt += a[u], sum += b[u];
		REP(i,0,w+1) dp[t][i] = dp[t-1][i];
		if(cnt<=w) RREP(j,w+1,cnt) MAX(dp[t][j],dp[t-1][j-cnt]+sum);
		for(auto u:G[c]) RREP(j,w+1,a[u]) MAX(dp[t][j],dp[t-1][j-a[u]]+b[u]);
	}
	REP(i,0,w+1) MAX(ans,dp[t][i]);
	cout<<ans;
}
