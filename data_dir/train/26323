#include <iostream>
#include <iomanip>
#include <cstdio>
#include <algorithm>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <vector>
#include <string>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define pb push_back
#define mp make_pair
#define all(a) (a).begin(), (a).end()
#define sz(a) (int)((a).size())
#define X first
#define Y second
#define sqr(x) (x) * (x)
#define y1 __y1
#define endl '\n'

typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;

const int INF = (int)(1e9);
const li INF64 = (li)(INF) * (li)(INF);
const ld eps = 1e-9;
const ld PI = (ld)(3.1415926535897932384626433832795);

const int dx[] = {-1, -1, 0, 1, 1, 1, 0, -1};
const int dy[] = {0, 1, 1, 1, 0, -1, -1, -1};

bool in(int i, int j, int n, int m)
{
    return i >= 0 && i < n && j >= 0 && j < m;
}

inline int myrand()
{
    return rand() ^ (rand() << 15);
}

const int N = 111;

int c[N];

int cnt(li n)
{
    int res = 0;
    while(n > 0)
    {
        if(n % 2LL == 1LL)
            res++;
        n /= 2LL;
    }

    return res;
}

li pow2[N];

int main(){
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

    cout << setprecision(12) << fixed;
    cerr << setprecision(10) << fixed;
    
    srand(int(time(NULL)));

    pow2[0] = 1LL;
    for(int i = 1; i <= 64; i++)
        pow2[i] = pow2[i - 1] * 2LL;
    int T;
    cin >> T;
    forn(tt, T)
    {
        li a, b;
        cin >> a >> b;
        int mx = -1;
        li ans = -1LL;
        mx = cnt(a);
        ans = a;

        if(cnt(b) > mx || cnt(b) == mx && b < ans)
        {
            mx = cnt(b);
            ans = b;
        }

        li bb = b;
        int idx = 0;
        while(bb > 0)
        {
            c[idx] = bb % 2LL;
            bb /= 2LL;
            idx++;
        }

        if(b == 0)
        {
            c[0] = 0;
            idx = 1;
        }

        /*cout << "bef" << endl;
        forn(i, idx)
            cout << c[i];
        cout << endl;*/

        int len = idx - 1;
        /*int lf = 0, rg = idx - 1;
        cout << lf << ' ' << rg << endl;
        while(lf < rg)
        {
            int t = c[lf];
            c[lf] = c[rg];
            c[rg] = t;
            lf++;
            rg--;
        }
*/
        /*cout << "bits" << endl;
        for(int i = 0; i < idx; i++)
            cout << c[i];
        cout << endl;*/

        for(int bit = idx - 1; bit >= 0; bit--)
        {
            li curval = 0;
            if(c[bit] == 0)
                continue;
            int buf[N];
            for(int j = idx - 1; j >= 0; j--)
                buf[j] = c[j];
            buf[bit] = 0;
            for(int k = bit  - 1; k >= 0; k--)
                buf[k] = 1;

            for(int i = idx - 1; i >= 0; i--)
                curval += buf[i] * 1LL * pow2[i];

            if(curval >= a && curval <= b)
            {
                if(cnt(curval) > mx || cnt(curval) == mx && curval < ans)
                {
                    mx = cnt(curval);
                    ans = curval;
                }
            }
        }

        cout << ans << endl;
    }

    return 0;
}