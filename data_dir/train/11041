#include<bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef long double ld;
typedef pair<int,int> pi;
typedef pair<ll,ll> pll;

#define endl '\n'
#define ff first
#define ss second
#define int long long
#define pb push_back
#define f(i,l,r) for(ll i=l;i<=r;i++)
#define rf(i,r,l) for(ll i=r;i>=l;i--)
#define Max 5000001
#define inf 2147483647
#define llinf 9223372036854775807
#define all(v) v.begin(),v.end()
#define bp(n) __builtin_popcountll(n)
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)

#define d0(a) cout<<a<<' ';
#define d1(a) cout<<a<<endl;
#define d2(a,b) cout<<a<<' '<<b<<endl;
#define d3(a,b,c) cout<<a<<' '<<b<<' '<<c<<endl;
#define d4(a,b,c,d) cout<<a<<' '<<b<<' '<<c<<' '<<d<<endl;
#define d5(a,b,c,d,e) cout<<a<<' '<<b<<' '<<c<<' '<<d<<' '<<e<<endl;
#define d6(a,b,c,d,e,f) cout<<a<<' '<<b<<' '<<c<<' '<<d<<' '<<e<<' '<<f<<endl;

const ll N=1e5+5,mod=1e9+7,bit=61;

ll n,m,a[N],b[N],dp[N][2];

ll powerm(ll a,ll b,ll m=mod)
{
	a%=m;
	ll res=1%m;
	while(b>0)
	{
		if(b & 1)
		{
			res=(res*a)%m;
		}
		b>>=1;
		a=(a*a)%m;
	}
	return res;
}

ll inv2;

ll get(ll x)
{
    ll ans=x*(x+1);
    ans=(ans * inv2)%mod;
    ans%=mod;
    return ans;
}

signed main()
{
    fast;

    ll t=1;
    //cin>>t;
    while(t--)
    {
        inv2=powerm(2,mod-2);
        cin>>n>>m;
        f(i,1,n)
        {
            cin>>a[i];
        }
        f(i,1,n)
        {
            cin>>b[i];
        }
        dp[0][0]=0;
        dp[0][1]=1;
        ll den=1;
        f(i,1,n)
        {
            if(a[i]==0 and b[i]==0)
            {
                den=(den * m)%mod;
                den=(den * m)%mod;
                dp[i][1]=(dp[i-1][1]*m)%mod;
                ll add=(dp[i-1][0]*m)%mod;
                add=(add * m)%mod;
                dp[i][0]=(add+(dp[i-1][1] * get(m-1))%mod)%mod;
            }
            else if(a[i]==0)
            {
                den=(den * m)%mod;
                dp[i][1]=dp[i-1][1];
                dp[i][0]=(dp[i-1][0]*m + (dp[i-1][1]*(m-b[i]))%mod)%mod;
            }
            else if(b[i]==0)
            {
                den=(den * m)%mod;
                dp[i][1]=dp[i-1][1];
                dp[i][0]=(dp[i-1][0]*m + (dp[i-1][1]*(a[i]-1))%mod)%mod;
            }
            else
            {
                dp[i][0]=(dp[i-1][0]+(dp[i-1][1]*(a[i]>b[i]))%mod)%mod;
                dp[i][1]=(dp[i-1][1]*(a[i]==b[i]))%mod;
            }
        }
        ll ans=(dp[n][0] * powerm(den,mod-2))%mod;
        cout<<ans<<endl;
    }
    return 0;
}
















