#include <bits/stdc++.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;

const int MAX = 2e5 + 5;
vector<int> adj[MAX];
ll dp[MAX][5], ans[MAX];
int qty[MAX][5];
int n, k;

void dfs(int source, int father) {
	qty[source][0] = 1;
	for(auto &each : adj[source]) {
		if(each == father) {
			continue;
		}
		dfs(each, source);
		fori(i, 0, k) {
			fori(j, 0, k) {
				ans[source] += dp[source][i] * qty[each][j];
				ans[source] += (dp[each][j] + (j == 0 ? qty[each][0] : 0)) * qty[source][i];
				if(i > 0 && (j + 1) != k && i + (j + 1) <= k) {
					ans[source] -= 1LL * qty[source][i] * qty[each][j];		
				}
			}
		}
		fori(i, 0, k) {
			qty[source][(i + 1) % k] += qty[each][i];
			dp[source][(i + 1) % k] += dp[each][i];
		}
		dp[source][1 % k] += qty[each][0]; 
		ans[source] += ans[each];
	}
}

int main() {
	scanf("%d %d", &n, &k);
	fori(i, 0, n - 1) {
		int u, v;
		scanf("%d %d", &u, &v);
		adj[u].push_back(v);
		adj[v].push_back(u);
	}

	dfs(1, -1);
	printf("%lld\n", ans[1]);

	return 0;
}

