#pragma comment(linker, "/STACK:64000000")
 
#define _USE_MATH_DEFINES
#define _CRT_NO_DERPECATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
#include <memory.h>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <utility>
#include <algorithm>
#include <functional>
#include <complex>
 
using namespace std;
 
typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int64, int64> pii;
#define sq(x) ((x)*(x))
#define INF ((int)(2e9))
#define LINF ((int64)(2e18))
#define EPS ((double)(1e-7))
#define MOD ((int64)(1e9 + 9))
#define y0 xdsf
const double PI = 6.283185307179586476925286766559;
const int MAXN = 3000;
int64 n, m;
int64 a[MAXN], b[MAXN];
set <int64> num;


void solve()
{
	cin >> n;
	int64 sa = 0, sb = 0;
	for(int i = 0; i < n; ++i)
	{
		cin >> a[i];
		sa += a[i];
	}

	cin >> m;
	for(int i = 0; i < m; ++i)
	{
		cin >> b[i];
		sb += b[i];
	}
	int64 ans = abs(sa - sb), k = 0;
	pii ta, ta1;
	for(int i = 0; i < n; ++i)
	{
		for(int j = 0; j < m; ++j)
		{
			int64 t = abs(sa - sb - 2 * ((int64)a[i] - b[j]));
			if (t < ans)
			{
				ans = t;
				k = 1;
				ta = pii(i, j);
			}
		}
	}


	for(int i = 0; i < m; ++i)
	{
		for(int j = i + 1; j < m; ++j)
		{
			int64 t = b[i] + b[j];
			num.insert(2 * t);
		}
	}

	int64 flag = 0;
	int64 ano = 0;

	for(int i = 0; i < n; ++i)
	{
		for(int j = i + 1; j < n; ++j)
		{
			int64 t = sa - sb - 2 *(a[i] + a[j]);
			
			auto it = num.lower_bound(-t);
			if (it != num.end())
			{
				int64 r = *it;
				t += r;
				if (abs(t) < ans)
				{
					k = 2;
					flag = 1;
					ano = r;
					ta.first = i;
					ta1.first = j;
					ans = abs(t);
				}
			}
			if (it != num.begin())
			{
				--it;
				int64 r = *it;
				t += r;
				if (abs(t) < ans)
				{
					k = 2;
					flag = 1;
					ano = r;
					ta.first = i;
					ta1.first = j;
					ans = abs(t);
				}
			}
			
		}
	}

	if (flag)
	{
		for(int i = 0; i < m; ++i)
			for(int j = i + 1; j < m; ++j)
			{
				if (ano == 2 * (b[i] + b[j]))
				{
					ta.second = i;
					ta1.second = j;
					break;
				}
			}
	}
	cout << ans << endl;
	cout << k << endl;
	if (k == 1)
	{
		cout << ta.first  + 1<< ' ' << ta.second + 1;
	}
	if (k == 2)
	{
		cout << ta.first  + 1<< ' ' << ta.second + 1 << endl;
		cout << ta1.first  + 1<< ' ' << ta1.second + 1;
	}
}
 
int main()
{
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
#endif
    ios_base::sync_with_stdio(false); cin.tie(0);
    srand(time(0));
    
    solve();
    
    return 0;
}  