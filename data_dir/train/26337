#include <iostream>
#include <cmath>
#include <string>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <fstream>
#include <cassert>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <stack>
#include <functional>
#include <numeric>
#include <ctime>
#include <cstdlib>
#include <sstream>

using namespace std;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define pii pair<int, int>
#define pll pair<long long, long long>
#define y1 stupid_y1
#define ll long long
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x)*(x))
#define sz(a) (int)a.size()
#define file "a"

const int inf = (int)1e9;
const double eps = 1e-9;
const double pi = acos(-1.0);

int get(string s){
    int maxi = 0;               
    for (int i=0;i<s.length();i++)
        maxi = max(maxi, s[i] - '0');
    return maxi;
}


int main () {
    #ifdef LOCAL
    freopen(file".in", "r", stdin);
    freopen(file".out", "w", stdout);
    #endif

    string a, b;
    cin >>a>>b;

    int maxi = max(get(a), get(b)) + 1;

    reverse(a.begin(), a.end());
    reverse(b.begin(), b.end());

    while(a.length() < b.length()) a += "0";
    while(b.length() < a.length()) b += "0";

    int ans = a.length();
    int carry = 0;
    for (int i=0;i<a.length();i++){
        int sum = a[i] - '0' + b[i] - '0';
        sum += carry;
        if ( sum >= maxi ) carry = 1;
        else carry = 0;
    }   

    ans += carry;

    cout <<ans<<endl;




    #ifdef LOCAL
    cerr << (double)clock() * 1.0 / CLOCKS_PER_SEC << endl;
    #endif

    return 0;
}
