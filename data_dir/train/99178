#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <map>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>

#define oo 1e9
#define pi 3.1415926536
#define all(x) x.begin(),x.end()
#define sorta(x) sort(all(x))
#define sortam(x,comp) sort(all(x),comp)
#define sortd(x) sort(x.rbegin(),x.rend())
#define pb push_back
#define mp make_pair
#define sf(x) scanf("%d", &x);
#define sfll(x) scanf("%I64d", &x);
#define pr(x) printf("%d\n", x);

typedef long long ll;
using namespace std;

bool isp[10000000 + 5];
vector<int>u, res;
void sieve() {
    isp[0] = isp[1] = 0;
    for(int i = 2; i < 1e7 + 5; i++) isp[i] = 1;
    for(int i = 2; i < 1e7 + 5; i++) {
        if(isp[i]) {
            res[i] += u[i];
            for(int j = 2 * i; j < 1e7 + 5; j += i) isp[j] = 0, res[i] += u[j];
        }
    }

    for(int i = 1; i < res.size(); i++) res[i] += res[i - 1];
}

int main() {
    int n;
    sf(n);
    u.clear();
    u.resize(1e7 + 5, 0);
    res.clear();
    res.resize(1e7 + 5, 0);
    for(int i = 0; i < n; i++) {
        int tmp;
        sf(tmp);
        u[tmp]++;
    }

    sieve();
    int m;
    sf(m);
    while(m--) {
        int l, r;
        sf(l); sf(r);
        r = min(r, (int)1e7);
        l = min(l, (int)1e7);
        pr(res[r] - res[l - 1]);
    }
    return 0;
}
