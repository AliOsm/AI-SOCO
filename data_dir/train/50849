#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define fir first
#define sec second
#define ll long long
#define ull unsigned long long

const int md=998244353;

int n,m,f;
vector<vector<int>> g(300005);
int p[300005],used[300005],a[300005],b[300005],p1[300005],used1[300005];
int ans1;

void dfs1(int v,int par)
{
    used[v]=1;
    if (par==0) p[v]=1;
    else {p[v]=0; ans1*=2; ans1%=md;}
    for (int i=0;i<g[v].size();i++)
        if (!used[g[v][i]]) dfs1(g[v][i],p[v]);
    for (int i=0;i<g[v].size();i++)
        if (p[g[v][i]]==p[v]) f=1;
}

bool check()
{
    for (int i=0;i<m;i++)
        if (p[a[i]]==p[b[i]]&&p[a[i]]!=-1) return 0;
    return 1;
}

void dfs2(int v,int par)
{
    used1[v]=1;
    if (par==0) p1[v]=1;
    else {p1[v]=0; ans1*=2; ans1%=md;}
    for (int i=0;i<g[v].size();i++)
        if (!used1[g[v][i]]) dfs2(g[v][i],p1[v]);
    for (int i=0;i<g[v].size();i++)
        if (p1[g[v][i]]==p1[v]) f=1;
}

bool check2()
{
    for (int i=0;i<m;i++)
        if (p1[a[i]]==p1[b[i]]&&p1[a[i]]!=-1) return 0;
    return 1;
}

int dfs()
{
    ll ans=1;
    vector<ll> love;
    for (int i=0;i<=max(m,n);i++)
            {p[i]=-1,used[i]=0,p1[i]=-1,used1[i]=0;}
    ans1=0;
    for (int i=1;i<=n;i++)
        if (!used[i])
        {
            int ans2=0;
            ans1=1;
            f=0;
            dfs1(i,0);
            if (!f)
            {ans2+=ans1; ans2%=md;}
            ans1=1;
            f=0;
            dfs2(i,1);
            if (!f) 
            {ans2+=ans1; ans2%=md;}
            love.pb((ll)ans2);
            if (ans2==0) return 0;
        }
    for (int i=0;i<love.size();i++)
        {ans*=love[i]; ans%=md;}
    return (int)ans;
}

int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int t;
    cin>>t;
    while (t--)
    {
        int ans=0;
        cin>>n>>m;
        for (int i=0;i<=max(n,m);i++)
            g[i].clear();
        for (int i=0;i<m;i++)
        {
            int v,u;
            cin>>v>>u;
            g[v].pb(u);
            g[u].pb(v);
            a[i]=v; b[i]=u;
        }
        cout<<dfs()<<endl;;
    }
    return 0;
}