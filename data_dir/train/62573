#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <string>
#include <cstring>
#include <cstdio>
// Kobe is the GOAT
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
// Stack, Bitmask, Dsu 
using namespace std;

int n, m, x;
const int MAXN = 2005, INFTY = 1e9;
long long a[MAXN], b[MAXN], c[MAXN], d[MAXN];

int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> m;

	for(int i = 1; i <= n; i++)
	{
		cin >> a[i];
		a[i] += a[i - 1];
	}
	for(int j = 1; j <= m; j++)
	{
		cin >> b[j];
		b[j] += b[j - 1];
	}
	cin >> x;

	for(int i = 1; i <= n; i++)
	{
		c[i] = INFTY;
		for(int j = 1; j <= n - i + 1; j++)
			c[i] = min(c[i], a[j + i - 1] - a[j - 1]);
	}

	for(int i = 1; i <= m; i++)
	{
		d[i] = INFTY;
		for(int j = 1; j <= m - i + 1; j++)
			d[i] = min(d[i], b[j + i - 1] - b[j - 1]);
	}

	long long area = 0;
	for(long long i = 1; i <= n; i++)
		for(long long j = 1; j <= m; j++)
			if(c[i] * d[j] <= x)
				area = max(area, i * j);

	cout << area << "\n";
	return 0;
}
