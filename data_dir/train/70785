	/* In the name of Allah */
#include<bits/stdc++.h>
using namespace std;

const int N = 1e6 + 5;
int n, m, a[N], b[N], e[N], p[N], par[N];

int get_par(int u) {
	return ~par[u]? par[u] = get_par(par[u]): u;
}

inline void merge(int u, int v) {
	u = get_par(u);
	v = get_par(v);
	if (u == v)
		return;
	par[v] = u;
}

inline void read_input() {
	cin >> n >> m;
	for (int i = 0; i < m; i++)
		cin >> a[i] >> b[i] >> e[i];
}

inline void solve() {
	iota(p, p + --m, 1);
	memset(par, -1, sizeof par);
	sort(p, p + m, [] (int i, int j) {
		return e[i] < e[j];
	});
	for (int i = 0, j = 0; i < m; j++)
		if (j == m || e[p[i]] ^ e[p[j]]) {
			for (int k = i; k < j; k++)
				merge(a[p[k]], b[p[k]]);
			if (get_par(a[0]) == get_par(b[0])) {
				cout << e[p[i]];
				return;
			}
			i = j;
		}
	cout << (int) 1e9;
}

int main() {
	ios:: sync_with_stdio(0), cin.tie(0), cout.tie(0);
	read_input(), solve();
	return 0;
}
