#include<bits/stdc++.h>
#define int long long
#define N 1000001
using namespace std;
int n,ans,L,R,idx,a[N],Left[N],Right[N],S[4 * N];
map<int,int> fix,Fix;
void upd(int low, int high, int pos)
{
	if(low > idx || idx > high) return;
	if(low == high) 
	{
		S[pos] ++;
		return;
	}
	int mid = (low + high) / 2;
	upd(low,mid,2*pos);
	upd(mid+1,high,2*pos+1);
	S[pos] = S[2*pos] + S[2*pos+1];
}
int get(int low, int high, int pos)
{
	if(low > R || high < L) return 0;
	if(L <= low && R >= high) return S[pos];
	int mid = (low + high) / 2;
	return get(low,mid,2*pos) + get(mid+1,high,2*pos+1);
}
main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
	cin >> n;
	for(int i=1; i<=n; i++)
	{
		cin >> a[i];
	}
	for(int i=1; i<=n; i++)
	{
		fix[a[i]] ++;
		Left[i] = fix[a[i]];
	}
	for(int i=n; i>=1; i--)
	{
		Fix[a[i]] ++;
		Right[i] = Fix[a[i]];
	}
	for(int i=n; i>=1; i--)
	{
		//cout << Left[i] << " " << Right[i] << endl;
		L = 1;
		R = Left[i] - 1;
		ans += get(1,n,1);
		idx = Right[i];
		upd(1,n,1);
	}
	cout << ans << endl;
}