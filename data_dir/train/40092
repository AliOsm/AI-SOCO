#include<bits/stdc++.h>
using namespace std;
const int N=400004;
struct node{
  int l,r,id;
  }qry[N];
map<int,int>mp;
vector<int>vec;
int lt[N],rt[N];
int ans[N],bit[N];
void update(int x,int val)
{
    while(x<N)
    {
        bit[x]+=val;
        x+=x&-x;
    }
}
int query(int x)
{
    int res=0;
    while(x>0)
    {
        res+=bit[x];
        x-=x&-x;
    }
    return res;
}
bool compare(node a,node b)
{
    if(a.l!=b.l)
        return a.l>b.l;
    else
        return a.r<b.r;
}
int main()
{
    int n;
    scanf("%d",&n);
    int i;
    for(i=1;i<=n;i++)
    {
        int l,r;
        scanf("%d %d",&l,&r);
        if(!mp[l]){
            vec.push_back(l);
            mp[l]=1;
        }
        if(!mp[r]){
            vec.push_back(r);
            mp[r]=1;
        }
        lt[i]=l;
        rt[i]=r;
    }
    sort(vec.begin(),vec.end());
    for(i=0;i<vec.size();i++)
        mp[vec[i]]=i+1;
    for(i=1;i<=n;i++)
    {
        lt[i]=mp[lt[i]];
        rt[i]=mp[rt[i]];
        qry[i].l=lt[i];
        qry[i].r=rt[i];
        qry[i].id=i;
    }
    sort(qry+1,qry+n+1,compare);
    for(i=1;i<=n;i++)
    {
        ans[qry[i].id]=query(qry[i].r);
        update(qry[i].r,1);
    }
    for(i=1;i<=n;i++)
        printf("%d\n",ans[i]);
    return 0;
}