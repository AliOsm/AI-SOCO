#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <time.h>
#include <iostream>
#include <algorithm>
#include <string>
#include <string.h>
#include <vector>
#include <map>
#include <set>
#include <list>
#include <deque>
#include <queue>
#include <sstream>

using namespace std;

#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define ppb pop_back
#define rept(i,c) for (typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)

#define task "a"

typedef long long ll;
typedef pair<int,int> pii;

const int maxN=105;
const int INF=(int)1e9;
const int MOD = 7+(int)1e9;
const double eps = 1e-9;

int A[maxN];
int X[maxN];
int Y[maxN];

int W[maxN][maxN];
int D[maxN];
int n, d;

int f(int t) {
	for (int i = 0; i < n; i++) {
		D[i] = -1;
	}
	D[0] = t;
	for (int k = 0; k < n - 1; k++) {
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (i != j) {
					if (D[i] >= 0)	{
						D[j] = max(D[i] + A[i] - W[i][j], D[j]);
					}	
				}	
			}
		}
	}
	return (D[n - 1] >= 0);
}

int main(void){
    //freopen(task".in", "r",stdin); freopen(task".out","w",stdout);
    cin >> n >> d;
    for (int i = 1; i < n - 1; i++) {
		cin >> A[i];
	}
	for (int i = 0; i < n; i++) {
		cin >> X[i] >> Y[i];
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			W[i][j] = d*(abs(X[i] - X[j]) + abs(Y[i] - Y[j]));
		}
	}
	int l = -1, r = INF;
	while (r - l > 1) {
		int m = (r + l) / 2;
		if (f(m)) {
			r = m;
		} else {
			l = m;
		}
	} 
	cout << r << endl;
	return 0;
}
