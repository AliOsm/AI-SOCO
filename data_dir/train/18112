#include<bits/stdc++.h>
//#define DEBUG
#define FOR(i,n) for(int i=1;i<=n;i++)
#define FORZ(i,n) for(int i=0;i<n;i++)
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define piii pair<int,pair<int,int>>
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define SIZE 10000002
#define MOD9 998244353
#define MOD 1000000007
#define LD long long double
#define bpc __builtin_popcount
#define gentum getnum
using namespace std;

inline ll getnum()
{
    char c = getchar();
    ll num,sign=1;
    for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
    for(num=0;c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}

ll A[100004];
set<pii> Set;

int main()
{
    int n=getnum(),m=getnum(),l=gentum();

    for(int i=1;i<=n;i++)
    {
        A[i]=getnum();
    }

    for(int i=1;i<=n;i++)
    {
        if(A[i]<=l)continue;
        int r=i;
        while(A[r]>l)r++;

        Set.insert(mp(i,r));
        i=r;
    }

    for(int i=1;i<=m;i++)
    {
        int t=getnum();

        if(t==1)
        {
            ll x=getnum(),y=getnum();

            if(A[x]<=l)
            {
                A[x]+=y;
                if(A[x]>l)
                {
                    pii xx=mp(x,x+1);                    
                    Set.insert(xx);
                    auto it=Set.find(xx);

                    if(it!=Set.begin())
                    {
                        auto sit=it;
                        sit--;

                        if((*sit).ss==(*it).ff)
                        {
                            pii temp=mp((*sit).ff,(*it).ss);
                            Set.erase(sit);
                            Set.erase(xx);
                            Set.insert(temp);
                            xx=temp;
                        }
                    }

                    it=Set.find(xx);
                    auto sit=it;
                    sit++;
                    if(sit!=Set.end())
                    {
                        if((*sit).ff==(*it).ss)
                        {
                            pii temp=mp((*it).ff,(*sit).ss);
                            Set.erase(sit);
                            Set.erase(xx);
                            Set.insert(temp);
                            xx=temp;
                        }
                    }
                }
            }
        }
        else
        {
            printf("%d\n",(int)Set.size());
        }
    }
}
