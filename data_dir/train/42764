		//	   - -- --- ---- -----be name khoda----- ---- --- -- -		\\

#include <bits/stdc++.h>
using namespace std;

inline int in() { int x; scanf("%d", &x); return x; }
const int N = 3003;

int d[N][N], n, m, s1, t1, l1, s2, t2, l2;
int q[N], l, r;
vector <int> g[N];

void bfs(int v, int *d)
{
	fill(d, d + n + 1, 1e9);
	d[v] = l = r = 0;
	q[r++] = v;
	while(l < r)
	{
		int v = q[l++];
		for(int u : g[v])
			if(d[u] == 1e9)
			{
				d[u] = d[v] + 1;
				q[r++] = u;
			}
	}
}

int main()
{
	cin >> n >> m;
	for(int i = 0; i < m; i++)
	{
		int u = in(), v = in();
		g[v].push_back(u);
		g[u].push_back(v);
	}
	cin >> s1 >> t1 >> l1;
	cin >> s2 >> t2 >> l2;
	for(int i = 1; i <= n; i++)
		bfs(i, d[i]);
	if(d[s1][t1] > l1 || d[s2][t2] > l2)
	{
		cout << -1 << endl;
		return 0;
	}
	int ans = d[s1][t1] + d[s2][t2];
	for(int l = 1; l <= n; l++)
		for(int r = 1; r <= n; r++)
		{
			int d1 = min(d[s1][l] + d[t1][r] + d[l][r]
						,d[t1][l] + d[s1][r] + d[l][r]);
			int d2 = min(d[s2][l] + d[t2][r] + d[l][r]
						,d[t2][l] + d[s2][r] + d[l][r]);
			if(d1 <= l1 && d2 <= l2)
				ans = min(ans, d1 + d2 - d[l][r]);
		}
	cout << m - ans << endl;
}
