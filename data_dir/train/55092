//const int N = 105;
//int dist[N][N];
//void _(){
//    memset(dist,0x3f,sizeof dist);
//    int n;
//    cin >> n;
//    rep(i,1,n){
//        rep(j,1,n){
//            char c;
//            cin >> c;
//            if(c == '1')
//                dist[i][j] = 1;
//        }
//        dist[i][i] = 0;
//    }
//    rep(k,1,n)
//        rep(i,1,n)
//            rep(j,1,n)
//                dist[i][j] = min(dist[i][j],dist[i][k]+dist[k][j]);
//    int m;
//    cin >> m;
//    vi p(m);
//    cin >> p;
//    vi dp(m,MOD);
//    vi last(m,-1);
//    dp[0] = 1;
//    rep(j,1,m-1)
//        rep(i,max(0,j-n),j-1){
//            if(dist[p[i]][p[j]] == j-i){
//                if(dp[j] > dp[i]+1){
//                    dp[j] = dp[i]+1;
//                    last[j] = i;
//                }
//            }
//        }
//    vi ans;
//    int t = m-1;
//    assert(dp[m-1] < MOD);
//    while(t > 0){
//        ans.pb(p[t]);
//        t = last[t];
//    }
//    ans.pb(p[0]);
//    reverse(all(ans));
//    print(sz(ans));
//    print(ans);
//}
//
#include <cstring>
#include <iomanip>
#include <algorithm>
#include <cassert>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define pb push_back
#define REP_INT(i,l,r) for(int i = l; i <= r; ++i)
#define GET_REP_MACRO(_1,_2,_3,_4,NAME,...) NAME
#define rep(...) GET_REP_MACRO(__VA_ARGS__,REP_ANY,REP_INT)(__VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef vector<int> vi;
const ll MOD = 1e9 + 7;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
T1 istream& operator>>(istream& stream, vector<T>& t){
    return read(all(t), stream);
}
T1 istream& read(T b, T e, istream& stream){
    for(T it = b; it != e; ++it)
        stream >> *it;
    return stream;
}
T1 void print(T x, string end = "\n"){
    cout << x << end;
}
T1 ostream& print(T b, T e, string sep = " ", ostream& stream = cout){
    for(T it = b; it != e; ++it){
        stream << *it;
        if(it + 1 != e)
            stream << sep;
    }
    return stream;
}
T1 void print(vector<T> arr, string sep = " "){
    if(arr.empty()){
        return;
    }
    print(arr.begin(), arr.end(), sep);
    cout << '\n';
}
const int N = 105;
int dist[N][N];
void _(){
    memset(dist,0x3f,sizeof dist);
    int n;
    cin >> n;
    rep(i,1,n){
        rep(j,1,n){
            char c;
            cin >> c;
            if(c == '1')
                dist[i][j] = 1;
        }
        dist[i][i] = 0;
    }
    rep(k,1,n)
        rep(i,1,n)
            rep(j,1,n)
                dist[i][j] = min(dist[i][j],dist[i][k]+dist[k][j]);
    int m;
    cin >> m;
    vi p(m);
    cin >> p;
    vi dp(m,MOD);
    vi last(m,-1);
    dp[0] = 1;
    rep(j,1,m-1)
        rep(i,max(0,j-n),j-1){
            if(dist[p[i]][p[j]] == j-i){
                if(dp[j] > dp[i]+1){
                    dp[j] = dp[i]+1;
                    last[j] = i;
                }
            }
        }
    vi ans;
    int t = m-1;
    assert(dp[m-1] < MOD);
    while(t > 0){
        ans.pb(p[t]);
        t = last[t];
    }
    ans.pb(p[0]);
    reverse(all(ans));
    print(sz(ans));
    print(ans);
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        _();
}
