#include <bits/stdc++.h>

using namespace std;

#define MAX 200005
#define INF 12345678

int dp[MAX][30][2];
string str;
int n;

int calc(int pos, int last, int sz)
{
    if(pos == n){
        if(sz == 0) return 0;
        else return INF;
    }
    if(dp[pos][last][sz] != -1) return dp[pos][last][sz];
    int nows = str[pos]-'a';
    int ret = INF;
    if(nows == last && sz == 1){
        ret = min(ret, 1+calc(pos+1, last, sz));
    }
    else {
        ret = min(ret, 1+calc(pos+1, last, sz));
        ret = min(ret, calc(pos+1, nows, 1-sz));
    }
    return dp[pos][last][sz] = ret;
}

string ans = "";

void gen(int pos, int last, int sz)
{
    if(pos == n) return;
    int nows = str[pos]-'a';
    if(nows == last && sz == 1) gen(pos+1, last, sz);
    else {
        int ret1 = 1+calc(pos+1, last, sz);
        int ret2 = calc(pos+1, nows, 1-sz);
        if(ret1<ret2) gen(pos+1, last, sz);
        else {
            ans += str[pos];
            gen(pos+1, nows, 1-sz);
        }
    }
}

int main()
{
    memset(dp, -1, sizeof dp);
    scanf("%d", &n);
    cin >> str;
    int k = calc(0, 26, 0);
    cout << k << endl;
    gen(0, 26, 0);
    cout << ans << endl;
}
