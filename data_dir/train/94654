#include <bits/stdc++.h>
using namespace std;
#define eb emplace_back
#define emp emplace
#define fi first
#define se second
typedef long long ll;
typedef pair<int, int> ii;

const int N = 112345;

int n, m, k;
int uf[N], cnt[N];
vector<int> spe;
vector<int> ele[N];
vector<tuple<int,int,int>> edg;
int ans;

int find(int x) {
	if (uf[x] < 0) return x;
	else return uf[x] = find(uf[x]);
}

void uni(int a, int b, int p) {
	int aa = find(a), bb = find(b);

	if (uf[aa] > uf[bb]) swap(aa, bb);

	uf[aa] += uf[bb];
	uf[bb] = aa;

	if (cnt[aa] and cnt[bb] and cnt[aa]+cnt[bb] == spe.size()) ans = p;

	cnt[aa] += cnt[bb];
	cnt[bb] = 0;
}

int main(void) {
	ios_base::sync_with_stdio(false); cin.tie(0);

	memset(uf, -1, sizeof uf);

	cin >> n >> m >> k;

	for (int i = 0; i < k; i++) {
		int x; cin >> x;
		ele[x].eb(x);
		cnt[x] = 1;
		spe.eb(x);
	}

	for (int i = 0; i < m; i++) {
		int a, b, p; cin >> a >> b >> p;
		edg.eb(p, a, b);
	}

	sort(edg.begin(), edg.end());

	for (int i = 0; i < m; i++) {
		int a, b, p; tie(p,a,b) = edg[i];
		if (find(a) != find(b)) {
			uni(a, b, p);
		}
	}

	for (int i = 0; i < k; i++) cout << ans<< " ";
	cout << endl;

	return 0;
}

