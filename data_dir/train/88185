#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <cstdlib>
#include <cassert>
#include <cmath>
#include <string>
#include <queue>
#include <stack>
#include <iomanip>
#include <set>
#include <deque>
#include <fstream>

using namespace std;

#define forn(i,n) for (int i = int(0); i < int(n); i++)
#define forb(i,n) for (int i = int(n-1); i >= int(0); i--)
#define for1(i,n) for (int i = int(1); i <= int(n); i++)
#define fore(i,a,n) for (int i = int(a); i < int(n); i++)

#define pb push_back
#define mp make_pair
#define fr first
#define sc second
#define sz size()
#define sqr(x) ((x)*(x))
#define cube(x) ((x)*(x)*(x))
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define min3(a, b, c) min(a, min(b, c))
#define max3(a, b, c) max(a, max(b, c))
#define dist(x1, y1, x2, y2) sqrt(ld (sqr(x1 - x2) + sqr(y1 - y2)))
  
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
 
const int maxn = 100;
const int MAXN = 100000;
const int logn = 12;
const int inf = 2e9;
const int alpha = 26;
const int my_hash = 31;
const long long base = 1000000000;
const long long my_mod = 2674894331;
const long long l_inf = 4e18;
const long long mod = 1000000007;
const double pi = acos(-1.0);
const double eps = 1e-8;

int rec(int pos, vector<pair<ll, ll> > x, const vector<pair<ll, ll> > &a) {
	if (pos == 4) {
		ll minDist = l_inf, maxDist = 0;
		for (int i = 0; i < 4; i++) {
			for (int j = 0; j < 4; j++) {
				ll dist = sqr(ll (x[i].fr - x[j].fr)) + sqr(ll (x[i].sc - x[j].sc));
				if (i != j) {
					minDist = min(minDist, dist);
					maxDist = max(maxDist, dist);
				}
			}
		}
		int cntA = 0, cntB = 0;
		for (int i = 0; i < 4; i++) {
			for (int j = i + 1; j < 4; j++) {
				ll dist = sqr(ll (x[i].fr - x[j].fr)) + sqr(ll (x[i].sc - x[j].sc));
				if (dist == minDist)
					cntA++;
				if (dist == maxDist)
					cntB++;
			}
		}
		return cntA == 4 && cntB == 2 && 2 * 1ll * minDist == maxDist ? 0 : inf;
	}
	ll X = a[pos].fr - x[pos].fr, Y = a[pos].sc - x[pos].sc;
	int val_1 = min(inf, rec(pos + 1, x, a));
	x[pos].fr = a[pos].fr + Y;
	x[pos].sc = a[pos].sc - X;
	int val_2 = min(inf, 1 + rec(pos + 1, x, a));
	x[pos].fr = a[pos].fr + X;
	x[pos].sc = a[pos].sc + Y;
	int val_3 = min(inf, 2 + rec(pos + 1, x, a));
	x[pos].fr = a[pos].fr - Y;
	x[pos].sc = a[pos].sc + X;
	int val_4 = min(inf, 3 + rec(pos + 1, x, a));
	return min(min(val_1, val_2), min(val_3, val_4));
}

int main() {
	ios_base::sync_with_stdio(0);
	int n;
	cin >> n;
	for (int i = 0; i < n; i++) {
		vector<pair<ll, ll> > x(4), a(4);
		for (int j = 0; j < 4; j++)
			cin >> x[j].fr >> x[j].sc >> a[j].fr >> a[j].sc;
		int ans = rec(0, x, a);
		printf("%d\n", ans == inf ? -1 : ans);
	}
}