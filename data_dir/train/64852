/************************* In the name of Allah *************************/
#include <bits/stdc++.h>
using namespace std;

typedef long long       ll;
typedef long double     ld;
typedef string          str;
typedef pair<ll,ll>     pll;

#define F               first
#define S               second
#define pb              push_back
#define sep             ' '
#define endl            '\n'
#define fast_io         ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);

const ll MOD = 1e9 + 7,
         INF = 1e18,
         MAXN = 1e5 + 10;

ll c[MAXN], mark[MAXN], ans = 1;
vector<ll> g[MAXN];

void dfs(ll u, ll C){
    mark[u] = 1;
    if (c[u] != C){
        ans = 0;
        return ;
    }
    for (ll v : g[u]){
        if (!mark[v]){
            dfs(v, C);
        }
    }
    return ;

}

int main(){
    fast_io
    ll n, u, v;
    cin >> n;
    for (ll i = 1; i < n; i++){
        cin >> u >> v;
        g[u].pb(v);
        g[v].pb(u);
    }
    for (ll i = 1; i <= n; i++){
        cin >> c[i];
    }
    u = -1; v = -1;
    for (ll i = 1; i <= n; i++){
        for (ll j : g[i]){
            if (c[i] != c[j]){
                u = i; v = j;
            }
        }
    }
    if (u == -1){
        cout << "YES" << endl << 1;
        return 0;
    }
    fill(mark, mark + MAXN, 0);
    mark[u] = 1;
    for (ll i : g[u]){
        dfs(i, c[i]);
    }
    if (ans){
        cout << "YES" << endl << u;
        return 0;
    }
    fill(mark, mark + MAXN, 0);
    mark[v] = 1;
    ans = 1;
    for (ll i : g[v]){
        dfs(i, c[i]);
    }
    if (ans){
        cout << "YES" << endl << v;
        return 0;
    }
    cout << "NO";
    return 0;
}

/*
 __  __       _         _ _  _____ _           _                __ _
|  \/  |     | |       | (_)/ ____| |         | |              / _(_)
| \  / | __ _| |__   __| |_| (___ | |__   ___ | | _____  _   _| |_ _
| |\/| |/ _` | '_ \ / _` | |\___ \| '_ \ / _ \| |/ / _ \| | | |  _| |
| |  | | (_| | | | | (_| | |____) | | | | (_) |   < (_) | |_| | | | |
|_|  |_|\__,_|_| |_|\__,_|_|_____/|_| |_|\___/|_|\_\___/ \__,_|_| |_|
*/

