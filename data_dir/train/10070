#include <bits/stdc++.h>

using namespace std;

#define scs(a) scanf("%s",a)
#define sc1(a) scanf("%d",&a)
#define sc2(a,b) scanf("%d %d",&a,&b)
#define sc3(a,b,c) scanf("%d %d %d",&a,&b,&c)
#define sc1l(a) scanf("%lld",&a)
#define sc2l(a,b) scanf("%lld %lld",&a,&b)
#define sc3l(a,b,c) scanf("%lld %lld %lld",&a,&b,&c)
#define sc1d(a) scanf("%lf",&a)
#define sc2d(a,b) scanf("%lf %lf",&a,&b)
#define sc3d(a,b,c) scanf("%lf %lf %lf",&a,&b,&c)
#define pfs(a) printf("%s",a)
#define pf1(a) printf("%d",a)
#define pf2(a,b) printf("%d %d",a,b)
#define pf1l(a) printf("%lld",a)
#define pf2l(a,b) printf("%lld %lld",a,b)
#define pf1d(a) printf("%lf",a)
#define pf2d(a,b) printf("%lf %lf",a,b)

#define br printf("\n")
#define ok printf("ok\n");

#define pf printf
#define sc scanf
#define pb push_back
#define mp make_pair
#define F first
#define S second

#define pii pair<int,int>
#define pll pair<long long,long long>


#define mem0(a) memset(a,0,sizeof(a))
#define mem1(a) memset(a,-1,sizeof(a))

#define read freopen("in.txt","r",stdin)
#define write freopen("out.txt","w",stdout)

const double PI=acos(-1.0);

long long  gcd(long long x,long long y){return !y?(long long)abs(x):gcd(y,x%y);}  //returns always positive gcd

long long lcm(long long a,long long b){return ((long long)abs((a/gcd(a,b))*b));} //returns always positive lcm

long long bigmod(long long b,long long p,long long m){              //for both positive and negative base
    if(!p)return 1%m;
    else if(p&1)return (((b%m)+m)%m*bigmod(b,p-1,m))%m;
    else {long long ret=bigmod(b,p/2,m);return (ret*ret)%m;}
}
// inverse will exist if and only if gcd(a,m) is 1
long long inverse(long long a,long long m){return bigmod(a,m-2,m);}  //if Mod is prime
long long extended(long long a,long long m){
    long long oldr=a,r=m,oldans=1,ans=0,quotient;
    while(r){
        quotient=oldr/r;
        oldr=oldr-r*quotient;
        swap(oldr,r);
        oldans=oldans-ans*quotient;
        swap(oldans,ans);
    }
    return ((oldans%m)+m)%m;
}

template<class t1,class t2>  bool checkBit(t1 &mask,t2 i){return mask&((t1)1<<i);}
template<class t1,class t2>  void setBit(t1 &mask,t2 i){mask=mask|((t1)1<<i);}
template<class t1,class t2>  void resetBit(t1 &mask,t2 i){mask=mask&~((t1)1<<i);}

typedef long long ll;
const long long inf=(ll)1e8;
const long long mod=(ll)1e9+7;


int tree[20*(int)1e5+5];

void update(int root,int b,int e,int idx,int val){
    if(b>idx || e<idx)return;
    if(b>=idx && e<=idx){
        tree[root]=val;
        return;
    }
    int m=(b+e)/2;
    update(root*2,b,m,idx,val);
    update(root*2+1,m+1,e,idx,val);
    tree[root]=gcd(tree[root*2],tree[root*2+1]);
}

int query(int root,int b,int e,int l,int r,int g){
    if(b>r || e<l)return 0;
    if(b>=l && e<=r){
        if(tree[root]%g==0)return 0;
        if(b==e)return 1;
    }
    int m=(b+e)/2;

    int ret1=0,ret2=0;
    ret1=query(root*2,b,m,l,r,g);
    if(ret1<2)ret2=query(root*2+1,m+1,e,l,r,g);
    return ret1+ret2;
}

int main(){
    int n;
    sc1(n);

    for(int i=1,x;i<=n;i++){
        sc1(x);
        update(1,1,n,i,x);
        //ok;
    }

    int q;
    sc1(q);
    while(q--){
        int t;
        sc1(t);
        if(t==1){
            int l,r,g;
            sc3(l,r,g);
            int ret=query(1,1,n,l,r,g);
            if(ret<=1)pf("YES\n");
            else pf("NO\n");
        }
        else {
            int idx,val;
            sc2(idx,val);
            update(1,1,n,idx,val);
        }
    }

    return 0;
}
