// Enjoy your stay.

#include <bits/stdc++.h>

#define long long long
#define LOOPVAR_TYPE long

#define all(x) (x).begin(), (x).end()
#define sz(x) ((LOOPVAR_TYPE)(x).size())
#define foreach(it, X) for(__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
#define _overload3(_1, _2, _3, name, ...) name
#define _rep(i, n) _rep2(i, 0, n)
#define _rep2(i, a, b) for(LOOPVAR_TYPE i = (LOOPVAR_TYPE)(a); i < (LOOPVAR_TYPE)(b); i++)
#define rep(...) _overload3(__VA_ARGS__, _rep2, _rep, _1)(__VA_ARGS__)

#define fir first
#define sec second
#define ite iterator
#define mp make_pair
#define mt make_tuple
#define pb push_back

const double EPS = 1e-9;
const double PI = acos(-1.0);
const long INF = 1070000000LL;
const long MOD = 1000000007LL;

using namespace std;

typedef istringstream iss;
typedef pair<long, long> pi;
typedef stringstream sst;
typedef vector<long> vi;

int n, m;
char c[55][55];

int used[55][55];
int dy[] = {0,1,0,-1};
int dx[] = {1,0,-1,0};
int dfs(int y,int x,int py,int px){
	used[y][x] = 1;
	rep(d,4){
		int ny = y + dy[d];
		int nx = x + dx[d];
		if(c[ny][nx] && c[ny][nx] == c[y][x]){
			if(used[ny][nx]){
				if(ny != py || nx != px){
					return 1;
				}
			}else{
				if(dfs(ny,nx,y,x)) return 1;
			}
		}
	}
	return 0;
}

int main(){
	cin.tie(0);
	ios_base::sync_with_stdio(0);
	
	cin>>n>>m;
	rep(i,1,n+1) cin>>c[i]+1;
	rep(i,1,n+1)rep(j,1,m+1)if(used[i][j] == 0){
		if(dfs(i,j,-1,-1)) return cout<<"Yes",0;
	}
	cout<<"No";
}
