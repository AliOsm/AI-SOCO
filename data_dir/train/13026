#include<bits/stdc++.h>
using namespace std;
#define ll long long
int count1[400000][26];
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);cout.tie(0);
	int n,m;
	cin>>n>>m;
	string s;
	cin>>s;
	vector<int> adj[n];
	set<int> adj1[n];
	for(int i=0;i<m;i++)
	{
		int x,y;
		cin>>x>>y;
		x--;y--;
		if(adj1[x].find(y)==adj1[x].end())
		{
			adj[x].push_back(y);
			for(int j=0;j<26;j++)
				count1[y][j]++;
		}
		adj1[x].insert(y);
	}
	int ans[26]={0};
	int glob=0,ind=0;
	for(int i=0;i<26;i++)
	{
		int maxval[n]={0};
		queue<int> q;
		int visited=0;
		for(int j=0;j<n;j++)
		{
			if(!count1[j][i])
			{
				q.push(j);
				int val=0;
				if((int)(s[j]-'a')==i)
					val++;
				maxval[j]=val;
			}	
		}
		while(!q.empty())
		{
			int a=q.front(),b=maxval[a];
			q.pop();
			visited++;
			for(int j=0;j<adj[a].size();j++)
			{
				int val=b;
				if((int)(s[adj[a][j]]-'a')==i)
					val++;
				count1[adj[a][j]][i]--;
				if(count1[adj[a][j]][i]<=0)
					q.push(adj[a][j]);
				maxval[adj[a][j]]=max(val,maxval[adj[a][j]]);
			}
		}
		if(visited<n)
		{
			cout<<-1<<endl;
			return 0;
		}
		for(int i1=0;i1<n;i1++)
			ans[i]=max(ans[i],maxval[i1]);
		if(ans[i]>glob)
		{
			glob=ans[i];
			ind=i;
		}
	}
	cout<<glob<<endl;
}