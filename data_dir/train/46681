#include <bits/stdc++.h>

using namespace std;

const int N = 1e6 + 6, M = 7e4 + 6;

int nxt[N][10];
int vis[N], visID;
int en[N];
int sz = 1;

void insert(string &s) {
	int node = 0;
	for (int i = 0; i < s.size(); ++i) {
		if (!nxt[node][s[i] - '0'])
			nxt[node][s[i] - '0'] = sz++;
		node = nxt[node][s[i] - '0'];
		if (vis[node] != visID)
			++en[node];
		vis[node] = visID;
	}
}

int find(string &s) {
	int node = 0;
	for (int i = 0; i < s.size(); ++i) {
		if (!nxt[node][s[i] - '0'])
			return false;
		node = nxt[node][s[i] - '0'];
	}
	return en[node];
}
char s[M][11];
int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; ++i) {
		scanf("%s", s[i]);
		++visID;
		for (int j = 0; j < 9; ++j) {
			string cur;
			for (int k = j; k < 9; ++k) {
				cur += s[i][k];
				insert(cur);
			}
		}
	}
	for (int i = 0; i < n; ++i) {
		string result(10, '.');
		for (int j = 0; j < 9; ++j) {
			string cur;
			for (int k = j; k < 9; ++k) {
				cur += s[i][k];
				if (find(cur) == 1 && result.size() > cur.size()) {
					result = cur;
				}
			}
		}
		printf("%s\n", result.c_str());
	}
	return 0;
}
