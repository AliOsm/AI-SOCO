#pragma GCC optimize("Ofast")
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define int long long
#define ll long long
//#define int  unsigned long long
#define pb push_back
//#define double long double

using namespace std;
using namespace __gnu_pbds;
typedef  tree< int , null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int mod = 1e9 + 7;
const int N = 1100000;
const int K = 20;
int p[N], s[N], cnt[N], dp[N], b[N];
main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
   // freopen("input.txt", "r", stdin);
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++) cin >> s[i];
    for (int i = 2; i <= n; i++) cin >> p[i];
    for (int i = n; i >= 2; i--) s[p[i]] += s[i];;
    for (int i = 1; i <= n; i++){
        int x = s[1] / __gcd(s[i], s[1]);
        if (x <= n) cnt[x]++;
    }
    vector <int> f;
    for (int i = 1; i <= n; i++){
        for (int j = i; j <= n; j += i){
            b[j] += cnt[i];
        }
    }
    for (int i = 1; i <= n; i++){
        if (b[i] == i){
            f.pb(s[1] / i);
        }
    }
    sort(f.begin(), f.end());
    for (int i = 0; i < f.size(); i++){
        dp[i] = 1;
        for (int j = 0; j < i; j++){
            if (f[i] % f[j] == 0){
                dp[i] = (dp[j] + dp[i]) % mod;
            }
        }
    }
    cout << dp[f.size() - 1];
}
