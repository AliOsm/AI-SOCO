#include <bits/stdc++.h>

using namespace std;
#define ll long long
#define endl '\n'
const int N=3e5+5;
ll a[3][N];
ll cum[2][3][N];
ll c[3][N];
int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    int m;
    ll cnt=0,all,tmp=0,ans=0,x,cur;
    cin>>m;
    for(int i=1;i<=2;i++)
        for(int j=1;j<=m;j++)
        {
            cin>>a[i][j];
            c[i][j]=a[i][j];
        }
    for(int j=1;j<=m;j++)
    {
        c[1][j]+=c[1][j-1];
        c[2][j]+=c[2][j-1];
        cum[0][1][j]=(j-1)*a[1][j];
        cum[0][2][j]=((m*2-1)-(j-1))*a[2][j];
    }
    cum[1][2][1]=a[2][1];
    for(int j=2;j<=m;j++)
    {
        cum[1][2][j]=j*a[2][j];
        cum[1][1][j]=(m*2+1-j)*a[1][j];
    }

    for(int k=0;k<=1;k++)
        for(int i=1;i<=2;i++)
            for(int j=1;j<=m;j++)
                cum[k][i][j]+=cum[k][i][j-1];


    for(int j=1;j<=m;j++)
    {
        for(int i=1;i<=2;i++)
        {
            cur=(c[1][m]-c[1][j-1])+(c[2][m]-c[2][j-1]);
            if(i%2&&j%2)
            {
                all=(cum[0][1][m]-cum[0][1][j-1])+(cum[0][2][m]-cum[0][2][j-1]);
                ans=max(ans,tmp+all+cur*(j-1));
                x=tmp+all+cur*(j-1);
            }
            if(i%2==0&&j%2==0)
            {
                all=(cum[1][1][m]-cum[1][1][j-1])+(cum[1][2][m]-cum[1][2][j-1]);
                ans=max(ans,tmp+all+cur*(j-2));
                x=tmp+all+cur*(j-2);
            }
        }
        if(j%2)
        {
            tmp+=(cnt++)*a[1][j];
            tmp+=(cnt++)*a[2][j];
        }
        else
        {
            tmp+=(cnt++)*a[2][j];
            tmp+=(cnt++)*a[1][j];
        }
    }
    ans=max(ans,tmp);
    cout<<ans<<endl;
    return 0;
}
