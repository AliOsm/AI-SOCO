#include <stdio.h>
#include <queue>
#include <algorithm>
#include <vector>
#define pb push_back
#define MAXN 300005
using namespace std;

int d[MAXN];
int change[MAXN];
vector <int> update;
priority_queue <pair <int, pair <int, int> > > pq;

int main(void) {
    int n, m;
    int u, v, w;
    int r = 0;

    scanf(" %d %d", &n, &m);
    for (int i = 1; i <= n; i++) {
        d[i] = 0;
        change[i] = 0;
    }
    for (int i = 0; i < m; i++) {
        scanf(" %d %d %d", &u, &v, &w);
        pq.push(make_pair(-w, make_pair(u, v)));
    }

    while(!pq.empty()) {
        update.clear();
        w = -pq.top().first;
        u = pq.top().second.first;
        v = pq.top().second.second;
        pq.pop();
        update.pb(v);
        change[v] = max(change[v], d[u] + 1);
        while(!pq.empty() && -pq.top().first == w) {
            u = pq.top().second.first;
            v = pq.top().second.second;
            change[v] = max(change[v], d[u] + 1);
            update.pb(v);
            pq.pop();
        }

        for (int i = 0; i < (int)update.size(); i++) {
            int next = update[i];
            d[next] = max(d[next], change[next]);
            r = max(r, d[next]);
        }
    }
    printf("%d\n", r);

    return 0;
}