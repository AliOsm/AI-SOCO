#include <stdio.h>
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <map>

using namespace std;

#define task "a"

typedef long long ll;
typedef pair<int, int> pii;
#define mp make_pair
#define fi first
#define se second

int abs_(int a) {return max(a, -a);}

int gcd(int a, int b) {
    return b == 0 ? a : gcd(b, a % b);
}

struct Node {
    ll p, q;
    Node(ll P, ll Q) {
        p = P;
        q = Q;
    }

};

bool operator < (Node a, Node b) {
    return a.p * b.q < a.q * b.p;
}

int main() {
   // freopen(task".in", "r", stdin);
   // freopen(task".out", "w", stdout);
    int n;
    cin >> n;
    map<Node, ll> M;
    Node L(-(ll)2e9, 1ll);
    for (int i = 0; i < n; i++) {
        int k, b;
        cin >> k >> b;
        if (k != 0) {
            int e = b;
            int f = k;
            if (f < 0) {
                e = -e;
                f = -f;
            }
            Node p(e, f);
            if (k < 0) {
            //    M[L] += k;
                M[p] -= k;
            } else {
                M[p] += k;
            }
        }
    }
    int res = 0;
    for (auto a : M) {
        //printf("%.2f %d\n", (double)a.fi.p / (double)a.fi.q, a.se);
        if (a.se) {
            res++;
        }
    }
    cout << res << endl;
    return 0;
}
