#include <iostream>
#include <stdio.h>
#include <string>
#include <memory.h>
#include <set>
#include <map>
#include <vector>
#include <queue>
#include <time.h>
#include <assert.h>
#include <cmath>
#include <stack>
#include <string.h>
#include <sstream>
#include <algorithm>
using namespace std;
typedef long long ll;
char g[15][108];
int dp[15][108][2][1501];
int R, C;
int calc(int r, int c, int d,int rem) {
	if (r == -1)
		return rem ? 1e9 : 0;
	if (c == -1 || c == C || r == R)
		return 1e9;
	if (g[r][c] == '1')
		--rem;
	if (!rem)
		return 0;
	int &ret = dp[r][c][d][rem];
	if (ret != -1)
		return ret;
	ret = 1 + min(c + calc(r - 1, 0, 1, rem), (C - c - 1) + calc(r - 1, C - 1, 0, rem));
	ret = min(ret, 1 + calc(r, c + (d ? 1 : -1), d, rem));
	return ret;
}
int main()
{
	scanf("%d%d", &R, &C);
	C += 2;
	int s = 0;
	for (int i = 0; i < R; ++i) {
		scanf("%s", g[i]);
		for (int j = 0; j < C; ++j)
			s += g[i][j] == '1';
	}
	memset(dp, -1, sizeof(dp));
	printf("%d\n", calc(R - 1, 0, 1, s));
	return 0;
}