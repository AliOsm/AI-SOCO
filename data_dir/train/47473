
#include<bits/stdc++.h>


using namespace std;

using ll   = long long;
using ii   = pair   < int , int >;
using i3   = pair   < int , ii  >;
using li   = pair   < ll  , int >;
using lii  = pair   < ll  , ii  >;
using pll  = pair   < ll  , ll  >;
using vi   = vector < int       >;
using vl   = vector < ll        >;
using vii  = vector < ii        >;
using vli  = vector < li        >;
using vpll = vector < pll       >;
using vi3  = vector < i3        >;
using vlii = vector < lii       >;


const int N = 500 + 5;
const ll INF = 1e17 + 7;
const double eps = 1e-9 , PI = acos(-1);


int n , m , k = 0;

char a[N][N];
bool vis[N][N];

int dx[] = {1 , -1 , 0 ,  0};
int dy[] = {0 ,  0 , 1 , -1};

stack < ii > stk;
vector < string > ans;

string get(char ch , int x , int y){
    string s = "";
    s += ch;
    s += " ";
    s += to_string(x+1);
    s += " ";
    s += to_string(y+1);

    return s;
}

bool inside(int x , int y){ return x >= 0 && x < n && y >= 0 && y < m; }

void dfs(int x , int y){

    vis[x][y] = 1;

    k ++;
    ans.push_back(get('B' , x , y));
    stk.push({x , y});

    for(int i = 0 ; i < 4 ; i ++){
            int nx = x + dx[i];
            int ny = y + dy[i];

            if(!inside(nx , ny))continue;
            if(a[nx][ny] == '#')continue;
            if(vis[nx][ny])continue;

            dfs(nx , ny);
    }
}

void fuck(int x , int y){
    dfs(x , y);

    while( !stk.empty() ){
            int x2 = stk.top().first;
            int y2 = stk.top().second;
            stk.pop();

            if(x2 == x && y2 == y)break;

            k += 2;
            ans.push_back(get('D' , x2 , y2));
            ans.push_back(get('R' , x2 , y2));
    }
}

void solve(int testCase){

    scanf("%d %d" , &n , &m);

    for(int i = 0 ; i < n ; i ++){
            scanf("%s" , a[i]);
    }

    for(int i = 0 ; i < n ; i ++){
            for(int j = 0 ; j < m ; j ++){
                    if(a[i][j] == '.' && !vis[i][j]){
                            fuck(i , j);
                    }
            }
    }

    printf("%d\n" , k);
    for(string A : ans){
            printf("%s\n" , A.c_str());
    }
}

main(){

    int t = 1;
    // scanf("%d" , &t);

    for(int testCase = 1 ; testCase <= t ; testCase ++){
            solve(testCase);
    }

    return 0;
}
