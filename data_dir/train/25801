//Solution by Tima
#include <bits/stdc++.h>
 
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
#define all(x) x.begin(), x.end()
 
using namespace std;    
const int N = int(3e5) + 12, mod = int(1e9)  + 7; 

int n,m,a[N],l[N],r[N];

map <int,int> ma;

void solve(){
	scanf("%d%d", &n, &m);
	for(int i = 1; i <= m; i++){
		scanf("%d", &a[i]);
	}
	if(n == 1){
		puts("0");
		return;
	}
	for(int i = m; i > 0; i--){
		ma[a[i] + i] = ma[a[i] + i + 1] + 1;
	}
	for(int i = 1; i <= n; i++){
		l[i] = max(i - m - 1 + ma[i], 1);
	}
	ma.clear();
	for(int i = m; i > 0; i--){
		ma[a[i] - i] = ma[a[i] - i - 1] + 1;
	}
	for(int i = 1; i <= n; i++){
		r[i] = min(i + m + 1 - ma[i], n);
	}

	ll ans = 0;
	for(int i = 1; i <= n; i++) {
		ans += r[i] - l[i] + 1;
	}
	printf("%lld\n", ans);

}

int main () {
	int T = 1;
	//scanf("%d", &T);

	while(T--){
		solve();
	}

return 0;
}