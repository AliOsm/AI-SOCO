#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

typedef long long ll;
using namespace std;
using namespace __gnu_pbds;

template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(int i = (a); i <= (b); i++)
#define fd(i,a,b) for(int i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<int,int>
#define SZ(x) ((int)x.size())
#define vii vector<pair<int,int>>

const int INF = 1000000002;
const ll INFLL = 100000000000000000ll;
const ll MOD = 1000003;

// ----------------------------------------------------------------------------------------------------------

int F[100005];
string S, T;

int main()
{
    cin >> S >> T;
    F[0] = -1, F[1] = 0;
    f(i,2,SZ(T))
    {
        F[i] = F[i-1];
        while(F[i] >= 0 && T[F[i]] != T[i-1]) F[i] = F[F[i]];
        F[i]++;
    }
    int ans = 0, mark = -1, match = 0;
    f(i,0,SZ(S)-1)
    {
        while(match >= 0 && S[i] != T[match]) match = F[match];
        match++;
        if(match == SZ(T))
        {
            int l = i - SZ(T) + 1;
            if(l > mark) mark = i, ans++;
            match = F[match];
        }
    }
    cout << ans;
}
