/// i am on fire
#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <set>
#include <map>
#include <vector>
#include <queue>
#include <stack>
#include <string>
#include <string.h>
#include <math.h>
using namespace std;

const int N=100005;
const int M=205;

typedef long long ll;
typedef pair<int,int>ii;
typedef pair<int,ii>node;

int gcd(int a, int b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }

int n,a[N];
int main(){

   //  freopen("test.in","r",stdin);
 //     freopen("A.out","w",stdout);
    scanf("%d",&n);
    for(int i=0;i<n;i++)
        scanf("%d",&a[i]);
    if(n==1){
        cout<<-1;
        return 0;
    }
    sort(a,a+n);
    multiset<int>st;
    set<int>st2;
    for(int i=0;i<n-1;i++)
        st.insert(a[i+1]-a[i]),st2.insert(a[i+1]-a[i]);
    if(st2.size()>2){
        cout<<0;
    }
    else{
         int mx=*(--st.end()),mn=*st.begin();
        if(mx==mn){
            if(a[1]-a[0]==0){
                cout<<1<<endl<<a[0];
            }
            else if(n==2&&(a[1]-a[0])%2==0){
             cout<<3<<endl;
             cout<<2*a[0]-a[1]<<' '<<a[0]+(a[1]-a[0])/2<<' '<<a[n-1]*2-a[n-2];
            }
            else{
             cout<<2<<endl;
             cout<<2*a[0]-a[1]<<' '<<a[n-1]*2-a[n-2];
            }
        }
        else{
             st.erase((--st.end()));
             if(st.find(mx)!=st.end()){
                cout<<0;
                return 0;
             }
             if(mx/2==mn&&mx%2==0){
                cout<<1<<endl;
                for(int i=0;i<n-1;i++){
                    if(a[i+1]-a[i]==mx){
                        cout<<a[i]+mn;
                        break;
                    }
                }
            }
            else
                cout<<0;
        }
    }
    return 0;
}
