#include <cstdio>
int gcd(int x, int y) {
	return y ? gcd(y, x % y) : x;
}
const int N = 1 << 19;
int b[N*2];
void update(int p, int x) {
	b[p+N] = x;
	p += N;
	while (p > 1) {
		p >>= 1;
		b[p] = gcd(b[p+p], b[p+p+1]);
	}
}
int query(int l, int x, int L=0, int R=N, int p=1) {
	if (R <= l) {
		return R;
	}
	if (R - L == 1) {
		return b[p] % x == 0 ? R : L;
	}
	int mid = (L+R)/2, t;
	if (l <= L) {
		if (b[p] % x == 0) {
			return R;
		} else if (b[p+p] % x == 0) {
			return query(l, x, mid, R, p + p + 1);
		} else {
			return query(l, x, L, mid, p + p);
		}
	}
	t = query(l, x, L, mid, p + p);
	if (t == mid) {
		return query(l, x, mid, R, p + p + 1);
	} else {
		return t;
	}
}
int a[500010];
int main() {
	int n, q;
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%d", &a[i]);
		b[i+N] = a[i];
	}
	for (int i = N - 1; i > 0; i--) {
		b[i] = gcd(b[i+i], b[i+i+1]);
	}
	scanf("%d", &q);
	while (q--) {
		int t, l, r, x;
		scanf("%d%d%d", &t, &l, &r);
		--l;
		if (t == 1) {
			scanf("%d", &x);
			int m = query(l, x);
			if (m >= r || query(m + 1, x) >= r) {
				puts("YES");
			} else {
				puts("NO");
			}
		} else {
			update(l, r);
		}
	}
	return 0;
}
