#include <bits/stdc++.h>
#include <ext/hash_map>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

#define REP(i,n) for( (i)=0 ; (i)<(n) ; (i)++ )
#define rep(i,x,n) for( (i)=(x) ; (i)<(n) ; (i)++ )
#define REV(i,n) for( (i)=(n) ; (i)>=0 ; (i)-- )
#define FORIT(it,x) for( (it)=(x).begin() ; (it)!=(x).end() ; (it)++ )
#define foreach(it,c) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();++it)
#define rforeach(it,c) for(__typeof((c).rbegin()) it=(c).rbegin();it!=(c).rend();++it)
#define foreach2d(i, j, v) foreach(i,v) foreach(j,*i)
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define SZ(x) ((int)(x).size())
#define MMS(x,n) memset(x,n,sizeof(x))
#define mms(x,n,s) memset(x,n,sizeof(x)*s)
#define pb push_back
#define mp make_pair
#define NX next_permutation
#define UN(x) sort(all(x)),x.erase(unique(all(x)),x.end())
#define CV(x,n) count(all(x),(n))
#define FIND(x,n) find(all(x),(n))-(x).begin()
#define ACC(x) accumulate(all(x),0)
#define PPC(x) __builtin_popcount(x)
#define LZ(x) __builtin_clz(x)
#define TZ(x) __builtin_ctz(x)
#define mxe(x) *max_element(all(x))
#define mne(x) *min_element(all(x))
#define low(x,i) lower_bound(all(x),i)
#define upp(x,i) upper_bound(all(x),i)
#define NXPOW2(x) (1ll << ((int)log2(x)+1))
#define PR(x) cout << #x << " = " << (x) << endl ;

typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef pair<int, int> pii;

const int OO = (int) 2e9;
const double eps = 1e-9;

int n, k, p, x;
vi odd, even;

int main() {
   std::ios_base::sync_with_stdio(false);
   cin.tie(NULL);
   cout.tie(NULL);
#ifndef ONLINE_JUDGE
// freopen("in.txt","rt",stdin);
// freopen("out.txt","wt",stdout);
#endif
   cin >> n >> k >> p;
   for (int i = 0; i < n; i++) {
      cin >> x;
      if (x & 1)
         odd.pb(x);
      else
         even.pb(x);
   }
   int no = k - p, co = SZ(odd), ce = SZ(even);
   if (co < no || ((co - no) & 1) || ((co - no) / 2 + ce) < p) {
      cout << "NO\n";
      return 0;
   }
   int io = 0, ie = 0;
   cout << "YES\n";
   for (int i = 0; i < no - !p; i++)
      cout << 1 << " " << odd[io++] << endl;
   if (!p) {
      vi to;
      while (ie < ce)
         to.pb(even[ie++]);
      while (io < co)
         to.pb(odd[io++]);
      cout << SZ(to);
      for (int i = 0; i < SZ(to); i++)
         cout << " " << to[i];
      cout << endl;
   }
   int ne = (co - io) / 2 + (ce - ie);
   vi tmp;
   while (ne && ne >= p) {
      if (io < co)
         tmp.pb(odd[io]), tmp.pb(odd[io + 1]), io += 2, ne--;
      else if (ie < ce)
         tmp.pb(even[ie++]), ne--;
   }
   if (SZ(tmp)) {
      cout << SZ(tmp);
      for (int i = 0; i < SZ(tmp); i++)
         cout << " " << tmp[i];
      cout << endl;
   }
   while (io < co)
      cout << 2 << " " << odd[io] << " " << odd[io + 1] << endl, io += 2;
   while (ie < ce)
      cout << 1 << " " << even[ie++] << endl;
   return 0;
}
