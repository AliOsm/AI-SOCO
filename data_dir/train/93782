#include <stdio.h>
#include <bits/stdc++.h>

#define uint unsigned int
#define ll long long
#define ull unsigned long long
#define ld long double
#define rep(i, l, r) for (int i = l; i < r; i++)
#define repb(i, r, l) for (int i = r; i > l; i--)
#define sz(a) (int)a.size()
#define fi first
#define se second
#define mp(a, b) make_pair(a, b)
 
using namespace std;
 
const int N = 100000;
const int inf = (int)1e9 + 1;
const ll big = (ll)1e18 + 1;
const int P = 31;
const int MOD = (int)1e9 + 7;
const int MOD1 = (int)1e9 + 9;
const double eps = 1e-9;
const double pi = atan2(0, -1);

struct circle
{
    ll x, y, r;
    circle() {}
    circle(ll x, ll y, ll r) : x(x), y(y), r(r) {}
    bool in(circle c)
    {
        return c.r > r && (c.x - x) * (c.x - x) + (c.y - y) * (c.y - y) <= c.r * c.r;
    }
};

circle a[N];
vector<int> g[N];

ll ans = 0;

void dfs(int u, int h)
{
    if (h == 0 || h == 1)
        ans += a[u].r * a[u].r;
    else if (h % 2 == 0)
        ans -= a[u].r * a[u].r;
    else
        ans += a[u].r * a[u].r;
    for (int v : g[u])
        dfs(v, h + 1);
}

int main()
{
    //freopen("a.in", "r", stdin);
    //freopen("a.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    //ll TL = 0.95 * CLOCKS_PER_SEC;
    //clock_t time = clock();
    int n;
    cin >> n;
    rep(i, 0, n)
        cin >> a[i].x >> a[i].y >> a[i].r;
    int par[n];
    rep(i, 0, n)
    {
        par[i] = -1;
        rep(j, 0, n)
            if (j != i && a[i].in(a[j]))
                if (par[i] == -1 || a[j].r < a[par[i]].r)
                    par[i] = j;
    }
    vector<int> roots;
    rep(i, 0, n)
        if (par[i] == -1)
            roots.push_back(i);
        else
            g[par[i]].push_back(i);
    for (int i : roots)
        dfs(i, 0);
    cout << fixed << (ld)ans * pi << endl;
    return 0;
}