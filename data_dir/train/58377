#include<bits/stdc++.h>
using namespace std;
#define int long long int
#define double long double
#define pb push_back
#define endl '\n'
#define all(x) (x).begin(),(x).end()
#define F first
#define S second
#define sz(a) (int)((a).size())
#define fuck() cout<<"--------"<<endl
#define see(x) cout<<#x<<" = "<<x<<endl
#define see2(x,y) cout<<#x<<" = "<<x<<"::"<<#y<<" = "<<y<<endl 
const int mod=1000000007;
typedef pair<int,int> pii;
const int N=5e6+5;
int trie[N][5];
int node=1;
set<string>st;
void fun(int idx,string &s,string &t){
	if(idx<0){
		st.insert(t);
		return;
	}
	if(isalpha(s[idx])){
		t.pb(s[idx]);
		fun(idx-1,s,t);
		t.pop_back();
	}
	else{
		fun(idx-1,s,t);
		for(char c='a';c<='e';c++){
			t.pb(c);
			fun(idx-1,s,t);
			t.pop_back();
		}
	}
}
int32_t main()
{
	ios_base::sync_with_stdio(0); cin.tie(0);cout.tie(0);
	memset(trie,-1,sizeof(trie));
	int n,m;
	cin>>n>>m;
	map<int,int>sum;
	for(int i=1;i<=n;i++){
		string s;
		cin>>s;
		int root=0;
		for(auto c:s){
			if(trie[root][c-'a']==-1){
				trie[root][c-'a']=node++;
			}
			root=trie[root][c-'a'];
		}
		sum[root]++;
	}
	for(int i=1;i<=m;i++){
		string s,t;
		cin>>s;
		st.clear();
		int ans=0;
		fun(sz(s)-1,s,t);
		for(auto it:st){
			reverse(all(it));
			int root=0;
			for(auto c:it){
				root=trie[root][c-'a'];
				if(root==-1)break;
			}
			ans+=sum[root];
		}
		cout<<ans<<endl;
	}
}