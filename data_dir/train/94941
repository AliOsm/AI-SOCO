#include<bits/stdc++.h>
using namespace std;

const int N = 2e5 + 5;



int n, m, k, t[4 * N][11][11], ob[4 * N], le[4 * N], ri[4 * N];
string s;

inline void upd(int v){
    le[v] = le[v + v];
    ri[v] = ri[v + v + 1];
    for(int i = 0; i < k; i++){
        for(int j = 0; j < k; j++){
            t[v][i][j] = t[v + v][i][j] + t[v + v + 1][i][j];
        }
    }
    t[v][ri[v + v]][le[v + v + 1]]++;
}

void build(int v, int l, int r){
    ob[v] = -1;
    if(l == r){
        le[v] = ri[v] = s[l] - 'a';
        return;
    }
    int mid = (r + l) >> 1;
    build(v + v, l, mid);
    build(v + v + 1, mid + 1, r);
    upd(v);
}

inline void push(int v, int l, int r){
    if(ob[v] != -1){
        ob[v + v] = ob[v + v + 1] = le[v + v] = le[v + v + 1] = ri[v + v] = ri[v + v + 1] = ob[v];
        memset(t[v + v], 0, sizeof(t[v + v]));
        memset(t[v + v + 1], 0, sizeof(t[v + v + 1]));
        int mid = (r + l) >> 1;
        t[v + v][ob[v]][ob[v]] = mid - l;
        t[v + v + 1][ob[v]][ob[v]] = r - mid - 1;
        ob[v] = -1;
    }
}

void update(int v, int l, int r, int tl, int tr, int val){
    if(l > r || l > tr || tl > r){
        return;
    }
    if(tl <= l && r <= tr){
        le[v] = ri[v] = val;
        memset(t[v], 0, sizeof(t[v]));
        t[v][val][val] = r - l;
        ob[v] = val;
        return;
    }
    push(v, l, r);
    int mid = (r + l) >> 1;
    update(v + v, l, mid, tl, tr, val);
    update(v + v + 1, mid + 1, r, tl, tr, val);
    upd(v);
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n >> m >> k >> s;
    s = '#' + s;
    build(1, 1, n);
    while(m--){
        int type;
        cin >> type;
        if(type == 1){
            int l, r;
            char c;
            cin >> l >> r >> c;
            c -= 'a';
            update(1, 1, n, l, r, c);
        }
        else{
            string tt;
            cin >> tt;
            int a[k];
            for(int j = 0; j < k; j++){
                a[tt[j] - 'a'] = j;
            }
            int ans = 1;
            for(int i = 0; i < k; i++){
                for(int j = 0; j < k; j++){
                    if(a[i] >= a[j]){
                        ans += t[1][i][j];
                    }
                }
            }
            cout << ans << "\n";
        }
    }
}
