#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll long long
#define ld long double
#define pp pair<ll,pair<ll,ll> >
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define hell 1000000007
#define f first
#define s second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree<ll , null_type , less<ll> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t = 1 ;
const ll N = 100005 ;
ll n , m ;
vector<ll> v ;
bool check( ll x )
{
    ll y = m , cur = 0 ;
    rep( i , 1 , n + 1 )
    {
        y -= max( 0LL , v[i-1] - cur ) ;
        if((i)%x==0)cur++;
    }
    return y <= 0 ;
}
ll bnsr()
{
    ll lo = 0 , hi = n , mid ;
    while( hi - lo > 1 )
    {
        mid = ( lo + hi ) / 2 ;
        if( check(mid) )
            hi = mid ;
        else
            lo = mid ;
    }
    return lo + 1 ;
}
void solve()
{
    cin >> n >> m ;
    ll s = 0 ;
    v.resize(n);
    rep( i , 1 , n + 1 )
    {
        cin >> v[i-1] ;
        s += v[i-1] ;
    }
    sort(all(v));
    reverse(all(v));
    if(s<m){cout<<"-1";return;}
    cout << bnsr() ;

}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //cin>>t;
    while(t--)
        solve();
    return 0 ;
}
