#include <bits/stdc++.h>
#include<string.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define Max(x,y,z) max(x,max(y,z))
#define Min(x,y,z) min(x,min(y,z))
#define fr(i,s,e) for(i=s;i<e;i++)
#define rf(i,s,e) for(i=s-1;i>=e;i--)
#define pb push_back
#define eb emblace_back
#define mp make_pair
#define ff first
#define ss second
#define int   long long
#define ll   long long
#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#define vl vector<long long>
#define inf (1LL<<61)
#define vi vector<int> 
#define vii vector< vector<int> >
#define vll vector< vector<long long> >
#define vpi vector< pair<int,int> >   
#define vpl vector< pair<ll,ll> >   
#define viii vector< vector<vector<int> > >
typedef pair<pair<int, int>,int> P;
#define cd complex<double>
#define PI 4*atan(1)
#define mod 1000000007
#define pi 3.14159265358979323846//20 decimals
#define ld long double
#define N 1000000
		 
vii g;
int be[N],en[N];
int t=0;
int lazy[4*N+1];
int s1[4*N+1];
int clr[N];
int rt[N];
void dfs(int s,int p)
{
	t++;
	be[s]=t;
	rt[t]=s;
	for(auto it:g[s])
	{
		if(it!=p)
			dfs(it,s);
	}
	en[s]=t;
}
void build(int id,int lo,int hi)
{
	if(lo==hi)
	{
		s1[id]=(1LL<<clr[rt[lo]]);
		//trace2(lo,s1[id]);
		lazy[id]=0;
		return ;
	}
	int mid=(lo+hi)>>1;
	build(2*id,lo,mid);
	build(2*id+1,mid+1,hi);
	s1[id]=s1[2*id]|s1[2*id+1];
	lazy[id]=0;
	return ;
}
void update(int id,int lo,int hi,int l,int r,int val)
{
	
	if(lazy[id]!=0)
	{
		s1[id]=(1LL<<lazy[id]);
		lazy[2*id]=lazy[id];
		lazy[2*id+1]=lazy[id];
		lazy[id]=0;
	}
	if(lo>r || hi<l)
		return ;
	if(lo>=l && hi<=r)
	{
		s1[id]=1LL<<val;
		lazy[2*id]=val;
		lazy[2*id+1]=val;
		return ;
	}
	int mid=(lo+hi)>>1;
	update(2*id,lo,mid,l,r,val);
	update(2*id+1,mid+1,hi,l,r,val);
	s1[id]=s1[2*id]|s1[2*id+1];
	return ;
}
int query(int id,int lo,int hi,int l,int r)
{

	
	if(lazy[id]!=0)
	{
		s1[id]=(1LL<<lazy[id]);
		lazy[2*id]=lazy[id];
		lazy[2*id+1]=lazy[id];
		lazy[id]=0;
	}
	if(lo>r || hi<l)
		return 0;
	if(lo>=l && hi<=r)
	{
		return s1[id];
	}
	int mid=(lo+hi)>>1;
	int ans=query(2*id,lo,mid,l,r)|query(2*id+1,mid+1,hi,l,r);
	s1[id]=s1[2*id]|s1[2*id+1];
	return ans;
}

int32_t main()
{
	IOS;
	#ifndef ONLINE_JUDGE
    freopen("int.txt","r",stdin);
    freopen("out.txt","w",stdout);
    #endif
	int n;
	cin>>n;
	int q;
	cin>>q;
	g.resize(n+1);
	for(int i=1;i<=n;i++)
		{cin>>clr[i];}
	for(int i=0;i<n-1;i++)
	{
		int a,b;
		cin>>a>>b;
		g[a].push_back(b);
		g[b].push_back(a);
	}
	dfs(1,1);
	build(1,1,n);
	

	while(q--)
	{
		int type;
		cin>>type;
		if(type==1)
		{
			int vk,ck;
			cin>>vk>>ck;
			update(1,1,n,be[vk],en[vk],ck);
		}
		if(type==2)
		{
			int vk;
			cin>>vk;
			int ans=query(1,1,n,be[vk],en[vk]);
			int cnt=0;
			for(int i=1;i<=60;i++)
			{
				if(ans & (1LL<<i))
					cnt++;
			}
			cout<<cnt<<endl;
		}
		
	}
	return 0;
}