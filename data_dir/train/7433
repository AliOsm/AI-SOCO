#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define int long long
using namespace __gnu_pbds;
using namespace std;
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
int mm1[100];
int mm2[100];
int x[100],y[100];
int power[100];
int ans[100];
signed main()
{
     ios_base::sync_with_stdio(false);
     cin.tie(NULL);  
   
 #ifndef ONLINE_JUDGE
    if(fopen("INPUT.txt","r"))
    {
    freopen ("INPUT.txt" , "r" , stdin);
    freopen ("OUTPUT.txt" , "w" , stdout);
    }
 #endif

// -------------------------------------Code starts here---------------------------------------------------------------------     

   power[0]=1;
   for(int i=1;i<=70;i++)
      power[i]=power[i-1]*2;

   int u,v;
   cin>>u>>v;
   if(u==0 && v==0)
   {
      cout<<0;
      return 0;
   }
   if(u==v)
   {
      cout<<1<<'\n'<<u;
      return 0;
   }
   if(v<u)
   {
      cout<<-1;
      return 0;
   }
   int cnt=0;
   while (u!=0)
   {
      x[cnt++]=u%2;
      u/=2;
   }
   cnt=0;
   while (v!=0)
   {
      y[cnt++]=v%2;
      v/=2;
   }
   if(x[0]!=y[0])
   {
      cout<<-1;
      return 0;
   }

   if(x[0])
      ans[0]++;
   int mx=0;
   for(int i=1;i<=79;i++)
   {
      if(x[i]==mm1[i] && y[i]==mm2[i])
      {
         continue;
      }
      else if(x[i]!=mm1[i]&&y[i]!=mm2[i])
      {
         if(y[i]==0)
         {
            ans[i]++;
            mm2[i+1]++;
         }
         else
         {
            ans[i]++;
         }         
      }
      else if(x[i]!=mm1[i])
      {
         ans[i]++;
         ans[i-1]+=2;
         mm2[i+1]++;   
      }
      else
      {
         ans[i-1]+=2;
         if(y[i]==0)
         {
            mm2[i+1]++;   
         }         
      }      
   }

   if(mm2[79]||mm2[78]||mm2[80])
   {
      cout<<-1;
      return 0;
   }

   for(int i=0;i<=79;i++)
      mx=max(mx,ans[i]);

   vector<int>res;
   for(int i=0;i<mx;i++)
      res.push_back(0);
   for(int i=0;i<=65;i++)
   {
      for(int j=0;j<ans[i];j++)
      {
         res[j]+=power[i];
      }
   }
   cout<<mx<<'\n';
   for(int i=0;i<mx;i++)
      cout<<res[i]<<" ";

// -------------------------------------Code ends here------------------------------------------------------------------
     clock_t clk;
 	clk = clock();
 
    clk = clock() - clk;
 	cerr << fixed << setprecision(6) << "Time: " << ((double)clk)/CLOCKS_PER_SEC << "\n";
 	return 0;
 }
