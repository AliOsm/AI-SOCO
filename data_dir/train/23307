#pragma comment(linker, "/stack:64000000")
 
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <ctime>
#include <cstring>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
#include <sstream>
#include <cassert>
 
using namespace std;
 
#define REP(i, n) for (int (i) = 0; (i) < (n); (i)++)
#define FOR(i, a, b) for (int (i) = (a); (i) < (b); (i)++)
#define sz(v) (int)(v).size()
#define all(v) (v).begin(), (v).end()
#define mp make_pair
#define pb push_back
 
typedef long long LL;

set <long long> lucky;
vector <long long> good;
LL bound = 1000000000LL;

void dfs(long long x) {
	lucky.insert(x);
	if (x > bound) return;
	if (!lucky.count(10 * x + 4)) dfs(10 * x + 4);
	if (!lucky.count(10 * x + 7)) dfs(10 * x + 7);
}

LL func(LL R) {
	if (R == 0) return 0;
	LL res = 0;
	for (int i = 1; ; i++) {
		LL cnt = min(R, good[i]) - good[i - 1];
		res += good[i] * cnt;
		if (good[i] >= R) break;
	}
	return res;
}

LL func(LL L, LL R) {
	return func(R) - func(L - 1);
}

int main() {    	
#ifndef ONLINE_JUDGE
	#define NAME "test"
	freopen(NAME".in", "r", stdin);
	freopen(NAME".out", "w", stdout);
#endif
	dfs(0);
	good = vector <long long>(all(lucky));
	LL L, R;
	cin >> L >> R;
	cout << func(L, R);
	return 0;
}