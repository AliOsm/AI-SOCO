#include<bits/stdc++.h>

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef vector<ll> vll;
typedef vector<vll> vvl;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,ll> pll;
const ll MOD = 1000000007;
const long double PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

void stringToUpper(string& strToConvert)
{
	transform(strToConvert.begin(), strToConvert.end(), strToConvert.begin(), ::toupper);
}

void stringToLower(string& strToConvert)
{
	transform(strToConvert.begin(), strToConvert.end(), strToConvert.begin(), ::tolower);
}

unordered_map<string,int> R;
int n,l,m;
string s;

int main()
{
	ssync;
	cin>>n>>l>>s>>m;
	s += s;
	for(int i=0;i<m;i++)
	{
		string s;
		cin>>s;
		R[s] = i+1;
	}
	int L = n*l;
	bool ok;
	vi ans(n,0);
	for(int ind=L-l;ind<L;++ind)
	{
		ok = 1;
		vector<bool> mk(m+1,0);
		for(int i=0;i<n && ok;i++)
		{
			auto it = R.find(s.substr(ind+i*l,l));
			if(it == R.end() || mk[it->second])
			{
				ok = 0;
				break;
			}
			mk[it->second] = 1;
			ans[i] = it->second;
		}
		if(ok) break;
	}
	if(!ok)
	{
		cout<<"NO\n";
		return 0;
	}
	cout<<"YES"<<endl;
	for(auto j:ans)
		cout<<j<<' ';
	cout << "\n";
	return 0;
}
