#include <bits/stdc++.h>
#define LL long long
#define pb push_back
#define mp make_pair
#define fi first
#define sc second
using namespace std;

typedef pair<int,int> ii;
typedef pair<int, ii> iii;
int n,q,arr[1000100],x,y;
iii tree[4000100];
string s;

void build(int node, int a, int b){
	if(a>b) return;
	if(a==b){
		if(arr[a]==-1) tree[node].sc.fi = 1;
		else tree[node].sc.sc = 1;
		return;
	}
	build(node*2, a, (a+b)/2);
	build(node*2+1, (a+b)/2+1, b);
	iii q1 = tree[node*2];
	iii q2 = tree[node*2+1];
	int x = min(q1.sc.sc, q2.sc.fi);
	tree[node] = mp(q1.fi+q2.fi+x,mp(q1.sc.fi, q2.sc.sc));
	q2.sc.fi -= x;
	q1.sc.sc -= x;
	tree[node].sc.fi += q2.sc.fi;
	tree[node].sc.sc += q1.sc.sc;
}

iii query(int node, int a, int b, int i, int j){
	if(a>b || a>j || b<i) return mp(0, mp(0, 0));
	if(a>=i && b<=j){
		return tree[node];
	}

	iii q1 = query(node*2, a, (a+b)/2, i, j);
	iii q2 = query(node*2+1, (a+b)/2+1, b, i, j);
	iii ans;
	int x = min(q1.sc.sc, q2.sc.fi);
	ans = mp(q1.fi+q2.fi+x,mp(q1.sc.fi, q2.sc.sc));
	q2.sc.fi -= x;
	q1.sc.sc -= x;
	ans.sc.fi += q2.sc.fi;
	ans.sc.sc += q1.sc.sc;
	return ans;
}

int main(){
	cin>>s;
	n = s.size();
	for(int i=0;i<n;i++){
		if(s[i]=='(') arr[i] = 1;
		else arr[i] = -1;
	}
	scanf("%d",&q);
	build(1, 0, n-1);
	for(int i=0;i<q;i++){
		scanf("%d %d",&x,&y);
		iii ans = query(1, 0, n-1, x-1, y-1);
		printf("%d\n", ans.fi*2);
	}
	return 0;
}