#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const ll N=300011;
const ll mod=1e9+7;
void snum(ll &a){scanf("%lld",&a);}
void snum(ll &a, ll &b){scanf("%lld %lld",&a,&b);}
void snum(ll &a, ll &b, ll &c){scanf("%lld %lld %lld",&a,&b,&c);}
void snum(ll &a, ll &b, ll &c, ll &d){scanf("%lld %lld %lld %lld",&a,&b,&c,&d);}

ll A[N];
vector<ll> adj[N];
vector<ll> pes[N];
bool vis[N];
ll rps=0;

ll dfs(ll u){
	vector<ll> rep;
	vis[u]=true;
	ll sz=adj[u].size();
	for(ll i=0; i<sz; i++){
		ll v=adj[u][i];
		ll w=pes[u][i];
		if(!vis[v]){
			rep.push_back(dfs(v)-w);
		}
	}
	sort(rep.rbegin(),rep.rend());
	ll retorna;
	ll szz=rep.size();
	ll ans=0;
	if(szz==0){
		ans=A[u];
		retorna=ans;
	}else if(szz==1){
		ans=max(A[u],A[u]+rep[0]);
		retorna=ans;
	}else{
		ans=max(A[u],A[u]+rep[0]);
		retorna=ans;
		ans=max(A[u],max(A[u]+rep[0],A[u]+rep[0]+rep[1]));
	}
	rps=max(rps,ans);
	return retorna;
}

int main(){
	ll n;
	snum(n);
	for(ll i=1; i<=n; i++){
		snum(A[i]);
	}
	ll x,y,w;
	for(ll i=0; i<n-1; i++){
		snum(x,y,w);
		adj[x].push_back(y);
		pes[x].push_back(w);
		adj[y].push_back(x);
		pes[y].push_back(w);
	}
	dfs(1);
	printf("%lld\n",rps);
	return 0;
}