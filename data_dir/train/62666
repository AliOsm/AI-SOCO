// 15.07.2013
//

/*
167B. ���� � ������������������
����������� �� ������� �� ����   2 �������
���� ���������� �������������������� �����.
������ � ���� ���� ������������������ a1, a2, ..., an, ��������� �� n ����� ������������� �����.
� ��� �� � ���� ���� ������� f(x), ������� ����� ���������� ��������� ������������ ������������:
"	f(0) = 0; 
"	f(2�x) = f(x); 
"	f(2�x + 1) = f(x) + 1. 
���� ������������� ������: ������� ���������� ��� �������� (i, j) (1 <= i < j <= n), ����� ��� f(ai) = f(aj).
�������� ���, ����������, ������� ����� ���. 
������� ������
� ������ ������ ���� ����� ����� n (1 <= n <= 10^5).
�� ������ ������ ���� n ����� ������������� ����� a1, a2, ..., an (1 <= ai <= 10^9).
����� � ������� ��������� ���������� ���������.
�������� ������
� ������������ ������ �������� ����� �� ������.
����������, �� ����������� ������������ %lld ��� ������ ��� ������ 64-� ������� ����� �� C++.
������������� ������������ ������ cin, cout ��� ������������ %I64d.
������� ������
������� ������
3
1 2 4
�������� ������
3
������� ������
3
5 3 1
�������� ������
1
����������
� ������ ������� ����� ���� (i, j) ��������, ������� ����� - 3.
�� ������ ������� �������� ������ ���� (1, 2).
 
*/


# include <stdio.h>
# include <string.h>
# include <math.h>

/*
# include <iostream>

# include <set>

// set <type> S;
// void erase (type)
// void insert (type)
// void clear ()
// ptr * find (type)


# include <map>

// mat <keytype, valtype> M;
// void erase (keytype)
// void insert (keytype)
// void clear ()
// ptr * find (keytype)


# include <queue>

// queue <type> Q;
// priority_queue <type> PQ;

// void erase (type) ???
// void push (type)
// type front ()
// type back ()
// void pop ()
// bool empty ()
// int size ()


*/

# include <vector>

// int size ()
// resize (int)
// void clear ()
// void push_back (type)
// void insert (int, type)


# include <algorithm>


using namespace std;


# define iabs(x) ( (x) < 0 ? (-(x)) : (x) )
# define imax(a,b) ( (a) > (b) ? (a) : (b) )
# define imin(a,b) ( (a) < (b) ? (a) : (b) )

# define isalpha(c) ( (c) >= 'a' && (c) <= 'z' )
# define isAlpha(c) ( (c) >= 'A' && (c) <= 'Z' )
# define isdigit(c) ( (c) >= '0' && (c) <= '9' )


# define convert(x) ( isalpha (x) ? (x)-'a'+'A' : (x) )
# define Convert(x) ( isAlpha (x) ? (x)-'A'+'a' : (x) )


# define sqr(x) ( (x) * (x) )


# define NUM(r,c) ( ((r) << 8) + (c) )
# define ROW(n) ( (n) >> 8 )
# define COL(n) ( (n) & 0XFF )

# define CHECK(r,c) ( (r) >= 0 && (r) < n && (c) >= 0 && (c) < m )



typedef pair <int, int>          Pair;
typedef long long int            Long;
typedef unsigned int             uint;
typedef unsigned long long int   ULong;




struct E
{
   int v;
   E * next;
   E (int w, E * p=NULL) { v = w, next = p; }
};



const int N = 100400;
const int M = 1000;
const int P = 1000000007;   // 10^9 + 7
const int K = 256;


const double PI = 3.14159265358979323846;
const double eps = 1e-7;



int n, m, k, l, d, n2;
int a [N], f [N];
//int a [N][N];
int p [N], kp;
int kol [K], len;
Long lm, la;


bool mark [N];
bool ok;

char s [N];



void Primes ();
int BinSearch (int * b, int n, int x);
void Print (int par=0);
void F (int n);
void Fu (int n);

int main ()
{
# ifndef ONLINE_JUDGE
   freopen ("B.TXT", "r", stdin);
   freopen ("B.OUT", "w", stdout);
# endif

   int i, j, nk;

# ifndef ONLINE_JUDGE

/*
   F (M);

   for ( int i=0; i <= M; i++ )
   {
      printf (" %4d", f [i]);
      if ( i%20 == 19 )
         printf ("\n");
   }
   printf ("\n");
*/

   int nnn;
   scanf ("%d\n", &nnn);
   for ( int iii=1; iii <= nnn; iii++ )
   {
//      memset (a, 0, sizeof (a));

      printf ("\n\n\nSAMPLE %d\n", iii);
# endif



//+++++++++++++++++++++++++++++++++++++++++++++
//
// ��������� ������������� ���������� ����� !!!
//
//+++++++++++++++++++++++++++++++++++++++++++++


      n = 0, m = 0, k = 0;

      scanf ("%d\n", &n);

      for ( i=0; i < n; i++ )
         scanf ("%d", &a [i]);

      Fu (n);

      sort (f, f+n);

# ifndef ONLINE_JUDGE
   Print ();
# endif

      for ( i=1, k=1, lm=0; i < n; i++ )
         if ( f [i] == f [i-1] )
            k++;
         else
         {
            la = k, la = la*(la-1)/2;
            lm += la;
            k = 1;
         }

      la = k, la = la*(la-1)/2;
      lm += la;

# ifndef ONLINE_JUDGE
//   Print (1);
# endif


      printf ("%I64d", lm);




# ifndef ONLINE_JUDGE
   }
# endif


   return 0;
}

void Fu (int n)   // ����� �������� � �������� ������ ����� a [i]
{
   f [0] = 0;
   for ( int i=0, j; i < n; i++ )
   {
      j = a [i], m = 0;
      while ( j > 0 )
         m += j%2,
         j >>= 1;
      f [i] = m;
   }
}

void F (int n)
{
   f [0] = 0;
   for ( int i=0; i <= n; i+=2 )
      f [i] = f [i/2],
      f [i+1] = f [i/2] + 1;
}

void Print (int par)
{
   if ( par == 0 )
   {
      printf ("n=%d\n", n);
      for ( int i=0; i < n; i++ )
         printf (" %d (%d)", a [i], f [i]);
   }
   else
   {

   }
   printf ("\n");
}

void Primes ()   // calculate primes
{
   int i, j, k, ki, pj;
   bool ok;

   p [0] = 2, p [1] = 3, p [2] = 5, p [3] = 7, p [4] = 11, p [5] = 13;
   p [6] = 17, p [7] = 19, p [8] = 23, p [9] = 29, p [10] = 31;
   p [11] = 37, p [12] = 41, p [13] = 43, p [14] = 47, p [15] = 53;
   p [16] = 59, p [17] = 61, p [18] = 67, p [19] = 71, p [20] = 73;
   p [21] = 79, p [22] = 83, p [23] = 89, p [24] = 97, p [25] = 101;

   for ( i=26; i < N; i++ )
   {
      for ( k=p [i-1]+2; ; k+=2 )
      {
         ki = (int) sqrt ((double) k) + 2;
         for ( ok=true, j=0; pj = p [j], pj < ki; j++ )           // ??? p [j] < ki ???
            if ( k % pj == 0 )
               { ok = false; break;}
         if ( ok ) break;
      }
      p [i] = k;
   }
   kp = i;
}

int BinSearch (int * b, int n, int x)
{
   int l=0, r=n-1, m;
   if ( x < b [0] ) return -1;
   if ( x > b [n-1] ) return n;

   while ( l < r-1 )
   {
      m = (l + r) / 2;
      if ( x == b [m] ) return m;
      if ( x < b [m] )
         r = m;
      else
         l = m;
   }
   if ( x == b [l] ) return l;
   if ( x == b [r] ) return r;
   return -2;
}
