#include <bits/stdc++.h>
using namespace std;

#define rep(i, v)       for(int i=0;i<sz(v);++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define all(v)              ((v).begin()), ((v).end())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)

typedef long long         ll;
const ll OO = 1e8;

const double EPS = (1e-7);
int dcmp(double x, double y) {  return fabs(x-y) <= EPS ? 0 : x < y ? -1 : 1;   }

#define pb                  push_back
#define MP                  make_pair
#define P(x)                cout<<#x<<" = { "<<x<<" }\n"
typedef long double       ld;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef vector<pair<int, int> > vii;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef vector<string>    vs;


#define FilesX


const int N = 100;

int main() // B
{
#ifdef Files
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    ios::sync_with_stdio(false);

    string s; cin >> s;
    map<string, int> si;
    set<string> dates;
    lpi(y, 2013, 2016){
        lpi(m, 1, 13){
            lpi(d, 1, 32){
                if(d == 31 && (m == 4 || m == 6 || m == 9 || m == 11)) continue;
                if(d > 28 && m == 2) continue;
                string temp;
                temp.push_back('0' + d / 10); temp.push_back('0' + d % 10);
                temp.push_back('-');
                temp.push_back('0' + m / 10); temp.push_back('0' + m % 10);
                temp.push_back('-');
                temp.push_back('2'); temp.push_back('0'); temp.push_back('1'); temp.push_back('0' + y % 10);
                dates.insert(temp);
            }
        }
    }
    lp(i, s.size() - 9){
        string temp = s.substr(i, 10);
        if(dates.find(temp) == dates.end()) continue;
        si[temp]++;
    }
    int maxi = 0;
    string maxis;
    for(map<string, int>::iterator it = si.begin(); it != si.end(); it++){
        if((*it).second > maxi)
            maxi = (*it).second, maxis = (*it).first;
    }
    cout << maxis << endl;
    
    return 0;
}