#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define MAX ((ll)(1e19 + 5))
#define MAXL ((ll)(1e10 + 5))
#define MAX_X ((int)(1e6 + 2))
#define pi (2.0*acos(0))
#define M ((int)(1e9 + 7))
#define NN ((ll)(305))
#define N ((int)(2e5 + 5))
#define eps (0)
#define fastio ios_base::sync_with_stdio(false),cin.tie(NULL)
#define log 29
#define endl "\n"
//#define int ll


using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef unsigned long long ull;

/*fast io
ios_base::sync_with_stdio(false);
cin.tie(NULL);
*/


typedef tree < int ,  null_type,  less < int >,  rb_tree_tag,  tree_order_statistics_node_update > o_set;
/// o_set s;
/// s.order_of_key(k) : Number of items strictly smaller than k .
/// *(s.find_by_order(k)) : K-th element in a set (counting from zero).

pair < int , int > arr[N];

int val[N], ans[N];

pair < int , pair < int , int > > qrr[N];

int main()
{
    fastio;
    int n , q;
    cin>>n;
    for(int i = 1; i<=n ; i++){

        cin>>val[i];
        arr[i] = {-val[i],i};
    }
    sort(arr+1,arr+n+1);
    cin>>q;
    for(int i = 0; i<q; i++){
        int k , pos;
        cin>>k>>pos;
        qrr[i] = {k,{pos,i}};
    }
    int cur = 0;
    o_set sss;
    sort(qrr,qrr+q);
    for(int i = 0; i<q; i++){
        int k = qrr[i].first, pos = qrr[i].second.first;
        while(cur<k){
            cur++;
            sss.insert(arr[cur].second);
        }
        int a = val[(*(sss.find_by_order(pos-1)))];
        ans[qrr[i].second.second] = a;
    }
    for(int i = 0; i<q; i++) cout<<ans[i]<<endl;
    return 0;
}
