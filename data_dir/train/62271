#include<iostream>
#include<cstdio>
#include<cstring>
#include<vector>
#include<algorithm>
#define N 300000
using namespace std;
typedef long long ll;
ll mod = 1000000007LL;
int r,g;
ll dp[N];
int main() {
    while (cin>>r>>g) {
          memset(dp, 0LL, sizeof(dp));
          dp[0] = 1LL;
          int h = 0;
          for (h = 0; ; h++) {
              bool find = false;
              for (int b = r; b >= 0; --b) {
                  if (h * (h + 1) / 2 - b > g) {
                     dp[b] = 0LL;
                     continue;
                  }
                  if (b + h + 1 <= r || h * (h + 1) / 2 - b + h + 1 <= g) {
                     find = true;
                  }
                  if (b + h + 1 <= r) {
                     dp[b + h + 1] = (dp[b + h + 1] + dp[b]) % mod;
                    // find = true;
                  }
              }
              if (!find) {
                 break;
              }
          }
        //  cout<<h<<endl;
          ll ans = 0LL;
          for (int b = 0; b <= r; ++b) {
              ans = (ans + dp[b]) % mod;
          }
          cout<<ans<<endl;
    }
    return 0;
}
