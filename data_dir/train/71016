#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define int long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;
typedef  tree< int , null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N = 3100000;
int t[6][N];
int sum (int k, int r)
{
	int result = 0;
	for (; r >= 0; r = (r & (r+1)) - 1)
		result += t[k][r];
	return result;
}

void inc (int k, int i, int delta = 1)
{
	for (; i < N; i = (i | (i+1)))
		t[k][i] += delta;
}

pair < int, int > w(int x){
    int l = -1, r = 5000000;
    while(r - l > 1){
        int mid = (r + l) / 2;
        if (mid * mid > x) r = mid; else l = mid;
    }
    int ans2 = l;
    l = -1;
    r = 5000;
    while(r - l > 1){
        int mid = (r + l) / 2;
        if (mid * mid * mid * mid < x) l = mid; else r = mid;
    }
    return {r, min(ans2, x - 1)};
}
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    for (int i = 1; i <= 3000000; i++){
        auto x = w(i);
        int l = x.F;
        int r = x.S;
        for (int j = 0; j <= 5; j++){
            int x = sum(j, r) - sum(j, l - 1);
            if (x == 0){
                inc(j, i);
                break;
            }
        }
    }
    int n;
    cin >> n;
    int ans = 0;
    for (int q = 1; q <= n; q++){
        int i;
        cin >> i;
        auto x = w(i);
        int l = x.F;
        int r = x.S;
        for (int j = 0; j <= 5; j++){
            int x = sum(j, r) - sum(j, l - 1);
            if (x == 0){
                ans ^= j;
                break;
            }
        }
    }
    if (ans) cout << "Furlo" << endl; else cout << "Rublo" << endl;
}
