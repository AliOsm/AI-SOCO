#include<bits/stdc++.h>

//#pragma optimize("O3")

using namespace std;
 
#define DIM 200009
#define INF ((long long)1e18+9ll)
#define pairll pair<long long,long long>
#define fi first
#define se second
#define ld long double
#define amen exit(0)
#define endl '\n'
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define MODULO 1000000007
 
long long i,j,k,l,n,m,mn=INF,cnt,flag;

struct dot{
	long long x,t,num;
};

vector<dot>a;

inline bool cmp(dot a,dot b){
	if(a.x!=b.x)return a.x<b.x;
	return a.t>b.t;
}

vector<long long>can;

vector<pairll>seg;

long long nums[DIM];

map<long long,long long>mp;

int main()
{
	//freopen("penalty.in","r",stdin);
	//freopen("penalty.out","w",stdout);

	fast;

	int nt;
	cin>>nt;
	while(nt--){
		cin>>n;
		a.clear();
		seg.clear();
		mp.clear();
		for(i=1;i<=n;i++){
			cin>>k>>l;
			nums[i]=0;
			mp[k]++;
			a.push_back({k,1,i});
			a.push_back({l,-1,i});
			seg.push_back({k,l});
		}

		sort(a.begin(),a.end(),cmp);

		long long cnt=0,mx=0,res=0,ress=0;

		flag=0;

		can.clear();

		for(int i=0;i<a.size();i++){
			cnt+=a[i].t;
			if(cnt==0)res++;

			if(cnt>1)flag=1;
			if(cnt==2 && a[i].t==1)can.push_back(a[i].x);
			if(cnt==1 && a[i].t==1 && mp[a[i].x]==1){
				nums[a[i].num]=1;
			}
			if(i>0 && a[i-1].x==a[i].x)nums[a[i].num]|=nums[a[i-1].num];	
		}

		ress=res-1;

		if(can.size()==0)ress=res-1;
		else{
			for(int i=0;i<seg.size();i++){
				pairll to=seg[i];
				long long r=lower_bound(can.begin(),can.end(),to.se)-can.begin();
				if(r==can.size() || can[r]>to.se)r--;
				long long l=lower_bound(can.begin(),can.end(),to.fi)-can.begin();

				if(l!=can.size() && can[l]==to.fi)l++;

				if(l==can.size() || r<0 || (r>=0 && can[r]<to.fi) || (l<can.size() && can[l]>to.se))ress=max(ress,res-nums[i+1]);
				else{
					ress=max(ress,res-nums[i+1]+(r-l+1));
				}
			}
		}	
		cout<<ress<<endl;
	}

    amen;
}