#include <bits/stdc++.h>
#define int long long

using namespace std;


int bit[7005][65];
int cnt[7005];

signed main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n;
    cin>>n;
    int a[n],b[n];
    for (int i = 0; i < n; ++i) {
        cin>>a[i];
    }

    for (int i = 0; i < n; ++i) {
        cin>>b[i];
    }

    for (int i = 0; i < n; ++i) {
        int z=a[i];
        for (int j = 0; j <=60 ; ++j) {
            bit[i][j]=z%2;
            z/=2;
        }
    }


    for (int i = 0; i < n; ++i) {
        for (int j = i+1; j < n; ++j) {
            int x=a[i],y=a[j];
            int xo=(x^y);
            if((xo&x)!=0)
            {
                cnt[i]++;
            }

            if((xo&y)!=0)
            {
                cnt[j]++;
            }

        }
    }


    int sz=n-1;
    int ind=-1;
    int mx=0;
    for (int i = 0; i < n; ++i) {
        if(cnt[i]==sz)
            ind=i;
        mx=max(mx,cnt[i]);
    }

    int mm[n]={0};
    int count=0;
    int ff[n]={0};
    while (mx==sz && count<n-1)
    {
        count++;
        mx=0;
        sz--;
        mm[ind]=1;
        ff[ind]=1;
        cnt[ind]=0;
        int ind2=-1;
        for (int i = 0; i < n; ++i) {
            if(ff[i]==1)
                continue;
            int z1=a[i],z2=a[ind];
            bool flag=false;
            int xo=(z1^z2);
            if((xo&z1)!=0)
            {
                flag=true;
            }


            if(flag)
            {
                cnt[i]--;
            }

            if(cnt[i]>mx)
            {
                mx=cnt[i];
                ind2=i;
            }
        }
        ind=ind2;

    }

    int ans=0;
    for (int i = 0; i < n; ++i) {
        if(mm[i]==0)
            ans+=b[i];
    }

    if(count>=n-1)
    {
        cout<<0;
        return 0;
    }
    cout<<ans;
}

