
// ~/RedLink/Developers/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <functional>
#include <assert.h>
#include <complex>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;

const int N = 5005, M = 505;
const ll MOD = 1e9 + 7;
const double eps = 1e-9;
const double PI = acos(-1.0);

int n,m,clr[N];
bool vis[N], inStack[N];
vector<vector<pair<int,int> > > g;

void dfs(int u,int e) {
    vis[u] = 1;
    inStack[u] = 1;
    for(pair<int,int> v : g[u]) {
        if(inStack[v.first]) {
            clr[v.second] = 2;
        }
        if(!vis[v.first]) 
            dfs(v.first, v.second);
    }
    inStack[u] = 0;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
#endif
    scanf("%d%d",&n,&m);
    g.resize(n);
    memset(clr,-1,sizeof clr);
    for(int i=0,a,b; i<m; i++) {
        scanf("%d%d",&a,&b);
        a--,b--;
        g[a].push_back(make_pair(b, i));
        clr[i] = 1;
    }
    for(int i=0; i<n; i++)
        if(!vis[i])
            dfs(i,m);
    int clrs = 1;
    for(int i=0; i<m; i++)
        if(clr[i]==2) {
            clrs = 2;
            break;
        }
    printf("%d\n", clrs);
    for(int i=0; i<m; i++)
        printf("%d ", clr[i]);
    puts("");
    return 0;
}