#include <vector>
#include <stdio.h>
#include <string.h>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
typedef long long ll;
typedef long double d;
using namespace std;
//int direcy[]= {0,0,1,-1},direcx[]= {-1,1,0,0};
vector<vector<ll> > v;
ll dp[2005];
ll dfs(ll x)
{
    ll re=0;
    if(dp[x]!=-1)
        return dp[x];
    for(int  i=0;i<v[x].size();i++)
    {
        re=max(re,dfs(v[x][i])+1);
    }
    return dp[x]=re;
}
int main()
{
    cin.tie(0);
    std::ios::sync_with_stdio(false);
    ll n,x,counter=0;
    cin >> n;
    vector<ll> all;
    v.resize(n+1);
    memset(dp,-1,sizeof dp);
    for(int i =0; i<n; i++)
    {
        cin >> x;
        all.push_back(x);
        if(x!=-1)
        v[x].push_back(i+1);
    }
    ll maxx=0;
    for(int i=0;i<n;i++)
    {
        if(all[i]==-1)
            maxx=max(dfs(i+1),maxx);
    }
    cout << maxx+1 << endl;
    return 0;
}
