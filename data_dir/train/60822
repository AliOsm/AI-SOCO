#include <bits/stdc++.h>
#define ll long long
#define LL long long
#define mp make_pair
#define pb push_back
#define VI vector<int>
#define pii pair<int,int>
#define INF 0x3f3f3f3f
using namespace std;
const LL mod = 998244353;
const int MAXN = 3e5;
int n;
VI g[MAXN+10];
int V[2*MAXN+10];
int S[MAXN+10];
int e;
void dfs(int cur, int prev){
	S[cur] = e;
	for(int next : g[cur]){
		if(next == prev) continue;
		V[e++] = next;
	}
	V[e++] = -1;
	for(int next : g[cur]){
		if(next == prev) continue;
		dfs(next,  cur);
	}
}
bool mark[2][2][2*MAXN+10];
LL memo[2][2][2*MAXN+10];
LL dp(int ei, int con, int pick){
	int v = V[ei];
	if(v == -1) return !pick || con;
	LL& ans = memo[pick][con][ei];
	if(mark[pick][con][ei]) return ans;
	mark[pick][con][ei] = true;
	ans = 0;
	//Ignore edge
	
	ans = (dp(S[v], 0, 0)*dp(ei + 1, con, pick))%mod;
	if(V[S[v]] != -1){
		ans += dp(S[v], 0, 1)*dp(ei + 1, con, pick); 
		ans %= mod;
	}
	if(pick){
		//Take edge
		ans += dp(S[v], 1, 0)*dp(ei + 1, 1, pick); ans %= mod;
	}else{
		//Take edge
		ans += (dp(S[v], 1, 0) + dp(S[v], 1, 1))*dp(ei+1, 1, pick); ans %= mod;
	}
	return ans;
}
int main(){
	scanf("%d", &n);
	for(int i = 0; i < n - 1; i++){
		int u, v;
		scanf("%d %d", &u, &v);
		g[u].pb(v); g[v].pb(u);
	}
	e = 0;
	dfs(1,1);
	printf("%lld\n", (dp(0,0,0) + dp(0,0,1) - 1 + mod)%mod);
	return 0;
}