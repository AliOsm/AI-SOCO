#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <fstream>
#define endl "\n"
#define c0 ios_base :: sync_with_stdio(0); cin.tie (0);
#define s second
#define f first
#define ll long long
#define ull unsigned ll
using namespace std;

const int MaxN = 1e5 + 17;
const ll INF = 1e9 + 17;
const int MOD = 1e9 + 17;
const double eps = 1e-9;

int n, p;
int a[MaxN], b[MaxN];

inline double check (double x)
{
    double z = 0;
    for (int i = 1; i <= n; ++ i)
    {
        if ((b[i] * 1.0) - x * (a[i] * 1.0) <= eps)
            z += (b[i] * 1.0) - x * (a[i] * 1.0);
    }
    return (p * 1.0) * x + z;
}

int main()
{
    #ifdef DEBUG
        freopen (".in", "r", stdin);
        freopen (".out", "w", stdout);
    #endif
    scanf ("%d%d", &n, &p);
    long long q = 0;
    for (int i = 1; i <= n; ++ i)
        scanf ("%d%d", a + i, b + i), q += a[i];
    if (q <= p)
        cout << -1, exit (0);
    double l = 0, r = 1e12;
    for (int i = 0; i < 100; ++ i)
    {
        double m = (l + r) / 2.0;
        if (check (m) >= eps)
            l = m + eps;
        else
            r = m - eps;
    }
    if (l == 1e12)
        cout << -1, exit (0);
    printf ("%.8f", l);
    return 0;
}
