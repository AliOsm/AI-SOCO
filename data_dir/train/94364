#pragma comment(linker, "/STACK:36777216")

#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cctype>
#include <cassert>

#include <algorithm>
#include <vector>
#include <queue>
#include <string>
#include <stack>
#include <set>
#include <map>
#include <numeric>
#include <utility>
#include <functional>
#include <iostream>
#include <iomanip>
#include <deque>
#include <array>
#include <iterator>
#include <bitset>
#include <initializer_list>
#include <tuple>

using namespace std;
typedef long long ll;

typedef std::pair<int, int> pii;
typedef std::vector<int> vi;
typedef std::vector<pii> vii;
typedef std::vector<ll> vll;

#define all(x)  (x).begin(), (x).end()
#define sz(x)    ( (int)((x).size()) )

//y1 y0 - are functional variables in math.h file.
#define y1     y1_lalalal
#define y0     y0_lalalal
#define next   next_wawawa
#define prev   prev_wasasa

static const int inf = 1000000009;
static const ll  inf_ll = 1000000009000000009ll;
static const double eps = 1.0E-8;

static ll gcd(ll x, ll y) { return y == 0 ? x : gcd(y, x%y); }
static ll pwm(ll x, ll n, ll m) { ll r = 1; while (n) { if (n & 1)r = r * x%m; x = x * x%m; n >>= 1; } return r; }
/*********************************************************************************************************************/
int g[128][128],n,m;
 
int solve()
{ 
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; ++i)
		for (int j = 1; j <= m; ++j)
			scanf("%d", &g[i][j]);

	vii ans;
	int cnt = 0;

	if (n <= m) {
		for (int i = 1; i <= n; ++i) {
			int mx = g[i][1];
			for (int j = 1; j <= m; ++j)mx = std::min(mx, g[i][j]);
			if (mx > 0) {
				ans.push_back(pii(mx, i));
				cnt += mx;
				for (int j = 1; j <= m; ++j)g[i][j] -= mx;
			}

		}
		for (int j = 1; j <= m; ++j) {
			int mx = g[1][j];
			for (int i = 1; i <= n; ++i) {
				mx = std::min(mx, g[i][j]);
			}
			if (mx > 0) {
				ans.push_back(pii(-mx, j));
				cnt += mx;
				for (int i = 1; i <= n; ++i) {
					g[i][j] -= mx;
				}
			}
		}

	}
	else {
		for (int j = 1; j <= m; ++j) {
			int mx = g[1][j];
			for (int i = 1; i <= n; ++i) {
				mx = std::min(mx, g[i][j]);
			}
			if (mx > 0) {
				ans.push_back(pii(-mx, j));
				cnt += mx;
				for (int i = 1; i <= n; ++i) {
					g[i][j] -= mx;
				}
			}
		}

		for (int i = 1; i <= n; ++i) {
			int mx = g[i][1];
			for (int j = 1; j <= m; ++j)mx = std::min(mx, g[i][j]);
			if (mx > 0) {
				ans.push_back(pii(mx, i));
				cnt += mx;
				for (int j = 1; j <= m; ++j)g[i][j] -= mx;
			}

		}

	}

	for (int i = 1; i <= n; ++i) {
		for (int j = 1; j <= m; ++j) {
			if (g[i][j]) {
				puts("-1");
				return 0;
			}
		}
	}

	
	printf("%d\n", cnt);
	for (pii e : ans) {
		while (e.first > 0) {
			printf("row %d\n", e.second);
			--e.first;
		}
		while (e.first < 0) {
			printf("col %d\n", e.second);
			++e.first;
		}
	}

	 
 	return 0;
}


/***********************************************************************************************************************/
int main(int argc, char* argv[])
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif // ONLINE_JUDGE
	::std::ios::sync_with_stdio(false); ::std::cin.tie(0); ::std::cout.tie(0);

	int t = 1;
	//scanf("%d", &t);
	while (t--)
		solve();

}
/*********************************************************************************************************************/