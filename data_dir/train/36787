#include<bits/stdc++.h>

using namespace std;
const int MAXN = 200100;

#define int long long

const int mod = 1000000007;

vector<pair<int,int>> grafo[MAXN];
int pot[MAXN];
int niv[MAXN];
int r = 0;
bool vis[MAXN];

int dfs(int x,int p){
	int ret = 1;
	
	vis[x] = true;
	
	for(int i = 0;i < grafo[x].size();i++){
		pair<int,int> at = grafo[x][i];
		if(at.second == p) continue;
	
		if(vis[at.first] == true){
			if(niv[x] > niv[at.first]) r = niv[x] - niv[at.first] + 1;	
		}
		else{
			niv[at.first] = niv[x] + 1;
			ret += dfs(at.first,at.second);
		}
	}
	
	return ret;
}

signed main(){
	int n;
	cin >> n;
	
	int p = 1;
	for(int i = 0;i <= n;i++){
		pot[i] = p;
		p *= 2 , p %= mod;
	}
	
	for(int i = 1;i <= n;i++){
		int x;
		cin >> x;
		grafo[x].push_back({i,i}) , grafo[i].push_back({x,i});
	}
	
	int resp = 1;
	
	for(int i = 1;i <= n;i++){
		if(vis[i] == true) continue;
		int h = dfs(i,0);
		
		resp *= pot[h] - pot[h - r + 1] , resp %= mod;
		//cout << "/ " << i << " " << h << " " << r << endl;
	}
	
	cout << (resp + mod ) % mod << endl;
}