#include<bits/stdc++.h>
#define P(x,y) make_pair( (x) , (y) )
using namespace std;
const int MX = (1<<17);
set < pair < int , int > > S[MX];
int n , m , dp[MX];
int get(int node , int V){
    auto it = S[node].lower_bound({V , -1});
    --it;
    return it->second + 1;
}
void ins(int node , int V , int res){
    auto it = S[node].lower_bound({V , -1});
    while(it != S[node].end()){
        if(it->second <= res){
            it = S[node].erase(it);
            continue;
        }
        else break;
    }
    it = S[node].lower_bound({V , -1});
    --it;

    if(it->second >= res) return;

    S[node].insert({V , res});

}
int main(){
     #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    #endif // ONLINE_JUDGE
    scanf("%d %d",&n,&m);
    for(int j = 1 ; j <= n ; j++){
        S[j].insert({-1 , 0});
    }
    while(m--){
        int a , b , c;
        scanf("%d %d %d",&a,&b,&c);
        //cout<<a<<' '<<b<<' '<<c<<endl;
        int res = get(a , c);
        dp[b] = max(dp[b] , res);
        ins(b , c , res);
    }
    cout<<*max_element(dp + 1 , dp + 1 + n);
}
