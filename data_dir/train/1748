//be naame khodaa
#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <string>
#include <cstdio>
#include <algorithm>
#include <set>
#include <cassert>
#include <iomanip>
#include <cstring>
#include <sstream>
using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair <int, int> pii;
#define F first
#define S second
#define pb push_back

inline int in(){ int x, y; y = scanf("%d", &x); return x; }

const int N = 100*1000 + 5;
const int MOD = 1e9 + 7;

int a[N], b[N], pw[N];
int oner[25];
vector <pii> que[N];

int msb(int x){
	return 31-__builtin_clz(x);
}

int main(){
	int n = in(), q = in();
	pw[0] = 1;
	for (int i = 0; i < n; i++){
		a[i] = in();
		pw[i+1] = pw[i]*2%MOD;
	}
	for (int i = 0; i < q; i++){
	    int p = in()-1;
		que[p].pb({in(), i});
	}
	fill(oner, oner + 20, -1);
	for (int i = 0; i < n; i++){
		while (a[i] && oner[msb(a[i])] != -1)
			a[i] ^= a[oner[msb(a[i])]];
		if (a[i])
			oner[msb(a[i])] = i;
		for (auto p : que[i]){
			int x = p.F, iq = p.S;
			while (x && oner[msb(x)] != -1)
				x ^= a[oner[msb(x)]];
			int uniqueCnt = 0;
			for (int j = 0; j < 20; j++)
				if (oner[j] != -1)
					uniqueCnt++;
			if (x == 0)
				b[iq] = pw[i+1-uniqueCnt];
			else
				b[iq] = 0;
		}
	}
	for (int i = 0; i < q; i++)
		cout << b[i] << '\n';
	return 0;
}