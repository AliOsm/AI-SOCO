#include <bits/stdc++.h>
using namespace std;

typedef pair<int, int> pii; typedef vector<int> vi;
typedef long long ll; typedef vector<long long> vll;
const int MOD = 1'000'000'007, MOD2 = 1'000'000'009;
const int INF = 0x3f3f3f3f; const ll BINF = 0x3f3f3f3f3f3f3f3fLL;

int solve() {
	string s, t;
	cin >> s >> t;
	s = "X" + s;
	t = "X" + t;
	int n = s.size();
	vi a(n, 0);
	for (int i=0;i<n;i++) a[i] += s[i] == 'X', a[i] *= 2;
	for (int i=0;i<n;i++) a[i] += t[i] == 'X';
	for (int i=0;i<n;i++) cerr << a[i] << " \n"[i==n-1];
	vector<vi> dp(n, vi(4, -INF));
	dp[0][3] = 0;
	for (int i=1;i<n;i++) {
		// 0
		if (a[i] == 0) {
			for (int j=0;j<4;j++) dp[i][0] = max(dp[i][0], dp[i - 1][j]);
		}
		// 1
		if (a[i] == 0) {
			dp[i][1] = max(dp[i][1], dp[i-1][0] + 1);
		} else if (a[i] == 1) {
			for (int j=0;j<4;j++) dp[i][1] = max(dp[i][1], dp[i - 1][j]);
		}
		// 2
		if (a[i] == 0) {
			dp[i][2] = max(dp[i][2], dp[i-1][0] + 1);
		} else if (a[i] == 2) {
			for (int j=0;j<4;j++) dp[i][2] = max(dp[i][2], dp[i - 1][j]);
		}
		// 3
		if (a[i] == 0) {
			dp[i][3] = max(dp[i][3], dp[i-1][1] + 1);
			dp[i][3] = max(dp[i][3], dp[i-1][2] + 1);
		} else if (a[i] == 1 || a[i] == 2) {
			dp[i][3] = max(dp[i][3], dp[i-1][0] + 1);
		} else if (a[i] == 3) {
			for (int j=0;j<4;j++) dp[i][3] = max(dp[i][3], dp[i - 1][j]);
		}

	}
	cout << max(max(dp[n-1][0], dp[n-1][1]), max(dp[n-1][2], dp[n-1][3])) << endl;
	return 0;
}

int main() {
	ios::sync_with_stdio(0);
	// precompute();
	// int t; cin >> t; for (int i=1;i<=t;i++)
	solve();
	// cout << (solve() ? "YES" : "NO") << endl;
	return 0;
}
