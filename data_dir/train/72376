#include <bits/stdc++.h>

using namespace std;
int N;
string S;

int memo[100000][3][3];

int go(int i, int prev, int change) {
    if (i == N)
        return 0;

    if ( memo[i][prev][change] != -1)
        return memo[i][prev][change];

    int ret = go(i + 1, prev, change); // skip

    // take
    if (S[i] - '0' != prev && (change == 0 || change == 2)) {
        ret = max(ret, go(i + 1, S[i] - '0', change) + 1);
    }
    if (S[i] - '0' != prev && change == 1) {
        ret = max(ret, go(i + 1, S[i] - '0', 2) + 1);
    }

    if (S[i] - '0' == prev && (change == 0 || change == 1)) {
        ret = max(ret, go(i + 1, 1 - prev, 1) + 1);
    }

    return memo[i][prev][change] = ret;
}

int main() {
    cin >> N >> S;
    memset(memo, -1, sizeof memo);
    cout << go(0, 2, 0);

    return 0;
}
