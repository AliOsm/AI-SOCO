#include <bits/stdc++.h>
#define MAX (ll)(1e5 + 7)
#define MOD (ll)(1e9 + 9)
#define INF (ll)(1e17)
using namespace std;
using ll = long long;

int main () {
	ios_base :: sync_with_stdio (false);
	cin.tie (nullptr);
	int t;
	cin >> t;
	while (t--) {
		int n, m;
		cin >> n >> m;
		int dp[n + 1][1 << n];
		int ar[n][m];
		vector<pair<int, int>> vp;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				cin >> ar[i][j];
			}
		}
		for (int j = 0; j < m; j++) {
			int ma = 0;
			for (int i = 0; i < n; i++) {
				ma = max (ar[i][j], ma);
			}	
			vp.push_back (make_pair (ma, j));
		}
		sort (vp.begin (), vp.end (), greater<pair<int, int>> ());
		memset (dp, 0, sizeof (dp));
		int ans[n][1 << n];
		for (int i = 0; i < min (n, m); i++) {
			for (int j = 0; j < 1 << n; j++) {
				vector<int> vv;
				int ma = 0;
				for (int x = 0; x < n; x++) {
					if ((1 << x) & j) {
						vv.push_back (x);
					}
				}
				for (int x = 0; x < n; x++) {
					int su = 0;
					for (int t : vv) {
						su += ar[(t + x) % n][vp[i].second];
					}
					ma = max (su , ma);
				}
				ans[i][j] = ma;
			}
		}
		for (int x = 0; x < min (n, m); x++) {
			for (int i = 0; i < (1 << n); i++) {
				for (int j = 0; j < (1 << n); j++) {
					if (!(i & j)) {
						dp[x + 1][i | j] = max (dp[x][i] + ans[x][j], dp[x + 1][i | j]);
					}
				}
			}
		}
		cout << dp[min (n, m)][(1 << n) - 1]  << "\n";
	}
}
