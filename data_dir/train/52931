#include <bits/stdc++.h>

using namespace std;

const int N = 510;
const long long inf = (long long)1e18 + 10;

int n;
int a[N];
long long ans = inf;
vector <long long> d;

int ceil(int x, int y) {
  return (x + y - 1) / y;
}

int getcnt(int a, int x) {
  return ceil(a, (x + 1));
}

bool check(int x) {
  for (int i = 0; i < n; ++i) {
    int t = ceil(a[i], (x + 1));
    if (a[i] % t == 0) {
      if (a[i] / t != x && a[i] / t != x + 1) return 0;
    } else {
      if (a[i] / t != x) return 0;
    }
  }
  return 1;
}

long long get(int x) {
  if (!check(x)) return inf;
  long long ret = 0;
  for (int i = 0; i < n; ++i) {
    ret += getcnt(a[i], x);
  }
  return ret;
}

int main() {
  scanf("%d", &n);
  for (int i = 0; i < n; ++i) {
    scanf("%d", a + i);
  }
  for (int j = 1; j * j <= a[0]; ++j) {
    d.push_back(j);
    d.push_back(a[0] / j);
    if (a[0] % j == 0) {
      d.push_back(j - 1);
      d.push_back(a[0] / j - 1);
    }
  }
  sort(d.begin(), d.end());
  for (int i : d) {
    ans = min(ans, get(i));
  }
  printf("%lld\n", ans);
  return 0;
}
