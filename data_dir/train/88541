#include <bits/stdc++.h>
using namespace std;

typedef long long int64;
const int MAX = 2e5 + 5;
const int64 INF = 1e18;
int n, c[MAX];
int64 dp[MAX][10];
char a[MAX], b[10];

int64 F(int i, int j) {
	if(j >= 5)
		return INF;

	if(i == n + 1)
		return 0;

	if(dp[i][j] != -1)
		return dp[i][j];

	int64 ans = INF;

	if(a[i] != b[j] && F(i + 1, j) != INF)
		ans = min(ans, F(i + 1, j));

	if(a[i] == b[j] && F(i + 1, j + 1) != INF)
		ans = min(ans, F(i + 1, j + 1));

	if(a[i] == b[j] && F(i + 1, j) != INF)
		ans = min(ans, F(i + 1, j) + c[i]);

	return dp[i][j] = ans;
}

int main() {
	scanf("%d%s", &n, a + 1);

	b[1] = 'h';
	b[2] = 'a';
	b[3] = 'r';
	b[4] = 'd';

	for(int i = 1; i <= n; i++)
		scanf("%d", &c[i]);

	memset(dp, -1, sizeof(dp));
	printf("%lld\n", F(1, 1));

	return 0;
}