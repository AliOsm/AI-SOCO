#include<bits/stdc++.h>
using namespace std;


int d[100005], L[100005], s[100005];
pair<int, int> t[100005], r[100005];

int c[2005];





int main() {
    ios::sync_with_stdio(false);
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> L[i];
    for (int i = 0; i < n; i++)
        cin >> d[i];

    for (int i = 0; i < n; i++)
        t[i] = make_pair(L[i], d[i]);

    sort(t, t + n);
    for (int i = n - 1; i >= 0; i--)
        s[i] = s[i + 1] + t[i].second;

    int ans = 1000000000;
    for (int i = 0; i < n; i++) {
        if (i && t[i].first == t[i - 1].first) {
            c[t[i].second]++;
            continue;
        }

        int cnt = 0;
        while (i + cnt < n && t[i + cnt].first == t[i].first)
            cnt++;
        int energy = s[i + cnt];
        int tot = i + cnt;
        int good = cnt;
        int bad = tot - good;
        bad -= good - 1;
        for (int val = 0; val <= 200; val++) {
            if (bad > c[val])
                bad -= c[val], energy += val * c[val];
            else if (bad > 0)
                energy += bad * val, bad = 0;
        }
        c[t[i].second]++;
        if (bad <= 0)
            ans = min(ans, energy);
    }

    cout << ans << endl;
    return 0;
}
