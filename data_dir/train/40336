//In the name of God

#include <bits/stdc++.h>
using namespace std;
#define lol long long
#define mp make_pair
const int MAXN=3e3+10;
vector <int> g[MAXN][2];
set<pair<int,int> > s[MAXN][2];
int dis[MAXN][MAXN][2];
bool mark[MAXN];

void bfs(int v,int t)
{
  queue <int> q;
  q.push(v);
  dis[v][v][t]=0;
  mark[v]=true;
  while(!q.empty())
    {
      int u=q.front();
      s[v][t].insert({dis[v][u][t],u});
      if(s[v][t].size()>3)
	s[v][t].erase(s[v][t].begin());
      q.pop();
      for(int w:g[u][t])
	if(mark[w]==false)
	  {
	    dis[v][w][t]=dis[v][u][t]+1;
	    q.push(w);
	    mark[w]=true;
	  }
    }
}

inline int calc(int a,int b,int c,int d)
{
  if(a==b or a==c or a==d or b==c or b==d or c==d)
    return 0;
  if(dis[b][c][0]==0)
    return 0;
  return dis[a][b][0]+dis[b][c][0]+dis[c][d][0];
}

int main()
{
  ios::sync_with_stdio(false);
  memset(dis,0,sizeof dis);
  int n,m;
  cin>>n>>m;
  for(int i=0;i<m;i++)
    {
      int v,u;
      cin>>v>>u;
      v--;u--;
      g[v][0].push_back(u);
      g[u][1].push_back(v);
    }
  for(int i=0;i<n;i++)
    {
      memset(mark,0,sizeof mark);
      bfs(i,0);
      memset(mark,0,sizeof mark);
      bfs(i,1);
    }
  int ans=0;
  pair<pair<int,int>,pair<int,int> > res;
  for(int b=0;b<n;b++)
    for(int c=0;c<n;c++)
      for(pair<int,int> a:s[b][1])
	for(pair<int,int> d:s[c][0])
	  {
	    if(calc(a.second,b,c,d.second)>ans)
	      {
		ans=calc(a.second,b,c,d.second);
		res=mp(mp(a.second+1,b+1),mp(c+1,d.second+1));
	      }
	  }
  cout<<res.first.first<<" "<<res.first.second<<" "<<res.second.first<<" "<<res.second.second<<endl; 
  return 0;
}
