#include <bits/stdc++.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;

bool good[256];

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	string s;
	cin >> s;
	for(auto &each : s) {
		good[each] = true;
	}
	
	string t;
	cin >> t;

	string suf = "";
	while(!t.empty() && t.back() != '*') {
		suf += t.back(); t.pop_back();
	}
	reverse(suf.begin(), suf.end());

	reverse(t.begin(), t.end());
	string pref = "";
	while(!t.empty() && t.back() != '*') {
		pref += t.back(); t.pop_back();
	}

	bool tem_essa_porra = !t.empty();
	int q;
	cin >> q;
	while(q--) {
		string p;
		cin >> p;
		bool bad = false;
		if(pref.size() + suf.size() > p.size()) {
			cout << "NO" << '\n';
			continue;
		}
		ford(i, suf.size() - 1, 0) {
			if(suf[i] == p.back() || (suf[i] == '?' && good[p.back()])) {
				p.pop_back();	
			}
			else {
				bad = true;
			}
		}
		
		reverse(p.begin(), p.end());
		fori(i, 0, pref.size()) {
			if(pref[i] == p.back() || (pref[i] == '?' && good[p.back()])) {
				p.pop_back();
			}
			else {
				bad = true;
			}
		}

		for(auto &each : p) {
			if(good[each]) {
				bad = true;
			}
		}

		if(!tem_essa_porra && !p.empty()) {
			bad = true;
		}

		cout << (bad ? "NO" : "YES") << '\n';
	}

	return 0;
}
