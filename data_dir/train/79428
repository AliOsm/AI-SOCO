#include<bits/stdc++.h>
using namespace std;

#define scl(x) scanf("%lld",&x)
#define sc(x)  scanf("%d",&x)
#define ll long long
#define lop(i,n) for(int i=0;i<n;++i)
typedef pair<int,int> ii;
typedef pair<ll,ll> pll;



const int maxN=205,maxE=102*100*2;
const int oo=1e9;
int src=maxN-1,snk=maxN-2,cap[maxE];
int head[maxN],headcpy[maxN],nxt[maxE],to[maxE],edgeCnt;

void init(){
	memset(head,-1,sizeof head);
	edgeCnt=0;
}
void addedge(int u,int v,int c){
	nxt[edgeCnt]=head[u];
	head[u]=edgeCnt;
	cap[edgeCnt]=c;
	to[edgeCnt++]=v;
}
void addbiedge(int u,int v,int c){
	addedge(u,v,c);
	addedge(v,u,0);
}
int Rank[maxN];

int ddfs(int cur=src,int flow=oo){
	if(cur==snk)
		return flow;
	for(int &i=headcpy[cur];i!=-1;i=nxt[i]){
		int t=to[i];
		if(!cap[i]||Rank[t]!=Rank[cur]+1)
			continue;
		int f=ddfs(t,min(flow,cap[i]));
		cap[i]-=f;
		cap[i^1]+=f;
		if(f)
			return f;
	}
	return 0;
}
int Q[maxN];
bool dbfs(){
	memset(Rank,-1,sizeof Rank);
	int Qi=0;
	Q[Qi++]=src;
	Rank[src]=0;
	for(int i=0;i<Qi;++i){
		int cur=Q[i];
		int r=Rank[cur];
		for(int j=head[cur];j!=-1;j=nxt[j]){
			int t=to[j];
			if(!cap[j]||Rank[t]!=-1)
				continue;
			Rank[t]=r+1;
			Q[Qi++]=t;
			if(t==snk)
				return 1;
		}
	}
	return 0;
}

int dinic(){
	int ret=0,f;
	while(dbfs()){
		memcpy(headcpy,head,sizeof head);
		while(f=ddfs()){
			ret+=f;
		}
	}
	return ret;
}


int n,m,cnt[102];
int main(){
#ifndef ONLINE_JUDGE
	freopen("i.txt","r",stdin);
#endif
	init();
	sc(n),sc(m);
	lop(i,n){
		int v;sc(v);++cnt[v];
	}
	for(int i=1;i<=m;i++){
		addbiedge(src,i,cnt[i]);
		addbiedge(m+i,snk,cnt[i]);
		for(int j=1;j<=m;j++){
			if(i==j)continue;
			addbiedge(i,j+m,oo);
		}
	}
	printf("%d\n",dinic());
	for(int i=1;i<=m;i++){
		for(int j=head[i];~j;j=nxt[j]){
			if(to[j]==src)continue;
			lop(z,cap[j^1]){
				printf("%d %d\n",i,to[j]-m);
			}
		}
	}
	for(int j=head[src];~j;j=nxt[j]){
		lop(z,cap[j])
				printf("%d %d\n",to[j],to[j]);
	}
}
