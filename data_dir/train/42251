#include <cstdio>
#include <algorithm>
using namespace std;
typedef long long ll;

const int MAXN = 755;
int N, M;
int A[MAXN];
ll dp[MAXN][MAXN];
ll val[MAXN];

int main()
{
    scanf("%d %d", &N, &M);
    for (int i = 0; i < N; i++)
        scanf("%d", &A[i]);

    for (int i = 0; i <= N; i++)
        for (int j = 0; j <= N; j++)
            dp[i][j] = 1LL<<60;
    dp[N][0] = 0;

    for (int i = N - 1; i >= 0; i--)
        for (int j = 0; j <= N - i; j++)
        {
            dp[i][j] = min(dp[i][j], max(0LL, dp[i + 1][j] - A[i]));
            if (j > 0)
                dp[i][j] = min(dp[i][j], dp[i + 1][j - 1]);
        }

    for (int i = 0; i <= N; i++)
        val[i] = -dp[0][i];

    for (int i = 0; i < M; i++)
    {
        ll q;
        scanf("%I64d", &q);
        printf("%d\n", (int)(lower_bound(val, val + N + 1, -q) - val));
    }

    return 0;
}
