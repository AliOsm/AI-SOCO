#include <cstdio>
#include <cstring>

#define min(a, b) (a < b ? a : b)
#define max(a, b) (a > b ? a : b)

char a[105][10005];
int l[105][10005], r[105][10005], q[10005];

int main(int argc, char** argv) {
  int n, m, ac, cnt;
  int *qf, *qb, u, v;
  
  memset(l, 0x01, sizeof l);
  memset(r, 0x01, sizeof r);
  
  scanf("%d%d", &n, &m);
  getchar();
  for (int i = 0; i < n; i++)
    gets(a[i]);
  
  for (int i = 0; i < n; i++) {
    qf = qb = q;
    for (int j = 0; j < m; j++)
      if (a[i][j] == '1') {
        l[i][j] = 0;
        *qb++ = j;
      }
    while (qf < qb) {
      u = *qf++;
      v = u + 1;
      if (v == m)
        v = 0;
      if (l[i][v] == 0x01010101) {
        l[i][v] = l[i][u] + 1;
        *qb++ = v;
      }
    }
  }
  
  for (int i = 0; i < n; i++) {
    qf = qb = q;
    for (int j = 0; j < m; j++)
      if (a[i][j] == '1') {
        r[i][j] = 0;
        *qb++ = j;
      }
    while (qf < qb) {
      u = *qf++;
      v = u - 1;
      if (v == -1)
        v = m - 1;
      if (r[i][v] == 0x01010101) {
        r[i][v] = r[i][u] + 1;
        *qb++ = v;
      }
    }
  }
  
  ac = 0x7fffffff;
  for (int j = 0; j < m; j++) {
    cnt = 0;
    for (int i = 0; i < n; i++)
      cnt += min(l[i][j], r[i][j]);
    ac = min(ac, cnt);
  }
  
  if (ac >= 0x000f1c3b)
    puts("-1");
  else
    printf("%d\n", ac);
  
  return 0;
}
