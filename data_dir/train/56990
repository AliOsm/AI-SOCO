#include <iostream>
#include <set>
#include <map>
#include <vector>
#include <string>
#include <algorithm>
#include <iomanip>
using namespace std;



string s;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cin >> s;

    //vector< map < pair <char, char>, int> > maps(s.size());
    vector< vector<int> > maps(s.size());
    for (int i = 0; i < s.size(); i++)
        maps[i].resize(26 * 26);
    for (int i = 0; i < s.size(); i++) {
        for (int add = 1; add < s.size(); add++) {
            maps[add][(s[i] - 'a') * 26 + (s[(i + add) % s.size()] - 'a')]++;
        }
    }

    vector<double> bests(26);
    for (int i = 1; i < s.size(); i++) {
        vector<double> goods(26);
        vector<double> alls(26);
        for (int z = 0; z < 26 * 26; z++) {
            int iff = z / 26;
            int is = maps[i][z];
            alls[iff] += is;
            if (is == 1)
                goods[iff]++;
        }
        for (int c = 0; c < 26; c++)
            if (alls[c] != 0)
                bests[c] = max(bests[c], goods[c] / alls[c]);
    }

    vector<double> ver(26);
    for (auto it : s)
        ver[it - 'a']++;
    for (auto & it : ver)
        it /= s.size();

    double ans = 0;
    for (int c = 0; c < 26; c++)
        ans += ver[c] * bests[c];

    cout << fixed << setprecision(12) << ans << endl;
}
