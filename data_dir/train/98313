#include <iostream>
#include <vector>
using namespace std;
typedef vector<vector<long long> > mat;

long long det2(const mat& m, int c1, int c2)
{
    return m[1][c1] * m[2][c2] - m[1][c2] * m[2][c1];
}

long long det3(const mat& m)
{
    return m[0][0] * det2(m, 1, 2) - m[0][1] * det2(m, 0, 2) + m[0][2] * det2(m, 0, 1);
}

bool test(long long n, long long k, long long d1, long long d2)
{
    if (n % 3 != 0)
        return false;
    for (long long s0 = -1; s0 <= 1; s0 += 2) {
        for (long long s1 = -1; s1 <= 1; s1 += 2) {
            mat d(3);
            d[0].push_back(s0);
            d[0].push_back(-s0);
            d[0].push_back(0);
            d[1].push_back(0);
            d[1].push_back(s1);
            d[1].push_back(-s1);
            d[2].push_back(1);
            d[2].push_back(1);
            d[2].push_back(1);
            long long det = det3(d);
            if (det == 0)
                continue;
            //cout << "s0=" << s0 << " s1=" << s1 << " det=" << det << endl;
            bool valid = true;
            vector<long long> ans(3);
            for (long long i = 0; i < 3; i++) {
                mat vm(d);
                vm[0][i] = d1;
                vm[1][i] = d2;
                vm[2][i] = k;
                long long num = det3(vm);
                //cout << "num" << i << " " << num << endl;
                ans[i] = num / det;
                valid = (valid && (num % det == 0 && num / det >= 0 && num / det <= n / 3));
            }
            if (valid) {
                //cout << "ans:" << ans[0] << " " << ans[1] << " " << ans[2] << endl;
                return true;
            }
        }
    }
    return false;
}

int main()
{
    long long t, n, k, d1, d2;
    cin >> t;
    for (int i = 0; i < t; i++) {
        cin >> n >> k >> d1 >> d2;
        cout << (test(n, k, d1, d2) ? "yes" : "no") << endl;
    }
}