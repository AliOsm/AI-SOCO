# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) (x&1)
typedef long long ll;
typedef long double ld;
const ll oo = /*2 * 1000 * 1000 * 1000*/0x3f3f3f3f;
const int _cnt = 1000 * 1000;
const int _p = 1000 * 1000 * 1000 + 7;
ll o(ll x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
//ll gcd(ll a, ll b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }
using namespace std;

void file_put() {
    freopen("filename.in", "r", stdin);
    freopen("filename.out", "w", stdout);
}

int n;
ll s[4005][4005],c[4005][4005],B[4005],T[4005],ans=1,sum=0;

void get_s(){
    for (int i=1; i<=n; i++)
        for (int j=1; j<=n; j++){
            if (j==0 || j==1){
                s[i][j]=j;
                continue;
            }
            s[i][j]=j*s[i-1][j]+s[i-1][j-1];
        }
}

void get_c(){
    c[1][0]=c[1][1]=1;
    for (int i=2; i<=n; i++)
        for (int j=0; j<=i; j++){
            if (j==0) {
                c[i][j]=1;
                continue;
            }
            c[i][j]=(c[i-1][j-1]+c[i-1][j])%_p;
        }
}

void Bell(){
    B[0] = 1;
    B[1] = 1;
    T[0] = 1;
    for(int i=2;i<=n;i++)
    {
        T[i-1] = B[i-1];
        for(int j=i-2;j>=0;j--)
            T[j] = (T[j]+T[j+1])%_p;
        B[i] = T[0];
    }
}

int main() {
    //file_put();

    scanf("%d",&n);
    Bell();
    get_c();
    for (int i=1; i<=n-1; i++) {
        ans+=B[i]*c[n][i];
        ans%=_p;
    }
    cout<<ans<<endl;

    return 0;
}
