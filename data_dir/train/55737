#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(s) ((int)(s.size()))
#define all(s) s.begin(),s.end()
#define rep(i,a,n) for(int i=a;i<=n;++i)
#define per(i,n,a) for(int i=n;i>=a;--i)

typedef long long ll;
typedef unsigned long long ull;

using namespace std;

const int MAXN = 5e5 + 256;
const char nxtl = '\n';
const double eps = (double)1e-9;
template<typename T> inline bool updmin(T &a, const T &b) {return a > b ? a = b, 1 : 0;}
template<typename T> inline bool updmax(T &a, const T &b) {return a < b ? a = b, 1 : 0;}

int n, a, b, k;
int mod = (int)1e9+7;
int dp[5055][5055];
inline int add(int x, int y) {
	if((x+=y) >= mod) x -= mod;
	if(x < 0) x += mod;
	return x;
}

int main() {
	#ifdef accepted
		freopen(".in", "r", stdin);
		freopen(".out", "w", stdout);
	#endif
	cin >> n >> a >> b >> k;
	dp[0][a] = 1;
	dp[0][a+1] = -1;
	rep(i, 0, k) {
		rep(j, 1, n) dp[i][j] = add(dp[i][j], dp[i][j-1]);
		rep(j, 1, n) {
			int d = abs(j-b);
			if(!d) continue;
			// int val = pref[i][min(n, j+d-1)] - pref[i][max(0, j-d)];
			dp[i+1][max(1, j-d+1)] = add(dp[i+1][max(1, j-d+1)], dp[i][j]);
			dp[i+1][min(n+1, j+d)] = add(dp[i+1][min(n+1, j+d)], -dp[i][j]);
			dp[i+1][j] = add(dp[i+1][j], -dp[i][j]);
			dp[i+1][j+1] = add(dp[i+1][j+1], dp[i][j]);
		}
	}
	int res = 0;
	rep(i, 1, n) {
		res = add(res, dp[k][i]);
		// cerr << dp[1][i] << ' ';
	}
	cout << res << nxtl;

	return 0;
}