#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define pi 3.141592653589793
using namespace std;



int main() {
//    cout << fixed << setprecision(10);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);


    int n, m, k;
    cin >> n >> m >> k;
    string a[n];
    for (int i = 0; i < n; i++) cin >> a[i];

    int dp[n][k + 1], b[n][m + 1];
    int maxi = 250000;
    for (int i = 0; i < n; i++) {
        fill(b[i], b[i] + m + 1, maxi);
        fill(dp[i], dp[i] + k + 1, maxi);
        b[i][0] = 0;
        for (int j = 0; j < m; j++) {
            int cur = 0;
            for (int kk = j; kk < m; kk++) {
                cur += a[i][kk] == '1';
                b[i][cur] = min(b[i][cur], kk - j + 1);
            }
        }
    }


    int total[n];
    for (int i = 0; i < n; i++) {
        total[i] = count(a[i].begin(), a[i].end(), '1');
    }

    for (int j = 0; j < k + 1; j++) {
        dp[0][j] = b[0][max(0, total[0] - j)];
    }

    for (int i = 0; i < n; i++) {
        int l = -1, r = -1;
        for (int j = 0; j < m; j++) {
            if (a[i][j] == '1') {
                if (l == -1) l = j;
                r = j;
            }
        }

        dp[i][0] = (l == -1 ? 0 : r - l + 1) + (i ? dp[i - 1][0] : 0);
    }


    for (int i = 1; i < n; i++) {
        for (int j = 1; j < k + 1; j++) {
            dp[i][j] = maxi;
            for (int here = 0; here < j + 1; here++) {
                dp[i][j] = min(dp[i][j], dp[i - 1][j - here] + b[i][max(0, total[i] - here)]);
            }
        }
    }

    cout << dp[n - 1][k];

}