#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)   for(long long i=a;i<=b;i++)
#define fr(i,a)     for(long long i=0;i<a;i++)
#define fd(i,a,b)   for(long long i=b;i>=a;i--)
#define clr(x)      memset(x,0,sizeof(x))
#define cln(x)      memset(x,-1,sizeof(x))
#define __          printf(" ")
#define _           printf("\n")
#define _o          printf("1\n")
#define stree       long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define mod         1000000007
#define read()      freopen("in.txt","r",stdin)
#define write()     freopen("out.txt","w",stdout)


struct node{
   long long n,cost;
   node(long long a,long long b){
      n=a,cost=b;
   }
   bool operator < (const node& cur) const{
      return cur.cost<cost;
   }
};
priority_queue<node>pq;
long long d[100010],cur;
vector< pair<long long,long long> >vec[100010];
vector< pair<long long, pair<long long,long long> > >path;


void disjastra(long long s){
    d[s]=0;
    pq.push(node(s,0));
    while(!pq.empty()){
        cur=pq.top().n;
        pq.pop();
        long long Size=vec[cur].size();
        fr(i,Size) if(d[cur]+vec[cur][i].second<d[vec[cur][i].first]){
            d[vec[cur][i].first]=d[cur]+vec[cur][i].second;
            pq.push(node(vec[cur][i].first,d[vec[cur][i].first]));
        }
    }
    return;
}


main(){
    fi(i,1,100000) d[i]=1e17;
    long long s,m,n,u,v,w,l;
    scanf("%lld %lld %lld",&n,&m,&s);

    fr(i,m){
       scanf("%lld %lld %lld",&u,&v,&w);
       vec[u].push_back(make_pair(v,w));
       vec[v].push_back(make_pair(u,w));
       path.push_back(make_pair(w,make_pair(u,v)));
    }
    disjastra(s);
    scanf("%lld",&l);
    long long ans=0,a,b,x,y;

    fr(i,m){
       w=path[i].first;
       u=path[i].second.first;
       v=path[i].second.second;
       if(l>d[u]) {
          a=l-d[u];
          if(w>a){
            b=w-a;
            if(d[v]+b>=l)ans++;
          }
       }
       swap(u,v);
       if(l>d[u]) {
          a=l-d[u];
          if(w>a){
            b=w-a;
            if(d[v]+b>l)ans++;
          }
       }
    }
    fi(i,1,n) if(d[i]==l) ans++;
    printf("%lld\n",ans);

    return 0;
}
