
 #include "bits/stdc++.h"
 using namespace std;

 int B[505];
 vector<pair<int,int> > Intervals;
 vector<int> A(505) , C;

 int main(){
  int Check , Num , N , i , k , j , Max , x;
  long long Sum;
  int pre , index , start , end , length;
  scanf( "%d" , &N );

     for( i = 1 ; i <= N ; ++i ){
      scanf( "%d" , &Num );
      A[i] = Num;
    }  
  
  scanf( "%d" , &k );

     for( i = 1 ; i <= k ; ++i )
      scanf( "%d" , B + i );
  
  start = 1;

     for( i = 1 ; i <= k ; ++i ){
      Check = 0;	
      Sum = 0LL; 	

         for( j = start; j <= N ; ++j ){
          Sum = Sum + A[j];   

             if( Sum == 1LL * B[i] )
              break; 
        }  
         
         if( j == N + 1 ){
          puts( "NO" );
          return 0;
        }
      
      Max = pre = A[start];
      index = start;
      end = j;

         for( j = start + 1 ; j <= end ; ++j ){
             if( A[j] != pre )
              Check = 1;	
             
             if( A[j] > Max ){
              Max = A[j];
              index = j; 
            }

          pre = A[j];     
        } 
          
         if( end - start + 1 >= 2 && Check == 0 ){
          puts( "NO" );
          return 0;
        }
      
      C.emplace_back( index );    
      Intervals.emplace_back( make_pair( start , end ) );
      start = j;   
    }
     
     if( j != N + 1 ){
      puts( "NO" );
      return 0; 
    }

  puts( "YES" );

     for( i = 0 ; i < C.size() ; ++i ){
      Check = 0;	
      start = Intervals[i].first;
      end = Intervals[i].second;
      x = C[i];
      Max = A[x];
         
         if( end - start + 1 >= 2 ){
             for( j = x ; j <= end ; ++j ){
                 if( A[j] != Max )
                  continue;
             
                 if( j == start ){
                     if( A[j + 1] != Max ){
                      C[i] = j;
                      break;
                    }

                  continue;  
                }

                 if( j == end ){
                     if( A[j - 1] != Max )
                      C[i] = j;

                  break;        
                }  

                 if( A[j - 1] != Max || A[j + 1] != Max ){
                     if( A[j + 1] != Max ){
                      Check = 1;
                      printf( "%d R\n" , i + j - start + 1 );
                    }

                  C[i] = j;     	
                  break;
                }
            }      
        }
           
      index = C[i] - start + 1; 
      length = end - start + 1 - index;

         if( Check == 1 )
          --length;
          	
      index += i;
          
         for( ; index > i + 1 ; --index )
          printf( "%d L\n" , index );

         for( j = 1 ; j <= length ; ++j )
          printf( "%d R\n" , i + 1 );
    }

  return 0;
}