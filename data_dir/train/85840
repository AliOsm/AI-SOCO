#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<ctime>
#include<memory.h>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#define sqr(x) ((x)*(x))
#define sqrt(x) sqrt((x)*1.)
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))
#define abs(x) ((x)>0?(x):-(x))
#define getar(m,n) for(int _=0;_<n;++_) cin>>(m)[_];
#define fill(m,v) memset(m,v,sizeof(m))
#define flush {cout.flush();fflush(stdout);}
#define random(x) (((rand()<<15)+rand())%(x))
#define pi 3.1415926535897932
#define y1 stupid_cmath
#define y0 stupid_cmath_make_me_cry
#define tm stupid_ctime
#define long long long
#define foreach(c,i) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)
using namespace std;

int n,m;
int i,j,k,l;

const int N = 111 + 66;
const int T = (1<<15) +66;
string s[N];
int p[N][N];

long ans;
int a[N];
bool u[N];

void g(int i, int k, long res){
	if(k==m){
	//cout<<"!"<<i<<' '<<k<<' '<<res<<endl;
	//for(j=0;j<k;++j) cout<<a[j]<<' '; cout<<endl;
		ans = max(ans,res);
		return;
	}
	
	if(i==n) return;
	
	g(i+1,k,res);
	
	int t=0;
	for(j=0;j<k;++j) t+=p[i][a[j]];
	a[k] = i;
	g(i+1,k+1,res+t);
}

int main(){
//	freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
	
	cin>>n>>m;
	getar(s,n);
	
	for(i=0;i<n;++i)
	for(j=0;j<n;++j){
		for(k=0; k<s[i].size() && k<s[j].size() && s[i][k]==s[j][k]; ++k);
		p[i][j] = k;
	}
	
	g(0,0,0);
	
	cout<<ans<<endl;
	
	return 0;
}
