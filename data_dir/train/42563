#pragma comment(linker, "/STACK:64000000")
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <sstream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define pii pair < int, int >
#define pll pair < long long, long long>
#define ull unsigned long long
#define y1 stupid_cmath
#define left stupid_left
#define right stupid_right
#define vi vector <int>
#define sz(a) (int)a.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x) * (x))

const int inf = (int)1e9;
const int mod = inf + 7;
const double eps = 1e-9;
const double pi = acos(-1.0);

// x1 x2 x3 ... xn
// a[i] - x[i] + x[i - 1] == 0
// x[i] - x[i - 1] = a[i]
// x[n - 1] - x[n - 2] = a[n - 1]
// x[n - 2] = x + pr[n - 2] - pr[0]
// ...
// x[i] = x + pr[i] - pr[0]
// ...
// x[2] = a[2] + a[1] + x
// x[1] = a[1] + x
// x[0] = a[0] + x + pr[n - 1] - pr[0]

int n;
int a[200100];
ll pr[200200];
map <ll, int> cnt;
int ans = 0;

void add(ll x) {
    cnt[x]++;
    ans = max(ans, cnt[x]);
}

int main(){
    
    scanf("%d", &n);
    for (int i = 0; i < n; i++) scanf("%d", a + i);
    
    for (int i = 0; i < n; i++) {
        pr[i] = a[i];
        if (i) pr[i] += pr[i - 1];
    }
    
    add(-pr[n - 1] - a[0] + pr[0]);
    for (int i = 1; i < n; i++)
        add(pr[0] - pr[i]);
    
    cout << n - ans << endl;
    
    return 0;
}
