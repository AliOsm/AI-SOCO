#include <bits/stdc++.h>

using namespace std;

#ifdef DGC
#include "debug.h"
#else
#define debug(...) 9715
#endif
typedef long long ll;
typedef long double ld;
typedef complex<ld> point;
#define F first
#define S second



int main()
{
	#ifdef DGC
		//freopen("a.in", "r", stdin);
		//freopen("b.out", "w", stdout);
	#endif

	ios_base::sync_with_stdio(0), cin.tie(0);

	int n;
	cin >> n;
	vector<int> a(n);
	for (auto &i : a) cin >> i;

	sort(a.begin(), a.end());
	set<int> s;
	for (auto i : a) s.insert(i);

	int mn = 0, mx = 0;
	while (!s.empty())
	{
		++mn;
		int x = *s.begin();
		s.erase(x);
		s.erase(x+1);
		s.erase(x+2);
	}

	map<int, int> mp;
	for (auto &i : a) ++mp[i];

	s.clear();
	for (auto i : mp)
	{
		if (s.find(i.F-1) == s.end())
		{
			s.insert(i.F-1);
			--i.S;
			++mx;
		}
		if (s.find(i.F) == s.end() && i.S)
		{
			s.insert(i.F);
			--i.S;
			++mx;
		}
		if (s.find(i.F+1) == s.end() && i.S)
		{
			s.insert(i.F+1);
			--i.S;
			++mx;
		}
	}

	cout << mn << " " << mx << "\n";

	return 0;
}
