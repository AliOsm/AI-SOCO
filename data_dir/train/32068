#include <bits/stdc++.h>
using namespace std;

int n;
vector<int> cnt;
vector<vector<int> > g;
vector<vector<vector<int> > > gg;
vector<char> ans;

void dfs(int v, char c) {
	ans[v] = c;
	for(int i = 0; i < g[v].size(); ++i) {
		int to = g[v][i];
		if(ans[to] == 'd') {
			ans[to] = c;
			dfs(to, c);
		}
	}
}

void dfs(int v) {
	for(int i = 0; i < g[v].size(); ++i) {
		int to = g[v][i];
		cnt[to]++;
	}
}

void check(char c) {
	cnt.clear();
	cnt.resize(n, 0);
	vector<int> arr;
	for(int i = 0; i < n; ++i) {
		if(ans[i] == c) {
			arr.push_back(i);
		}
	}
	for(int i = 0; i < arr.size(); ++i) {
		dfs(arr[i]);
	}
	for(int i = 0; i < arr.size(); ++i) {
		if(cnt[arr[i]] != int(arr.size() - 1)) {
			printf("No");
			exit(0);
		}
	}
}

void check(char c, char d) {
	vector<int> arr_1, arr_2;
	for(int i = 0; i < n; ++i) {
		if(ans[i] == c) {
			arr_1.push_back(i);
		}
		if(ans[i] == d) {
			arr_2.push_back(i);
		}
	}
	cnt.clear();
	cnt.resize(n, 0);
	for(int i = 0; i < arr_1.size(); ++i) {
		dfs(arr_1[i]);
	}
	for(int i = 0; i < arr_2.size(); ++i) {
		if(cnt[arr_2[i]] != int(arr_1.size())) {
			printf("No");
			exit(0);
		}
	}
	cnt.clear();
	cnt.resize(n, 0);
	for(int i = 0; i < arr_2.size(); ++i) {
		dfs(arr_2[i]);
	}
	for(int i = 0; i < arr_1.size(); ++i) {
		if(cnt[arr_1[i]] != int(arr_2.size())) {
			printf("No");
			exit(0);
		}
	}

}

int main (int argc, char *argv[])
{
	int m;
	scanf("%d%d", &n, &m);	
	g.resize(n);
	ans.resize(n, 'd');
	while(m--) {
		int from, to;
		scanf("%d%d", &from, &to);
		from--; to--;
		g[from].push_back(to);
		g[to].push_back(from);
	}
	for(int i = 0; i < n; ++i) {
		if(g[i].size() == n - 1) {
			ans[i] = 'b';
		}
	}
	for(int i = 0; i < n; ++i) {
		if(ans[i] == 'd') {
			dfs(i, 'a');
			break;
		}
	}
	for(int i = 0; i < n; ++i) {
		if(ans[i] == 'd') {
			dfs(i, 'c');
			break;
		}
	}
	for(int i = 0; i < n; ++i) {
		if(ans[i] == 'd') {
			printf("No");
			return 0;
		}
	}
	check('a');
	check('b');
	check('c');
	check('a', 'b');
	check('b', 'c');
	printf("Yes\n");
	for(int i = 0; i < n; ++i) {
		printf("%c", ans[i]);
	}

	return 0;
}

