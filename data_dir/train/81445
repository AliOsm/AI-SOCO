// https://serhatgiydiren.github.io/

#include <bits/stdc++.h>

using namespace std;


void solve(const int &test_id)
{
 int n,q,res=0,seen=INT_MAX;
 cin >> n;
 map < int , int > x;
 for(int i=0;i<n;i++)
 {
  cin >> q;
  x[q]++;
 }
 vector < int > y;
 for(auto it=x.begin();it!=x.end();++it) y.push_back(it->second);
 sort(y.rbegin(),y.rend());
 for(unsigned i=0;i<y.size();i++)
 {
  if (y[i]>=seen) y[i]=seen-1;
  if (y[i]==0) break;
  seen=y[i];
  res+=y[i];
 }
 cout << res << endl;
}

void solve_cases()
{
 int test_cases=1;
 cin >> test_cases;
 for(int i=1;i<=test_cases;i++) solve(i);
}

void fast_io()
{
 ios::sync_with_stdio(false);
 cin.tie(0);
 cout.tie(0);
 cout << fixed << setprecision(15);
 cerr << fixed << setprecision(15);
}

int main()
{
 fast_io();
 solve_cases();
 return EXIT_SUCCESS;
}
