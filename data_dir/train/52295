#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <algorithm>
#include <ctime>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define f first
#define s second
#define ll long long
#define mp make_pair
#define pb push_back
#define pii pair < int, int>
#define forit(it,S) for(typeof(S.begin()) it = S.begin(); it!= S.end(); it++)


using namespace std;
int const maxn = (int)2e6 + 111;
int const inf = (1<<30) - 1;

int n;
bool a[maxn], b[maxn];
pair < int, int > d1[maxn];
pair < int, int > d2[maxn];

bool used[maxn];

int main (){
	#ifdef LOCAL
	freopen ("input.txt", "r", stdin);
	freopen ("output.txt", "w", stdout);
	#endif


	cin >>n;

	for (int i=1;i<=2*n;i++){
		char c;
		cin >>c;
		a[i] = (c=='1');
	}
	for (int i=1;i<=2*n;i++){
		char c;
		cin >>c;
		b[i] = (c=='1');
	}


	for (int i=1;i<=2*n;i++){
		if ( a[i] == 1 && b[i] == 1){
			d1[i] = mp(4,i);							
		}
		else if ( a[i] == 1 && b[i] == 0){
			d1[i] = mp(3,i);
		}
		else if ( a[i] == 0 && b[i] == 1)
			d1[i] = mp(2,i);
		else 
			d1[i] = mp(1,i);
	}

	for (int i=1;i<=2*n;i++){
		if ( b[i] == 1 && a[i] == 1){
			d2[i] = mp(4,i);							
		}
		else if ( b[i] == 1 && a[i] == 0){
			d2[i] = mp(3,i);
		}
		else if ( b[i] == 0 && a[i] == 1)
			d2[i] = mp(2,i);
		else 
			d2[i] = mp(1,i);
	}


	sort ( d1 + 1, d1 + 2*n + 1);
	sort ( d2 + 1, d2 + 2*n + 1);

	reverse ( d1 + 1, d1 + 2*n + 1);
	reverse ( d2 + 1, d2 + 2*n + 1);



	int l1 = 1;
	int l2 = 1;
	int cnt = 1;
	while ( cnt<=n ){
		int pos1 = d1[l1].s;
		while ( l1 <= 2*n && used[pos1]){
			l1++;								
			pos1 = d1[l1].s;
		}

		used[pos1] = true;
		int x = a[pos1];


		int pos2 = d2[l2].s;
		while ( l2 <= 2*n && used[pos2]){
			l2++;
			pos2 = d2[l2].s;
		}

		used[pos2] = true;
		int y = b[pos2];

		if ( x > y){
			cout <<"First"<<endl;
			return 0;
		}
		else if ( x < y){
			cout <<"Second"<<endl;
			return 0;
		}
		cnt++;
	}

	cout <<"Draw"<<endl;




	return 0;
}










