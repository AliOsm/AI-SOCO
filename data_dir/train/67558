#include <bits/stdc++.h>
#define mk make_pair
#define fs first
#define sc second
using namespace std;
typedef long long ll;
typedef long double ld;
map <int , int> cnt1, cnt2, mp;
int ans[5010][1010], k[500010], w[110], ans1[110], nxor[5010];
int s[500010], t[500010];
set < int > s1, t1;
vector < pair<ll, ll> > v;
int main(){
  int n, m, q;
  while(cin>>n>>m>>q){
    for(int i=0; i<n; ++i)
        cin>>w[i];
    char ts[20];
    for(int i=0; i<m; ++i){
        scanf("%s",ts);
        s[i]=0;
        for(int j=0; j<n; ++j)
            if(ts[j]=='1')
                s[i]+=1<<j;
        s1.insert(s[i]);
        ++cnt1[s[i]];
    }
    for(int i=0; i<q; ++i){
        scanf("%s%d",ts,k+i);
        t[i]=0;
        for(int j=0; j<n; ++j)
            if(ts[j]=='1')
                t[i]+=1<<j;
        t1.insert(t[i]);
        ++cnt2[t[i]];
    }
    ll cnt=0, sm1, sm2, sm;
    for(int i=0; i<(1<<n); ++i){
        for(int j=0; j<n; ++j)
            if(!(i&(1<<j)))
                nxor[i]+=w[j];
    }
    for(auto tt:t1){
        v.clear();
        for(auto ss:s1){
            sm=nxor[tt^ss];
            v.push_back(mk(sm,cnt1[ss]));
        }
        sm1=sm2=0;
        for(int i=0; i<=100; ++i)
            ans1[i]=0;
        for(int j=0; j<v.size(); ++j){
            if(v[j].fs<=100)
                ans1[v[j].fs]+=v[j].sc;
        }
        ans[cnt][0]=ans1[0];
        for(int i=1; i<=100; ++i)
            ans[cnt][i]=ans1[i]+ans[cnt][i-1];
        mp[tt]=cnt;
        ++cnt;
    }
    int res, tmp;
    for(int i=0; i<q; ++i){
        tmp=mp[t[i]];
        res=ans[tmp][k[i]];
        printf("%d\n",res);
    }
  }
  return 0;
}


