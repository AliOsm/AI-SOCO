#include <bits/stdc++.h>
#define fst first
#define snd second
#define fore(i,a,b) for(int i=a,ThxDem=b;i<ThxDem;++i)
#define pb push_back
#define ALL(s) s.begin(),s.end()
#define FIN ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define SZ(s) int(s.size())
using namespace std;
typedef long long ll;
typedef pair<int,int> ii;

const int MAXN=4e5+10;
int n,m,a[MAXN];
map<int,int> dplow[MAXN],dpup[MAXN];
set<int> up[MAXN],low[MAXN];

int solveup(int i, int j){
	if(i==m+1) return j;
	if(dpup[i].count(j)) return dpup[i][j];
	int id=n+m+j-i,ans;
	auto it=up[id].lower_bound(i);
	//cout << i << " " << j << " " << *it << endl;
	//if(i==2&&j==1)exit(0);
	if(it==up[id].end()) ans=min(n,j+(m-i+1));
	else{
		int jmp=*it-i;
		ans=solveup(i+jmp,id+*it-n-m-1);
	}
	return dpup[i][j]=ans;
}

int solvelow(int i, int j){
	if(i==m+1) return j;
	if(dplow[i].count(j)) return dplow[i][j];
	int id=i+j,ans;
	//cout << "\ngo " << i << " " << j << "\n";
	auto it=low[id].lower_bound(i);
	//cout << *it << " id " << id << "\n";
	if(it==low[id].end()) ans=max(1,j-(m-i+1));
	else{
		int jmp=*it-i;
		ans=solvelow(i+jmp,id-*it+1);
	}
	return dplow[i][j]=ans;
}

int main(){FIN;
	cin>>n>>m;
	fore(i,1,m+1){
		cin>>a[i];
		up[n+m+a[i]-i].insert(i);
		low[a[i]+i].insert(i);
	}
	if(n==1) cout << "0\n",exit(0);
	ll ans=0;
	fore(i,1,n+1){
		//cout << "starting in " << i << ": low " << solvelow(0,i) << " and up " << solveup(0,i) << "\n";
		ans+=solveup(0,i)-solvelow(0,i)+1;
	}
	cout << ans << "\n";
}