//raja1999
#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx


using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >

//std::ios::sync_with_stdio(false);
int counti=1,haha[100001*63],trie[100001*63][2];
ll a[100001],arr[100001];
int add(ll x)
{
	int i=63,val,pos=0;
	haha[pos]++;
	while(i>=0)
	{
		if(x&((ll)1<<i))
			val=1;
		else val=0;
		if(trie[pos][val]==-1)
		{
			trie[pos][val]=counti++;
		}
		pos=trie[pos][val];
		haha[pos]++;
		i--;
	}
	return 0;
}
int remove(ll x)
{
	int i=63,val,pos=0;
	haha[pos]--;
	while(i>=0)
	{
		if(x&((ll)1<<i))
			val=1;
		else val=0;
		pos=trie[pos][val];
		haha[pos]--;
		i--;
	}
	return 0;
}
ll query(ll x)
{
	int i=63,val,pos=0;
	ll sum=0;
	while(i>=0)
	{
		if(x&((ll)1<<i))
		{
			val=1;
		}
		else
			val=0;
		if(trie[pos][val^1]!=-1&&haha[trie[pos][val^1]]>0)
		{
			sum+=(ll)1<<i;
			pos=trie[pos][val^1];
		}
		else
		{
			pos=trie[pos][val];
		}
		i--;
	}
	return sum;
}
int main(){
	std::ios::sync_with_stdio(false);
	int n,i,j;
	ll ans;
	ll maxx;

	rep(i,63*100001)
	{
		rep(j,2)
		{
			trie[i][j]=-1;
		}
	}
	cin>>n;
	ans=0;
	rep(i,n)
	{
		cin>>a[i];
		ans=(ans^a[i]);
		arr[i]=ans;
		//cout<<arr[i]<<endl;
	}
	//cout<<"hihihhhse"<<endl;
	add(0);
	rep(i,n)
	{
		add(arr[i]);
	}
	maxx=query(0);
	//cout<<maxx<<endl;
	for(j=n-1;j>0 ; j--)
	{
		remove(arr[j]);
		maxx=max(maxx,query(arr[j-1]^ans));
		//cout<<query(a[j])<<endl;
	}
	remove(arr[0]);
	maxx=max(maxx,query(ans));
	cout<<maxx<<endl;


} 
