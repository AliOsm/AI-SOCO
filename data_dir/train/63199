#include<bits/stdc++.h>
#include<sstream>
#include<string>
#define lli  long long int
#define ll long long
#define ld long double
#define mod 1000000007
#define M 100006
#define pb push_back
#define ff first
#define ss second
#define all(v) v.begin(),v.end()
#define mp make_pair
#define br cout<<endl;
#define f(i,a,b) for(int i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(int i=a;i>=b;i--)
#define sz(a) a.size()
#define pii pair< int,int >
#define pll pair< ll,ll >
#define vii vector<pii>
#define vii vector<pii>
#define viii vector<tri>
#define flush fflush(stdout)
#define in(a,n) lli a[n];for(lli i=0;i<n;i++)cin>>a[i];
#define printv(v) for(vector<lli> :: iterator itv=v.begin();itv!=v.end();itv++)cout<<*itv<<' ';br
#define prints(s) for(set<lli> :: iterator its=s.begin();its!=s.end();its++)cout<<*its<<' ';br
#define print2(a,b) cout<<a<<' '<<b;br
#define print3(a,b,c) cout<<a<<' '<<b<<' '<<c;br
#define print4(a,b,c,d) cout<<a<<' '<<b<<' '<<c<<' '<<d;br
#define pi 3.14159265359
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);
#define upper(a) transform(a.begin(),a.end(),a.begin(),::toupper);

using namespace std;

lli modexp(lli a,lli n)
{
    lli r=1;
    while(n){
        if(n&1)
            r=(r*a)%mod;
        a=(a*a)%mod;
        n>>=1;
    }
    return r;
}


lli stoi(string s){lli ans = 0;lli t = 1;fd(i, sz(s) - 1, 0)ans += (s[i] - '0') * t, t *= 10;return ans;}

/*
lli w[300000];
lli ans[300000];

lli get(lli x)
{
    if(x == w[x])
        return x;
    return w[x] = get(w[x]);
}

void merge(lli a, lli b)
{
    a = get(a);
    b = get(b);
    if(a == b)
        return ;
    //ans[a] += ans[b];
    w[b] = a;
}
*/


void solve()
{

    string s = "abcd";
    lli n;
    cin>>n;
    rep(i, n)
    {
        cout<<s[i % 4];
    }
    return ;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

     lli t;
//    cin>>t;
    t=1;
    while(t--)
    {

        solve();
    }
    return 0;
}
