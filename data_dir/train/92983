/*<<head>> {{{*/
#include <bits/stdc++.h>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <string>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
/*}}}*/                         // zr, zm
const int MOD = (int)1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = (int)1e5+7;

// ------- 变量 ------- //

int n;
int vis[N];

// ------- 函数 ------- //

vi prim;
bool notPrim[N];
void GetPrime(int n) {   // 预处理 [2, n) 的质数
    memset(notPrim, 0, sizeof(notPrim)); prim.clear();
    notPrim[0] = notPrim[1] = 1;
    rep(i, 2, n) {
        if (!notPrim[i]) prim.pb(i);
        for (int j = 0; j < sz(prim) && (ll)i * prim[j] < n; ++j) {
            notPrim[i*prim[j]] = 1;
            if (i % prim[j] == 0) break;
        }
    }
}

void Init() {
    GetPrime(10000);
}

int Solve() {
    /*
    int mx = 0;
    rep(i, 3, 1001) {
        int t = i / 2;
        rep(j, 0, 500) if (prim[j] >= i) {
            //dd(i); dd(prim[j]); de(prim[j]-i);
            if (prim[j] - i > t) {
                dd(i); de("asdf");
            }
            mx = max(mx, prim[j]-i);
            break;
        }
    }
    de(mx);
    //rep(i, 0, 500) printf("%d ", prim[i]);
*/
    vector <pii> edge;
    rep(i, 1, n+1) {
        if (i == n) edge.pb(mp(n, 1));
        else edge.pb(mp(i, i+1));
    }
    memset(vis, 0, sizeof(vis));
    for (auto o : prim) if (o >= n) {
        if (o == n) break;
        int cnt = o - n;
        rep(i, 1, n + 1) if (!vis[i]) {
            cnt--;
            edge.pb(mp(i, i+2));
            vis[i] = vis[i+2] = 1;
            if (!cnt) break;
        }
        break;
    }
    printf("%d\n", sz(edge));
    for (auto o : edge) printf("%d %d\n", o.fi, o.se);
    return 0;
}

// ------- main ------- //

int main ()
{
    //ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d", &n)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}