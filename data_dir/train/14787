#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

int main() {
  int n, m;
  cin >> n >> m;
  vector<long long> a(n), b(m);
  for (int i = 0; i < n; i++) cin >> a[i];
  for (int i = 0; i < m; i++) cin >> b[i];
  long long x;
  cin >> x;

  vector<pair<long long, int>> v;
  for (int i = 0; i < n; i++) {
    long long s = 0;
    for (int j = i; j < n; j++) {
      s += a[j];
      v.emplace_back(s, -(j - i + 1));
    }
  }
  sort(v.begin(), v.end());
  vector<pair<long long, int>> vs;
  vs.emplace_back(v[0].first, -v[0].second);
  for (int i = 1; i < v.size(); i++) {
    if (vs.back().first < v[i].first) {
      vs.emplace_back(v[i].first, max(vs.back().second, -v[i].second));
    }
  }

  int ans = 0;
  for (int i = 0; i < m; i++) {
    long long s = 0;
    for (int j = i; j < m; j++) {
      s += b[j];
      int k = (upper_bound(vs.begin(), vs.end(), make_pair(x / s, 1000000000)) - vs.begin()) - 1;
      if (k >= 0) {
        ans = max(ans, vs[k].second * (j - i + 1));
      }
    }
  }
  cout << ans << endl;
}

