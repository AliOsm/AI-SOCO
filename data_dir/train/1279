//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >

const int maxn=(int)(1e5+5);
const ll mod=(ll)(1e9+7);
int a[maxn],cnt[maxn];
bool vis[maxn];
vector< pii > res;

void merge(int n,vector<int>& v)
{
    int last=n;

    for(int i=0;i<v.size();i++)
    {
        res.pb({last,v[i]});

        last=v[i];
    }
}

int main()
{
    ios_base::sync_with_stdio(0);

    int n;cin>>n;bool ans=true;

    vector< pii > v;

    for(int i=1;i<n;i++)
    {
        int u1,v1;

        cin>>u1>>v1;

        if(v1!=n)
        {
            ans=false;
        }

        v.pb({u1,v1});
    }

    if(!ans)
    {
        cout<<"NO"<<endl;
    }

    else
    {
        vector< pii > list;

        for(int i=0;i<v.size();i++)
        {
            cnt[v[i].first]++;
        }

        vis[n]=true;

        for(int i=1;i<=n-1;i++)
        {
            if(cnt[i]>0)
            {
                vis[i]=true;list.pb({i,cnt[i]});
            }
        }

        for(int i=0;i<list.size();i++)
        {
            pii x=list[i];

            int now=x.second-1;

            vector<int> chain;

            for(int j=1;j<=x.first && now>0;j++)
            {
                if(!vis[j])
                {
                    chain.pb(j);vis[j]=true;now--;
                }
            }

            if(now==0)
            {
                chain.pb(x.first);

                merge(n,chain);
            }
            else
            {
                ans=false;break;
            }
        }

        if(ans)
        {
            cout<<"YES"<<endl;

            for(pii x:res)
            {
                cout<<x.first<<" "<<x.second<<endl;
            }
        }

        else
        {
            cout<<"NO"<<endl;
        }
    }

    return 0;
}
