///https://www.youtube.com/watch?v=vOIqVQ76Iug
#include<bits/stdc++.h>

using namespace std;
#define ll long long
#define dbug printf("I am here\n");
#define fast ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
const int maxn = 2e5+100;

const ll inf = 1e18;
ll arr[maxn] , n , k;
ll cum[maxn];

int ind(int lo , int hi , ll val){
    int ans = 0;
    while(lo <= hi){
        int mid = (lo + hi)/2;
        if(arr[mid] <= val){
            ans = mid;
            lo = mid + 1;
        }
        else hi = mid - 1;
    }
    return ans;
}

int ind_mn(int lo , int hi , int val){
    int ans = 0;
    while(lo <= hi){
        int mid = (lo + hi)/2;
        if(arr[mid] >= val){
            ans = mid;
            hi = mid - 1;
        }
        else lo = mid + 1;
    }
    return ans;
}

bool pos(ll diff){

    for(int i = 1; i<=n; i++){
        ll in = ind(i , n , arr[i] + diff);
        ll mx =  arr[i] + diff;
        ll cost = abs( (cum[i-1]) - ((i-1) * arr[i]) ) + abs( (cum[n] - cum[in]) - (mx * (n-in)));
        if(cost <= k)return true;
    }
    ll cost = 0;
    ll df = arr[n] - diff;
    for(int i = 1; i<=n; i++){
        int in = ind_mn(1 , i , arr[i] - diff);
        ll mn = arr[i] - diff;
        ll cost = abs((cum[n] - cum[i]) - (n-i)*arr[i]) + abs( (in-1) * (arr[i] - diff) - cum[in-1] );
        if(cost <= k)return true;
    }
    return false;

}

int main()
{
    fast;
    cin >> n >> k;
    for(int i = 1; i<=n; i++){
        cin >> arr[i];
    }
    sort(arr+1, arr+n+1);
    for(int i = 1; i<=n; i++){
        cum[i] = arr[i] + cum[i-1];
    }
    ll ans = 0;
    ll lo = 0 , hi = arr[n];
    while(lo <= hi){
        ll mid = (lo + hi)/2;
        if(pos(mid)){
            ans = mid;
            hi = mid - 1;
        }
        else lo = mid + 1;
    }
    cout << ans << endl;
    return 0;
}
