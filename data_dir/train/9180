#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

const int N = 1000100;

int n, m;
int W[N];
vector <int> a[N];
vector <ll> Pref[N];

int main()
{
    cin >> n >> m;

    for(int x = 2; x <= n; x++) scanf("%d", W + x);

    for(int x = n; x > 0; x--)
    {
        vector <int> L;
        vector <int> R;

        L.push_back(0);

        if(2 * x <= n)
            for(int y : a[2 * x])
                L.push_back(y + W[2 * x]);

        if(2 * x + 1 <= n)
            for(int y : a[2 * x + 1])
                R.push_back(y + W[2 * x + 1]);

        a[x].assign(L.size() + R.size(), 0);
        merge(L.begin(), L.end(), R.begin(), R.end(), a[x].begin());

        Pref[x].assign(a[x].size() + 1, 0);
        for(int i = 0; i < a[x].size(); i++)    Pref[x][i + 1] = (ll) a[x][i] + Pref[x][i];
    }

    while(m--)
    {
        int x, H;   scanf("%d%d", &x, &H);

        ll Ans = 0;

        for(int Last = -1, Cost = 0; x > 0; Last = x, Cost += W[x], x /= 2)
        {
            if(Cost < H)    Ans += (ll) H - Cost;

            for(int y = 2 * x; y <= 2 * x + 1; y++)
            {
                if(y <= n && y != Last)
                {
                    int i = upper_bound(a[y].begin(), a[y].end(), H - Cost - W[y]) - a[y].begin();

                    Ans += (ll) (H - Cost - W[y]) * i;
                    Ans -= Pref[y][i];
                }
            }
        }

        printf("%I64d\n", Ans);
    }
}
