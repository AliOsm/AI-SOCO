#include <cstdio>
#include <algorithm>
using namespace std;
long long dp[310][310], d[310][310];
const long long INF = 1ll << 60;
int main() {
	int n, m, k;
	scanf("%d%d%d", &n, &m, &k);
	for (int i = 0; i <= n; i++) {
		for (int j = 0; j <= n; j++) {
			d[i][j] = dp[i][j] = INF;
		}
	}
	for (int i = 0; i < m; i++) {
		int l, r;
		long long c;
		scanf("%d%d%I64d", &l, &r, &c);
		--l;
		for (int j = l; j < r; j++) {
			d[j][r] = min(d[j][r], c);
		}
	}
	dp[0][0] = 0;
	for (int i = 0; i < k; i++) {
		for (int j = 0; j < n; j++) {
			for (int t = j+1; t <= n; t++) {
				int ni = min(k, i + t - j);
				dp[ni][t] = min(dp[ni][t], dp[i][j] + d[j][t]);
			}
			dp[i][j+1] = min(dp[i][j+1], dp[i][j]);
		}
	}
	for (int j = 0; j < n; j++) dp[k][j+1] = min(dp[k][j+1], dp[k][j]);
	if (dp[k][n] >= INF) {
		printf("-1\n");
	} else {
		printf("%I64d\n", dp[k][n]);
	}
	return 0;
}
