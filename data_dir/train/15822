#include<iostream>
//#include <bits/stdc++.h>
using namespace std;
#include<algorithm>
#include<map>
#include<vector>
#include <iomanip>
#include <set>
#include<cmath>
#define F first
#define S second
#define pii pair<int,int>
#define pb push_back
#define int long long
#define mp make_pair
#define error(x) cout<<#x<<"="<<(x)<<endl;
void sp(double y,int x){cout<<fixed<<setprecision(x)<<y;}
int inf=1e9+10;
int const M=2e5+10;
int const M2=1e6+10;
int const M3=1e3+10;
int mod=1e9+7;
vector<int>st;
int k;
int a[4][4],b[4][4];
int po[4][4];
bool mark[4][4];
int cnt=0;
int dep[4][4];
int now[M],now2[M];
int inc=0;
void dfs(int i,int j)
{
    if(mark[i][j])
    {
        if(k<=dep[i][j]+1){
            cout<<now[k]<<" "<<k-now[k]+now2[k];
            exit(0);
        }
        int tmp=k;
        int ans=now[dep[i][j]];
        k-=dep[i][j];
        int last=cnt;
        int ans2=now2[dep[i][j]];
        cnt-=dep[i][j];
        ans+=(k/cnt)*(now[last]-now[dep[i][j]]);
        ans2+=(k/cnt)*(now2[last]-now2[dep[i][j]]);
        k%=cnt;
        ans+=now[dep[i][j]+k]-now[dep[i][j]];
        ans2+=now2[dep[i][j]+k]-now2[dep[i][j]];
        cout<<ans<<" "<<tmp-ans+ans2;
        exit(0);
    }
    mark[i][j]=1;
    cnt++;
    int flag=0;
    if(i==j)
        flag=-1;
    now[dep[i][j]+1]=now[dep[i][j]]+po[i][j];
    now2[dep[i][j]+1]=now2[dep[i][j]]+flag;
    int ne=a[i][j];
    int ne2=b[i][j];
    if(!mark[ne][ne2])
        dep[ne][ne2]=dep[i][j]+1;
    dfs(ne,ne2);
}
int sa(int x,int y){if(x%y==0)return x/y;return x/y+1;}
int binp(int x,int y){int ans=1;int t=x;while(y!=0){if(y%2==1){ans*=t;ans;}y/=2;t*=t;t;}return ans;}
main(){
	ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
	int a2,b2;
	cin>>k>>a2>>b2;
	int t=0;
	po[3][2]=1;
	po[2][1]=1;
	po[1][3]=1;
	for(int i=1;i<=3;i++)
        for(int j=1;j<=3;j++)
            cin>>a[i][j];
    for(int i=1;i<=3;i++)
        for(int j=1;j<=3;j++)
            cin>>b[i][j];
    dfs(a2,b2);
}
