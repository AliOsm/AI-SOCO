// KALAM
# include<bits/stdc++.h>

using namespace std;

const int N = 1000 + 77 , K = 57 , Mod = 1000000007;
int dp[N][K] , Fact[N];
int q;
int main() {
   Fact[0] = 1;
   for(int i = 1;i < N;++ i)
      Fact[i] = Fact[i - 1] * 1ll * i % Mod;
   for(int i = 0;i < N;++ i)
      dp[i][0] = 1;
   for(int i = 1;i < N;++ i)
      for(int j = 1;j < K;++ j){
         dp[i][j] = dp[i - 1][j];
         for(int k = j;k <= i;k += j)
            dp[i][j] = (dp[i][j] + dp[i - k][j - 1]) % Mod;
      }
   for(int i = 1;i < N;++ i)
      for(int j = 1;j < K;++ j)
         dp[i][j] = dp[i][j] * 1ll * Fact[j] % Mod;
   scanf("%d" , & q);
   while(q --){
      int n , k , A = 0;
      scanf("%d %d" , & n , & k);
      if(k < K)
         A = dp[n][k];
      printf("%d\n" , A);
   }
   return 0;
}
