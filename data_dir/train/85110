#include <bits/stdc++.h>
#define ll  long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define sc second
#define fr first

using namespace std;
const int N = 2e5+100;
int n,m,k;
int p[N];
int a[N];
int nx[N];

vector<int>ed[N];

int last[N];
int per[20][N];
int lev[N];
void dfs(int x,int pp = 0,int l = 0){
    per[0][x] = pp;
    lev[x] = l;
    for(int i=0 ; i<ed[x].size() ;i ++){
        if(ed[x][i] == pp)continue;
        dfs(ed[x][i],x,l+1);
    }
}

pii ran[N];

pair<pii,int>qu[N];

int res[N];

int main(){
    int q;
    cin>>n>>m>>q;
    for(int i=0 ;i <n ;i ++){
        scanf("%d",&p[i]);
        last[i+1] = m+1;
    }
    for(int i=1 ;i <=m ;i ++){
        scanf("%d",&a[i]);
    }

    for(int i=0 ;i <n ; i++){
        nx[p[i]] = p[(i+1)%n];
    }

    for(int i=m ; i>=1 ;i --){
        ed[last[nx[a[i]]]].push_back(i);
       // cout<<last[nx[a[i]]]<<" "<<i<<endl;
        last[a[i]] = i;
    }

    dfs(m+1);

    for(int i=1; i<20 ; i++){
        for(int j=1 ;j <=m+1 ; j++){
            per[i][j] = per[i-1][per[i-1][j]];
        }
    }
    int nr = 0;
    for(int i=1; i<=m ; i++){
        int len = n-1;
        int x = i;
        for(int j=19 ; j >=0 ; j--){
            if(len < (1<<j))continue;
            if(!per[j][x] || per[j][x] == m+1)break;
            x = per[j][x];
            len -= (1<<j);
        }
        if(!len){
            ran[nr++] = {i,x};
        }
    }

    sort(ran,ran+nr);
    reverse(ran,ran+nr);
    int l,r;
    for(int i=0 ;i <q; i++){
        scanf("%d%d",&l,&r);
        qu[i] = {{l,r},i};
    }
    sort(qu,qu+q);
    reverse(qu,qu+q);
    int j =0 ;
    int mn = m+1;
    for(int i=0 ;i <q ; i++){
        while(j < nr && ran[j].fr >= qu[i].fr.fr){
            mn = min(mn,ran[j].sc);
            j++;
        }
        res[qu[i].sc] = qu[i].fr.sc >= mn;
    }
    for(int i=0 ;i <q; i++)printf("%d",res[i]);
    return 0;
}
