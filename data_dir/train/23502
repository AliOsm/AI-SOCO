/* @nazarbek.altybay */

#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <queue>

#define pii pair<int, int>

#define pb push_back
#define mp make_pair

#define f first
#define s second

#define sqr(x) ((x) * (x))

using namespace std;

typedef long long ll;
typedef long double ld;

const double EPS = 1e-9;
const double PI = acos(-1);

const int INF = (int) 1e9 + 7;
const int MAXN = (int) 2e6 + 7;

const double pi = acos(-1.0);

struct point {
  int x, y, id;
};

int n;
vector <point> p, hull;
double ans;

bool cmp(point a, point b) {
  return (a.x < b.x || (a.x == b.x && a.y < b.y));
}

bool eq(point a, point b) {
  return (a.x == b.x && a.y == b.y);
}

bool inLine(point a, point b, point c) {
  return 1ll * (b.x - a.x) * (c.y - a.y) == 1ll * (b.y - a.y) * (c.x - a.x);
}

int main() {
  #ifdef LOCAL
  freopen ("in", "r", stdin);
  #endif

  scanf("%d", &n);
  for (int i = 1; i <= n; i++) {
    int x, y;
    scanf("%d%d", &x, &y);
    p.pb({x, y, i});
  }
  sort(p.begin(), p.end(), cmp);
  int a = p[0].id;
  int b = p[1].id;
  int c = -1;
  for (int i = 2; i < p.size(); i++) {
    if (inLine(p[0], p[1], p[i])) continue;
    c = p[i].id;
    break;
  }
  assert(c > 0);
  cout << a << ' ' << b << ' ' << c << endl;
  return 0;
}