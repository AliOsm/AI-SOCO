#include <bits/stdc++.h> 

using namespace std;
#define fl(i,a,b) for(int i=a;i<b;i++)
#define ll long long
#define endl '\n'
#define pb push_back
#define ff first
#define ss second
#define mod 998244353

#define lb(a,b) lower_bound(a.begin(), a.end(),b)-a.begin()
#define ub(a,b) upper_bound(a.begin(), a.end(),b)-a.begin()
#define mx 200005
int dp[mx][20];
int arr[mx];
int brr[mx];
int late[mx];
int parent[mx];
int t[2*mx];
int n,m;
void build() {  // build the tree
	n=m;
  for (int i = n - 1; i > 0; --i) t[i] = max(t[i<<1] , t[i<<1|1]);
}


int query(int l, int r) {  // min on interval [l, r)
  int res = 0;
  n=m;
  for (l += n, r += n; l < r; l >>= 1, r >>= 1) {
    if (l&1) res =max(res, t[l++]);
    if (r&1) res =max(res, t[--r]);
  }
  return res;
}
main()
{
	int n,q;
	cin>>n>>m>>q;
	fl(i,1,n+1)
	{
		cin>>arr[i];
		parent[arr[i]]=arr[i-1];
	}
	parent[arr[1]]=arr[n];
	
	fl(i,1,m+1)
	{
		cin>>brr[i];
		int x=parent[brr[i]];
		dp[i][0]=late[x];
		//cout<<brr[i]<<" "<<x<<endl; 
		fl(j,1,20)
		{
			dp[i][j]=dp[dp[i][j-1]][j-1];
		}
		late[brr[i]]=i;
		x=i;
		int y=n;
	//	cout<<dp[i][0]<<" ";
		for(int j=20;j>=0;j--)
		{
			if( (1<<j) < y)
			{
				y-=(1<<j);
				x=dp[x][j];
			}
		}
		//x=dp[x][0];
		
			t[i+m-1]=x;
		
	//	cout<<x<<endl;
	}
	build();
	
	while(q--)
	{
		int l,r;
		cin>>l>>r;
		int x=query(l-1,r);
		if(x>=l)
		{
			cout<<1;
		}
		else cout<<0;



	}
}