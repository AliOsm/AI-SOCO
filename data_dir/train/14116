#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md (l + ((r - l) / 2))
#define all(x) x.begin(),x.end()
#define ll long long
#define ld long double
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;

const int N = 2e2 + 11, mod = 1e9 + 7;
const int INF1 = 2e9;
const ll INF2 = 2e18;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0, 1, 1, -1, -1};
const int dy[] = {0, 0, 1, -1, 1, -1, 1, -1};
const double EPS = 1e-10;
const double PI = acos(-1.0);

int n, a[N], ct[2], t, ans[N], id[111];
vector < int > us[111], v2;
inline bool cmp(pair < int, int > a, pair < int, int > b) {
    return a.F < b.F;
}
main() {
    file("queue");
    ios;
    cin >> n;
    vector < pair < int, int > > v;
    set < int > st[2], s;
    fo(i, 1, 2 * n, 1) {
        cin >> a[i];
        id[a[i]] = i;
        s.ins(a[i]);
        us[a[i]].eb(i);
    }
    for (auto & it : s) {
        if (us[it].size() > 1) {
            for (auto & it2 : us[it]) {
                ans[it2] = t;
                ct[t]++;
                st[t].ins(it);
                t ^= 1;
            }
        } else v2.eb(it);
    }
    for (auto & it : v2) {
        if (ct[0] <= ct[1]) ++ct[0], ans[id[it]] = 0, st[0].ins(it);
        else ++ct[1], ans[id[it]] = 1, st[1].ins(it);
    }
    cout << st[0].size() * st[1].size() << "\n";
    fo(i, 1, 2 * n, 1) cout << ans[i] + 1 << " ";
    return 0;
}
