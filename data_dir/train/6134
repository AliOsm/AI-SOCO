#include <iostream>
#include<algorithm>
#include<string>
#include<map>
#include<iomanip>
#include<vector>
#include<cmath>
#include<queue>
#include<stack>
#include<set>

#define mod 1000000007
#define pa(a,b) make_pair(a,b)
#define f first
#define s second
#define pb(a)  push_back(a)
#define all(a) a.begin() , a.end()
#define mem(a, b) memset(a, b, sizeof(a))
#define LL  long long int
#define oo 1e9
#define pi 3.14159265359

LL maxx(LL a , LL b){ return a>b ?  a : b ;}
LL minn(LL a , LL b){ return a>b ?  b : a ;}

using namespace std;
LL gcd(LL a, LL b) {
    return b == 0 ? a : gcd(b, a % b);
}
LL lcm(LL a , LL b )
{
    return (a*b)/gcd(a , b);
}
LL poww(LL base, LL exp) {
  base %= mod;
  LL result = 1;
  while (exp > 0) {
    if (exp & 1) result = (result * base) % mod;
    base = (base * base) % mod;
    exp >>= 1;
  }
  return result;
}
LL fact(int x)
{
    if(x==1)return 1;
    return x*fact(x-1);
}
bool check(string s)
{
    for(int i=0;i<s.size()-1;i++)if(s[i]==s[i+1]&&s[i]=='0')return false;
    for(int i=0;i<s.size()-2;i++)if(s[i]==s[i+1]&&s[i]=='1'&&s[i+1]==s[i+2])return false;
    return 1 ;
}
int main()
{
    int n,m; cin>>n>>m; int tempn=n,tempm=m;
    string ans=""; bool f=1;
    while(n||m)
    {
        if(n){ans+="0"; n--; f=0;}
        if(m-n>=2){ans+="11"; m-=2; f=1;}
        else if(m-n==1){ans+="1"; m--; f=1;}
        if(n==m)break;
        if(!n||!m)break;
    }
    while(n||m&&n)
    {
        if(f){ans+="0"; ans+="1";}
        else {ans+="1" ; ans+="0";}
        n--; m--;
    }
    if(!f&&m){ans+="1"; m--;}
    if(!f&&m){ans+="1"; m--;}
    if(f&&n){ans+="0"; n--;}
    if(check(ans)&&ans.size()==tempn+tempm)return cout<<ans , 0;
   ans=""; f=0; swap(n , tempn ); swap(m , tempm); tempn=n,tempm=m;
   while(n||m)
    {
        if(m-n>=2){ans+="11"; m-=2; f=1;}
        else if(m-n==1){ans+="1"; m--; f=1;}
        if(m!=n&&n){ans+="0"; n--; f=0;}
        if(n==m)break;
        if(!m||!n)break;
    }
    while(n||m&&n)
    {
        if(f){ans+="0"; ans+="1";}
        else {ans+="1" ; ans+="0";}
        n--; m--;
    }
    if(!f&&m){ans+="1"; m--;}
    if(!f&&m){ans+="1"; m--;}
    if(f&&n){ans+="0"; n--;}
    if(check(ans)&&ans.size()==tempm+tempn)return cout<<ans , 0;
    cout<<-1;
}
