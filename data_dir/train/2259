/*
    NO 
        TIME 
            TO 
                DIE
                    --007
                            */
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
//#include <boost/functional/hash.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
typedef long long int lli;
lli mod=1e9+7;
#define OS //single input use oeis
lli INF=1e17;
lli eps=1e-8;
#define IO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define sqr(x) (x) * (x)
#define bip(n) __builtin_popcountll(n)//no of ones bit in binary!!
#define bictz(n) __builtin_ctzll(n)//no of trailing zeroes in binary!!
#define biclz(n) __builtin_clzll(n)//no of leading zeroes in binary!!
#define bffs(n) __builtin_ffsll(n)//index of first one bit!!
typedef pair<lli,lli> ll;
#define mem1(a,x) fill(&a[0], &a[0] + sizeof(a) / sizeof(a[0]), x)
#define mem2(a,x) fill(&a[0][0], &a[0][0] +sizeof(a)/sizeof(a[0][0]),x)
#define mem3(a,x) fill(&a[0][0][0], &a[0][0][0] +sizeof(a)/sizeof(a[0][0][0]),x)
#define fi1 ifstream fin("input.txt")
#define of1 ofstream fout("output.txt")
int fmx(int x, int y) { return (((y-x)>>(31))&(x^y))^y; }
int fmi(int x, int y) { return (((y-x)>>(31))&(x^y))^x; }
typedef tree<lli,null_type,less<lli>,rb_tree_tag,tree_order_statistics_node_update> ost;
lli n,z,k,x,m,d,y,q,b,c;
const double pi=3.14159265358979323846;
lli add(lli a, lli b) {
 	lli res = a + b;
 
 	while (res >= mod) res -= mod;
 
 	while (res < 0) res += mod;
 
 	return res;
}
 lli me(lli a,lli b)
{
    lli res=1;
    while(b)
    {
        if(b&1)
        res=(res%mod*a%mod)%mod;
        a=a*a;
        a%=mod;
        b=b>>1;
    }
    return res;
}
lli mI(lli a)
{
    return (me(a,mod-2)%mod+mod)%mod;
}
lli ans;
lli odd,eve;
void solve(lli n,lli k)
{
    if(k==0)
    {
        ans=n;
        return;
    }
    if(n&1)
    solve(n-1,k-1),odd++;
    else
    {
        solve(n/2ll,k-1);
        eve++;
    }
}
 
// double dp[100005];
int main()
{
 IO;
 OS;
 lli t;
 cin>>t;
 for(int i=1;i<=t;i++)
 {
     cin>>n;
     lli a[n+1];
     for(int j=1;j<=n;j++)
     cin>>a[j];
     
     lli end=n/2ll;
     if(a[end]==a[end+1])
     {
         while(a[end]==a[end+1])
         {
             end--;
         }
     }
    //  cout<<end<<"\n";
    // cout<<
    // cout<<end<<"\n";
    //  cout<<end<<"\n";
     map<lli,lli> ml;
     lli cnt=1;
     lli idx=-1;
     for(int j=1;j<=end;j++)
     {
        //  cout<<a[j]<<" "<<a[j-1]<<"\n";
         if(j==1)
         {
             ml[cnt]++;
         }
         else
         {
         if(a[j]!=a[j-1])
         {
             idx=j;
             break;
         }
         ml[cnt]++;
         }
     }
    //  cout<<ml[1]<<"\n";
    //  cout<<idx<<"\n";
     if(idx>=1)
     {
     cnt++;
    //  cout<<end<<"\n";
     for(int j=idx;j<=end;)
     {
         if(ml[cnt]<=ml[cnt-1])
         ml[cnt]++,j++;
         else
         {
             if(a[j]==a[j-1])
             {
                 while(a[j]==a[j-1]&&j<=end)
                 ml[cnt]++,j++;
             }
            //  cout<<idx<<"\n";
             idx=j;
             break;
         }
         idx=j;
     }
    //  cout<<idx<<"\n";
     cnt++;
     for(int j=idx;j<=end;)
     {
         if(ml[cnt]<=ml[cnt-2])
         ml[cnt]++,j++;
         else
         {
             ml[cnt]++,j++;
         }
     }
     }
     if(idx==-1)
     cout<<0<<" "<<0<<" "<<0<<"\n";
     else
     {
     if(ml[1]<ml[2]&&ml[1]<ml[3])
     {
         cout<<ml[1]<<" "<<ml[2]<<" "<<ml[3]<<"\n";
     }
     else
     cout<<0<<" "<<0<<" "<<0<<"\n";
     }
 }
}