/* ****revpro**** */

#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define endl       '\n'
#define pii         pair<ll,ll>
#define vi          vector<ll>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll)x.size()
#define hell        1000000007
#define rep(i,a,b)  for(ll i=a;i<b;i++)
#define repr(i,a,b) for(ll i=b-1;i>=a;i--)    
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mii        map<ll,ll>
using namespace std;

#define N  200005

int main()
{
    int TESTS=1;
//    cin>>TESTS;
    while(TESTS--)
    {
        ll n,k;
        cin>>n>>k;
        list <pii> ans;
        vector  <pii> tmp(N);
        rep(i,1,k-k%2){
            if(ans.size()==N) break;
            ans.pb({i+1,i});
            if(ans.size()==N) break;
            ans.pb({i,i+1});
            ll z=0;
            rep(j,1,k+1){
                if(ans.size()==N) break; 
                if((j!=i)&&(j!=i+1)){
                    if(z%2){
                    ans.push_front({i+1,j});
                    if(ans.size()==N) break;
                    ans.pb({i,j});}
                    else{
                        ans.push_front({i,j});
                    if(ans.size()==N) break;
                    ans.pb({i+1,j});
                    }
                    z++;
                }
            }
            i++;
        }
        ll cnt=0;
        for(auto i:ans){
            tmp[cnt++]=i;
        }
        if(cnt>=n){
            cout<<"YES\n";
            rep(i,0,n) cout<<tmp[i].F<<' '<<tmp[i].S<<endl;
        }
        else if((k%2)&&(k-1+ans.size()>=n)){
            ll t=0,j=0,c=1,p=0;
            cout<<"YES\n";
            cout<<tmp[j].F<<' '<<tmp[j].S<<endl , j++;
            t++;
            while(t<n){
                if((c<k)&&(p==0)&&(tmp[j-1].S!=c)&&(tmp[j].S!=c)) {
                    cout<<k<<' '<<c<<endl;
                    c++;    
                    p=1;
                }  
                else{
                    cout<<tmp[j].F<<' '<<tmp[j].S<<endl;
                    j++;
                    p=0;
                }
                t++;
            }
        }
        else cout<<"NO";
    }
    return 0;
}