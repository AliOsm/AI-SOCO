#include <bits/stdc++.h>

using namespace std;

int findIt(string s) {
    string rev = "", str = s;
    int m = s.size(), longestPalindromicPrefix = 1;
    if (m == 0 || m == 1) longestPalindromicPrefix = m;
    for (int i = m - 1; i >= 0; i--)
        rev += s[i];
    s += '#';
    s += rev;
    int n = s.size(), z[n + 4], l = 0, r = 0;
    for (int i = 1; i < n; i++) {
        if (i > r) {
            l = r = i;
            while (r < n && s[r - l] == s[r])
                r++;
            z[i] = r - l, r--;
        } else {
            int k = i - l;
            if (z[k] < r - i + 1)
                z[i] = z[k];
            else {
                l = i;
                while (r < n && s[r - l] == s[r])
                    r++;
                z[i] = r - l, r--;
            }
        }
    }

    for (int i = m + 1; i < n; i++) {
        if (2 * z[i] >= 2 * m - i && z[i] > longestPalindromicPrefix)
            longestPalindromicPrefix = z[i];
    }
    return longestPalindromicPrefix;
}

int main() {
    cin.tie(NULL);
    ios_base::sync_with_stdio(false);
    int test;
    cin >> test;
    while (test-- > 0) {
        string str;
        cin >> str;
        int i = 0;
        int j = str.length() - 1;
        while (i <= j) {
            if (str[i] == str[j]) i++, j--;
            else break;
        }
        if (i > j) {
            cout << str << "\n";
            continue;
        }
        int ans = j - i + 1;
        string st = str.substr(i, j - i + 1);
        int last1 = findIt(st);
        reverse(st.begin(), st.end());
        int last2 = findIt(st);


        for (int k = 0; k < i; k++) cout << str[k];
        if (last1 >= last2) {
            for (int k = i; k <= i + last1 - 1; k++) cout << str[k];
        } else {
            for (int k = j; k >= j - last2 + 1; k--) cout << str[k];
        }
        for (int k = str.length() - i; k < str.length(); k++) cout << str[k];
        cout << "\n";
//        cout << i << endl;
    }
    return 0;
}
