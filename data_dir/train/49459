#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>

using namespace std;

const int MaxN = 100005;

int t [MaxN], p [MaxN];
int n, v;

int main (void)
{
 int i, j;
 while (scanf (" %d %d", &n, &v) != EOF)
 {
  for (i = 0; i < n; i++)
   scanf (" %d %d", &t[i], &p[i]);
  vector <pair <int, int> > a, b;
  for (i = 0; i < n; i++)
   if (t[i] == 1)
    a.push_back (make_pair (p[i], i + 1));
   else
    b.push_back (make_pair (p[i], i + 1));
  sort (a.rbegin (), a.rend ());
  sort (b.rbegin (), b.rend ());
  vector <int> as, bs;
  as.push_back (0);
  bs.push_back (0);
  for (i = 0; i < (int) a.size (); i++)
   as.push_back (as[i] + a[i].first);
  for (i = 0; i < (int) b.size (); i++)
   bs.push_back (bs[i] + b[i].first);
  int res, arg_a, arg_b;
  res = arg_a = arg_b = -1;
  for (i = 0; i <= (int) b.size (); i++)
  {
   j = v - (i << 1);
   if (j < 0) break;
   if (j > (int) a.size ()) j = a.size ();
   if (res < bs[i] + as[j])
    res = bs[i] + as[j],
    arg_b = i,
    arg_a = j;
  }
  printf ("%d\n", res);
  vector <int> ans;
  for (i = 0; i < arg_a; i++)
   ans.push_back (a[i].second);
  for (i = 0; i < arg_b; i++)
   ans.push_back (b[i].second);
  sort (ans.begin (), ans.end ());
  for (i = 0; i < (int) ans.size (); i++)
   printf ("%d%c", ans[i], i + 1 < (int) ans.size () ? ' ' : '\n');
 }
 return 0;
}
