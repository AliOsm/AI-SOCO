#include <bits/stdc++.h>
#include <ext/hash_map>
#include <ext/numeric>
using namespace std;
using namespace __gnu_cxx;

#define EPS      1e-9
#define F        first
#define S        second
#define pi       acos(-1)
#define ll       long long
#define oo       0x3f3f3f3f
#define sz(x)    (int)x.size()
#define sc(x)    scanf("%d",&x)
#define all(x)   x.begin(),x.end()
#define rall(x)  x.rbegin(),x.rend()

const int MOD=1000000007;
int n,m;
pair<int,int> arr[100100];
vector<int> v;
hash_map<int,int> mp;
ll tree[200200];

void upd(int x,int v){
  while(x<=200100){
    tree[x]+=v;
    if(tree[x]>=MOD)tree[x]-=MOD;
    x+=(x&-x);
  }
}

int get(int x){
  int sum=0;
  while(x){
    sum+=tree[x];
    if(sum>=MOD)sum-=MOD;
    x-=(x&-x);
  }
  return sum;
}

bool cmp(pair<int,int> &a,pair<int,int> &b){
  return a.S<b.S;
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
//freopen("output.txt", "w", stdout);
#endif
  sc(n),sc(m);
  for(int i=0;i<m;++i){
    sc(arr[i].F),sc(arr[i].S);
    v.push_back(arr[i].F);
    v.push_back(arr[i].S);
  }
  sort(arr,arr+m,cmp);
  v.push_back(-1);
  v.push_back(0);
  v.push_back(n);
  sort(all(v));
  v.resize(unique(all(v))-v.begin());
  for(int i=0;i<sz(v);++i)
    mp[v[i]]=i;
  upd(1,1);
  for(int i=0;i<m;++i){
    int s=mp[arr[i].F],t=mp[arr[i].S];
    int way=get(t-1)-get(s-1);
    if(way<0)way+=MOD;
    upd(t,way);
  }
  printf("%d\n",(get(mp[n])-get(mp[n]-1)+MOD)%MOD);
}
