#include<bits/stdc++.h>
#define ll long long
#define mp make_pair
#define vi vector<ll>
#define pii pair<ll,ll>
#define pb push_back
#define endl '\n'
#define hell 1000000007
#define rep(i,a,b) for(int i=a;i<b;i++)
#define sz(x) (int)x.size()
#define all(a)  a.begin(),a.end()
#define S second
#define F first
#define PI acos(-1)
#define debug(x) for(auto i:x)cerr<<i<<" ";cerr<<endl;
using namespace std;
int lps[1000001];
void LPS(string pat,int M)
{
    int len=0,i=1;
    lps[0]=0;
    while (i < M)
    {
       if (pat[i] == pat[len])
       {
         len++;
         lps[i] = len;
         i++;
       }
       else
       {
         if (len != 0)
           len = lps[len-1];
         else
         {
           lps[i] = 0;
           i++;
         }
       }
    }
}
vi idx;
void KMP(string pat,string txt)
{
    int M=sz(pat);
    int N=sz(txt);
    int i=0,j=0;
    while (i < N)
    {
      if (pat[j] == txt[i])
      {
        j++;
        i++;
      }
      if (j == M)
      {
        idx.pb(i-1);
        j = lps[j-1];
      }
      else if (i < N && pat[j] != txt[i])
      {
        if (j != 0)
         j = lps[j-1];
        else
         i = i+1;
      }
    }
}
void solve(){
    string s;
    cin>>s;
    LPS(s,sz(s));
    int k=lps[sz(s)-1];
    if(k==0){
        cout<<"Just a legend";
        return;
    }
    KMP(s.substr(0,k),s);
    if(sz(idx)>2){
        cout<<s.substr(0,k);
        return;
    }
    if(lps[k-1]>0){
        cout<<s.substr(0,lps[k-1]);
    }
    else{
        cout<<"Just a legend";
        return;
    }
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    //cin>>t;
    while(t--)solve();
    return 0;
}
