#pragma GCC optimize("O3")
//#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define ld  double
#define pii pair<int,int>
#define pip pair<int,pii>
#define ppi pair<pii,int> 
#define ppp pair<pii,pii>
#define pb push_back
#define ppb pop_back
#define pf push_front
#define ppf pop_front
#define ff first
#define ss second
#define inf (ll)(1e9+11)
#define warmup ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
const int N = 200003;
ll mod = 998244353;

#define int ll

int fact[101],ifact[101];
vector<ll> divs;
vector<int> vv,uu;
int sz;

int power(int b, int p)
{
    int r=1;
    while(p)
    {
        if(p&1)
            r=(r*1ll*b)%mod;
        b=(b*1ll*b)%mod;
        p>>=1;
    }   
    return r;
}   

int ways(ll u, ll v)
{
    int i,j,l,k,ut=0,vt=0;
    uu.assign(sz,0), vv.assign(sz,0);
    
    for(i=0;i<sz;++i)
    {
        if(u%divs[i]==0)
        {
            l=0;
            while(u%divs[i]==0)
                u/=divs[i], ++l;
            uu[i]+=l;
        }   
    } 
    
    for(i=0;i<sz;++i)
    {
        if(v%divs[i]==0)
        {
            l=0;
            while(v%divs[i]==0)
                v/=divs[i], ++l;
            vv[i]+=l;
        }   
    } 
    
    for(i=0;i<sz;++i)
    {
        k=min(uu[i],vv[i]);
        uu[i]-=k, vv[i]-=k;
        ut+=uu[i], vt+=vv[i];
    }
    
    int ans=fact[ut]*1ll*fact[vt] % mod;
    for(i=0;i<sz;++i)
    {
        if(uu[i]>1)
            ans=ans*1ll*ifact[uu[i]] % mod;
        else if(vv[i]>1)
            ans=ans*1ll*ifact[vv[i]] % mod;
    }
    
    return ans;
}   

signed main()
{
    warmup
    
    ll n,u,v;
    cin>>n;
    int i,j,k,l,q;
    
    fact[0]=1;
    for(i=1 ; i<101 ; ++i)
        fact[i]=fact[i-1]*1ll*i % mod;
    --i;
    ifact[i]=power(fact[i],mod-2);
    for(--i ; i>=0 ; --i)
        ifact[i]=ifact[i+1]*1ll*(i+1) % mod;
    
    if(n%2==0)
    {
        divs.pb(2);
        while(n%2==0)
            n/=2;
    }   
    for(i=3 ; i*i<=n ; i+=2)
        if(n%i==0)
        {
            divs.pb(i);
            while(n%i==0)
                n/=i;
        }
    if(n>1)
        divs.pb(n);
    sz=divs.size();
    
    cin>>q;
    while(q--)
    {
        cin>>u>>v;
        cout<<ways(u,v)<<'\n';
    }   
    
    return 0;
}
