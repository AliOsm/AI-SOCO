#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native")
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stdio.h>
#include <cstdio>
#include <math.h>
#include <cmath>
#include <string>
#include <cstring>
#include <queue>
#include <deque>
#include <random>
#include <iomanip>
#include <bitset>
                      
using namespace std;
                      
template<typename T> void uin(T &a, T b) {
    if (b < a) {
        a = b;
    }
}
                      
template<typename T> void uax(T &a, T b) {
    if (b > a) {
        a = b;
    }
}

#define int long long
#define ghost signed
#define left left228
#define right right228
#define prev prev228
#define list list228
#define next next228

const int N = 100 * 1000 + 228;

int a[N], pref[N], dp[N];
int ans[N];

ghost main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
	int n;
	cin >> n;
	for (int i = 1; i <= n; ++i) cin >> a[i];
	sort(a + 1, a + n + 1);
	reverse(a + 1, a + n + 1);
	for (int i = 1; i <= n; ++i) pref[i] = pref[i - 1] + a[i];
	for (int k = 1; k < n; ++k) {
		int h = 0;
		int K = 1;
		int i = 1;
		while (i <= n) {
			ans[k] += h * (pref[min(i + K - 1, n)] - pref[i - 1]);
			i += K;
			K *= k;
			++h;
		}
	}
	int q;
	cin >> q;
	while (q--) {
		int k;
		cin >> k;
		uin(k, n - 1);
		cout << ans[k] << ' ';
	}
	cout << '\n';
    return 0;
} // kek;






