/// إِنَّ مَعَ الْعُسْرِ يُسْرًا
/// لَا أَبْرَحُ حَتَّىٰ أَبْلُغَ

#include <bits/stdc++.h>
#define LL long long
#define LD long double

#define Cast_Habd_Logic ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define S second
#define F first
#define PI acos(-1)
#define MAX 5000005
#define file freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
#define inf 1000000

using namespace std;
int arr[1005][1005];
bool vis[1005][1005],vis2[1005][1005];
string s[1005];
int n,m,c;
map<pair<int,int>,int>mp;
bool vaild(int x, int y)
{
    if(x<0 ||x>=n || y<0 ||y>=m)
        return 0;
    return 1;
}
int dfs(int x, int y)
{
    if(vis[x][y])
        return arr[x][y];
    vis[x][y]=1;
    arr[x][y]=1;
    if(vaild(x+1,y) &&s[x+1][y]=='.' && !vis[x+1][y])
    {
        arr[x][y] += dfs(x+1,y);
    }
    if(vaild(x-1,y) &&s[x-1][y]=='.' && !vis[x-1][y])
    {
        arr[x][y] += dfs(x-1,y);
    }
    if(vaild(x,y+1) &&s[x][y+1]=='.' && !vis[x][y+1])
    {
        arr[x][y] += dfs(x,y+1);
    }
    if(vaild(x,y-1) &&s[x][y-1]=='.' && !vis[x][y-1])
    {
        arr[x][y] += dfs(x,y-1);
    }
    return arr[x][y];
}
void dfs2(int x, int y,int v)
{
    if(vis2[x][y])
        return;
    mp[{x,y}]=c;
    vis2[x][y]=1;
    arr[x][y]=v;
    if(vaild(x+1,y) &&s[x+1][y]=='.' && !vis2[x+1][y])
    {
         dfs2(x+1,y,v);
    }
    if(vaild(x-1,y) &&s[x-1][y]=='.' && !vis2[x-1][y])
    {
        dfs2(x-1,y,v);
    }
    if(vaild(x,y+1) &&s[x][y+1]=='.' && !vis2[x][y+1])
    {
         dfs2(x,y+1,v);
    }
    if(vaild(x,y-1) &&s[x][y-1]=='.' && !vis2[x][y-1])
    {
        dfs2(x,y-1,v);
    }

}

int main()
{

    Cast_Habd_Logic
    cin>>n>>m;
    for(int i=0 ; i<n; i++)
        cin>>s[i];
    c=1;
    for(int i=0 ; i<n; i++)
    {
        for(int j=0; j<m; j++)
        {
            if(s[i][j]=='.' && !vis[i][j])
            {
                dfs(i,j);
                dfs2(i,j,arr[i][j]);
                c++;
            }
        }
    }
   
    for(int i=0 ; i<n; i++)
    {
        for(int j=0; j<m; j++)
        {
            if(s[i][j]=='*')
            {
                map<int,int>tem;
                int x=1;

                if(vaild(i+1,j) && s[i+1][j]=='.' )
                {
                    x+=arr[i+1][j];
                    tem[mp[{i+1,j}]]=1;
                }
                if(vaild(i-1,j) &&s[i-1][j]=='.' && !tem[mp[{i-1,j}]])
                {
                    x+=arr[i-1][j];
                    tem[mp[{i-1,j}]]=1;
                }
                if(vaild(i,j+1) &&s[i][j+1]=='.' && !tem[mp[{i,j+1}]])
                {
                    x+=arr[i][j+1];
                    tem[mp[{i,j+1}]]=1;
                }
                if(vaild(i,j-1) &&s[i][j-1]=='.'&& !tem[mp[{i,j-1}]])
                {
                    x+=arr[i][j-1];

                }
                cout<<x%10;
            } else
                cout<<s[i][j];
        }
        cout<<'\n';
    }


    return 0;
}

