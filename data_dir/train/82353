#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define llu unsigned long long int
#define Endl endl
#define mod  998244353
#define mkp make_pair
#define pb push_back
#define cin(n) scanf("%d",&n)
#define cout(n) printf("%d ",n)
#define sf(n) scanf("%d",&n)
#define pf(n) printf("%d ",n)
#define bitget(n) __builtin_popcountll(n)
ll dx[] = {1,1,0,-1,-1,-1,0,1};
ll dy[] = {0,-1,-1,-1,0,1,1,1};
ll dxx[] = {1,-1,0,0};
ll dyy[] = {0,0,-1,1};
ll modexpo(ll x,ll y){if(y==0)return 1;if(y%2){ll viky=modexpo(x,y/2);
return (((x*viky)%mod)*viky)%mod;}else{ll viky=modexpo(x,y/2);return (viky*viky)%mod;
}}
// ll intpoint(ll x1, ll y1, ll x2, ll y2) { return ( __gcd(abs(x1-x2),abs(y1-y2))+1); }
// bool isvalid(ll x,ll y,ll n,ll m) { return (x>=0&&x<n&&y>=0&&y<m); }
// mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
// int pp = uniform_int_distribution<int>(0, kk-1)(rng);
// ---------------------///////////////---------------------------------
// ---------------------///////////////----------------------------------
// -------------/////////////////---------------------------------///////



int main() {
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    ll n,k;
    cin>>n>>k;
    ll ap[n+11];

    for(ll i=0;i<n;i++){
    	cin>>ap[i];
    }

    if(n==1){
    	cout<<(ap[0]+k);
    	return 0;
    }

    sort(ap,ap+n);

    ll ans = ap[n/2];

    multiset<ll>st;
    for(ll i = n/2;i<n;i++){
    	st.insert(ap[i]);
    }

    ll low = ans;
    ll high = ans + k;

    while(low<=high){

    	ll mid = (low+high)>>1;
    	ll req = k;
    	for(ll i = n/2;i<n;i++){
    		if(ap[i]>=mid){
    			break;
    		}else{
    			req = req - (mid-ap[i]);
    		}
    	}
    	if(req>=0){
    		ans = max(ans, mid);
    		low = mid+1;
    	}else{
    		high = mid-1;
    	}
    }

    cout<<ans;

	return 0;
}