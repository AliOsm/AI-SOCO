#include <bits/stdc++.h>

using namespace std;

#define int long long
#define double long double

int k, pa, pb;
const int md = 1000000007;

inline int mod(int x){
    return (x % md + md) % md;
}

int binpow(int n, int k){
    if(k == 0) return 1;
    if(k & 1) return (binpow(n, k - 1) * n) % md;
    else{
        int t = binpow(n, k / 2);
        return (t * t) % md;
    }
}

int d[1010][1010];

main()
{
    ios_base::sync_with_stdio(0);
    cin >> k >> pa >> pb;
    int a = mod(pa * binpow(pa + pb, md - 2));
    int b = mod(pb * binpow(pa + pb, md - 2));
    d[1][0] = 1;
    int sum = 0;
    for(int i = 1; i <= k; i++){
        for(int j = 0; j <= k; j++){
            if(j + i < k) d[i + 1][j] = mod(d[i + 1][j] + d[i][j] * a);
            if(j + i < k) d[i][j + i] = mod(d[i][j + i] + d[i][j] * b);
        }
    }
    for(int i = 1; i <= k; i++){
        for(int j = 0; j <= k; j++){
            if(i + j >= k) sum = mod(sum + d[i][j] * (i + j));
        }
    }
    sum = mod(sum - 1 + binpow(b, md - 2));
    cout << sum << endl;
}
