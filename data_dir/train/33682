//#define _USE_MATH_DEFINES
//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"
#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0); }
inline int safe_mul(const int x, const int y) __attribute__ ((warn_unused_result));

int const INF = 1000000009;

int64_t get(const int fst, const int k) {
    return min<long long>(INF, fst * 1LL * k + k * 1LL * (k - 1) / 2LL);
}

int main()
{
//    freopen("in.txt","r", stdin);
//    freopen("out.txt", "w", stdout);
//    cin.tie(0);
//    cout << fixed << setprecision(20);
    ios_base::sync_with_stdio(false);
    cin.tie(0);


    int n,k;
    cin >> n >> k;

    vector<int64_t> res;
    int locn = n;

    for (int i = 0; i < k; ++i) {
        int64_t r = i == 0 ? INF : res.back() * 2 + 1;
        int64_t l = i == 0 ? 1 : res.back() + 1;

        while (r - l > 1) {
            int64_t mid = (l + r) >> 1;
            if (get(mid, k - i) <= locn)
                l = mid;
            else
                r = mid;
        }
        locn -= l;
        res.push_back(l);
    }

    if (accumulate(begin(res), end(res), 0LL) != n)
        FINAL_OUT("NO");

    for (int i = 1; i < k; ++i)
        if (res[i] <= res[i - 1] || res[i] > res[i - 1] * 2)
            FINAL_OUT("NO");

    cout << "YES\n";
    for (int x : res)
        cout << x << ' ';
}
