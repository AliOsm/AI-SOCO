#include<bits/stdc++.h>
using namespace std;
#define all(v) ((v).begin()),((v).end())
#define ll long long
#define fastIO cout << fixed << setprecision(12), ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr)
double const EPS = 1e-12, PI = acos(-1);
const int N = 4e5 + 9, M = 5e3 + 9, OO = 1e9 + 7, MOD = 1e9 + 7;
const ll inf = 1e18;

int arr[N], cost[N];
vector<int> vec[N];

int main() {
  fastIO;
#ifdef LOCAL
  freopen("input.in", "rt", stdin);
#endif
  int n, m;
  cin >> n >> m;
  int mm = n * m;
  for (int i = 0; i < mm; ++i) {
    cin >> arr[i];
  }
  for (int i = 0; i < m; ++i) {
    int cnt = 0;
    for (int j = 0; j < n; ++j) {
      int idx = j*m + i;
      int val = -1;
      if( (arr[idx] - (i + 1)) % m == 0 ) {
        val = (arr[idx] - (i + 1)) / m;
        if(val >= n)
          val = -1;
        cnt += (val == j);
      }
      vec[i].push_back(val);
    }
    cost[i] = n - cnt;
  }
  int ans = 0;
  for (int i = 0; i < m; ++i) {
    vector<int> cyc(n, 0);
    for(int j = 0; j < (int)vec[i].size(); ++j) {
      int it = vec[i][j];
      if(it == -1) continue;
      int tt = 0;
      if(j >= it)
        tt += (j - it);
      else
        tt += j + (n - it);
      if(tt >= n) continue;
      cyc[tt]++;
    }
    int mn = OO;
    for (int i = 0; i < n; ++i) {
      mn = min(mn, (n - cyc[i]) + i);
    }
    ans += min(mn, cost[i]);
  }
  cout << ans;
  return 0;
}
