#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define f(i, x, n) for(int i = x; i < (int)(n); ++i)

int const magic = 300;
int n, k, typ[100001], cs[100001], tmsz[100000];
ll x[100001], fn[100001], an[100000];
pair<pair<int, int>, int> qu[100000];
vector<ll> H;
vector<pair<int, int> > Q[100001];
map<ll, vector<int> > pos;

inline void ad(int i, int x) { while (i <= n)fn[i] += x, i += i & -i; }
inline ll gt(int i) { ll an = 0; while (i)an += fn[i], i ^= i & -i; return an; }

int main(){
	scanf("%d%d", &n, &k);
	f(i, 1, n + 1)scanf("%d", typ + i);
	map<ll, int> mp;
	++mp[0];
	f(i, 1, n + 1){
		int t;
		scanf("%d", &t);
		x[i] = typ[i] == 1 ? t : -t;
		x[i] += x[i - 1];
		ad(i, mp[x[i] - k]);
		++mp[x[i]];
		pos[x[i]].push_back(i);
	}
	int q;
	scanf("%d", &q);
	f(i, 0, q){
		int l, r;
		scanf("%d%d", &l, &r);
		qu[i] = make_pair(make_pair(l, r), i);
		Q[l].push_back(make_pair(r, i));
	}
	sort(qu, qu + q);
	for (map<ll, int>::iterator it = mp.begin(); it != mp.end(); ++it)if (it->second >= magic)H.push_back(it->first);
	f(i, 0, H.size()){
		f(j, 1, n + 1){
			if (x[j] == H[i])cs[j] = 1; else cs[j] = 0;
			cs[j] += cs[j - 1];
		}
		f(j, 0, q)tmsz[j] = cs[qu[j].first.second] - cs[qu[j].first.first - 1];
		f(j, 1, n + 1){
			if (x[j] == H[i] - k)cs[j] = 1; else cs[j] = 0;
			cs[j] += cs[j - 1];
		}
		f(j, 0, q)an[qu[j].second] -= (ll)cs[qu[j].first.first - 1] * tmsz[j];
	}
	
	f(i, 1, n + 1){
		f(j, 0, Q[i].size())an[Q[i][j].second] += gt(Q[i][j].first) - gt(i - 1);
		if (binary_search(H.begin(), H.end(), x[i - 1] + k))continue;
		vector<int> &v = pos[x[i - 1] + k];
		f(j, 0, v.size())ad(v[j], -1);
	}
	f(i, 0, q)printf("%lld\n", an[i]);
}