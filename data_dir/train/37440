// practice with Dukkha
#include <algorithm>
#include <iostream>

using namespace std;

const int N = 200000;

char aa[N + 1], bb[N + 1], cc[N + 1];
int ii[N];

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n >> aa;
		for (int i = 0; i < n; i++)
			ii[i] = i;
		sort(ii, ii + n, [] (int i, int j) { return aa[i] < aa[j] || aa[i] == aa[j] && i < j; });
		int h_ = 0;
		while (h_ < n && ii[h_] < ii[h_ + 1])
			h_++;
		int i_ = ii[h_];
		char a_ = h_ + 1 == n ? ' ' : aa[ii[h_ + 1]];
		for (int h = 0; h < n; h++) {
			int i = ii[h];
			bb[i] = h <= h_ || i > i_ && aa[i] == a_ ? '1' : '2';
		}
		int k = 0;
		for (int i = 0; i < n; i++)
			if (bb[i] == '1')
				cc[k++] = aa[i];
		for (int i = 0; i < n; i++)
			if (bb[i] == '2')
				cc[k++] = aa[i];
		bool yes = true;
		for (int i = 1; i < n; i++)
			if (cc[i - 1] > cc[i])
				yes = false;
		cout << (yes ? bb : "-") << '\n';
		fill_n(bb, n, 0);
		fill_n(cc, n, 0);
	}
	return 0;
}
