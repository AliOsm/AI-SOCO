#include <bits/stdc++.h>

using namespace std;

const int N = (int)1e5 + 7;
const int mod = (int)1e9 + 7;

vector <int> p;

void precalc() {
  for (int i = 2; i <= 70; i++) {
    bool ok = 1;
    for (int j = 2; j * j <= i; j++) {
      ok &= (i % j > 0);
    }
    if (ok) {
      p.push_back(i);
    }
  }
}

int get(int x) {
  int mask = 0;
  for (int i = 0; i < p.size(); i++) {
    int to = p[i];
    while (x % to == 0) {
      mask ^= (1 << i);
      x /= to;
    }
  }
  return mask;
}

int bas[33];
int sz;

void add(int mask) {
  for (int i = 0; i < p.size(); i++) {
    if ((mask >> i) & 1 ^ 1) continue;
    if (!bas[i]) {
      bas[i] = mask;
      sz++;
      return ;
    }
    mask ^= bas[i];
  }
}

int n;
int a[N];

main() {
  precalc();
  scanf("%d", &n);
  for (int i = 1, x; i <= n; i++) {
    scanf("%d", &x);
    add(get(x));
  }
  int ans = 1;
  for (int i = 0; i < n - sz; i++) {
    ans = (ans * 2) % mod;
  }
  cout << ans - 1<< endl;
}
