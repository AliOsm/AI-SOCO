#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <string>
#include <queue>
#include <stack>
using namespace std;
typedef long long mt;
#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= b; ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

#define N 510
#define M (1ll << 22)
#define INF 1000000000000000007//1e18 + 7
#define MOD 1000000007//1e9 + 7
#define EPS 1e-9

mt n, m;
bool g[N][N];
mt ck[N];
char s[N];
char dc[3] = { 'a','c', 0 };
mt d, r;

void dfs(mt p, mt v, char ch) 
{
	s[v] = ch;
	repe(1, n, i)
		if (g[v][i] != g[p][i])
			r = 10;

	repe(1, n, i)
		if (g[v][i] && !s[i])
			dfs(v, i, ch);
		else if (!g[v][i] && s[i] == 'b')
			r = 10;
}

int main()
{
#ifdef _DEBUG	
	freopen("in.txt", "r", stdin);
#endif
	mt u, v;
	scanf("%I64d %I64d", &n, &m);
	while (m--)
		scanf("%I64d %I64d", &u, &v), g[u][v] = g[v][u] = g[u][u] = g[v][v] = true, ++ck[u], ++ck[v];
	repe(1, n, i)
		if (ck[i] == n - 1)
			s[i] = 'b';
	repe(1, n, i) {
		if (!s[i]) {
			++r; 
			if(d < 2) 
				dfs(i, i, dc[d++]);
		}
	}
	if (r > 2) puts("No");
	else puts("Yes"), puts(s + 1);

	return 0;
}