#include <iostream>
#include <cstdio>
#include <vector>
#include <cstring>
#include <cassert>
#include <algorithm>
using namespace std;

int main()
{
	int n;
	scanf("%d",&n);
	vector<int> src(n);
	for(int i=0;i<n;i++)
		scanf("%d",&src[i]);
	int k;
	scanf("%d",&k);
	vector<int> dst(k);
	for(int i=0;i<k;i++)
		scanf("%d",&dst[i]);
	vector<pair<int,int> > segm;
	int top=0;
	for(int i=0;i<k;i++)
	{
		int sum=0;
		int L=top;
		while(top<n && sum<dst[i])
			sum+=src[top++];
		if(sum!=dst[i])
		{
			puts("NO");
			return 0;
		}

		int R=top;
		segm.push_back(make_pair(L,R));
	}
	
	if(top<n)
	{
		puts("NO");
		return 0;
	}
	for(int i=0;i<k;i++)
	{
		int l=segm[i].first;
		int r=segm[i].second;
		if(r-l>1 && *max_element(src.begin()+l, src.begin()+r)==*min_element(src.begin()+l, src.begin()+r))
		{
			puts("NO");
			return 0;
		}
	}
	puts("YES");
	for(int i=k-1;i>=0;i--)
	{
		int l=segm[i].first;
		int r=segm[i].second;
		if(r-l==1) continue;
		int maxv=*max_element(src.begin()+l, src.begin()+r);

		int m=-1;
		for(int j=l;j<r;j++)
		{
			if(src[j]==maxv && ((j-1>=l && src[j-1]<maxv) || (j+1<r && src[j+1]<maxv)))
			{
				m=j;
				break;
			}
		}
		assert(m!=-1);

		int nj=0;
		int cl=m;
		int cr=m;

		if(m-1>=l && src[m-1]<maxv)
		{
			printf("%d L\n",m+1-nj);
			nj++;
			cl--;
		}
		else
		{
			printf("%d R\n",m+1);
			cr++;
		}

		while(cr<r-1)
		{
			printf("%d R\n",m+1-nj);
			cr++;
		}

		while(cl>l)
		{
			printf("%d L\n",m+1-nj);
			nj++;
			cl--;
		}

	}
	return 0;
}