#include<bits/stdc++.h>
using namespace std;

#define ll             long long
#define gcd(a,b)       __gcd(a,b)
#define lcm(a,b)       a*(b/gcd(a,b))
#define pii            pair<int, int>
#define pll            pair<ll, ll>
#define pil            pair<int, ll>
#define pli            pair<ll, int>
#define vi             vector<int>
#define vl             vector<ll>
#define vii            vector<pii>
#define vll            vector<pll>
#define vil            vector<pil>
#define vli            vector<pli>
#define mii            map<int, int>
#define mll            map<ll, ll>
#define pb             push_back
#define ppb            pop_back
#define mp             make_pair
#define mt             make_tuple
#define lb             lower_bound
#define ub             upper_bound
#define ff             first
#define ss             second
#define all(v)         v.begin(),v.end()
#define fill(a,b)      memset(a,b,sizeof a)
#define smax(a, b)     a=max(a, b)
#define smin(a, b)     a=min(a, b)
#define sqr(x)         x*x
#define cube(x)        x*x*x
#define asort(a, n)    sort(a+1, a+n+1)
#define FOR(i, l, r)   for(int i=l;i<=r;i++)
#define ROF(i, l, r)   for(int i=r;i>=l;i--)
#define endl           '\n'

int in() {
    int n;
    scanf("%d",&n);
    return n;
}

ll Lin() {
    ll n;
    scanf("%lld",&n);
    return n;
}

double Din() {
    double n;
    scanf("%lf",&n);
    return n;
}

const double gama = 0.57721566490;
const double eps = 0.00000001;
const ll inf = 1e17;
const ll mod = 1e9 + 7;
const int N = 2e5 + 5;

vii g[N];
ll dis[N], a[N], ans[N];
int par[18][N], dep[N];

void dfs(int u, int p=-1) {
    for(auto v : g[u]) {
        if(v.ff!=p) {
            dis[v.ff]=dis[u]+v.ss;
            dfs(v.ff, u);
        }
    }
}

void lca_build(int u, int d, int p=-1) {
    dep[u]=d;
    for(int i=1; i<=17; i++)
        par[i][u]=par[i-1][par[i-1][u]];
    for(auto v : g[u]) {
        if(v.ff!=p) {
            par[0][v.ff]=u;
            lca_build(v.ff, dep[u]+1, u);
        }
    }
}

void update(int x) {
    int y=x;
    for(int i=17; i>=0; i--) {
        if(dis[x]-dis[par[i][y]]<=a[x])
            y=par[i][y];
    }
    if(y!=x) {
        if(x!=par[0][x])
            ans[par[0][x]]++;
        if(y!=par[0][y])
            ans[par[0][y]]--;
    }
}

void dp(int u, int p=-1) {
    for(auto v : g[u]) {
        if(p!=v.ff) {
            dp(v.ff, u);
            ans[u]+=ans[v.ff];
        }
    }
}

int main() {
    int n=in();
    for(int i=1; i<=n; i++)
        a[i]=Lin();
    for(int i=2; i<=n; i++) {
        int u=in(), w=in();
        g[u].pb(mp(i, w));
        g[i].pb(mp(u, w));
    }
    par[0][1]=1;
    dfs(1);
    lca_build(1, 0);
    for(int i=2; i<=n; i++) {
        update(i);
    }
    dp(1);
    for(int i=1; i<=n; i++)
        printf("%lld ", ans[i]);
    printf("\n");
    return 0;
}
