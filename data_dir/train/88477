#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define speed      ios::sync_with_stdio(false);cin.tie(NULL); cout.tie(NULL);
#define rng(i,a,b) for (int i=a;i>=int(b);i--)
#define rep(i,a,b) for(int i=a;i<=int(b);++i)
#define lop(i,n)   for(int i=0;i<int(n);i++)
#define cler(x,a)  memset(x,a,sizeof(x))
#define all(x)     (x).begin(),(x).end()
#define pb(x)      push_back(x)
#define sz(x)      (x.size())
#define f first
//#define s second
#define sc(x) scanf("%d",&x)
#define pr(x) printf("%d ",x)
#define prln(x) printf("%d\n",x)
/*
#define scc(x) scanf("%1c",&x)
#define scl(x) scanf("%lld",&x)
#define prl(x) printf("%I64d\n",x)
typedef pair<int,int> ii;
typedef vector <int>  vi;
ll MOD=1000003;
freopen("output.txt","w",stdout);
freopen("input.txt","r",stdin);
*/
/*
for (int i=0;i<n;i++)            Hi    ^_^  hack me if you can :P

*/
string s;
ll ans;
int main()
{
    cin>>s;
    while(sz(s)>1||s[0]=='0'){
        if(s.back()=='0'){
            ans++;
            s.pop_back();
        }
        else{
            ans++;
            int x=sz(s)-1;
            for(;s[x]=='1'&&x>=0;x--){
                s[x]='0';
            }
            if(x>=0){
                s[x]='1';
            }
            else{
                ans+=sz(s);
                break;
            }
        }
    }
    cout<<ans;
    return 0;
}
/*
	ll memo[2002][2002];
	ll MOD=1000000007;
	ll x, y;
	ll c(ll n,ll k){
	if(k<0||n<0)return 0;
	if(memo[n][k]!=-1)return memo[n][k];
	if(k>n)return memo[n][k]=0;
	if(n==k)return memo[n][k]=1;
    if(k==1)return memo[n][k]=n;
	return memo[n][k]=(c(n-1,k-1)+c(n-1,k))%MOD;
	}
http://syria.press/%D8%A8%D8%B9%D9%86%D9%88%D8%A7%D9%86-%D9%84%D8%A7%D8%AC%D8%A6-%D8%B3%D9%88%D8%B1%D9%8A-%D9%8A%D9%85%D8%A7%D8%B1%D8%B3-%D8%A7%D9%84%D8%AC%D9%86%D8%B3-%D9%85%D8%B9-%D9%81%D8%AA%D8%A7%D8%A9-%D9%85/

int dx[]= {0,0 ,1,-1, 1,1,-1,-1};
int dy[]= {1,-1,0,0 , 1,-1,1,-1};
char a[101][101];
bool vis[101][101];
int n,m,ans;
bool in (int i,int j) {return 0<=i&&0<=j&&i<n&&j<m ; }
void dfs(int i,int j){
    vis[i][j]=1;
    for (int k=0;k<4;k++){
        int x=i+dx[k];
        int y=j+dy[k];
        if(in(x,y))
        if(!vis[x][y])
        if(a[x][y]=='B')
        dfs(x,y);
    }

}



ll powmod(ll a,ll b)
{
    ll res=1LL;
    a%=MOD;
    for(; b; b>>=1)
    {
        if(b&1)res=res*a%MOD;
        a=a*a%MOD;
    }
    return res;
}
ll pow(long double a,ll b)
{
    ll res=1LL;

    for(; b; b>>=1)
    {
        if(b&1)res=res*a;
        a=a*a;
    }
    return res;
}

 fflush(stdout);
 cout.flush();


    ll A,B,n,x;
    scanf("%I64d%I64d%I64d%I64d",&A,&B,&n,&x);
    if(A==1)printf("%I64d",(x+n%MOD*B)%MOD);
    else
    {
        ll res=fp(A,n)*x%MOD;
        res+=(fp(A,n)-1)*fp(A-1,MOD-2)%MOD*B;
        printf("%I64d",(res%MOD+MOD)%MOD);
    }


bool cmp(string x,string y)   {return x+y<y+x;}
int dx[]= {0,0 ,1,-1, 1,1,-1,-1};
int dy[]= {1,-1,0,0 , 1,-1,1,-1};
bool inside (int i,int j) {return (i>=1 && i<=n && j>=1 && j<=m);}


bool prime[100007];
void sieve()
{
    for(int i=4; i<=100005; i+=2)
        prime[i]=false,prime[i-1]=true;
    prime[2]=true;
    for(int i=3; i<=1000; i+=2)
    {
        if(prime[i])
        {
            for(int j=i*i; j<=100005; j+=i*2)
                prime[j]=false;

        }

    }

}

    ll a,b,n,x,na,nb;
    cin>>a>>b>>n>>x;
    while(n){
        if (n&1){
            x=(a*x+b)%MOD;
        }
        n>>=1;
        na=a*a%MOD;
        nb=(a*b+b)%MOD;
        a=na;
        b=nb;
    }
    cout<<x;

*/
