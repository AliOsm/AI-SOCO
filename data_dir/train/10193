#include<bits/stdc++.h>
using namespace std;
//#define MOD           100000000019
#define C             100000030111
#define p2           1000159
#define p1           1000003
#define int          long long 
#define D            double
#define S            second
#define F            first
#define pb           push_back
#define ff           fflush(stdout)
#define ppb          pop_back()
#define B(c)         (c).begin()
#define E(c)         (c).end()
#define all(c)       (c).begin(),(c).end()
#define rall(c)      (c).rbegin(),(c).rend()
#define SORT(v)       sort(ALL(v))  
#define DB            cerr<<"move"<<endl;
#define DV(x)        cerr<<x<<endl;
#define inputarr(a,n)  for(int i=0;i<n;++i) cin>>a[i]
#define printarr(a,n)  for(int i=0;i<n;++i) cout<<a[i]<<" "
#define lb           lower_bound
#define ub           upper_bound
#define si(c)        (int)((c).size())
#define gcd(a,b)      __gcd(a,b)
#define lcm(a,b)     (a*(b/gcd(a,b)))
#define sqr(a)       ((a) * (a))
#define accuracy     cout << fixed << setprecision(18);
#define optimize()   ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
typedef pair<int,int>                         pii;
typedef pair<int,pii>                         pipii;
typedef vector<vector<int> >                  vvi;
typedef map<int,int>                          mp;
typedef map<pii,int>                          mpii;
typedef map<int,pii>                          mipi;
typedef map<string,int>                       msi;
typedef priority_queue<int, vector<int>, greater<int> > pq;
typedef vector<int>::iterator                  vit;
typedef set<int>::iterator                     sit;
typedef multiset<int>                          ms;
typedef map<int,int>::iterator                 mit;
typedef map<pii,int>::iterator                 mpiit;
typedef map<int,pii>::iterator                 mipit;
typedef multiset<int>::iterator                msit;
int MOD;
inline  bool checkBit(int n, int i) { return n&((int)1<<i); }
inline  int setBit(int n, int i) { return n|((int)1<<i);; }
inline  int resetBit(int n, int i) { return n&(~((int)1<<i)); }
inline  bool EQ(double a, double b) { return fabs(a-b) < 1e-9; }
inline  bool isLeapYear(int year) { return (year%400==0) || (year%4==0 && year%100!=0); }
inline  void normal(int &a) { a = (a+MOD)%MOD; }
inline  int modMul(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); return (a*b)%MOD; }
inline  int modAdd(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); return (a+b)%MOD; }
inline  int modSub(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); a -= b; normal(a); return a; }
inline  int modPow(int b, int p) { int r = 1; while(p) { if(p&1) r = modMul(r, b); b = modMul(b, b); p >>= 1; } return r; }
inline  int modInv(int a) { return modPow(a, MOD-2); }
inline  int modDiv(int a,int b) { return modMul(a, modInv(b)); }
const int N=1e5+1;
//int b_l[N][25];
//vector<int>v;
int prime[N];
/*
int ans=0;
int fact(int n){
	if(n==0)return 0;
	return (n==1?1:(n*fact(n-1))%C);
}*//*
void P(){
for(int i=2;i<=N;i++){
	    if(!prime[i]){
		for(int j=2*i;j<=N;j+=i){
		prime[j]=i;}
		}
	}
}
int ctoi(char c){
	return (int)(c-'0');
}*/
void solve(){
    int n;cin>>n;
    D m;cin>>m;
    D a[n],b[n];
    for(int i=0;i<n;i++){
    	cin>>a[i];
	}
	for(int i=0;i<n;i++){
		cin>>b[i];
	}
	D ans=-1,s=0,e=1e9+1,prev1=1e11;
	bool flag=1;
	while(s+1e-7<=e){
		D f=(s+e)/2,mid;
		mid=f;flag=1;
		for(int i=0;i<n;i++){
			f-=(m+f)/a[i];
			f-=(m+f)/b[(i+1)%n];
			if(f<=0&&i!=n-1)flag=0;
		}
		if(f>=0&&flag)e=mid-1e-7,ans=mid;
		else s=mid+1e-7;
	}
	if(ans==-1)cout<<"-1"<<endl;
	else
	cout<<ans<<endl;
}
signed main(){   
    optimize();
    accuracy;
	int t=1;
	//P();
   // cin>>t;
	while(t--){
		solve();
	}
}