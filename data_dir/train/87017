#include <bits/stdc++.h>
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define F first
#define S second
#define ll long long
#define ull unsigned long long
#define ld long double
#define endl '\n'
#define TIME 1.0*clock()/CLOCKS_PER_SEC
#define pii pair < int32_t , int32_t >
#define Endl '\n'
#define itn int


#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("-O3")

using namespace std;


mt19937 gen(chrono::system_clock::now().time_since_epoch().count());

const ll mod = 998244353;
const int32_t FFTM = 998244353;
const int32_t N = 50000;

int32_t SX[4] = {0 , 1 , -1 , 0};
int32_t SY[4] = {1 , 0 , 0 , -1};

int n;
string s;
void solve(){
    cin >> n;
    cin >> s;
    vector < vector < int > > G(10);
    for (int i = 0;i < n; ++i){
        G[s[i] - '0'].pb(i);
    }
    vector < int > ans(n, 0);
    int tech = -1;
    bool kon = 0;
    for (int i = 0;i < 10 && !kon; ++i){
        for (auto to : G[i]){
            if (tech == -1)tech = to;
            else{
                if (tech > to){
                    kon = 1;
                    continue;
                }
                tech = to;
            }
            ans[tech] = 1;
        }
    }
    vector < int > lol;
    for (int i = 0;i < n; ++i){
        if (ans[i])lol.pb(s[i] - '0');
    }
    for (int i = 0;i < n; ++i)
        if (!ans[i])lol.pb(s[i] - '0');
    bool ok = 1;
    for (int i = 1;i < n && ok; ++i){
        if (lol[i] >= lol[i - 1])continue;
        else ok = 0;
    }
    if (ok){
        for (int i = 0;i < n; ++i){
            if (ans[i])cout << 1;
            else cout << 2;
        }
        cout << endl;
    }else{
        cout << "-" << endl;
    }
}

int32_t  main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
//    freopen("input.txt", "r", stdin);
//    freopen("output.txt", "w", stdout);
#endif
    int t;
    cin >> t;
    for (int i = 0;i < t; ++i)solve();
    return 0;
}
