#include<bits/stdc++.h>
#define int long long
using namespace std;





const int N = 505, INF = 9e18;



int n, m, dp[N][N], val[N][N];
vector < pair < pair < int, int >, int > > q;

main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n >> m;
    for(int i = 1; i <= n; i++){
        for(int j = i + 1; j <= n; j++){
            dp[i][j] = dp[j][i] = INF;
        }
    }
    for(int i = 1; i <= m; i++){
        int x, y, z;
        cin >> x >> y >> z;
        q.push_back(make_pair(make_pair(x, y), z));
        dp[x][y] = dp[y][x] = z;
    }
    for(int k = 1; k <= n; k++){
        for(int i = 1; i <= n; i++){
            for(int j = 1; j <= n; j++){
                if(dp[i][k] != INF && dp[k][j] != INF){
                    dp[i][j] = min(dp[i][j], dp[i][k] + dp[k][j]);
                }
            }
        }
    }
    for(auto it : q){
        for(int i = 1; i <= n; i++){
            int x = it.first.first, y = it.first.second,
                len = it.second;
            if(dp[i][x] + len == dp[i][y]){
                val[i][y]++;
            }
            if(dp[i][y] + len == dp[i][x]){
                val[i][x]++;
            }
        }
    }
    for(int i = 1; i < n; i++){
        for(int j = i + 1; j <= n; j++){
            int ans = 0;
            for(int k = 1; k <= n; k++){
                if(dp[i][k] + dp[k][j] == dp[i][j]){
                    ans += val[i][k];
                }
            }
            cout << ans << " ";
        }
    }
}
