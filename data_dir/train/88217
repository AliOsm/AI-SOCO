#include <bits/stdc++.h>
using namespace std;
typedef long long intt;

int main()
{
    intt n,x,k,i;
    intt d=1e18+1e9;
    d+=5;
    cin>>n>>x>>k;
    vector <intt>op;
    map<intt,intt> opada;
    intt g=n;
    intt b[g+2];
    for(i=0;i<n;i++)
    {
        int c;
        cin>>c;
        b[i]=c;
        if(!opada[c])
        {
            op.push_back(c);
            opada[c]++;
        }
        else
        opada[c]++;
    }
     sort(b,b+g+1);
    n=op.size();
    intt a[n+3];
    for(i=0;i<op.size();i++)
    a[i]=op[i];
    sort(a,a+n);
    intt sum=0;
    intt j=0;
    intt he=0;


    if(k==0)
    {
        b[g]=d;
        intt z=0;

        for(i=0;i<g;i++)
        {
            if(b[i]%x!=0)
            {
                if(i!=0&&b[i]==b[i-1])
                    sum+=z;
                else
                z=0;
                sum++;
                int w=(b[i]-b[i]%x);
                w+=x;
                int oo=lower_bound(b+i,b+g+1,w)-b-1;
                if(oo>i)
                sum+=oo-i;
                z++;

            }
        }
            cout<<sum;
            return 0;
    }
    b[g]=d;
    intt z=0,w1,w2;
    for(i=0;i<g;i++)
    {

        if(k==1&&i!=0&&b[i]==b[i-1]&&b[i]%x==0)
            sum+=z;
        else
            z=0;
            if(b[i]%x==0)
            {
                w1=b[i]+(x*k);
                w2=b[i]+(x*(k-1));

            }
            else
            {
                w1=b[i]+(x*(k+1));
                w1-=(w1%x);
                w2=b[i]+(x*k);
                w2-=(w2%x);
            }
            int oo=lower_bound(b+i,b+g+1,w1)-b-1;
            int ooo=lower_bound(b+i,b+g+1,w2)-b;
            if(ooo>=0&&oo>=0&&(b[ooo]<w2||b[oo]<w2))
                sum+=0;
            else if(oo>=0&&ooo>=0&&oo>=ooo)
            sum+=(oo-ooo)+1;
            z++;
    }
 cout<<sum;






return 0;
}
