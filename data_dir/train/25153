#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <iomanip>
#include <sstream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <stack>
#include <set>
#include <map>
#include <bitset>
#include <cstring>
#include <cctype>
#include <queue>
#include <deque>
#include <ctime>

using namespace std;

#define fi first
#define se second
#define pf push_front
#define pb push_back
#define mk make_pair
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)x.size()
#define SWS ios_base::sync_with_stdio(false)
#define rfile freopen("input.txt", "r", stdin)
#define wfile freopen("output.txt", "w", stdout)
#define files rfile; wfile

typedef long long ll;
typedef long double ld;

const int Z = (int)1e5 + 111;
const int inf = (int)1e9 + 111;
const ll llinf = (ll)1e18 + 5;
const int MOD = (int)1e9 + 7;

int dp1[228], dp2[228];

int main() {
	srand(time(0));
	//files;
	SWS;
	int n, k, d;
	cin >> n >> k >> d;
	dp1[0] = dp2[0] = 1;
	for (int i = 1; i <= n; ++i) {
		for (int j = i - 1; j >= max(0, i - (d - 1)); --j) {
			dp1[i] = (dp1[i] + dp1[j]) % MOD;
		}
	}
	for (int i = 1; i <= n; ++i) {
		for (int j = i - 1; j >= max(0, i - k); --j) {
			dp2[i] = (dp2[i] + dp2[j]) % MOD;
		}
	}
	cout << (dp2[n] - dp1[n] + MOD) % MOD;
	return 0; 
}