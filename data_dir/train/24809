#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define N 500200

int n;
int hsCnt;
map<int, int> hs;
pair<int, pair<int, int> > range[N];
int seg[N * 5];
int ans[N];

void update(int i, int p = 1, int L = 0, int R = hsCnt - 1){
    if(i < L || i > R) return;
    if(L == R){
        seg[p] = 1;
        return;
    }

    int mid = (L + R) / 2;
    update(i, p * 2, L, mid);
    update(i, p * 2 + 1, mid + 1, R);
    seg[p] = seg[p * 2] + seg[p * 2 + 1];
}

int query(int i, int j, int p = 1, int L = 0, int R = hsCnt - 1){
    if(j < L || i > R) return 0;
    if(L >= i && R <= j) return seg[p];

    int mid = (L + R) / 2;
    int c1 = query(i, j, p * 2, L, mid);
    int c2 = query(i, j, p * 2 + 1, mid + 1, R);
    return c1 + c2;
}

int main()
{
    //freopen("in.in", "r", stdin);
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

    cin >> n;
    for(int i = 0; i < n; i++){
        cin >> range[i].second.first >> range[i].first;
        range[i].second.second = i;
        hs[range[i].second.first];
        hs[range[i].first];
    }
    for(map<int, int>::iterator it = hs.begin(); it != hs.end(); it++) it->second = hsCnt++;
    for(int i = 0; i < n; i++) {
        range[i].first = hs[range[i].first];
        range[i].second.first = hs[range[i].second.first];
    }
    sort(range, range + n);
    for(int i = 0; i < n; i++){
        int L = range[i].second.first, R = range[i].first, index = range[i].second.second;
        ans[index] = query(L, R);
        update(L);
    }
    for(int i = 0; i < n; i++) cout << ans[i] << endl;

    return 0;
}