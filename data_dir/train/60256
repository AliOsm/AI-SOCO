#include<bits/stdc++.h> 
#include <bitset>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#include <chrono>
#include <random>
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define MOD 1000000007
#define MOD2 1000000009
#define INF 2000000000
#define DESPACITO 1000000000000000000
#define PI acos(-1)
#define E 998244853
#define pb push_back
#define mp make_pair
#define double long double
#define pdd pair<double,double>
#define ll long long
 
using namespace std;
//using namespace __gnu_pbds;
 
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;

int n;
int freq[(1<<21)];
int visited[(1<<21)];

void dfs(int itr,int node)
{
	freq[node]++;
	visited[node]=itr;
	for(int i=20;i>=0;i--)
	{
		if((node&(1<<i)) && (freq[node^(1<<i)]<=1) && (visited[(node^(1<<i))]!=itr))
			dfs(itr,(node^(1<<i)));
	}
}

int main()
{
	IOS;
	#ifndef ONLINE_JUDGE
		freopen("input.txt","r",stdin);
		freopen("output.txt","w",stdout);
	#endif
	cin >> n;
	int arr[n+1];
	REP(i,1,n)
		cin >> arr[i];
	int maxim=0;
	for(int i=n;i>=1;i--)
	{
		int x=(1<<21)-arr[i]-1;
		int act=0;
		for(int j=20;j>=0;j--)
		{
			if((x&(1<<j)) && freq[(act|(1<<j))]==2)
				act |= (1<<j);
		}
		if(i<=n-2)
			maxim=max(maxim,(act|arr[i]));
		if(freq[arr[i]]<2)
			dfs(i,arr[i]);
	}	
	cout << maxim;
}	