#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>
#include <deque>
#include <map>
#include <stack>

using namespace std;

const int N = 1000 * 1000;
long long cnt[N];
long long n, k;
long long solver()
{
	long long maxi = -1;
	long long mini = 1000 * 1000;
	set<int> check;
	vector<int> ans;
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		int tmp;
		cin >> tmp;
		int len = check.size();
		check.insert(tmp);
		if (check.size() == len)
		{
			cnt[tmp]++;
		}
		else
		{
			cnt[tmp] = 1;
		}
	}
	int len = check.size();
	for (int i = 0; i < len; i++)
	{
		int tmp = *check.begin();
		ans.push_back(cnt[tmp]);
		check.erase(check.begin());
	}
	sort(ans.begin(), ans.end());
	reverse(ans.begin(), ans.end());
	int tmp = 0;
	int kam = ans[0] + 1;
	int t = 0;
	for (int i = 0; i < ans.size(); i++)
	{
		if (ans[i] < kam)
		{
			tmp += ans[i];
			kam = ans[i];
		}
		else
		{
			tmp += kam - 1;
			ans[i] = kam - 1;
			kam--;
		}
		if (kam == 1)
		{
			return tmp;
		}
	}
	return tmp;

	
}
int main(){
	std::ios::sync_with_stdio(false);
	long long q;
	cin >> q;
	for (int i = 0; i < q; i++)
	{
		cout << solver() << endl;
	}

}