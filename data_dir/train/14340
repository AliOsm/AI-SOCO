#include <bits/stdc++.h>

typedef  long long ll ;
typedef long double ld ;
using namespace std;
vector<int> a,b;
int n;
int dp[100005][5];
int dfs(int i ,int last)
{
    if(i==n)
    {
        return dp[i][last]=1;
    }
    if(dp[i][last]!=-1)
        return dp[i][last];
    int ret=0;
    if(i==0)
    {
        for(int h=0; h<=3; h++)
        {
            ret=max(dfs(i+1,h),ret);
        }
    }
    else
    {
        for(int h=0; h<=3; h++)
        {
            if((last&h)==b[i-1]&&(last|h)==a[i-1])
                ret=max(dfs(i+1,h),ret);
        }
    }
    return dp[i][last]=ret;
}
void dfsprint(int i ,int last)
{
    if(i==n)
    {
        return;
    }
    for(int h=0; h<=3; h++)
    {
        if(dp[i+1][h]==1)
        {
            cout <<" " << h ;
            dfsprint(i+1,h);
        }
    }
    return;
}
int main()
{
    std::cin.tie(0);
    std::ios::sync_with_stdio(false);
    //freopen("codecoder.in", "r", stdin);
    //freopen("codecoder.out", "w", stdout);
    cin >> n;
    a.resize(n-1);
    b.resize(n-1);
    for(int i =0; i<n-1; i++)
    {
        cin >>a[i];
    }
    for(int i =0; i<n-1; i++)
    {
        cin >>b[i];
    }
    memset(dp,-1,sizeof dp);
    for(int i =0; i<=3; i++)
    {
        int answer=dfs(1,i);
        if(answer)
        {
            cout << "YES" << endl;
            cout << i ;
            dfsprint(1,i);
            cout << endl;
            return 0;
        }
    }
    cout << "NO" <<endl;
    return 0;
}
