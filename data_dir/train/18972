#include <bits/stdc++.h>
using namespace std;


int n , A , B ;
vector< pair<int,int> >coins,dimns;
vector<int>cc,dd;

int main(){

scanf("%d %d %d",&n,&A,&B);
for(int i=0;i<n;i++){
    int b , p ;
    char c[2];
    scanf("%d %d %s",&b,&p,c);

    if( c[0]=='C' && A<p )continue;
    if( c[0]=='D' && B<p )continue;

    if( c[0]=='C' )coins.push_back( { p,b } );
    else           dimns.push_back( { p,b } );
}

sort( coins.begin(),coins.end() );
sort( dimns.begin(),dimns.end() );

if( coins.size() )cc.push_back(coins[0].second);
for(int i=1;i<coins.size();i++)
    cc.push_back( max( cc.back() , coins[i].second ));

if( dimns.size() )dd.push_back(dimns[0].second);
for(int i=1;i<dimns.size();i++)
    dd.push_back( max( dimns[i].second , dd.back() ));


int ans=0;

for(int i=0;i<coins.size();i++){
    int c1 = coins[i].first;
    int c2 = A-c1;
    if( c2<=0 )break;

    int j = lower_bound(coins.begin(),coins.end(),make_pair(c2+1,0))-coins.begin()-1;
    if( j>=i )j=i-1;
    if( j<0 )continue;
    ans=max( ans , coins[i].second+cc[j] );

}

for(int i=0;i<dimns.size();i++){
    int c1 = dimns[i].first;
    int c2 = B-c1;
    if( c2<=0 )break;

    int j = lower_bound(dimns.begin(),dimns.end(),make_pair(c2+1,0))-dimns.begin()-1;
    if( j>=i )j=i-1;
    if( j<0 )continue;
    ans=max( ans , dimns[i].second+dd[j] );

}


int best1=-(1<<20) , best2=-(1<<20);
for(int i=0;i<coins.size();i++){
    if( coins[i].first > A )break;
    best1=max( best1 , coins[i].second );
}
for(int i=0;i<dimns.size();i++){
    if( dimns[i].first > B )break;
    best2=max( best2 , dimns[i].second );
}


if( best1>=0 && best2>=0 )
ans=max( ans , best1+best2 );

printf("%d\n",ans);
return 0;
}
