#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<stack>
#include<random>
#include<queue>
#include<list>
#include<math.h>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define nu 100001
#define mod 1000000007
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i, n) for (int i = 0; i < int(n); i++)
const ll INF=1000000000000000000;
int  MOD(int  a, int  b)
{
    if(a>b)
        return a-b;
    else
        return b-a;
}
int  max3(int  a,int  b, int  c)
{
    return max(c,max(a,b));
}
int  min3(int  a,int  b,int  c)
{
    return min(a,min(b,c));
}
ll  power(ll  x,ll  y )
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x)%mod;
        y = y>>1;
        x = (x*x)%mod;
    }
    return res%mod;
}
ll logg(ll  a)
{
    ll  x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
ll  gcd(ll  a,ll   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
ll abso(ll x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll  a,ll  b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
int dp[2][10001][101];
int main()
{
    fastio;
    int n;
    cin>>n;
    vi a(n);
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    vi cnt(101,0);
    int num=0;
    for(int i=0;i<n;i++)
    {
        cnt[a[i]]++;
    }
    for(int i=0;i<=10000;i++)
    {
        for(int j=0;j<=100;j++)
        {
            dp[0][i][j]=0;dp[1][i][j]=0;
        }
    }
    for(int i=1;i<=100;i++)
    {
        for(int m=0;m<=10000;m++)
        {
            for(int k=0;k<=100;k++)
            {
                dp[0][m][k]=dp[1][m][k];
            }
        }
        dp[0][0][0]=1;
        
        for(int j=1;j<=cnt[i];j++)
        {
            for(int m=i*j;m<=10000;m++)
            {
                if(m==161)
                {
                    
                }
                for(int k=j;k<=100;k++)
                {
                     dp[1][m][k]=min(2,dp[1][m][k]+dp[0][m-i*j][k-j]);
                }
            }
        }
    }
    int ans=1;
    for(int i=1;i<=100;i++)
    {
        if(cnt[i]>0)
        {
            num++;
        }
        for(int j=1;j<=cnt[i];j++)
        {
            if(dp[1][i*j][j]==1)
            {
                ans=max(ans,j);
            }
        }
    }
    if(num<=2)
    {
        cout<<n;
    }
    else
    {
        cout<<ans;
    }
}
