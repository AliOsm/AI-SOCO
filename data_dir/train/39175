#include <bits/stdc++.h>

using namespace std ;

const int MAX = 5010 ;

int arr[MAX] , arr2[MAX] , c[MAX] , dp[MAX][MAX] , to[MAX] ;

vector< vector<int> >adj(MAX) ;

int n , m  , k ;

int solve(int idx , int rem)
{
	if(rem < 0)
		return -1e8 ;
	if(idx == n)
		return 0 ;
	if(rem < arr[idx])
		return -1e8 ;
	int &ret = dp[idx][rem] ;
	if(ret != -1)
		return ret ;
	ret = -1e8 ;
	rem += arr2[idx] ;
	ret = solve(idx+1 , rem) ;
	int sum = 0 ;
	for(int i = 0 ; i < adj[idx].size() ; ++i)
	{
		sum += adj[idx][i] ;
		ret = max(ret , solve(idx+1 , rem - (i+1)) + sum) ;
	}
	return ret ;
}

int main()
{
	memset(dp , -1 ,sizeof(dp)) ;
	ios_base::sync_with_stdio(0) ;
	cin.tie(0) ;
	cin>>n>>m>>k ;
	for(int i = 0 ; i < n ; ++i)
		to[i] = i ;
	for(int i = 0 ; i < n ; ++i)
		cin>>arr[i]>>arr2[i]>>c[i] ;
	for(int i = 0 ; i < m ; ++i)
	{
		int x , y ;
		cin>>x>>y ;
		--x , --y ;
		to[y] = max(to[y] , x) ;
	}
	for(int i = 0 ; i < n ; ++i)
		adj[to[i]].push_back(c[i]) ;
	for(int i = 0 ; i < n ; ++i)
		sort(adj[i].rbegin() , adj[i].rend()) ;
	int ans = solve(0 , k) ;
	if(ans < 0)
		return cout<<-1<<"\n" , 0 ;
	return cout<<ans<<"\n" , 0 ;
}		