#include <bits/stdc++.h>

using namespace std;






int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int n; cin >> n;
	vector<int> segment;
	for(int i = 0; i < n; i++) {
		int ele; cin >> ele;
		segment.push_back(ele);
	}
	unordered_set<int> max_right;
	for(int i = n - 1; i >= 0; i--) {
		if(max_right.find(segment[i]) != max_right.end()) break;
		max_right.insert(segment[i]);
	}
	int ans = n - max_right.size();

	unordered_set<int> cur_eles;
	for(int i = 0; i < n; i++) {
		if(cur_eles.find(segment[i]) != cur_eles.end()) break;
		cur_eles.insert(segment[i]);
		unordered_set<int> tem_eles;
		for(int j = n - 1; ; j--) {
			if(tem_eles.find(segment[j]) != tem_eles.end() || cur_eles.find(segment[j]) != cur_eles.end()) {
				ans = min(ans, j - i);
				break;
			}
			tem_eles.insert(segment[j]);
		}
	}
	cout << ans << endl;
	return 0;
}

/*

2
4 6
1 2
1 3
1 4
2 3
2 4
3 4
6 8
2 5
5 4
4 3
4 1
1 3
2 3
2 6
5 6



 */
