//  Copyright Â© 2019 Diego Garcia Rodriguez del Campo. All rights reserved.
#include<bits/stdc++.h>
#define MAX 300005
#define optimiza_io cin.tie(0); ios_base::sync_with_stdio(0);
using namespace std;
typedef long long i64;

int N;
int a[MAX];
int pos[MAX];
vector < pair < int , int > > ans;

int main()
{
    optimiza_io
    cin >> N;
    for( int i = 1; i <= N; i ++ ) {
        cin >> a[i];
        pos[a[i]] = i;
    }
    
    for( int i = 1; i < N; i ++ ) {
        // Cambia num i y pos i 
        if( pos[i] == i )
            continue;
        if( abs( pos[i] - i ) >= N/2 ) {
            int p1 = i;
            int p2 = pos[i];
            ans.push_back( { p1 , p2 } );
            swap( a[p1] , a[p2] );
            pos[a[p1]] = p1;
            pos[a[p2]] = p2;
        }
        else if( ( pos[i] <= N/2 && i <= N/2 ) or ( pos[i] > N/2 && i > N/2 ) ) {
            int p1 = pos[i];
            int p2 = i; 
            int p3 = pos[i] <= N/2 ? N : 1;
            ans.push_back( { p3 , p1 } );
            ans.push_back( { p3 , p2 } );
            ans.push_back( { p3 , p1 } );
            swap( a[p1] , a[p2] );
            pos[a[p1]] = p1;
            pos[a[p2]] = p2;
            
        }
        else {
            int p1 = min( pos[i] , i );
            int p2 = max( pos[i] , i );
            int p3 = 1;
            int p4 = N;
            ans.push_back( { p1 , p4 } );
            ans.push_back( { p2 , p3 } );
            ans.push_back( { p3 , p4 } );
            ans.push_back( { p1 , p4 } );       
            ans.push_back( { p2 , p3 } );            
            swap( a[p1] , a[p2] );
            pos[a[p1]] = p1;
            pos[a[p2]] = p2;
            
        }
    }
    vector < pair < int , int > > ans2;
    for( auto v : ans )
        if( v.first != v.second )
            ans2.push_back( v );
            
    cout << ans2.size() << "\n";
    for( auto v : ans2 )
        cout << v.first << " " << v.second << "\n";
    return 0;
}