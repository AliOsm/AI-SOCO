#include <bits/stdc++.h>
using namespace std;
#define forn(i, n) for(int i = 0; i < (n); i++)
const int N = 1050;
const int M = 10010;

int n, A[N], balde[M];
bool cnd;

bool check(){
    bool ret = true;
    forn(i, M){
        if(balde[i] != 0){
            ret &= (balde[i] == 1);
            break;
        }
    }
    for(int i = M-1; i >= 0; i--){
        if(balde[i] != 0){
            ret &= (balde[i] == 1);
            break;
        }
    }
    return ret;
}

int main(){
    scanf("%d", &n);
    forn(i, n){
        scanf("%d", &A[i]);
        balde[ A[i] ]++;
    }
    int v = A[0];
    cnd = true;
    forn(i, n){
        if(A[i] != v){
            cnd = false;
            break;
        }
    }
    if(cnd){
        printf("Exemplary pages.\n");
        return 0;
    }

    int cnt = 0;
    forn(i, M){
        if(balde[i] != 0) cnt++;
    }
    if(n == 2){
        if( abs(A[0] - A[1]) % 2 == 0){
            if(A[0] > A[1]){
                printf("%d ml. from cup #2 to cup #1.\n", abs(A[0] - A[1])/2);
            }
            else {
                printf("%d ml. from cup #1 to cup #2.\n", abs(A[0] - A[1])/2);
            }
        }
        else {
            printf("Unrecoverable configuration.\n");
            return 0;
        }
        return 0;
    }
    if(cnt == 3 && check() ){
        int x, y, z;
        forn(i, M){
            if(balde[i] != 0){
                x = i;
                break;
            }
        }
        for(int i = M-1; i >= 0; i--){
            if(balde[i] != 0){
                y = i;
                break;
            }
        }
        for(int i = x+1; i < y; i++){
            if(balde[i] != 0){
                z = i;
                break;
            }
        }
        int id1, id2;
        forn(i, n){
            if(A[i] == x)
                id1 = i+1;
            if(A[i] == y)
                id2 = i+1;
        }
        // x < y
        //printf("%d %d %d", z, (x + (y-x)/2), (y - (y-x)/2));
        if( (y - x) % 2 == 0 && z == (x + (y-x)/2) && z == (y - (y-x)/2))
            printf("%d ml. from cup #%d to cup #%d.\n", (y-x)/2, id1, id2);
        else {
            printf("Unrecoverable configuration.\n");
            return 0;
        }
    }
    else {
        printf("Unrecoverable configuration.\n");
        return 0;
    }


    return 0;
}
