#include <bits/stdc++.h>
using namespace std;

using ll = long long;
using vi = vector<int>;

const int MAX = 2e5+10;
int a[MAX];
int v[MAX];
int cant[MAX];

void dfs(int x){
	if( v[a[x]] ) return;
	v[a[x]] = v[x];
	dfs(a[x]);
}

void solve(){
	int n;
	cin >> n;
	for(int i=1;i<=n;i++){
		cin >> a[i];
		v[i] = 0;
		cant[i] = 0;
	}
	int cnt = 1;
	for(int i=1;i<=n;i++){
		if( v[i] == 0){
			v[i] = cnt;
			cnt++;
			dfs(i);
		}
	}
	for(int i=1;i<=n;i++){
		cant[v[i]]++;
	}
	for(int i=1;i<=n;i++){
		cout << cant[v[i]];
		if( i == n) cout << "\n";
		else cout << " ";
	}
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int q;
	cin >> q;
	while( q--){
		solve();
	}

}
