#include <iostream>
#include <cmath>
#include <string>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <fstream>
#include <cassert>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <stack>
#include <functional>
#include <numeric>
#include <ctime>
#include <cstdlib>
#include <sstream>
#include <cassert>

using namespace std;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define pii pair<int, int>
#define pll pair<long long, long long>
#define y1 stupid_y1
#define ll long long
#define vi vector<int>
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x)*(x))
#define sz(a) (int)a.size()
#define file "a"

const int inf = (int)1e9;
const double eps = 1e-9;
const double pi = acos(-1.0);

int n, m;
int a[1010];    
vector < int > g[1010];
int p[1010];

bool cmp(int i, int j){
    return a[i] > a[j];
}

int main () {
    #ifdef LOCAL
    freopen(file".in", "r", stdin);
    freopen(file".out", "w", stdout);
    #endif
    scanf("%d%d", &n, &m);

    for (int i=1;i<=n;i++) scanf("%d", a + i);

    for (int i=0;i<m;i++){
        int a, b;
        scanf("%d%d", &a, &b);
        g[a].push_back(b);
        g[b].push_back(a);      
    }

    for (int i=1;i<=n;i++) p[i] = i;
    sort(p + 1, p + n + 1, cmp);

    vector < bool > used(n+1, 0);
    ll sum = 0;
    for (int i=1;i<=n;i++){
        int I = p[i];
        used[I] = true;
        forit(it, g[I]){
            if ( used[*it] ) continue;
            sum += a[*it];
        }
    }

    cout <<sum<<endl;


    #ifdef LOCAL
    cerr << (double)clock() * 1.0 / CLOCKS_PER_SEC << endl;
    #endif

    return 0;
}



