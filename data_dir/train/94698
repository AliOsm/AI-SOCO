#include<bits/stdc++.h>
using namespace std;

const int N = 1000 + 20, M = 2e4 + 20, mod = 1e9 + 7;
int a[N], dp[2][M];

int sum(int a, int b) {
    return ((1LL * a + b) % mod + mod) % mod;
}

int main() {
    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i];
    int ans = 0;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < M; j++)
            dp[i % 2][j] = sum((j - a[i] >= 0? dp[1 - i % 2][j - a[i]]: 0), (j + a[i] <= 2e4? dp[1 - i % 2][j + a[i]]: 0));
        dp[i % 2][a[i] + 10000]++;
        dp[i % 2][-a[i] + 10000]++;
        ans = sum(ans, dp[i % 2][10000]);
    }
    cout << ans << "\n";
    return 0;
}