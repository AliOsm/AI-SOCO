#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define ll long long
#define ld long double
using namespace std;
const int N = 1e5 + 5;
int n, u, sub[N];
vector<int>edges[N];
int dfs(int node, int parent){
    int cnt = 0, leaf = 1;
    for(auto i : edges[node]){
        if(i != parent)
            cnt += dfs(i, node), leaf = 0;
    }
    return sub[node] = cnt + leaf;
}
int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    cin >> n;
    for(int i = 2; i <= n; i++){
        cin >> u;
        edges[u].push_back(i);
        edges[i].push_back(u);
    }
    dfs(1, 0);
    priority_queue<int>pq;
    for(int i = 1; i <= n; i++)
            pq.push(-sub[i]);
    for(int i = 1; i <= n; i++){
        cout << -pq.top() << ' ';
        pq.pop();
    }
    return 0;
}
