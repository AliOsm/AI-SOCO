#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<map>
#include<string>
#include<math.h>
#include<queue>
#include<stack>
#include<iostream>
using namespace std;
#define LL long long
#define mod 1000000007
typedef struct Point
{
	int x, y;
	bool operator < (const Point &b) const
	{
		if(x>b.x)
			return 1;
		return 0;
	}
}Point;
Point s[20005];
queue<Point> q;
int flag[55][55], ok[20005], dir[4][2] = {1,0,0,1,-1,0,0,-1};
char str[55][55];
void Gao(int x, int y, int cnt)
{
	Point now, temp;
	int sum, i;
	if(str[x][y]=='*')
		return;
	sum = 1, flag[x][y] = cnt;
	now.x = x, now.y = y;
	q.push(now);
	while(q.empty()==0)
	{
		now = q.front();
		q.pop();
		for(i=0;i<=3;i++)
		{
			temp.x = now.x+dir[i][0];
			temp.y = now.y+dir[i][1];
			if(str[temp.x][temp.y]=='.' && flag[temp.x][temp.y]==0)
			{
				flag[temp.x][temp.y] = cnt;
				q.push(temp);
				sum++;
			}
		}
	}
	if(cnt>=1)
		s[cnt].y = cnt, s[cnt].x = sum;
}
int main(void)
{
	int cnt, n, m, k, i, j, ans;
	scanf("%d%d%d", &n, &m, &k);
	for(i=1;i<=n;i++)
		scanf("%s", str[i]+1);
	for(i=1;i<=n;i++)
		Gao(i, 1, -1), Gao(i, m, -1);
	for(i=1;i<=m;i++)
		Gao(1, i, -1), Gao(n, i, -1);
	cnt = 0;
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=m;j++)
		{
			if(str[i][j]=='.' && flag[i][j]==0)
				Gao(i, j, ++cnt);
		}
	}
	ans = 0;
	sort(s+1, s+cnt+1);
	for(i=1;i<=k;i++)
		ok[s[i].y] = 1;
	for(;i<=cnt;i++)
		ans += s[i].x;
	printf("%d\n", ans);
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=m;j++)
		{
			if(flag[i][j]<=0 || ok[flag[i][j]])
				printf("%c", str[i][j]);
			else
				printf("*");
		}
		puts("");
	}
	return 0;
}