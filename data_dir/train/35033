//Pham Huu Canh
//B. Preparing for the Contest
//Algorithm:
//Complexity: O(n * log(n) * log(n))
//AC: 624ms

#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define max64 9223372036854775807LL
#define max32 2147483647
#define maxty 1001001001
#define max16 32767
#define EPS 1e-8
#define ll long long
#define ull unsigned long long
#define pb push_back
#define mp make_pair
#define PQ priority_queue
#define LB lower_bound
#define UB upper_bound
#define fi first
#define se second
#define timmax(x, y)    ((x) > (y) ? (x) : (y))
#define timmin(x, y)    ((x) < (y) ? (x) : (y))
#define fori(i, n)      for((i) = 0; (i) < (n); (i)++)
#define ford(i, n)      for((i) = (n-1); (i) >= 0; (i)--)
#define fore(i, v)      for(typeof(v.begin()) i = v.begin(); i != v.end(); i++)
#define repi(i, a, b)   for((i) = (a); (i) <= (b); (i)++)
#define repd(i, a, b)   for((i) = (a); (i) >= (b); (i)--)
#define all(tmpv)      tmpv.begin(), tmpv.end()

#define fii "b.inp"
#define foo "b.out"
#define MOD 1000000007
#define inf 1000111000111000111LL

using namespace std;

typedef pair<int, int> II;
typedef vector<int> VI;
#define nmax 100005

struct mang{
    int cost, id, day;
    mang(){}
    mang(int _cost, int _id, int _day) : cost(_cost), id(_id), day(_day){}
    bool operator < (const mang &t) const{
        return cost > t.cost;
    }
};
PQ<mang> pq;
II p[nmax];
pair<II, int> st[nmax];
int a[nmax], ans[nmax];
int n, nbug, nsub;

bool ktra(int nday){
    ll sum = 0;
    int i, cur = n - 1;
    mang t;
    
    while (!pq.empty()) pq.pop();
    
    ford(i, nbug){
        while (cur >= 0 && st[cur].fi.fi >= p[i].fi){
            pq.push(mang(st[cur].fi.se, st[cur].se, 0));        //cost, index, day
            cur--;
        }
        
        if (pq.empty()) return false;
        t = pq.top(), pq.pop();
        
        ans[p[i].se] = t.id;
        sum += t.cost;
        t.cost = 0;
        t.day++;
        
        if (t.day < nday)   pq.push(t);
    }
    return sum <= nsub;
}

void input()
{
    int i, dau, giua, cuoi, res, x;
    
    scanf("%d %d %d", &n, &nbug, &nsub);
    
    fori(i, nbug)   scanf("%d", &p[i].fi), p[i].se = i;
    fori(i, n)  scanf("%d", &a[i]);
    fori(i, n)  scanf("%d", &x), st[i] = mp(mp(a[i], x), i+1);
    
    sort(p, p + nbug);
    sort(st, st + n);
    
    dau = 1, cuoi = nbug + 1;
    res = -1;
    while (dau <= cuoi){
        giua = (dau + cuoi)>>1;
        if (ktra(giua)) res = giua, cuoi = giua - 1;
        else dau = giua + 1;
    }
    
    if (res != -1){
        ktra(res);
        printf("YES\n");
        fori(i, nbug)   printf("%d ", ans[i]);
    }
    else printf("NO\n");
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen(fii,"r",stdin);
        freopen(foo,"w",stdout);
    #endif

    input();

    return 0;
}
