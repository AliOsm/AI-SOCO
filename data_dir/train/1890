//██████╗ ██╗   ██╗██╗      ██████╗ ███████╗
//██╔══██╗██║   ██║██║      ██╔══██╗██╔════╝
//██████╔╝██║   ██║██║█████╗██║  ██║█████╗
//██╔══██╗██║   ██║██║╚════╝██║  ██║██╔══╝
//██║  ██║╚██████╔╝██║      ██████╔╝███████╗
//╚═╝  ╚═╝ ╚═════╝ ╚═╝      ╚═════╝ ╚══════╝
#include <bits/stdc++.h>


// #pragma GCC target("sse,sse2,sse3,ssse3,sse4")
#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
using namespace std;

#define fst first
#define snd second
#define mp make_pair
#define mt make_tuple
#define pb push_back
#define eb emplace_back

#define all(v) (v).begin(), (v).end()
#define sz(v) ((int)(v).size())
#define sqr(x) ((x) * (x))

typedef long long ll;
typedef  double ld;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef vector<int> vi;

#define next ajksdslk
#define prev aklsfjk

mt19937_64 mt_rand(chrono::system_clock::now().time_since_epoch().count());

template<typename T1, typename T2> inline bool upmax(T1& a, T2 b) { return (a < b ? (a = b, true) : false); }
template<typename T1, typename T2> inline bool upmin(T1& a, T2 b) { return (b < a ? (a = b, true) : false); }

const int maxn = (int) 5e6 + 100;
const int maxlog = 21;
//const int base = 1e9 + 7;
const ld eps = (ld) 1e-9;
const ld PI = acos(-1.);
//const int pp = 41;
const int inf = 2e9;
const ll llinf = 1e18;


string gentrue(int n, int k) {
  string res = "";
  for (int i = 1; i < k; i ++) {
    res.pb('('); res.pb(')');
  }
  int cnt = n - sz(res);
  for (int i = 0; i < cnt / 2; i ++) {
    res.pb('(');
  }
  for (int i = 0; i < cnt / 2; i ++) {
    res.pb(')');
  }
  return res;

}

void solve() {
  int n, k;
  string s;
  cin >> n >> k;
  cin >> s;

  auto res = gentrue(n, k);
  vector<pii> ans;

  assert(sz(s) == sz(res));
  for (int i = 0; i < n; i ++) {
    if (s[i] != res[i]) {
      for (int j = i + 1; j < n; j ++) {
        if (s[j] == res[i]) {
          reverse(s.begin() + i, s.begin() + j + 1);
          ans.eb(i + 1, j + 1);
          break;
        }
      }
    }
  }
  cerr << s << "\n";
  cout << sz(ans) << "\n";
  for (auto[a, b] : ans) {
    cout << a << " " << b << "\n";
  }

}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
#ifdef LOCAL
  freopen ("input.txt", "r", stdin);
#endif
  int t;
  cin >> t;
  while(t --) {
    solve();
  }


  return 0;
}