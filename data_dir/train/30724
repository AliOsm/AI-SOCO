#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

template<typename T>
void out(T x) { cout << x << endl; exit(0); }
#define watch(x) cout << (#x) << " is " << (x) << endl

const int maxn = 505;

int n, m;
vector<int> g[maxn];

bool act[maxn], viz[maxn];
int bak;


void dfs(int at) {
  act[at]=true;
  viz[at]=true;
  for (int to: g[at]) {
    if (!viz[to]) dfs(to);
    bak += act[to];
    if (bak>1) return;
  }
  act[at]=false;
}

bool dfs2(int at) {
  act[at]=true;
  viz[at]=true;
  for (int to: g[at]) {
    if (!viz[to]) {
      if (dfs2(to)) return true;
    } else {
      if (act[to]) return true;
    }
  }
  act[at]=false;
  return false;
}

int main() {
  ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);

  cin>>n>>m;
  for (int i=0; i<m; i++) {
    int u,v;
    cin>>u>>v;
    g[u].push_back(v);
  }

  for (int i=1; i<=n; i++) {
    memset(act,false,sizeof(act));
    memset(viz,false,sizeof(viz));
    bak=0;
    dfs(i);
    if (bak>1) continue;

    bool ok = true;
    for (int j=1; j<=n && ok; j++) {
      if (!viz[j]) {
	ok = ok && !dfs2(j);
      }
    }
    if (ok) out("YES");
  }

  out("NO");

  return 0;
}
// don't forget to read in the input :^)
