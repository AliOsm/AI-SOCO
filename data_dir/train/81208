
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

int cnt(const vector<int>& v){ 
 int sum = 0;
 for (int i = 0; i < v.size(); ++i) {
  int mn = v[i];
  for (int j = i; j < v.size(); ++j){
   mn = min(mn, v[j]);
   sum += mn;
  }
 }
 return sum;
}

int main () {

 int n, m;
 cin >> n >> m;
 vector<int> v;
 vector<vector<int> > p;
 for (int i = 1; i <= n; ++i) {
  v.push_back(i);
 }
 do {
  p.push_back(v);
 } while (next_permutation(v.begin(), v.end()));
 
 int max_val = 0;
 for (int i = 0; i < p.size(); ++i) {
  max_val = max(max_val, cnt(p[i])); 
 }
 
 for (int i = 0; i < p.size(); ++i) {
  if (cnt(p[i]) == max_val) {
   --m;
   if (m == 0) {
    for (int j = 0; j < p[i].size(); ++j) {
     cout << p[i][j] << " ";
    }
    return 0;
   }
  }
 }

 return 0;
}
