#include <vector>
#include <list>
#include <map>
#include <math.h>
#include <cmath>
#include <set>
#include <queue>
#include <deque>
#include <string>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <string.h>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <unordered_map>

using namespace std;

#define ll  long long int
#define ld long double

vector<int>Graph[100001];
int main()
{
	ios::sync_with_stdio(false);
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr), cout.tie(nullptr);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	int n, m, a, b, one = 0, two = 0;
	cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		cin >> a >> b;
		Graph[a].push_back(b);
		Graph[b].push_back(a);
	}

	for (int i = 1; i <= n; i++)
	{
		if (Graph[i].size() == n - 1)
		{
			for (int j = 1; j <= n; j++)
			{
				if (j != i)
				{
					if (Graph[j].size() != 1 || Graph[j][0] != i)
					{
						cout << "unknown topology" << endl;
						return 0;
					}
				}
			}
			cout << "star topology" << endl;
			return 0;
		}
	}

	for (int i = 1; i <= n; i++)
	{
		if (Graph[i].size() == 1)one++;
		if (Graph[i].size() == 2)two++;
	}
	if (one + two != n)
	{
		cout << "unknown topology" << endl;
		return 0;
	}
	if (!one && two == n)
	{
		cout << "ring topology" << endl;
		return 0;
	}
	if (one == 2 && two == n - 2)
	{
		cout << "bus topology" << endl;
		return 0;
	}
	return 0;
}