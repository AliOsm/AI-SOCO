#include<bits/stdc++.h>
#include<ext/numeric>
using namespace std;
using namespace __gnu_cxx;

#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v)  (int)v.size()
#define WHITE -1
#define GREY   0
#define BLACK  1
#define CLR(a,v) memset(a,v,sizeof a)
#define PC(x) __builtin_popcount(x)
#define MP make_pair

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef unsigned int ui;

typedef complex<double> point;
//#define X real()
//#define Y imag()
#define vec(a,b) ((b)-(a))
#define dot(a,b) ((conj(a)*(b)).real())
#define cross(a,b) ((conj(a)*(b)).imag())
#define colliner pointOnLine

const double PI = acos(-1.0);

int dx[] = { 0, -1, 0, 1, -1, -1, 1, 1 };
int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };

const int MAX = 1e4 + 5, MOD = 1e9 + 9, oo = (1 << 30);
const ll OO = 1ll << 60;
const double EPS = 1e-9;

int n, c, a[MAX], b[MAX];

bool check(ll mid) {
	ll ret = 0;
	for (int i = 0; i < n; ++i) {
		ret += (a[i] * mid / b[i] + 1);
		if (ret >= c)
			return 1;
	}
	return ret >= c;
}
bool check2(ll mid) {
	ll ret = 0;
	for (int i = 0; i < n; ++i) {
		ret += (a[i] * mid / b[i] + 1);
		if (ret > c)
			return 0;
	}
	return ret == c;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
#endif
	scanf("%d%d", &n, &c);
	bool allZero = 1;
	for (int i = 0; i < n; ++i) {
		scanf("%d%d", &a[i], &b[i]);
		allZero &= (a == 0);
	}
	if (allZero && c == n)
		return puts("-1");
	if (c < n)
		return puts("0");
	ll l = 1, r = oo;
	while (l < r) {
		ll mid = l + ((r - l) >> 1);
		if (check(mid))
			r = mid;
		else
			l = mid + 1;
	}
	if (!check2(r))
		return puts("0");
	ll rl = r;
	r = oo;
	while (l < r) {
		ll mid = l + ((r - l + 1) >> 1);
		if (check2(mid))
			l = mid;
		else
			r = mid - 1;
	}
	ll rr = l;
	printf("%lld\n", rr - rl + 1);
}
