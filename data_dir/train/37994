#include <bits/stdc++.h>
#define st first
#define nd second

using namespace std;

void debug_out() { cerr << endl; }
template<class T> ostream& prnt(ostream& out, T v) { out << v.size() << '\n'; for(auto e : v) out << e << ' '; return out;}
template<class T> ostream& operator<<(ostream& out, vector <T> v) { return prnt(out, v); }
template<class T> ostream& operator<<(ostream& out, set <T> v) { return prnt(out, v); }
template<class T1, class T2> ostream& operator<<(ostream& out, map <T1, T2> v) { return prnt(out, v); }
template<class T1, class T2> ostream& operator<<(ostream& out, pair<T1, T2> p) { return out << '(' << p.st << ' ' << p.nd << ')'; }
template <typename Head, typename... Tail> void debug_out(Head H, Tail... T) { cerr << " " << H; debug_out(T...);}

#define dbg(...) cerr << #__VA_ARGS__ << " ->", debug_out(__VA_ARGS__)
#define dbg_v(x, n) do{cerr<<#x"[]: ";for(int _=0;_<n;++_)cerr<<x[_]<<" ";cerr<<'\n';}while(0)
#define dbg_ok cerr<<"OK!\n"

const int N = 1001008;
int n, val[N], m, a;

vector <int> v[N], cnt[N], vv;

int main() {
	ios_base::sync_with_stdio(false);

	cin >> n >> m;
	for(int i = 1; i <= n; i++) {
		cin >> a;
		if(a > m) continue;
		v[a].push_back(i);
	}

	for(int i = 1; i <= m; i++) {
		for(int j = i; j <= m; j += i) {
			val[j] += v[i].size();
			cnt[j].push_back(i);
		}
	}

	int mx = 1;
	for(int i = 1; i <= m; i++)
		if(val[i] > val[mx]) mx = i;

	cout << mx << ' ';
	for(auto i : cnt[mx])
		for(auto j : v[i])
			vv.push_back(j);
	sort(vv.begin(), vv.end());
	cout << vv << '\n';

}	

	