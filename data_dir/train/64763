#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigneds
vector<double> radius;
vector<int> s;
vector<double> x,p;
int n;
void relax(int i, int j)
{
	double t=s[j];
	radius[i]=MIN(radius[i],(x[i]-x[t])*(x[i]-x[t])/(4*radius[t]));
}
double solve()
{
	radius.clear();
	s.clear();
	double sum=0;
	FOR(i,0,n)
	{
		radius.push_back(p[i]);
		FOR(j,0,MIN(s.size(),300))
		{
			relax(i,s.size()-j-1);
		}
		while ((s.size()) && (radius[s.size()-1]<=radius[i]))
			s.pop_back();
		s.push_back(i);
		sum+=radius[i];
	}
	//cout<<s.size()<<endl;
	return sum;
}
double solve1()
{
	radius.clear();
	s.clear();
	double sum=0;
	FOR(i,0,n)
	{
		radius.push_back(p[i]);
		FOR(j,0,s.size())
		{
			relax(i,s.size()-j-1);
		}
		while ((s.size()) && (radius[s.size()-1]<=radius[i]))
			s.pop_back();
		s.push_back(i);
		sum+=radius[i];
	}
	//cout<<s.size()<<endl;
	return sum;
}
int main()
{
#ifdef Fcdkbear
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
    double beg=clock();
#endif
	/*scanf("%d",&n);
	x.resize(n);
	p.resize(n);
	FOR(i,0,n)
		scanf("%lf%lf",&x[i],&p[i]);*/
	printf("500\n");
	int x=300000;
	printf("0 300000\n");
	int toadd=498;
	FOR(i,0,498)
	{
		x+=toadd;
		printf("%d %d\n",x,toadd);
		x+=toadd;
		toadd--;
	}
	printf("600000 600000\n",x);
	/*double res=solve();
	double res1=solve1();
	printf("%.10lf %.10lf\n",res,res1);*/
#ifdef Fcdkbear
    double end=clock();
    fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
}