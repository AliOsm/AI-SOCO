#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
#include <cstring>
#include <iomanip>

#define LL long long int
#define N 300000
#define INF 1000000000
#define MOD 1000000007
#define first x
#define second y
using namespace std;

bool possible[101][901];
int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);cout.tie(0);
	int m,s,i,j,k;
	cin >> m >> s;
	
	if (s==0) {
		if (m==1) cout << "0 0\n";
		else cout << "-1 -1\n";
		return 0;
	}
	
	memset(possible,0,sizeof(possible));
	possible[0][0]=1;
	for (i=0;i<=9;i++) possible[1][i]=1;
	for (i=2;i<=m;i++) {
		for (j=0;j<=s;j++) {
			for (k=0;k<=min(9,j);k++) {
				possible[i][j]|=possible[i-1][j-k];
			}
		}
	}
	
	int currsum=s;
	for (i=m;i>=1;i--) {
		if (i==m) k=1;
		else k=0;
		
		for (;k<=min(9,currsum);k++) if (possible[i-1][currsum-k]) break;
		if (k>min(9,currsum)) {
			cout << "-1 -1\n";
			return 0;
		}
		cout << k;
		currsum-=k;
	}
	cout << " ";
	currsum=s;
	for (i=m;i>=1;i--) {
		for (k=min(9,currsum);k>=0;k--) if (possible[i-1][currsum-k]) break;
		cout << k;
		currsum-=k;
	}
	cout << '\n';
	return 0;
}
