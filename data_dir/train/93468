#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

typedef long long ll;
using namespace std;
using namespace __gnu_pbds;

template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(int i = (a); i <= (b); i++)
#define fd(i,a,b) for(int i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<int,int>
#define SZ(x) ((int)x.size())
#define vii vector<pair<int,int>>

const int INF = 1000000005;
const ll INFLL = 1000000000000000002ll;
const ll MOD = 1000000007;

inline ll min(ll a, ll b, ll c){return min(min(a,b),c);}
inline ll min(ll a, ll b, ll c, ll d){return min(min(min(a,b),c),d);}
inline ll max(ll a, ll b, ll c){return max(max(a,b),c);}
inline ll max(ll a, ll b, ll c, ll d){return max(max(max(a,b),c),d);}

// ----------------------------------------------------------------------------------------------------------

int A[3005], B[3005], N;
ll DP[3005][3005];

int main()
{
    cin >> N;
    f(i,1,N) cin >> A[i];
    f(i,1,N) B[i] = A[i] - i;
    sort(B+1,B+N+1);
    f(i,1,N)
    {
        f(j,1,N) DP[i][j] = DP[i-1][j] + abs(A[i]-i - B[j]);
        f(j,2,N) DP[i][j] = min(DP[i][j], DP[i][j-1]);
    }
    ll ans = INFLL;
    f(j,1,N) ans = min(ans, DP[N][j]);
    cout << ans;
}
