#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOR(i, a, b) for (int i = a; i < int(b); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define ll long long
#define pii pair<int, int>

set<ll> S;

const int MAX = 600600;
ll p1 = 1000000009, p2 = 100000007;
ll pot[MAX];

ll p3 = 1000000021, p4 = 100000033;
ll pot2[MAX];

void init(){
	pot2[0] = pot[0] = 1;
	for(int i = 1; i < MAX; i++) pot[i] = (p1*pot[i - 1])%p2;
	for(int i = 1; i < MAX; i++) pot2[i] = (p3*pot2[i - 1])%p4;
}

set<ll> S2;

int main(){
	init();
	int n, m;
	cin >> n >> m;
	REP(t, n){
		string s; cin >> s;
		int len = (int)s.size();
		
		ll hsh = 0;
		ll hsh2 = 0;
		REP(i, len) hsh = (hsh + 1ll*(s[i] - 'a' + 1)*pot[i])%p2, hsh2 = (hsh2 + 1ll*(s[i] - 'a' + 1)*pot2[i])%p4;
		S.insert(hsh);
		S2.insert(hsh2);
	}
	REP(t, m){
		bool possible = false;
		string s; cin >> s;
		int len = (int)s.size();
		
		ll hsh = 0;
		ll hsh2 = 0;
		REP(i, len) hsh = (hsh + 1ll*(s[i] - 'a' + 1)*pot[i])%p2, hsh2 = (hsh2 + 1ll*(s[i] - 'a' + 1)*pot2[i])%p4;
		
		REP(i, len){
			ll tmp = ((hsh - 1ll*(s[i] - 'a' + 1)*pot[i])%p2 + p2)%p2;
			ll tmp2 = ((hsh2 - 1ll*(s[i] - 'a' + 1)*pot2[i])%p4 + p4)%p4;
			
			for(int j = 1; j <= 3; j++){
				if(j == (s[i] - 'a' + 1)) continue;
				if(S.count((tmp + 1ll*j*pot[i])%p2) == 1 && S2.count((tmp2 + 1ll*j*pot2[i])%p4) == 1) possible = true;
			}
			if(possible) break;
		}
		printf("%s\n", possible ? "YES" : "NO");
	}
}