#include <iostream>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <string>
#include <map>
#include <set>

#define ll long long
#define ld long double

using namespace std;


bool valid(string s)
{
    bool flag = true;
    int idx = 0;
    while(idx < s.size() && 'A' <= s[idx] && s[idx] <= 'Z') idx++;
    if(idx == s.size()) return false;
    while(idx < s.size() && '0' <= s[idx] && s[idx] <= '9') idx++;
    if(idx != s.size()) return false;
    return true;
}

void solve(string s)
{
    // BC23
    if(valid(s))
    {
        string first, second;
        for(int i = 0; i < s.size(); i++)
        {
            if('A' <= s[i] && s[i] <= 'Z') first.push_back(s[i]);
            else second.push_back(s[i]);
        }
        int row = 0;
        int col = 0;
        for(int i = 0; i < first.size(); i++)
        {
            col *= 26;
            col += first[i]-'A'+1;
        }
        for(int i = 0; i < second.size(); i++)
        {
            row *= 10;
            row += second[i]-'0';
        }
        cout << 'R' << row << 'C' << col << endl;
    }
    // R23C55
    else
    {
        bool flag = true;
        string first;
        int second = 0;
        for(int i = 1; i < s.size(); i++)
        {
            if(s[i] == 'C')
            {
                flag = false;
                continue;
            }
            if(flag)
            {
                first.push_back(s[i]);
            }
            else
            {
                second *= 10;
                second += s[i]-'0';
            }
        }
        string op;
        while(second > 0)
        {
            second--;
            char c = (second%26) + 'A';
            second /= 26;
            op = c+op;
        }
        cout << op << first << endl;
    }
}

int main()
{
    int n; cin >> n;
    for(int nn = 0; nn < n; nn++)
    {
        string s; cin >> s;
        solve(s);
    }
    return 0;
}
