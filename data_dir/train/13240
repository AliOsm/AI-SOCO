/**/
#include <bits/stdc++.h>
using namespace std;
/***********************************************/
/* Dear online judge:
 * I've read the problem, and tried to solve it.
 * Even if you don't accept my solution, you should respect my effort.
 * I hope my code compile and get accepted.
 *      ____________
 *     /            \
 *    /  /\      /\  \
 *   /  /  \    /  \  \
 *   \                /
 *    \     \___/    /
 *     \____________/
 */
const long long mod = 1000000007;
vector<vector<int> > graph;
vector<int> scc;
bool vis[1000010];
void dfs(int ind){
	if(vis[ind])
		return;
	vis[ind] = true;
	scc.back()++;
	for(auto x : graph[ind]){
		if(!vis[x])
			dfs(x);
	}
}
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);

	int N,M,K,u,v;
	cin>>N>>M>>K;
	graph.resize(N);
	for(int i = 0;i < M;i++){
		cin>>u>>v;
		u--,v--;
		graph[u].push_back(v);
		graph[v].push_back(u);
	}
	int sum = 0;
	for(int i = 0;i < N;i++){
		if(vis[i])
			continue;
		scc.push_back(0);
		dfs(i);
		sum += min(K,scc.back());
	}
	if(scc.size() == 1){
		cout<<"0\n";
		return 0;
	}
	if(K == 1){
		cout<<scc.size()-2<<'\n';
		return 0;
	}
	if(scc.size() - 1 <= sum/2){
		cout<<"0\n";
		return 0;
	}
	cout<<scc.size() - 1 - sum/2<<'\n';
	return 0;
}
/**/
