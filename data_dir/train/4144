#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <complex>
#include <map>
#include<unordered_map>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#include <numeric>
#include <math.h>

#define lli long long int
#define ld long double
#define ff first
#define ss second
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);

using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long cmod = 998244353 ;
const long long inf = 1LL << 61;
const int M = 1e6 + 500;
const int NN = 5e3 + 6;

void solve()
{
    string s;
    cin>>s;
    lli n = s.size();
    string ans = "";
    lli l = 0, r = s.size() - 1;
    if(s.size() == 1) {
        cout<<s<<'\n';
        return ;
    }
    while(s[l] == s[r]) {
        if(l == r) {
            l ++;
            break ;
        }
        l ++;
        r --;
        if(l > r)
            break ;
    }
    vector<char> v1, v2, v3;
    for(int i = 0; i < l; i ++) {
        v1.push_back(s[i]);
    }
    for(int i = r + 1; i < s.size(); i ++) {
        v2.push_back(s[i]);
    }

    lli req = (lli)s.size() - (lli)v1.size() - (lli)v2.size();
    if(req < 0)
        req = 0;
//    cout<<req<<endl;

    string a = "", b = "";
    string p1 = "", p2 = "";
    map<lli, string> ma1, ma2;
    ma1[0] = "";
    ma2[0] = "";
    for(int i = l; i < n; i ++) {
        a += s[i];
//        cout<<a<<endl;
        lli l = 0, r = a.size() - 1;
        while(l <= r) {
            if(a[l] == a[r]) {
                l ++;
                r --;
            }
            else
                break ;
        }
        if(l > r) {
            if(a.size() <= req) {
                ma1[a.size()] = a;
            }
        }
    }
//    cout<<"YES"<<endl;
    for(int i = r; i >= 0; i --) {
        b += s[i];
        lli l = 0, r = b.size() - 1;
        while(l <= r) {
            if(b[l] == b[r]) {
                l ++;
                r --;
            }
            else
                break;
        }
        if(l > r) {
            if(b.size() < req) {
                ma2[b.size()] = b;
            }
        }
    }

    string mid = "";
    for(auto &it1 : ma1) {
        if(mid.size() < it1.ff && it1.ff <= req)
            mid = it1.ss;
    }

    for(auto &it1 : ma2) {
        if(mid.size() < it1.ff && it1.ff <= req)
            mid = it1.ss;
    }

    for(auto it : v1) {
        cout<<it;
    }

    cout<<mid;

    for(auto it : v2)
        cout<<it;
//    cout<<endl;
    cout<<'\n';
    return ;
}

/*
*/

int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

    int t = 1;
    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}

