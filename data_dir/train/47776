#include <string>
#include <vector>
#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<stack>
#include<queue>
#include<cmath>
#include<algorithm>
#include<functional>
#include<list>
#include<deque>
#include<bitset>
#include<set>
#include<map>
#include<unordered_map>
#include<unordered_set>
#include<cstring>
#include<sstream>
#include<complex>
#include<iomanip>
#include<numeric>
#include<cassert>
#define X first
#define Y second
#define pb push_back
#define rep(X,Y) for (int (X) = 0;(X) < (Y);++(X))
#define reps(X,S,Y) for (int (X) = S;(X) < (Y);++(X))
#define rrep(X,Y) for (int (X) = (Y)-1;(X) >=0;--(X))
#define repe(X,Y) for ((X) = 0;(X) < (Y);++(X))
#define peat(X,Y) for (;(X) < (Y);++(X))
#define all(X) (X).begin(),(X).end()
#define rall(X) (X).rbegin(),(X).rend()
#define eb emplace_back
#define UNIQUE(X) (X).erase(unique(all(X)),(X).end())
#define Endl endl

using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
template<class T> using vv=vector<vector<T>>;
template<class T> ostream& operator<<(ostream &os, const vector<T> &t) {
os<<"{"; rep(i,t.size()) {os<<t[i]<<",";} os<<"}"<<endl; return os;}
template<class S, class T> ostream& operator<<(ostream &os, const pair<S,T> &t) { return os<<"("<<t.first<<","<<t.second<<")";}
template<class T> inline bool MX(T &l,const T &r){return l<r?l=r,1:0;}
template<class T> inline bool MN(T &l,const T &r){return l>r?l=r,1:0;}
const ll MOD=1e9+7;

int ab[212345];

int main(){
  ios_base::sync_with_stdio(false);
  cout<<fixed<<setprecision(0);
  int n;
  cin>>n;
  vector<pii> ps(n);
  rep(i,n) cin>>ps[i].X>>ps[i].Y, --ps[i].X;
  vv<int> vals(n);
  for(pii p:ps) vals[p.X].pb(p.Y);
  vector<int> win;
  vector<int> usd(n);
  rrep(i,n)if(MX(usd[ps[i].X],1)) win.pb(ps[i].X);
  //cout<<win;

  int m;
  cin>>m;
  while(m--){
    int t;
    cin>>t;
    vector<int> abb(t);
    rep(i,t) cin>>abb[i], --abb[i];
    for(int x:abb) ab[x]=1;
    //cout<<abb;

    int ind=0;
    for(;ind<win.size() && ab[win[ind]]; ++ind);
    if(ind==win.size()){
      cout<<"0 0"<<endl;
    }else{
      int w=win[ind];
      cout<<w+1<<" ";
      ++ind;
      int val;
      for(;ind<win.size() && ab[win[ind]]; ++ind);
      if(ind==win.size()) val=vals[w][0];
      else val=*upper_bound(all(vals[w]),vals[win[ind]].back());
      cout<<val<<endl;
    }
    for(int x:abb) ab[x]=0;
  }
  return 0;
}
