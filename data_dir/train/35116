#include <iostream>
#include <utility>
#include <algorithm>
#include <cmath>
#include <algorithm>
#include <vector>
#include <cstring>
#include <math.h>
#include <map>
#include <vector>
#include <iomanip>
#include <set>
#include <deque>
#define use_fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define ret(n) return cout << n, 0
#define se(n) cout << setprecision(n) << fixed
#define ll long long
#define pb push_back
using namespace std;

const int N = 2e6 + 100, PI = 3.14159265359, M = 1e9 + 7;
typedef pair <ll, ll> pii;
ll a[N];
vector <ll> v, v1;
set <ll> s;
ll n, x, y;

int main() {
	use_fast;
	cin >> n;
	for(int i = 0; i < n; i++) {
		ll y = 0;
		cin >> y;
		if(y % 2 == 0) 
			v.pb(y);
		else
			v1.pb(y);
	}
	sort(v.begin(), v.end());
	sort(v1.begin(), v1.end());
	ll sum = 0;
	ll t = v.size();
	t -= min(v.size(), v1.size());
	for(int i = 0; i < t; i++) {
		sum += v[i];
	}
	t = v1.size();
	t -= min(v.size(), v1.size());
	for(int i = 0; i < t; i++) {
		sum += v1[i];
	}
	x = min(v1.size(), v.size());
	if(x == v1.size() && x == v.size()) {
		ret(sum);
	}
	else if(x == v1.size()) {
		sum -= v[v.size() - x - 1];
		ret(sum);
	}
	sum -= v1[v1.size() - x - 1];	
	ret(sum);
}
