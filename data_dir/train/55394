#include <bits/stdc++.h>
using namespace std;

const int MAX = 100000;
int c[MAX][2];
long long dp[MAX][2];
string s[MAX][2];

int main()
{
    ios::sync_with_stdio(false), cin.tie(nullptr);
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> c[i][1], dp[i][0] = dp[i][1] = -1;
    for (int i = 0; i < n; i++) {
        cin >> s[i][0];
        s[i][1] = s[i][0];
        reverse(s[i][1].begin(), s[i][1].end());
    }
    for (int p = 0; p <= 1; p++)
        dp[0][p] = c[0][p];
    for (int i = 1; i < n; i++)
        for (int p = 0; p <= 1; p++) {
            if (dp[i - 1][p] == -1)
                continue;
            for (int q = 0; q <= 1; q++) {
                if (s[i - 1][p] > s[i][q])
                    continue;
                if (dp[i][q] == -1 || dp[i - 1][p] + c[i][q] < dp[i][q])
                    dp[i][q] = dp[i - 1][p] + c[i][q];
            }
        }
    if (dp[n - 1][0] == -1 && dp[n - 1][1] == -1)
        cout << "-1\n";
    else if (dp[n - 1][0] == -1)
        cout << dp[n - 1][1] << '\n';
    else if (dp[n - 1][1] == -1)
        cout << dp[n - 1][0] << '\n';
    else
        cout << min(dp[n - 1][0], dp[n - 1][1]) << '\n';
}