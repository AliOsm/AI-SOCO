#include <bits/stdc++.h>
#include<string>
using namespace std;
        
    #define ll long long
    #define do double
    #define ff first
    #define ss second
    #define FOR(a,n) for(ll ii=0;ii<n;ii++){    cin>>a[ii];}
    #define pb push_back
    #define mp make_pair
    #define inf LONG_LONG_MAX
    #define mod  998244353
    #define FAST ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    #define N 100010    
ll d,x,y;
 
void extendedEuclid(ll A, ll B) 
{
    if(B == 0) 
    {
         d = A;
         x = 1;
         y = 0;
    }
    else 
    {
        extendedEuclid(B, A%B);
        int temp = x;
        x = y;
        y = temp - (A/B)*y;
    }
}
 
ll power(ll x,ll y, ll p) 
{ 
    ll res = 1; 
    x = x % p;
    while (y > 0) 
    {  // If y is odd, multiply x with result 
        if (y & 1) 
            res = (res*x) % p;
                    
        y = y>>1; 
        x = (x*x) % p;   
    } 
    return res; 
} 
 
ll IsPrime(ll n)
{
    if(n==0||n==1)
        return n;
    if(n%2==0)
        return (ll)2;
    if(n%3==0)
        return (ll)3;
    else
    {
        for(ll i=5;i*i<=n;i+=6)
        {
            if(n%i==0)
                return i;
            if(n%(i+2)==0)
                return (i+2);
        }
        return n;
    }
}
ll ans=0;
vector<vector<ll> > v(N);
vector<ll> vis(N,0),yes(N,0),par(N);
vector<ll> temp(N),f(N),g(N);
 
void dfs(ll n)
{
	vis[n]=1;
	for(ll i=0;i<v[n].size();i++)
	{
		if(!vis[v[n][i]])
		{
			par[v[n][i]]=n;
			dfs(v[n][i]);
		}
	}
	f[n]=yes[n];
	for(ll i=0;i<v[n].size();i++)
    {
        if(par[n]!=v[n][i])
            temp.pb(f[v[n][i]]);
    }
	sort(temp.rbegin(),temp.rend());
	if(temp.size()>0)
		f[n]+=temp[0];
	if(temp.size()>1)
		g[n]=f[n]+temp[1];
	ans=max(ans,max(f[n],g[n]));
	temp.clear();
 
}
 
int main()
{
   FAST;
   ll n,m,k,i,j;
   cin>>n;
   string s;
   cin>>s;
   vector<ll> ans(100000,0);
   for(i=0;i<n;i++)
   {
   		ll a,b;
   		cin>>a>>b;
   		k=s[i]-'0';
   	//	cout<<k<<endl;
   		for(j=0;j<b;j++)
   			ans[j]+=k;
   		ll c=0;
   		k=(k+1)%2;
   		for(j=b;j<10000;j++)
   		{
   			ans[j]+=k;
   			c++;
   			if(c==a)
   			{
   				k=(k+1)%2;
   				c=0;
   			}
   		}
   }
   ll an=0;
  // cout<<ans[0]<<" ";
   for(i=0;i<10000;i++)
   	an=max(an,ans[i]);
   cout<<an;
    
}