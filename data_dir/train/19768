#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll logx=30;
const ll N=2e5+5;
const ll M=3e5+5;
const ll mod= 998244353;
const ll INF=1e9+5;
const double PI = 3.14159265;

#define ints(n) scanf("%d",&n)
#define intp(n) printf("%d\n",n)
#define longs(n) scanf("%intd",&n)
#define longp(n) printf("%intd\n",n)

inline ll mul(ll a, ll b){ return (a * 1ll * b) % mod; }
inline ll sub(ll a, ll b){ ll c = a - b; if(c < 0) c += mod; return c; }
inline ll add(ll a, ll b){ ll c = a + b; if(c > mod) c -= mod; return c; }

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define ms(dp,val) memset(dp,val,sizeof(dp))
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
#define printclock cerr<<"Time : "<<1000*(ld)clock()/(ld)CLOCKS_PER_SEC<<"ms\n";
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1ll;x=(x*x)%m;}return ans%m;}

#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
    cerr << name << " : " << arg1 << '\n';
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}

vector<int> g[N];
int n,a[N],dis[N],vis[N],ans[N];

void BFS(int parity)
{
  queue<int> q;
  for(int i=1;i<=n;i++){vis[i]=0;}
  for(int i=1;i<=n;i++)
  {
    if(dis[i]==INF){continue;}
    q.push(i);
    vis[i]=1;
  }
  while(q.size())
  {
    int cur=q.front();q.pop();
    for(auto i:g[cur])
    {
      if(vis[i]){continue;}
      vis[i]=1;
      q.push(i);
      dis[i]=min(dis[i],dis[cur]+1);
    }
  }
  for(int i=1;i<=n;i++)
  {
    if(a[i]%2!=parity){continue;}
    ans[i]=dis[i];
  }
}

int main()
{
  fast;
  cin>>n;
  for(int i=1;i<=n;i++){cin>>a[i];}
  for(int i=1;i<=n;i++)
  {
    int cur=i;
    int nex=cur+a[cur];
    int prev=cur-a[cur];
    if(nex<=n){g[nex].pb(cur);}
    if(prev>=1){g[prev].pb(cur);}
  }
  for(int i=1;i<=n;i++)
  {
    if(a[i]&1){dis[i]=0;}
    else{dis[i]=INF;}
  }
  BFS(0);
  for(int i=1;i<=n;i++)
  {
    if(a[i]&1){dis[i]=INF;}
    else{dis[i]=0;}
  }
  BFS(1);
  for(int i=1;i<=n;i++)
  {
    if(ans[i]==INF){ans[i]=-1;}
    cout<<ans[i]<<" ";
  }
}