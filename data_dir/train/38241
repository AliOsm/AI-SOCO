#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=2e5+5;
ll a[M],t[M];
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n;
	cin>>n;
	for(ll i=1;i<=n;i++)
		cin>>a[i];
	for(ll i=1;i<=n;i++)
		cin>>t[i];
	vector<pair<ll,ll> > v;
	for(ll i=1;i<=n;i++)
		v.pb({a[i],i});
	sort(all(v));
	ll ans=0;
	ll c=0;
	ll rd=0;
	set<pair<ll,ll> > st;
	ll i=0;
	ll s=0;
	while(i<sz(v) || sz(st))
	{
		if(sz(st)==0)
		{
			ll j=i;
			s=v[i].ff;
			while(j<sz(v) && v[j].ff==v[i].ff)
			{
				st.insert({-t[v[j].ss],v[j].ss});
				c+=t[v[j].ss];
				j++;
			}
			i=j;
			rd=1;
		}
		else
		{
			ll j=i;
			auto X=*st.begin();
			while(j<sz(v) && v[j].ff==rd+s)
			{
				st.insert({-t[v[j].ss],v[j].ss});
				c+=t[v[j].ss];
				j++;
			}
			i=j;
			rd++;
		}
		auto it=st.begin();
		ans+=c+it->ff;
		c+=it->ff;
		st.erase(it);
	}
	cout<<ans<<"\n";
	return 0;
}