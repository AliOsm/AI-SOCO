#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstring>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <utility>
using namespace std;
#define REP(I,N) for (I=0;I<N;I++)
#define rREP(I,N) for (I=N-1;I>=0;I--)
#define rep(I,S,N) for (I=S;I<N;I++)
#define rrep(I,S,N) for (I=N-1;I>=S;I--)
#define FOR(I,S,N) for (I=S;I<=N;I++)
#define rFOR(I,S,N) for (I=N;I>=S;I--)
typedef unsigned long long ULL;
typedef long long LL;
const int INF=0x3f3f3f3f;
const LL INFF=0x3f3f3f3f3f3f3f3fll;
const LL M=1e9+7;
const LL maxn=5007;
const double eps=0.00000001;
LL gcd(LL a,LL b){return b?gcd(b,a%b):a;}
template<typename T>inline T abs(T a) {return a>0?a:-a;}
template<typename T>inline T powMM(T a,T b){T ret=1;for (;b;b>>=1ll,a*=a) ret=1ll*ret*a%M;return ret;}

#define x x_x
#define y y_y
int n,m,T;
int i,j;
char a[107][107];
int from[107][107];
bool lr,ud;
int x,y,xx,yy;
int ax[4]={0,0,1,-1};
int ay[4]={1,-1,0,0};
bool go(int i,int j,int dir){
	if (dir==0) puts("R");
	if (dir==1) puts("L");
	if (dir==2) puts("D");
	if (dir==3) puts("U");
	fflush(stdout);
	scanf("%d%d",&x,&y);
	if (a[x][y]=='F') exit(0);
	return x==i&&y==j;
}
#define U 3
#define D 2
#define L 1
#define R 0
void dfs(int x,int y){
	if (from[x][y]==233) return;
	dfs(x-ax[from[x][y]],y-ay[from[x][y]]);
//	printf("%d %d->%d\n",x,y,from[x][y]);
	if (from[x][y]>=2) go(x,y,from[x][y]^ud);
	if (from[x][y]<=1) go(x,y,from[x][y]^lr);
}
queue<pair<int,int> >Q;
int main(){
	scanf("%d%d",&n,&m);
	FOR(i,1,n) scanf("%s",a[i]+1);
	x=1;y=1;
	if (a[1][2]=='.'||a[1][2]=='F'){
		lr=go(x,y,R);
		if (!lr) go(x,y,L);
		while (a[x+1][y]!='.'&&a[x+1][y]!='F') go(x,y,R^lr);
		ud=go(x,y,D);
	}else if (a[2][1]=='.'||a[2][1]=='F'){
		ud=go(1,1,D);
		if (!ud) go(x,y,U);
		while (a[x][y+1]!='.'&&a[x][y+1]!='F') go(x,y,D^ud);
		lr=go(x,y,R);
	}
	Q.push(make_pair(x,y));
	memset(from,-1,sizeof(from));
	from[x][y]=233;
	while (Q.size()){
		x=Q.front().first;y=Q.front().second;Q.pop();
		if (a[x][y]=='F') break;
		REP(i,4){
			xx=x+ax[i];
			yy=y+ay[i];
			if ((a[xx][yy]=='.'||a[xx][yy]=='F')&&from[xx][yy]==-1){
				from[xx][yy]=i;
				Q.push(make_pair(xx,yy));
			}
		}
	}
//	FOR(i,1,n){
//		FOR(j,1,m) printf("%3d",from[i][j]);
//		puts("");
//	}
	dfs(x,y);
}
/*
10 10
..*.*.*..*
F*.**..*.*
**.***.**.
*.***...*.
.*..*.**.*
********.*
*..**..*.*
.*..**.*.*
*****....*
...**.**..


0 1
*/