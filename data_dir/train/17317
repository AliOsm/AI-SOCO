#include <bits/stdc++.h>
#define ll long long
#define rw freopen("input.txt","r",stdin),freopen("output.txt","w",stdout);
#define pb push_back
#define F first
#define S second
#define pf push_front
#define lp(i,a,b) for (int i=a;i<=(int)b;++i)
#define lp2(i,a,b) for (int i=a;i>=b;--i)
#define f(x) return cout<<x<<"\n",0
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pil pair<int,ll>
#define pli pair<ll,int>
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
#define mod 1000000007
#define p(x) cout<<#x<<" = { "<<x<<" } \n"
#define vi vector<int>
#define vl vector<ll>
#define FAST ios::sync_with_stdio(0),ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define clr(c) memset(c,-1,sizeof(c));
using namespace std;
const int N=(int)2e5+10;
vector<pii>v[N];
vi ans;
int c=INT_MAX,res;
int dfs(int node,int par)
{
    int res2=0;
    for (auto u:v[node])
    {
        if (u.F!=par)
            res2+=(dfs(u.F,node)+(u.S==1));
    }
    return res2;
}
void solve(int node,int par,int cost)
{
    if (c>res-cost)
    {
        c=res-cost;
        ans.clear();
    }
    if (c==res-cost)
        ans.pb(node);
    for (auto u:v[node])
        if (u.F!=par)
            solve(u.F,node,cost+u.S);
}
int main()
{
#ifdef ONLINE_JUDGE
    FAST;
#endif
    int n;
    cin>>n;
    lp(i,1,n-1)
    {
        int x,y;
        cin>>x>>y;
        v[x].pb({y,-1});
        v[y].pb({x,1});
    }
    res=dfs(1,0);
    solve(1,0,0);
    cout<<c<<"\n";
    sort(all(ans));
    for (auto u:ans)
        cout<<u<<" ";
    return 0;
}