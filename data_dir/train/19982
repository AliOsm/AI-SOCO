//  Copyright Â© 2020 Diego Garcia Rodriguez del Campo. All rights reserved.
#include<bits/stdc++.h>
#define MAX 200005
#define optimiza_io cin.tie(0); ios_base::sync_with_stdio(0);
using namespace std;
typedef long long i64;

int T;


bool can( int l , int r , int p , int li , int ld , bool f ) {
    if( li == ld && l ) return 0;
    if( li == ld && r ) return 0;
    if( li == ld ) return 1;
    int N = ( ld - li );
    if( f ) {
        int to = min( l , p - li );
        l -= to;
        p -= to;
        if( p != li ) {
            return r <= ( ld - p );
        }
        int mn = min( l / N , r / N );
        l -= mn * N;
        r -= mn * N;
        int t = min( l , r );
        l -= t;
        r -= t;
        if( l ) return false;
        if( r > N ) return false;
        return true;
    } else {
        int to = min( r , ld - p );
        r -= to;
        p += to;
        if( p != ld ) {
            return l <= ( p - li );
        }
        int mn = min( l / N , r / N );
        l -= mn * N;
        r -= mn * N;        
        int t = min( l , r );
        l -= t;
        r -= t;
        if( r ) return false;
        if( l > N ) return false;
        return true;       
    }
}


string solve() {
    int a, b, c, d, x, y, x1, y1, x2, y2;
    cin >> a >> b >> c >> d;
    cin >> x >> y >> x1 >> y1 >> x2 >> y2;
    if( ! can( a , b , x , x1 , x2 , 0 ) && ! can( a , b , x , x1 , x2 , 1 ) ) 
        return "No\n";
    if( ! can( c , d , y , y1 , y2 , 0 ) && ! can( c , d , y , y1 , y2 , 1 ) ) 
        return "No\n";
    return "Yes\n";
}

int main()
{
    optimiza_io
    cin >> T;
    while( T -- ) 
        cout << solve();
    return 0;
}

// CHECAR LIMITES 