/*
ID: Tariqul
PROG:
LANG: C++
*/

#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#define fo(i,j,n) for(i=j;i<n;++i)
#define Fo(i,j,n) for(i=n-1;i>=j;--i)
#define foo(i,j,v) fo(i,j,sz(v))
#define Foo(i,j,v) Fo(i,j,sz(v))
#define li(v) v.begin(),v.end()
#define sz(v) ((int)v.size())
#define CLR(a,v) memset((a),(v),sizeof(a))
#define inf 1000000001
typedef long long Long;
//typedef __int64 Long;
#define pi (2*acos(0))
#define eps 1e-9

#define two(X) (1<<(X))
#define twoL(X) (((Long)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)

char BUFFER[100000 + 5];
bool readn(int &n)	{ return scanf("%d",&n) == 1; }
bool readl(Long &n)	{ return scanf("%I64d",&n) == 1; }
bool readd(double &n){ return scanf("%lf",&n) == 1; }
bool reads(string &s){ s = ""; int n = scanf("%s",BUFFER); if(n == 1)s = BUFFER; return n == 1; }
bool readln(string &s){ char *valid = gets(BUFFER); if(valid)s = BUFFER; return ((bool)valid); }

struct xx
{
    Long L,R;
    int id;
    xx(){}
    xx(Long L_, Long R_, int id_)
    {
        L = L_;
        R = R_;
        id = id_;
    }
};

bool operator<(const xx &a, const xx &b)
{
    if(a.R != b.R)return a.R < b.R;
    if(a.L != b.L)return a.L < b.L;
    return a.id < b.id;
}

vector<pair<Long,int> > br;
vector<xx> sg;
vector<Long> a,b;
set<pair<Long,int> > st;
vector<int> ans;
int main()
{
	#ifdef localhost
	freopen("/home/tariqul/APC/Contest/input.txt","r",stdin);
	//freopen("/home/tariqul/APC/Contest/output.txt","w",stdout);
	#endif
    int i,j,n,m;
    cin >> n >> m; a.resize(n); b.resize(n); sg.resize(n-1); br.resize(m);
    fo(i,0,n){ cin >> a[i] >> b[i]; }
    foo(i,0,sg){ sg[i].L = a[i+1] - b[i]; sg[i].R = b[i+1] - a[i]; sg[i].id = i; } sort(li(sg));
    fo(i,0,m){ cin >> br[i].first; br[i].second = i; } sort(li(br));
    st.clear(); ans.resize(sz(sg)); j = 0;
    set<pair<Long,int> >::iterator p;
    foo(i,0,sg)
    {
        while(j < m && br[j].first <= sg[i].R)st.insert(br[j++]);
        p = st.lower_bound(make_pair(sg[i].L,-1));
        if(p == st.end())
        {
            cout << "No" << endl;
            return 0;
        }
        ans[sg[i].id] = p->second;
        st.erase(p);
    }
    cout << "Yes" << endl;
    foo(i,0,ans)
    {
        if(i > 0)cout << " ";
        cout << ans[i] + 1;
    }
    cout << endl;

	return 0;
}
