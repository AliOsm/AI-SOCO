/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */


#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define int long long

using namespace std;

class ESpecialElements {
public:
	void solve(std::istream& in, std::ostream& out) {
        int n; in >> n;
        int arr[n];
        for(int i = 0; i < n; ++i) in >> arr[i];
        unordered_set<int> Set, Avail;
        for(int x: arr) Set.insert(x);
        for(int i = 0; i < n; ++i) {
            int sum = arr[i];
            for(int j = i+1; j < n; ++j) {
                sum += arr[j];
                if(Set.find(sum) != Set.end()) Avail.insert(sum);
            }
        }
        int res = 0;
        for(int x: arr) if(Avail.find(x) != Avail.end()) ++res;
        out << res << '\n';
	}
};


int32_t main() {
	ESpecialElements solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	int n;
in >> n;
for(int i = 0; i < n; ++i) {
	solver.solve(in, out);
}

	return 0;
}
