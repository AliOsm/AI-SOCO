//marico el que lo lea
#include <cstdio>
#include <iostream>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
using namespace std;

#define FOR(i,f,t) for(int i=f; i<(int)t; i++)
#define FORR(i,f,t) for(int i=f; i>(int)t; i--)
#define pb push_back
#define ms(obj, val) memset(obj, val, sizeof(obj))
#define ms2(obj, val, sz) memset(obj, val, sizeof(obj[0])*sz)
#define ri(x) scanf("%d",&x)
#define rl(x) scanf("%lld",&x)
#define rii(x,y) ri(x),ri(y)

typedef long long ll;
typedef vector<int> vi;

const ll MOD = 1e9+7;
const int MAXD = 460250;
int A, B, K, T;
int dp[105][MAXD], pref[105][MAXD];

int main(){
	rii(A,B); rii(K,T);
	dp[0][A-B + MAXD/2] = 1;
	FOR(d,1,MAXD) pref[0][d] = (dp[0][d] + pref[0][d-1])%MOD;
	FOR(t,1,T+1){
		FOR(i,0,2*K) dp[t][2*K] = (dp[t][2*K] + (i+1)*(dp[t-1][i]+dp[t-1][4*K-i]))%MOD;
		dp[t][2*K] = ( dp[t][2*K] + (2*K+1)*dp[t-1][2*K] ) %MOD;
		FOR(d,2*K+1, MAXD-2*K){
			dp[t][d] = (0LL + dp[t][d-1] - pref[t-1][d-1] + (d-2*K-2>=0?pref[t-1][d-2*K-2]:0) + pref[t-1][d+2*K] - pref[t-1][d-1])%MOD;
			dp[t][d] = (0LL + dp[t][d] + MOD)%MOD;
		}
		pref[t][0] = dp[t][0]; 
		FOR(d,1,MAXD) pref[t][d] = (0LL + dp[t][d] + pref[t][d-1])%MOD;
	}
	ll ans = 0;
	FOR(i,MAXD/2+1,MAXD) ans = (ans+dp[T][i])%MOD;
	printf("%lld\n",ans);
}
