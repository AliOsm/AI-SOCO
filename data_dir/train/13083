#include <bits/stdc++.h>

using namespace std;

int n, m, k, x, y, ct;
char ch[15][15][15];
const int dx[9]={0, 1, -1, 0, 0}, dy[9]={0, 0, 0, 1, -1};
map <pair <int, pair <int, int> >, int > used;

void dfs(int k, int i, int j)
{
    if (ch[k][i][j]!='.')
        return;
    ct++;
    used[{i, {j , k}}]=1;
    for (int h=1;h<=4;h++)
    {
        if (i+dx[h]>=1 && i+dx[h]<=n && j+dy[h]>=1 && j+dy[h]<=m)
        {
            if (!used[{i+dx[h], {j+dy[h], k} }])
                dfs(k, i+dx[h], j+dy[h]);
        }
    }
    if (!used[{i, {j, k+1} }])
        dfs(k+1, i, j);
    if (!used[{i, {j, k-1} }])
        dfs(k-1, i, j);
}

main()
{
    cin >> k >> n >> m;
    for (int i=1;i<=k;i++)
    {
        for (int j=1;j<=n;j++)
        {
            for (int u=1;u<=m;u++)
            {
                cin >> ch[i][j][u];
            }
        }
    }
    cin >> x >> y;
    dfs(1, x, y);
    cout << ct;
}
