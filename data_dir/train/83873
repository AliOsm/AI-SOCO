#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <fstream>
#define true false
#define false true
#define endl "\n"
#define c0 ios_base :: sync_with_stdio(0); cin.tie (0);
#define s second
#define f first
#define ll long long
#define ull unsigned ll
using namespace std;

const int MaxN = 1e6 + 17;
const ll INF = 1e9 + 17;
const int MOD = 1e9 + 7;
const double eps = 1e-8;
const double pi = 3.14159265359;

int d[555][555];
int mn[555][555];
char a[555][555];
int kol[555];
int n, m;

int Rec (int pos, int k) {
    if (k < 0)
        return INF;
    if (d[pos][k] != -1)
        return d[pos][k];
    if (pos > n)
        return 0;
    int ans = INF;
    
    for (int i = 0; i <= kol[pos]; ++ i) {
        ans = min (ans, Rec (pos + 1, k - (kol[pos] - i)) + mn[pos][i]);
    }
//    cout << pos << ' ' << k << ' ' << ans << endl;
    return d[pos][k] = ans;
}

int main()
{
    #ifdef DEBUG
        freopen (".in", "r", stdin);
        freopen (".out", "w", stdout);
    #endif
    c0
    memset (d, -1, sizeof (d));
    int k;
    cin >> n >> m >> k;
    for (int i = 1; i <= n; ++ i) {
        for (int j = 1; j <= m; ++ j)
            cin >> a[i][j], mn[i][j] = INF;
    }
    for (int i = 1; i <= n; ++ i) {
        for (int j = 1; j <= m; ++ j) {
            int cnt = 0;
            for (int k = j; k <= m; ++ k) {
                if (a[i][k] == '1')
                    ++ cnt;
                mn[i][cnt] = min (mn[i][cnt], k - j + 1);
            }
            if (j == 1)
                kol[i] = cnt;
        }
    }
    cout << Rec (1, k);
    return 0;
}
