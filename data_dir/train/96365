using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (int i=a;i<b;i++)
#define FORE(i,a,b) for (int i=a;i<=b;i++)
#define FORD(i,a,b) for (int i=a;i>=b; i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

int n,m,cur[100000+10],ans,u,v,least[100000+10];
vector<int> a[100000+10];
bool f[100000+10];

void dfs(int u, int par){
    vector<int>::iterator it;
    for(it=a[u].BG; it!=a[u].ED; it++)
    if (*it!=par){
            least[u]=1;
        if (cur[u] && cur[*it]) cur[*it]+=cur[u];
        dfs(*it,u);
    }
}

void dfs2(int u, int par){
    vector<int>::iterator it;
    for(it=a[u].BG; it!=a[u].ED; it++)
    if (*it!=par){
        if (f[u]==false) f[*it]=false;
        dfs2(*it,u);
    }
}

int main(){
 //   freopen("codeforces.inp", "r", stdin);
 //   freopen(".out", "w", stdout);
    cin >> n >> m;
    FORE(i,1,n) cin >> cur[i];

    FOR(i,1,n){
        cin >> u >> v;
        a[u].PB(v);
        a[v].PB(u);
    }
    dfs(1,0);

    memset(f,true,sizeof(f));
    FORE(i,2,n)
    if (cur[i]>m) f[i]=false;
    dfs2(1,0);

    FORE(i,2,n)
    if (least[i]==0) ans+=f[i];
    cout << ans;
}
