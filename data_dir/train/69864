#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

ll w[100005], comp[100005][5][5], dp[100005][5], n;
vector<string> vs[5];

ll solve(ll pos, ll rev){
	if(pos == n-1) return 0;
	if(dp[pos][rev] != -1) return dp[pos][rev];
	ll res = 1e18;
	if(comp[pos][rev][0])
		res = min(res, solve(pos+1, 0));
	if(comp[pos][rev][1])
		res = min(res, solve(pos+1, 1) + w[pos+1]);
	return dp[pos][rev] = res;
}

int main(){
	cout.sync_with_stdio(false);
	cin.tie(0);
	memset(dp, -1, sizeof dp);
	cin >> n;
	for(ll i = 0; i < n; i++)
		cin >> w[i];
	for(ll i = 0; i < n; i++){
		string s; cin >> s;
		vs[0].push_back(s);
		reverse(s.begin(), s.end());
		vs[1].push_back(s);
	}

	for(ll i = 0; i < n-1; i++)
		for(ll j = 0; j < 2; j++)
			for(ll k = 0; k < 2; k++)
				comp[i][j][k] = (vs[j][i] <= vs[k][i+1]);
	ll esq = solve(0,0);
	ll dir = solve(0, 1) + w[0];
	ll res = min(esq, dir);
	if(res == 1e18)
		cout << -1 << endl;
	else
		cout << res << endl;
	return 0;
}