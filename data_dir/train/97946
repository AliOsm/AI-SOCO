#include <iostream>
#include <set>
#include <algorithm>
#include <unordered_map>
#include <vector>
#include <map>
#include <assert.h>

#define N 1000005
#define LL long long int
using namespace std;

vector<int> g[N],d[N];
int mxdep[N],ans[N],sol[N],reans[N],dep[N];

void getdep(int node,int prnt) {
  for (auto it:g[node]) if (it!=prnt) {
    dep[it]=dep[node]+1;
    getdep(it,node);
  }
  mxdep[node]=dep[node];
  for (auto it:g[node]) {
    mxdep[node]=max(mxdep[node],mxdep[it]);
  }
}

pair<int,int> solve(int node,int prnt,vector<int> &v) {
  int mx=-1,i,m,n,trued;
  for (auto it:g[node]) if (it!=prnt) {
    if (mx==-1) mx=it;
    if (mxdep[mx]<mxdep[it]) mx=it;
  }
  if (mx==-1) {
    v.push_back(1);
    sol[node]=1;
    ans[node]=0;
    //n=v.size();
    //cout << "node " << node << " : ";
    //for (i=0;i<n;i++) cout << v[i] << ' ';
    //cout << '\n';
    return make_pair(1,0);
  }
  auto it=solve(mx,node,v);
  v.push_back(1);
  sol[node]=1;
  ans[node]=0;
  if (sol[node]<it.first) {
    sol[node]=it.first;
    ans[node]=it.second+dep[mx]-dep[node];
  }
  n=v.size();
  for (auto it:g[node]) {
    if (it==prnt || it==mx) continue;
    vector<int> t;
    solve(it,node,t);
    m=t.size();
    for (i=0;i<m;i++) {
      trued=m-i-1+dep[it];
      v[n-trued-1+dep[node]]+=t[i];
      if (sol[node]<v[n-trued-1+dep[node]]) {
        sol[node]=v[n-trued-1+dep[node]];
        ans[node]=trued-dep[node];
      }
      else if (sol[node]==v[n-trued-1+dep[node]])
        ans[node]=min(ans[node],trued-dep[node]);
    }
  }
  //cout << "node " << node << " : ";
  //for (i=0;i<n;i++) cout << v[i] << ' ';
  //cout << "sol : " << sol[node];
  //cout << '\n';
  return make_pair(sol[node],ans[node]);
}

int main() {
  int i,n,u,v,j,k;
  scanf("%d",&n);
  for (i=0;i<n-1;i++) {
    scanf("%d %d",&u,&v);
    g[u-1].push_back(v-1);
    g[v-1].push_back(u-1);
  }
  dep[0]=0;
  getdep(0,0);
  //cout << "dep : ";
  //for (i=0;i<n;i++) cout << dep[i] << "," << i << " ";
  //cout << '\n';
  //for (i=0;i<n;i++) cout << mxdep[i] << "," << i << " ";
  //cout << '\n';
  vector<int> vv;
  solve(0,0,vv);
  for (i=0;i<n;i++) printf("%d\n",ans[i]);
  return 0;
}
