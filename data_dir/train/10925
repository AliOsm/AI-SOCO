#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <ctime>
#include <cmath>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <cstring>
#include <iterator>
#include <fstream>
#include <set>
using namespace std;

#define pb push_back
#define rs resize
#define mp make_pair
#define inf 1e9
#define pi 3.1415926535897932384626433832795
#define sz(a) (int)(a).size()
#define Sort(a) sort((a).begin(), (a).end())
#define Reverse(a) reverse((a).begin(), (a).end())
#define sf scanf
#define pf printf
#define ms(a, x) memset((a), (x), sizeof(a))
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef vector <vvi> vvvi;
typedef vector <vvvi> vvvvi;
typedef vector <bool> vb;
typedef vector <vb> vvb;
typedef vector <vvb> vvvb;
typedef vector <vvvb> vvvvb;
typedef long long ll;
typedef vector <ll> vl;
typedef vector <vl> vvl;
typedef vector <vvl> vvvl;
typedef vector <vvvl> vvvvl;
typedef pair <int, int> ii;
typedef vector <ii> vii;
typedef vector <vii> vvii;
typedef pair <int, ll> il;
typedef vector <il> vil;
typedef vector <vil> vvil;
typedef pair <ll, int> li;
typedef vector <li> vli;
typedef vector <vli> vvli;
typedef set <int> si;
typedef set <li> sli;
typedef set <il> sil;
typedef vector <string> vs;
typedef vector <vs> vvs;
typedef vector <vvs> vvvs;
typedef map <string, int> msi;
typedef map <char, int> mci;
typedef pair <ll, ll> pll;

void dfs(int v, vvi &g, vb &u) {
	u[v] = 1;
	for (int i = 0; i < sz(g[v]); ++i) {
		if (!u[g[v][i]]) {
			dfs(g[v][i], g, u);
		}
	}
}

int main() {
	int n;
	cin >> n;
	vii a;
	vvi g;
	while (n-- > 0) {
		int t;
		cin >> t;
		if (t == 1) {
			int x, y;
			cin >> x >> y;
			a.pb({x, y});
			g.pb(vi(0));
			for (int i = 0; i < sz(a) - 1; ++i) {
				if (a[i].first < a.back().second && a.back().second < a[i].second || a[i].first < a.back().first && a.back().first < a[i].second) {
					g[sz(a) - 1].pb(i);
				}
			}
			for (int i = 0; i < sz(a) - 1; ++i) {
				if (a.back().first < a[i].first && a[i].first < a.back().second || a.back().first < a[i].second && a[i].second < a.back().second) {
					g[i].pb(sz(a) - 1);
				}
			}
		}
		else {
			int x, y;
			cin >> x >> y;
			--x, --y;
			vb u(sz(a), 0);
			dfs(x, g, u);
			if (u[y])
				cout << "YES" << endl;
			else 
				cout << "NO" << endl;
		}
	}
}