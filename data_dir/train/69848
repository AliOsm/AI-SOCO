//B
#include <iostream>
#include <vector>

using namespace std;

const long inf = 200000;

long n,i,j,a,k,*l;
//queue<long> *q;
vector<long> *v;

int search (long left, long right, long key)
{
	long midd = 0;
	while (1)
	{
		midd = (left + right) / 2;
		
		if (key < l[midd])       // если искомое меньше значения в ячейке
			left = midd + 1;// - 1;      // смещаем лувую границу поиска
		else
		if (key > l[midd])  // если искомое больше значения в ячейке
		{
			if (midd == 0 || key < l[midd-1])
				return midd;
			else
				right = midd - 1;	   // смещаем правую границу поиска
		}
		else                       // иначе (значения равны)
			return midd;           // функция возвращает индекс ячейки
 
		if (left > right)          // если границы сомкнулись 
			return right+1;
	}
}

int main()
{
	cin >> n;

	v = new vector<long> [n];
	l = new long [n];
	
	k=-1;
	for (i=0;i<n;++i)
	{
		cin >> a;
		
		j = search(0, k, a);
		if (j > k)
			++k;

		v[j].push_back(a);
		l[j] = a;
	}

	for (i=0;i<=k;++i)
	{
		for (vector<long>::iterator it = v[i].begin(); it != v[i].end(); ++it)
			cout << *it << " ";

		cout << endl;
	}


	delete [] v,l;

	getchar();getchar();
	return 0;
}
