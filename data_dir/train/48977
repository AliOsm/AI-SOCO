#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
#include <unordered_map>
#include <unordered_set>

using namespace std;

#define V vector
#define MP make_pair
#define all(v)  ((v).begin()), ((v).end())
#define allr(v) ((v).rbegin()), ((v).rend())
#define clr(v, d) memset(v, d, sizeof(v))
#define sf(x) scanf("%d", &x)
#define sf2(x, y) scanf("%d %d", &x, &y)
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define sfll(x) scanf("%I64d", &x)
#define sfll2(x, y) scanf("%I64d %I64d", &x, &y)
#define sfll3(x, y, z) scanf("%I64d %I64d %I64d", &x, &y, &z)
typedef long long ll;
int dx[]{1, -1, 0, 0, 1, -1, 1, -1};
int dy[]{0, 0, 1, -1, 1, -1, -1, 1};
ll suf(ll x) { return (x * (x + 1)) / 2; }
//V<V<pair<int, int> > > adj;
const ll mod = 1e9 + 7, oo = 1e9;
int n, m, u, v, z, k;
int main()
{
	string s;
	while (cin >> n){
		ll l = 0, r = 0;
		V<int>a(n), b(n);
		for (int i = 0; i < n; i++){
			cin >> a[i] >> b[i];
			l += a[i], r += b[i];
		}
		int col = -1, ans = abs(l - r) , ansl = 0;
		for (int i = 0; i < n; i++){
			l -= a[i], r -= b[i];
			l += b[i], r += a[i];
			if (abs(l - r) > ans){
				if (ansl <= abs(l - r)){
					ansl = abs(l - r), col = i;
				}
			}

			l -= b[i], r -= a[i];
			l += a[i], r += b[i];
		}
		cout << col + 1 << endl;
	}
	return 0;
}