#include<bits/stdc++.h>
#include <regex>
#include<ext/numeric>
#include<ext/hash_map>
using namespace std;
using namespace __gnu_cxx;

#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v)  (int)v.size()
#define WHITE -1
#define GREY   0
#define BLACK  1
#define CLR(a,v) memset(a,v,sizeof a)
#define PC(x) __builtin_popcount(x)
#define PCLL(x) __builtin_popcountll(x)
#define MP make_pair

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<ll> vll;
//typedef unsigned int ui;

typedef complex<double> point;
#define X real()
#define Y imag()
#define vec(a,b) ((b)-(a))
#define dot(a,b) ((conj(a)*(b)).real())
#define cross(a,b) ((conj(a)*(b)).imag())
#define colliner pointOnLine
#define same(a,b) (lengthSqr(vec(a,b))<EPS)
#define lengthSqr(v) (dot(v,v))

const double PI = acos(-1.0);

int dx[] = { 0, -1, 0, 1, -1, -1, 1, 1 };
int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };

int DX[] = { 1, 1, -1, -1, 2, 2, -2, -2 };
int DY[] = { 2, -2, 2, -2, 1, -1, 1, -1 };

const int MAX = 105, MOD = 1e9 + 7, oo = 2e9, LOGMAX = 20, MAXD = 2e5 + 5;
const ll OO = 1ll << 60;
const double EPS = 1e-9;

int n, k, a[MAX], b[MAX], memo[MAX][MAXD];

int solve(int i, int diff) {
	if (i == n)
		return diff == 0 ? 0 : -oo;
	int &ret = memo[i][diff];
	if (~ret)
		return ret;
	ret = max(solve(i + 1, diff),
			solve(i + 1, ((diff + k * b[i] - a[i]) + MAXD) % MAXD) + a[i]);
	return ret;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
//	freopen("IN.in", "r", stdin);
//	freopen("out.txt", "w", stdout);
#endif
	cin >> n >> k;
	for (int i = 0; i < n; ++i)
		cin >> a[i];
	for (int i = 0; i < n; ++i)
		cin >> b[i];
	CLR(memo, -1);
	int ans = solve(0, 0);
	if (ans <= 0)
		return puts("-1");
	printf("%d\n", ans);
}
