#include <bits/stdc++.h>

using namespace std;

const int mod = 1e9 + 7;

int add() { return 0; }
template<typename... M> int add(int a, M... b) {
  int x = add(b...);
  return a + x - mod * (a + x >= mod);
}

int mul() { return 1; }
template<typename... M> int mul(int a, M... b) {
  return int(1ll * a * mul(b...) % mod);
}

int pwr(int a, long long x) {
  return (x ? mul(pwr(mul(a, a), x >> 1), (x & 1 ? a : 1)) : 1);
}

int dvd(int a, int b) {
  return mul(a, pwr(b, mod - 2));
}

int sub(int a, int b) {
  return a - b + mod * (a < b);
}

void inc(int& a, int b) {
  a = add(a, b);
}

void dec(int& a, int b) {
  a = sub(a, b);
}

int solve(int o, int z) {
  return mul(pwr(2, o) - 1, pwr(2, z));
}

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0), cout.tie(0);

  int n, q;
  cin >> n >> q;
  vector<int> a(n);
  vector<int> pr(n + 1);
  for (int i = 0; i < n; ++i) {
    char c;
    cin >> c;
    a[i] = c - '0';
    pr[i + 1] = pr[i] + a[i];
  }
  while (q--) {
    int l, r;
    cin >> l >> r;
    int kek = pr[r] - pr[l - 1];
    cout << solve(kek, r - l + 1 - kek) << '\n';
  }

  return 0;
}
