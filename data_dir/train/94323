#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define size(x) (int) x.size()
#define sqr(x) ((x) * (x))

const int maxn = 3000005;
const int logn = 18;
const int inf = (int) 1e9 + 5;
const long long mod = (long long) 1e9 + 7;
const long long base = 2204234849;
const long long l_inf = (long long) 4e18;
const long double pi = acos(-1.0);
const long double eps = 1e-12;

int n, m;
int cnt[maxn];
long long sum[maxn];

inline void update(int i, long long x) {
	sum[i] += x;
}

inline long long get(int i) {
	return sum[i];
}

int main() {
	ios_base::sync_with_stdio(false);
	cout.precision(20);
	cout << fixed;
	srand(566);

	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		int val;
		scanf("%d", &val);
		cnt[val]++;
	}

    scanf("%d", &m);
	for (int i = 1; i < maxn; i++)
		for (int j = 1; i * j < maxn; j++)
			if (cnt[i] * (cnt[j] - (i == j)) != 0)
				update(i * j, cnt[i] * (cnt[j] - (i == j)));
	for (int i = 1; i < maxn; i++)
		sum[i] += sum[i - 1];

	for (int i = 0; i < m; i++) {
		int p;
		scanf("%d", &p);
		printf("%I64d\n", 1ll * n * (n - 1) - get(p - 1));
	}

	return 0;
}
