#include <iostream>
#include <algorithm>
#include <cstdio>

using namespace std;

typedef long long ll;

ll n, dp[65][105], ans = 1e18 + 1, p[1005];
string s;

int to_int(string s) {
    int rs = 0;
    for (int i = 0; i < s.size(); i++) {
        rs *= 10;
        rs += s[i] - '0';
    }
    return rs;
}

int main() {
    cin >> n;
    cin >> s;
    int ct = 0;
    for (ll i = 1; i <= 1e18; i *= n, ct++) {
        if (i > 1e18)
            break;
        if (i < 0)
            break;
        p[ct] = i;
        //cout << p[j] << " ";
    }
    for (int i = 0; i < s.size(); i++) {
        for (int j = 0; j <= ct; j++) {
            dp[i][j] = 1e18 + 1;
        }
    }
    dp[s.size()][0] = 0;
    for (int i = s.size(); i >= 0; i--) {
        for (int j = 1; j <= min(9, i); j++) {
            ll x = to_int(s.substr(i - j, j));
            if (s[i - j] == '0' && j > 1)
                continue;
            if (x >= n)
                break;
            for (int k = 0; k < min(ct, (int)s.size()); k++) {
                if (x * p[k] > 1e18 || x * p[k] < 0)
                    continue;
                dp[i - j][k + 1] = min(dp[i - j][k + 1], dp[i][k] + x * p[k]);
            }
        }
    }
    for (int i = 0; i <= min(ct, (int)s.size()); i++) {
        //cout << dp[0][i] << " ";
        ans = min(dp[0][i], ans);
    }
    cout << ans;
}
