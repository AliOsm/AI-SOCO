#include <iostream>
#include <cstring>
#include <cassert>
#include <vector>
#define pb push_back

using namespace std;

const int N = (int) 2e5 + 10;
int n;
int a[N];
vector<int> g[N], d[N];
int cnt[N];
int ans[N];

void dfs(int v, int par = 0, int depth = 0) {
  for (auto x : d[a[v]]) ++cnt[x];
  if (v > 1) {
    vector<int> vars;
    for (auto x : d[a[v]]) vars.pb(x);
    for (auto x : d[a[par]]) vars.pb(x);
    for (auto x : vars) {
      if (cnt[x] >= depth)
        ans[v] = max(ans[v], x);
    }
  }
  for (auto to : g[v]) {
    if (to == par) continue;
    dfs(to, v, depth + 1);
  }
  for (auto x : d[a[v]]) --cnt[x];
}
int main() {
  #ifdef LOCAL
  freopen("in.txt", "r", stdin);
  #endif

  for (int i = 1; i < N; i++)
    for (int j = i; j < N; j += i)
      d[j].pb(i);

  cin >> n;
  for(int i = 1; i <= n; i++) cin >> a[i];
  for (int i = 1; i <= n; i++) {
    int x, y; cin >> x >> y;
    g[x].pb(y);
    g[y].pb(x);
  }
  ans[1]=a[1];
  dfs(1);
  for (int i = 1; i <= n; i++)
    cout << ans[i] << '\n';
  return 0;
}
