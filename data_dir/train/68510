#include <bits/stdc++.h>

#define forsn(i,s,n) for(tint i=(s);i<(tint)(n); i++)
#define forn(i,n) forsn(i,0,n)
#define dforn(i,n) for(tint i = tint(n)-1; i >= 0; i--)
#define debug(x) cout << #x << " = "  << x << endl

using namespace std;

typedef long long tint;

void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		tint p = tint(v.size());
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint dfs (tint actual, vector<vector<tint> > &ladj, vector<tint> &hijos, tint padre)
{
	for (const auto &vecino : ladj[actual])
		if (vecino != padre)
			hijos[actual] += dfs(vecino,ladj,hijos,actual);
	return hijos[actual];
}

int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	tint n;
	while (cin >> n)
	{
		vector<vector<tint> > ladj (n);
		forn(i,n-1)
		{
			tint x,y;
			cin >> x >> y;
			x--;
			y--;
			ladj[x].push_back(y);
			ladj[y].push_back(x);
		}
		
		vector<tint> hijos (n,1);
		dfs(0,ladj,hijos,-1);
		
		tint ans = -1;
		if (n%2 == 0)
			forn(i,n)
				ans += ((hijos[i]%2) == 0);
			
		cout << ans << "\n";
		
	}
	
	
	return 0;
}




