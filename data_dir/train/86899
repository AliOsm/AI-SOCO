//  Copyright Â© 2019 Diego Garcia Rodriguez del Campo. All rights reserved.
#include<bits/stdc++.h>
#define MAX 200005
#define INF 1e9
#define optimiza_io cin.tie(0); ios_base::sync_with_stdio(0);
using namespace std;
typedef long long i64;

i64 N, rnd, men, gans;
i64 a[MAX];
vector < i64 > q[65];
vector < i64 > ady[MAX];
bool vis[MAX];

void dfs( i64 x , i64 d , i64 ant , i64 u ) {
    if( x == u && d ) {
        men = min( men , d );
        return;
    }
    if( d >= gans )
        return;
    if( vis[x] )
        return;
    vis[x] = 1;
    for( auto v : ady[x] ) 
        if( v != ant )
            dfs( v , d + 1 , x , u );
    vis[x] = 0;
}

i64 solve( i64 x ) {
    men = INF;
    dfs( x , 0 , -1 , x );
    return men;
}

int main()
{
    optimiza_io
    cin >> N;
    for( i64 i = 1; i <= N; i ++ ) {
        cin >> a[i];
        for( i64 j = 0; j <= 60; j ++ ) 
            if( a[i] & ( 1LL << j ) ) {
                q[j].push_back( i );
                if( q[j].size() == 3 ) {
                    cout << "3\n";
                    exit( 0 );
                }
            }
    }
    for( i64 j = 0; j <= 60; j ++ )
        if( q[j].size() == 2 ) {
            i64 a = q[j][0];
            i64 b = q[j][1];
            ady[a].push_back( b );
            ady[b].push_back( a );
        }
    gans = INF;
    for( i64 i = 1; i <= N; i ++ )
        if( ady[i].size() > 1 ) 
            gans = min( gans , solve( i ) );
    cout << ( gans == INF ? -1 : gans ) << "\n";
    return 0;
}

// 10 3 6 12 24 48 96 192 384 768 512