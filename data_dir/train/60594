#include <bits/stdc++.h>
#define ll long long
#define mp make_pair
#define PI 3.1415926535897932384626433832
#define MOD 1000000007

/*
*
* Zaiiiiiin
*
*/

using namespace std;

typedef pair<int,int> ii;

struct BIT{
  vector<ll> tree;
  void build(int n){
    tree = vector<ll>(n+5, 0);
  }
  void upd(ll v, int id){
    for(int i=id; i<=tree.size() - 5; i += i & -i)
      tree[i] += v;
  }
  ll query(int id){
    ll ret = 0;
    for(int i=id; i>0; i -= i & -i)
      ret += tree[i];
    return ret;
  }
};

struct Query{
  int type, time, val;
} arr[123456];

int n, cnt = 0, c[123456];
map<int, int> cc, freq;
map<int, map<int, int> > T;
map<int, set<int> > tc;
map<int, BIT> ans;

int main(){
  //freopen("input.txt", "r", stdin);
  //freopen("output.txt", "w", stdout);
  scanf("%d", &n);
  for(int i=0; i<n; i++)
    scanf("%d%d%d", &arr[i].type, &arr[i].time, &arr[i].val);
  for(int i=0; i<n; i++){
    if(!cc.count(arr[i].val)) cc[arr[i].val] = ++cnt;
    arr[i].val = cc[arr[i].val];
    freq[arr[i].val]++;
    tc[arr[i].val].insert(arr[i].time);
  }
  for(auto it = tc.begin(); it != tc.end(); it++){
    int cntt = 0;
    for(int x: it->second)
      if(!T[it->first].count(x)) T[it->first][x] = ++cntt;
  }
  for(int i=0; i<n; i++)
    arr[i].time = T[arr[i].val][arr[i].time];
  for(auto i: freq){
    ans[i.first].build(i.second);
  }
  for(int i=0; i<n; i++){
    if(arr[i].type != 3) ans[arr[i].val].upd(1 - (2 * (arr[i].type == 2)), arr[i].time);
    else printf("%lld\n", ans[arr[i].val].query(arr[i].time));
  }
  return 0;
}
