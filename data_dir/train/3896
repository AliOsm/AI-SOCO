#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int MX = 405;

void relax(int& a, int b) {
	a = max(a, b);
}

char s[MX], t[MX];
int dp[MX][MX];

bool solve()
{
	ignore = scanf(" %s %s", s, t);
	
	int n = strlen(s);
	int m = strlen(t);
	
	for (int sz = 1; sz <= m; sz++) {
		memset(dp, 0, sizeof dp);
		
		for (int i = 0; i <= n; i++) {
			for (int j = 0; j <= sz; j++) {
				dp[i][j] = -1000000;
			}
		}
		dp[0][0] = 0;
		
		for (int i = 0; i < n; i++) {
			for (int j = 0; j <= sz; j++) {				
				relax(dp[i + 1][j], dp[i][j]);
				if (s[i] == t[j]) {
					relax(dp[i + 1][j + 1], dp[i][j]);
				}
				if (dp[i][j] >= 0 && dp[i][j] + sz < m && s[i] == t[ dp[i][j] + sz ]) {
					relax(dp[i + 1][j], dp[i][j] + 1);
				}
			}
		}
		if (dp[n][sz] + sz == m) return true;
	}
	return false;
}

int main()
{
	int tests;
	ignore = scanf("%d", &tests);
	while (tests--) {
		if (solve()) {
			printf("YES\n");
		}
		else {
			printf("NO\n");
		}
	}
}
