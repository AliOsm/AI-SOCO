#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector< ii > vii;

#define INF 0x3F3F3F3F
#define LINF 0x3F3F3F3F3F3F3F3FLL
#define pb push_back
#define mp make_pair
#define pq priority_queue
#define LSONE(s) ((s)&(-s)) //LASTBIT
#define DEG_to_RAD(X)   (X * PI / 180)
#define F first
#define S second
#define PI 2*acos(0)

#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

//////////////////////
int dx[] = {1,-1,0,0};
int dy[] = {0,0,-1,1};
//////////////////////

const int N = 101;

int n,m;
int v[N][N];
int row[N], col[N];
int opr[N], opc[N];

int row_sum( int id )
{
	int sum = 0;
	for(int i=0;i<m;++i) sum += v[id][i];
	return sum;
}

int col_sum( int id )
{
	int sum = 0;
	for(int i=0;i<n;++i) sum += v[i][id];
	return sum;
}

int main()
{
	//ios::sync_with_stdio(0);
	scanf("%d %d",&n,&m);
	for(int i=0;i<n;++i) for(int j=0;j<m;++j) scanf("%d",&v[i][j]);

	for(int i=0;i<n;++i) row[i] = row_sum(i);
	for(int i=0;i<m;++i) col[i] = col_sum(i);

	int ok = 0;
	while( !ok )
	{
		ok = 1;
		int ind = -1;
		for(int i=0;i<n;++i)
		{
			if( row[i] < 0 )
			{
				ind = i;
				ok = 0;
				break;
			}
		}

		if( ind != -1 )
		{
			row[ind] *= -1;
			opr[ind] ^= 1;
			for(int i=0;i<m;++i)
			{
				v[ind][i]*=-1;
				col[i] += 2*v[ind][i];
			}
			continue;
		}

		for(int i=0;i<m;++i)
		{
			if( col[i] < 0 )
			{
				ind = i;
				ok = 0;
				break;
			}
		}

		if( ind != -1 )
		{
			col[ind] *= -1;
			opc[ind] ^= 1;
			for(int i=0;i<n;++i)
			{
				v[i][ind]*=-1;
				row[i] += 2*v[i][ind];
			}
			continue;
		}
	}

	vi a,b;
	for(int i=0;i<n;++i) if( opr[i] ) a.pb(i);
	for(int i=0;i<m;++i) if( opc[i] ) b.pb(i);

	printf("%d",(int)a.size());
	for(int i=0;i<a.size();++i) printf(" %lld",a[i]+1);
	printf("\n");

	printf("%d",(int)b.size());
	for(int i=0;i<b.size();++i) printf(" %lld",b[i]+1);
	printf("\n");




	return 0;
}