#include <iostream>
#include <vector>
#include <set>
#include <algorithm>
#include <cmath>
#define P_B push_back
#define M_P make_pair
#define F first
#define S second
#define size(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define FR(i, a, b) for(int i = a; i < b; i++)
#define ROF(i, a, b) for(int i = a; i >= b; i--)
using namespace std;

typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

const int MAXN = 1000 * 1000 + 10;
int a[MAXN], b[MAXN], n[MAXN];
bool mark[MAXN];
set <pii> st;

int main()
{
	int m;
	cin>> m;
	FR(i, 0, m)
	{
		cin>> a[i];
		b[i] = i - 1;
		n[i] = i + 1;
		st.insert(M_P(a[i], i));
	}

	ll ans = 0;
	while(!st.empty())
	{
		int i = st.begin() -> S;
		st.erase(st.begin());
		if(i == 0 || i == m - 1)
			continue;
		if(a[i] <= a[b[i]] && a[i] <= a[n[i]])
		{
			ans += min(a[b[i]], a[n[i]]);
			n[b[i]] = n[i];
			b[n[i]] = b[i];
			mark[i] = true;
		}
	}
	
	int mx[3] = {0, 0, 0};
	FR(i, 0, m)
	{
		if(!mark[i])
		{
//			cout<< a[i] << " ";
			mx[2] = a[i];
			sort(mx, mx + 3, greater <int> ());
			ans += a[i];
			mark[i] = true;
		}
	}
//	cout<< endl;
	ans -= (mx[0] + mx[1]);
	cout<< ans << endl;
}
