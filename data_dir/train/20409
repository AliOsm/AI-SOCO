#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define ppp pair<pair<int, int>, int>
#define pp pair<int, int>
#define fi first
#define se second
#define N 100100
#define mod 1000000007
#define inf 1000000001
#define esp 1e-9
#define BASE 311097
typedef long long ll;
using namespace std;
int n;
int d[3][11];
vector<pp> ret;
int a[55];
int mask[55];
int val[55];

int com(int x, int y, int type) {
    if (type == 0) {
        return x | y;
    }
    else
    if (type == 1) {
        return x ^ y;
    }
    return x & y;
}

void writeChar(int x) {
    if (x == 0) cout << "| ";
    if (x == 1) cout << "^ ";
    if (x == 2) cout << "& ";
}

int main() {
   // freopen("in.in", "r", stdin);
   // freopen("ou.ou", "w", stdout);
    ios::sync_with_stdio(false);
    cin >> n;
    char c;
    int x;

    for (int i = 0; i < 10; i++)
        d[1][i] = 1;

    for (int i = 1; i <= n; i++) {

        cin >> c >> x;
        for (int j = 0; j < 10; j++) {
            if (c == '|') {
                d[0][j] |= ((x >> j) & 1);
                d[1][j] |= ((x >> j) & 1);
            }
            else
            if (c == '^') {
                d[0][j] ^= ((x >> j) & 1);
                d[1][j] ^= ((x >> j) & 1);
            }
            else {
                d[0][j] &= ((x >> j) & 1);
                d[1][j] &= ((x >> j) & 1);
              //  cout << "dm\n";
            }
        }
    }

    //cout << "ok\n";
    for (int i = 0; i < 10; i++) {
        ret.pb(mp(d[0][i], d[1][i]));
      //  cout << d[0][i] << " " << d[1][i] << "\n";
    }

    //cout << "process\n";

    for (int i = 0; i < 3; i++)
    for (int j = 0; j < 3; j++)
    for (int k = 0; k < 3; k++)
    for (int u = 0; u < 3; u++)
    for (int v = 0; v < 3; v++) {



        bool ok = true;

        for (int z = 0; z < 10; z++) {

            int found = -1;

            for (int h = 0; h < (1 << 5); h++) {

               // cout << "state of a:\n";
                for (int zz = 0; zz < 5; zz++) {
                    a[zz] = ((h >> zz) & 1);
                }
              //  cout << "\n";

                int d1 = 0;
                int d2 = 1;
                d1 = com(d1, a[0], i);
                d1 = com(d1, a[1], j);
                d1 = com(d1, a[2], k);
                d1 = com(d1, a[3], u);
                d1 = com(d1, a[4], v);

                d2 = com(d2, a[0], i);
                d2 = com(d2, a[1], j);
                d2 = com(d2, a[2], k);
                d2 = com(d2, a[3], u);
                d2 = com(d2, a[4], v);

                if (d1 == ret[z].fi && d2 == ret[z].se) {
                    found = h;
                    break;
                }
            }

            if (found == -1) {
                ok = false;
                break;
            }
            else
                mask[z] = found;

         //   cout << "found => " << mask[z] << "\n";
        }

        if (ok) {
            for (int z = 0; z < 10; z++) {
                for (int o = 0; o < 5; o++)
                    if ((mask[z] >> o) & 1) val[o] |= (1 << z);
            }

            cout << 5 << "\n";
            writeChar(i); cout << val[0] << "\n";
            writeChar(j); cout << val[1] << "\n";
            writeChar(k); cout << val[2] << "\n";
            writeChar(u); cout << val[3] << "\n";
            writeChar(v); cout << val[4] << "\n";
            return 0;
        }
    }
    /**/return 0;
}
