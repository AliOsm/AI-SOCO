#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <stack>
#include <queue>
#include <cmath>
#include <utility>
using namespace std;
#define REP(I,N) for (I=0;I<N;I++)
#define rREP(I,N) for (I=N-1;I>=0;I--)
#define rep(I,S,N) for (I=S;I<N;I++)
#define rrep(I,S,N) for (I=N-1;I>=S;I--)
#define FOR(I,S,N) for (I=S;I<=N;I++)
#define rFOR(I,S,N) for (I=N;I>=S;I--)
typedef unsigned long long ULL;
typedef long long LL;
const int INF=0x3f3f3f3f;
const LL INFF=0x3f3f3f3f3f3f3f3fll;
const LL M=1e9+7;
const LL maxn=1e6+7;
const double eps=0.00000001;
LL gcd(LL a,LL b){return b?gcd(b,a%b):a;}
template<typename T>inline T abs(T a) {return a>0?a:-a;}
template<typename T>inline T powMM(T a,T b){T ret=1;for (;b;b>>=1,a*=a) ret=1ll*ret*a%M;return ret;}

set<pair<LL,LL> > hsh;
LL a[maxn];
LL A,B,h,w,n;
LL i,j,t,mx;
int cmp(LL a,LL b){
	return a>b;
}
void dfs(LL h,LL w,LL now){
//	printf("%d %d %d\n",h,w,now);
	if (hsh.count(make_pair(h,w))) return;
	hsh.insert(make_pair(h,w));
	if (h>=A&&w>=B) {
//		printf("%d %d %d\n",h,w,now);
		if (mx>now) mx=now;return;
	}
	if (now>n) return;
	if (now>mx) return;
	if (h<A) dfs(h*a[now],w,now+1);
	if (w<B) dfs(h,w*a[now],now+1);
}
int main(){
	scanf("%I64d%I64d%I64d%I64d%I64d",&A,&B,&h,&w,&n);
	REP(i,n) scanf("%d",&a[i]);
	sort(a,a+n,cmp);
	mx=40;
	dfs(h,w,0ll);
	dfs(w,h,0ll);
	if (mx<40)
		printf("%I64d",mx);
	else puts("-1");
}
/*
2 4 5
2 2 C
2 2 C
*/