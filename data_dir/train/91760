//CLOCKS_PER_SEC
using namespace std;
#include<bits/stdc++.h>
#define sqr(x) (x)*(x)
//#define sort stable_sort
#define ll long long
#define mk make_pair
#define pb push_back
#define in insert
#define mtr(x,y,z) mk(mk(x,y),z)
#define fi first
#define se second
#define lch(x) ((x)<<1)
#define rch(x) (((x)<<1)|1)
#define all(x) (x).begin(),(x).end()
#define titose CLOCKS_PER_SEC
#define fpi(x) freopen(x,"r",stdin);
#define fpo(x) freopen(x,"w",stdout);
#define fprio fpi("in.txt");fpo("out.txt");
#define fast ios_base::sync_with_stdio(false);
inline void read(int &x){int v=0,f=1;char c=getchar();while (!isdigit(c)&&c!='-') c=getchar();if (c=='-') f=-1; else v=(c&15);while (isdigit(c=getchar())) v=(v<<1)+(v<<3)+(c&15);x=v*f;}
inline void read(ll &x){ll v=0ll,f=1ll;char c=getchar();while (!isdigit(c)&&c!='-') c=getchar();if (c=='-') f=-1; else v=(c&15);while (isdigit(c=getchar())) v=(v<<1)+(v<<3)+(c&15);x=v*f;}
inline void readc(char &x){char c;while (((c=getchar())==' ')||c=='\n');x=c;}
inline void writes(string s){puts(s.c_str());}
inline void writeln(){writes("");}
inline void writei(int x){if (x<0){putchar('-');x=abs(x);}if (!x) putchar('0');char a[25];int top=0;while (x){a[++top]=(x%10)+'0';x/=10;}while (top){putchar(a[top]);top--;}}
inline void writell(ll x){if (x<0){putchar('-');x=abs(x);}if (!x) putchar('0');char a[25];int top=0;while (x){a[++top]=(x%10)+'0';x/=10;}while (top){putchar(a[top]);top--;}}
#define pii pair<int,int>
#define pll pair<ll,ll>
#define vi vector<int>
#define vl vector<ll>
#define si set<int>
#define sl set<ll>
#define mii map<int,int>
#define mll map<ll,ll>
#define msi map<string,int>
#define msl map<string,ll>
#define piii pair<int,pii >
#define piipi pair<pii,int>
#define plll pair<ll,pll >
#define pllpl pair<pll,ll>
#define pqi priority_queue<int>
#define pql priority_queue<ll>
#define npqi priority_queue<int,vector<int>,greater<int> >
#define npql priority_queue<ll,vector<ll>,greater<ll> >
#define forup(i,a,b) for ((i)=(a);(i)<=(b);(i)++)
#define fordo(i,a,b) for ((i)=(a);(i)>=(b);(i)--)
#define rep(i,x) forup ((i),1,(x))
#define repd(i,x) fordo ((i),(x),1)
#define itr iterator
#define fe(itcalc,c) for(__typeof((c).begin()) itcalc=(c).begin();itcalc!=(c).end();itcalc++)
#define NO {cout<<"NO";return 0;}
#define YES {cout<<"YES";return 0;}
#define y0 y000000000000000000000000000
#define y1 y111111111111111111111111111
#define j0 j000000000000000000000000000
#define j1 j111111111111111111111111111
#define cl0(a) memset((a),(0),(sizeof((a))))
#define clz(a) memset((a),(0x16),(sizeof((a))))
#define clf(a) memset((a),(-(0x16)),(sizeof((a))))
#define inf 0x3bbbbbbb
#define lnf 0x1bbbbbbbbbbbbbbbll
#define sqrt divi
#define p2(i) (1ll<<(i))
#define readi read
#define readll read
/*************************************************/
int n,m,i,j,t,a[200005],mx[200005],lg[200005],f[200005][19],sss;
vector<int> all;
int qry(int l,int r)
{
	return max(f[l][lg[r-l+1]],f[r-(1<<lg[r-l+1])+1][lg[r-l+1]]);
}
void solve(int x)
{
	if(x>n) return;
	sss++;
	int l=x,r=n+1,mid,ans=l-1;
	while(l<r){
		mid=(l+r)/2;
		int t=qry(x,mid);
		if(mx[t]>=mid-x+1){
			l=mid+1;
			ans=mid;
		}
		else r=mid;
	}
	if(ans>=x) solve(ans+1); else sss=-1;
}
int main()
{
	forup(i,2,200000) lg[i]=lg[i/2]+1;
	scanf("%d",&t);
	while(t--)
	{
		all.clear();
		scanf("%d",&n);
		rep(i,n){
			scanf("%d",&a[i]); 
			all.push_back(a[i]);
		}
		sort(all.begin(),all.end());
		all.resize(unique(all.begin(),all.end())-all.begin());
		scanf("%d",&m);
		rep(i,all.size()) mx[i]=0;
		rep(i,m){
			int x,y;
			scanf("%d%d",&x,&y);
			x=upper_bound(all.begin(),all.end(),x)-all.begin();
			mx[x]=max(mx[x],y);
		}
		repd(i,all.size()-1) mx[i]=max(mx[i],mx[i+1]);
		rep(i,n){
			f[i][0]=upper_bound(all.begin(),all.end(),a[i])-all.begin();
		}
		rep(j,18)rep(i,n-(1<<j)+1){
			f[i][j]=max(f[i][j-1],f[i+(1<<(j-1))][j-1]);
		}
		sss=0;solve(1);
		printf("%d\n",sss);
	}
	return 0;
}