#include <bits/stdc++.h>

using namespace std;

int main()
{
	long long n, a[100000];
	map <long long, long long> m;
	cin >> n;
	
	for (int i = 0; i < n; i++)
		cin >> a[i];
		
	if (n == 1)
	{
		cout << -1;
		return 0;
	}
	
	sort(a, a+n);
	
	if (n == 2)
	{
		set <long long> s;
		s.insert(2*a[0]-a[1]);
		s.insert(2*a[1]-a[0]);
		
		if ((a[1]-a[0]) % 2 == 0)
			s.insert((a[0]+a[1])/2);
			
		cout << s.size() << endl;
		
		for (auto now: s)
			cout << now << " ";
		
		return 0;
	}
	
	for (int i = 0; i < n-1; i++)
		m[a[i+1]-a[i]]++;
		
	if (m.size() > 2)
	{
		cout << 0;
		return 0;
	}
	
	if (m.size() == 1)
	{
		set <long long> s;
		s.insert(a[0]*2-a[1]);
		s.insert(a[n-1]+a[1]-a[0]);
		cout << s.size() << endl;
		
		for (auto now: s)
			cout << now << " ";
		
		return 0;
	}
	
	int f = 0;
	
	for (auto now: m)
		if (now.second > 1)
			f++;
			
	if (f == 2)
	{
		cout << 0;
		return 0;
	}
	
	long long l1, l2, r1, r2, ind = 0;
	
	for (auto now: m)
	{
		if (!ind)
		{
			ind++;
			l1 = now.first;
			l2 = now.second;
		}
		else
		{
			r1 = now.first;
			r2 = now.second;
		}
	}
	
	if (l2 == r2 && l2 == 1)
	{
		if (l1 != r1* 2 && r1 != l1*2)
		{
			cout << 0;
			return 0;
		}
		
		if (r1 > l1)
			swap(l1, r1);
			
		cout << "1\n";
		
		for (int i = 0; i < n-1; i++)
			if (a[i+1]-a[i] == l1)
				cout << a[i]+l1/2;
				
		return 0;
	}
	
	if (l2 != 1)
	{
		swap(l1, r1);
		swap(l2, r2);
	}
	
	if (l1 != r1*2)
	{
		cout << 0;
		return 0;
	}
	
	cout << "1\n";
	
	for (int i = 0; i < n-1; i++)
			if (a[i+1]-a[i] == l1)
				cout << a[i]+l1/2;
}