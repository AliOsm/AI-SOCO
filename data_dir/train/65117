#include <bits/stdc++.h>

using namespace std;

const long long mod = 1e9+7ll ;
const int MAX = 2005 , MAXN = 1005;
long long dp[MAX][MAX][2] ;

long long n ;

long long solve(int op , int cl , int s)
{
    if(op == n && cl == n)
        return 0 ;
    long long &ret = dp[op][cl][s] ;
    if(ret != -1)
        return ret ;
    ret = 0 ;
    if(s == 1)
    {
        if(op < n)
            ret = (ret + solve(op + 1 , cl , 0)) % mod ;
        if(cl < n && cl < op)
            ret = (ret + solve(op , cl + 1 , 0)) % mod ;
        ret %= mod ;
        return ret ;
    }
    long long choice1 = 0 , choice2 = 0 , choice3 = 0 ;
    if(op < n)
    {
        choice1 = (1 + solve(op + 1 , cl , 1)) % mod ;
        choice2 = solve(op + 1 , cl , 0) % mod ;
        choice3 = solve(op + 1 , cl , 0) % mod ;
        choice1 %= mod ;
        choice2 %= mod ;
        choice3 %= mod ;
    }
    if(cl < n && cl < op)
    {
        choice1 = (choice1 + solve(op , cl + 1 , 0)) % mod ;
        choice1 %= mod ;
        choice2 = (choice2 + 1 + solve(op , cl + 1 , 1)) % mod ;
        choice2 %= mod ;
        choice3 = (choice3 + solve(op , cl + 1 , 0)) % mod ;
        choice3 %= mod ;
    }
    ret = max(choice1 , max(choice2 , choice3)) ;
    return ret ;
}

int main()
{
    memset(dp , -1 , sizeof(dp)) ;
    cin>>n ;
    return cout<<solve(0 , 0 , 0)<<"\n" , 0 ;
}
