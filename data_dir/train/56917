#pragma GCC optimize("O3")
#include<bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
typedef long long ll;
typedef long double ld;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<61);
const int inf=(1<<30);
const int nmax=4e3+50;
const int mod=1e9+7;
using namespace std;
int n,i,j,k,t,a[nmax][nmax],f[nmax][nmax];
int cst(int x,int y)
{
	return a[y][y]-a[x-1][y]-a[y][x-1]+a[x-1][x-1];
}
void rec(int d,int l,int r,int opl,int opr)
{
	if(l>r)return;
    int mid=(l+r)>>1;
    f[mid][d]=inf;
    int bst=0;
    for(int k=opl;k<=min(mid,opr);k++) 
	{
        if(f[mid][d]>f[k-1][d-1]+cst(k,mid))
        {
        	f[mid][d]=f[k-1][d-1]+cst(k,mid);
        	bst=k;
		}
    }
    rec(d,l,mid-1,opl,bst);
    rec(d,mid+1,r,bst,opr);
}
inline int read() {
    char c = getchar();
    while (c > '9' || c < '0') {
        c = getchar();
    }
    int next = 0;
    while (c >= '0' && c <= '9') {
        next = next * 10 + (c - '0');
        c = getchar();
    }
    return next;
}
int main()
{
	//freopen("sol.in","r",stdin);
	//freopen("sol.out","w",stdout);
	//ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
	n=read(),k=read();
	for(i=1;i<=n;i++)for(j=1;j<=n;j++)a[i][j]=read();
	for(i=1;i<=n;i++)for(j=1;j<=n;j++)a[i][j]+=a[i-1][j]+a[i][j-1]-a[i-1][j-1];
	for(i=1;i<=n;i++)f[i][0]=inf;
	for(i=1;i<=k;i++)rec(i,1,n,1,n);
	printf("%d\n",f[n][k]/2);
	return 0;
}
