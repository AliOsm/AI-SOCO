#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;
const long long INF = 1LL<<60;
const int N = 110;
struct Node {
  int state, mon, kk;
  bool operator < (const Node &cmp) const {
    return kk < cmp.kk;
  }
}pp[N];
long long dp[1 << 20];
inline void Min(long long &a, long long b) {
  if(a > b) {
    a = b;
  }
}
int main() {
  int n, m, k, b;
  cin>> n >> m >> b;
  for(int i = 0; i < n; ++i) {
    int t;
    cin >> pp[i].mon >> pp[i].kk >> t;
    pp[i].state = 0;
    int x;
    while(t--) {
      cin >> x;
      pp[i].state |= 1 << (x - 1);
    }
  }
  sort(pp, pp + n);
  for(int i = 0; i < 1 << m; i++) dp[i] = INF;
  long long ans = INF;
  int full = (1 << m) - 1;
  dp[0] = 0;
  for(int i = 0; i < n; ++i) {
    for(int j = full; j >= 0; --j) {
      Min(dp[j | pp[i].state], dp[j] + pp[i].mon);
    }
    ans = min(ans, dp[full] + 1LL * b * pp[i].kk);
  }
  if(ans == INF)ans = -1;
  cout << ans;
  return 0;
}
