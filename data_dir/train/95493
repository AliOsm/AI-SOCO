/*

 #    #  ######  #####    #   #
 #    #  #       #    #    # #
 #    #  #####   #    #     #
 #    #  #       #####      #
  #  #   #       #   #      #
   ##    ######  #    #     #


 #####     ##    #####   #####   #        #   #
 #    #   #  #   #    #  #    #  #         # #
 #####   #    #  #    #  #    #  #          #
 #    #  ######  #    #  #    #  #          #
 #    #  #    #  #    #  #    #  #          #
 #####   #    #  #####   #####   ######     #


 #    #  #####      #     #####   #####  ######  #    #
 #    #  #    #     #       #       #    #       ##   #
 #    #  #    #     #       #       #    #####   # #  #
 # ## #  #####      #       #       #    #       #  # #
 ##  ##  #   #      #       #       #    #       #   ##
 #    #  #    #     #       #       #    ######  #    #


  ####    ####   #####   ######
 #    #  #    #  #    #  #
 #       #    #  #    #  #####
 #       #    #  #    #  #
 #    #  #    #  #    #  #
  ####    ####   #####   ######


*/
/*
 _     _                             
| |__ | |__   __ _  __ _ _   _  __ _ 
| '_ \| '_ \ / _` |/ _` | | | |/ _` |
| |_) | | | | (_| | (_| | |_| | (_| |
|_.__/|_| |_|\__,_|\__, |\__, |\__,_|
                   |___/ |___/       
*/
#include<bits/stdc++.h>

#define ll          long long
#define pb          push_back
#define ppb         pop_back
#define	endl		'\n'
#define mii         map<int,int>
#define msi         map<string,ll int>
#define mis         map<ll int, string>
#define mpi         map<pair<ll int,ll int>,ll int>
#define pii         pair<ll int,ll int>
#define vi          vector<int>
#define vs          vector<string>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define what_is(x)  cerr << #x << " is " << x << endl;
using namespace std;

#define N  100005

mt19937 rang(chrono::high_resolution_clock::now().time_since_epoch().count());
int root;

bool vis[N];
bool p[N];
vi a[N];

vector<pii> dp[N];

int dfs(int node)
{
	vis[node]=1;
	int maxi=0;
	for(auto i:a[node])
	{
		if(!vis[i])
		{
			int tmp=dfs(i);
			maxi=max(maxi,tmp);
			if(tmp!=0) dp[node].pb({tmp,i});
		}
	}
	// if(node==root)
	// cout<<"&       "<<maxi<<endl;
	if(maxi==0) return p[node]==1;
	else return maxi+1;
}

void dfs(int node,int par)
{
	if(node!=root)
	{	
		ll int maxi=0;
		if(true)
		{
			int n=dp[par].size();
			if(n-1>=0 && dp[par][n-1].S!=node) maxi=dp[par][n-1].F+1;
			else { if(n-2>=0) maxi=dp[par][n-2].F+1; }
		}
		if(p[par])
		{
			maxi=max(maxi,1ll);
		}
		if(maxi!=0) dp[node].pb({maxi,par});
	}
	sort(all(dp[node]));
	for(auto i:a[node])
	if(i!=par)
	dfs(i,node);
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		// cout<<p[1];
		int n,m,d;
		cin>>n>>m>>d;
		root=1+(rang()%n);
		//root=1;
		int tmp;
		for(int i=1;i<=m;i++)
		{
			cin>>tmp;
			p[tmp]=1;
		}
		m=n-1;
		int u,v;
		while(m--)
		{
			cin>>u>>v;
			a[u].pb(v);
			a[v].pb(u);
		}
		dfs(root);
		dfs(root,0);
		int cnt=0;
		for(int i=1;i<=n;i++)
		{
			ll int maxi=0;
			// cout<<i<<endl;
			for(auto j:dp[i]) 
			{
				// cout<<j.F<<" "<<j.S<<endl;
				maxi=max(maxi,j.F);
			}
			if(maxi<=d) cnt++;
		}
		cout<<cnt;
	}
	return 0;
}