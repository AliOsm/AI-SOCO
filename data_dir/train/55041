#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

const int mod = 1e9 + 7;
const int N = 1e5 + 5;
vector<int> g[N];
ll val[N];
map<ll, int> mp;
int ans = 0;

int add(ll a, ll b)
{
    a %= mod;
    b %= mod;
    return (a + b) % mod;
}

int mul(ll a, ll b)
{
    a %= mod;
    b %= mod;
    return (a * b) % mod;
}

void dfs(int node, int parent)
{
    map<ll, int> prev_mp = mp;
    mp.clear();
    for(auto &x: prev_mp)
        mp[__gcd(val[node], x.first)] += x.second;
    mp[val[node]]++;
    for(auto &x: mp)
        ans = add(ans, mul(x.first == 0 ? val[node] : x.first, x.second));
    for(auto &new_node: g[node])
    {
        if(new_node != parent)
            dfs(new_node, node);
    }
    mp = prev_mp;
}

int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int n;
    cin >> n;
    for(int i = 1; i <= n; i++)
        cin >> val[i];
    for(int i = 1; i <= n - 1; i++)
    {
        int u, v;
        cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
    dfs(1, 1);
    cout << ans;
    return 0;
}