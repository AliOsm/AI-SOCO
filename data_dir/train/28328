#include<iostream>
#include<cstdio>

#include<string>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<stack>

#include<iomanip>
#include<algorithm>
#include<cstring>
#include<ctime>
#include<cassert>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); ++i)
#define correct(x, y, n, m) (0 <= x && x < n && 0 <= y && y < m)
#define X first
#define Y second
#define all(a) a.begin(), a.end()
#define pb push_back
#define mp make_pair
#define sz(v) (int)(v.size())

template<typename T> inline T abs(T a){ return ((a < 0) ? -a : a); }
template<typename T> inline T sqr(T a){ return a * a; }

typedef long long li;
typedef unsigned long long uli;
typedef long double ld;
typedef pair<int, int> pt;

const int N = 100009;
const int MOD = 1e9 + 7;
const int INF = 1e9;
const li INF64 = 2e18;

int a[N], d[N];

int main(){
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
     
    srand(time(NULL));
    cout << setprecision(7) << fixed;
    cerr << setprecision(7) << fixed;
	
	int n;
	cin >> n;
	forn(i, (1 << (n + 1)) - 2)
		cin >> a[i + 2];
	li ans = 0;
	for(int i = (1 << n) - 1; i >= 1; --i){
		int l = i * 2, r = l + 1;
		li cntL = d[l] + a[l], cntR = d[r] + a[r];
		li cur = cntL - cntR;
		if(cur < 0)
			cur *= -1;
		ans += cur;
		d[i] = max(cntL, cntR);
	}

	cout << ans;
    return 0;   
}