#include <bits/stdc++.h>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;          // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
const int MOD = (int)1e9+7;          // inv2 = 500000004 (mod 1e9+7)
const int N = (int)107;               // (1 << [17, 18, 20, 21] ) > [1e5, 2e5, 1e6, 2e6]
 
// ------- 变量 ------- //
 
int r, c, k, num;
char s[N][N], ans[N][N];
 
// ------- 函数 ------- //
 
void Init() {
    scanf("%d%d%d", &r, &c, &k);
    rep(i, 1, r+1) scanf("%s", s[i] + 1);
    num = 0;
    rep(i, 1, r+1) rep(j, 1, c+1) if (s[i][j] == 'R') num++;
}
 
int Solve() {
    int shan = num / k;
 
    rep(i, 1, r+1) rep(j, 1, c+1) ans[i][j] = k - 1;
    int cur = 0, cnt = shan, i = 1, j = 1, f = 1, tmp = num % k;
    if (tmp) { tmp--; cnt++; }
    while (1) {
        ans[i][j] = cur;
        if (s[i][j] == 'R') {
            cnt--;
            if (cnt == 0) {
                cnt = shan;
                if (tmp) { tmp--; cnt++; }
                cur++;
                if (cur == k) break;
            }
        } else {
        }
        if (f) {
            if (j == c) i++, f = 0;
            else j++;
        } else {
            if (j == 1) i++, f = 1;
            else j--;
        }
    }
    rep(i, 1, r+1) rep(j, 1, c+1) {
        if (ans[i][j] <= 9) ans[i][j] += '0';
        else if (ans[i][j] <= 9 + 26) ans[i][j] += 'a' - 10;
        else ans[i][j] += 'A' - 9 - 26 - 1;
    }
    rep(i, 1, r+1) ans[i][c+1] = '\0';
    rep(i, 1, r+1) printf("%s\n", ans[i] + 1);
    return 0;
}
 
// ------- main ------- //
 
int main ()
{
    //ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
 
    //Pre();
    int t; scanf("%d", &t); while (t--) {
    //while (~scanf("", )) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}