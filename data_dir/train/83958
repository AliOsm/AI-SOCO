#include<bits/stdc++.h>
using namespace std;

typedef pair<int,int> ii;

int dx[]={1,1,2,2,-1,-1,-2,-2}, dy[]={2,-2,1,-1,2,-2,1,-1};

int main() {
	cin.tie(0); cout.tie(0); ios_base::sync_with_stdio(0);
	int n; cin>>n;
	vector<vector<int>> grid(n,vector<int>(n,0));
	queue<ii> q; q.push({0,0}); grid[0][0]=1;
	while(!q.empty()) {
		ii cur=q.front(); q.pop();
		for (int i=0; i<8; i++) {
			ii nxt=cur; nxt.first+=dx[i]; nxt.second+=dy[i];
			if(nxt.first<0||nxt.first>=n||nxt.second<0||nxt.second>=n) continue;
			if(grid[nxt.first][nxt.second]) continue;
			grid[nxt.first][nxt.second]=3-grid[cur.first][cur.second];
			q.push(nxt);
		}
	}
	for (int i=0; i<n; i++) {
		for (int j=0; j<n; j++)
			cout<<(grid[i][j]==1?'W':'B');
		cout<<endl;
	}
	return 0;
}