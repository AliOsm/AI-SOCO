#include<bits/stdc++.h>

#define SZ(x) ((int(x.size())))

typedef long long ll;
typedef long double ld;

using namespace std;

const int maxn = 200*1000+10;
pair <ll, char> s[maxn], t[maxn];
char tmp, c;
ll n, m, f[maxn], nxt[maxn], cur, lt, ls, ted, ans;

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> n >> m;
    for (int i = 0; i < n; i++)
    {
        cin >> ted >> tmp >> c;
        if (lt > 0 && c == t[lt - 1].second)
            t[lt - 1].first += ted;
        else
        {
            t[lt] = {ted, c};
            lt++;
        }
    }
    for (int i = 0; i < m; i++)
    {
        cin >> ted >> tmp >> c;
        if (ls > 0 && c == s[ls - 1].second)
            s[ls - 1].first += ted;
        else
        {
            s[ls] = {ted, c};
            ls++;
        }
    }
    if (ls == 1)
    {
        for (int i = 0; i < lt; i++)
        {
            if (t[i].second == s[0].second && t[i].first >= s[0].first)
                ans += t[i].first - s[0].first + 1;
        }
        cout << ans;
        return 0;
    }
    else if (ls == 2)
    {
        for (int i = 1; i < lt; i++)
        {
            if (t[i - 1].second == s[0].second && t[i - 1].first >= s[0].first && t[i].second == s[1].second && t[i].first >= s[1].first)
                ans++;
        }
        cout << ans;
        return 0;
    }
    for (int i = 3; i < ls; i++)
    {
        while (cur && s[i - 1] != s[cur + 1])
            cur = nxt[cur + 1];
        if (s[i - 1] == s[cur + 1])
            cur++;
        nxt[i] = cur;
    }
    cur = 0;
    for (int i = 1; i < lt - 1; i++)
    {
        while (cur && t[i] != s[cur + 1])
            cur = nxt[cur + 1];
        if (t[i] == s[cur + 1])
            cur++;
        f[i] = cur;
        if (cur == ls - 2)
        {
            cur = nxt[cur + 1];
            if (t[i + 1].second == s[ls - 1].second && t[i + 1].first >= s[ls - 1].first && t[i - ls + 2].second == s[0].second && s[0].first <= t[i - ls + 2].first)
                ans++;
        }
    }
    cout << ans;
	return 0;
}
