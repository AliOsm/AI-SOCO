#include <bits/stdc++.h>

using namespace std;

#define mem(a,b) memset(a,b,sizeof(a))
#define FOR(i,j,k) for(LL i=j;i<=k;i++)
#define REV(i,j,k) for(LL i=j;i>=k;i--)
#define FORR(i,j,k,l) for(LL i=j;i<=k;i+=l)
#define inf         freopen("in.txt", "r", stdin)
#define outf        freopen("out.txt", "w", stdout)
#define pf          prLLf
#define sf(n)       scanf("%d", &n)
#define sff(a,b)    scanf("%d %d", &a, &b)
#define sfff(a,b,c)    scanf("%d %d %d", &a, &b, &c)
#define minn          (long long)-1000000000000000000
#define maxx          (long long) 1000000000000000000
#define mod          1000000007
#define M_PI           3.14159265358979323846  /* pi */
#define LL           long long
#define NL '\n'
#define cnd tree[idx]
#define lnd (idx<<1)
#define rnd ((idx<<1)+1)
#define PB push_back
#define F first
#define S second
#define MAX 100010
#define sz 300010
#define MK make_pair
#define valid(nx,ny)  ((nx >= 0) && (nx < row) && (ny >= 0) && (ny < col))
typedef pair<LL,LL> pr;

LL f[sz],s[sz],t[sz],ff[sz],ss[sz],tt[sz],bn[sz],k,l,m,p;
LL dp[5][sz];

int main()
{
    ios::sync_with_stdio(false);
    //inf;
    //outf;
    mem(dp,0);

    LL i,j,x,y,z,n,a,b,c,mx=0,en,mid1,mid2;

    l=m=p=0;
    cin>>n>>k;
    FOR(i,0,n-1)
    {
      cin>>a>>b;
      if(a==1) f[l]=b, l++;
      else if(a==2) s[m]=b, m++;
      else t[p]=b, p++;
    }
    sort(f,f+l,greater<LL>());
    sort(s,s+m,greater<LL>());
    sort(t,t+p,greater<LL>());

    FOR(i,0,k)
    {
        a=bn[i]; x=f[dp[1][i]];
        if(bn[i+1]<a+x)
        {
            bn[i+1]=a+x;
            dp[1][i+1]=dp[1][i]+1; dp[2][i+1]=dp[2][i]; dp[3][i+1]=dp[3][i];
        }

        a=bn[i]; x=s[dp[2][i]];
        if(bn[i+2]<a+x)
        {
            bn[i+2]=a+x;
            dp[1][i+2]=dp[1][i]; dp[2][i+2]=dp[2][i]+1; dp[3][i+2]=dp[3][i];
        }
        if(bn[i+2]==a+x&&dp[1][i+2]>dp[1][i])
        {
            bn[i+2]=a+x;
            dp[1][i+2]=dp[1][i]; dp[2][i+2]=dp[2][i]+1; dp[3][i+2]=dp[3][i];
        }

        a=bn[i]; x=t[dp[3][i]];
        if(bn[i+3]<a+x)
        {
            bn[i+3]=a+x;
            dp[1][i+3]=dp[1][i]; dp[2][i+3]=dp[2][i]; dp[3][i+3]=dp[3][i]+1;
        }
        if( bn[i+3]==a+x && ( dp[2][i+3]>dp[2][i] || dp[1][i+3]>dp[1][i] ) )
        {
            bn[i+3]=a+x;
            dp[1][i+3]=dp[1][i]; dp[2][i+3]=dp[2][i]; dp[3][i+3]=dp[3][i]+1;
        }
        mx=max(mx,bn[i]);
    }

    x=0;
    FOR(i,0,p-1) x+=t[i], t[i]=x;
    FOR(i,1,p) tt[i]=t[i-1];

    x=0;
    FOR(i,0,l-1) x+=f[i], f[i]=x;
    FOR(i,1,l) ff[i]=f[i-1];

    x=0;
    FOR(i,0,m-1) x+=s[i], s[i]=x;
    FOR(i,1,m) ss[i]=s[i-1];

    int q,mo;
    p=min(dp[3][k]+1000,p); q=max(dp[3][k]-1000,(LL)0);
    m=min(dp[2][k]+1000,m); mo=max(dp[2][k]-1000,(LL)0);
    FOR(i,q,p)
    {
        FOR(j,mo,m)
        {
           x=tt[i]+ss[j];
           y=i*3+j*2;
           if(y<=k)
           {
               ///cout<<i<<' '<<j<<' '<<x<<NL;
               z=min(l,k-y);
               x+=ff[z];
               mx=max(x,mx);
           }
        }
    }
    cout<<mx<<NL;
    return 0;
}
