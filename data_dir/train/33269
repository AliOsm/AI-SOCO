#pragma comment(linker,"/STACK:300000000")
#include <iostream>
#include <fstream>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <list>
#include <math.h>
#include <string>
#include <stdlib.h>

#define gcd(a,b) __gcd((a),(b))
#define sqr(a) ((a)*(a))
#define odd(a) ((a)&1)
#define foru(i,n) for (int i=0;i<(n);i++)
#define ford(i,n) for (int i=(n)-1;i>=0;i--)
#define forab(i,l,r) for (int i=(l);i<=(r);i++)
#define forabd(i,r,l) for (int i=(r);i>=(l);i--)
#define fillchar(a,b) memset((a),(b),sizeof((a)))
#define pb push_back
#define F first
#define S second
#define all(x) x.begin,x.end
#define pw2(x) (1ull<<(x))
#define mp make_pair
#define filename ""

const long double eps=1e-20;
const long double pi=acos(-1.0);
const long long inf=1000*1000*1000*1000*1000*1000;
const long long base=1000*1000*1000+7;

using namespace std;

long double ans = -1;
long double a[111];
vector < long double > b;
int n;

long double s1olve(int j){
	b.clear();
	forab(k,j,n-1) b.pb(a[k]);
	long double tmp = 1;
	foru(i,b.size()) tmp = tmp * (1 - b[i]);
	long double sum = 0;
	foru(i,b.size()) sum = sum + (b[i] / (1 - b[i]));
	tmp = tmp * sum;
	return tmp;
}


void solve(){
	cin >> n;
	cout.precision(100);
	foru(i,n){
		cin >> a[i];
	}
	sort(a,a+n);
	if (a[n-1] >= 0.5){
		cout << a[n-1];
		return;
	}
	forab(j,0,n-1) ans = max(ans, s1olve(j));
	cout << ans;
}

int main(){
	ios_base :: sync_with_stdio(false);
//	freopen (filename".in","r",stdin);
//	freopen ("q.out","w",stdout);
	int test = 1;
	while (test--){
		solve();
	}
	return 0;
}
