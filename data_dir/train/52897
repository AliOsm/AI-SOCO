#include <iostream>
#include <iomanip>
#include <algorithm>
#include <vector>
#include <string>
#include <cmath>
#include <memory.h>
#include <sstream>
#include <stack>
#include <fstream>
#include <cstdio>
#include <map>
#include <list>
#include <stdlib.h>
#include <queue>
#include <set>
using namespace std;

/*
*/

int n;
vector<string> mp(3);
int dp[3][105];

bool valid(char ch)
{
	return ch == '.' || ch == 's';
}

int sol(int i, int r)
{
	if (i == n) return 1;
	if (3*i < n)
	{
		if (!valid(mp[r][3*i])) return 0;
		if (3*i+1 < n && !valid(mp[r][3*i + 1])) return 0;
		if (3*i >= 1 && !valid(mp[r][3*i - 1])) return 0;
		if (3*i >= 2 && !valid(mp[r][3*i - 2])) return 0;
	}
	if (dp[r][i] != -1) return dp[r][i];
	if (r == 0)
	{
		return dp[r][i] = max(sol(i+1, r),sol(i+1, r+1));
	}
	else if (r == 1)
	{
		return dp[r][i] = max(sol(i+1, r), max(sol(i+1, r+1), sol(i+1, r-1)));	
	}
	else
	{
		return dp[r][i] = max(sol(i+1, r),sol(i+1, r-1));
	}
	
}

int main()
{
	int k;
	int T;
	cin>>T;
	while (T--)
	{
		cin>>n>>k;
		cin>>mp[0]>>mp[1]>>mp[2];
		memset(dp, -1, sizeof(dp));
		int r = 0;
		for (int i = 0; i < 3; i++) if (mp[i][0] == 's')
		{
			r = sol(0, i);
		}
		if (r)
			cout<<"YES"<<endl;
		else
			cout<<"NO"<<endl;
	}
}