#include <bits/stdc++.h>

using namespace std;

#define MP make_pair
#define F first
#define S second
#define pi pair<int,int> 
#define sz(s) ((int)s.size())
#define rep(i,a,b) for (int i = a; i <= (int)b; ++i)

const unsigned mod = 1e9 + 7;
const unsigned N = 5e5 + 4;

int dp[5003];
int last[N];

signed main() {
  ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

  int n, w, h;
  cin >> n >> w >> h;
  vector<pair<pi,int>> v(n);
  int i = 0;
  for (int i = 0; i < n; ++i) {
    cin >> v[i].F.F >> v[i].F.S;
    v[i].S = i + 1;
  }
  
  sort(v.begin(), v.end());
  memset(last, -1, sizeof last);
  for (int i = 0; i < n; ++i) {
    dp[i] = (w < v[i].F.F) && (h < v[i].F.S);
    last[i] = dp[i] ? i : -1;
  }
  int ans = 0, start = -1;
  for (int i = 1; i < n; ++i) {
    for (int j = i - 1; j >= 0; --j) {
      if (dp[j] && v[j].F.F < v[i].F.F && v[j].F.S < v[i].F.S) {
        if (dp[j] + 1 > dp[i]) {
          dp[i] = 1 + dp[j];
          last[i] = j;
          if (dp[i] > ans) {
            ans = dp[i];
            start = i;
          }
        }
      }
    }
  }
  
  if (!ans) {
    rep(i,0,n-1) {
      if (w < v[i].F.F && h < v[i].F.S) return cout << "1\n" << i+1 << '\n',0;
    }
    return cout << 0 << '\n',0;
  }
  cout << ans << '\n';
  stack<int> st;
  st.push(start);
  while (start != last[start]) {
    start = last[start];
    st.push(start);
  } 
  while (not st.empty()) {
    cout << v[st.top()].S << ' ';
    st.pop();
  }
  return 0;
}