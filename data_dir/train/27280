	//     . .. ... ..... be naame khodaa ..... .... ... .. .     \\

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

inline int in(){int x, y; y = scanf("%d", &x); return x;}

const int N = 300003;

vector <int> g[N];
ll a[N], dp[N], p[N], n;

ll findBest(int v, int dad = -1) {
	dp[v] = a[v];
	for(int u : g[v])
		if(u != dad)
			dp[v] += max(0LL, findBest(u, v));
	return dp[v];
}

ll bestCnt(int v, ll t, int dad = -1) {
	dp[v] = a[v];
	ll cnt = 0;
	for(int u : g[v])
		if(u != dad) {
			cnt += bestCnt(u, t, v);
			dp[v] += max(0LL, dp[u]);
		}
	assert(dp[v] <= t);
	if(dp[v] == t) {
		cnt++;
		dp[v] = 0;
	}
	return cnt;
}

bool cmp(int i, int j) { return a[i] > a[j]; }

int main() {
	cin >> n;
//	n = 3e5;
	for(int i = 0; i < n; i++)
//		a[p[i] = i] = (-1e9 + rand() % 10000);
		a[p[i] = i] = in();
	for(int i = 1; i < n; i++) {
//		int u = i;
//		int v = i - 1;
		int u = in() - 1;
		int v = in() - 1;
		g[u].push_back(v);
		g[v].push_back(u);
	}
	findBest(0);
	ll best = *max_element(dp, dp + n);
		int cnt = bestCnt(0, best);
		cout << best * cnt << " " << cnt << endl;
		return 0;
	{
		ll sum = 0, bSum = best, bCnt = 1;
		sort(p, p + n, cmp);
		for(int i = 0; i < n; i++) {
			sum += a[p[i]];
//			cerr << p[i] << " " << sum << endl;
			if(bSum * (i + 1)  <= sum * bCnt) {
				bSum = sum;
				bCnt = i + 1;
			}
		}
		cout << bSum << " " << bCnt << endl;
	}
}

