#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((ll)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
#define eps 1e-9
typedef pair<int, int> II;
typedef pair<ll, ll> LL;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI (2 * acos((ld)0))
#define linf (1ll << 60)
#define y1 y32432
#define y0 y435346

#define maxn 315

int dr[8] = {-1, -1, 0, 1, 1, 1, 0, -1};
int dc[8] = {0, 1, 1, 1, 0, -1, -1, -1};

int n, x[maxn];
bool f[maxn][maxn][33][8];
bool a[maxn][maxn];

int main()
{
//    freopen("in.txt", "r", stdin);
//    freopen("out.txt", "w", stdout);
    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n;
    For(i, 1, n) cin >> x[i];
    ms(a, 0); ms(f, 0);
    f[157][157][0][0] = 1;

    for(int t = 0; t < n; t++) Rep(i, maxn) Rep(j, maxn) Rep(h, 8) if(f[i][j][t][h]){
    	int r = i, c = j;
    	For(d, 1, x[t + 1]){
    		r += dr[h];
    		c += dc[h];
    		a[r][c] = 1;
    	}
    	int u = h + 1;
    	if(u == 8) u = 0;
    	int v = h - 1;
    	if(v == -1) v = 7;
    	f[r][c][t + 1][u] = 1;
    	f[r][c][t + 1][v] = 1;
    }

    int res = 0;
    Rep(i, maxn) Rep(j, maxn) res += a[i][j];
    cout << res << endl;

    return 0;
}
