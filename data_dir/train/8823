//IOI 2021
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 2 * 100 * 1000 + 17, mod = 1e9 + 7;

int pw(int a, int b) {
	int res = 1;
	while (b) {
		if (b & 1)
			res = (1LL * res * a) % mod;
		a = (1LL * a * a) % mod;
		b >>= 1;
	}
	return res;
}


int n, dp[MAXN], h, w, fac[MAXN], ifac[MAXN];
pii cor[MAXN];

void prep() {
	fac[0] = 1;
	for (int i = 1; i < MAXN; i++)
		fac[i] = (1LL * fac[i - 1] * i) % mod;
	for (int i = 0; i < MAXN; i++)
		ifac[i] = pw(fac[i], mod - 2);
}

int C(int a, int b) {
	return (1LL * fac[a] * ((1LL * ifac[b] * ifac[a - b]) % mod)) % mod;
}


int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	prep();
	cin >> h >> w >> n;
	for (int i = 1; i <= n; i++)
		cin >> cor[i].ff >> cor[i].ss;
	n++;
	cor[n] = {h, w};
	sort(cor + 1, cor + n + 1);
	dp[1] = C(cor[1].ff + cor[1].ss - 2, cor[1].ss - 1);
	for (int i = 2; i <= n; i++) {
		dp[i] = C(cor[i].ff + cor[i].ss - 2, cor[i].ss - 1);
		for (int j = 1; j < i; j++) {
			if (cor[i].ff < cor[j].ff || cor[i].ss < cor[j].ss)
				continue;
			int dif1 = abs(cor[i].ff - cor[j].ff), dif2 = abs(cor[i].ss - cor[j].ss);
			(dp[i] -= (1LL * dp[j] * C(dif1 + dif2, dif1)) % mod) %= mod;
		}
	}
	dp[n] += mod;
	cout << dp[n] % mod << endl;
	return 0;
}
