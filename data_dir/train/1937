#include <iostream>
#include<memory.h>
#include <map>
#include <string>
#include <iomanip>
#include <fstream>
#include <vector>
#include <algorithm>
#include <stack>
#include <queue>
#include <cmath>
#include <set>
using namespace std;

/*
*/

int main()
{
	int w, h, n;
	scanf("%d %d %d",&w, &h,&n);
	set<pair<int, int> > w1, w2, h1, h2;
	w1.insert(make_pair(0, w));
	w2.insert(make_pair(w, 0));
	h1.insert(make_pair(0, h));
	h2.insert(make_pair(h, 0));
	for (int i = 0; i < n; i++)
	{
		char ch;
		scanf(" %c",&ch);
		int x;
		scanf("%d",&x);
		set<pair<int, int> > ::iterator it;
		if (ch == 'V')
		{
			it = w1.upper_bound(make_pair(x, -1));
			it--;
			pair<int, int> f = *it;
			w1.erase(it);
			w1.insert(make_pair(f.first, x-f.first));
			w1.insert(make_pair(x, f.second-(x-f.first)));
			swap(f.first, f.second);
			w2.erase(f);
			w2.insert(make_pair(x-f.second,f.second));
			w2.insert(make_pair(f.first-(x-f.second), x));
		}
		else
		{
			it = h1.upper_bound(make_pair(x, -1));
			it--;
			pair<int, int> f = *it;
			h1.erase(it);
			h1.insert(make_pair(f.first, x-f.first));
			h1.insert(make_pair(x, f.second-(x-f.first)));
			swap(f.first, f.second);
			h2.erase(f);
			h2.insert(make_pair(x-f.second, f.second));
			h2.insert(make_pair(f.first-(x-f.second), x));
		}
		it = w2.end();
		it--;
		long long r = (*it).first;
		it = h2.end();
		it--;
		r *= (*it).first;
		printf("%I64d\n",r);
	}
}