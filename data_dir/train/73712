#include <iostream>
#include <algorithm>
#include <vector>
#include <numeric>
#include <string>
#include <tuple>
#include <set>
#include <assert.h>
using namespace std;

typedef long long i64;
const int NMAX = 300010;
i64 sp[NMAX];
i64 val[NMAX];
i64 ans, to_rem;

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n;
	cin >> n;

	for (int i = 1; i <= n; i++)
		cin >> val[i], sp[i] = sp[i - 1] + val[i];

	for (int i = n; i >= 1; i--) {
		if (to_rem > sp[i - 1]) {
			i64 dif = to_rem - sp[i - 1];
			assert(dif <= val[i]);
			val[i] -= dif;
			to_rem -= dif;
		}

		i64 addmax = sp[i - 1] - to_rem;
		addmax = min(addmax, val[i] / 2);

		ans += addmax;
		to_rem += addmax;
		val[i] -= 2 * addmax;

		ans += val[i] / 3;
		val[i] %= 3;

		
		if (val[i] == 2 && to_rem + 1 <= sp[i - 1])
			ans++, to_rem++;
		else
			to_rem = max(0LL, to_rem - val[i]);
	}

	assert(to_rem == 0);

	cout << ans << '\n';

	return 0;
}
