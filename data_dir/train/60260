#include<bits/stdc++.h>
#define rep(i,n) for(int i=0;i<(int)n;i++)
#define all(c) (c).begin(),(c).end()
#define mp make_pair
#define pb push_back
#define dbg(...) do{cerr<<__LINE__<<": ";dbgprint(#__VA_ARGS__, __VA_ARGS__);}while(0);

using namespace std;

namespace std{template<class S,class T>struct hash<pair<S,T>>{size_t operator()(const pair<S,T>&p)const{return ((size_t)1e9+7)*hash<S>()(p.first)+hash<T>()(p.second);}};template<class T>struct hash<vector<T>>{size_t operator()(const vector<T> &v)const{size_t h=0;for(auto i : v)h=h*((size_t)1e9+7)+hash<T>()(i)+1;return h;}};}
template<class T>ostream& operator<<(ostream &os, const vector<T> &v){os<<"[ ";rep(i,v.size())os<<v[i]<<(i==v.size()-1?" ]":", ");return os;}template<class T>ostream& operator<<(ostream &os,const set<T> &v){os<<"{ "; for(const auto &i:v)os<<i<<", ";return os<<"}";}
template<class T,class U>ostream& operator<<(ostream &os,const map<T,U> &v){os<<"{";for(const auto &i:v)os<<" "<<i.first<<": "<<i.second<<",";return os<<"}";}template<class T,class U>ostream& operator<<(ostream &os,const pair<T,U> &p){return os<<"("<<p.first<<", "<<p.second<<")";}
void dbgprint(const string &fmt){cerr<<endl;}template<class H,class... T>void dbgprint(const string &fmt,const H &h,const T&... r){cerr<<fmt.substr(0,fmt.find(","))<<"= "<<h<<" ";dbgprint(fmt.substr(fmt.find(",")+1),r...);}
typedef long long ll;typedef vector<int> vi;typedef pair<int,int> pi;const int inf = (int)1e9;const double INF = 1e12, EPS = 1e-9;

const int N = 100000;
int n, m, p[N], ng[N], in[N];
vector<vi> e, e2;
vector<pi> ans;

void rec(int c, int d = 0){
	if(ng[c] && e2[c].size()){
		cout << -1 << endl;
		exit(0);
	}
	for(int i : e2[c]){
		//dbg(i);
		for(int j = i; j != c; j = p[j]){
			//dbg(j);
			ng[j] = 1;
		}
	}
	if(e2[c].size()) ans.pb(mp(-d, c));
	for(int i : e[c]) rec(i, d + 1);
}
int main(){
	cin.tie(0); cin.sync_with_stdio(0);
	
	cin >> n >> m;
	e.resize(n);
	e2.resize(n);
	
	rep(i, m){
		int a, b; cin >> a >> b; a--; b--;
		in[b]++;
		e[a].pb(b);
		p[b] = a;
	}
	rep(i, n){
		int to; cin >> to; to--;
		e2[to].pb(i);
	}
	rep(i, n) if(!in[i]) rec(i);
	//reverse(all(ans));
	sort(all(ans));
	assert(ans.size());
	//while(ans.size() < n) ans.pb(ans.back());
	cout << ans.size() << endl;
	rep(i, ans.size()) cout << ans[i].second + 1 << endl;
	
	return 0;
}