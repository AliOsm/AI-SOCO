#define _CRT_SECURE_NO_WARNINGS
#include<bits/stdc++.h>
using namespace std;

#define V vector
#define all(v)  ((v).begin()), ((v).end())
#define allr(v) ((v).rbegin()), ((v).rend())
#define clr(v, d) memset(v, d, sizeof(v))
//ios_base::sync_with_stdio(0);cin.tie(0); cout.tie(0);
int dx[] = { 0, -1, 0, 1, 1, -1, 1, -1 };
int dy[] = { -1, 0, 1, 0, 1, -1, -1, 1 };
typedef unsigned long long          ull;
typedef long long                   ll;
typedef long double                 LD;
int n , m , t;
V<int> R;
map<tuple<int, int, int>, int> mp;
int go(int i, int rem , bool taken){
	if (i == n){
		if (rem == 0 && taken) return 1;
		return 2;
	}
	int & ret = mp[make_tuple(i, rem, taken)];
	if (ret != 0) return ret;
	ret = 2;
	if (go(i + 1, (rem + R[i]) % m, 1) == 1) return ret = 1;
	if (go(i + 1, rem, taken) == 1) return ret = 1;
	return ret;
}
int main()
{
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	while (cin >> n >> m){
		R.resize(n);
		for (int i = 0; i < n; i++){
			cin >> R[i];
		}
		if (go(0, 0,0) == 1) cout << "YES" << endl;
		else cout << "NO" << endl;
		R.clear();
	}

	return 0;
}
