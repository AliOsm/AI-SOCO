#include <bits/stdc++.h>
using namespace std;
int a,s,d[100002],f[100002],g[100002][3],h,j,k,l,i,n,m;

struct tre{
    int val;
    tre* L;
    tre* R;
    tre(){
        val=0;
        L=NULL;
        R=NULL;
    }
};


void add(tre *&it,int l,int r,int lf,int rg,int vol){
    if(!it) it=new tre();
    
    if(l>=rg || r<=lf) return;
    if(l>=lf && r<=rg) {it->val=max(it->val,vol);return;}
    if(l>=r-1) return;
    add(it->L,l,(l+r)/2,lf,rg,vol);
    add(it->R,(l+r)/2,r,lf,rg,vol);
    return;
}

int fnd(tre *&it,int l,int r,int idx){
    
    if(!it) return 0;
    if(l>idx || r<=idx) return 0;
    if(l>=r-1) return it->val;
    int jm=0;
    if(l<=idx && r>idx) jm=it->val;
   
    return max(max(fnd(it->L,l,(l+r)/2,idx),jm),fnd(it->R,(l+r)/2,r,idx));
   
}

int main(){
    cin>>n>>m;
    tre *root=new tre();
    for(i=1;i<=n;i++){
        scanf("%d",&d[i]);
    }
   
    for(a=1;a<=n;a++){
        scanf("%d",&f[a]);
    }
   
    for(i=1;i<=m;i++){
        cin>>a;
        if(a==1){
            scanf("%d%d%d",&g[i][0],&g[i][1],&g[i][2]);
            //cout<<g[j][0]<<" "<<g[j][1]<<" "<<g[j][2]<<endl;
            add(root,1,n+1,g[i][1],g[i][1]+g[i][2],i);
        }
       
        else {
            cin>>a;
            k=fnd(root,1,n+1,a);//cout<<k<<" "<<f[1]<<"**";
            if(k==0) cout<<f[a]<<endl; else
                cout<<d[g[k][0]+a-g[k][1]]<<endl;
        }
    }
}