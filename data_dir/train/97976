#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
#include <bits/stdc++.h>

#define all(c) c.begin(),c.end()
#define ll long long
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define mod 1000000007
#define PI 3.14159265
#define pll pair<ll, ll>
using namespace std;

typedef unsigned long long ull;

bool is_prime(ll n) {
    if (n <= 1) {
		return false;
	}
    for (ll i = 2; i * i <= n; ++i) {
            if (n % i == 0) {
                  return false;
            }
    }
    return true;
}

inline ll getPow(ll a,ll b){
    ll res = 1ll,tp = a;
    while (b){
       if (b&1ll) {
           res *= tp;
           res %= 998244353;
       }
       tp *= tp;
       tp %= 998244353;
       b >>= 1ll;
    }
    return res;
}

ll coso(ll x1, ll y1, ll x2, ll y2, ll x3, ll y3) {
    return abs((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1));
}

inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}

void ok() {
    puts("YES");
    exit(0);
}

void no() {
    puts("NO");
    exit(0);
}

// please, accepted!
const ll N = 1111111;
 struct item{
      ll cur_value;
      ll x, y;

};
int main()
{
  //  ios_base::sync_with_stdio(false);
  //  cin.tie(0);cout.tie(0);
    ll n = nxt(), m = nxt();
    string a, b;
    cin >> a >> b;
    ll mx = max(n, m);
    while(a.size() < mx) {
          a = '0' + a;
    }
    while(b.size() < mx) {
          b = '0' + b;
    }
    vector<ll> preff_b(mx, 0);
    for(int i = 0; i < mx; i++) {
           preff_b[i] = b[i] - '0';
    }
    for(int i = 1; i < mx; i++) {
           preff_b[i] += preff_b[i - 1];
    }
    ll pw = mx;
    ll ans = 0;
    for(int i = 0; i < mx; i++) {
           pw--;
           if(a[i] == '1') {
               ans += getPow(2LL, pw) * preff_b[i] % 998244353;
               ans %= 998244353;
           }
    }
    cout << ans % 998244353;
    return 0;
}
