#include <bits/stdc++.h>
using namespace std;

const int MAXN = 100005;
vector<int> g[MAXN];
int p[MAXN], s[MAXN];
long long ans;

void DFS(int u)
{
    if(s[u] == -1) 
    {   
        s[u] = INT_MAX;
        for(auto &v : g[u])
            s[u] = min(s[u], s[v]);
        if(s[u] == INT_MAX)
            s[u] = s[p[u]];
    }   
        
    if(s[u] < s[p[u]])
        ans = -1; 
        
    if(ans == -1) 
        return;

    ans += s[u] - s[p[u]];

    for(auto &v : g[u])
        DFS(v);

    return;
}

int main()
{
    int n;

    scanf("%d", &n);
    for(int i = 2; i <= n; ++i)
    {   
        scanf("%d", &p[i]);
        g[p[i]].push_back(i);
    }   
    for(int i = 1; i <= n; ++i)
        scanf("%d", &s[i]);
    DFS(1);
    printf("%lld\n", ans);
        
    return 0;
}
