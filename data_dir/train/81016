// Problem name :
// Algorithm :
// Contest/Practice :
// Source :
// Comment :
// Date :

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include<assert.h>
#define mod 1000000007
#define MAX 100000
#define long long ll
using namespace std;

void memset1(vector<int>&v,int s,int value)
{
    for(int i=0;i<s;i++)
        v[i]=value;
}

void memset2(vector<vector<int> >&v,int s1,int s2,int value)
{
    for(int i=0;i<s1;i++)
        for(int j=0;j<s2;j++)
            v[i][j]=value;
}

int fast_pow(int n , int p)
{
    if(p==1) return n;
    if(p%2)
    {
        int g=( (n%mod) * (fast_pow(n,p-1)%mod) ) % mod;
        return g;
    }
    else
    {
        int g=fast_pow(n,p/2);
        g=( (g%mod) * (g%mod) ) % mod;
        return g;
    }
}

#ifndef ONLINE_JUDGE
#  define print(x) cout<<x<<endl;
#else if
#  define print(x) 0;
#endif

vector<bool>isprime(MAX+5,false);

vector<int>prime;

void sieve()
{
    isprime[0]=isprime[1]=true;
    for(int i=2;i<=sqrt(MAX);i++)
    {
        if(isprime[i]==false)
        {
            for(int j=2;i*j<=MAX;j++)
                isprime[i*j]=true;
        }
    }
    for(int i=0;i<=MAX;i++)
        if(isprime[i]==false)
            prime.push_back(i);
}

int main()
{
    sieve();
    int n;
    vector<int>mark(100000+7);
    while(scanf("%d",&n)==1)
    {
        int num;
        vector<int>pos;
        vector<int>value(n+1);
        memset1(mark,100001,0);
        for(int i=1;i<=n;i++)
        {
            scanf("%d",&value[i]);
            mark[value[i]]=i;
        }
        vector<pair<int,int> >ans;
        pair<int,int> p;

        for(int i=1;i<=n;i++)
        {
            if(value[i]!=i)
            {//printf("******** %d\n",i);
                int x=mark[i];//print(x);
                for(int j=mark[i]-i+1;j>=1;j--)
                {
                    if(isprime[j]==false)
                    {
                        swap(value[x],value[x-j+1]);//print(x-j+1)print(value[x]) print(value[x-j+1])
                        ans.push_back(make_pair(x-j+1,x));
                        mark[value[x]]=x;
                        mark[value[x-j+1]]=x-j+1;

                        //system("pause");
                        i--;
                        break;
                    }
                }
            }
        }
        printf("%d\n",ans.size());
        for(int i=0;i<ans.size();i++)
            printf("%d %d\n",ans[i].first,ans[i].second);
    }
    return 0;
}
