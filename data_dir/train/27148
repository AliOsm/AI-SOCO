#include<cstdio>
#include<vector>
using  namespace std;
const int maxn = 200010;
struct Qry {
    int l,id;
    Qry() {}
    Qry(int l,int id) {
        this->l = l;
        this->id = id;
    }
};
vector<int> ss[maxn];
vector<Qry> qq[maxn];
int n , m , pos[maxn] , ans[maxn] , c[maxn];
void update(int x) {
    for(;x<=n;x+=x&-x) c[x]++;
}
int sum(int x){
    int ans = 0;
    for(;x;x-=x&-x) ans+=c[x];
    return ans;
}
int main() {
    scanf("%d%d",&n,&m);
    for(int i = 1,j; i <= n; i++) scanf("%d",&j),pos[j]=i;
    for(int i = 1; i <= n; i++) {
        for(int j = 2*i; j <= n; j += i) {
            int l = pos[i] , r = pos[j];
            if(l > r) swap(l,r);
            ss[r].push_back(l);
        }
    }
    for(int i = 0,l,r; i < m; i++) {
        scanf("%d%d",&l,&r);
        qq[r].push_back(Qry(l,i));
    }
    for(int i = 1,tot=0; i <= n; i++) {
        for(vector<int>::iterator it = ss[i].begin();it!=ss[i].end();it++) {
            tot++;
            update(*it);
        }
        for(vector<Qry>::iterator it = qq[i].begin();it!=qq[i].end();it++) {
            ans[it->id] = i-it->l+1+tot-sum(it->l-1);
        }
    }
    for(int i = 0; i < m; i++) printf("%d\n",ans[i]);
    return 0;
}