#include<bits/stdc++.h>
using namespace std;


const int N = 2005, INF = 1e9;


int n, k, ans[N];
string s[N];
vector < string > q;


inline int get_val(const string &s, const string &t){
    int res = 0;
    for(int i = 0; i < 7; i++){
        if(s[i] == '0' && t[i] == '1'){
            res += 1;
        }
    }
    return res;
}


inline bool check(const string &s, const string &t){
    for(int i = 0; i < 7; i++){
        if(s[i] == '1' && t[i] == '0'){
            return false;
        }
    }
    return true;
}
inline int get_min(int pos){
    int res = 0;
    for(int i = pos; i <= n; i++){
        int mn = INF;
        for(auto it : q){
            if(check(s[i], it)){
                mn = min(mn, get_val(s[i], it));
            }
        }
        res += mn;
    }
    return res;
}
inline int get_max(int pos){
    int res = 0;
    for(int i = pos; i <= n; i++){
        int mx = -INF;
        for(auto it : q){
            if(check(s[i], it)){
                mx = max(mx, get_val(s[i], it));
            }
        }
        res += mx;
    }
    return res;
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    q.push_back("1110111");
    q.push_back("0010010");
    q.push_back("1011101");
    q.push_back("1011011");
    q.push_back("0111010");
    q.push_back("1101011");
    q.push_back("1101111");
    q.push_back("1010010");
    q.push_back("1111111");
    q.push_back("1111011");
    cin >> n >> k;
    for(int i = 1; i <= n; i++){
        cin >> s[i];
        bool flg = false;
        for(auto it : q){
            if(check(s[i], it)){
                flg = true;
            }
        }
        if(!flg){
            return cout << "-1", 0;
        }
    }
    for(int i = 1; i <= n; i++){
        if(i == n){
            bool flg = false;
            for(int j = 9; j >= 0; j--){
                auto it = q[j];
                if(check(s[i], it) && get_val(s[i], it) == k){
                    ans[i] = j;
                    flg = true;
                    break;
                }
            }
            if(!flg){
                return cout << "-1", 0;
            }
        }
        else{
            int mn = get_min(i + 1),
                mx = get_max(i + 1);
            bool flg = false;
            for(int j = 9; j >= 0; j--){
                auto it = q[j];
                if(check(s[i], it)){
                    int val = get_val(s[i], it);
                    if(mn <= k - val && k - val <= mx){
                        ans[i] = j;
                        k -= val;
                        flg = true;
                        break;
                    }
                }
            }
            if(!flg){
                return cout << "-1", 0;
            }
        }
    }
    for(int i = 1; i <= n; i++){
        cout << char('0' + ans[i]);
    }
}
