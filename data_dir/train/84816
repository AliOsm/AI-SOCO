#include<bits/stdc++.h>
using namespace std;
const int N = 100 + 5;
int gr[N][N], dis[N][N], mark[N], n;
vector<int> v, ans;
void bfs(int v) {
	queue<int> q;
	mark[v] = 1;
	q.push(v);
	while(!q.empty()) {
		int x = q.front();
		q.pop();
		for (int i = 0; i < n; i++) {
			if (gr[x][i] && !mark[i]) {
				q.push(i);
				dis[v][i] = dis[v][x] + 1;
				mark[i] = 1;
			}
		}
	}
	return;
}
int main() {
	cin >> n;
	for (int i = 0; i < n; i++) {
		string s;
		cin >> s;
		for (int j = 0; j < s.size(); j++) {
			if (s[j] == '1')
				gr[i][j] = 1;
		}
	}
	int m;
	pair<int, int> lst;
	cin >> m;
	for (int i = 0; i < m; i++) {
		int x;
		cin >> x;
		x--;
		v.push_back(x);
		lst.first = x, lst.second = i;
	}
	for (int i = 0; i < n; i++) {
		bfs(i);
		memset(mark, 0, sizeof(mark));
	}
/*	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cout << dis[i][j] << " ";
		}
		cout << endl;
	}
	cout << endl;*/
	ans.push_back(lst.first);
	for (int i = (int) v.size() - 3; i >= 0; i--) {
//		cout << "i = " << i << " v = " << v[i] << " : " << dis[v[i]][lst] << endl;
		if (dis[v[i]][lst.first] < lst.second - i)
			ans.push_back(v[i + 1]), lst.first = v[i + 1], lst.second = i + 1;
	}
	ans.push_back(v[0]);
	cout << ans.size() << endl;
	for (int i = (int) ans.size() - 1; i >= 0; i--) {
		cout << ans[i] + 1 << " ";
	}
	return 0;
}
