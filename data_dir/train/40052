#include <bits/stdc++.h>

//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>

//using namespace __gnu_pbds;
using namespace std;

//template<typename T>
//using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef vector<int> vi;
typedef long long ll;

#define pb push_back
#define inf 0x3f3f3f3f
#define all(v) (v).begin() , (v).end()
#define ones(n) __builtin_popcount(n)
#define ONES(n) __builtin_popcountll(n)

int di[] = {0, 0, 1, -1, 1, 1, -1, -1};
int dj[] = {1, -1, 0, 0, -1, 1, 1, -1};

const int N = 1e5 + 5 , M = 21e5 , MOD = 1e9 + 7;
bool vis[M];
int ans[N] , first[M];
vi info;

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
#endif
    int n , q;
    scanf("%d%d" , &n , &q);


    memset(first , 63 , sizeof first);
    vis[0] = 1;
    first[0] = 0;
    info.pb(0);

    int ways = 1 , x;
    for (int i = 0 ;i < n ;i++) {
        scanf("%d" , &x);
        if (vis[x]) {
            ways = (ways * 2ll) % MOD;
        } else {
            int sz = info.size();
            for (int j = 0 ;j < sz ;j++)
                info.pb(info[j] ^ x) , vis[info[j] ^ x] = 1 , first[info[j] ^ x] = i;
        }
        ans[i] = ways;
    }

    int l ;
    while (q--) {
        scanf("%d%d" , &l , &x);
        l--;
        printf("%d\n" , first[x] <= l ? ans[l] : 0);
    }
}