#include <vector>
#include <algorithm>
#include <cstdio>
#include <iostream>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <cassert>
#include <string>
#include <cstring>
#include <unordered_map>
#include <unordered_set>

using namespace std;

inline int getColor(char c) {
    return (c == 'B') ? 0 : 1;
}

int main(int argc, char **argv) {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    int n;
    string s;
    cin >> n >> s;
    int min_moves = INT_MAX;
    vector<int> moves;
    for (int need = 0; need < 2; ++need) {
        int color = getColor(s[0]);
        vector<int> v;
        for (int i = 0; i + 1 < n; ++i) {
            if (color == need)
                color = getColor(s[i + 1]);
            else {
                v.push_back(i);
                color = getColor(s[i + 1]) ^ 1;
            }
        }
        if (need == color) {
            if ((int) v.size() < min_moves) {
                min_moves = v.size();
                moves = v;
            }
        }
    }
    if (min_moves == INT_MAX)
        puts("-1");
    else {
        printf("%zu\n", moves.size());
        for (size_t i = 0; i < moves.size(); ++i)
            printf("%s%d", i ? " " : "", moves[i] + 1);
        puts("");
    }
    return 0;
}