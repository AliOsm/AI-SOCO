#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned


char a[15][15][15];
int dx[]={0,0,0,0,1,-1};
int dy[]={0,0,1,-1,0,0};
int dz[]={1,-1,0,0,0,0};
int was[15][15][15];
int p[1010][3];
int main()
{
#ifdef Fcdkbear
    freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    double beg=clock();
#endif
	
	int n,m,k;
	scanf("%d%d%d",&k,&n,&m);
	FOR(i,0,k)
	{
		FOR(j,0,n)
			scanf("%s",&a[i][j]);
	}
	int x,y;
	scanf("%d%d",&x,&y);
	x--; y--;
	was[0][x][y]=1;
	int res=1;
	p[0][0]=0;
	p[0][1]=x;
	p[0][2]=y;
	int l=0,r=0;
	while (l<=r)
	{
		int curz=p[l][0];
		int curx=p[l][1];
		int cury=p[l][2];
		l++;
		FOR(it,0,6)
		{
			int nx=curx+dx[it];
			int ny=cury+dy[it];
			int nz=curz+dz[it];
			if ((nx>=0) && (nx<n) && (ny>=0) && (ny<m) && (nz>=0) && (nz<k) && (a[nz][nx][ny]=='.') && (was[nz][nx][ny]==0))
			{
				res++;
				was[nz][nx][ny]=1;
				r++;
				p[r][0]=nz;
				p[r][1]=nx;
				p[r][2]=ny;
			}
		}
	}
	cout<<res<<endl;
#ifdef Fcdkbear
    double end=clock();
    fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
	return 0;
}