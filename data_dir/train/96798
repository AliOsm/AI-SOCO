#include<bits/stdc++.h>
#define MEM(dp,i) memset(dp,i,sizeof(dp))
#define F first
#define C continue
#define pb push_back
#define S second
#define R return
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef double D;
const int MX=509;
const ll inf=(1ll<<60);
const ll mod=1e9+7;
ll n,m,NO,sum,k;
vector<ll>v[MX];
vector<int>a,b,c;
set<int>s[MX];
bool vis[MX];
char ans[MX];
void dfs(int x,int p){
    if(vis[x])R;
    vis[x]=1;
    a.push_back(x);
    for(auto nxt:v[x]){
        if(nxt==p)C;
        dfs(nxt,x);
    }
}
int main(){
    cin>>n>>m;
    for(int i=0;i<m;i++){
        ll a,b;
        cin>>a>>b;
        v[a].pb(b);
        v[b].pb(a);
        s[a].insert(b);
        s[b].insert(a);
    }
    for(int i=1;i<=n;i++)if(v[i].size()==n-1){vis[i]=1;b.push_back(i);}
    for(int i=1;i<=n;i++)if(!vis[i]){dfs(i,-1);break;}
    for(int i=1;i<=n;i++)if(!vis[i])c.push_back(i);
    for(int i=0;i<a.size();i++)ans[a[i]]='a';
    for(int i=0;i<b.size();i++)ans[b[i]]='b';
    for(int i=0;i<c.size();i++)ans[c[i]]='c';
    for(int i=1;i<=n;i++){
        for(int j=1;j<n;j++){
            if(i==j)C;
            ll A=s[i].count(j);
            if(A)if(abs(ans[i]-ans[j])>1){puts("No");R 0;}
            if(!A)if(abs(ans[i]-ans[j])<1){puts("No");R 0;}
        }
    }
    puts("Yes");
    for(int i=1;i<=n;i++)cout<<ans[i];
}
