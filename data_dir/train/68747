#define _CRT_SECURE_NO_WARNINGS 1
#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <cstdio>
#include <stack>
#include <algorithm>
#include <numeric>
#include <sstream>
#include <cmath>
#include<cstring>
#include<iomanip>
#include<queue>
#include<functional>
#include<iterator>
#include<istream>
using namespace std;
#define pi 3.141592653589793
#define ii pair<int,int>
#define llll pair<ll,ll>
#define ll long long
#define p10(ans) printf("%0.10f\n", ans);
#define pr(ans) printf("%d\n", ans);
#define scc(x)  scanf(" %c", &c);
#define pll(ans) printf("%lld\n", ans);
#define scll(x) scanf("%lld",&x);
#define sci(x)  scanf("%d",&x);
#define pc(ans)  printf("%c", ans);
#define ps(s)    printf("%s\n", s.c_str());
#define mod 1000000007
#define mem(arr,d) memset(arr,d,sizeof(arr))
#define ninf -10000000000000000;
#define inf 10000000000000000;
/*ll power(ll base, ll exp) {
	base %= mod;
	ll result = 1;
	while (exp > 0) {
		if (exp & 1)
			result = (result * base) % mod;
		base = (base * base) % mod;
		exp >>= 1;
	}
	return result;
}
*/
/*long long gcd(long long a, long long b)
{
	if (b == 0)return a; return gcd(b, a%b);
}
long long lcm(long long a, long long b) {
	return  a * b / gcd(a, b);
}
*/
int arr[510][510];
set<ll>seet;
set<ll>seet2;
int main()
{
	int n, row, col, dig1 = 0, dig2 = 0;
	sci(n);
	for (int i = 1; i <= n; ++i)
	{
		for (int j = 1; j <= n; ++j)
		{
			sci(arr[i][j]);
			if (arr[i][j] == 0)
			{
				row = i; col = j;
				if (i == j)dig1 = 1;
			 if ((n - i + 1) == j)dig2 = 1;
			}
		}
	}
	if (n == 1)
	{
		cout << "1" << endl;
	}
	else {
		ll sum = 0; ll ans1, ans2;
		for (int i = 1; i <= n; ++i)
		{
			for (int j = 1; j <= n; ++j)sum += arr[i][j];
			if (i != row) { seet.insert(sum); ans1 = sum; }
			else { seet2.insert(sum); ans2 = sum; }
			sum = 0;
		}
		sum = 0;
		for (int i = 1; i <= n; ++i)
		{
			for (int j = 1; j <= n; ++j)sum += arr[j][i];
			if (i != col)seet.insert(sum);
			else seet2.insert(sum);
			sum = 0;
		}
		sum = 0;
		for (int i = 1; i <= n; ++i)sum += arr[i][i];
		if (dig1)seet2.insert(sum);
		else seet.insert(sum);
		sum = 0;
		for (int i = 1; i <= n; ++i)sum += arr[i][n - i + 1];
		if (dig2)seet2.insert(sum);
		else seet.insert(sum);
		if (ans1 == ans2)printf("-1\n");
		else if (seet.size() > 1)printf("-1\n");
		else if (seet2.size() > 1)printf("-1\n");
		else
		{
			if ((ans1 - ans2) > 0)cout << ans1 - ans2 << endl;
			else cout << "-1" << endl;
		}
	}
		return 0;
}