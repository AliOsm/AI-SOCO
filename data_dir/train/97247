#include <bits/stdc++.h>
#define err(args...) {}
#ifdef DEBUG
#include "_debug.cpp"
#include "callable.hpp/callable.hpp"
#endif
#define endl '\n'
using namespace std;
using ll = long long;
#define N 100'000
struct edge { int u, v, w; };
vector<edge> adj[N+1];
int d[N+1];
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n;
    cin >> n;
    ll sum_edges = 0;
    for(int i = 1; i < n; i++) {
        int u, v, w;
        cin >> u >> v >> w;
        adj[u].push_back({u, v, w});
        adj[v].push_back({v, u, w});
        sum_edges += w;
    }
    memset(d, -1, sizeof d);
    d[1] = 0;
    queue<int> q;
    q.push(1);
    while(not q.empty()) {
        int u = q.front();
        q.pop();
        for(edge& e : adj[u]) {
            if(d[e.v] == -1) {
                d[e.v] = d[u] + e.w;
                q.push(e.v);
            }
        }
    }
    ll ans = 2 * sum_edges;
    for(int i = 1; i <= n; i++) {
        ans = min(ans, 2 * sum_edges - d[i]);
    }
    cout << ans << endl;
    return 0;
}
