#include <bits/stdc++.h>

#define fi first
#define se second
#define ll long long

using namespace std;

const int N = 1e6 + 7;
const int M = 22;
const int mod = 1e9 + 7;

int n,q;
int sz[N];
int col[N];
int tin[N];
int dep[N];
int tout[N];
vector < int > v[N];
vector < int > g[N];
vector < int > t[N];
vector < int > lz[N];

void dfs( int x , int p , int cnt )
{
    col[x] = cnt;
    dep[x] = dep[p] + 1;
    sz[cnt] += 1;
    for( int y : v[x] ){
        if( y != p ){
            dfs(y , x , cnt);
        }
    }
}

void upd( int x , int y , int num )
{
    while( x < (int)g[num].size() ){
        g[num][x] += y;
        x += x & -x;
    }
}

int get( int x , int num )
{
    int res = 0;
    while( x > 0 ){
        res += g[num][x];
        x -= x & -x;
    }
    return res;
}

void solve1()
{
    cin >> n >> q;
    for( int i = 1; i < n; i++ ){
        int x,y;
        cin >> x >> y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    int cnt = 0;
    for( auto y : v[1] ){
        dfs( y , 1 , ++cnt );
    }
    int res = 0;
    cnt += 1;
    sz[cnt] = n;
    for( int i = 1; i <= cnt; i++ ){
        g[i].resize(sz[i] + 100);
    }
    for( int i = 1; i <= q; i++ ){
        int tp;
        cin >> tp;
        if( tp == 0 ){
            int v,x,d;
            cin >> v >> x >> d;
            if( v == 1 ){
                res += x;
                upd( 1 , x , cnt );
                upd( d + 1 , -x , cnt );
            }else{
                if( d >= dep[v] )res += x;
                if( d > dep[v] ){
                    int xx = d - dep[v];
                    upd( 1 , x , cnt );
                    upd( xx + 1 , -x , cnt );
                    upd( xx + 1 , x , col[v] );
                    upd( dep[v] + d + 1 , -x , col[v] );
                }else{
                    upd( dep[v] + d + 1 , -x , col[v] );
                    upd( max( 1 , dep[v] - d ) , x , col[v] );
                }
            }
        }else{
            int x;
            cin >> x;
            if( x == 1 ){
                cout << res << "\n";
            }else{
                cout << get( dep[x] , col[x] ) + get( dep[x] , cnt ) << "\n";
            }
        }
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0); srand(time(0));
    //freopen( "input.txt" , "r" , stdin );
    //freopen( "output.txt" , "w" , stdout );

    int cghf = 1;//cin >> cghf;
    while( cghf-- ){
        solve1();
    }
}
