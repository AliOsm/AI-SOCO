#include<iostream>
#include<vector>
#include<sstream>
#include<algorithm>
#include<numeric>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<complex>
#include<set>
#include<map>
#include<queue>
#include<cassert>

using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define rp(i,c) rep(i,(c).size())
#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
#define dbg(x) cerr<<#x<<" = "<<(x)<<endl

typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int,int> pi;
typedef long long ll;

const int inf=1<<28;
const double INF=1e12,EPS=1e-9;

int n, m, ord[2000], len;
string s[2000], t;

int nexts[2001][26];
vi next[2000][26];
pi dp[2001];

void run()
{
	cin >> n;
	rep(i, n) cin >> s[i];
	cin >> m;
	rep(i, m) cin >> ord[i], ord[i]--;
	cin >> t;
	len = t.size();
	
	rep(i, n){
		rep(j, 26){
			next[i][j] = vi(s[i].size() + 1, s[i].size());
			for(int k = (int)s[i].size() - 1; k >= 0; k--){
				if(s[i][k] - 'a' == j) next[i][j][k] = k;
				else next[i][j][k] = next[i][j][k + 1];
			}
		}
	}
	rep(i, 26){
		nexts[m][i] = m;
		for(int j = m - 1; j >= 0; j--){
			if(next[ord[j]][i][0] < s[ord[j]].size()) nexts[j][i] = j;
			else nexts[j][i] = nexts[j + 1][i];
		}
	}
	
	rep(i, len + 1) dp[i] = mp(i ? m : 0, 0);
	int ans = 0;
	
	rep(i, len) for(int j = i; j >= 0; j--) if(dp[j].first < m){
		int a = dp[j].first, b = dp[j].second, c = t[i] - 'a';
		
		if(next[ord[a]][c][b] < s[ord[a]].size()){
			dp[j+1] = min(dp[j+1], mp(a, next[ord[a]][c][b] + 1));
			ans = max(ans, j+1);
		}
		else if(nexts[a+1][c] < m){
			int na = nexts[a+1][c];
			dp[j+1] = min(dp[j+1], mp(na, next[ord[na]][c][0] + 1));
			ans = max(ans, j+1);
		}
	}
	cout << ans << endl;
}

int main()
{
#ifndef ONLINE_JUDGE
	int cs=3;rep(i,cs)
#endif
	run();
}
