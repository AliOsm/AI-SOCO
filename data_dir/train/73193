#include <bits/stdc++.h>

#define pii pair<int, int>
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define ld long double
#define sz(v) int(v.size())
#define all(v) v.begin(), v.end()
#define vec vector<int>
#define dead not_bad
#define bad gooood

#define left not_right
#define y1 what

using namespace std;

const int N = (int) 1e6 + 10;
const int M = (int) 20;
const ll LINF = (ll) 1e18;
const int INF = (int) 1e9 + 7;
const int ALPHA = 26;
const int mod = INF + 2;
const double PI = 3.14159265359;
const ld EPS = (ld) 1e-12;

const int nx[4] = {0, 0, -1, 1};
const int ny[4] = {1, -1, 0, 0};

int x2;
vec v[N];
bool np[N];
int cur[N], g[N];

int main() {
  #define fn "saddle"
  #ifdef witch
      freopen("input.txt", "r", stdin);
      freopen("output.txt", "w", stdout);
  #else
      //freopen(fn".in", "r", stdin);
      //freopen(fn".out", "w", stdout);
  #endif
  cin >> x2;
  for (int i = 2; i < N; i++) {
  	if (!np[i]) {
  		for (int j = i + i; j < N; j += i) {
  			v[j].pb(i);
  			np[j] = 1;
  		}
  		v[i].pb(i);
  	}
  }
  cur[x2] = 1;
  for (int i = 0; i < 2; i++) {
  	for (int j = 3; j < N; j++) {
  		if (cur[j]) {
  			for (auto p : v[j]) {
  				int x2 = max(p, (j / p - 1) * p) + 1;
  				if (x2 <= j) {
  					g[x2]++;
  					g[j + 1]--;
  				}
  			}
  		}
  	}
  	for (int j = 1; j < N; j++) {
  		g[j] += g[j - 1];
  		if (g[j]) cur[j] = 1;
  		else cur[j] = 0;
  	}
  }
  for (int j = 3; j < N; j++) {
  	if (cur[j]) {
  		cout << j;
  		return 0;
  	}	
  }
  return 0;
}