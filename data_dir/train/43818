#include <bits/stdc++.h>
using namespace std;
#define PB push_back
#define ZERO (1e-10)
#define INF int(1e9+1)
#define CL(A,I) (memset(A,I,sizeof(A)))
#define DEB printf("DEB!\n");
#define D(X) cout<<"  "<<#X": "<<X<<endl;
#define EQ(A,B) (A+ZERO>B&&A-ZERO<B)
typedef long long ll;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
#define IN(n) int n;scanf("%d",&n);
#define FOR(i, m, n) for (int i(m); i < n; i++)
#define F(n) FOR(i,0,n)
#define FF(n) FOR(j,0,n)
#define FT(m, n) FOR(k, m, n)
#define aa first
#define bb second
void ga(int N,int *A){F(N)scanf("%d",A+i);}
#define MX 33333
int A[MX],N,B[MX],L,C[MX],M,F,D,X[MX],Y,Z[MX],W;
void pt(int*A,int N){F(N)printf("%d ",A[i]);puts("");}
bool ok(int*B,int L){
    if(L==1)return 1;
    int F=*B,D=B[1]-*B;
    F(L){
        if(B[i]^F)return 0;
        F+=D;
    }
    return 1;
}
bool sx(int*A,int N,int*B,int M){
    if(N>M)return 0;
    F(M)if(A[N-i-1]^B[M-i-1])return 0;
    return 1;
}
void tst(int f,int d,int x=1){
    int Y=0,L=0,M=0,W=0;
    F(N)if(f==A[i])C[M++]=f,f+=d;
        else B[L++]=A[i];
    if(!L)pt(A,N-1),pt(A+N-1,1),exit(0);
    if(ok(B,L))pt(C,M),pt(B,L),exit(0);
    if(x)tst(*B,B[1]-*B,0);
    int F=*B,D=B[1]-*B;
    F(L){
        while(B[i]^F){
            Z[W++]=X[Y++]=F,F+=D;
            if(max(W,Y)>N)return;
        }
        Z[W++]=F,F+=D;
    }
//    if(f==7&&d==1){F(Y)D(X[i])}
    if(sx(C,M,X,Y))pt(C,M-Y),pt(Z,W),exit(0);
}
int main(void){
    scanf("%d",&N),ga(N,A);   
    tst(*A,A[1]-*A);
    tst(*A,A[2]-*A);
    tst(A[1],A[2]-A[1]);
    FT(3,min(N,int(3e3)))tst(*A,A[k]-*A);
    puts("No solution");
    return 0;
}//Yay, realized it is wrong :'(
//Heuristic solves it -_-