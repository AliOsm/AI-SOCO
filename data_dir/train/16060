#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007
#define ll long long int
#define MAX 1105

ll bigMod(ll n,ll r){
    if(r==0) return 1LL;
    ll ret=bigMod(n,r/2)%MOD;
    ret=(ret*ret)%MOD;

    if(r%2==1) ret=(ret*n)%MOD;
    return ret;
}

ll dp[MAX][MAX];
bool vis[MAX][MAX];

ll InvA;
ll InvB;
ll Magic;

ll solve(int Baki,int CountA){
    if(Baki<=0) return 0;
    if(CountA==1000) return Magic;

    if(vis[Baki][CountA]==1) return dp[Baki][CountA];
    vis[Baki][CountA]=1;

    ll ret1=(InvA*solve(Baki,CountA+1))%MOD;
    ll ret2=(InvB*(CountA+solve(Baki-CountA,CountA))%MOD)%MOD;
    return dp[Baki][CountA]=(ret1+ret2)%MOD;
}

int main(){
    int k;
    ll pA,pB;
    cin>>k>>pA>>pB;

    InvA=(bigMod(pA+pB,MOD-2)*pA)%MOD;
    InvB=(bigMod(pA+pB,MOD-2)*pB)%MOD;

    ll Magic1=(1000LL*(pA+pB))%MOD;
    Magic1=(Magic1*bigMod(pB,MOD-2))%MOD;

    ll Magic2=(pA*(pA+pB))%MOD;
    Magic2=(Magic2*bigMod(pB,MOD-2))%MOD;
    Magic2=(Magic2*bigMod(pB,MOD-2))%MOD;

    Magic=(Magic1+Magic2)%MOD;
    Magic=(Magic*InvB)%MOD;

    cout<<solve(k,1)<<endl;
}
