#include <algorithm>
#include <iomanip>
#include <iostream>
#include <numeric>
#include <vector>
using namespace std;

int main() {
  
  ios_base::sync_with_stdio(false); cin.tie(NULL);

  int n, k, m;
  
  while ( cin >> n >> k >> m ) {
  
    vector<int> values(n);
    for ( auto& i : values ) cin >> i;
    
    sort(values.begin(), values.end());

    long long total = accumulate(values.begin(), values.end(), 0LL);
    long long answer = 0;
    int den = n;
    for ( int i = 0; i < n && m >= 0; ++i ) {
      long long can_increment = min((long long)m, (long long)(n - i) * k);
      long long cur_answer = total + can_increment;
      // cout << "i: " << i << " ans: " << answer << " curans: " << cur_answer << " inc: " << can_increment << " items: " << (n - i) << " wasted: " << m << endl;
      if ( cur_answer * den > answer * (n - i) ) {
        answer = cur_answer;
        den = (n - i);
      }
      total -= values[i];
      m--;
    }

    cout << fixed << setprecision(10) << (double)answer / den << endl;
  }
  return 0;
}