
#include <cstdio>

using namespace std;

const int maxn = 1234;

int n, m;
int v[maxn][maxn];

void get(int& num) {
 scanf("%d",&num);
}

int mat[maxn][maxn];

int rows[maxn][maxn];
int rows_size[maxn];
int cols[maxn][maxn];

bool can(int bottom) {
 for (int i = 0; i < n; ++i) {
  for (int j = 0; j < m; ++j) {
   mat[i][j] = 0; 
   if (v[i][j] >= bottom) mat[i][j] = 1;
  }
 } 

 for (int i = 0; i < n; ++i) rows_size[i] = 0;

 for (int j = 0; j < m; ++j ){
  for (int i = 0; i <= j; ++i) {
   cols[j][i] = 0;
  } 
 } 

 for (int i = 0; i < n; ++i) {
  for (int j = 0; j < m; ++j) {
   if (mat[i][j] == 0) continue;
   for (int t = 0; t < rows_size[i]; ++t) {
    int d = j - rows[i][t];  
    if (cols[j][d] == 1) {
     return true;
    } else {
     cols[j][d] = 1;
    }
   }
   rows[i][rows_size[i]++] = j;
  }
 } 
 
 return false;  
}

int main () {
 get(n);
 get(m);
 for (int i = 0; i < n; ++i) {
  for (int j =0 ; j < m; ++j) {
   get(v[i][j]);
  }
 }    
 const int inf = (int)1e9 + 1;
 int lt = 0;
 int rt = inf;
 while (lt + 1 < rt) {
  int mt = (lt + rt) / 2;
  if (!can(mt)) {
   rt = mt;
  } else {
   lt = mt;
  }
 }
 printf("%d",lt);
 return 0;
}