#include<bits/stdc++.h>
using namespace std;

#define MOD           1000000007/*998244353*/
#define pi            acos(-1)
#define int           long long 
#define D             double
#define S             second
#define F             first
#define pb            push_back
#define ff            fflush(stdout)
#define ppb           pop_back
#define B(c)          (c).begin()
#define E(c)          (c).end()
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend() 
#define lb            lower_bound
#define ub            upper_bound
#define si(c)         (int)((c).size())
#define L(c)           c[si(c)-1]
#define gcd(a,b)      __gcd(a,b)
#define lcm(a,b)      (a*(b/gcd(a,b)))  
#define accuracy      cout << fixed << setprecision(18);
#define inf           (int)1e9
#define pow(i,n)      (int)pow((int)i,n)
#define err           cerr<<"move"<<'\n';
#define print         cout<<"move"<<'\n';
#define en            '\n'

typedef vector<int>                           vi;
typedef pair<int,int>                         pii;
typedef vector<pii>                           vpi;
typedef pair<int,pii>                         pipii;
typedef vector<vector<int> >                  vvi;
typedef map<int,int>                          mp;
typedef map<string,int>                       msi;
typedef priority_queue<pii, vector<pii>, greater<pii> > pq;

void solve(){
     int n;
     cin>>n;
     string s,t,s1="",s2="";
     cin>>s>>t;
     for(int i=0;i<n;i++){
          if(s[i]!=t[i]){
               s1.pb(s[i]);
               s2.pb(t[i]);
          }
     }
     if(si(s1)>2||si(s1)==1){
          cout<<"NO"<<endl;return;
     }
     else{
          
          if(s==t||(s1[0]==s1[1]&&s2[0]==s2[1])){
               cout<<"YES"<<endl;
          }
          else cout<<"NO"<<endl;
     }
}

 
signed main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);    
    int t=1;
    clock_t start, end; 
    start = clock(); 
    //accuracy;
    

    cin>>t;

    while(t--){
        solve();
    }

    end = clock();
    double time_taken = double(end - start) / double(CLOCKS_PER_SEC); 
    //cerr<<time_taken;
}