#include <iostream>
#include <cstdio>
#include <map>
#include <cstring>
#include <string>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <queue>
#include <set>

using namespace std;

int n;
int x[1000000];
int y[1000000];
int Next[1000000];
int Pr[1000000];
int s[1000000];
int s2[1000000];
int ans[1000000];
int val[1000000];

void dfs(int v, int p) {
    s[v] = 1;
    s2[v] = 0;
    for (int i = Pr[v]; i; i = Next[i]) {
        if (y[i] != p) {
            dfs(y[i], v);
            s[v] += s[y[i]];
            s2[v] = max(s2[v], s2[y[i]]);
            if (s[y[i]] <= n / 2) {
                s2[v] = max(s2[v], s[y[i]]);
            }
        }
    }
    val[v] = s2[v];
    if (s[v] <= n / 2) {
        val[v] = s[v];
    }
}

void dfs2(int v, int p, int up, int mup) {    
    int mx1 = mup, mx2 = -1;
    if (n - s[v] <= n / 2) {
        mx1 = max(mx1, n - s[v]);
    }
    for (int i = Pr[v]; i; i = Next[i]) {
        if (y[i] != p) {
            if (val[y[i]] > mx1) {
                mx2 = mx1;
                mx1 = val[y[i]];
            } else
            if (val[y[i]] > mx2) {
                mx2 = val[y[i]];
            }
        }
    }
    int ok = 1;
    if (up > n / 2 && up - mup > n / 2) {
        ok = 0;
    }    
    for (int i = Pr[v]; i; i = Next[i]) {
        if (y[i] != p) {
            int mx = mx1;
            if (val[y[i]] == mx) {
                mx = mx2;
            }
            if (s[y[i]] > n / 2 && s[y[i]] - s2[y[i]] > n / 2) {
                ok = 0;
            }
            dfs2(y[i], v, n - s[y[i]], mx);
        }
    }
    ans[v] = ok;
}

int main() {
    ios_base::sync_with_stdio(false);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
    cin >> n;
    for (int i = 1; i < n; i++) {
        cin >> x[i] >> y[i];
        x[i + n - 1] = y[i];
        y[i + n - 1] = x[i];
    }
    for (int i = 1; i <= n + n - 2; i++) {
        Next[i] = Pr[x[i]];
        Pr[x[i]] = i;
    }

    dfs(1, 0);
    dfs2(1, 0, 0, 0);
    for (int i = 1; i < n; i++) {
        cout << ans[i] << " ";
    }
    cout << ans[n] << endl;
	return 0;
}