#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <iomanip>
#include <cmath>
#include <queue>
long long pow(int a,int b) {
    if (b==0 || a==1) return 1;
   
    if (b%2==0) return pow(a,b/2)*pow(a,b/2); else return pow(a,b/2)*pow(a,b/2)*a;
}
long long gcd(long long a, long long b) {
    if (a==0) return b;
    if (b==0) return a;
    if (a>b) return gcd(a%b,b); else return gcd(b%a,a);
}
using namespace std;

int main() {
    const long long MOD=1000000007;
  string s;
  cin>>s;
  int a;
  cin>>a;
  int pl=0,mu=0;
  for (int i=0;i<s.size();i++) {
      if (s[i]=='*') pl++;
      if (s[i]=='*') mu++;
      if (s[i]=='?') mu++;
  }
  if (pl==0 && a>s.size()-mu) { cout<<"Impossible"; return 0; }
  if (s.size()-2*mu>a) { cout<<"Impossible"; return 0; }
  if (pl==0 && s.size()-mu<a) { cout<<"Impossible"; return 0; }
  vector <char> m(s.size());
  for (int i=0;i<s.size();i++) m[i]=s[i];
  if (a>=s.size()-2*mu && a<=s.size()-mu) {
      int p=s.size()-mu-a;
      for (int i=0;i<s.size();i++) {if ((s[i]=='*' || s[i]=='?') && p>0) {p--; m[i-1]='.'; } }
  }
  int q=0;
  int w=0; 
  if (a>s.size()-mu) {for (int i=0;i<s.size();i++) if (s[i]=='*') { q=i; w=1; } 
      
      
  }
  if (w==0) for (int i=0;i<s.size();i++) {if (m[i]>='a' && m[i]<='z') cout<<m[i]; }
  if (w==1)  for (int i=0;i<s.size();i++) {if (m[i]>='a' && m[i]<='z') cout<<m[i];
  if (i==q) for (int j=0;j<a-s.size()+mu;j++) cout<<m[i-1]; 
      
  }
    return 0;
}