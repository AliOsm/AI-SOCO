//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>

const int maxn=(int)(150);
const ll mod=(ll)(1e9+7);
int a[maxn],dp[maxn];
string arr[2];
bool good[maxn];

int solve(int idx,int n)
{
    if(idx>=n)
    {
        return 0;
    }

    if(dp[idx]!=-1)
    {
        return dp[idx];
    }

    else
    {
        int ret=solve(idx+1,n);

        if(idx+1<n && arr[0][idx]!='X' && arr[1][idx]!='X' && arr[0][idx+1]!='X')
        {
            ret=max(ret,1+solve(idx+2,n));
        }

        if(idx+1<n && arr[0][idx]!='X' && arr[0][idx+1]!='X' && arr[1][idx+1]!='X')
        {
            ret=max(ret,1+solve(idx+2,n));
        }

        if(idx+1<n && arr[1][idx]!='X' && arr[0][idx+1]!='X' && arr[1][idx+1]!='X')
        {
            ret=max(ret,1+solve(idx+2,n));
        }

        if(idx+1<n && arr[0][idx]!='X' && arr[1][idx]!='X' && arr[1][idx+1]!='X')
        {
            ret=max(ret,1+solve(idx+2,n));
        }

        if(good[idx])
        {
            ret=max(ret,2+solve(idx+3,n));
        }

        dp[idx]=ret;return dp[idx];
    }
}

int main()
{
    ios_base::sync_with_stdio(0);

    for(int i=0;i<2;i++)
    {
        cin>>arr[i];
    }

    int n=2,m=arr[0].size();

    fill(dp,dp+m,-1);

    for(int i=0;i+3<=m;i++)
    {
        bool now=true;

        for(int j=0;j<=2;j++)
        {
            if(arr[0][i+j]=='X' || arr[1][i+j]=='X')
            {
                now=false;break;
            }
        }

        if(now)
        {
            good[i]=true;
        }
    }

    cout<<solve(0,m)<<endl;return 0;
}
