#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <algorithm>
#include <map>
#include <queue>
#include <clocale>
#include <bitset>
#include <cstring>
#include <memory.h>
#include <numeric>
#include <iomanip>
#include <stack>
#include <list>
#include <functional>
#include <unordered_set>

using namespace std;

#pragma comment (linker, "/STACK:667177216")
#define ll long long
#define LL long long
#define ull unsigned long long
#define ld long double
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pb push_back
const ll mod = 1000000007;
#define INF (int)(2e9)
#define LINF (ll)(4e18)
#define forit(mas) for(auto(it)=(mas).begin();(it)!=(mas).end();(it)++)
#define pii pair<int,int>


int main() {

#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n, r;
	cin >> n >> r;
	vector<int>a(n);
	vector<int>b(n, 0);
	vector<int>floor(n, 0);
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		if (a[i]) b.push_back(i);
	}
	if (b.empty()) {
		cout << -1;
		return 0;
	}
	int ans = 0;
	for (int i = 0; i < n; i++) {
		if (floor[i] == 0) {
			int pos = -1;
			int L = -1, R = -1;
			for (int j = min(n - 1, i + r - 1); j >= i; j--) {
				if (a[j] == 1) {
					R = j;
					break;
				}
			}
			for (int j = i; j >= max(0, i - r + 1); j--) {
				if (a[j] == 1) {
					L = j;
					break;
				}
			}
			pos = max(L, R);
			if (pos != -1) {
				ans++;
				for (int j = min(n - 1, pos + r - 1); j >= pos; j--) {
					floor[j]++;
				}
				for (int j = max(0, pos - r + 1); j <= pos; j++) {
					floor[j]++;
				}
			}
			else {
				cout << -1;
				return 0;
			}
		}
	}
	cout << ans;
	return 0;
}