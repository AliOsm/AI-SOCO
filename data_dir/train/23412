#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define fi first
#define se second

using namespace std;

typedef pair<int, int> ii;
typedef long long ll;

const int N = 200010;

int n, k, s, t;
vector<int> g, seg, ac;
vector<ii> car;
int maxseg;

int best[N];

const int oo = 0x3f3f3f3f;

bool test(int c)
{
	int time = 0;
	int vi = best[c];
	
	if (vi < maxseg)
		return false;
	
	for (int i = 0; i < seg.size(); i++)
	{
		if (seg[i] <= vi/2)
			time += seg[i];
		else
		{
			int xa = vi - seg[i];
			int xn = seg[i] - xa;
			time += 2*xn + xa;
		}
		if (time > t)
			return false;
	}
	return true;
}

int main()
{
	scanf("%d %d %d %d", &n, &k, &s, &t);
	for (int i = 0; i < n; i++)
	{
		int ci, vi;
		scanf("%d %d", &ci, &vi);
		car.pb(mp(ci, vi));
	}
	sort(car.begin(), car.end());
	for (int i = 0; i < k; i++)
	{
		int gi;
		scanf("%d", &gi);
		g.pb(gi);
	}
	g.pb(0);
	g.pb(s);
	sort(g.begin(), g.end());
	for (int i = 1; i < g.size(); i++)
	{
		seg.pb(g[i] - g[i-1]);
		maxseg = max(maxseg, seg.back());
	}

	for (int i = 0; i < n; i++)
	{
		best[i] = car[i].se;
		if (i) best[i] = max(best[i], best[i-1]);
	}

	int lo = 0, hi = n-1;
	while (lo < hi)
	{
		int mid = (lo+hi)/2;

		if (test(mid))
			hi = mid;
		else
			lo = mid+1;
	}

	if (!test(lo))
		printf("-1\n");
	else
		printf("%d\n", car[lo].fi);
	
	return 0;
}

