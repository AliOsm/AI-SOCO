#include<bits/stdc++.h>
using namespace std;
#define ll long long 
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define ld long double
#define F first
#define S second
int const M=3e5+10,mod=1e9+7,inf=1e9+10;
int a[M],n,q[M],p[M],d[M];
bool vis[M];
bool mark[M];
vector<int>hlp;
vector<int>ans,adj[M];
int mn=inf,now=0;
void dfs(int v)
{
	now++;
	mark[v]=1;
	hlp.pb(v);
	for(int i=0;i<adj[v].size();i++)
	{
		int u=adj[v][i];
		if(!mark[u])
		dfs(u);
	}
}
int pw(int x,int y)
{
	if(y==0)return 1;
	int tmp=pw(x,y/2);
	if(y%2==0)return (tmp*tmp)%mod;
	return (((tmp*tmp)%mod)*x)%mod;
}
int sa(int x,int y)
{
	if(x%y==0)return x/y;
	return x/y+1;
}
main()
{
	int n,m;
	cin>>n>>m;
	for(int i=1;i<=m;i++)
	{
		int a,b;
		cin>>a>>b;
		if(a>b)swap(a,b);
		if(a==1 && b==n)
		{
			cout<<1<<endl;
			cout<<1<<" "<<n;
			return 0;
		}
		adj[a].pb(b);
		adj[b].pb(a);
	}
	int head=0,tail=0;
	q[head++]=1;
	d[1]=1;
	int cnt=0;
	while(head>tail)
	{
		cnt++;
		int v=q[tail++];
		if(v==n)
		{
			mn=min(mn,d[v]-1);
			int tmp=v;
			ans.pb(tmp);
			while(p[tmp]!=0)
			{
				ans.pb(p[tmp]);
				tmp=p[tmp];
			}
			reverse(ans.begin(),ans.end());
		}
		for(int i=0;i<adj[v].size();i++)
		{
			int u=adj[v][i];
			if(!d[u])q[head++]=u,d[u]=d[v]+1,p[u]=v;
		}
	}
	if(adj[1].size()!=cnt-1 && mn>4)
	{		
		ans.clear();
		mn=4;
		mark[1]=1;
		for(int j=0;j<adj[1].size();j++)
		{
			int u=adj[1][j];
			mark[u]=1;
		}
		bool flag=0;
		for(int j=0;j<adj[1].size();j++)
		{
			if(flag)break;
			int u=adj[1][j];
			for(int k=0;k<adj[u].size();k++)
			{
				int uu=adj[u][k];
				if(!mark[uu] && ans.size()==0)
				{
				//	cout<<uu<<"******* ";
					ans.pb(1);
					ans.pb(u);
					ans.pb(uu);
					ans.pb(1);
					ans.pb(n);
					flag=1;
					break;
				}
			}
		}
	}
	else if(mn>5 && adj[1].size()==cnt-1)
	{
		int good=0;
		mark[1]=1;
		bool flag=0;
		for(int i=0;i<adj[1].size();i++)
		{
			now=0;
			if(flag)break;
			hlp.clear();
			int u=adj[1][i];
			if(!mark[u])dfs(u);
			else continue;
			for(int j=0;j<hlp.size();j++)
			{
				int uu=hlp[j];
				if(adj[uu].size()!=now)good=uu;
			}
			//cout<<good<<"***********"<<endl;
			if(good==0)continue;
			for(int k=0;k<adj[good].size();k++)vis[adj[good][k]]=1;
			vis[good]=1;
			for(int k=0;k<adj[good].size();k++)
			{
				int vv=adj[good][k];
				if(vv==1)continue;
				for(int l=0;l<adj[vv].size();l++)
				{
					int nn=adj[vv][l];
					if(!vis[nn] && nn!=1)
					{
						flag=1;
						mn=5;
						ans.pb(1);
						ans.pb(good);
						ans.pb(vv);
						ans.pb(nn);
						ans.pb(good);
						ans.pb(n);
						break;
					}
				}
				if(flag)break;
			}
		}
	}
	if(mn==inf)return cout<<-1,0;
	cout<<mn<<endl;
	for(int j=0;j<ans.size();j++)cout<<ans[j]<<" ";	
}
