// Seize the moment try to freeze it and own it, squeeze it and hold it,
// â€˜Cause we consider these minutes golden.
#include "bits/stdc++.h"
using namespace std;

bool pal(const string &a) {
  int i = 0, j = (int)a.size() - 1;
  // cout << a << '\n';
  while (i < j) {
    if (a[i] != a[j]) {
      return false;
    }
    ++i, --j;
  }
  return true;
}

void solve() {
  string s;
  cin >> s;
  string ans;
  int n = s.size(), mx = 1;
  ans = s[0];  
  if (pal(s)) ans = s;
  for (int i = 1; i < n; ++i) {
    const string str = s.substr(0, i);
    if (pal(str)) {
      if (ans.size() < n - i + 1) {
        ans = str;
      }
    }
  }
  for (int i = n - 1; i > 0; --i) {
    const string str = s.substr(i, n - i);
    if (pal(str)) {
      if (ans.size() < n - i + 1) {
        ans = str;
      }
    }
  }  
  // cout << ans << '\n';
  int len = 0;
  int i = 0, j = s.size() - 1;
  while (i <= j) {
    if (s[i] != s[j]) break;
    len += 1;
    ++i, --j;
  }
  if (ans.size() == n) cout << ans << '\n';
  else {
    int l = len, r = n - len - 1;
    int al = -1, ar = -2;
    string ans2 = ans;
    ans.clear();
    // cout << l << ' ' << r << '\n';
    for (int i = 1; i <= r - l + 1; ++i) {
      string tmp = s.substr(l, i);
      // cout << tmp << '\n';
      if (pal(tmp) && tmp.size() > ans.size()) {
        ans = tmp;
      }
      tmp = s.substr(r - i + 1, i);
      // cout << tmp << '\n';
      if (pal(tmp) && tmp.size() > ans.size()) {
        ans = tmp;
      }
    }
    if (ans2.size() >= ans.size() + 2 * len) {
      cout << ans2 << '\n';
      return;
    }
    for (int i = 0; i < len; ++i) cout << s[i];
    cout << ans;
    for (int i = n - len; i < n; ++i) cout << s[i];
    cout << '\n';
  }
}

signed main() {
  ios::sync_with_stdio(false);
  cin.tie(0); cout.tie(0);
  int t = 1; cin >> t;
  while (t--) {    
    solve();  
  }


  
  return 0;
}