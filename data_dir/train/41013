#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <map>
#include <iostream>
#include <vector>
#include <set>
#include <functional>

using namespace std;

const int maxn = (int)1e5 + 11;
vector<pair<int, int> > g[maxn];
vector<int> answer;
int n;

bool dfs(int v, int p) {
	int sz = g[v].size();
	if (sz == 0) return false;

	bool ret = false;

	for (int i = 0; i < sz; ++i) {
		int to = g[v][i].first, bad = g[v][i].second;
		if (to == p) continue;
		bool cur = dfs(to, v);
		ret |= cur;
		if (bad == 1 && cur == false) {
			ret = true;
			answer.push_back(to + 1);
		}
	}

	return ret;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

	cin >> n;

	for (int i = 0; i < n - 1; ++i) {
		int a, b, c;
		scanf("%d%d%d", &a, &b, &c);
		--a, --b, --c;
		g[a].push_back(make_pair(b, c));
		g[b].push_back(make_pair(a, c));
	}

	dfs(0, -1);

	int sz = answer.size();
	printf("%d\n", sz);
	for (int i = 0; i < sz; ++i) {
		printf("%d ", answer[i]);
	}

	return 0; 
}