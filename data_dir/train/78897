#include <bits/stdc++.h>

// IGNORE THE #pragma, just to suppress annoying warnings on IDE

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wuninitialized"
using namespace std;


typedef long long ll;
#define rep(i, start, end) for(int i = start; i < end; ++i)
#define per(i, start, end) for(int i = (int)start-1; i >= end; --i)
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define F first
#define S second
#define all(x) x.begin(), x.end()
const double PI = 3.14159265358979323846;
const double eps = (1e-9);

int dcmp(double x, double y)
{ return fabs(x - y) <= eps ? 0 : x < y ? -1 : 1; }

int a[110];
int main()
{
    ios_base::sync_with_stdio(false);
//    freopen("input.txt", "r", stdin);
    int n, m;
    cin >> n >> m;
    const int PASS = m + 1;
    vector<int> s, c;
    vector<pair<int, int> > d; // d and exam id
    rep(i, 0, m)
    {
        int si, di, ci;
        cin >> si >> di >> ci;
        s.pb(si);
        d.pb(mp(di, i));
        c.pb(ci);
    }
    sort(all(d));
    rep(i, 0, m)
    {
        int exam = d[i].S;
        int end = d[i].F - 1;
        a[end] = PASS;
        int start = s[exam] - 1;
        int prep = 0;
        for (int j = start; j < end; ++j)
        {
            if (prep >= c[exam])
                break;
            if (a[j] == 0)
            {
                a[j] = exam + 1;
                prep++;
            }
        }
        if (prep < c[exam])
        {
            cout << -1 << endl;
            return 0;
        }
    }
    rep(i, 0, n)
    {
        cout << a[i] << " ";
    }
    return 0;
}

#pragma clang diagnostic pop