# include <iostream>
# include <vector>

using namespace std;


const int N = 1e5 + 100;
const int mod = 1e9 + 7;

int n, k, ans;
vector < int > gr[N];
bool used[ N];

int pw( int n, int k )
{
	if ( k == 0 )
		return 1;
	
	int gt = pw ( n, k / 2 );
	gt = ( gt * 1ll * gt ) % mod;
	
	if ( k % 2 == 1 )
		gt = ( gt * 1ll * n ) % mod;
	
	return gt;
}

int dfs( int v ){
	
	used[v] =1 ;
	int res = 1;
	for ( auto to : gr[v] ){
		if ( used[to] )
			continue;
		res += dfs( to );
	}
	return res;
}

int main()
{
	cin >> n >> k;
	for ( int i = 1; i <= n - 1; i ++ ){
		int v, u, x;
		cin >> v >> u >> x;
		if ( !x ){
			gr[v].push_back( u );
			gr[u].push_back( v );
		}
	}
	
	ans = pw ( n, k );
	
	for ( int i = 1; i <= n; i ++ ){
		if ( used[i] )
			continue;
		ans = ( ans - pw ( dfs( i ), k ) ) % mod;
	}
	if ( ans < 0 )
		ans += mod;
		
	cout << ans;
	
}
