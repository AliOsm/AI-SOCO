#include<bits/stdc++.h>
using namespace std;
#define int long long
typedef long long ll;

const int mod = 1e9+7;

int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    /*
    set<int> seen;
    int number = 1;
    for(int i = 0; i < 1000000; ++i) {
        if(seen.count(number)) {
            cout << "found: " << i << '\n';
        }
        seen.insert(number);
        number *= 10;
        number %= mod;
    }
    return 0;*/
    string s;
    int n;
    cin >> s >> n;
    vector<string> arr(n);
    for(int i = 0; i < n; ++i) {
        cin >> arr[i];
    }
    vector<int> value(10);
    vector<int> length(10);
    for(int i = 0; i <= 9; ++i) {
        value[i] = i;
        length[i] = 10;
    }
    for(int i = n-1; i >= 0; --i) {
        int digit = arr[i][0]-'0';
        int sum = 0;
        int newLen = 1;
        for(int j = 3; j < arr[i].size(); ++j) {
            int currDigit = arr[i][j]-'0';
            if(j > 3) {
                sum *= length[currDigit];
                sum %= mod;
            }
            sum += value[currDigit];
            sum %= mod;
            newLen *= length[currDigit];
            newLen %= mod;
        }
        value[digit] = sum;
        length[digit] = newLen;
    }
    int res = 0;
    for(int i = 0; i < s.size(); ++i) {
        int currDigit = s[i]-'0';
        if(i) {
            res *= length[currDigit];
            res %= mod;
        }
        res += value[currDigit];
        res %= mod;
    }
    cout << res << '\n';
    return 0;
}



























