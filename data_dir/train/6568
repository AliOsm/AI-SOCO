#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define PB push_back
#define MP make_pair

#define rep(i,n) for(int i=0;i<(n);++i)
#define REP(i,n) for(int i=1;i<=(n);++i)
#define FOR(i,l,h) for(int i=(l);i<=(h);++i)
#define FORD(i,h,l) for(int i=(h);i>=(l);--i)
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl
#define tr(it,c) for(VI::iterator it=(c).begin(); it!=(c).end(); ++it)

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long int64;
typedef pair<int,int> pii;

int64 ans=0;

bitset<10050> b;
int a,n;

int p[10050], pt=0;
int w[10000050]={};

void G()
{
	b.set();
	b[0]=b[1]=0;
	FOR(i,2,10000) if(b[i])
	{
		p[pt++]=i;
		for(int64 j=int64(i)*i; j<=10000; j+=i) b[j]=0;
	}
}
/*
int work(int t)
{
	int res=1;
	rep(i,pt)
	{
		int cur=p[i];
		if(cur*cur>t) break;
		if(t%cur!=0) continue;
		int c=0;
		while(t%cur==0) t/=cur, ++c;
		if(c&1) res*=cur;
	}
	return res*t;
}
*/

void work(int p)
{
	int c=p;
	while(c<=10000000)
	{
		while(w[c]%p==0) w[c]/=p;
		c+=p;
	}
}

int main(void)
{G();
	REP(i,10000000) w[i]=i;
	rep(i,pt)
	{
		int cur=p[i];
		work(cur*cur);
	}
	cin>>a>>n;
	FOR(i,a,a+n-1) ans += w[i];
	cout<<ans<<endl;
}