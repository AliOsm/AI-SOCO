#include <bits/stdc++.h>

#define ll long long

using namespace std;
const int N = 2e5 + 5;
ll dp[N], sz[2][N], total[2];

int n;
vector<vector<int> > g(N);
void dfs(int node, int par, int lvl) {
	sz[lvl & 1][node] = 1;
	total[lvl & 1]++;
	for (int i = 0; i < g[node].size(); i++) {
		int v = g[node][i];
		if (v == par)
			continue;
		dfs(v, node, lvl + 1);
		sz[0][node] += sz[0][v];
		sz[1][node] += sz[1][v];
		dp[node] += sz[!(lvl & 1)][v] + dp[v];
	}
}

void dfs2(int node, int par, int lvl) {
	for (int i = 0; i < g[node].size(); i++) {
		int v = g[node][i];
		if (v == par)
			continue;
		dp[v] =
				(dp[node] - sz[!(lvl & 1)][v] + total[lvl & 1] - sz[lvl & 1][v]);
		dfs2(v, node, lvl + 1);
	}
}
int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cin >> n;
	for (int i = 1, u, v; i < n; i++) {
		cin >> u >> v;
		g[u].push_back(v);
		g[v].push_back(u);
	}
	dfs(1, 1, 1);
	dfs2(1, 1, 1);
	ll ans = 0;
	for (int i = 1; i <= n; i++) {
//		cout << dp[i] << " ";
		ans += dp[i];
	}
	cout << ans / 2 << endl;
	return 0;
}
