#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <fstream>
#define endl "\n"
#define c0 ios_base :: sync_with_stdio(0); cin.tie (0);
#define s second
#define f first
#define ll long long
#define ull unsigned ll
using namespace std;

const int MaxN = 1e6 + 17;
//const ll INF = 1e9 + 17;
//const int MOD = 1e9 + 7;
//const double eps = 1e-3;
//const double pi = 3.14159265359;


int n, Ans;
vector < int > g[MaxN], v;
set < int > S;

int main()
{
    #ifdef DEBUG
        freopen (".in", "r", stdin);
        freopen (".out", "w", stdout);
    #endif
    scanf ("%d", &n);
    for (int i = 1; i <= n; ++ i)
    {
        int x;
        scanf ("%d", &x);
        if (!S.count (x))
        {
            S.insert (x);
            v.push_back (x);
        }
        g[x].push_back (i);
        x = g[x].size();
        Ans = max (x, Ans);
    }
    for (int i = 0; i < v.size(); ++ i)
    {
        for (int j = 0; j < v.size(); ++ j)
        {
            if (i == j)
                continue;
            int x = 0, y = 0, z = 1;
            while (x < g[v[i]].size() && y < g[v[j]].size())
            {
                if (g[v[i]][x] < g[v[j]][y])
                {
                    if (z % 2 == 1)
                        ++ z;
                    ++ x;
                }
                else
                {
                    if (z % 2 == 0)
                        ++ z;
                    ++ y;
                }
            }
            Ans = max (Ans, z);
        }
    }
    printf ("%d\n", Ans);
    return 0;
}