///yousry
/*
#include <bits/stdc++.h>

using namespace std;
typedef long long ll;

int n;
ll c, a[2][200100];
ll dp[2][200100];

int main()
{
    scanf("%d%lld", &n, &c);
    for (int j = 0; j < 2; ++j)
    for (int i = 0; i < n-1; ++i)
        scanf("%lld", &a[j][i]);
    dp[0][0] = 0;
    dp[1][0] = c;
    printf("0");
    for (int i = 1; i < n; ++i)
    {
        dp[0][i] = min(dp[0][i-1], dp[1][i-1]) + a[0][i-1];
        dp[1][i] = min(dp[1][i-1], dp[0][i-1] + c) + a[1][i-1];
        printf(" %lld", min(dp[0][i], dp[1][i]));
    }

    return 0;
}
*//*
#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define OO 4e18
#define oo 2e9
#define yalla ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define sz  100005
#define re return
#define F first
#define S second
#define pll pair<ll,ll>
#define mod  1000000007
#define pi acos(-1)
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int,null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
///
ll n,c,a[2*sz],b[2*sz],dp[2*sz][5];
ll solve(int idx,bool last)
{ if(idx==0)re 0;
  if(dp[idx][last]<OO)re dp[idx][last];
 ///
 ll fi=OO,se=OO;
  if(!last)
  {
   fi=solve(idx-1,0)+a[idx];
   se=solve(idx-1,1)+b[idx]+c;
  }
  else
  {
   fi=solve(idx-1,0)+a[idx];
   se=solve(idx-1,1)+b[idx];
  }
 re dp[idx][last]=min(fi,se);
}
///
int main()
{
   yalla;
   cin>>n>>c;
   for(int i=1;i<n;i++)
    cin>>a[i];
   for(int i=1;i<n;i++)
    cin>>b[i];
   ///
   for(int i=0;i<=n;i++)
    for(int y=0;y<2;y++)dp[i][y]=OO;

solve(n-1,0);
for(int i=0;i<n;i++)
   cout<<solve(i,0)<< " ";
re 0;
}
#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define OO 4e18
#define oo 2e9
#define yalla ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define sz  100005
#define re return
#define F first
#define S second
#define pll pair<ll,ll>
#define mod  1000000007
#define pi acos(-1)
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int,null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
///
ll n,c,fi,se;
ll a[2*sz],b[2*sz],dp[2*sz][5];
int main()
{
   yalla;
   cin>>n>>c;
   for(int i=1;i<n;i++)
    cin>>a[i];
   for(int i=1;i<n;i++)
    cin>>b[i];
   ///
   for(int i=1;i<n;i++)
   {
     ll mini=min(dp[i-1][0],dp[i-1][1]);
     dp[i][0]=mini+a[i];
     ///
     if(mini==dp[i-1][0])
      dp[i][1]=mini+b[i]+c;
     else
      dp[i][1]=mini+b[i];

   }
   ///
   for(int i=0;i<n;i++)
    cout<<min(dp[i][0],dp[i][1])<<" ";
   re 0;
}
*/
#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define OO 4e18
#define oo 2e9
#define yalla ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define sz  100005
#define re return
#define F first
#define S second
#define pll pair<ll,ll>
#define mod  1000000007
#define pi acos(-1)
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int,null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
///
int t;
string s;
int main()
{
    yalla;
    cin>>t;
    while(t--)
    {cin>>s;
     set<char>sett;
    if(s.size()==1)cout<<s<<endl;
    else
     {string neww="";
       for(int i=0;i<s.size();i++)
       {if(i+1<s.size()&&s[i]==s[i+1])i++;
        else sett.insert(s[i]);
       }
       auto it=sett.begin();
       while(it!=sett.end())
       {cout<<(*it);
        it++;
       }
       cout<<endl;
     }
    }
    re 0;
}
/*
#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define OO 4e18
#define oo 2e9
#define yalla ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define sz  100005
#define re return
#define F first
#define S second
#define pll pair<ll,ll>
#define mod  1000000007
#define pi acos(-1)
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int,null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
///
ll q,n,tmp;
double eps=1e-;
double f(int p, int q, int r, int s, int t, int u, double x)
        {
            return p * exp(-x) + q * sin(x) + r * cos(x) + s * tan(x) + t * x * x + u;
        }

double findTheRoot(int p, int q, int r, int s, int t, int u)
        {
            double lo = 0, hi =1, mid=0;
            while ((hi-lo)>eps)
            {
                mid = (lo + hi) / 2.0 ;
                double eq=f(p,q,r,s,t,u,mid);
                ///
                if (eq > 0)
                {   lo = mid;   }
                else
                {   hi = mid;   }

            }
            if (abs(f(p,q,r,s,t,u,mid)) <= eps) return mid;
            return -1;
        }
int main()
{
    yalla;
    ///
    int p,  q, r, s, t, u;
    vector<double>v;
    while(cin>>p>>q>>r>> s>>t>> u&&p!=-500)
    {
      double ans=findTheRoot(p,q,r,s,t,u);
      if(ans==-1)/*cout<<"No solution"<<endl,v.push_back(-1);
      else
      /*cout<<fixed<<setprecision(4)<<ans<<endl,v.push_back(ans);

    }
    for(int i=0;i<v.size();i++)
    {if(v[i]==-1)cout<<"No solution"<<endl;
     else cout<<fixed<<setprecision(4)<<v[i]<<endl;
    }

    re 0;
}
///2944
*/
