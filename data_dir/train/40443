#include <bits/stdc++.h>
using namespace std;
const int N = 111;
const int M = 1e4 + 5;
const int Max = 1e9 + 7;
int n, m;
char s[N][M];

int init();
int solve();
bool kt();

int main(){
  init();
  solve();
}

int init(){
  char x[M];

  scanf("%d %d", &n, &m);
  for (int i = 1; i <= n; i++){
    scanf("%s", &x);
    for (int j = 1; j <= m; j++) s[i][j] = x[j-1];
  }
}

int solve(){
  int a[N][M] = {0}, dem[M] = {0};

  if (kt()){
    printf("-1");
    return 0;
  }

  for (int i = 1; i <= n; i++){
    for (int j = 1; j <= m; j++)
    if (s[i][j] == '1'){
      dem[i]++;
      a[i][dem[i]] = j;
    }
    a[i][0] = a[i][dem[i]] - m;
    a[i][dem[i]+1] = a[i][1] + m;
  }

  int F[N][M] = {0};
  for (int i = 1; i <= n; i++){
    int u = 0;

    for (int j = 1; j <= m; j++)
    if (s[i][j] == '0')
      F[i][j] = min(j - a[i][u], a[i][u+1] - j);
    else u++;
  }

  int res = Max;
  for (int j = 1; j <= m; j++){
    int t = 0;
    for (int i = 1; i <= n; i++) t += F[i][j];
    res = min(res, t);
  }

  printf("%d", res);
}

bool kt(){
  for (int i = 1; i <= n; i++){
    bool k = false;
    for (int j = 1; j <= m; j++)
    if (s[i][j] == '1'){
      k = true;
      break;
    }
    if (!k) return true;
  }
  return false;
}
































