#include <bits/stdc++.h>
using namespace std;
#define x first
#define y second
#define ll long long
#define pi pair<int,int>
#define pl pair<ll,ll>
#define pd pair<double,double>
#define ld long double
#define pld pair<ld,ld>
#define lg length()
#define sz size()
#define pb push_back
#define INF 1000000005
#define LINF 1000000000000000005

int n,q,x,bit[3][200005],a[200005];

int l0,l1,l2,r0,r1,r2;

char c;

set <int> s[3];

void Upd(int id, int p, int v){
    for(int i=p;i<=n;i+=i&-i){
        bit[id][i]+=v;
    }
}

int Qry1(int id, int p){
    int ans=0;
    for(int i=p;i;i-=i&-i){
        ans+=bit[id][i];
    }
    return ans;
}

int Qry(int id, int l, int r){
    if(l>r) return 0;
    return Qry1(id,r)-Qry1(id,l-1);
}

int32_t main(){
    ios_base :: sync_with_stdio(0); cin.tie(); cout.tie();
    cin >> n >> q;
    for(int i=1;i<=n;i++){
        cin >> c;
        if(c=='R') a[i]=0;
        else if(c=='S') a[i]=1;
        else a[i]=2;
        s[a[i]].insert(i);
        Upd(a[i],i,1);
    }
    if(s[0].sz) l0=*(s[0].begin()),r0=*(s[0].rbegin()); else l0=-1,r0=-1;
    if(s[1].sz) l1=*(s[1].begin()),r1=*(s[1].rbegin()); else l1=-1,r1=-1;
    if(s[2].sz) l2=*(s[2].begin()),r2=*(s[2].rbegin()); else l2=-1,r2=-1;
    if((l0==-1 && l1==-1) || (l0==-1 && l2==-1) || (l1==-1 && l2==-1)) cout << n << '\n';
    else if(l0==-1) cout << Qry(1,1,n) << '\n';
    else if(l1==-1) cout << Qry(2,1,n) << '\n';
    else if(l2==-1) cout << Qry(0,1,n) << '\n';
    else cout << n-Qry(0,l2,l1)-Qry(0,r1,r2)-Qry(1,l0,l2)-Qry(1,r2,r0)-Qry(2,l1,l0)-Qry(2,r0,r1) << '\n';
    for(int i=1;i<=q;i++){
        cin >> x >> c;
        s[a[x]].erase(x);
        Upd(a[x],x,-1);
        if(c=='R') a[x]=0;
        else if(c=='S') a[x]=1;
        else a[x]=2;
        s[a[x]].insert(x);
        Upd(a[x],x,1);
        if(s[0].sz) l0=*(s[0].begin()),r0=*(s[0].rbegin()); else l0=-1,r0=-1;
        if(s[1].sz) l1=*(s[1].begin()),r1=*(s[1].rbegin()); else l1=-1,r1=-1;
        if(s[2].sz) l2=*(s[2].begin()),r2=*(s[2].rbegin()); else l2=-1,r2=-1;
        if((l0==-1 && l1==-1) || (l0==-1 && l2==-1) || (l1==-1 && l2==-1)) cout << n << '\n';
        else if(l0==-1) cout << Qry(1,1,n) << '\n';
        else if(l1==-1) cout << Qry(2,1,n) << '\n';
        else if(l2==-1) cout << Qry(0,1,n) << '\n';
        else cout << n-Qry(0,l2,l1)-Qry(0,r1,r2)-Qry(1,l0,l2)-Qry(1,r2,r0)-Qry(2,l1,l0)-Qry(2,r0,r1) << '\n';
    }
}
