//                             In The Name Of Allah
#include <bits/stdc++.h>
#define	ss second
#define ff first
#define use_fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define ret(n) return cout << n, 0
#define se(n) cout << setprecision(n) << fixed
#define pb push_back
//#define int long long
#define ld long double
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops")
#pragma GCC optimize("no-stack-protector,fast-math")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
using namespace std; 
 
const int N = 3e6 + 1000, MAXN = 1e5, OO = 1e16 + 7, T = 13, M = 1e9 + 7, P = 6151, SQ = 800, lg = 32;
typedef pair <int, int> pii;
int a[N], nxt = 0;
vector <int> v[N];
 
int32_t main() {
	use_fast;
	int n, k, q = 0;
	cin >> n >> k;
	vector <int> t;
	string s;
	cin >> s;
	for(int i = 1; i < n; i++) 
		if(s[i] == 'L' && s[i - 1] == 'R')
			v[q].pb(i - 1);
	if((int)v[q].size() == 0) 
		return cout << -1, 0;
	int sum = (int)v[q].size();
	while(true) {
		for(auto u : v[q]) {
			s[u] = 'L', s[u + 1] = 'R';
			if(u != 0) 
				if(s[u - 1] == 'R')
					v[q + 1].pb(u - 1);
			if(u + 2 != n) 
				if(s[u + 2] == 'L')
					v[q + 1].pb(u + 1);
		}
		if((int)v[q + 1].size() == 0) 
			break;
		sum += (int)v[q + 1].size();
		q++;
		if(q + 1 > k) 
			return cout << -1, 0;
	}
	q++;
	if(sum < k || q > k)	
		return cout << -1, 0;
	int x = q;
	for(int i = 0; i < q; i++) {
		nxt = 0;
		for(auto h : v[i]) {
			if(x != k) {
				cout << 1 << " " << h + 1 << '\n';
				k--;
			}
			else 
				a[nxt] = h, nxt++;
		}
		if(nxt != 0) {
			cout << nxt << " ";
			for(int i = 0; i < nxt; i++)
				cout << a[i] + 1 << " ";
			k--;
			cout << '\n';
		}
		x--;
	}
	return 0;
} 
/*
be carefull :
1- if not solve after 20 min, read again twice
2- after submit read the code again
3- fun with contest
4- ... 
*/