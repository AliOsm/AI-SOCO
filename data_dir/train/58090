#include<bits/stdc++.h>

using namespace std;

#define fRead(x)        freopen(x,"r",stdin)
#define fWrite(x)       freopen (x,"w",stdout)

#define LL              long long
#define ULL             unsigned long long
#define ff              first
#define ss              second
#define pb              push_back
#define INF             2e16
#define PI              acos(-1.0)
#define mk              make_pair
#define pii             pair<int,int>
#define pll             pair<LL,LL>


#define min3(a,b,c)     min(a,min(b,c))
#define max3(a,b,c)     max(a,max(b,c))
#define min4(a,b,c,d)   min(a,min(b,min(c,d)))
#define max4(a,b,c,d)   max(a,max(b,max(c,d)))
#define SQR(a)          ((a)*(a))
#define FOR(i,a,b)      for(int i=a;i<=b;i++)
#define ROF(i,a,b)      for(int i=a;i>=b;i--)
#define REP(i,b)        for(int i=0;i<b;i++)
#define MEM(a,x)        memset(a,x,sizeof(a))
#define ABS(x)          ((x)<0?-(x):(x))

#define SORT(v)         sort(v.begin(),v.end())
#define REV(v)          reverse(v.begin(),v.end())


#define FastRead        ios_base::sync_with_stdio(0);cin.tie(nullptr);

const int N = 200005;



bool ok(string &s1,string &s2)
{
    for(int i = 0; i < s1.size(); i++)
    {
        if(s1[i] > s2[i])
            return 1;
        if(s1[i] < s2[i])
            return 0;
    }
    return 1;
}

string Add(string s1, string s2)
{
    if (s1.size() > s2.size())
        swap(s1, s2);

    string str = "";

    int n1 = s1.size(), n2 = s2.size();

    reverse(s1.begin(), s1.end());
    reverse(s2.begin(), s2.end());

    int carry = 0;
    for (int i=0; i<n1; i++)
    {
        int sum = ((s1[i]-'0')+(s2[i]-'0')+carry);
        str.push_back(sum%10 + '0');

        carry = sum/10;
    }

    for (int i=n1; i<n2; i++)
    {
        int sum = ((s2[i]-'0')+carry);
        str.push_back(sum%10 + '0');
        carry = sum/10;
    }

    if (carry)
        str.push_back(carry+'0');

    reverse(str.begin(), str.end());

    return str;
}
int main()
{
    FastRead
    string str;
    int n, k;
    cin >> n >> k;
    cin >> str;
    string s = str;
    for(int i = 0; i < n; i++)
    {
        s[i] = str[i % k];
    }
    if(ok(s,str))
    {
        cout << s.size() << "\n";
        cout << s << "\n";
        return 0;
    }
    string temp;
    for(int i = 0; i < k; i++)
        temp += str[i];

    temp = Add(temp,"1");

    string ans;
    for(int i = 0;i < n;i++)ans.push_back(temp[i % k]);
    cout << ans.size() << "\n";
    cout << ans << "\n";
}
