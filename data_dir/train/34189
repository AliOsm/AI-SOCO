#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int INF = 1000000000;
int main()
{
	ios::sync_with_stdio(false);
	int n; cin >> n;
	vector<ll> a(n);
	set<ll> count2;
	map<ll, set<int>> numToPos;
	for (int i = 0; i < n; i++)
	{
		cin >> a[i];
		numToPos[a[i]].insert(i);
	}
	for (auto& p : numToPos)
		if (p.second.size() >= 2)
			count2.insert(p.first);
	while (count2.size() > 0)
	{
		ll num = *count2.begin();
		int currCnt = numToPos[num].size();
		if (currCnt - 2 < 2)
			count2.erase(num);

		numToPos[num].erase(numToPos[num].begin());
		int pos = *numToPos[num].begin();
		numToPos[num].erase(numToPos[num].begin());

		num *= 2LL;
		numToPos[num].insert(pos);
		if (numToPos[num].size() >= 2 && count2.count(num) == 0)
			count2.insert(num);
	}
	vector<ll> b(n, -INF);
	for (auto& p : numToPos)
		for (int pos : p.second)
			b[pos] = p.first;
	vector<ll> result;
	result.reserve(n);
	for (ll x : b)
		if (x != -INF)
			result.push_back(x);
	cout << result.size() << endl;
	for (ll x : result)
		cout << x << " ";
	cout << endl;
}