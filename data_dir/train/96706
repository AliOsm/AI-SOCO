#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll int
#define ld long double
#define pp pair<ll,ll>
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define present(c,x) ((c).find(x) != (c).end())
#define mp make_pair
#define hell 1000000007
#define F first
#define S second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree<pp , null_type , less<pp> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t=1 ;
void solve()
{
    ll n , k , p ;
    cin >> n >> k >> p ;
    vector<ll> v(n) , b(k) ;
    ll dp[n+1][k+1] ;
    rep( i , 0 , n )
        cin >> v[i] ;
    rep( i , 0 , k )
        cin >> b[i] ;
    sort(all(v));
    sort(all(b));
    rep( i , 0 , n + 1 )
        rep( j , 0 , k + 1 )
            dp[i][j] = 1e11 ;
    rep( i , 0 , k + 1 )
        dp[0][i] = 0 ;
    rep( i , 1 , n + 1 ){
        rep( j , 1 , k + 1 ){
            dp[i][j] = min( dp[i][j-1] , max(dp[i-1][j-1],abs(v[i-1]-b[j-1])+abs(b[j-1]-p)));
        }
    }
    cout << dp[n][k] ;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}

