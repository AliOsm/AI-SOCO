#include "bits/stdc++.h"
using namespace std;
const int N = 100 + 5;
const int SN = N << 2;
int n;
int m;
int l , r , x;
int u , v , w;
int a , b , c;
int color[N];
vector < int > get(vector < int > & v , int from , int to) {
    vector < int > ret;
    for(int j = 0; j < from; ++j)
            ret.push_back(v[j]);
        for(int j = to + 1; j < (int) v.size(); ++j)
            ret.push_back(v[j]);
    return ret;
}
int solve(vector < int > v) {
    int to = (int) v.size();
    for(int i = 0; i < to; ++i) {
        int upto = i;
        for(int j = i + 1; j < to && v[i] == v[j]; ++j) {
            upto = j;
        }
        if(upto - i + 1 >= 3) {
            vector < int > ret = get(v , i , upto);
            return upto - i + 1 + solve(ret);
        }
    }
    return 0;
}
int main() {
    scanf("%d %d %d" , &n , &m , &x);
    for(int i = 1; i <= n; ++i) {
        scanf("%d" , &color[i]);
    }
    vector < int > pos;
    for(int i = 1; i < n; ++i) {
        if(color[i] == x && color[i + 1] == x) {
            pos.push_back(i);
        }
    }
    int found = (int) pos.size();
    if(!found) {
        printf("0\n");
        return 0;
    }
    int ans = 0;
    for(int i = 0; i < found; ++i) {
        vector < int > v;
        int from = pos[i];
        int to = 1 + pos[i];
        for(int j = 1; j < from; ++j)
            v.push_back(color[j]);
        for(int j = to + 1; j <= n; ++j)
            v.push_back(color[j]);
        int curr = 2 + solve(v);
        ans = max(ans , curr);
    }
    printf("%d\n" , ans);
}
