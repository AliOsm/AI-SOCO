#include <bits/stdc++.h>
#define endl '\n'

using namespace std;
const int MAXN = (1 << 12);
const int OFFSET = (1 << 11);

void Read(int &x);

int n, k;
bitset<MAXN> bs, cp_dp, dp;
int tmp_val;
vector<int> li;

void read()
{
	Read(n); Read(k);
	for(int i = 0; i < k; i++)
	{
		Read(tmp_val);
		if(!bs[tmp_val + OFFSET])
			li.push_back(tmp_val);
        bs[tmp_val + OFFSET] = 1;
	}
}

void solve()
{
	dp[OFFSET] = 1;
	for(int cnt = 0; cnt < (1 << 10); cnt++)
	{
		cp_dp = dp;
		dp.reset();
        for(int x: li)
        	dp |= ((cp_dp << x) >> n);

		if(dp[OFFSET])
		{
			cout << cnt + 1 << endl;
			return;
		}
	}

	cout << -1 << endl;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	read();
	solve();
	return 0;
}

#define maxl 100000
char sir[maxl];
int pos_ind = 0;

void Next() { if(++pos_ind == maxl) fread(sir, 1, maxl, stdin), pos_ind = 0;  }
void Read(int &x)
{
		for(; sir[pos_ind] < '0' || sir[pos_ind] > '9'; Next());
			for(x = 0; sir[pos_ind] >= '0' && sir[pos_ind] <= '9'; Next())
						x = x * 10 + sir[pos_ind] - '0';

}
