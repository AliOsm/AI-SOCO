#include<bits/stdc++.h>

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define all(c) (c).begin(),(c).end()
#define mp make_pair
#define pb push_back
#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define dbg(x) cerr<<__LINE__<<": "<<#x<<" = "<<(x)<<endl

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
const int inf = (int)1e9;
const double INF = 1e12, EPS = 1e-9;

const int MX = 2010;
int n, a[MX];
vi pos[MX];

int ans;
int bit[MX];
int sum(int i){
	int res = 0;
	for(i++ ; i; i -= i & -i) res += bit[i];
	return res;
}
void add(int i, int x){
	for(i++ ; i < MX; i += i & -i) bit[i] += x;
}

void solve(int idx){
	const vi &v = pos[idx];
	int m = v.size();
	int cur = 0, next = 1;
	vector<vi> dp(m + 1, vi(m + 1, inf));
	
	dp[0][0] = 0;
	int tot = sum(n);
	
	rep(i, m){
		int l = sum(v[i]), r = tot - l;
		
		rep(j, i + 1) if(dp[i][j] < inf){
			dp[i + 1][j + 1] = min(dp[i + 1][j + 1], dp[i][j] + r); //+
			dp[i + 1][j] = min(dp[i + 1][j], dp[i][j] + l + j); //-
		}
	}
	ans += *min_element(all(dp[m]));
	rep(i, m) add(v[i], 1);
}

int main(){
	cin >> n;
	vi v;
	rep(i, n){
		cin >> a[i]; a[i] = abs(a[i]);
		v.pb(a[i]);
	}
	v.pb(0);
	sort(all(v));
	v.erase(unique(all(v)), v.end());
	
	rep(i, n){
		a[i] = lower_bound(all(v), a[i]) - v.begin();
		pos[a[i]].pb(i);
	}
	rep(i, pos[0].size()) add(pos[0][i], 1);
	for(int i = 1; i < MX && pos[i].size(); i++) solve(i);
	cout << ans << endl;
	return 0;
}
