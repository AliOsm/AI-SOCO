#include <stdio.h>
#include <algorithm>

using namespace std;

struct sT {
    int w, h;
} a[1009];

bool operator<(sT a, sT b) {
    return a.h-a.w < b.h-b.w;
}
int n;

bool b[1009];

int Solve(int H)
{
    for (int i = 0; i < n; i++) b[i] = false;

    int ans = 0;
    int rem = n/2;
    for (int i = 0; i < n; i++) {
        if (a[i].w > H && a[i].h > H) return -1;
        if (a[i].h > H && !rem) return -1;

        if (a[i].h > H) {
            ans += a[i].h;
            rem--;
            b[i] = true;
        }
        else if (a[i].w > H) {
            ans += a[i].w;
            b[i] = true;
        }
    }

    for (int i = 0; i < n; i++) {
        if (b[i]) continue;
        if (rem && a[i].h < a[i].w) {
            ans += a[i].h;
            rem--;
        }
        else {
            ans += a[i].w;
        }
    }

    return ans*H;
}

int main()
{
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        scanf("%d %d", &a[i].w, &a[i].h);
    } sort(a, &a[n]);

    int ans = 1000000000;

    for (int H = 1; H <= 1000; H++) {
        int tmp = Solve(H);
        if (tmp != -1) ans = min(tmp, ans);
    }

    printf("%d", ans);
}
