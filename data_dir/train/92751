#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define mkp make_pair
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
#define all(x) x.begin(),x.end()
typedef long long ll;
typedef long double ld;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<62);
const int inf=(1<<30);
const int nmax=1e2+50;
const ll mod=1e9+7;
using namespace std;
ll ts,n,m,i,j,x,y;
ll a[nmax][nmax],f[nmax][nmax],rs,s;
int main()
{
	//freopen("sol.in","r",stdin);
	//freopen("sol.out","w",stdout);
	//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
	ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
	cin>>ts;
	while(ts--)
	{
		cin>>n>>m;
		for(i=1;i<=n;i++)for(j=1;j<=m;j++)cin>>a[i][j];
		rs=llinf;
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)
			{
				for(x=0;x<=n;x++)for(y=0;y<=m;y++)f[x][y]=llinf;
				s=a[i][j]-(i+j-2);
				if(a[1][1]<s)continue;
				f[1][1]=a[1][1]-s;
				for(x=1;x<=n;x++)
				{
					for(y=1;y<=m;y++)
					{
						if((x==1 && y==1) || s+x+y-2>a[x][y])continue;
						if(f[x-1][y]!=llinf)f[x][y]=min(f[x][y],f[x-1][y]+a[x][y]-(s+x+y-2));
						if(f[x][y-1]!=llinf)f[x][y]=min(f[x][y],f[x][y-1]+a[x][y]-(s+x+y-2));
					}
				}
				rs=min(rs,f[n][m]);
			}
		}
		cout<<rs<<'\n';
	}
	return 0;
}
