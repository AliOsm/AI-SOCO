#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>

//#pragma comment(linker, "/stack:200000000")
////#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC optimize("unroll-loops")

using namespace std;
typedef int mt;

template<typename T>
constexpr mt infValue = std::is_same<T, int>::value ? 2000100007 : 8600000000000000007ll;
template<typename T>
constexpr mt maxValue = std::is_same<T, int>::value ? 1000000007 : 1000000000000000001ll;

#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= b; ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

const mt INF = infValue<mt>;
const long long MOD = 1000000007ll;
const double EPS = 1e-6;
const mt MAX = maxValue<mt>;

#define N 111
#define K 4
#define P 18
#define M (2000111)

mt n, k, p;
char s[K][N];

mt setf(mt i, mt j, mt d, mt c) {
	mt u = 0;
	while (c && j < n - 1 && j) --c, ++u, s[i][j] = '#', j += d;
	return u;
}
int main(void)
{
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	scanf("%d %d", &n, &k);
	rep(0, K, i)
		rep(0, n, j) s[i][j] = '.';

	puts("YES");

	p = setf(1, (n >> 1) + 1, 1, k >> 1); k -= p;
	setf(1, (n >> 1) - 1, -1, p); k -= p;
	if (k) --k, s[1][n >> 1] = '#';

	p = setf(2, (n >> 1) + 1, 1, k >> 1); k -= p;
	setf(2, (n >> 1) - 1, -1, p); k -= p;
	if (k) --k, s[2][n >> 1] = '#';

	rep(0, K, i)
		puts(s[i]);
	
	return 0;
}