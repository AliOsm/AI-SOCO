/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
#define f(i,n) for(int i=0;i<n;i++)
#define rep(i,a,b) for(int i=a;i<=b;i++)
using namespace std;
typedef vector<int> vi;
typedef unsigned long long int ll;
vector<vector<int>> adj;

class TaskC {
public:
	void solve(std::istream& in, std::ostream& out) {
		ll n, k; in>>n>>k;
		vi d;
		bool ok = false;
		if(k<=1000000){
			for(ll i = 1; i*i<=n; ++i){
				if(n%i!=0) continue;
				d.push_back(i);
				if(i*i!=n) d.push_back(n/i);
			}
			sort(d.rbegin(), d.rend());
			for(ll x: d){
				ll sum = n/x;
				ll  j = 1;
				while(j*(j+1)/2<=sum) ++j;
				--j;
				if(j>=k){
					ll total = n;
					for(ll c = 1; c<k; ++c) out<<c*x<<" ", total-=c*x;
					out<<total;
					ok=true;
					break;
				}
			}
		}
		if(!ok) out<<-1;

	}
    void inG(int m, istream& in){ int u,v; adj = vector<vi>(200005);f(i, m){ in>>u>>v; adj[u].push_back(v); adj[v].push_back(u); }}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	TaskC solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
