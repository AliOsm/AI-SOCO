#include<bits/stdc++.h> 
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#include<complex>
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define MOD 1000000007
#define INF 2000000000
#define PI acos(-1);
#define E 998244353
#define pb push_back
#define mp make_pair
#define ll long long
#define x real
#define y imag

using namespace std;

int main()
{
	IOS;
	int n,m;
	cin >> n >> m;
	int arr[n+1];
	map<int,int>freq;
	int par[2];
	par[0]=0;par[1]=0;
	REP(i,1,n)
	{
		cin >> arr[i];
		freq[arr[i]]++;
		par[arr[i]%2]++;
	}
	int o=1,e=2;
	int ct=0;
	REP(i,1,n)
	{
		if(freq[arr[i]]>1)
		{
			if(arr[i]%2)
			{
				if(par[arr[i]%2]<=par[1-(arr[i]%2)])
				{
					while((o<=m)&&(freq[o]>0))
						o+=2;
					if(o>m)
					{
						cout << -1;
						return 0;
					}
					freq[o]++;
					freq[arr[i]]--;
					arr[i]=o;
					o+=2;
					ct++;
				}
				else
				{
					while((e<=m)&&(freq[e]>0))
						e+=2;
					if(e>m)
					{
						cout << -1;
						return 0;
					}
					freq[e]++;
					freq[arr[i]]--;
					arr[i]=e;
					e+=2;
					ct++;
				    par[1]--;
					par[0]++;
				}
			}
			else
			{
				if(par[arr[i]%2]<=par[1-(arr[i]%2)])
				{
					while((e<=m)&&(freq[e]>0))
						e+=2;
					if(e>m)
					{
						cout << -1;
						return 0;
					}
					freq[e]++;
					freq[arr[i]]--;
					arr[i]=e;
					e+=2;
					ct++;
				}
				else
				{
					while((o<=m)&&(freq[o]>0))
						o+=2;
					if(o>m)
					{
						cout << -1;
						return 0;
					}
					freq[o]++;
					freq[arr[i]]--;
					arr[i]=o;
					o+=2;
					ct++;
					par[0]--;
					par[1]++;
				}
			}
		}
	}
	REP(i,1,n)
	{
		if((arr[i]%2==1)&&(par[1]>par[0]))
		{
			while((e<=m)&&(freq[e]>0))
				e+=2;
			if(e>m)
			{
				cout << -1;
				return 0;
			}
			freq[arr[i]]--;
			freq[e]++;
			arr[i]=e;
			ct++;
			par[0]++;
			par[1]--;
			e+=2;
		}
		else if((arr[i]%2==0)&&(par[0]>par[1]))
		{
			while((o<=m)&&(freq[o]>0))
				o+=2;
			if(o>m)
			{
				cout << -1;
				return 0;
			}
			freq[arr[i]]--;
			freq[o]++;
			arr[i]=o;
			ct++;
			par[0]--;
			par[1]++;
			o+=2;
		}
	}
	cout << ct << "\n";
	REP(i,1,n)
		cout << arr[i] << " ";
}