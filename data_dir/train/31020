#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const int maxn = 3e6 + 10;

int n, q, a[maxn];
ll b, sum[maxn];

int to[maxn];

inline ll get (int l, int r)
{
	ll soma = sum[r];

	if (l) soma -= sum[l - 1];

	return soma;
}

inline int solve(int start)
{
	int i = start;
	int ans = 0;

	while (i < start + n) 
	{
		i = to[i] + 1; 
		++ans;
	}

	return ans;
}

int main()
{
	scanf ("%d %d", &n, &q);

	for (int i = 0; i < n; ++i) 
	{
		scanf ("%d", &a[i]);
		a[i + n] = a[i]; 
		a[i + n + n] = a[i];
	}

	sum[0] = a[0];
	for (int i = 1; i < n + n + n; ++i)
		sum[i] = sum[i - 1] + a[i];

	while (q--)
	{
		scanf ("%lld", &b);

		if (sum[n] <= b)
		{
			printf ("1\n");
			continue;
		}

		int pointer = 0;

		int best = n + n;
		int pos = -1;

		for (int i = 0; i < n + n; ++i)	
		{
			while (get(i, pointer + 1) <= b) ++pointer;
			
			to[i] = pointer;

			if (to[i] - i + 1 < best)
			{
				best = pointer - i + 1;
				pos = i;
			}
		}

		int ans = n + n;
		++best;

		for (int i = pos; i < pos + best; ++i) ans = min(ans, solve(i % n));
		
		printf ("%d\n", ans);
	}

	return 0;
}