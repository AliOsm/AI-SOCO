#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define IN freopen("transposition-115.txt","r",stdin)
#define OUT freopen("dichromatic.out","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define INF 1000000000000000000LL
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define sq(x)  ((x)*(x))

using namespace __gnu_pbds;
using namespace std ;

#define maxn 100005
#define mod 1000000007LL

typedef pair<i64,int> pii ;
typedef  long long int T ;

i64 dp[maxn] ;
int c[maxn] , v[maxn] ;

int main()
{
    int n , q ;
    scanf("%d %d",&n,&q) ;

    for(int i=1 ; i<=n ; i++) scanf("%d",&v[i]) ;
    for(int i=1 ; i<=n ; i++) scanf("%d",&c[i]) ;

    for(int i=1 ; i<=q ; i++)
    {
        int a , b ;
        scanf("%d %d",&a,&b) ;

        pii ans1=mp(0LL,0) , ans2=mp(0LL,0) ;

        for(int j=1 ; j<=n ; j++) dp[j] = -INF ;

        i64 ans = 0LL ;

        for(int j=1 ; j<=n ; j++)
        {
            i64 ret1 = dp[ c[j] ] + 1LL*v[j]*a ;
            i64 ret2 = 1LL*v[j]*b ;
            if( ans1.yy == c[j] ) ret2 += ans2.xx  ;
            else ret2 += ans1.xx  ;

            i64 ret = max(ret1,ret2) ;

            dp[ c[j] ] = max( dp[ c[j] ] , ret ) ;

            if( ret > ans2.xx )
            {
                if( c[j]==ans1.yy ) ans1.xx = max( ans1.xx , ret ) ;
                else{
                    ans2 = mp(ret,c[j]) ;
                    if( ans1.xx < ans2.xx ) swap( ans1 , ans2 ) ;
                }
            }
            ans = max(ans,ret ) ;
        }

        printf("%lld\n",ans) ;
    }

    return 0 ;
}
