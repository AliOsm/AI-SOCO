// I hate this problem ._.
#include <bits/stdc++.h>
#include <ext/hash_map>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

#define REP(i,n) for( (i)=0 ; (i)<(n) ; (i)++ )
#define rep(i,x,n) for( (i)=(x) ; (i)<(n) ; (i)++ )
#define REV(i,n) for( (i)=(n) ; (i)>=0 ; (i)-- )
#define FORIT(it,x) for( (it)=(x).begin() ; (it)!=(x).end() ; (it)++ )
#define foreach(it,c) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();++it)
#define rforeach(it,c) for(__typeof((c).rbegin()) it=(c).rbegin();it!=(c).rend();++it)
#define foreach2d(i, j, v) foreach(i,v) foreach(j,*i)
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define SZ(x) ((int)(x).size())
#define MMS(x,n) memset(x,n,sizeof(x))
#define mms(x,n,s) memset(x,n,sizeof(x)*s)
#define pb push_back
#define mp make_pair
#define NX next_permutation
#define UN(x) sort(all(x)),x.erase(unique(all(x)),x.end())
#define CV(x,n) count(all(x),(n))
#define FIND(x,n) find(all(x),(n))-(x).begin()
#define ACC(x) accumulate(all(x),0)
#define PPC(x) __builtin_popcount(x)
#define LZ(x) __builtin_clz(x)
#define TZ(x) __builtin_ctz(x)
#define mxe(x) *max_element(all(x))
#define mne(x) *min_element(all(x))
#define low(x,i) lower_bound(all(x),i)
#define upp(x,i) upper_bound(all(x),i)
#define NXPOW2(x) (1ll << ((int)log2(x)+1))
#define PR(x) cout << #x << " = " << (x) << endl ;

typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef pair<int, int> pii;

const int OO = (int) 2e9;
const double eps = 1e-9;

int m;
int h[2], a[2], x[2], y[2], c[2][2], len[2];

void genT(int p) {
    int cnt = 0, cur = h[p], sz = 0;
    while (cnt <= 2 * m && sz < 2) {
        cnt++;
        cur = (1LL * cur * x[p] + y[p]) % m;
        if (cur == a[p])
            c[p][sz++] = cnt;
    }
    len[p] = c[p][1] - c[p][0];
}

int main() {
    std::ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
#ifndef ONLINE_JUDGE
//  freopen("in.txt", "rt", stdin);
//  freopen("out.txt", "wt", stdout);
#endif
    cin >> m;
    for (int i = 0; i < 2; i++)
        cin >> h[i] >> a[i] >> x[i] >> y[i];
    genT(0);
    genT(1);
    if (c[0][0] == c[1][0] && c[0][0]) {
        cout << c[0][0] << endl;
        return 0;
    }
    if (c[0][0] == c[1][1] && c[0][0]) {
        cout << c[0][0] << endl;
        return 0;
    }
    if (c[1][0] == c[0][1] && c[1][0]) {
        cout << c[1][0] << endl;
        return 0;
    }
    if (!c[0][0] || !c[1][0] || !c[0][1] || !c[1][1]) {
        cout << -1 << endl;
        return 0;
    }
    int p = 0, cur;
    if (c[0][0] < c[1][0])
        p ^= 1;
    cur = (c[p][0] - c[p ^ 1][0]) % len[p ^ 1];
    for (int i = 0; i <= m; i++) {
        if (!cur) {
            cout << c[p][0] + 1LL * len[p] * i << endl;
            return 0;
        }
        cur = (cur + len[p]) % len[p ^ 1];
    }
    cout << -1 << endl;
    return 0;
}
