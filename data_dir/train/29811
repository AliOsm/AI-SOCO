//Bismillahir Rahmanir Rahim
#include <bits/stdc++.h>
using namespace std;

long long ar[1000009],pr[1000009],ap[1000009];
map<long long,long long>mymap;
string aa,dd,ff,gg;
char ss[1000009];
vector<pair<long long,long long> >vec;
set<long long>sett;
priority_queue<pair<long long,long long> >pq;
vector<string>ANS;


int main()
{
    long long i,j,k,l,n,m,ans,temp,sum,now,noww,ind,flag,uu,tt,rr;
    cin>>n;
    ind=1LL<<30;

    for(i=1;i<=n;i++)
    {
        cin>>ar[i];
        ind=min(ind,ar[i]);
    }

    flag=0;
    for(i=ind;i>0;i--)
    {
        temp=0;
        for(j=1;j<=n;j++) temp+=ar[j]-i;

        if(temp==0)
        {
            cout<<i<<endl<<0<<endl;
            return 0;
        }

        if(temp<2) continue;

        while(!pq.empty()) pq.pop();

        tt=0;
        rr=0;
        for(j=1;j<=n;j++)
        {
            if(ar[j]-i>0)
            {
                pq.push(make_pair(ar[j]-i,j));
                tt+=ar[j]-i;
                rr=max(rr,ar[j]-i);
            }
        }

        if(rr>tt-rr)
        {
            continue;
        }

        flag=1;

        while(!pq.empty())
        {
            vec.clear();
            //cout<<endl;
            for(j=1;j<=2 && !pq.empty();j++)
            {
                now=pq.top().first;
                noww=pq.top().second;
                //cout<<now<<" "<<noww<<endl;
                pr[noww]=1;
                if(now-1>0) vec.push_back(make_pair(now-1,noww));
                pq.pop();
            }
            //cout<<endl;

            aa="";
            for(j=1;j<=n;j++)
            {
                if(pr[j])
                {
                    aa=aa+"1";
                    pr[j]=0;
                }
                else aa=aa+"0";
            }

            for(j=0;j<vec.size();j++)
            {
                pq.push(vec[j]);
                //cout<<vec[j].first<<" "<<vec[j].second<<endl;
            }
            //cin>>l;
            ANS.push_back(aa);
            //cout<<endl;
        }

        cout<<i<<endl;

        ans=ANS.size();

        temp=0;
        for(j=0;j<n;j++) if(ANS[ans-1][j]=='1') { temp++; uu=j+1; }
        if(temp==1)
        {
            for(j=0;j<ans;j++)
            {
                if(ANS[j][uu-1]=='0')
                {
                    ANS[j][uu-1]='1';
                    break;
                }
            }
            ans--;

        }
        cout<<ans<<endl;
        assert(ans<=10000);

        for(j=0;j<ans;j++) cout<<ANS[j]<<endl;
        return 0;
    }

    cout<<0<<endl;
    cout<<(n-1)*100<<endl;
    assert((n-1)*100<=10000);

    for(i=1;i<=n-1;i++)
    {
        for(j=1;j<=100;j++)
        {
            for(k=1;k<=n;k++)
            {
                if(k==i || k==i+1) printf("1");
                else printf("0");
            }
            printf("\n");
        }
    }

}
