#include <bits/stdc++.h>
using namespace std;
template<class T> void ckmin(T &a, T b) { a = min(a, b); }
template<class T> void ckmax(T &a, T b) { a = max(a, b); }
#define pb push_back
#define mp make_pair
#define Red ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define F first
#define S second
#define sz(x) (int)x.size()
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define repst(i, n) for(auto it = n.begin(); it != n.end(); ++it)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
typedef long long ll;

const int inf = int(1e9);
const int mod = inf + 7;
const int N = 5e5 + 555;
bool can[1111];
vector<int> forthere[1111];
int pos[1111];
int cnt = 1;
void solve()
{
	int n, m;
	cin >> n >> m;
	vector<pair<int, int> > after;
	rep(i, m){
		int t, l, r;
		cin >> t >> l >> r;
		if(t == 1){
			for(int j = l; j < r; ++j){
				can[j] = 1;
			}
		}else{
			after.pb(mp(l, r));
		}
	}
	rep(i, sz(after)){
		int l = after[i].F;
		int r = after[i].S;
		bool ok = 1;
		for(int j = l; j < r; ++j){
			if(!can[j]) ok = 0;
		}
		if(ok){
			cout << "NO";
			exit(0);
		}
	}
	cnt = n;
	rep(i, n){
		pos[i + 1] = cnt;
		if(!can[i + 1]) cnt--;
	}
	cout << "YES\n";
	rep(i, n){
		cout << pos[i + 1] << " ";
	}


}
int main()
{
	Red;
	solve();
	return 0;
}
