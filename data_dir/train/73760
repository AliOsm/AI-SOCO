#include<bits/stdc++.h>
#define pi 3.1415926535897932384626
using namespace std;
  
struct P{
  int x;
  long long y;
  bool operator <(const P &a) const{
    return y<a.y;
  };
};
  
int a,b,c,d,i,k,n,m,e,dx[10]={1,0,-1,0,1,1,-1,-1},dy[10]={0,1,0,-1,1,-1,1,-1};
long long o[61][20021];
long long l[61][20010];
long long j[66][20010];
int l1[61][21010];
int l2[61][21101];

long long x,y,z,mod=1000000007;
//string r,r1,r2,r3,r4,r5;
char r[201111];
vector<int> v[100101],v1;
priority_queue<P> q,q1,q2,q3,q4;
stack<int> s;
map<int,int> p;
P u[1];
  
bool as(P a,P b)
{
  if(a.x!=b.x)
  return a.x<b.x;
  return a.y<b.y;
}


int main()
{
  scanf("%d %d %d",&a,&b,&c);
  for(int t=1;t<=a;t++)
  for(int w=1;w<=b;w++)
  {
  scanf("%lld",&o[t][w]);
    o[t][w]=o[t][w]+o[t-1][w]+o[t][w-1]-o[t-1][w-1];
  }
  for(int t=1;t<=b;t++)
  o[a+1][t]=o[a+1][t]+o[a+1][t-1]+o[a][t]-o[a][t-1];
  for(int w=1;w+c-1<=b;w++)
  {
    j[1][w]=l[1][w]=o[2][w+c-1]-o[0][w+c-1]-o[2][w-1]+o[0][w-1];
    if(a==1) x=max(x,l[1][w]);
  }
  //puts("");
  for(int t=2;t<=a;t++)
  {
    for(;q4.size();q4.pop());
    for(;q3.size();q3.pop());
    for(;q2.size();q2.pop());
    for(;q1.size();q1.pop());
    for(int w=1;w+c-1<=b;w++)
      q4.push({w,l[t-1][w]});
      
    for(int w=1,h=1;w+c-1<=b;w++)
    {
      for(;q4.size()&&q4.top().x<=w+c-1;q4.pop());
      
      //if(w+c-1+c-1<=b)
       for(;h+c-1<=b&&h<=w+c-1;h++)
       q3.push({h,l[t-1][h]+o[t][h-1]-o[t-1][h-1]});
      for(;q3.size()&&q3.top().x<=w;q3.pop());
        q2.push({w,l[t-1][w]-(o[t][w+c-1]-o[t-1][w+c-1])});
      for(;q2.size()&&q2.top().x+c-1<w;q2.pop());
      if(w-c>=1) q1.push({w-c,l[t-1][w-c]});
      if(q1.size()) l[t][w]=max(l[t][w],q1.top().y+o[t+1][w+c-1]-o[t-1][w+c-1]-o[t+1][w-1]+o[t-1][w-1]);
      if(q4.size()) l[t][w]=max(l[t][w],q4.top().y+o[t+1][w+c-1]-o[t-1][w+c-1]-o[t+1][w-1]+o[t-1][w-1]);
      if(q2.size()) l[t][w]=max(l[t][w],q2.top().y+o[t+1][w+c-1]-o[t-1][w+c-1]-o[t+1][w-1]+o[t-1][w-1]+o[t][w-1]-o[t-1][w-1]);
      if(q3.size())l[t][w]=max(l[t][w],q3.top().y+o[t+1][w+c-1]-o[t][w+c-1]-o[t+1][w-1]+o[t][w-1]-(o[t][w-1]-o[t-1][w-1]));
      
      if(t==a) x=max(x,l[t][w]);
      /*for(int h=1;h+c-1<=b;h++)
      {
        z=j[t-1][h]+o[t+1][w+c-1]-o[t+1][w-1]-o[t-1][w+c-1]+o[t-1][w-1];
        if(h<=w&&w<=h+c-1) z-=o[t][h+c-1]-o[t-1][h+c-1]-o[t][w-1]+o[t-1][w-1];
        else if(w<=h&&h<=w+c-1) z-=o[t][w+c-1]-o[t-1][w+c-1]-o[t][h-1]+o[t-1][h-1];
        j[t][w]=max(j[t][w],z);
      }
      printf("%lld#%lld ",j[t][w],l[t][w]);*/
    }
    //puts("");
  }
  printf("%lld",x);
  //printf("\n%d",152+343+164+50+310+276+118+208+295);
}
