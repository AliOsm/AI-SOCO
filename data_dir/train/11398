#include<bits/stdc++.h>
#define F first
#define S second
#define pii pair<int,int>
#define pb push_back
typedef long long ll;
using namespace std;
const int N = 1e5 + 10;
ll wm[4 * N] , maxi[4 * N] , sum[4 * N] , arr[N];

void upd(int id , int p , int val , int s , int e){
    if(e - s < 2){
        sum[id] = val;
        maxi[id] = val;
        wm[id] = s;
        return ;
    }
    int mid = (s + e)/2;
    if(p < mid)upd(2*id , p , val , s , mid);
    else upd(2*id + 1 , p , val , mid , e);
    sum[id] = sum[2*id] + sum[2 * id + 1];
    if(maxi[2 * id] > maxi[2 * id + 1]){
        maxi[id] = maxi[2*id]; wm[id] = wm[2*id];
    }else{
        maxi[id] = maxi[2*id + 1]; wm[id] = wm[2*id + 1];
    }
    return ;
}

ll get_Sum(int id,int L,int R,int s,int e){
    if(L<=s && e<=R)return sum[id];
    if(L>=e || s>=R)return 0;
    int mid = (s + e)/2;
    return get_Sum(2*id , L , R , s , mid) + get_Sum(2*id + 1 , L , R , mid , e);
}

pii get_Max(int id, int L , int R , int s , int e){
    if(L<=s && e<=R)return {maxi[id] , wm[id]};
    if(L>=e || s>=R)return {-1 , -1};
    int mid = (s + e)/2;
    pii can1 = get_Max(2*id , L , R , s , mid);
    pii can2 = get_Max(2*id + 1 , L , R , mid , e);
    if(can1.F > can2.F)
        return can1;
    else return can2;
}

int main(){
    ios_base::sync_with_stdio(0); cin.tie(0);
    int n , m; cin>>n>>m;
    for(int i=0;i<n;i++){
        cin>>arr[i];
        upd(1 , i , arr[i] , 0 , n);
    }
    while(m--){
        int t; cin>>t;
        if(t == 1){
            int l , r; cin>>l>>r; l--;
            cout<<get_Sum(1 , l , r , 0 , n)<<'\n';
        }else if(t == 2){
            int l , r, x; cin>>l>>r>>x; l--;
            bool f = true;
            while(f){
                pii X = get_Max(1 , l , r , 0 , n);
                int val = X.F , ind = X.S;
                if(val < x)f = false;
                else{
                    val%=x;
                    upd(1 , ind , val , 0 , n);
                }
            }
        }else{
            int p , val;
            cin>>p>>val; p--;
            upd(1 , p , val , 0 , n);
        }
    }
}
