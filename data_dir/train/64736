
// Problem : C. Count Triangles
// Contest : Codeforces - Codeforces Round #643 (Div. 2)
// URL : https://codeforces.com/contest/1355/problem/C
// Memory Limit : 256 MB
// Time Limit : 1000 ms
// Powered by CP Editor (https://github.com/cpeditor/cpeditor)

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std;
using namespace __gnu_pbds;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>
ordered_set;	

#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<pii, int> para;
const ll inf = 1e18 + 7;
const ll maxN = 1e6 + 5;
const ll MOD = 1e9 + 7;

ll f(ll x, ll przes) {
	return (x * (x + 1)) / 2 + przes * x;
}

// sprawdz MODULO!
int main() {
    mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
	ios_base::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);
	int a, b, c, d;
	cin >> a >> b >> c >> d;
	ll ans = 0;
	FOR(x, a, b) {
		int l = max(c + 1 - x, b);
		int r = c;
		// x + l - c = tmp > 0
		// tmp
		// tmp + 1
		// tmp + 2 ...
		// tmp + y = d
		// d
		// d
		// tmp - c + (r - l + 1) = d;
		// x + r = tmp2 > c
		ll cands = (r - l + 1);
		ll tmp = min(d - c + 1, x + l - c);
		ll y = d - c + 1 - (tmp - 1);
		if (tmp == d - c + 1) y = 1;
		
		ll res = f(min(cands, y), tmp - 1);
		if (cands > y) {
			res += (cands - y) * (d - c + 1);
		}
		//cout << cands << " " << tmp << " " << y << " " << res << endl;
		// ll tmp = f(r - l + 1) + (r - l + 1) * (min(x + l - c - 1, d - c + 1));
		// cout << x << " " << l << " " << r << " " << tmp << endl;
		ans += res;
	}
	cout << ans << endl;
	return 0;
}
 
