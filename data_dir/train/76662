#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int maxn=1e6+7;
const int inf=INT_MAX;
const ll inff=1e18;
const ll mod=1e9+7;
#define pii pair<int,int>
#define mkp make_pair
#define F first
#define S second
#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
//#define int ll
//#define endl '\n'

vector<int> G[maxn];
int n;
int b[maxn];
int c[maxn];
vector<int> v;
unordered_map<int,int> mp;
int indeg[maxn],visit[maxn];
vector<int> ans;

void dfs(int now)
{
    while (!G[now].empty())
    {
        if (!visit[G[now].back()])
        {
            int k=G[now].back();
            visit[G[now].back()]=1;
            G[now].pop_back();
            dfs(b[k]+c[k]-now);
        }
        else
        {
            G[now].pop_back();
        }
    }
    ans.pb(v[now-1]);
}

int32_t main()
{
    IOS
    cin>>n;
    for (int i=1;i<=n-1;i++) cin>>b[i];
    for (int i=1;i<=n-1;i++) cin>>c[i];
    for (int i=1;i<=n-1;i++)
    {
        if (b[i]>c[i])
        {
            return cout<<-1<<endl,0;
        }
        v.pb(b[i]);
        v.pb(c[i]);
    }
    sort(all(v));
    int N=unique(all(v))-v.begin();
    for (int i=0;i<N;i++) mp[v[i]]=i+1;
    for (int i=1;i<=n-1;i++)
    {
        b[i]=mp[b[i]];
        c[i]=mp[c[i]];
        G[b[i]].pb(i);
        G[c[i]].pb(i);
        indeg[b[i]]++;
        indeg[c[i]]++;
    }

    int att=0,cnt=0;
    for (int i=1;i<=N;i++)
    {
        if (indeg[i]&1)
        {
            att=i;
            cnt++;
        }
    }
    if (att==0) att=1;
    if (cnt>2) return cout<<-1<<endl,0;
    dfs(att);
    for (int i=1;i<=n-1;i++)
    {
        if (!visit[i])
        {
            return cout<<-1<<endl,0;
        }
    }
    for (int i:ans) cout<<i<<' ';
}

