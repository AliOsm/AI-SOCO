#include <bits/stdc++.h>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
typedef pair<string, int> psi;
typedef pair<char, int> pci;
typedef pair<int, char> pic;
const ll MOD = (ll)998244353;
const long double PI = 3.141592653589793238462643383279502884197;

ll fac[1000001] = {1}, inv[1000001] = {1};
ll gcd(ll a,ll b){return b?gcd(b,a%b):a;}
ll mp(ll a,ll b){ll ret=1;while(b){if(b&1)ret=ret*a%MOD;a=a*a%MOD;b>>=1;}return ret;}
ll cmb(ll r, ll c) {return fac[r] * inv[c] % MOD * inv[r - c] % MOD;}

priority_queue<int, vector<int>, greater<int>> pq;
vector<int> v;

char s[1000002];
ll asum[1000002];
ll bsum[1000002];
ll csum[1000002];

ll on[1000002];
ll off[1000002];


int main() {
    for (int i = 1; i <= 1000000; i++) {
        fac[i] = fac[i - 1] * i % MOD;
        inv[i] = mp(fac[i], MOD - 2);
    }

    int n;
    scanf("%s", s + 1);
    n = strlen(s + 1);

    for (int i = 1; i <= n; i++) {
        asum[i] += asum[i - 1];
        bsum[i] += bsum[i - 1];
        csum[i] += csum[i - 1];

        if (s[i] == '(') asum[i]++;
        if (s[i] == ')') bsum[i]++;
        if (s[i] == '?') csum[i]++;
    }

    ll cnt = csum[n];
    for (int i = 0; i <= cnt; i++) {
        on[i] = cmb(cnt, i);
        if (i) on[i] = (on[i] + on[i - 1]) % MOD;
    }
    if (cnt) {
        for (int i = 0; i <= cnt - 1; i++) {
            off[i] = cmb(cnt - 1, i);
            if (i) off[i] = (off[i] + off[i - 1]) % MOD;
        }
    }

    ll a, b, c, d;
    ll ret = 0;
    for (int i = 1; i <= n; i++) {
        a = asum[i - 1];
        b = bsum[n] - bsum[i];
        c = csum[i - 1];
        d = csum[n] - csum[i];

        // printf("%lld %lld %lld %lld\n", a, b, c, d);
        ll t = b+d-a-1;

        if (s[i] == '(') {
            t = min(t, cnt);
            if (t >= 0) ret = (ret + on[t]) % MOD;
        }
        else if (s[i] == '?') {
            t = min(t, cnt - 1);
            if (t >= 0) ret = (ret + off[t]) % MOD;
        }
    }
    printf("%lld", ret);
}