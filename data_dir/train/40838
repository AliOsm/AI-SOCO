#include <bits/stdc++.h>

using namespace std;

const int N = 2003;
const int P[] = { 127, 131 };
const int M[] = { 2000000011, 2000000033 };

char t[N], prefix[N], suffix[N];
bool isPrefix[N], isSuffix[N];
pair<int, int> hashes[N * N];

int main() {
#ifndef ONLINE_JUDGE
  freopen("in.txt", "r", stdin);
#endif
  scanf("%s %s %s", t, prefix, suffix);
  int n = strlen(t), np = strlen(prefix), ns = strlen(suffix);
  for (int i = 0; i < n; ++i) {
    bool check = i + np <= n;
    for (int j = i; check && j < i + np; ++j)
      check &= prefix[j - i] == t[j];
    isPrefix[i] = check;
    check = i + ns <= n;
    for (int j = i; check && j < i + ns; ++j)
      check &= suffix[j - i] == t[j];
    isSuffix[i] = check;
  }
  int sz = 0;
  for (int i = 0; i < n; ++i) {
    if (isPrefix[i]) {
      long long h1 = 0, h2 = 0;
      for (int j = i; j < n; ++j) {
        h1 = (h1 * P[0] + t[j]) % M[0];
        h2 = (h2 * P[1] + t[j]) % M[1];
        if (isSuffix[j] && i + np <= j + ns)
          hashes[sz++] = make_pair(h1, h2);
      }
    }
  }
  sort(hashes, hashes + sz);
  int res = unique(hashes, hashes + sz) - hashes;
  printf("%d\n", res);
}
