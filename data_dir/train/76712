#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<string.h>
#include<queue>
#include<vector>
#include<string>
using namespace std;
#define REP(a,b) for(int a=0;a<b;a++)
#define ll long long
#define llu unsigned long long int
#define N 10000010
#define all(x) x.begin(),x.end()
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define inf 0x3f3f3f3f
#define mod 1000000007
struct M
{
    int c[6][6];
    M() { memset(c,0,sizeof(c)); }
};
int n, sx, sy, dx, dy;
ll t;
int dv[6][6]=
{{2, 1, 1, 0, 1, 2},
 {1, 2, 0, 1, 1, 2},
 {1, 1, 1, 0, 1, 2},
 {1, 1, 0, 1, 1, 2},
 {0, 0, 0, 0, 1, 1},
 {0, 0, 0, 0, 0, 1}};
int add(int a, int b)
{
    return (a+b)%n;
}
int mul(int a, int b)
{
    return (a*1LL*b)%n;
}
void mul(M &t, M a, M b)
{
    REP(i, 6) REP(j, 6)
    {
        int s=0;
        REP(k, 6) s=add(s, mul(a.c[i][k], b.c[k][j]));
        t.c[i][j]=s;
    }
}
int main()
{
    cin>>n>>sx>>sy>>dx>>dy>>t;
    --sx; --sy;
    dx=(n+dx%n)%n;
    dy=(n+dy%n)%n;
    M r, x;
    REP(i, 6) r.c[i][i]=1;
    REP(i, 6) REP(j, 6) x.c[i][j]=dv[i][j];
    while (t)
    {
        if (t&1) mul(r, r, x);
        t>>=1; mul(x, x, x);
    }
    int v[6]={sx, sy, dx, dy, 0, 1};
    REP(i, 2)
    {
        int s=0;
        REP(j, 6) s=add(s, mul(r.c[i][j], v[j]));
        printf("%d%c", s+1, i==1?'\n':' ');
    }
}