#include <stdio.h>
#include <vector>
#include <map>
#include <iostream>
#include <sstream>
#include <set>
#include <ctype.h>
#include <string>
#include <string.h>
#include <queue>
#include <numeric>
#include <assert.h>
#include <algorithm>
using namespace std;
#define REP(i,n) for(int i=0;i<(n);i++)
typedef long long ll;
const int MAXN=151;

int n,k;
int s;

int q[MAXN];
int dp[2][MAXN][MAXN*(MAXN-1)/2+1];
const int INF=2000000000;


int main()
{
    scanf("%d%d",&n,&k);
    scanf("%d",&s);
    s=min(s,n*(n-1)/2);
    REP(i,n)
        scanf("%d",&q[i]);
    int t=0;
    REP(i,k+1) REP(j,s+1)
        dp[t][i][j]=INF;
    dp[t][0][0]=0;
    for(int i=0;i<n;i++, t=1-t)
    {
        REP(j,k+1) REP(l,s+1)
            dp[1-t][j][l]=INF;
        for(int j=0;j<=k;j++)
            for(int l=0;l<=s;l++)
            {
                if(dp[t][j][l]==INF) continue;
                //take
                if(j+1<=k && l+(i-j)<=s)
                    dp[1-t][j+1][l+(i-j)]=min(dp[1-t][j+1][l+(i-j)], dp[t][j][l]+q[i]);
                //skip
                dp[1-t][j][l]=min(dp[1-t][j][l], dp[t][j][l]);
            }
    }
    int res=INF;
    for(int i=0;i<=s;i++)
        res=min(res,dp[t][k][i]);
    printf("%d\n",res);
    return 0;
}
