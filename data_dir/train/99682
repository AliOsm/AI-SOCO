//  amiD
#include <bits/stdc++.h>
#define ld long double
#define ll long long int
#define mod 1000000007
#define ll_inf 1000000000000000
#define int_inf 1000000000
#define pb push_back
#define Endl '\n'
#define endl '\n'
#define EPS 1e-9
#define PI acos(-1.0)
#define ii pair<int,int>
using namespace std;
unsigned ll a[200010], nxt[200010], one[200010];
int main(){
    unsigned  ll n, k, amid=0;
    cin>>n>>k;
    one[n+1]=0;
    for(int i=1;i<=n;i++)cin>>a[i];
    int lst=n+1, cc=0;
    for(int i=n;i>=1;i--){
        nxt[i]=lst;
        if(a[i]>1)lst=i;
        one[i]=cc;
        if(a[i]==1)cc++;
        else cc=0;
    }
    for(int i=1;i<=n;i++){
        // move at max 60
        unsigned s=a[i], p=a[i];
        if(s*k==p)amid++;
        int cur=i;
        for(int j=0;j<100;j++){
            if(p>3*1e18)break;
            // first option is to move before nxt[cur]
            ll ones=one[cur];
            ll dif=p-k*s;
            if(dif>0 && dif%k==0 && dif/k<=ones && ones){
                amid++;
            }
            // second option move to nxt[cur];
            s+=ones;
            cur=nxt[cur];
            if(cur==n+1)break;
            ll tt=p;
            s+=a[cur];
            p*=a[cur];
            if(p/a[cur]!=tt)break;
            if(p==s*k)amid++;

        }
    }
    cout<<amid<<endl;
}
