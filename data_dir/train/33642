#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <map>
#include <string>
#include <queue>
#include <string>
#include <stack>
#include <utility>
#include <functional>
#include <set>

using namespace std;

char s[1000000 + 10];
int v[1000000 + 10], mn[1000000 + 10], ps[1000000 + 10];
int bst = 0, bstamt = 1;

void solve(int lt, int rt) {
	if (lt >= rt) return;

	if (v[rt] == 0) {
		if (rt - lt + 1 > bst) {
			bst = rt - lt + 1;
			bstamt = 1;
		} else
		if (rt - lt + 1 == bst) {
			++bstamt;
		}
		return;
	} 

	mn[rt] = v[rt];
	ps[rt] = rt;

	for (int i = rt - 1; i >= lt; --i) {
		mn[i] = mn[i + 1];
		ps[i] = ps[i + 1];
		if (v[i] < mn[i]) {
			mn[i] = v[i];
			ps[i] = i;
		}
	}

	int p = lt;
	while (p <= rt) {
		if (ps[p] == p) {
			++p;
			continue;
		}

		int cur = ps[p] - p;
		if (mn[p] == 0) ++cur;
		if (cur > bst) {
			bst = cur;
			bstamt = 1;
		} else
		if (cur == bst)
			++bstamt;

		p = ps[p] + 1;
	}
}

int main() {

#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	
	scanf("%s", s);
	int n = strlen(s);
	v[0] = s[0] == '(' ? 1 : -1;

	int last = 0;

	for (int t = 1; t < n; ++t) {
		v[t] = v[t - 1];
		if (v[t] == -1) v[t] = 0, last = t;

		if (s[t] == '(')
			++v[t];
		else
			--v[t];

		if (v[t] == -1) {
			if (v[t - 1] == -1) continue;
			solve(last, t - 1);
		}
	}

	if (v[n - 1] != -1) {
		solve(last, n - 1);
	}

	cout << bst << " " << bstamt;

	return 0;
}