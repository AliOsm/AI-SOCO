#include <bits/stdc++.h>

using namespace std;

#define sz(a) (int)a.size()

typedef long long ll;
typedef vector <int> vi;

const int inf = (int)1e9 + 7;
const int N = (int)3e5 + 20;
const int M = 5001;

int d[N], p[N], s[N], h[N], x[N][2], t[N];
vi g[N];
bool u[N];

void dfs(int v, int k) {
   u[v] = 1;
   p[v] = k;
   s[k]++;
   t[v] = v;
   for (int i = 0; i < sz(g[v]); ++i) {
      int to = g[v][i];
      if (!u[to]) {
         dfs(to, k);
         if (x[to][0] >= x[v][0]) {
            x[v][1] = x[v][0];
            x[v][0] = x[to][0] + 1;
            t[v] = to;
         } else {
            if (x[to][0] >= x[v][1]) {
               x[v][1] = x[to][0] + 1;
            }
         }
      }
   }
}

void go(int v, int w, int k, int pp) {
   h[k] = min(h[k], max(w, x[v][0]));
   d[k] = max(d[k], x[v][0] + max(w, x[v][1]));
   for (int i = 0; i < sz(g[v]); ++i) {
      int to = g[v][i];
      if (pp != to) {
         if (t[v] == to) {
            go(to, max(w, x[v][1]) + 1, k, v);
         } else {
            go(to, max(w, x[v][0]) + 1, k, v);
         }
      }
   }
}

int fs(int v) {
   return (p[v] == v ? v : p[v] = fs(p[v]));
}

void us(int v, int u) {
   v = fs(v);
   u = fs(u);
   if (v != u) {
      if (s[u] > s[v]) {
         swap(u, v);
      }
      d[v] = max(max(d[u], d[v]), h[v] + h[u] + 1);
      if (h[v] <= h[u]) {
         h[v] = max(h[u], h[v] + 1);
      }
      s[v] += s[u];
      p[u] = v;
   }
}

int main() {
#ifndef ONLINE_JUDGE
   freopen("input.txt", "r", stdin);
   freopen("output.txt", "w", stdout);
#endif
   int n, m, q;
   scanf("%d %d %d", &n, &m, &q);
   for (int i = 0; i < m; ++i) {
      int a, b;
      scanf("%d %d", &a, &b);
      --a; --b;
      g[a].push_back(b);
      g[b].push_back(a);
   }
   for (int i = 0; i < n; ++i) {
      if (!u[i]) {
         dfs(i, i);
         h[i] = inf;
         go(i, 0, i, i);
      }
   }
   for (int i = 0; i < q; ++i) {
      int x, y, z;
      scanf("%d %d", &x, &y);
      --y;
      if (x == 1) {
         y = fs(y);
         printf("%d\n", d[y]);
      } else {
         scanf("%d", &z);
         --z;
         us(y, z);
      }
   }
   return 0;
}
