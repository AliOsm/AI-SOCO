#include<iostream>
#include<stdio.h>
#include <bits/stdc++.h>
#include <math.h>
#include <string>
#include <sstream>
#define ll long long
#define F first
#define S second
#define pb push_back
#define ld long double
#define pll pair<long long,long long>
#define pld pair<long double,long double>
using namespace std;
ll mod=10e9+7;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
            result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }
    return (result)%mod;
}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
            return false;
    return true;
}
vector<vector<ll> >par(2,vector<ll>(1005));
ll root(ll x,ll gen)
{
    ll y=x;
    while(par[gen][x]!=x)
        x=par[gen][x];
    par[gen][y]=x;
    return x;
}
void un(ll x,ll y,ll gen)
{
    ll r1=root(x,gen);
    ll r2=root(y,gen);
    if(r1!=r2)
        par[gen][r1]=r2;

}
int main()
{
 ll n,k;
 cin>>n>>k;
 vector<ll> v(n);
 ll maxe=0;
 ll i,j;
 for(i=0;i<n;i++)
 {
    cin>>v[i];
    maxe=max(maxe,v[i]);
 }
 ll mine=*min_element(v.begin(),v.end());
 ll rep=1;
 if(maxe>k)
 {
     ll diff=maxe-k;
     rep=1+(diff+k-1)/k;
     if(mine<diff)
     {
         cout<<"NO";
         return 0;
     }
 }
 cout<<"YES\n";
 for(i=0;i<n;i++)
 {
     ll kt=0;
     ll print=1;
     for(j=1;j<=v[i];j++)
        {
            cout<<print<<" ";
            print=print+1;
            print=print%(k+1);
            if(print==0)
                print+=1;
        }
    cout<<"\n";
 }
}

