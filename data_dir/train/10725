#include <stdio.h>
#include <math.h>
#include <string.h>
#include <stdlib.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <utility>
#include <stack>
#include <queue>
#include <set>
#include <list>
#include <bitset>
#include <array>
using namespace std;

#define fi first
#define se second
#define long long long
typedef pair<int,int> ii;

const int XVAL = 0, YVAL = 1;
int n;
int X, Y;
int pref[200003][2];
char S[200003];

int sum(int kir, int kan, int tipe) { return pref[kan][tipe] - pref[kir-1][tipe]; }

bool cek(int len)
{
	if(len == 0) return sum(1,n,XVAL) == X && sum(1,n,YVAL) == Y;
	for(int i = 1; i+len-1 <= n; i++)
	{
		int le = i, ri = i+len-1;
		int SX = sum(1,le-1,XVAL) + sum(ri+1,n,XVAL);
		int SY = sum(1,le-1,YVAL) + sum(ri+1,n,YVAL);
		if(abs(X-SX) + abs(Y-SY) <= len)
			return 1;
		
	}
	return 0;
}

int main()
{
	// ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	// freopen("input.in", "r", stdin);

	cin >> n;
	for(int i = 1; i <= n; i++) cin >> S[i];
	cin >> X >> Y;

	for(int i = 1; i <= n; i++)
	{
		pref[i][XVAL] += pref[i-1][XVAL];
		pref[i][YVAL] += pref[i-1][YVAL];
		if(S[i] == 'L') pref[i][XVAL]--;
		if(S[i] == 'R') pref[i][XVAL]++;
		if(S[i] == 'D') pref[i][YVAL]--;
		if(S[i] == 'U') pref[i][YVAL]++;
	}
	if(abs(X) + abs(Y) > n || (abs(X) + abs(Y) - n) % 2)
	{
		printf("-1\n");
		return 0;
	}
	else
	{
		int kir = 0, kan = n;
		while(kir < kan)
		{
			int mid = (kir+kan)/2;
			if(!cek(mid)) kir = mid+1;
			else kan = mid;
		}
		printf("%d\n", kir);
	}
}





