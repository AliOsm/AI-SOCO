#include <bits/stdc++.h>
#define fore(x,a,b) for(int x=a, qwerty=b; x<qwerty; x++)
#define ALL(a) (a).begin(),(a).end()
#define SZ(a) ((int)(a).size())
#define pb push_back
#define FIN ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define fst first
#define snd second
#define mset(a,v) memset((a),(v),sizeof(a))
//#pragma GCC optimize ("O3")
//#pragma GCC target ("sse4")
using namespace std;
typedef long long ll;
typedef pair<ll,ll> ii;
const int N=200500;

ll gcd(ll a, ll b){return a ? gcd(b%a,a) : b;}

pair<ll,ll> extendedEuclid(ll a, ll b){
	ll x,y;
	if(b==0) return {1,0};
	auto p = extendedEuclid(b,a%b);
	x=p.snd;
	y=p.fst-(a/b)*x;
	if(a*x+b*y == -gcd(a,b)) x=-x,y=-y;
	return {x,y};
}

pair<pair<ll,ll>,pair<ll,ll>> diophantine(ll a, ll b, ll r){
	ll d=gcd(a,b);
	a/=d; b/=d; r/=d;
	auto p = extendedEuclid(a,b);
	p.fst *=r; p.snd*=r;
	return {p,{-b,a}};
}

int main(){FIN;
	ll n; cin >> n;
	for(ll b1 = 2; b1*b1 <= n; b1++){
		if(n%b1 == 0 && (n-1)%gcd(b1,n/b1) == 0){
			ll b2 = n/b1;
			auto ans = diophantine(b2,b1,n-1);
			ll a1 = ans.fst.fst, a2 = ans.fst.snd;
			ii x = {(1-a1)/ans.snd.fst,(b2-a1)/ans.snd.fst};
			ii y = {(1-a2)/ans.snd.snd,(b1-a2)/ans.snd.snd};
			if(ans.snd.fst < 0) swap(x.fst,x.snd);
			if(ans.snd.snd < 0) swap(y.fst,y.snd);
			
			ii now = {max(x.fst,y.fst), min(x.snd,y.snd)};
			
			fore(k,-5,6){
				a1 = ans.fst.fst+(now.fst+k)*ans.snd.fst;
				a2 = ans.fst.snd+(now.fst+k)*ans.snd.snd;
				if(a1 > 0 && a1 < b1 && a2 > 0 && a2 < b2){
					cout << "YES\n2\n" << a1 << " " << b1 << "\n";
					cout << a2 << " " << b2 << endl;
					return 0;
				}
			}
		}
	}
	cout << "NO" << endl;
}