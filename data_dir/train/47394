#include<iostream>
#include<sstream>
#include<vector>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<complex>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cassert>
using namespace std;

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define each(i,c) for(__typeof(c.begin()) i=c.begin();i!=c.end();i++)
#define pb push_back
#define mp make_pair
#define all(c) c.begin(),c.end()
#define dbg(x) cerr<<__LINE__<<": "<<#x<<" = "<<(x)<<endl

typedef vector<int> vi;
typedef pair<int,int> pi;
typedef long long ll;
const int inf=(int)1e9;
const double EPS=1e-9, INF=1e12;

const int MX = 100100;
int n;
int a, b, c, d;
int x[MX], y[MX];

int bit[MX];
int sum(int i){
	int res = 0;
	for(; i; i -= i & -i) res = max(res, bit[i]);
	return res;
}
void add(int i, int x){
	for(; i < MX; i += i & -i) bit[i] = max(bit[i], x);
}

int main(){
	scanf("%d", &n);
	scanf("%d/%d %d/%d", &a, &b, &c, &d);
	
	vector<pair<ll, ll> > ps;
	vector<ll> xs;
	rep(i, n){
		scanf("%d%d", x + i, y + i);
		
		ll xx = (ll)b * y[i] - (ll)a * x[i];
		ll yy = (ll)d * y[i] - (ll)c * x[i];
		ps.pb(mp(yy, xx));
		xs.pb(xx);
	}
	xs.pb(0);
	sort(all(ps));
	sort(all(xs));
	reverse(all(ps));
	xs.erase(unique(all(xs)), xs.end());
	
	int zero = lower_bound(all(xs), 0) - xs.begin() + 1;
	
	rep(i, n){
		int x = lower_bound(all(xs), ps[i].second) - xs.begin() + 1;
		if(x <= zero || ps[i].first >= 0) continue;
		add(x + 1, sum(x) + 1);
	}
	cout << sum(n + 2) << endl;
	
	return 0;
}
