//besme taala
//ya_hossein
#include<bits/stdc++.h>
using namespace std;
vector<int> q[10000];
int flag[10000000], flag2[10000], s, p[10000][2], op, r[10000][2], orr;
void dfs(int x)
{
	flag2[x] = 1;
	for(int i = 0; i < q[x].size(); i++)
	{
		int y = min(x, q[x][i]) * 1000 + 10000 + max(x, q[x][i]);
		if(flag[y])
		continue;
		else if(flag2[q[x][i]])
		{
			p[op][0] = q[x][i];
			p[op][1] = x;
			op++;
			flag[y] = 1;
		}
		else
		{
			flag[y] = 1;
			dfs(q[x][i]);
		}
	}
}
int main()
{
	int n;
	cin >> n;
	for(int i = 2; i <= n; i++)
	{
		int x, y;
		cin >> x >> y;
		q[x].push_back(y);
		q[y].push_back(x);
	}
	for(int i = 1; i <= n; i++)
	{
		if(flag2[i])
		continue;
		dfs(i);
		if(s)
		{
			r[orr][0] = s;
			r[orr][1] = i;
			orr++;
		}
		s = i;
	}
	cout << op << endl;
	while(op--)
	{
		cout << p[op][0] << ' ' << p[op][1] << ' ' << r[orr - 1][0] << ' ' << r[orr - 1][1] << endl;
		orr--;
	}
}