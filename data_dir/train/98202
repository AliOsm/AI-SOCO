#include<bits/stdc++.h>
using namespace std;
#define fr first
#define sc second
typedef long long ll;
typedef double ld;
typedef pair<int,int> p2;
typedef pair<p2,int> p3;
typedef vector<ll> vi;
const ll Mod = 998244353;
const ll INF32 = 5 + 2e9;
const ll INF64 = 5 + 1e18;
const ll MAX =5 + 3e5;
int n,m,p,sc[10],stopped,speed[10];
int G[1005][1005];
int x[] = {0,0,1,-1};
int y[] = {1,-1,0,0};
queue<p2> c[10];
bool IsValid(int i,int j)
{
    return i>=0 && j>=0 && i<n && j<m && G[i][j]==0;
}
void play(int p)
{
    int sz = c[p].size();
    while(sz--)
    {
        p2 cur = c[p].front();
        c[p].pop();
        for(int i=0; i<4; i++)
            if( IsValid(cur.fr + x[i],cur.sc + y[i] ) )
                G[cur.fr + x[i]][cur.sc + y[i]] = p,sc[p]++,c[p].push(p2(cur.fr + x[i],cur.sc + y[i]) ) ;
    }
    if( c[p].empty() )
        stopped++;
}
int main()
{
    cin >> n >> m >> p;
    for(int i=1; i<=p; i++)
        cin >> speed[i];
    for(int i=0; i<n; i++)
        for(int j=0; j<m; j++)
        {
            char ch;
            cin >> ch;
            if( ch == '#' )
                G[i][j] = -1;
            else if( isdigit(ch) )
            {
                int pl = int(ch - '0');
                G[i][j] = pl;
                c[pl].push(p2(i,j));
                sc[pl]++;
            }
        }
    for(int i=1; stopped<p; i++)
    {
        if(i>p)
            i=1;
        for(int j=0; c[i].size() > 0 && j<speed[i]; j++)
            play(i);
    }
    for(int i=1; i<=p; i++)
        cout << sc[i] << ' ';
    cout << endl;
    return 0;
}
