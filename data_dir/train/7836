#include <stdio.h>
#include <math.h>
#include <string.h>
#include <limits.h>
#include <stdlib.h>
#include <algorithm>
#include <iostream>
#include <utility>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC optimize(3)
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC target("sse3","sse2","sse")
#pragma GCC target("avx","sse4","sse4.1","sse4.2","ssse3")
#pragma GCC target("f16c")
#pragma GCC optimize("inline","fast-math","unroll-loops","no-stack-protector")
#pragma GCC target ("string"...)
#pragma GCC push_options
#pragma GCC pop_options
#pragma GCC reset_options
#pragma GCC optimize ("O3")

using namespace std;

#define long long long
#define fi first
#define se second
typedef pair<int,int> ii;

double A[200003], B[200003];
map<ii, int> mp;

int gcd(int a, int b)
{
	return (b == 0)? a : gcd(b, a%b);
}

int main()
{
	// ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	// freopen("input.in", "r", stdin);

	int n; scanf("%d", &n);
	for(int i = 0; i < n; i++)
		scanf("%lf", &A[i]);

	int res = 0;
	int hit = 0;
	for(int i = 0; i < n; i++)
	{
		double x; scanf("%lf", &x);
		if(A[i] == 0 && x == 0)
			hit++;
		else if(A[i] != 0)
		{
			int fpb = gcd(abs(A[i]),abs(x));
			A[i] /= fpb;
			x /= fpb;

			if(A[i] < 0)
				A[i] *= -1, x *= -1;
			mp[{A[i],x}]++;
		}
	}
	for(auto it : mp) res = max(it.se, res);
	printf("%d\n", res+hit);

}








