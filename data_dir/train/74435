#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ff first
#define ss second
#define PI 2*acos(0.0)
#define all(a) a.begin(),a.end()
#define INF (1<<28)
#define mem(a,x) memset(a,x,sizeof(a))
#define SEGMENT_TREE left=2*node,right=left+1,mid=(b+e)/2
using namespace std;


/*------------------------------------BITMASK------------------------------------------*/
//int Change(int N, int pos){return N= N^(1<<pos);}
//bool Check(int N, int pos){return (bool)(N &(1<<pos));}
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------DIRECTION_ARRAY-------------------------*/
//------FOUR_DIRECTION---------//
//int fx[]={0,1,0,-1};
//int fy[]={1,0,-1,0};


//------EIGHT_DIRECTION---------//
//int fx[]={0,1,1,1,0,-1,-1,-1};
//int fy[]={1,1,0,-1,-1,-1,0,1};
/*--------------------------------------------------------------------------------------*/

//int gcd(int a, int b){return (a==0)? b: gcd(b%a,a);}
//int lcm(int a, int b){return (a/gcd(a,b))*b;}

///-----------------------------START FROM HERE--------------------------------------///

ll arr[2000005], brr[2000006], crr[2000006];
ll mod=1000000007;

ll bigmod(ll n, ll po){
    if(po==0)return 1;
    if(po==1)return n;
    if(po%2==0){
        ll ret=bigmod(n, po/2);
        return (ret*ret)%mod;

    }
    ll ret=bigmod(n, po-1);

    return (n*ret)%mod;
}

void sieve(int k){

    ll bad=0;

    for(int i=2; i<=k; i++){
        crr[i]+=crr[i-1];
        crr[i]%=mod;
         bad=(bad+1)%mod;
         ll p=(bad+crr[i-1])%mod;
        arr[i]=((arr[i]-p)%mod+mod)%mod;
    brr[i]=((arr[i]-arr[i-1])%mod+mod)%mod;

        for(int j=i+i; j<=k; j+=i){
            arr[j]=((arr[j]-brr[i])%mod+mod)%mod;
            crr[j]+=brr[i];
            crr[j]%=mod;
        }
        //cout<<i<<" "<<arr[i]<<" "<<crr[i]<<" "<<bad<<endl;
    }

}

int main(){

    arr[1]=1;
    int n,k;
    scanf("%d %d", &n, &k);
    for(int i=2; i<=k; i++){
        arr[i]=bigmod(i, n);
        //brr[i]=((arr[i]-bigmod(i-1, n))%mod+mod)%mod;

    }
    sieve(k);
    ll ans=0;

    for(int i=1; i<=k; i++){
        ll p=(arr[i]^i);
        ans+=p;
        ans%=mod;

    }
    printf("%I64d\n", ans);
}
