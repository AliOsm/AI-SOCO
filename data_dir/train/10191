	#include<bits/stdc++.h>
	#define mt(x, y) make_pair(x, y)
	#define triple pair<long long, long long>
	using namespace std;
	
	int a[100005];
	long long S[100005];
	set<triple > M1, M2;
	
	long long getSum(int x, int y) {
		return S[y] - (x > 0 ? S[x - 1] : 0);
	}
	
	
	void go(int x, int y) {
		if (y < x)
			return;
	//	cout << x << " "  << y << " " << getSum(x, y) << "!!" << endl;
		M1.insert(mt(x, y));
		M2.insert(mt(getSum(x, y), x));
	}
	
	int main() {
		ios::sync_with_stdio(false);
	
		int n; scanf("%d", &n);
		for (int i = 0; i < n; i++)
			scanf("%d", a + i), S[i] = a[i];
		for (int i = 1; i < n; i++)
			S[i] += S[i - 1];
	
		go(0, n - 1);
	
	
		for (int i = 0; i < n; i++) {
			int x; scanf("%d", &x); --x;
			set<triple >::iterator it = M1.lower_bound(mt(x + 1, -1));
	
			--it;
	
			int L = (*it).first;
			int R = (*it).second;
	//		cout << L << " " << R << "!!!!!!!!!!!!!!!" << endl;
			M1.erase(it);
			M2.erase(mt(getSum(L, R), L));
	
	
			go(L, x - 1);
			go(x + 1, R);
	
			if (!M2.empty())
				printf("%lld\n", (*(--M2.end())).first);
			else
				printf("0\n");
		}
	
		return 0;
	}
