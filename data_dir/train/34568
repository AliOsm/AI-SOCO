#include<bits/stdc++.h>
using namespace std;

typedef long long                   ll;
typedef pair<int,int>               pii;
typedef pair<ll,ll>                 pll;
typedef pair<string , string>       pss;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define F                           first
#define S                           second
#define sep                         ' '
#define file_io                     freopen("input.txt" , "r+" , stdin) ; freopen("output.txt" , "w+" , stdout);
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define error(x)                    cerr << "$$$ " << x << '\n';
#define error2(x,y)                 cerr << "#F : " << x << "      #S : " << y << '\n';
#define pb                          push_back

const ll MX5 = 5*1e5+3;
const ll MX6 = 2*1e6+3;
const ll INF = 8e18;
const ll MOD = 1e9 + 7;
const ll MOD2= 998244353;

ll power(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * power(a * a % md, b / 2, md) % md : power(a * a % md, b / 2, md) % md));
}
ll bmm(ll a,ll b){
    return (a%b==0 ? b : bmm(b,a%b));
}

ll A[1003][1003];
ll dp1[1003][1003];
ll dp2[1003][1003];
ll dp3[1003][1003];
ll dp4[1003][1003];
int main(){
    fast_io
    //file_io
    ll n,m;
    cin >> n >> m;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            cin >> A[i][j];
        }
    }
    ll stx=0,sty=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(i==stx && j==sty){
                dp1[i][j]=A[i][j];
            }
            else if(i==stx){
                dp1[i][j]=dp1[i][j-1]+A[i][j];
            }
            else if(j==sty){
                dp1[i][j]=dp1[i-1][j]+A[i][j];
            }
            else{
                dp1[i][j]=max(dp1[i-1][j],dp1[i][j-1])+A[i][j];
            }
        }
    }
    stx=0;
    sty=m-1;
    for(int i=0;i<n;i++){
        for(int j=sty;j>=0;j--){
            if(i==stx && j==sty){
                dp2[i][j]=A[i][j];
            }
            else if(i==stx){
                dp2[i][j]=dp2[i][j+1]+A[i][j];
            }
            else if(j==sty){
                dp2[i][j]=dp2[i-1][j]+A[i][j];
            }
            else{
                dp2[i][j]=max(dp2[i-1][j],dp2[i][j+1])+A[i][j];
            }
        }
    }
    stx=n-1;
    sty=m-1;
    for(int i=stx;i>-1;i--){
        for(int j=sty;j>-1;j--){
            if(i==stx && j==sty){
                dp3[i][j]=A[i][j];
            }
            else if(i==stx){
                dp3[i][j]=dp3[i][j+1]+A[i][j];
            }
            else if(j==sty){
                dp3[i][j]=dp3[i+1][j]+A[i][j];
            }
            else{
                dp3[i][j]=max(dp3[i+1][j],dp3[i][j+1])+A[i][j];
            }
        }
    }
    stx=n-1;
    sty=0;
    for(int i=stx;i>-1;i--){
        for(int j=0;j<m;j++){
            if(i==stx && j==sty){
                dp4[i][j]=A[i][j];
            }
            else if(i==stx){
                dp4[i][j]=dp4[i][j-1]+A[i][j];
            }
            else if(j==sty){
                dp4[i][j]=dp4[i+1][j]+A[i][j];
            }
            else{
                dp4[i][j]=max(dp4[i+1][j],dp4[i][j-1])+A[i][j];
            }
        }
    }
    ll ans=-1;
    for(int i=1;i<n-1;i++){
        for(int j=1;j<m-1;j++){
            ll val=dp2[i-1][j]+dp4[i+1][j]+dp1[i][j-1]+dp3[i][j+1];
            ans=max(ans,val);
            val=dp2[i][j+1]+dp4[i][j-1]+dp1[i-1][j]+dp3[i+1][j];
            ans=max(ans,val);
        }
    }
    cout << ans;
    return 0;
}

