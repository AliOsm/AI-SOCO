#include <bits/stdc++.h>

using namespace std;

struct Pair
{
	int w, h, idx;
	Pair(int ww, int hh, int ii): w(ww), h(hh), idx(ii){}
	bool operator < (Pair other) const
	{
		return w == other.w ? h < other.h : w < other.w;
	}
};

const int n_ = 5002;
int n, wC, hC;
short memo[n_][n_];
vector<Pair> arr;

short dp (int idx, int maxIdx)
{
	short &ret = memo[idx][maxIdx];

	if (idx == n) return ret = 0;

	if (ret != -1) return ret;

	int maxW = maxIdx == 5001 ? wC : arr[maxIdx].w;
	int maxH = maxIdx == 5001 ? hC : arr[maxIdx].h;

	short take = 0, leave = dp(idx + 1, maxIdx);
	if (arr[idx].w > maxW && arr[idx].h > maxH)
		take = 1 + dp(idx + 1, idx);

	return ret = max(take, leave);
}

void print(int idx, int maxIdx)
{
	if (idx == n) return;

	int maxW = maxIdx == 5001 ? wC : arr[maxIdx].w;
	int maxH = maxIdx == 5001 ? hC : arr[maxIdx].h;

	if(memo[idx][maxIdx] == 1 + memo[idx + 1][idx] && (arr[idx].w > maxW && arr[idx].h > maxH))
	{
		cout << arr[idx].idx << " ";
		print(idx + 1, idx);
	}
	else
	{
		print(idx + 1, maxIdx);
	}
}
int main ()
{
	cin >> n >> wC >> hC;
	for (int i = 0; i < n; i++)
	{
		int w, h;
		cin >> w >> h;
		arr.push_back(Pair(w, h, i + 1));
	}

	sort(arr.begin(), arr.end());
	memset(memo, -1, sizeof(memo));

	cout << dp(0, 5001) << "\n";
	print(0, 5001);
	cout << "\n";
}
