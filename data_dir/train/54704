#include "bits/stdc++.h"
#define FI first.first
#define SE first.second
#define TH second
#define fi first
#define se second
#define th second

using namespace std;

class DebugStream {}LOG;
template <typename T>DebugStream &operator<<(DebugStream &s, const T&) { return s; }
#ifdef DEBUG
#define LOG clog
#endif

typedef long long ll;
typedef pair<ll, ll> ii;
typedef long double ld;

const int maxN = 1e5 + 9, maxV = 1e6 + 9, MOD = 1e9 + 7, SQ = 335, lg = 20, bs = 29;

int n, arr[maxN], perm[maxN], comp[maxN];
ll smm[maxN], ovr, ans[maxN];

int get(int u) {
	if(comp[u] == u) return u;
	return comp[u] = get(comp[u]);
}

void unite(int u, int v) {
	smm[u] += smm[v];
	ovr = max(ovr, smm[u]);
	comp[v] = u;
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	#ifdef DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif

	cin >> n;
	for(int i = 0; i < n; i++) cin >> arr[i];
	for(int i = 0; i < n; i++) cin >> perm[i], perm[i]--;
	memset(comp, -1, sizeof comp);

	for(int i = n - 1; i >= 0; i--) {
		int elem = perm[i];
		comp[elem] = elem;
		smm[elem] = arr[elem];
		ans[i] = ovr;
		if(elem + 1 < n && comp[elem + 1] != -1) unite(elem, get(elem + 1));
		if(elem - 1 >= 0 && comp[elem - 1] != -1) unite(get(elem), get(elem - 1));
		ovr = max(ovr, smm[get(elem)]);
	}
	for(int i = 0; i < n; i++) cout << ans[i] << '\n';
}
