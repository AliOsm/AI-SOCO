/// ******************************************* K
/// B *                                       * H
/// I *    Solved By : JU_Undefined_Coder     * A
/// R *    Team Member : Bir Bahadur Khatri   * T
/// U *                                       * R
/// ******************************************* I

#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <string>
#include <fstream>
#include <sstream>
#include <map>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <set>
#include <list>
#define LL long long int
#define PI 2.0*acos(0.0)
#define MEM(a,val) memset(a,val,sizeof(a))

#define Max(a,b) ((a>b)?a:b)
#define Min(a,b) ((a<b)?a:b)
#define _Max(a,b,c) Max(a,Max(b,c))
#define _Min(a,b,c) Min(a,Min(b,c))
#define S1(a) a=in<int>()
#define S2(a,b) a=in<int>(),b=in<int>()
#define S3(a,b,c) a=in<int>(),b=in<int>(),c=in<int>()
#define SL1(a) a=in<LL>()
#define SL2(a,b) a=in<LL>(),b=in<LL>()
#define SL3(a,b,c) a=in<LL>(),b=in<LL>(),c=in<LL>()
#define F(i,a,b) for(int i=a;i<b; i++)
#define R(i,a,b) for(int i=a-1;i>=b; i--)
#define all(a) a.begin(),a.end()
#define cnt_bit(a) __builtin_popcountll(a)
#define CHR getchar()
#define D double
#define sz size()
#define PB push_back
#define cp printf("here\n");
#define NL printf("\n")
#include <time.h>
/// Fast Scan
template <typename T> T in()
{
    char ch;
    T n = 0;
    bool ng = false;
    while (1)
    {
        ch = getchar();
        if (ch == '-')
        {
            ng = true;
            ch = getchar();
            break;
        }
        if (ch>='0' && ch<='9')     break;
    }
    while (1)
    {
        n = n*10 + (ch - '0');
        ch = getchar();
        if (ch<'0' || ch>'9')   break;
    }
    return (ng?-n:n);
}
///**********************************************************//
//#define _cin ios_base::sync_with_stdio(0); cin.tie(0);
/// if(st<=l&&ed>=r)

/*
    int mid=(l+r)/2;
    int lft=2*id;
    int rgt=lft+1;
*/
///*********************************************************//

using namespace std;
///         0123456789
#define MX  1002
#define MOD 1000000007
#define INF (1<<28)
#define eps 1e-9

/// ==========================================////

int ncr[2*MX][2*MX],dp[MX][MX][50],Fac[MX];

void NCR()
{
    ncr[0][0]=ncr[1][0]=ncr[1][1]=1;
    Fac[0]=1,Fac[1]=1;
    F(i,2,2001)
    {
        Fac[i]=((LL)Fac[i-1]*(i))%MOD;
        ncr[i][0]=ncr[i][i]=1;
        F(j,1,i)
        {
            ncr[i][j]=(ncr[i-1][j]+ncr[i-1][j-1])%MOD;
        }
    }
}

int solve(int baki,int dist,int koto)
{
    if(baki<0) return 0LL;
    if(koto==0) return 1LL;
    if(baki<=dist) return 0LL;
    int &res=dp[baki][dist][koto];
    if(res!=-1) return res;
    res=solve(baki-1-dist,dist+1,koto-1);
    if(dist) res=(res+solve(baki-1,dist+1,koto))%MOD;
    return res;
}

int main()
{
    NCR();
    MEM(dp,-1);
    int t;
    S1(t);

    F(cs,0,t)
    {
        int n,k;
        S2(n,k);
        if(k>=45)
        {
            printf("0\n");
            continue;
        }
        int ans=0;
        F(i,1,n+1)
        {
            ans=(ans+((((LL)solve(i,0,k)*Fac[k])%MOD)*(LL)(ncr[n-i+k][k]))%MOD)%MOD;
        }
        printf("%d\n",ans);
    }

    return 0;
}
