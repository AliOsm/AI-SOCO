#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <map>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <set>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>

#define oo 1e9
#define pi 3.1415926536
#define all(x) x.begin(),x.end()
#define sorta(x) sort(all(x))
#define sortam(x,comp) sort(all(x),comp)
#define sortd(x) sort(x.rbegin(),x.rend())
#define pb push_back
#define mp make_pair
#define sf(x) scanf("%d", &x);
#define sfll(x) scanf("%I64d", &x);
#define pr(x) printf("%I64d\n", x);

typedef long long ll;
using namespace std;

int main() {
    cin.sync_with_stdio(false);
    cin.tie(NULL);
    int w, h, n;
    cin >> w >> h >> n;
    set<int>a, b;
    multiset<int>dw, dh;
    a.insert(0);
    a.insert(w);
    b.insert(0);
    b.insert(h);

    dw.insert(w);
    dh.insert(h);

    ll tw = w, th = h;
    while(n--) {
        char c;
        int tmp;
        cin >> c >> tmp;

        if(c == 'H') {
            set<int>::iterator it = b.lower_bound(tmp);
            int high = *it, low;
            it--;
            low = *it;
            dh.erase(dh.find(high - low));
            dh.insert(high - tmp);
            dh.insert(tmp - low);

            b.insert(tmp);

            th = *dh.rbegin();
        }
        else {
            set<int>::iterator it = a.lower_bound(tmp);
            int high = *it, low;
            it--;
            low = *it;
            dw.erase(dw.find(high - low));
            dw.insert(high - tmp);
            dw.insert(tmp - low);

            a.insert(tmp);

            tw = *dw.rbegin();
        }

        cout << th*tw << '\n';
    }
    return 0;
}
