#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <cmath>
#include <bitset>
#include <string>
using namespace std;

#define rep(i, n) f(i, 0, n - 1)
#define f(i, a, b) fd(i, a, b, 1)
#define fd(i, a, b, d) for(int i = (a); i <= (int)(b); i += (d))
#define uint64 unsigned int64
#define int64 long long

#ifndef ONLINE_JUDGE
#include <time.h>
clock_t _time;
void startProfile()
{
  _time = clock();
  printf("Begin profiling..\n...\n");
}
void stopProfile()
{
  printf("\n...\nEnd profiling. Time: %f sec.\n", (double)(clock() - _time) / CLOCKS_PER_SEC);
}
#endif

int main()
{
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  startProfile();
#endif

  int a, b, k;
  cin >> a >> b >> k;

  const int N = 1e6;
  vector<int> p(N + 1, 1);
  
  p[0] = p[1] = 0;
  for(int i = 2; i * i <= N; i++)
    if(p[i] != 0)
      for(int j = i + i; j <= N; j += i)
        p[j] = 0;

  f(i, 1, N)
    p[i] += p[i - 1];

  int result = -1;

  if(p[b] - p[a - 1] >= k)
  {
    int l, r;
    for(r = l = a; l <= b; l++)
    {
      bool success = false;
      while(r <= b)
      {
        if(p[r] - p[l - 1] == k)
        {
          success = true;
          break;
        }
        r++;
      }
      result = max(result, r - l + 1);
      if(!success)
        break;
    }
  }

  cout << result;

#ifndef ONLINE_JUDGE
  stopProfile();
#endif
  return 0;
}