#include <bits/stdc++.h>

using namespace std;

const int inf = (int)(1e9) + 100;
const int mod = (int)(1e9) + 100;
const int N = (int)(1e5) + 100;

#define pb push_back
#define mp make_pair
#define sz(a) (int)(a.size())
#define all(a) a.begin(), a.end()
#define ff first
#define ss second
#define ll long long
#define pii pair <int, int>
#define pll pair <ll, ll>
#define vi vector <int>
#define vll vector <ll>
#define vpi vector <pii>
#define vpl vector <pll>
#define sc1(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define frw(i, p, n) for(int i = p; i <= n; i++)
#define bck(i, n, p) for(int i = n; i >= p; i--)
#define mem(a) memset(a, 0, sizeof(a))

int n, k, a[1010], b[1010], c[1010];

void quicksort(int l, int r){
	int i = l, j = r, mid = a[(l + r) >> 1];
	while(i <= j){
		while(a[i] < mid) i++;
		while(mid < a[j]) j--;
		if(i <= j){
			int tmp = a[i];
			a[i] = a[j];
			a[j] = tmp;
			i++;
			j--;
		}
	}
	if(l < j) quicksort(l, j);
	if(i < r) quicksort(i, r);
}

void quicksort1(int l, int r){
	int i = l, j = r, mid = c[(l + r) >> 1];
	while(i <= j){
		while(c[i] < mid) i++;
		while(mid < c[j]) j--;
		if(i <= j){
			int tmp = c[i];
			c[i] = c[j];
			c[j] = tmp;
			i++;
			j--;
		}
	}
	if(l < j) quicksort1(l, j);
	if(i < r) quicksort1(i, r);
}                      

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n >> k;
	for(int i = 0; i < n; i++){
		cin >> b[i];
	}
	for(int i = 0; i < k; i++){
		cin >> a[i];
	}
	quicksort(0, k - 1);

	int p = k - 1;
	for(int i = 0; i < n; i++){
		if(b[i] == 0){
			b[i] = a[p--];
		}
	}
	for(int i = 0; i < n; i++) c[i] = b[i];
	quicksort1(0, n - 1);
	int cnt = 0;
	for(int i = 0; i < n; i++) cnt += (c[i] == b[i]);
	cout << (cnt!= n ? "Yes" : "No");
	#ifndef ONLINE_JUDGE
        fprintf(stderr, "Time: %d ms\n", (int)(clock() * 1000. / CLOCKS_PER_SEC));
    #endif
	return 0;
}