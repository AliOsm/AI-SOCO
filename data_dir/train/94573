#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <queue>
#define MAXV 10000
#define NUM_DICE 100
#define ll long long
using namespace std;

bool CheckIfPrime(int x) {
    for(int y=2;y*y<=x;y++) {
        if (x%y==0)
            return false;
    }
    return true;
}

// 1,2,3,4,5,6,7,8,9,
// 1..R
// R+1 to R+C

int A[555][555];

ll gcd(ll a, ll b) {
    while(b!=0) {
        ll t = b;
        b=a%b;
        a=t;
    }
    return a;
}


void Solve(int r,int c) {
    if (r == 1 && c == 1)
    {
        cout << 0 << endl;
        return;
    }
    
    
    if (r == 1) {
        for(int i=1;i<=c;i++) {
            printf("%d ",i+1);
        }
        cout << endl;
        return;
    }
    
    if (c == 1) {
        for(int i=1;i<=r;i++) {
            printf("%d\n",i+1);
        }
        return;
    }
    
    // 1,...,primes[r-2]
    // primes[r-1],...,primes[r+c-2]
    
    vector<int> P;
    
    for(int x=2;;x++) {
        if (P.size() == r+c-1)
            break;
        if (CheckIfPrime(x))
            P.push_back(x);
    }
    
    vector<int> R;
    for(int i=1;i<=r;i++)
        R.push_back(i);
    
    vector<int> C;
    for(int i=r+1;i<=r+c;i++)
        C.push_back(i);
    
    
    for(int i=0;i<r;i++) {
        for(int j=0;j<c;j++) {
            A[i][j]=R[i]*C[j];
            printf("%d ",R[i]*C[j]);
        }
        cout << endl;
    }
//    return;
    
    set<int> allG;
    for(int i=0;i<r;i++) {
        int g=A[i][0];
        for(int j=1;j<c;j++) {
            g=gcd(g,A[i][j]);
        }
//        cout << g << endl;
        allG.insert(g);
    }
    
    for(int i=0;i<c;i++) {
        int g=A[0][i];
        for(int j=1;j<r;j++) {
            g=gcd(g,A[j][i]);
        }
//        cout << g << endl;
        allG.insert(g);
    }
    
    if (allG.size() != r+c) {
        printf("err\n");
        exit(-1);
    }
    
   // cout << allG.size() << endl;
    
    
}

int main() {
    int r,c;

    cin>>r>>c;
    
    
    
    Solve(r,c);
    
    
    
    
}
