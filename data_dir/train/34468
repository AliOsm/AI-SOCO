#define _CRT_SECURE_NO_WARNINGS
#include<bits/stdc++.h>
#include<unordered_map>
#include<unordered_set>
using namespace std;
typedef long long          ll;
typedef unsigned long long ull;
typedef long double        ld;
#define all(A)             A.begin(), A.end()
#define rall(A)            A.rbegin(), A.rend()
#define mem(A, B)          memset(A, B, sizeof A)
#define sorta(A)           sort(all(A))
#define sortd(A)           sort(rall(A))
#define sortf(A, F)        sort(all(A), F)
#define PI                 (acos(0.) * 2)
#define eps                .000000001
#define oo                 1000000000
template<class T1, class T2> inline void remax(T1& A, T2 B){ if(A < B)A = B; }
template<class T1, class T2> inline void remin(T1& A, T2 B){ if(A > B)A = B; }
ll Gcd(ll a, ll b){ if(!a || !b)return a + b; while(a %= b ^= a ^= b ^= a);  return b; }
ll Power(ll base, ull power){ ll ret = 1; while(power){ if(power & 1)ret *= base; power >>= 1; base *= base; } return ret; }
ll PowerMod(ll base, ull power, ll mod){ if(!power)return 1 % mod; if(power & 1)return (base * PowerMod(base, power - 1, mod)) % mod; return PowerMod((base * base) % mod, power >> 1, mod); }
FILE *Input = stdin;


inline void run(){
map<string,int>nap;
int n;
scanf("%d",&n);
while(n--){
string s;
int x;
cin>>s;
scanf("%d",&x);
remax(nap[s],x);
}
n=(int)nap.size();
printf("%d\n",n);
for(auto it=nap.begin();it!=nap.end();++it){
int c=0;
for(auto it2=nap.begin();it2!=nap.end();++it2)
if(it->second>=it2->second)++c;
c*=100;
cout<<it->first;
putchar(' ');
if(c>=n*99)puts("pro");
else if(c>=n*90)puts("hardcore");
else if(c>=n*80)puts("average");
else if(c>=n*50)puts("random");
else puts("noob");
}
}
int main(){
 #ifdef LOCAL
 Input = freopen("in.in", "r", stdin);
 freopen("out.out", "w", stdout);
 while(!feof(Input)){
  run();
  puts("");
 }
 printf("\n\ntime: %d ms\n", (int)(clock() * 1000. / CLOCKS_PER_SEC));
 #else
 run();
 #endif
 return 0;
}