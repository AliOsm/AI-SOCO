#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

#define F first
#define S second

const int mx = 200050;

pair<ll,ll> rht[mx];
pair<ll,ll> lft[mx];
ll arr[mx];
ll cnt[mx];
map<ll,ll> mpp;

int main()
{
    ll n , k , i , j , p , q;
    scanf("%lld %lld",&n,&k);

    ll kk = k;

    for(i = 0 ; i < n; i ++)
    {
        scanf("%lld",&p);
        mpp[p]++;
    }

    k = 1;

    for(auto itr = mpp.begin() ; itr != mpp.end() ; itr++)
    {
        arr[k] = (*itr).first;
        cnt[k] = (*itr).second;

        k++;
    }

    ll lim = k-1;
    ll cur , now;
    for(i = lim ; i >= 1 ; i--)
    {
        rht[i].F += rht[i+1].F;
        rht[i].F += cnt[i];
        rht[i].S = 1LL*(arr[i+1]-arr[i])*rht[i+1].F ;
        rht[i].S += rht[i+1].S;
        //cout << i << " " << rht[i].F << " " << rht[i].S << endl;
    }
    for(i = 1 ; i <= lim ; i++)
    {
        lft[i].F += lft[i-1].F;
        lft[i].F += cnt[i];
        lft[i].S = 1LL*(arr[i]-arr[i-1])*lft[i-1].F;
        lft[i].S += lft[i-1].S;
        //cout << i << " " << lft[i].F << " " << lft[i].S << endl;
    }

    ll ans = 1e15;

    for(i = 1 ; i <= lim ; i++)
    {
        ll here = kk;
        here -= cnt[i];

        if(here <= 0)
        {
            ans = 0;
            break;
        }

        ll d1 = arr[i+1]-arr[i]-1LL;
        ll d2 = arr[i]-arr[i-1]-1LL;
        ll dd;


        dd = min(here,rht[i+1].F);
        now = rht[i+1].S;
        now += 1LL*rht[i+1].F*d1;
        now += dd;

        here -= dd;

        if(here > 0)
        {
            dd = min(here,lft[i-1].F);
            now += lft[i-1].S;
            now += 1LL*lft[i-1].F*d2;
            now += here;
            here -= dd;

        }

        ans = min(ans,now);


        here = kk;
        here -= cnt[i];

        dd = min(here,lft[i-1].F);
        now = lft[i-1].S;
        now += 1LL*lft[i-1].F*d2;
        now += dd;
        here -= dd;

        if(here > 0)
        {
            dd = min(here,rht[i+1].F);
            now += rht[i+1].S;
            now += 1LL*rht[i+1].F*d1;
            now += dd;
            here -= dd;
        }

        ans = min(ans,now);


    }

    printf("%lld\n",ans);


    return 0;
}
