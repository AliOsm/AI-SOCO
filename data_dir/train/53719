#include<iostream>
#include<cstdlib>
#include<vector>
#include<climits>
#include<cctype>
#include<map>
#include<list>
#include<cstdio>
#include<algorithm>
#include<memory.h>
#include<cmath>
#include<queue>
#include<fstream>
#include<sstream>
#include<set>
#include<iomanip>
#define L long long int
#define LD long double
#define pi 3.141592653589793238462643383
#define M 1000000007

using namespace std;

struct e
{
       LD t;
       string w;
};

bool com(struct e e1,struct e e2)
{
     return e1.t<e2.t;
}

int main()
{
    int tc=1,i,ln,m;
    LD x,y,z,a,b,m1,vx,vy,vz,t,tx,tz;
    while(tc--)
    {
              cin>>a>>b>>m1;
              cin>>vx>>vy>>vz;
              x=a/2;
              y=m1;
              z=0;
              /*ln=0;
              while(1)
              {
                  struct e t[5];
                  if(vx!=0)
                  t[0].t=(a-x)/vx;
                  else
                  t[0].t=1000000000.0;
                  t[0].w="x";
                  if(vx!=0)
                  t[1].t=-x/vx;
                  else
                  t[1].t=1000000000.0;
                  t[1].w="x";
                  if(vz!=0)
                  t[2].t=(b-z)/vz;
                  else
                  t[2].t=1000000000.0;
                  t[2].w="z";
                  if(vy!=0)
                  t[3].t=-y/vy;
                  else
                  t[3].t=1000000000.0;
                  t[3].w="y";
                  if(ln!=0&&vz!=0)
                  t[4].t=-z/vz;
                  else
                  t[4].t=1000000000.0;
                  t[4].w="z";
                  for(i=0;i<5;i++)
                  if(t[i].t<=0)
                  t[i].t=1000000000.0;
                  sort(t,t+5,com);
                  for(i=0;i<5;i++)
                  cout<<t[i].t<<" "<<t[i].w<<"\n";
                  if(t[0].w=="x")
                  {
                                 x=x+vx*t[0].t;
                                 y=y+vy*t[0].t;
                                 z=z+vz*t[0].t;
                                 vx=-vx;
                  }
                  else if(t[0].w=="z")
                  {
                                 x=x+vx*t[0].t;
                                 y=y+vy*t[0].t;
                                 z=z+vz*t[0].t;
                                 vz=-vz;
                  }
                  else
                  {
                                 x=x+vx*t[0].t;
                                 y=y+vy*t[0].t;
                                 z=z+vz*t[0].t;
                                 break;
                  }
                  ln++;
                  //cout<<x<<" "<<y<<" "<<z<<"\n";
              }*/
              t=abs(y/vy);
              if(vx!=0)
              {
              tx=abs(2*a/vx);
              //cout<<tx<<"\n";
              m=(int)(t/tx);
              //cout<<tx<<"\n";
              tx=t-m*tx;
              //cout<<tx<<"\n";
              x=x+vx*tx;
              while(!(x>=0&&x<=a))
              {
                                  if(x>a)
                                  {
                                         x=a-(x-a);
                                  }
                                  if(x<0)
                                  {
                                         x=-x;
                                  }
              }
              }
              if(vz!=0)
              {
              tz=abs(2*b/vz);
              m=(int)(t/tz);
              //cout<<tz<<"\n";
              tz=t-m*tz;
              //cout<<tz<<"\n";
              z=z+vz*tz;
              if(z>b)
              z=b-(z-b);
              }
              //cout<<x<<" "<<z<<"\n";
              //printf("%Lf %Lf\n",(LD)x,(LD)z);
              cout<<fixed;
              cout<< setprecision (12)<<x<<" "<<z<<"\n";
    }
    return 0;
}
