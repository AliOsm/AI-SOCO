#include<bits/stdc++.h>
using namespace std;



const int N = 3e5 + 5;



int n, m, k;
long long d[N];
vector < pair < int, int > > g[N];
int x[N], y[N], w[N];
bool used[N];

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n >> m >> k;
    for(int i = 1; i <= m; i++){
        cin >> x[i] >> y[i] >> w[i];
        g[x[i]].push_back(make_pair(y[i], i));
        g[y[i]].push_back(make_pair(x[i], i));
    }
    for(int i = 1; i <= n; i++){
        d[i] = 9e18;
    }
    d[1] = 0;
    set < pair < long long, int > > q;
    q.insert(make_pair(0, 1));
    while(!q.empty()){
        int v = q.begin()->second;
        q.erase(q.begin());
        for(auto it : g[v]){
            int to = it.first, len = w[it.second];
            if(d[to] > d[v] + len){
                q.erase(make_pair(d[to], to));
                d[to] = d[v] + len;
                q.insert(make_pair(d[to], to));
            }
        }
    }
    queue < int > s;
    int cur = 0;
    s.push(1);
    used[1] = true;
    vector < int > ans;
    while(!s.empty()){
        int v = s.front();
        s.pop();
        for(auto it : g[v]){
            int to = it.first, len = w[it.second];
            if(!used[to] && d[to] == d[v] + len){
                used[to] = true;
                s.push(to);
                ans.push_back(it.second);
                if((int)ans.size() > k){
                    ans.pop_back();
                    goto to;
                }
            }
        }
    }
    to:;
    cout << (int)ans.size() << "\n";
    for(auto it : ans){
        cout << it << " ";
    }
}
