#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <string.h>
#include <cstdlib>
#include <ctime>
typedef long long ll ;
using namespace std;
vector<vector<int> > v(10);
int n;
vector<int> nums;
int bt(int i,int start,int mid);
int check(int mid)
{
    sort(nums.begin(),nums.end());
    int ret=max(0,bt(0,0,mid));
    while(next_permutation(nums.begin(),nums.end()))
    {
        ret=max(ret,max(0,bt(0,0,mid)));
    }
    return ret;
}
int bt(int i,int start,int mid)
{
    if(i==8)
    {
        return 0;
    }
    vector<int> ::iterator it=lower_bound(v[nums[i]].begin(),v[nums[i]].end(),start);
    int ret=-1e8;
    if(mid==0)
    {
        ret=max(ret,bt(i+1,start,mid));
    }
    int x=it-v[nums[i]].begin();
    if(mid!=0&&x+mid-1<v[nums[i]].size())
    {
        ret=max(ret,bt(i+1,v[nums[i]][x+mid-1]+1,mid)+mid);
    }
    if(x+mid<v[nums[i]].size())
    {
        ret=max(ret,bt(i+1,v[nums[i]][x+mid]+1,mid)+mid+1);
    }
    return ret;
}
int main()
{
    std::cin.tie(0);
    std::ios::sync_with_stdio(false);
    //freopen("read.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    int x  ;
    cin >> n;
    for(int i =1; i<=8; i++)
    {
        nums.push_back(i);
    }
    for(int i =0; i<n; i++)
    {
        cin >> x;
        v[x].push_back(i);
    }
    int st=0,en=n;
    while(st<=en)
    {
        int mid=(st+en+1)/2;
        if(check(mid))
        {
            st=mid+1;
        }
        else
            en=mid-1;
    }
    cout << check(st-1) << endl;
    return 0;
}
