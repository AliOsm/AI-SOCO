/////////////////////////   _LeMur_
#define _CRT_SECURE_NO_WARNINGS
#include <unordered_map>
#include <unordered_set>
#include <functional>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <chrono>
#include <random>
#include <bitset>
#include <cstdio>
#include <vector>
#include <string>
#include <ctime>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <list>
#include <map>
#include <set>

using namespace std;

const int N = 100005;
const int inf = 1000 * 1000 * 1000;
const int mod = 1000 * 1000 * 1000 + 7;

int n , m;
vector <int> g[N];

void check(int x){
    for(int i=1;i<=n;i++){
        int v = i + x;
        if(v > n) v -= n;
        if((int)g[i].size() != (int)g[v].size())return ;
        vector <int> m1;
        for(int j=0;j<(int)g[i].size();j++){
            int a = g[i][j];
            a += x;
            if(a > n) a -= n;
            m1.push_back(a);
        }
        sort(m1.begin() , m1.end());
        if(m1 != g[v])return ;
    }
    cout << "Yes" << endl;
    exit(0);
}

int main() {
    scanf("%d%d",&n,&m);
    for(int i=1;i<=m;i++){
        int a , b;
        scanf("%d%d",&a,&b);
        g[a].push_back(b);
        g[b].push_back(a);
    }
    for(int i=1;i<=n;i++){
        sort(g[i].begin() , g[i].end());
    }
    for(int i=1;i<n;i++){
        if(n % i)continue;
        check(i);
    }
    cout << "No" << endl;
	return 0;
}
