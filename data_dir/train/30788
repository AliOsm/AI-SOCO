#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
#include <string>
#include <queue>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
const int mod = 1000000007;

int main() {
    ios::sync_with_stdio(false);
    int n, m, b[502][5003] = {1}, p[10004] = {1}, z = 0;
    cin >> n >> m;
    for (int i = 1; i <= 10000; i++) p[i] = p[i - 1] * 10 % n;
    queue<pii> q;
    q.push({0, 0});
    while (!q.empty()) {
        int x = q.front().first, y = q.front().second;
        q.pop();
        //cout << x << ' ' << y << ' ' << b[x][y] << '\n';
        if (x == 0 && y == m) {
            z = b[x][y];
            string s;
            for (int i = 1; i < b[x][y]; i++) s += '0';
            while (x || y) {
                //cout << x << ' ' << y << '\n';
                for (int j = 0; j < 10; j++) {
                    int c = x - (p[b[x][y] - 2] * j) % n;
                    if (c < 0) c += n;
                    if (b[c][y - j] && (b[c][y - j] < b[x][y])) {
                        s[z - b[x][y]] = j + '0';
                        x = c;
                        y -= j;
                        break;
                    }
                }
            }
            cout << s;
            return 0;
        }
        for (int i = 0; i < 10; i++) {
            if (!b[(x * 10 + i) % n][y + i] && y + i <= m) {
                b[(x * 10 + i) % n][y + i] = b[x][y] + 1;
                q.push({(x * 10 + i) % n, y + i});
            }
        }
    }
    if (!z) {cout << -1; return 0;}
}
