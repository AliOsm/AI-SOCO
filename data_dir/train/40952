#include <bits/stdc++.h>

#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int N = 200005;
const int B = 1500;

int n, t;
ll v[N], atual, ans[N], K[1000006];
pair<pii, int> q[N];

inline void add(int i){
    atual += (2*K[ v[i] ] + 1) * v[i];
    K[ v[i] ]++;
    //atual += K[ v[i] ] * K[ v[i] ] * v[i];
}

inline void rem(int i){
    atual += (-2*K[ v[i] ] +1) * v[i];
    K[ v[i] ]--;
    //atual += K[ v[i] ] * K[ v[i] ] * v[i];
}

int id[N], x[N], y[N], idb[N];

int main(){
    
    scanf("%d %d", &n, &t);

    for(int i = 0; i < n; i++)
        scanf("%lld", v+i), idb[i] = i / B;

    for(int i = 0; i < t; i++)
        scanf("%d %d", x + i, y + i), x[i]--, y[i]--, id[i] = i, idb[i] = i / B;
    
    sort(id, id+t, [=](int a, int b){
        if(idb[ x[a] ] != idb[ x[b] ]) return x[a] < x[b];
        return idb[ x[a] ] % 2 ? y[a] < y[b] : y[a] > y[b];
    });

    int L = 0, R = -1, xx, yy, idd;

    for(int i = 0; i < t; i++){
        xx = x[ id[i] ], yy = y[ id[i] ], idd = id[i];
        while(R < yy) add(++R);
        while(L > xx) add(--L);
        while(R > yy) rem(R--);
        while(L < xx) rem(L++);
        ans[idd] = atual;
    }

    for(int i = 0; i < t; i++)
        printf("%lld\n", ans[i]);

}