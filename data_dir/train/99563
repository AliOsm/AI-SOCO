#include <cstring>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#include <list>
#include <climits>
#include <cctype>
#include <bitset>
#include <list>
#include <fstream>

using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define allr(v)             ((v).rbegin()), ((v).rend())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define MP                  make_pair
#define lpv(i, v)           for(int i=0;i<sz(v);++i)
#define lpn(i, n)           for(int i=0;i<(int)(n);++i)
#define ss	                second
#define ff	                first


typedef unsigned long long          ull;
typedef long long                   ll;
typedef long double                 LD;
typedef vector<int>                 vi;
typedef vector<ll>                  vl;

ll suf(ll a){ return (a*(a + 1)) / 2; }
const ll  OO = 1e6 + 10 , S = 1e6 + 10;
vector<vector<int> >adj;
bool OK;

int dx[]{1, -1, 0, 0};
int dy[]{0, 0, 1, -1};
int dx8[]{1, -1, 0, 0, 1, -1, 1, -1};
int dy8[]{0, 0, 1, -1, 1, -1, -1, 1};

int main()
{


	ll n, m, t, a, b, c, d;
	string s;
	while (cin >> n )
	{
		vector<int>v(S);
		for (int i = 0; i < n; i++)
		{
			cin >> a >> b;
			v[a--] = b;
		}
		int mx = 0;
		for (int i = 0; i < v.size(); i++){
			if (v[i] != 0 && i - v[i] - 1 >= 0)
				v[i] = v[i - v[i] - 1] + 1;
			else if (v[i] != 0)
				v[i] = 1;
			else if (i)
				v[i] += v[i - 1];
			mx = max(mx, v[i]);
		}
		cout << n - mx;
	}


	//	system("pause");
	return 0;
}