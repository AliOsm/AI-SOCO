#include <iostream>
#include <map>
#include <vector>

using namespace std;

map<int, map<int, map<int, int> > > m;

int main() {
    int n, x, y, z;
    
    ios::sync_with_stdio(0);
    cin.tie(0);
    
    cin >> n;
    for (int i = 1; i <= n; i++) {
        cin >> x >> y >> z;
        m[x][y][z] = i;
    }
    
    vector<int> v;
    for (map<int, map<int, map<int, int> > >::iterator xit = m.begin(); xit != m.end(); xit++) {
        map<int, map<int, int> > mm = xit->second;
        vector<int> vv;
        vv.clear();
        for (map<int, map<int, int> >::iterator yit = mm.begin(); yit != mm.end(); yit++) {
            map<int, int> mmm = yit->second;
            vector<int> vvv;
            vvv.clear();
            for (map<int, int>::iterator zit = mmm.begin(); zit != mmm.end(); zit++) {
                if (vvv.size() == 1) {
                    cout << vvv.back() << " " << zit->second << endl;
                    vvv.pop_back();
                }
                else
                    vvv.push_back(zit->second);
            }
            if (vvv.size() == 1)
                vv.push_back(vvv.back());
        }
        while (vv.size() >= 2) {
            int a = vv.back();
            vv.pop_back();
            int b = vv.back();
            vv.pop_back();
            cout << a << " " << b << endl;
        }
        if (vv.size() == 1)
            v.push_back(vv.back());
    }
    while (v.size() >= 2) {
        int a = v.back();
        v.pop_back();
        int b = v.back();
        v.pop_back();
        cout << a << " " << b << endl;
    }
    
    return 0;
}
