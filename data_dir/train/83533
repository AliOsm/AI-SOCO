#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
using namespace std;
template<class T> inline T sqr(T x) { return x * x; }
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = 5005;
vector<int> g[maxn];
int deg[maxn],can[maxn],cur[maxn];
int dfs(int v, int p)
{
    int res = 1;
    for(int i = 0; i < sz(g[v]); i++)
    {
        int to = g[v][i];
        if (to == p) continue;
        res += dfs(to,v);
    }
    return res;
}
void go(int v)
{
    if (deg[v] == 1) return;
    vector<int> s;
    int S = 0;
    for(int i = 0; i < sz(g[v]); i++)
    {
        int to = g[v][i];
        S += dfs(to,v);
        s.pb(dfs(to,v));
    }
    memset(cur,0,sizeof(cur));
    cur[0] = 1;
    for(int i = 0; i < sz(s); i++)
        for(int j = S; j >= s[i]; j--)
            if (cur[j - s[i]]) cur[j] = 1;
    for(int i = 1; i < S; i++)
        can[i] |= cur[i];
}
int main()
{
    #ifndef ONLINE_JUDGE
  freopen("input.txt","r",stdin);
  freopen("output.txt","w",stdout);
  #endif
  int n;
  cin>>n;
  for(int i = 0; i < n - 1; i++)
  {
    int a,b;
    cin>>a>>b;
    --a;
    --b;
    g[a].pb(b);
    g[b].pb(a);
    ++deg[a];
    ++deg[b];
  }
  vector<pii> ans;
  for(int i = 0; i < n; i++)
    go(i);
  int res = 0;
  for(int i = 1; i <= n - 2; i++)
    if (can[i]) res++;
  cout<<res<<endl;
  for(int i = 1; i <= n - 2; i++)
    if (can[i]) cout<<i<<" "<<n - 1 - i<<endl; 
  return 0;
}
