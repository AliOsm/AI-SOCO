#include <bits/stdc++.h>
using namespace std;
using ll = long long;
const int N = 1001;

double memo[N][N];

double dp(int w, int b) {
  if (b < 0) {
    return 0;
  }
  if (w == 0 && b == 0) {
    return 0;
  }
  if (b == 0) {
    return 1;
  }
  if (w == 0) {
    return 0;
  }
  if (memo[w][b] >= 0) {
    return memo[w][b];
  }
  double ret = 1. * w / (w + b);
  double x = 1. * b * (b - 1) / (w + b) / (w + b - 1);
  if (x > 1e-13){
    double y = 1. * w / (w + b - 2) * dp(w - 1, b - 2);
    y += 1. * (b - 2) / (w + b - 2) * dp(w, b - 3);
    x *= y;
  }

  return memo[w][b] = ret + x;
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(nullptr);
	cout.tie(nullptr);
  int w, b;
  cin >> w >> b;
  for(int i = 0; i < N; ++i) {
    fill(memo[i], memo[i] + N, -1);
  }
  double ret = dp(w, b);
  cout << setprecision(9) << ret << endl;
	return 0;
}
