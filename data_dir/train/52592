#include <bits/stdc++.h>
using namespace std;
const int N= 2 * 1e5 + 5;
struct mat{

	int dp[5][5];
	mat(){
		for(int i= 0;i < 5;i++)
			for(int j= 0;j < 5;j++)
				dp[i][j]= 1e9;
	}
};

mat mul(const mat &a,const mat &b){
	mat ret;
	for(int i= 0;i < 5;i++)
		for(int j= 0;j < 5;j++)
			for(int k= 0;k < 5;k++)
				ret.dp[i][j]= min(ret.dp[i][j],a.dp[i][k] + b.dp[k][j]);
	return ret;
}

mat seg[4 * N];

vector<pair<int,int > > a1[10];
vector<pair<int,int > > a0[10];
string ss;
void update(int n,int l,int r,int s,int e){

	if(r < s || l > e) return;
	if(l >= s && r <= e){
		int in= ss[l] - '0';
		for(int i= 0;i < 5;i++)
			seg[n].dp[i][i]= 0;
		for(int i= 0;i < a1[in].size();i++) seg[n].dp[a1[in][i].first][a1[in][i].second]= 1;
		for(int i= 0;i < a0[in].size();i++) seg[n].dp[a0[in][i].first][a0[in][i].second]= 0;
		return;
	}
	int mid= (l + r) / 2;
	update(n * 2 + 1,l,mid,s,e);
	update(n * 2 + 2,mid + 1,r,s,e);
	seg[n]= mul(seg[n * 2 + 1],seg[n * 2 + 2]);
}
mat get(int n,int l,int r,int s,int e){

	if(r < s || l > e){
		mat ret;
		for(int i= 0;i < 5;i++)
			ret.dp[i][i]= 0;
		return ret;
	}
	if(l >= s && r <= e){
		return seg[n];
	}
	int mid= (l + r) / 2;
	return mul(get(n * 2 + 1,l,mid,s,e),get(n * 2 + 2,mid + 1,r,s,e));
}

int main(){

//	freopen("readin.txt","r",stdin);

	a1[2].push_back(make_pair(0,0));
	a1[0].push_back(make_pair(1,1));
	a1[1].push_back(make_pair(2,2));
	a1[7].push_back(make_pair(3,3));

	a1[6].push_back(make_pair(3,3));
	a1[6].push_back(make_pair(4,4));

	a0[2].push_back(make_pair(0,1));
	a0[0].push_back(make_pair(1,2));
	a0[1].push_back(make_pair(2,3));
	a0[7].push_back(make_pair(3,4));

	int n,q;
	scanf("%d%d", &n, &q);
	cin >> ss;
	for(int i= 0;i < n;i++){
		update(0,0,n - 1,i,i);
	}

	while(q--){
		int l,r;
		scanf("%d%d", &l, &r);
		l--,r--;
		mat ans= get(0,0,n - 1,l,r);
		int temp= ans.dp[0][4];
		if(temp > n)
			puts("-1");
		else
			printf("%d\n",ans.dp[0][4]);
	}

	return 0;
}
