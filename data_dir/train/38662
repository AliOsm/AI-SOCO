#define _CRT_SECURE_NO_WARNINGS

#include <string>
#include <sstream>
#include <cstring>
#include <sstream>
#include <vector>
#include <algorithm>
#include <iostream>
#include <stdio.h>
#include <fstream>
#include <ctime>
#include <cmath>
#include <math.h>
#include <set>
#include <map>
#include <functional>
#include <numeric>
using namespace std;

#define pp system("pause");
#define ct double ttme = clock()
#define p_ct cout << (clock() - ttme) / CLOCKS_PER_SEC << endl
#define all(c) (c).begin(),(c).end()
#define fft ifstream fin("input.txt"); ofstream fout("output.txt")
#define fft_c FILE *fin, *fout
#define fft_c_open fin = fopen("input.txt","r"); fout = fopen("output.txt","w")
#define fft_c_cl fclose(fin); fclose(fout)
#define pii pair<int,int>
#define piii pair<int,pair<int,int>>
#define M_PI 3.14159265358979323846
#define FOR(i,l,r) for(int i = l; i < r; i++)
#define FORD(i,l,r) for(int i = l; i >= r; i--)
typedef unsigned long long ull;
typedef signed long long ll;
const int INF = 1e9;
const int MAXM = 1e7 + 5;
const int MAX = 1e7;
const int des = 10000;



int main()
{
	int n, m;
	cin >> n >> m;

	int mass[100005];
	int ends[100005];

	for(int i = 0; i < n; i++)
		cin >> mass[i];

	
	int start = 0, curr = mass[0], st = 0;
	bool vozr = true;

	for(int i = 1; i < n; i++)
	{
		if(mass[i] > curr && !vozr)
		{
			// for(int z = start; z < i - 1; z++)
			for(int z = start; z < i - 1; z++)
				ends[z] = i;

			for(int z = start - 1; z >= 0; z--)
			{
				if(mass[z] == mass[start])
					ends[z] = i;
				else
					break;
			}

			start = i - 1;
			vozr = true;

			curr = mass[start + 1];
		}
		else
		{
			if(mass[i] < curr && vozr)
				vozr = false;

			curr = mass[i];
		}
	}

	for(int z = start; z < n; z++)
		ends[z] = n;

	for(int i = 0; i < m; i++)
	{
		int x, y;
		cin >> x >> y;

		x--;

		if(ends[x] >= y)
			printf("Yes\n");
		else
			printf("No\n");
	}

	//pp;
}