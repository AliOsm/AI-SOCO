#include <bits/stdc++.h>
using namespace std;
#define int long long
const int INF = 1e17;
int dp[300][300][300];
vector<int> v2;
vector<pair<int,int> > v;
int n;
bool chk(int target)
{
    for(int i=0;i<n;i++) v2[i] = v[i].first-v[i].second*target;
    for(int i=0;i<=n;i++) for(int j=0;j<=n;j++) for(int k=0;k<=n;k++) dp[i][j][k] = INF;
    dp[0][0][1] = v2[0];
    for(int i=1;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            for(int k=0;k<n;k++)
            {
                if(v[i].first==v[i-1].first)
                {
                    dp[i][j][k+1] = min(dp[i][j][k+1],dp[i-1][j][k]+v2[i]);
                    if(j)
                        dp[i][j-1][k] = min(dp[i][j-1][k],dp[i-1][j][k]);
                }
                else
                {
                    dp[i][j+k][1] = min(dp[i][j+k][1],dp[i-1][j][k]+v2[i]);
                    if(j+k)
                        dp[i][j+k-1][0] = min(dp[i][j+k-1][0],dp[i-1][j][k]);
                }
            }
        }
    }
    int mn = dp[n-1][0][0];
    for(int j=0;j<n;j++) 
        for(int k=0;k<=n;k++)
        {
            mn = min(mn,dp[n-1][j][k]);
        } 
    return mn<=0;
}
int32_t main() {
    ios::sync_with_stdio(false);cin.tie(0);
    cin>>n;
    v.resize(n);
    v2.resize(n);
    int st = 0, en = 0;
    for(int i=0;i<n;i++)
    {
        cin>>v[i].first;
        v[i].first *= 1000;
        en += v[i].first;
    }
    for(int i=0;i<n;i++) cin>>v[i].second;
    sort(v.begin(), v.end(), [=](pair<int,int> &l, pair<int,int> &r){
        return l.first>r.first;
    });
    while(st<en)
    {
        int mid = (st+en)/2;
        if(chk(mid)) en = mid;
        else st = mid+1;
    }
    cout<<en;
    return 0;
}