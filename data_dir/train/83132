#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <string>
#include <cstring>
// DON'T DIVIDE
// Try different approaches
using namespace std;

int n;
const int MAXN = 100005;
int f[MAXN], g[MAXN], h[MAXN];
bool used[MAXN], eq[MAXN];

int main()
{
	ios::sync_with_stdio(0);
	cin >> n;

	int counter = 0;
	for(int i = 1; i <= n; i++)
	{
		cin >> f[i];
		if(!used[f[i]])
			counter++;
		if(f[i] == i)
			eq[i] = true;
		used[f[i]] = true;
	}

	for(int i = 1; i <= n; i++)
		if(!eq[i] && !eq[f[i]])
		{
			cout << -1 << "\n";
			return 0;
		}

	cout << counter << "\n";

	int idx = 1;
	for(int i = 1; i <= n; i++)
	{
		if(eq[i])
		{
			g[i] = idx;
			h[idx] = i;
			idx++;
		}
	}

	for(int i = 1; i <= n; i++)
		if(eq[f[i]] && g[i] == 0)
			g[i] = g[f[i]]; 

	for(int i = 1; i <= n; i++)
		cout << g[i] << " ";
	cout << "\n";
	for(int i = 1; i <= counter; i++)
		cout << h[i] << " ";
	cout << "\n";

	return 0;
}