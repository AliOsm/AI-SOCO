#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned int ui;
typedef unsigned long long ull;
typedef pair<int ,int> pii;
typedef pair<ll, ll> pll;
typedef double rl;
#define pb push_back
#define xx first
#define yy second

#if !ONLINE_JUDGE && 1
#define dbg(x) cerr << #x << ": " << (x) << endl;
#else
#define dbg(x)
#endif

int solve(const vector<int> a, const vector<int>& b)
{
    int n=a.size();

    /*
    for(int i=0; i<n; i++) cout << a[i] << ' ';
    cout << endl;
    for(int i=0; i<n; i++) cout << b[i] << ' ';
    cout << endl << "-----------------" << endl;
    */

    map<int, int> B_to_pos;
    for(int i=0; i<n; i++) B_to_pos[b[i]]=i;

    vector<pii> good_shifts;
    map<int, int> M;

    for(int i=0; i<n; i++)
    {
        int aa=a[i];
        if(B_to_pos.count(aa))
        {
            /*
            good_shifts.pb(
                           { (i-B_to_pos[aa]+n)%n, aa}
                           );
            */
            int d=(i-B_to_pos[aa]+n)%n;
            M[d]++;
        }
    }

    sort(good_shifts.begin(), good_shifts.end());

    int result=n;
    /*
    int sz=good_shifts.size();
    set<int> S;

    for(int i=0; i<sz; i++)
    {
        int shift=good_shifts[i].first;
        S.insert(good_shifts[i].second);
        int good=S.size();

        result=min(result, shift+n-good);
    }
    */
    for(auto it: M)
    {
        result=min(result, it.first + (n - it.second));
    }

    return result;
}

int n, m;
vector<vector<int>> A;

int solve()
{
    vector<int> have(n), need(n);
    int result=0;

    for(int j=0; j<m; j++)
    {
        for(int i=0; i<n; i++)
        {
            have[i]=A[i][j];
            need[i]=1+m*i+j;
        }

        result+=solve(have, need);
    }
    return result;
}

int main()
{
#if !ONLINE_JUDGE && 0
    freopen("E.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
#if 1
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr); cout.tie(nullptr);
#endif

    cin >> n >> m;
    A=vector<vector<int>>(n, vector<int>(m));

    for(int i=0; i<n; i++) for(int j=0; j<m; j++) cin >> A[i][j];
    cout << solve();

    return 0;
}
