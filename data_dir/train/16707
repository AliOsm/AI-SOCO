#include <bits/stdc++.h>
using namespace std;

#define all(x) begin(x), end(x)
#define sz(x) (int)(x).size()

using ll = long long;
using ld = long double;
using pt = complex<ld>;

ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    ll n, m;
    cin >> n >> m;
    vector<set<ll>> adj(n);
    for (ll i = 0; i < m; i++) {
        ll a, b;
        cin >> a >> b;
        a--;
        b--;
        adj[a].insert(b);
        adj[b].insert(a);
    }
    ll res = n - 1;
    set<ll> cost;
    for (ll i = 0; i < n; i++) cost.insert(i);
    while (!cost.empty()) {
        set<ll> free = {*cost.begin()};
        cost.erase(cost.begin());
        res++;
        while (!free.empty()) {
            res--;
            ll c = *free.begin();
            free.erase(free.begin());
            for (auto it = cost.end(); it != cost.begin();) {
                if (adj[c].find(*prev(it)) == adj[c].end()) {
                    free.insert(*prev(it));
                    cost.erase(prev(it));
                } else {
                    it--;
                }
            }
        }
    }
    cout << res << endl;
}
