 // CODED BY : Super_KAZAKH(-:  >---->  Yedige Ashirbek
#include <cstring>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <deque>
#include <fstream>
#include <stdio.h>
#include <cmath>
#include <iomanip>
#include <iostream>
#include <stack>
#include <queue>
#include <climits>
#include <string>

#define pb push_back
#define F first
#define S second
#define all(x) x.begin(),x.end()
#define ub upper_bound
#define lb lower_bound

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;

inline void boost(){
    ios_base::sync_with_stdio();
    cin.tie(0);
    cout.tie(0);
}

const ll maxn=2e5+123;
const ll inf=1e9+123;
const ll mod=1e9+7;
const double pi=acos(-1);
pair<int,bool> t[maxn*6];
int a[maxn];
void build(int v,int l,int r){
    if(l==r){
        t[v].F=a[l];
        t[v].S=0;
        return;
    }
    int m=(l+r)/2;
    build(v+v,l,m);
    build(v+v+1,m+1,r);
    if(t[v+v].S){
        t[v].F=(t[v+v].F^t[v+v+1].F);
        t[v].S=0;
    }
    else{
        t[v].F=(t[v+v].F|t[v+v+1].F);
        t[v].S=1;
    }
}
void update(int v,int l,int r,int pos,int new_a){
    if(r<pos || l>pos){
        return;
    }
    if(l==r){
        t[v].F=new_a;
        return;
    }
    int m=(l+r)/2;
    update(v+v,l,m,pos,new_a);
    update(v+v+1,m+1,r,pos,new_a);
    if(t[v+v].S){
        t[v].F=(t[v*2].F^t[v*2+1].F);
        t[v].S=0;
    }
    else{
        t[v].F=(t[v*2].F|t[v*2+1].F);
        t[v].S=1;
    }
}
int main(){
    boost();
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int n,m;
    cin>>n>>m;
    for(int i=1;i<=(1<<n);i++){
        cin>>a[i];
    }
    build(1,1,(1<<n));
    while(m--){
        int p,b;
        cin>>p>>b;
        update(1,1,(1<<n),p,b);
        cout<<t[1].F<<"\n";
    }
    return 0;
}
