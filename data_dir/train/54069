#include <bits/stdc++.h>
using namespace std;
#define pii             pair<int , int >
#define inf             1000000011
#define in(a)           scanf("%d", &a)
#define ins(a)          scanf("%s", a)
#define in2(a, b)       scanf("%d%d", &a, &b)
#define in3(a, b, c)    scanf("%d%d%d", &a, &b, &c)
#define pn              printf("\n")
#define pr(a)           printf("%d\n", a)
#define prs(a)          printf("%d ", a)
#define pr2(a, b)       printf("%d %d\n", a, b)
#define pr3(a, b, c)    printf("%d %d %d\n", a, b, c)
#define pcs(a)          printf("Case %d: ", a)
#define mp              make_pair
#define vi              vector<int >
#define _ceil(n, a)     ((n)%(a)==0?((n)/(a)):((n)/(a)+1))
#define sz              size()
#define pb              push_back
#define mem(a, b)       memset((a), (b), sizeof(a))
#define all(X)          (X).begin(), (X).end ()
#define lg2(n)          (31-__builtin_clz(n))
#define ext(a)          {printf("%s\n", a); return 0;}
#define oka(x, y)       ((x)>=0&&(x)<row&&(y)>=0&&(y)<col)
#define x               first
#define y               second
#define lc              (2*i)
#define rc              (2*i+1)

typedef long long LL;
//int  dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int  dx[]={1,1,0,-1,-1,-1,0,1,0};int dy[]={0,1,1,1,0,-1,-1,-1,0};//8 direction
//int  dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//bool check(int n, int pos) {return (n & (1<<pos))>>pos;} //typecast 1 in case of int
//int  on(int n, int pos) {return n | (1<<pos);} //typecast 1 in case of int
//int  off(int n, int pos) {return n & ~(1<<pos);} //typecast 1 in case of int
//bool operator < (const data &d) const{return cost<d.cost;} //reverse in priority queue

const int M = 5000100;

int rght[M];
char A[M];
char tmp[M];

int f(int u)
{
    return rght[u] = rght[u] == u ? u : f(rght[u]);
}

void add(int i, int j)
{
    int u = f(i), v = f(j);
    if (u < v) swap(u, v);
    if (u != v) rght[v] = u;
}

int main()
{
#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
#endif
    ios_base::sync_with_stdio(false);

    int n, i, j, k;
    int t;

    mem(A, '-');
    for (i = 0; i < M; i++) rght[i] = i;

    in(n);
    while (n--)
    {
        ins(tmp);
        int len = strlen(tmp), oc, pos;

        in(oc);
        while (oc--)
        {
            in(pos);
            for (i = 0, j = pos; i < len; )
            {
//                pr2(i, j);
                if (A[j] == '-')
                {
                    A[j] = tmp[i];
                    if (A[j+1] != '-') add(j, j+1);
                    if (A[j-1] != '-') add(j, j-1);
                    i++;
                    j++;
                }
                else
                {
                    int r = f(j) + 1;
                    i += (r-j);
                    j = r;
                }
            }

//            for (int g = 1; g <= 12; g++) printf("%c", A[g]);
//            pn;
        }
    }

    int maxx = 0;
    for (i = 0; i < M; i++) if (A[i] != '-') maxx = i;
    for (i = 0; i <= maxx; i++) if (A[i] == '-') A[i] = 'a';
    for (i = 1; i <= maxx; i++) printf("%c", A[i]);
    pn;


return 0;
}