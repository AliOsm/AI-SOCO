#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <valarray>
#include <vector>

#define EPS 1e-9
#define INF 1070000000LL
#define MOD 1000000007LL
#define fir first
#define foreach(it,X) for(__typeof((X).begin()) it=(X).begin();it!=(X).end();it++)
#define ite iterator
#define mp make_pair
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<(n);i++)
#define pb push_back
#define sec second
#define sz(x) ((int)(x).size())

using namespace std;

struct timer{
	time_t start;
	timer(){start=clock();}
	~timer(){cerr<<1.*(clock()-start)/CLOCKS_PER_SEC<<" secs"<<endl;}
};

typedef istringstream iss;
typedef long long ll;
typedef pair<int,int> pi;
typedef stringstream sst;
typedef vector<int> vi;

ll n;
vi v[10000];

int main(){
	cin.tie(0);
	ios_base::sync_with_stdio(0);
	
	/*
	rep2(i,2,10000){
		ll t=i,res=0;
		while(t%2==0){
			res += t/2;
			t/=2;
		}
		res += t*(t-1)/2;
		//cout<<i<<" : "<<res<<endl;
		if(res<10000)v[res].pb(i);
	}
	rep(i,1000)if(sz(v[i])){
		cout<<i<<": ";
		rep(j,sz(v[i]))cout<<v[i][j]<<" ";
		cout<<endl;
	}*/
	
	cin>>n;
	vector<ll> ans;
	
	rep(p,60){
		ll lo=0,hi=INF*INF;
		while(lo+1<hi){
			ll mi=lo+hi>>1;
			ll q=2*mi+1;
			if(INF*INF / q < (1LL<<p)-1+(q-1)/2){
				hi=mi;continue;
			}
			//if(p<5)cout<<p<<" "<<q<<" : "<<q * ((1LL<<p)-1+(q-1)/2)<<endl;
			//cout<<INF*INF/q<<" "<<(1LL<<p)-1+(q-1)/2<<endl;
			if(q * ((1LL<<p)-1+(q-1)/2) > n){
				hi=mi;
			}else lo=mi;
		}
		
		ll q=lo*2+1;
		//cout<<p<<" "<<q<<endl;
		if(INF*INF / q < (1LL<<p)-1+(q-1)/2)continue;
		if(q * ((1LL<<p)-1+(q-1)/2) == n){
			//cout<<p<<" "<<q<<endl;
			ans.pb((1LL<<p)*q);
		}
	}
	
	if(sz(ans)==0)cout<<-1;
	else{
		sort(ans.begin(),ans.end());
		rep(i,sz(ans))cout<<ans[i]<<endl;
	}
}