#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define ll long long
#define ld long double
using namespace std;
const ll N = 2e3 + 5, mod = 1e9 + 7;
ll f[N],inv[N];
int add(int a, int b){
    return (a + b) % mod;
}
int mul(int a, int b){
    return (1ll * a * b) % mod;
}
ll fp(ll b, ll p){
    if(!p) return 1;
    ll res = fp(b, p / 2);
    res = mul(res, res);
    if(p & 1) res = mul(res, b);
    return res;
}
void pre(){
    f[0] = inv[0] = 1;
    for(int i = 1; i < N; i++)
        f[i] = mul(f[i - 1], i), inv[i] = fp(f[i], mod - 2);
}
long long ncr(int n, int r){
    return mul(f[n], mul(inv[r], inv[n - r]));
}
int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    pre();
    int n, m;
    cin >> n >> m;
    cout << ncr(n + 2 * m - 1, n - 1);
    return 0;
}
