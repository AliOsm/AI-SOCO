//

#include <iostream>
#include <string>
#include <cmath>
#include <vector>
#include <algorithm>
#include <iterator>
#include <cstdlib>
#include <cstdio>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <list>

using namespace std;

typedef pair <int, int> pii;
typedef pair <long long, long long> pll;
typedef vector <int> vi;
typedef long long ll;

#define endl "\n"

int n, k;
int result;
multiset <int> s, s1;

bool check(int p);

int main()
{
	int l = 1, r = 2000000, mid, t;

	ios::sync_with_stdio(false);
	cin.tie(NULL);

	cin >> n >> k;

	for (int i = 0; i < n; i++)
	{
		cin >> t;

		s.insert(-t);
	}

	for (int i = 0; i < 50; i++)
	{
		mid = (l + r) / 2;

		if (check(mid))
		{
			result = mid;
			r = mid - 1;
		}
		else
			l = mid + 1;
	}
	
	cout << result << endl;

	return 0;
}

bool check(int p)
{
	int left = k, first;
	set <int>::iterator second;
	
	s1 = s;

	if (-*s1.begin() > p)
		return 0;

	if (p == 1)
		p = p;

	while (left && !s1.empty())
	{
		left--;
		first = -*s1.begin();
		s1.erase(s1.begin());
		second = s1.lower_bound(-(p - first));
		
		if (second != s1.end())
			s1.erase(second);
	}

	if (s1.empty())
		return 1;
	
	return 0;
}