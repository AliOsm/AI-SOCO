#include<bits/stdc++.h>
using namespace std;

#define PI acos(-1)
#define hell 1000000007
#define HELL 998244353
#define io ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define fix(n) cout << fixed << setprecision(n)
#define mset(a,n) memset(a,n,sizeof a)
#define rep(i,a,b) for (__typeof((b)) i=(a);i<(b);i++)
#define repp(i,a,b,p) for(__typeof((b)) i=(a);i<(b);i+=p)
#define ren(i,a,b) for(__typeof((a)) i=(a);i>=(b);i--)
#define renn(i,a,b,p) for(__typeof((a) i=(a);i>=(b);i-=p)
#define lbd lower_bound
#define ubd upper_bound
#define ll long long
#define ld long double
#define pb push_back
#define fi first
#define se second
#define vll vector<ll>
#define pll pair<ll,ll>
#define vpll vector<pll>
#define all(v) (v).begin(), (v).end()
#define sz(x) (ll)x.size()
#define endl "\n"
#define out(n) cout<<n<<" "
#define outl(n) cout<<n<<endl
#define line cout<<endl
#define bug(n) {outl(n);return;}
#define N 10005
#define M 55
ll n,k,ans,D,x,y;
int dp[M][M][N],dp1[M][M][N],inp[M];
vector<ll> d;
map<ll,ll> m;
ll expo(ll a, ll b){
	ll res=1;
	while(b){
		if(b%2)res=res*a%hell;
		a=a*a%hell;
		b/=2;
	}
	return res;
}
void solve(){
	cin>>n>>k;
	rep(i,1,(ll)sqrt(n)+1){
		if(n%i==0){
			d.pb(i);
			if(i*i!=n)d.pb(n/i);
		}	
	}
	rep(i,2,(ll)sqrt(n)+1){
		while(n%i==0)n/=i,m[i]++;
	}
	if(n>1)m[n]=1;
	for(auto i:d){
		D=i,x=1;
		for(auto j:m){
			y=0;
			while(D%j.fi==0)D/=j.fi,y++;
			x=x*dp[j.se][y][k]%hell;
		}
		ans=(ans+(i%hell)*x%hell)%hell;
	}
	bug(ans);
}
void prep(){
	rep(i,1,M)inp[i]=expo(i,hell-2);
	rep(k,0,N){
		rep(i,0,M){
			rep(j,i,M){
				if(k==0)dp[j][i][k]=(i==j);
				else dp[j][i][k]=1ll*inp[j+1]*dp1[j][i][k-1]%hell;
				dp1[j][i][k]=dp[j][i][k];
				if(j>0)dp1[j][i][k]=(1ll*dp1[j][i][k]+dp1[j-1][i][k])%hell;
			}
		}
	}
}
int main(){
    io;
    ll t=1;
    // cin>>t;
    prep();
    fix(12);
    while(t--)
        solve();
    return 0;
}