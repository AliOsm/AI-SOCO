// Remember...

#include<bits/stdc++.h>

#define F first
#define S second
#define PB push_back
#define sz(s) int((s).size())
#define bit(n,k) (((n)>>(k))&1)

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;

const int maxn=1e6+10,mod=1e9+7;
const ll inf=1e18;

multiset<int> ms[maxn];
int p[maxn], dp[maxn];

int main(){
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie();
    
    int n; cin>>n;
    
    for(int i=2;i<=n+1;i++){
	cin>>p[i];
	dp[i]=1;
	int u=p[i], vl=1;
	
	while(u){
	    ms[u].insert(vl);
	    auto it= --ms[u].end();
	    int num= max( *it, sz(ms[u])==1 ? 0 : 1 + (*prev(it)) );
	    if(num > dp[u]){
		if(u!=1) ms[ p[u] ].erase( ms[ p[u] ].find(dp[u]) );
		dp[u]=num;
		vl=num;
		u=p[u];
	    }
	    else{
		break;
	    }
	}
	cout<<(*ms[1].rbegin())<<" ";
    }
    return cout<<endl,0;
}
// Deathly mistakes:
//  * Read the problem carefully.
//  * Check maxn.
//  * Overflows.


// #pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math")
// #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
