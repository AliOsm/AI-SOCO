#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define Fit(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
#define eps 1e-9
typedef pair<int, int> II;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI 2 * acos(0)

#define maxn 400005

ll n;
II P[maxn];
int d[205];

int main(){
//  freopen("in.txt", "r", stdin);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n;
    For(i, 1, n) cin >> P[i].fi;
    For(i, 1, n) cin >> P[i].se;
    sort(P + 1, P + n + 1);

    ll sum = 0;
    For(i, 1, n) sum += P[i].se;

    ms(d, 0);
    int u = 1;

    ll Max = 0;

    P[0].fi = -1;
    ll ret = 0;
    For(i, 1, n){
        if(P[i].fi > P[i - 1].fi){
            for(int j = u; j < i; j++){
                d[P[j].se]++;
            }
            u = i;
            ret = 0;
        }
        ret += P[i].se;

//      cout << P[i].fi << " " << ret << " " << d[5] << endl;

        int t = i - u;
        int RR = ret;
        for(int j = 200; j > 0; j--){
            if(t >= d[j]) {
                RR += d[j] * j;
                t -= d[j];
            } else{
                RR += t * j;
                t = 0;
            }
        }
        Max = max(Max, (ll)RR);
    }

    cout << sum - Max << endl;

    return 0;
}
