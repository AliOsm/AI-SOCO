#include <bits/stdc++.h>
#define pb push_back
#define all(x) begin(x), end(x)

using namespace std;
using ll = long long int;
const int MOD = 1e9 + 7;
const int N = 5e5 + 5;

ll ans[N][2]; //ans[u][0] -> chosen by parent, ans[u][1] -> not chosen by parent

void dfs(vector<vector<array<ll, 2>>> &g, int u, int par, int k)
{
	vector<array<ll, 2>> vals;
	ll tot = 0;
	for (auto [v, w] : g[u])
	{
		if (v == par) continue;
		dfs(g, v, u, k);
		vals.pb({ans[v][0] + w, ans[v][1]});
		tot += ans[v][1];
	}
	ans[u][0] = ans[u][1] = tot;
	sort(all(vals), [](auto a, auto b) {return a[0] - a[1] > b[0] - b[1];});
	for (int i = 0; i < min(k, (int)vals.size()); ++i)
	{
		if (vals[i][0] - vals[i][1] <= 0) break;
		if (i < k - 1) ans[u][0] += vals[i][0] - vals[i][1];
		ans[u][1] += vals[i][0] - vals[i][1]; 
	}
}

int main()
{
	ios::sync_with_stdio(0); cin.tie(0);
	int q; cin >> q;
	while (q--)
	{
		int n, k; cin >> n >> k;
		vector<vector<array<ll, 2>>> g(n+1);
		for (int i = 0; i < n-1; ++i)
		{
			ll u, v, w; cin >> u >> v >> w;
			g[u].pb({v, w});
			g[v].pb({u, w});
		}
		dfs(g, 1, -1, k);
		cout << ans[1][1] << '\n';
	}
}