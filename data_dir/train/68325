#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
typedef pair<ll,ll> p2;
ll spf[1000005];
int main(){
  vector<vector<ll>> v(1000005);
  vector<ll> jok(1,1);
  for(ll i=2;i*i<1000005;i++)
    if(!spf[i]){
      for(ll j=i*i;j<1000005;j+=i)
        if(!spf[j])
          spf[j]=i;
      spf[i]=i;
      jok.push_back(i);
    }
  for(ll i=2;i<1000005;i++)
    if(!spf[i])
      spf[i]=i;
  ll n;
  scanf("%lld",&n);
  ll res=n+1;
  for(ll i=0;i<n;i++){
    ll x;
    scanf("%lld",&x);
    map<ll,ll> m;
    while(x>1){
      if(m.find(spf[x])==m.end())
        m.insert({spf[x],0});
      m[spf[x]]++;
      if(m[spf[x]]==2)
        m.erase(spf[x]);
      x/=spf[x];
    }
    if(m.empty()){
      printf("1");
      exit(0);
    }
    else if(ll(m.size())==1){
      v[1].push_back(m.begin()->first);
      v[m.begin()->first].push_back(1);
    }
    else{
      ll a=m.begin()->first,b=next(m.begin())->first;
      v[a].push_back(b);
      v[b].push_back(a);
    }
  }
  for(ll qc=0;qc<jok.size();qc++){
    ll i=jok[qc];
    vector<ll> vis(1000005,0),par(1000005,0);
    queue<ll> q;
    q.push(i);
    vis[i]=1;
    par[i]=i;
    while(!q.empty()){
      i=q.front();
      q.pop();
      for(ll j=0;j<v[i].size();j++)
        if(!vis[v[i][j]]){
          vis[v[i][j]]=vis[i]+1;
          par[v[i][j]]=i;
          q.push(v[i][j]);
        }
      else if(v[i][j]!=par[i])
        res=min(res,vis[v[i][j]]+vis[i]-1);
    }
  }
  if(res==n+1)
    printf("-1");
  else
    printf("%lld",res);
}