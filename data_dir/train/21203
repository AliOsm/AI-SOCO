#include <stdio.h>

#define N	3000

int main() {
	static char cc[N + 1], cc_[N + 1];
	static int qu[N];
	int n, k, r, h, i, inv, kr;

	scanf("%d%d%s", &n, &k, cc);
	inv = 0, kr = 0;
	for (i = 0; i < n; i++)
		if (cc[i] == 'R')
			kr++;
		else
			inv += kr;
	for (i = 0; i < n; i++)
		cc_[i] = cc[i];
	for (r = 0; r < n; r++) {
		int updated = 0;

		for (i = 0; i + 1 < n; i++)
			if (cc_[i] == 'R' && cc_[i + 1] == 'L') {
				cc_[i] = 'L', cc_[i + 1] = 'R', i++;
				updated = 1;
			}
		if (!updated)
			break;
	}
	if (k < r || inv < k) {
		printf("-1\n");
		return 0;
	}
	for (r = 0; r < n; r++) {
		int cnt, last;

		k--;
		cnt = 0, last = 0;
		for (i = 0; i + 1 < n; i++)
			if (cc[i] == 'R' && cc[i + 1] == 'L') {
				cc[i] = 'L', cc[i + 1] = 'R', qu[cnt++] = i++;
				if (--inv == k) {
					last = 1;
					break;
				}
			}
		printf("%d", cnt);
		for (h = 0; h < cnt; h++)
			printf(" %d", qu[h] + 1);
		printf("\n");
		if (last)
			break;
	}
	for (r = 0; r < n; r++)
		for (i = 0; i + 1 < n; i++) 
			if (cc[i] == 'R' && cc[i + 1] == 'L') {
				cc[i] = 'L', cc[i + 1] = 'R';
				printf("1 %d\n", i + 1);
				i++;
			}
	return 0;
}
