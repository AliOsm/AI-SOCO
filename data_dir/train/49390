#include <bits/stdc++.h>
#define br  break
#define off  exit( 0 )
#define cn   continue
#define rt   return
#define un   unsigned
#define do   double
#define cr   char
#define st   string
#define sc   scanf
#define pr   printf
#define mk   make_pair
#define pb   push_back
#define pf   push_front
#define p_f  pop_front
#define p_b  pop_back
#define ff   first
#define ss   second
#define vec  vector
#define gcd  __gcd
#define pi   acos( -1 )
#define ll   long long
#define N    100256
#define M    1000000007
#define I    1000000000000000000
#define en                 printf( "\n" )
#define sqr( a )           ( ( a ) * ( a ) )
#define all( c )           ( c ).begin(), ( c ).end()
#define rev( c )           reverse( all( c ) )
#define srt( c )           sort( all( c ) )
#define mxx( x, y, z )     max( x, max( y, z ) )
#define mnn( x, y, z )     min( x, min( y, z ) )
#define mxn( x, y, z )     max( x, min( y, z ) )
#define mnx( x, y, z )     min( x, max( y, z ) )
#define dist( x, y, z, c ) sqrt( sqr( x - z ) + sqr( y - c ) )
#define speed              ios_base::sync_with_stdio( 0 ), cin.tie( 0 ), cout.tie( 0 )
#define toprun             ios_base::sync_with_stdio( 0 ), cin.tie( 0 )
using namespace std;
ll a[ 10 ][ 10 ], cnt, ans;
int main()
{
	for( int i = 1; i <= 5; i ++ )
        for( int j = 1; j <= 5; j ++ )
            cin >> a[ i ][ j ];
    for( int i1 = 1; i1 <= 5; i1 ++ )
    {
        for( int i2 = 1; i2 <= 5; i2 ++ )
        {
            if( i1 == i2 )continue;
            for( int i3 = 1; i3 <= 5; i3 ++ )
            {
                if( i1 == i3 || i2 == i3 )continue;
                for( int i4 = 1; i4 <= 5; i4 ++ )
                {
                    if( i1 == i4 || i2 == i4 || i3 == i4 )continue;
                    int i5 = 15 - ( i1 + i2 + i3 + i4 );
                    cnt = a[ i1 ][ i2 ] + a[ i2 ][ i1 ];
                    cnt += a[ i3 ][ i4 ] + a[ i4 ][ i3 ];
                    cnt += a[ i3 ][ i2 ] + a[ i2 ][ i3 ];
                    cnt += a[ i4 ][ i5 ] + a[ i5 ][ i4 ];
                    cnt += a[ i3 ][ i4 ] + a[ i4 ][ i3 ];
                    cnt += a[ i4 ][ i5 ] + a[ i5 ][ i4 ];
                    ans = max( ans, cnt );
                }
            }
        }
    }
    cout << ans;
}





















