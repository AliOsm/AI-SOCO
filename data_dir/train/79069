//let's do it
 #include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define inf 1000000000000
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define boost1 ios::sync_with_stdio(false);
#define boost2 cin.tie(0);
#define mem(a,val) memset(a,val,sizeof a)
//#define endl "\n"
#define maxn 1005

int par[maxn],size[maxn],prime[maxn],cnt[26];
multiset<pair<int,int> >store;
vector<int>primes,store1[maxn];
int res[maxn];
int find(int x)
{
	if(par[x]==x)
	return x;
	return par[x]=find(par[x]);
}
void merge(int x,int y)
{
	int xp=find(x);
	int yp=find(y);
	if(xp==yp)
	return ;
	par[xp]=yp;
	size[yp]+=size[xp];
}
int main()
{
	boost1;boost2;
	int i,j,x,y,l,pre,ch,maxi;
	string s;
	prime[0]=prime[1]=1;
	for(i=2;i<=1000;i++)
	{
		if(prime[i])
		continue;
		primes.pb(i);
		for(j=2*i;j<=1000;j+=i)
		prime[j]=1;
	}
	cin>>s;
	l=s.length();
	s=" "+s;
	for(i=1;i<=l;i++)
	cnt[s[i]-'a']++;
	for(i=1;i<=l;i++)
	{
		par[i]=i;
		size[i]=1;
	}
	for(auto it:primes)
	{
		if(it>l)
		break;
		pre=it;
		for(i=2;;i++)
		{
			if(i*it>l)
			break;
			merge(pre,i*it);
			pre=i*it;
		}
	}
	for(i=1;i<=l;i++)
	store1[find(i)].pb(i);
	for(i=1;i<=l;i++)
	{
		if(find(i)==i)
		store.insert({size[i],i});
	}
	while(store.size())
	{
		x=(*store.rbegin()).F;
		y=(*store.rbegin()).S;
		maxi=0;
		ch=-1;
		for(i=0;i<26;i++)
		{
			if(cnt[i]>=maxi)
			{
				maxi=cnt[i];
				ch=i;
			}
		}
		if(maxi<x || ch==-1)
		{
			cout<<"NO";
			return 0;
		}
		cnt[ch]-=x;
		store.erase(--store.end());	
		for(auto it:store1[y])
		res[it]=ch;
		
	}
	cout<<"YES"<<endl;
	for(i=1;i<=l;i++)
	cout<<char('a'+res[i]);
	return 0;
}
