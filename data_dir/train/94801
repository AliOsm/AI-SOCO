#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define sz(v) (int)v.size()
#define up_b upper_bound
#define low_b lower_bound
#define nl '\n'

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;

const int N=2e5+11;
const int M=2e6+11;
const int W=1e3+11;
const int inf=1e9;
const ll INF=1e18;
const ll mod=1e9+7;
const ld EPS=1e-9;

int c[N];
vector<int>g[N];
int mx,x;

void dfs(int v,int p,int h){
  if(mx<h){
    mx=h;
    x=v;
  }
  for(int i=0;i<sz(g[v]);i++){
    int to=g[v][i];
    if(to!=p){
      if(c[v]==c[to])dfs(to,v,h);
      else dfs(to,v,h+1);
    }
  }
}

int main(){
  ios_base::sync_with_stdio(0);
  cin.tie(0),cout.tie(0);
  int n;
  cin>>n;
  for(int i=1;i<=n;i++){
    cin>>c[i];
  }
  for(int i=1;i<n;i++){
    int u,v;
    cin>>u>>v;
    g[u].pb(v);
    g[v].pb(u);
  }
  mx=-1,x=0;
  dfs(1,1,1);
  mx=-1;
  dfs(x,x,0);
  cout<<(mx+1)/2;
}
