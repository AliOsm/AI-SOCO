#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <map>
#include <queue>
#include <set>
#include <iomanip>
#include <deque>
#include <cassert>
#include <ctime>
#include <cstring>
#include <cstdlib>
#include <chrono>
#include <ctime>
#include <random>
#include <stack>
#include <unordered_set>
#include <unordered_map>
#include <iterator>
#include <climits>
using namespace std;

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
typedef long long ll;
typedef long double ld;
#define INF 2001001001
#define MOD 1000000007

int N,M,K;
int arr[4000];

int query(int l, int r){
  int res=INF;
  for (int i=l;i<=r;i++)
    res=min(res,arr[i]);
  return res;
}

void solve(){
  cin>>N>>M>>K;
  for (int i=1;i<=N;i++)
    cin>>arr[i];
  int ans=0;
  int tot=min(M-1,K);
  int rest=M-1-tot;
  for (int i=0;i<=tot;i++){
    int j=tot-i;
    int L=i+1,R=N-j;
    int temp=INF;
    for (int k=0;k<=rest;k++){
      int l=rest-k;
      temp=min(temp,max(arr[L+k],arr[R-l]));
    }
    ans=max(ans,temp);
  }
  cout<<ans<<endl;
}

int main()
{
  //ios_base::sync_with_stdio(0);cin.tie(0);
  //freopen (".in","r",stdin);
  //freopen (".out","w",stdout);
  int T; cin>>T;
  while (T--)
    solve();
  return 0;
}
