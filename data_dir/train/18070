#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
const double PI=acos(-1);

vector<string>v;
map<pair<int,int>,vector<pair<int,int>>>grph;
int di[]={-1,1,0,0};
int dj[]={0,0,1,-1};
int id=1;
int comp[1000000];
int vis[1005][1005];
int n,m;

int dfs(pair<int,int>nd){
	vis[nd.first][nd.second]=id;
	int ret=0;
	for(int i=0;i<4;i++){
		int x=nd.first+di[i];
		int y=nd.second+dj[i];
		if(x>=0&&x<n&&y>=0&&y<m){
			if(v[x][y]=='*')
				ret++;
			else{
				if(!vis[x][y]){
					vis[x][y]=id;
					ret+=dfs(make_pair(x,y));
				}
			}
		}
	}
	return ret;
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	memset(comp,0,sizeof comp);
	memset(vis,0,sizeof vis);
	int k;
	cin>>n>>m>>k;
	v.resize(n);
	for(int i=0;i<n;i++)
		cin>>v[i];

	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(v[i][j]=='.'&&!vis[i][j]){
				comp[id]=dfs(make_pair(i,j));
				id++;
			}
		}
	}
	for(int i=0;i<k;i++){
		int x,y;
		cin>>x>>y;
		x--;
		y--;
		cout<<comp[vis[x][y]]<<endl;
	}
}
