#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define ld long double
#define endl '\n'
#define all(a) a.begin(),a.end()
#define int long long
using namespace std;
using namespace __gnu_pbds;

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
mt19937_64 rnd1(chrono::steady_clock::now().time_since_epoch().count());

template<class T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

template<class T>
using ordered_multiset=tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>;

const int N=5e5+7;
const int inf=2e9+5;
const int mod=1e9+7;

bool pref[N];
bool pref1[N];
bool suf[N];
bool suf1[N];
int cnt[N];

main ()
{
    string s;
    cin>>s;
    for (int i=0;i<s.size();++i){
        if (s[i]=='[')pref[i]=true;
        if (i && pref[i-1])pref[i]=true;
        if (s[i]=='|'){
            ++cnt[i];
        }
        if (i){
            cnt[i]+=cnt[i-1];
        }
    }
    for (int i=0;i<s.size();++i){
        if (i){
            if (pref1[i-1]){
                pref1[i]=true;
            }
            if (s[i]==':' && pref[i-1]){
                pref1[i]=true;
            }
        }
    }
    for (int i=(int)s.size()-1;i>=0;--i){
        if (s[i]==']'){
            suf[i]=true;
        }
        if (suf[i+1]){
            suf[i]=true;
        }
    }
    for (int i=(int)s.size()-1;i>=0;--i){
        if (suf1[i+1]){
            suf1[i]=true;
        }
        if (s[i]==':' && suf[i+1]){
            suf1[i]=true;
        }
    }
    int l=-1;
    int r=-1;
    for (int i=0;i<s.size();++i){
        if (pref1[i]){
            l=i;
            break;
        }
    }
    for (int i=(int)s.size()-1;i>=0;--i){
        if (suf1[i]){
            r=i;
            break;
        }
    }
    if (l!=-1 && r!=-1){
        if (l<r){
            int l1=l+1;
            int r1=r-1;
            int ans=4;
            if (l1<=r1){
                ans+=cnt[r1]-cnt[l1-1];
            }
            cout<<ans<<endl;
        }
        else {
            cout<<-1<<endl;
        }
    }
    else cout<<-1;
}
