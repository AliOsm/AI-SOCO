//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
 
using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ii, int> iii;
 
ll pwr(ll base, ll p, ll mod){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
 
 
ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}


const int N = 2002;
int n;
ll adj[N][N], dist[N];
bool adj_to_zero_edge[N], done[N];



int main(){
 
    // ios_base::sync_with_stdio(0);
    // cin.tie(0);
    
    scanf("%d", &n);
    for(int i=1;i<=n;i++){
        dist[i] = (ll)1e15;
    }

    ll min_edge = (ll)1e15;
    for(int i=1;i<=n-1;i++)
        for(int j=i+1;j<=n;j++){
            scanf("%lld", &adj[i][j]);
            adj[j][i] = adj[i][j];
            min_edge = min(min_edge, adj[i][j]);
        }

    for(int i=1;i<=n;i++)
        for(int j=i+1;j<=n;j++){
            adj[i][j] -= min_edge;
            adj[j][i] -= min_edge;
            if(adj[i][j] == 0)
                adj_to_zero_edge[i] = adj_to_zero_edge[j] = true;
        }

    for(int i=1;i<=n;i++){
        if(adj_to_zero_edge[i])
            dist[i] = 0;
        for(int j=1;j<=n;j++)
            if(j != i)
                dist[i] = min(dist[i], 2*adj[i][j]);
    }

// cout<<"adj:\n";
// for(int i=1;i<=n;i++){
//     for(int j=1;j<=n;j++)   cout<<adj[i][j]<<" ";cout<<endl;
// }cout<<endl;

// cout<<"dist: ";for(int i=1;i<=n;i++)    cout<<dist[i]<<" ";cout<<endl;


    for(int iter=0;iter<n;iter++){

        int v = -1;
        for(int i=1;i<=n;i++)
            if(!done[i] && (v == -1 || dist[i] < dist[v]))
                v = i;
        if(v == -1) break;
        done[v] = true;

// cout<<"chose "<<v<<endl;

        for(int j=1;j<=n;j++){
            ll newdist = dist[v] + adj[v][j];
            if(!done[j] && newdist < dist[j]){
                dist[j] = newdist;
            }
        }
    }


// cout<<"dist: ";for(int i=1;i<=n;i++)    cout<<dist[i]<<" ";cout<<endl;

    for(int i=1;i<=n;i++){
        ll ans = dist[i] + (n-1)*min_edge;
        printf("%lld\n", ans);
    }
    return 0;
}





