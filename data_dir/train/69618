#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

vector<pair<int,int> > her;
vector<int> pos;
vector<int> A;

int n,m;

bool nice(pair<int,int>& p,int pos,vector<int>& a){
    int x=p.first;
    int hp=p.second;
    int sign=0;
    if (x<pos)
        sign=1;
    if (x>pos)
        sign=-1;
    for (int i=x;;i+=sign)
    {
        hp+=a[i];
        if (hp<0)
            return 0;
        if (i==pos)
        {
            return 1;
        }
    }
}

void clear(pair<int,int>& p,int pos,vector<int>& a){
    int x=p.first;
    int sign=0;
    if (x<pos)
        sign=1;
    if (x>pos)
        sign=-1;
    for (int i=x;;i+=sign)
    {
        a[i]=0;
        if (i==pos)
            return;
    }
}

void go(int i)
{
    auto v=her;
    auto a=A;

    vector<int> order;

    for (int x=1;x<=m;x++){
        int fl=0;
        for (int j=1;j<=m;j++)
        {
            if (v[j].first){
                if (nice(v[j],i,a)){
                    clear(v[j],i,a);
                    order.push_back(j);
                    v[j]={0,0};
                    fl=1;
                    break;
                }
            }
        }
        if (!fl)
            break;
    }
    if (order.size()==m){
        cout << i << endl;
        for (auto x:order){
            cout << x << ' ';
        }
        exit(0);
    }
}

int main()
{
    cin >> n >> m;

    her.resize(m+1);
    pos.resize(n+1);

    for (int i=1;i<=m;i++){
        cin >> her[i].first >> her[i].second;
        pos[her[i].first] = i;
    }

    A.resize(n+1);
    for (int i=1;i<=n;i++)
        cin >> A[i];

    for (int i=1;i<=n;i++)
    {
        go(i);
    }
    cout << -1;

    return 0;
}
