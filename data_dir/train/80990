#include <bits/stdc++.h>
using namespace std;

const int N = 3e5 + 5;

int n, m;
bool used[N], usd[N];
vector<pair<int, int> > g[N];
vector<int> ans[N];
void dfs (int v){
    usd[v] = true;
    for (int i = 0; i < (int)g[v].size(); ++i){
        int to = g[v][i].first, id = g[v][i].second;
        if (!used[id]){
            used[id] = true;
            ans[to].push_back(v);
        }
        if (!usd[to]) dfs (to);
    }
}
void dfs1 (int v){
    used[v] = true;
    for (int i = 0; i < (int)ans[v].size(); ++i){
        int to = ans[v][i];
        if (!used[to]) dfs1 (to);
    }
}
int main(){


    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    cin >> n >> m;
    for (int i = 1; i <= m; ++i){
        int u, v;
        cin >> u >> v;
        g[v].push_back({u, i});
        g[u].push_back({v, i});
    }
    dfs (1);
    memset (used, 0, sizeof(used));
    dfs1 (1);
    for (int i = 1; i <= n; ++i) if (!used[i]) return cout << 0, 0;
    for (int i = 1; i <= n; ++i){
        for (int j = 0; j < (int)ans[i].size(); ++j){
            int to = ans[i][j];
            cout << i << ' ' << to << '\n';
        }
    }


}
