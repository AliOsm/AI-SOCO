#include <bits/stdc++.h>

using namespace std;
int n,valid=1;
const int N=2e5+5;
int a[N],val[N],key[N][3],cnt[N];
bool vis[N];
vector< pair<int,int> >adj[N];
void dfs(int u=0,int c=1)
{
    vis[u]=1;
    val[u]=c;
    for(auto v:adj[u])
    {
        if(val[v.first]==-1) continue;
        if(v.second==1&&val[u]!=val[v.first]) valid=0;
        if(v.second==0&&val[u]==val[v.first]) valid=0;
    }
    for(auto v:adj[u])
        if(!vis[v.first])
        {
            if(v.second==1) dfs(v.first,c);
            else dfs(v.first,!c);
        }

}
int main()
{
    int m;
    cin>>n>>m;
    for(int i=1;i<=n;i++) cin>>a[i];
    for(int i=0;i<m;i++)
    {
        int x;
        cin>>x;
        for(int j=0;j<x;j++)
        {
            int v;
            cin>>v;
            key[v][cnt[v]]=i;
            cnt[v]++;
        }
    }
    for(int i=1;i<=n;i++)
    {
        adj[key[i][0]].push_back({key[i][1],a[i]});
        adj[key[i][1]].push_back({key[i][0],a[i]});
    }
    memset(val,-1,sizeof val);
    for(int i=0;i<m;i++)
    {
        if(!vis[i])
            dfs(i,1);
    }
    if(valid) cout<<"YES"<<endl;
    else cout<<"NO"<<endl;
    return 0;
}
