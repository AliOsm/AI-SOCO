/* C */
#include <iostream>
#include <sstream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <bitset>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

typedef long double ld;
const double eps = 1e-7;
const int maxn = 1e5+5;
double mx[maxn], mn[maxn];
ld sum[maxn], sum_[maxn];
ld a[maxn], b[maxn];
int n;

int dcmp(double x) {
	if (fabs(x) < eps)	return 0;
	return x<0 ? -1:1;
}

inline void f(ld& x1, ld& x2, ld A, ld B) {
	ld delta = A * A - 4 * B;
	
	if (delta < 0)
		delta = 0;
	ld tmp = sqrt(delta);
	x1 = (A + tmp) / 2.0;
	x2 = (A - tmp) / 2.0;
}

void solve() {
	rep(i, 1, n+1) {
		sum[i] = sum[i-1] + mx[i];
		sum_[i] = sum_[i-1] + mn[i];
	}
	rep(i, 1, n+1) {
		ld B = sum[i];
		ld A = sum[i] + sum_[i];
		f(a[i], b[i], A, B);
	}
	
	rep(i, 1, n+1) {
		printf("%.16lf ", (double)(a[i]-a[i-1]));
	}
	putchar('\n');
	rep(i, 1, n+1) {
		printf("%.16lf ", (double)(b[i]-b[i-1]));
	}
	putchar('\n');
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	cout.setf(ios::fixed);
    cout.precision(9);
	
	scanf("%d", &n);
	rep(i, 1, n+1)	scanf("%lf", &mx[i]);
	rep(i, 1, n+1)	scanf("%lf", &mn[i]);
	solve();
	
	#ifndef ONLINE_JUDGE
		printf("time = %ldms.\n", clock());
	#endif
	
	return 0;
}