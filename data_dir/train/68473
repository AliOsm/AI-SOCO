#include<bits/stdc++.h>
#define PB push_back
#define F first
#define S second
#define MP m ake_pair
#define LB lower_bound
#define UB upper_bound

using namespace std;
typedef long long ll;
typedef pair<int , int> pii;
typedef long double DB;

const int N = 1000*1000 + 10;

vector <int> adj[N];
string s[N];
int d1[N] , d2[N] , val[N];

void DFS1(int v){

	for(int u : adj[v])
	   DFS1(u);
	
	if(s[v] == "NOT")
	   d1[v] = 1 - d1[adj[v][0]];
	else if(s[v] == "IN")
	   d1[v] = val[v];
	else{
		int u = adj[v][0] , x = adj[v][1];
		if(s[v] == "OR")
		   d1[v] = (d1[u] | d1[x]);
		else if(s[v] == "XOR")
		   d1[v] = (d1[u] ^ d1[x]);
		else
		   d1[v] = (d1[u] & d1[x]);
	}

	return;
}

void DFS2(int v){

	if(s[v] == "IN")
	   return;
	else if(s[v] == "NOT")
	   d2[adj[v][0]] = d2[v];
	else{
		int x = adj[v][0] , y = adj[v][1];
		for(int z = 0 ; z < 2 ; z++){		
			if(s[v] == "OR")
			   d2[x] = ((d1[x] | d1[y]) == ((1 - d1[x]) | d1[y]) ? d1[0] : d2[v]);
			else if(s[v] == "XOR")
			   d2[x] = ((d1[x] ^ d1[y]) == ((1 - d1[x]) ^ d1[y]) ? d1[0] : d2[v]);
			else
			   d2[x] = ((d1[x] & d1[y]) == ((1 - d1[x]) & d1[y]) ? d1[0] : d2[v]);

			swap(x , y);
		}
	}

	for(int u : adj[v])
	   DFS2(u);

	return;
}

int main(){

	ios_base::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
	
	int n , u , v;
	cin >> n;

	for(int i = 0 ; i < n ; i++){
		cin >> s[i] >> u;
		if(s[i] == "IN")
		   val[i] = u;
		else
		   adj[i].PB(--u);
		if(s[i] != "NOT" && s[i] != "IN"){
			cin >> v;
			adj[i].PB(--v);
		}
	}

	DFS1(0);
	d2[0] = 1 - d1[0];
	DFS2(0);

	for(int i = 0 ; i < n ; i++)
	   if(s[i] == "IN")
		   cout << d2[i];
	
	cout << endl;
	return 0;
}
