//g++ -std=c++14 -g -O2 -o ./a ./A.cpp
#include <bits/stdc++.h>
using namespace std;
#define ff first
#define ss second
#define pb push_back
#define nl '\n'
typedef long long ll;
typedef pair<int,int> pii;
////////////////////////////////////////////////////////////////////////////////

const int M = 1000100 , N = 100100;
int n,a,b;
vector<int> s;
queue<int> q;

template<typename T>
struct arr{
  T v[M];
  T&operator[](const size_t&i){return v[i-b];}
};
arr<bool> vis;
arr<int> dist;
arr<int> mx;
int fre;

int main(){
  ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);

  cin>>n;
  for(int i=1;i<=n;i++){
    int x;cin>>x;s.emplace_back(x);
  }
  cin>>a>>b;
  sort(s.begin(),s.end());
  s.erase(unique(s.begin(),s.end()),s.end());

  for(auto&x:s){
    int lx = ((b+x-1)/x)*x;
    int rx = a-a%x;
    for(int i=lx;i<=rx;i+=x)mx[i] = x;
  }

  //for(int z=b;z<=a;z++)cout<<mx[z]<<' ';cout<<nl;

  fre = b+1;
  q.emplace(b);
  dist[b]=0;vis[b]=1;
  while(!q.empty() and !vis[a]){
    int u = q.front();q.pop();
    int du = dist[u];
    if(!vis[u+1]){
      vis[u+1]=1;q.emplace(u+1);
      for(;vis[fre];fre++);
      dist[u+1]=du+1;
    }
    for(int j=fre;j<u+mx[u] and !vis[a];j++)
      if(!vis[j]){
	vis[j]=1;q.emplace(j);
	for(;vis[fre];fre++);
	dist[j] = du+1;
      }
  }
  cout<<dist[a]<<nl;
  
  return 0;
}
