#include <bits/stdc++.h>
using namespace std;
 
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"


           //       |----|       /\      |    |   -----   |
           //       |   /       /  \     |    |     |     |
           //       |--/       /----\    |----|     |     |
           //       |   \     /      \   |    |     |     |
           //       |    \   /        \  |    |   -----   -------

int n,a,b,arr[200];
int sum=0;
int cache[200][40000][2][2];
int dp(int pos,int diff,int dom,int prev)
{
    if(pos==n)
    {
        if(dom==0)
        {
            int a1=(sum-diff)/2;
            int b1=(sum+diff)/2;
            if(a1<=a&&b1<=b)
            {
                return 0;
            }
            else return 1000000000;
        }
        else
        {
            int a1=(sum+diff)/2;
            int b1=(sum-diff)/2;
            if(a1<=a&&b1<=b)
            return 0;
            else return 1000000000;
        }
    }
    if(cache[pos][diff][dom][prev]!=-1)
    return cache[pos][diff][dom][prev];
    int addval=min(arr[pos],arr[pos-1]);
    int min1=1000000000;
    if(dom==0)//red dom
    {
        if(prev==0)//prev red
        {
            min1=min(min1,dp(pos+1,diff+arr[pos],0,0));//red
            //green
            if(diff-arr[pos]<0)
            min1=min(min1,addval+dp(pos+1,abs(diff-arr[pos]),1,1));
            else
            min1=min(min1,addval+dp(pos+1,diff-arr[pos],0,1));
        }
        else//prev green
        {
            min1=min(min1,addval+dp(pos+1,diff+arr[pos],0,0));//red
            //green
            if(diff-arr[pos]<0)
            min1=min(min1,dp(pos+1,abs(diff-arr[pos]),1,1));
            else
            min1=min(min1,dp(pos+1,diff-arr[pos],0,1));
        }
    }
    else//green dom
    {
        if(prev==1)//prev green
        {
            min1=min(min1,dp(pos+1,diff+arr[pos],1,1));//green
            //red
            if(diff-arr[pos]<0)
            min1=min(min1,addval+dp(pos+1,abs(diff-arr[pos]),0,0));
            else
            min1=min(min1,addval+dp(pos+1,diff-arr[pos],1,0));
        }
        else//prev red
        {
            min1=min(min1,addval+dp(pos+1,diff+arr[pos],1,1));//green
            //red
            if(diff-arr[pos]<0)
            min1=min(min1,dp(pos+1,abs(diff-arr[pos]),0,0));
            else
            min1=min(min1,dp(pos+1,diff-arr[pos],1,0));
        }
    }
    return cache[pos][diff][dom][prev]=min1;
}
int main()
{
    IOS
    freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
    cin>>n>>a>>b;
    for(int i=0;i<n;i++)
    cin>>arr[i];
    for(int i=0;i<n;i++)sum+=arr[i];
    memset(cache,-1,sizeof(cache));
    int min1=1000000000;
    min1=min(dp(1,arr[0],0,0),dp(1,arr[0],1,1));
    if(min1==1000000000)min1=-1;
    cout<<min1;
}