#include <bits/stdc++.h>
#define F first
#define S second
#define Pb push_back
#define Mp make_pair
using namespace std;
long long n,q,A,B,x,ans[100005],f[100005];
pair<long long,long long>b[100005],a[100005];
vector < pair < pair < long long , long long > , long long > > v[316];
main ()
{
	scanf("%i64d",&n);
	scanf("%i64d",&q);
	
	for (int i=0; i<n; i++)
	{
		scanf("%i64d",&a[i].F);
		
		a[i].S=a[i].F;
		
		b[i].F=a[i].F;
		b[i].S=i;
	}
	
	sort(b,b+n);
	
	x=1;
	a[b[0].S].F=x;
	
	for (int i=1; i<n; i++)
		if (b[i].F!=b[i-1].F)
		{
			x++;
			a[b[i].S].F=x;
		}
			else
		{
			a[b[i].S].F=x;
		}
	
	int M=sqrt(n);
	
	if (M*M!=n) M++;
	
	int Ms=(n+M-1)/M;
	
	for (long long i=1; i<=q; i++)
	{
		scanf("%i64d",&A);
		scanf("%i64d",&B);
		
		A--;
		B--;
		
		long long block=A/M;
		
		v[block].Pb(Mp(Mp(B,A),i));
	}

	for (int i=0; i<Ms; i++)
		sort(v[i].begin(),v[i].end());

	for (int i=0; i<Ms; i++)
		for (int j=0; j<v[i].size(); j++)
			swap(v[i][j].F.F,v[i][j].F.S);
	
	for (int block=0; block<Ms; block++)
	{
		long long SUM=0;
		
		if (!v[block].size()) continue;
		
		long long ANS=0;
		
		for (int j=v[block][0].F.F; j<=v[block][0].F.S; j++)
		{
			if (f[a[j].F]==a[j].S) ANS--;
				
			f[a[j].F]++;
				
			if (f[a[j].F]==a[j].S) ANS++;	
		}
	
		ans[v[block][0].S]=ANS;	
		
		long long L=v[block][0].F.F;
		long long R=v[block][0].F.S;
		
		for (int j=1; j<v[block].size(); j++)
		{
			for (int k=R+1; k<=v[block][j].F.S; k++)
			{	
				if (f[a[k].F]==a[k].S) ANS--;
				
				f[a[k].F]++;
				
				if (f[a[k].F]==a[k].S) ANS++;
			}
			
			if (L<v[block][j].F.F)	
				for (int k=L; k<v[block][j].F.F;k++)	
				{
					if (f[a[k].F]==a[k].S) ANS--;
					
					f[a[k].F]--;
					
					if (f[a[k].F]==a[k].S) ANS++;
				}
				
			if (v[block][j].F.F<L)
				for (int k=v[block][j].F.F; k<L; k++)	
				{
					if (f[a[k].F]==a[k].S) ANS--;
					
					f[a[k].F]++;
					
					if (f[a[k].F]==a[k].S) ANS++;
				}
			
			ans[v[block][j].S]=ANS;
		
			L=v[block][j].F.F;
			R=v[block][j].F.S;
		}
		
		for (int j=0; j<=n; j++)
			f[j]=0;
	}
	
	for (int i=1; i<=q; i++)
		cout<<ans[i]<<endl;
}