#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define fs first
#define se second
#define pi 2*acos(0)
#define PI 3.14159265358979323846264338

typedef long long ll;
typedef pair < int , int > pii;
typedef pair < ll , ll > pll;
const int N = 100010;
const ll limit = (ll)1e18 + 2ll;

inline int in() {int x; scanf("%d",&x); return x;}
inline ll lin() {ll x; scanf("%I64d",&x); return x;}

ll n;
ll dp[100][100];

char s[100];

ll P(ll a, int how){
    ll ret = a, x = n;
    while(how > 0){
        if(ret == 0) return ret;
        ll b = limit / ret;
        if(b < x) return limit;
        ret *= x; how--;
        if(ret >= limit) return limit;
    }
    return ret;
}

ll Q(ll a){
    return min(a,limit);
}

int cc;

ll go(int now, int c){
    if(now < 0) return 0;
    if(dp[now][c] != -1) return dp[now][c];
    ll ret = (ll)1e18 + 2ll, hand = 0, ten = 1;
    for(int i = now; i >= 0; i--){
        hand = (s[i] - '0') * ten + hand; ten *= 10ll;
        if(hand < n && (s[i] != '0')){
            ret = min(ret, P(hand, c) + go(i - 1, c + 1));
            ret = Q(ret);
        }
        if(hand == 0 && ten < 11){
            ret = min(ret, P(hand, c) + go(i - 1, c + 1));
            ret = Q(ret);
        }
        if(hand >= n || ten > n){
            if(i == 0){
                ret = min(ret, (ll)1e18 + 2ll);
                ret = Q(ret);
            }
            break;
        }
        if(hand == 0 && i == 0){
            ret = min(ret, (ll)1e18 + 2ll);
            ret = Q(ret);
        }
    }
    return dp[now][c] = ret;
}

int main(){
    n = lin();
    scanf("%s",s);
    int len = strlen(s) - 1;
    memset(dp, -1, sizeof dp);
    ll ans = go(len,0);
    printf("%I64d\n",ans);
}

/*
2
10000000000000000000000000
*/
