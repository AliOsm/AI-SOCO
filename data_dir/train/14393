#include <bits/stdc++.h>

#define SZ(x) (((int)x.size()))

typedef long long ll;
typedef long double ld;

using namespace std;

const int maxn = 100*1000+10;
int n, m, a[maxn], al[maxn], ar[maxn], tind[3 * maxn];
vector<int> tc[3 * maxn];
unordered_set<int> s;
int *ind = tind + maxn;
vector<int> *c = tc + maxn;
ll ans;

int main()
{
	cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		cin >> a[i];
		a[i]--;
	}
	if (n == 1)
	{
		cout << 0;
		return 0;
	}
	for (int i = 0; i < n; i++)
	{
		ind[i] = i;
		s.insert(i);
		c[i].push_back(i);
	}
	for (int i = 0; i < m; i++)
	{
		if (s.find(a[i] + i + 1) == s.end())
			continue;
		if (s.find(a[i] + i + 2) == s.end())
		{
			ind[a[i] + i + 2] = ind[a[i] + i + 1];
			s.erase(a[i] + i + 1);
			s.insert(a[i] + i + 2);
			continue;
		}
		s.erase(a[i] + i + 1);
		if (SZ(c[ind[a[i] + i + 1]]) < SZ(c[ind[a[i] + i + 2]]))
		{
			for (auto &w : c[ind[a[i] + i + 1]])
				c[ind[a[i] + i + 2]].push_back(w);
			c[ind[a[i] + i + 1]].clear();
		}
		else
		{
			for (auto &w : c[ind[a[i] + i + 2]])
				c[ind[a[i] + i + 1]].push_back(w);
			c[ind[a[i] + i + 2]].clear();
			ind[a[i] + i + 2] = ind[a[i] + i + 1];
		}
	}
	for (auto &w : s)
	{
		for (auto &g : c[ind[w]])
			al[g] = max(0, w - (m + 1));
	}
	s.clear();
	for (int i = -maxn; i < 2 * maxn; i++)
	{
		c[i].clear();
		ind[i] = i;
	}
	for (int i = 0; i < n; i++)
	{
		c[i].push_back(i);
		s.insert(i);
	}
	for (int i = 0; i < m; i++)
	{
		if (s.find(a[i] - i - 1) == s.end())
			continue;
		if (s.find(a[i] - i - 2) == s.end())
		{
			ind[a[i] - i - 2] = ind[a[i] - i - 1];
			s.erase(a[i] - i - 1);
			s.insert(a[i] - i - 2);
			continue;
		}
		s.erase(a[i] - i - 1);
		if (SZ(c[ind[a[i] - i - 1]]) < SZ(c[ind[a[i] - i - 2]]))
		{
			for (auto &w : c[ind[a[i] - i - 1]])
				c[ind[a[i] - i - 2]].push_back(w);
			c[ind[a[i] - i - 1]].clear();
		}
		else
		{
			for (auto &w : c[ind[a[i] - i - 2]])
				c[ind[a[i] - i - 1]].push_back(w);
			c[ind[a[i] - i - 2]].clear();
			ind[a[i] - i - 2] = ind[a[i] - i - 1];
		}
	}
	for (auto &w : s)
	{
		for (auto &g : c[ind[w]])
		{
			ar[g] = min(n - 1, w + (m + 1));
			ans += ar[g] - al[g] + 1;
		}
	}
	cout << ans;
	return 0;
}
