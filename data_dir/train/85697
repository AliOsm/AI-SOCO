#include<iostream>
#include<algorithm>

using namespace std;

const int MAXN = 300;
int cnt[MAXN], cnt2[MAXN], cnt3[MAXN], k[MAXN], f[MAXN], in2;

int main()
{
	ios::sync_with_stdio(false);
	string a, b, c;
	cin >> a >> b >> c;
	for(int i = 0; i < a.size(); i++)
		cnt[a[i]]++;
	for(int i = 0; i < b.size(); i++)
		cnt2[b[i]]++;
	for(int i = 0; i < c.size(); i++)
		cnt3[c[i]]++;
	int sum = -1, in;
	for(int i = 0; i <= a.size(); i++)
	{
		bool flag = false;
		for(int j = 'a'; j <= 'z'; j++)
		{
			k[j] = cnt[j] - cnt2[j] * i;
			if(k[j] < 0)
			{
				flag = true;
				break;
			}
		}
		if(flag)
			break;
		int ans = 1e9;
		for(int j = 'a'; j <= 'z'; j++)
			if(cnt3[j])
				ans = min(ans, k[j] / cnt3[j]);
		if(i + ans > sum)
		{
			sum = max(sum, i + ans);
			in = i;
			in2 = ans;
		}
	}
	for(int j = 'a'; j <= 'z'; j++)
		f[j] = cnt[j] - cnt2[j] * in - in2 * cnt3[j];
	string o;
	for(int i = 0; i < in; i++)
		o += b;
	for(int i = 0; i < in2; i++)
		o += c;
	for(int i = 'a'; i <= 'z'; i++)
		for(int j = 0; j < f[i]; j++)
			o += char(i);
	cout << o << endl;
	return 0;
}
