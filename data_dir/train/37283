#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 1e6 + 7;

int cnt[10];
int tmp[10];
string s[N], n, t;
string ans[3];

int main()
{
	ios::sync_with_stdio(false);

	cin >> t;
	for (int i=0; i<(int)t.size(); i++)
		cnt[t[i]-'0']++;
	cin >> n;
	for (int i=0; i<(int)n.size(); i++)
		cnt[n[i]-'0']--;

	for (int ss=7; ss>=1; ss--)
		if (ss < (int)t.size()) 
		{
			memcpy(tmp, cnt, sizeof cnt);
			int num = t.size() - ss;
			int cc = 0;
			while (num)
				cc++, tmp[num % 10]--, num /= 10;
			if (cc != ss)
				continue;
			int p = 0;
			if (n[0] != '0')
			{
				ans[p] = n;
				for (int i=0; i<10; i++)
					for (int j=0; j<tmp[i]; j++)
						ans[p].push_back((char)(i+'0'));
				p++;
			}
			for (int i=1; i<10; i++)
				if (tmp[i] > 0)
				{
					ans[p].push_back((char)(i+'0'));
					for (int j=0; j<10; j++)
					{
						if (n[0]-'0' == j)
							ans[p] += n;
						for (int k=0; k<tmp[j] - (i == j); k++)
							ans[p].push_back((char)(j+'0'));
					}
					p++;
					ans[p].push_back((char)(i+'0'));
					for (int j=0; j<10; j++)
					{
						for (int k=0; k<tmp[j] - (i == j); k++)
							ans[p].push_back((char)(j+'0'));
						if (n[0]-'0' == j)
							ans[p] += n;
					}
					p++;
					break;
				}
			if (p > 0)
			{
				sort(ans, ans+p);
				cout << ans[0] << "\n";
			}
			else
				cout << "0\n";
			return 0;
		}

	return 0;
}
