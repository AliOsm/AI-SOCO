
#include <iostream>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
using namespace std;
#define rep(i, n) for (int (i) = 0, j1234 = n; (i) < j1234; (i) ++)
#define rep1(i, n) for (int (i) = 1, j1234 = n; (i) <= j1234; (i) ++)
#define For(i, a, b) for (int (i) = (a), ub1234=b; (i) <= ub1234; (i) ++)
#define db(x) {if(debug){cout << #x << " = " << (x) << endl;}}
#define dba(a, x, y) {if(debug){cout << #a << " :";For(i, (x), (y))cout<<" "<<(a)[(i)];cout<<endl;}}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define endl '\n'
#define ll long long
#define ld long double
#define pi 3.1415926535897932384626433832795028
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const int output_precision = 15;
const bool debug = true;
// const ll MOD = ;

int N, M, s[2100][2100];
char A[2100][2100];
int main()
{
  ios_base::sync_with_stdio(0); cout.precision(output_precision); cout << fixed;
  cout.tie(0);
  cin >> N >> M;
  int x1=INF,y1=INF,x2=-INF,y2=-INF;
  int cnt = 0;
  rep1(i,N) rep1(j,M)
  {
    cin >> A[i][j];
    if (A[i][j] == 'w')
    {
      cnt ++;
      s[i][j]++;
      x1=min(x1,i);
      y1=min(y1,j);
      x2=max(x2,i);
      y2=max(y2,j);
    }
    s[i][j]+=s[i-1][j]+s[i][j-1]-s[i-1][j-1];
  }

  int d = max(x2-x1,y2-y1);
  rep1(i,N) rep1(j,M)
  {
    if (i + d > N || j + d > M) continue;
    if (s[i+d][j+d]-s[i-1][j+d]-s[i+d][j-1]+s[i-1][j-1]!=cnt) continue;

    if (d >= 2 && s[i+d-1][j+d-1]-s[i][j+d-1]-s[i+d-1][j]+s[i][j] != 0) continue;

    rep(dd,d+1)
    {
      if (A[i][j+dd]=='.') A[i][j+dd]='+';
      if (A[i+dd][j]=='.') A[i+dd][j]='+';
      if (A[i+d][j+dd]=='.') A[i+d][j+dd]='+';
      if (A[i+dd][j+d]=='.') A[i+dd][j+d]='+';
    }
    rep1(i,N) rep1(j,M) cout << A[i][j] << (j==M?"\n":"");
    return 0;
  }
  cout << -1 << endl;
}
