/*
ye mera template hai
apna khud likho bc :P
*/

/*
Author : Sarvagya Agarwal
*/

#include<bits/stdc++.h>
using namespace std;

//defines
#define openin freopen("input.txt","r",stdin)
#define openout freopen("output.txt","w",stdout)
#define fast ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define ll long long
#define int long long
#define mod 1000000007
#define repr(i,x,y) for (__typeof(x) i=x;i>=y;i--)
#define rep(i,x,y) for (__typeof(x) i=x;i<=y;i++)
#define all(c) (c).begin(),(c).end()
#define ff first
#define ss second
#define pb push_back
#define mp make_pair

/* Print pair */
template <typename T,typename S>
ostream & operator << (ostream &os , const pair<T,S> &v) {
    os << "(" ;
    os << v.first << "," << v.second << ")" ;
    return os ;
}
/* Print vector */
template <typename T>
ostream & operator << (ostream &os , const vector<T> &v) {
    os << "[" ;
    int sz = v.size() ;
    for(int i = 0 ; i < sz ; ++i) {
        os << v[i] ;
        if(i!=sz-1)os << "," ;
    }
    os << "]\n" ;
    return os ;
}
/* Print set */
template <typename T>
ostream & operator << (ostream &os , const set<T> &v) {
    T last = *v.rbegin() ;
    os << "[" ;
    for(auto it : v) {
        os << it  ;
        if(it != last) os << "," ;
    }
    os << "]\n" ;
    return os ;
}
/* Print Map */
template <typename T,typename S>
ostream & operator << (ostream &os , const map<T,S> &v) {
    for(auto it : v) {
        os << it.first << " : " << it.second << "\n" ;
    }
    return os ;
}
int power(int a , int b)
{
    int res = 1 ;
    while(b)
    {
        if(b%2) {
            res = (res * a) % mod ;
        }
        b/=2 ;
        a = (a*a) % mod ;
    }
    return res ;
}

//debug
#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
		cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
		const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif
const int maxn = 2e5 + 5 ;
int arr[maxn] ;
int32_t main()
{
    fast;
    int n ;
    cin >> n ;
    vector<int> temp ;
    temp.resize(3) ;
    for(int i = 0 ; i < 3 ; ++i) cin >> temp[i] ;
    int a,b,c ;
    for(int i = 0 ; i < n ; ++i) cin >> arr[i] ;
    sort(all(temp)) ;
    sort(arr,arr+n) ;
    a = temp[0] , b = temp[1] , c = temp[2] ;
    int ab = a + b , bc = b + c , ca = a + c , abc = a + b + c ;
    if(arr[n-1] > a + b + c) {
        cout << -1 ;
        return 0 ;
    }
    int lo = 1 , hi = n , mi , ans = 0 ;
    while(lo <= hi)
    {
        mi = lo + hi >> 1 ;
        int ta = 0 , tb = 0 , tc = 0 , tab = 0 , tbc = 0 , tca = 0 , tabc = 0 ;
        int i ;
        for(i = n-1 ; i >= 0 ; --i) {
            if(ta + tab + tca + tabc < mi && arr[i] <= a ) ta++ ;
            else if(tb + tab + tbc + tabc < mi && arr[i] <= b ) tb++ ;
            else if(tc + tbc + tca + tabc < mi && arr[i] <= c ) tc++ ;
            else if(ta + tb + tab + tbc + tca + tabc < mi && arr[i] <= ab ) tab++ ;
            else if(ta + tc + tab + tbc + tca + tabc < mi && arr[i] <= ca ) tca++ ;
            else if(tc + tb + tab + tbc + tca + tabc < mi && arr[i] <= bc ) tbc++ ;
            else if(ta + tb + tc + tab + tbc + tca + tabc < mi && arr[i] <= abc ) tabc++ ;
            else break ;
        }
        if(i >= 0 ) lo = mi + 1 ;
        else hi = mi - 1 , ans = mi ;
    }
    cout << ans ;
    return 0;
}
