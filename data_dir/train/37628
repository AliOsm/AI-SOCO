//  Copyright Â© 2018 Diego Garcia Rodriguez del Campo. All rights reserved.

#include<bits/stdc++.h>
#define MAX 205
#define optimiza_io cin.tie(0); ios_base::sync_with_stdio(0);
using namespace std;
typedef long long i64;

int N, B;
int sum[MAX];
int a[MAX];
bool vis[MAX][MAX];
int memo[MAX][MAX];

bool igual( int l , int r )
{
    int tam = r - l + 1;
    int impa = sum[r] - sum[l - 1];
    if( tam - impa == impa )
        return true;
    return false;
}

int dp( int x , int b )
{
    if( x == N )
        return 0;
    if( vis[x][b] )
        return memo[x][b];
    int ans = 0;
    for( int i = x + 1; i < N; i ++ )
        if( igual( x , i ) && igual( i + 1 , N ) )
        {
            int precio = abs( a[i] - a[i + 1] );
            if( b < precio )
                continue;
            ans = max( ans , dp( i + 1 , b - precio ) + 1 );
        }
    vis[x][b] = true;
    return memo[x][b] = ans;
}

int main()
{
    optimiza_io
    cin >> N >> B; 
    for( int i = 1; i <= N; i ++ )
    {
        cin >> a[i];
        sum[i] = sum[i - 1];
        if( a[i] & 1 )
            sum[i]++;
    }
    cout << dp( 1 , B ) << "\n";
    return 0;
}
