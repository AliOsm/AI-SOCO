#include<bits/stdc++.h>

using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;

#define endl '\n'
#define MAX

typedef long long ll;
typedef pair<int,int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;


int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	string a;
	cin >> a;
	int n = (int)a.size();
	
	if(n <= 3){
		cout << "YES" << endl;
		cout << a << endl;
		return 0;
	}
	
	vector<int> f(26);
	for(int i = 0; i < n; i++)
		f[a[i] - 'a']++;
	
	vector<char> ans(n + 1);
	vector<bool> flags(n + 1);
	
	for(int i = 2; i <= n; i += 2)
		flags[i] = true;
	
	for(int i = 3; i <= n; i++){
		if(!flags[i] && i * 2 <= n){
			for(int j = i; j <= n; j += i)
				flags[j] = true;
		}
	}
	
	int cont = 0;
	for(int i = 1; i <= n; i++)
		cont += flags[i];
	
	int most = -1, pos = -1;
	for(int i = 0; i < 26; i++)
		if(f[i] > most){
			most = f[i];
			pos = i;
		}
	
	if(most < cont){
		cout << "NO" << endl;
		return 0;
	}
	
	f[pos] -= cont;
	
	for(int i = 1; i <= n; i++)
		if(flags[i])
			ans[i] = (char)(pos + 'a');
	
	for(int i = 1; i <= n; i++){
		if(!flags[i]){
			for(int j = 0; j < 26; j++){
				if(f[j] > 0){
					f[j]--;
					ans[i] = (char)(j + 'a');
					flags[i] = true;
					break;
				}
			}
		}
	}
	
	for(int i = 1; i <= n; i++){
		if(!flags[i]){
			cout << "NO" << endl;
			return 0;
		}
	}
	
	cout << "YES" << endl;
	for(int i = 1; i <= n; i++)
		cout << ans[i];
	cout << endl;
	

	return 0;
}