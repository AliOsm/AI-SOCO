#include<bits/stdc++.h>
using namespace std;
int mx[600005];
int mn[600005];
int ara[600005];
void build(int n, int s, int e)
{
    if(s==e)
    {
        mx[n]= s;
        mn[n]= e;
        return;
    }
    int mid= (s+e)>>1;
    build(n*2, s, mid);
    build(n*2 +1, mid+1, e);
    if(ara[mx[n*2]]>ara[mx[n*2 +1]])mx[n]= mx[n*2];
    else mx[n]= mx[n*2 +1];

    if(ara[mn[n*2]]<ara[mn[n*2 +1]])mn[n]= mn[n*2];
    else mn[n]= mn[n*2 +1];
    return;
}
int querymx(int n, int s, int e, int l, int r)
{
    if(s>=l && e<=r)
        return mx[n];
    if(s>r || e<l)
        return 0;
    int mid= (s+e)>>1;
    int a= querymx(n*2, s, mid, l, r);
    int b= querymx(n*2 +1, mid+1, e, l, r);
    if(ara[a]>ara[b])return a;
    else return b;
}
int querymn(int n, int s, int e, int l, int r)
{
    if(s>=l && e<=r)
        return mn[n];
    if(s>r || e<l)
        return 600002;
    int mid= (s+e)>>1;
    int a= querymn(n*2, s, mid, l, r);
    int b= querymn(n*2 +1, mid+1, e, l, r);
    if(ara[a]<ara[b])return a;
    else return b;
}
int main()
{
    int n, q, l, r, x;
    scanf("%d %d", &n, &q);
    for(int i=1; i<=n; i++)
        scanf("%d", &ara[i]);
    build(1, 1, n);
    ara[0]= INT_MIN;
    ara[600002]= INT_MAX;
    while(q--)
    {
        scanf("%d %d %d", &l, &r, &x);
        int a= querymx(1, 1, n, l, r);
        int b= querymn(1, 1, n, l, r);
        if(ara[a]==ara[b] && ara[a]==x)printf("-1\n");
        else
        {
            if(ara[a]!=x)printf("%d\n", a);
            else printf("%d\n", b);
        }
    }

    return 0;
}
