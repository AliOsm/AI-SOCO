#define _CRT_SECURE_NO_DEPRECATE
#include <iostream>
#include <bitset>
#include <string>
#include <vector>
#include <algorithm>
#include <ctime>
#include <queue>
#include <cstring>
#include <set>
#include <map>
#include <sstream>
#include <cmath>
#include <fstream>
#include <list>
using namespace std;
#define rp(i,n) for(int (i)=0;(i)<(n);++(i))
#define pb push_back
#define L(s) (int)s.size()
#define mp make_pair
#define pii pair<int,int>
#define x first 
#define y second
#define inf 1000000000
#define VI vector<int>
#define ll long long
#define all(s) (s).begin(),(s).end()
#define C(u) memset((u),0,sizeof((u)))
#define ull unsigned ll
#define uint unsigned int 
#define pdd pair<double,double>
set< pair < pii, int > > s;
int n,m,k; 
VI a[3333];
int d[3333][3333];
int p[3333][3333];
queue<pii > q;
int main()
{
	scanf("%d%d%d",&n,&m,&k);
	rp(i,m)
	{
		int p,q;
		scanf("%d%d",&p,&q);
		--p;--q;
		a[p].pb(q);
		a[q].pb(p);
	}
	rp(i,k)
	{
		int x,y,z;
		scanf("%d%d%d",&x,&y,&z);
		--x;--y;--z;
		s.insert(mp(mp(x,y),z));
	}
	memset(d,63,sizeof(d));
	rp(i,L(a[0]))
	{
		d[0][a[0][i]]=1;
		q.push(mp(0,a[0][i]));
	}
	while(!q.empty())
	{
		pii cur=q.front();
		q.pop();
		rp(i,L(a[cur.y]))
		{
			int v=a[cur.y][i];
			if (s.find(mp(cur,v))==s.end())
				if (d[cur.y][v]>inf)
				{
					d[cur.y][v]=d[cur.x][cur.y]+1;
					p[cur.y][v]=cur.x;
					q.push(mp(cur.y,v));
				}
		}
	}
	int ans=inf;
	int who=-1;
	rp(i,n)
		if (d[i][n-1]<ans)
		{
			ans=d[i][n-1];
			who=i;
		}
	if (ans==inf)
		cout<<"-1\n";
	else
	{
		cout<<ans<<endl;
		VI v(0);
		int now=n-1;
		int prv=who;
		while(prv)
		{
			v.pb(now);
			int tmp=p[prv][now];
			now=prv;
			prv=tmp;
		}
		v.pb(now);
		v.pb(0);
		reverse(all(v));
		rp(i,L(v))
		{
			if (i)
				printf(" ");
			printf("%d",v[i]+1);
		}
		printf("\n");
	}
}