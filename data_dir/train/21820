#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define int long long
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define PI 3.14159265358979323846
const int MOD = 1e9 + 7 ;
const int EPS = 1e-9;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1;}return res%p;}
typedef tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N=101010;

int32_t main(){
      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      #endif
      int n;
      cin>>n;
      string s;
      cin>>s;
      // if(n%2==0)
      // {
      //       string a="";
      //       for(int i=0;i<n;i+=2)
      //       {
      //             if(s[i]!=s[i+1])
      //             {
      //                   a+=s[i];
      //                   a+=s[i+1];
      //             }
      //       }
      //       int ans=n-(int)a.length();
      //       cout<<ans<<"\n";
      //       cout<<a<<"\n";
      // }
      // else{
      //       string a="";
      //       bool f=true;
      //       for(int i=0;i<n;i+=2)
      //       {
      //             if(i+1<n)
      //             {
      //                   if(s[i]==s[i+1]&&f)
      //                   {
      //                         a+=s[i];
      //                         f=false;
      //                   }
      //                   else{
      //                         a+=s[i];
      //                         a+=s[i+1];
      //                   }
      //             }
      //             else{
      //                   a+=s[i];
      //             }
      //       }
      //       string b="";
      //       for(int i=0;i<n-1;i+=2)
      //       {
      //             if(a[i]!=a[i+1])
      //             {
      //                   b+=s[i];
      //                   b+=s[i+1];
      //             }
      //       }
      //       int ans=n-(int)b.length();
      //       cout<<ans<<"\n";
      //       cout<<b;
      // }

      for(int i=0;i<n;)
      {
                  int j=i+1;
                  while(s[j]==s[i]&&j<n){
                        s[j]='*';
                        j++;
                  }
                  if(j==n)
                  {
                        s[i]='*';
                  }
                  i=j+1;
      }
      string a="";
      for(int i=0;i<n;i++)
      {
            if(s[i]!='*') a+=s[i];
      }
      cout<<n-(a.length())<<"\n"<<a;
      // int t;
      // cin>>t;
      // while(t--)
      // {
      //       int n;
      //       cin>>n;
      //       int a[n];
      //       for(int i=0;i<n;i++) cin>>a[i];
      //       sort(a,a+n);
      //       set<int> s;
      //       if(n%2)
      //       {
      //             int x=a[n/2]*a[n/2];
      //             s.insert(x);
      //             for(int i=0;i<n/2;i++)
      //             {
      //                   if(a[i]*a[n-i-1]!=x)
      //                   {
      //                         s.insert(a[i]*a[n-1-i]);
      //                         break;
      //                   }
      //             }
      //       }
      //       else{
      //             for(int i=0;i<n/2;i++)
      //             {
      //                         s.insert(a[i]*a[n-1-i]);
      //                         break;
      //             }
      //       }
      //       if((int)s.size()==1)
      //       {
      //             cout<<(*s.begin())<<"\n";
      //       }
      //       else cout<<"-1\n";
      // }

}  