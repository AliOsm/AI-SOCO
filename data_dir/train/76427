#include<bits/stdc++.h>
using namespace std;

string s;
int dp[5005][5005];

int solve(int l, int r)
{
	if (dp[l][r] != -1)
		return dp[l][r];
	bool p = 1;
	for (int i = l; i <= r; i++) {
		if (s[i] != s[r - (i - l)])
			p = 0;
	}
	if (p == 0 || l == r)
		return dp[l][r] = 1;
	if ((r - l + 1) % 2 == 0) {
		return dp[l][r] = min(2, solve(l, l + (r - l + 1) / 2 - 1));
	}
	else
		return dp[l][r] = min(2, solve(l, l + (r - l + 1) / 2 - 1) + 1);
}
int main()
{
	cin >> s;
	bool ok = 1;
	memset(dp, -1, sizeof dp);
	for (int i = 0; i < s.size() / 2; i++)
		if (s[i] != s[0])
			ok = 0;
	if (ok) {
		cout << "Impossible";
		return  0;
	}
	cout << solve(0, s.size() - 1);
	return 0;
}
