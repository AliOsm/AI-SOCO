#include <bits/stdc++.h>
using namespace std;

const int N = 61;

int g[N][N][N], dp[N][N][N];


int main() {
        ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0);
        memset(dp, 0x3f, sizeof dp);
        int n, m, r; cin >> n >> m >> r;
        for(int i = 1; i <= m; i++) {
            for(int j = 1; j <= n; j++) {
                for(int k = 1; k <= n; k++) {
                    cin >> g[i][j][k];
                }
            }
            for(int j = 1; j <= n; j++) {
                for(int k = 1; k <= n; k++) {
                    for(int l = 1; l <= n; l++) {
                        g[i][k][l] = min(g[i][k][l], g[i][k][j] + g[i][j][l]);
                    }
                }
            }
            for(int j = 1; j <= n; j++) {
                for(int k = 1; k <= n; k++) {
                    dp[0][j][k] = min(dp[0][j][k], g[i][j][k]);
                }
            }
        }

        for(int i = 1; i <= n; i++) {
            for(int j = 1; j <= n; j++) {
                for(int k = 1; k <= n; k++) {
                    for(int l = 1; l <= n; l++) {
                        dp[i][j][k] = min(dp[i][j][k], dp[i - 1][j][l] + dp[0][l][k]);
                    }
                }
            }
        }
        while(r--) {
            int s, t, k; cin >> s >> t >> k;
            k = min(n, k);
            cout << dp[k][s][t] << endl;
        }

}
