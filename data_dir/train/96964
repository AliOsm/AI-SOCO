#pragma comment(linker, "/STACK:134217728")
#define _CRT_SECURE_NO_WARNINGS

#include <cstdio>
#include <iostream>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <string>
#include <numeric>
#include <complex>
#include <functional>
#include <cmath>
#include <time.h>

using namespace std;

typedef long long LL;

const int MOD = (int)1e9 + 7;


int n, k;

int a[100000];
int b[100000];

bool can(int cnt)
{
	int have = k;
	for (int i = 0; i < n; ++i)
	{
		LL need = (LL)a[i] * cnt;
		if (need <= b[i])
			continue;
		if (need - b[i] > have)
			return 0;
		have -= need - b[i];
	}
	return 1;
}

int main()
{
	scanf("%d%d", &n, &k);
	for (int i = 0; i < n; ++i)
		scanf("%d", &a[i]);
	for (int i = 0; i < n; ++i)
		scanf("%d", &b[i]);

	int L = 0, R = (int)2e9 + 42;

	while (R - L > 1)
	{
		int M = ((LL)L + R) / 2;
		if (can(M))
			L = M;
		else
			R = M;
	}

	printf("%d\n", L);

	return 0;
}