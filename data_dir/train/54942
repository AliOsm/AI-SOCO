#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define bit __builtin_popcount
#define all(x) x.begin(),x.end()
#define show(x) cout<<(#x)<<" is "<<(x)<<endl

using namespace std;
using namespace __gnu_pbds;

template<typename T> using indexed_set=tree <T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef vector<vector<int>> matrix;

const ll INF=1e18+123;
const ld EPS=1e-9;
const int inf=1e9+123;
const int MOD=1e9+7;
const int N=1e5+123;
const int M=1e6+123;
const int dx[]={0,0,1,-1};
const int dy[]={1,-1,0,0};

int n,x;

multiset<int>a,b;

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin>>n>>x;
    int t;
    for(int i=1;i<=n;i++){
        cin>>t;
        a.insert(t);
    }
    for(int i=1;i<=n;i++){
        cin>>t;
        b.insert(t);
    }
    int mn=inf,j=-1;
    for(int i: a){
        if(x-i>*b.rbegin())continue;
        int f=i+*b.lower_bound(x-i)-x;
        if(f<mn){
            mn=f;
            j=i;
        }
    }
    assert(j!=-1);
    a.erase(a.find(j));
    b.erase(b.lower_bound(x-j));
    x+=mn;
    int ans2=1;
    for(int i: a){
        if(x-i>*b.rbegin()){
            continue;
        }
        b.erase(b.lower_bound(x-i));
        ans2++;
    }
    cout<<1<<" "<<ans2;
    return 0;
}
