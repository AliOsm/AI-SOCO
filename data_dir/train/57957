#include<bits/stdc++.h> 

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;
typedef long double ld;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef vector<ll> vll;
typedef vector<vll> vvl;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,ll> pll;
const ll MOD = 1e9+7;
const ld PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

int n, color[212345], x, y, ans=1;
vi adj[212345];

void dfs(int v, int par)
{
	if(adj[v].size()==1 and adj[v][0] == par)
		return;
	int c = 1;
	for(int x: adj[v])
	{
		if(x==par)
			continue;
		while(c == color[v] or c == color[par])
			c++;
		color[x] = c;
		ans = max(ans, c);
		c++;
		dfs(x, v);
	}
}

int main()
{
	ssync;
	cin >> n;
	for(int i=1; i<n; i++)
	{
		cin >> x >> y;
		adj[x].pb(y);
		adj[y].pb(x);
	}
	color[1] = 1;
	dfs(1, 0);
	cout << ans << "\n";
	for(int i=1; i<=n; i++)
		cout << color[i] << " ";
	cout << "\n";
	return 0;
}
