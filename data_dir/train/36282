#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define f(i, x, n) for(int i = x; i < (int)(n); ++i)

int const N = 1500;
int x[N + 1], xs[N + 1], pr[N + 1], sf[N + 2], n, s, m, k, y[N + 1], dp[N + 1];
pair<int, int> sg[N];

bool ok(int z){
	f(i, 1, n + 1)y[i] = y[i - 1] + (x[i] <= z);
	f(i, 1, n + 1)dp[i] = -1e9;
	int an = 0;
	f(it, 0, m){
		f(i, 1, n + 1)pr[i] = max(pr[i - 1], dp[i]);
		for (int i = n; i > 0; --i)sf[i] = max(sf[i + 1], dp[i] - y[i]);
		f(i, 0, s){
			int l = sg[i].second, r = sg[i].first;
			dp[r] = max(dp[r], y[r] + max(pr[l - 1] - y[l - 1], sf[l]));
		}
		f(i, 1, n + 1)an = max(an, dp[i]);
	}
	return an >= k;
}

int main(){
	scanf("%d%d%d%d", &n, &s, &m, &k);
	f(i, 1, n + 1)scanf("%d", x + i);
	f(i, 1, n + 1)xs[i] = x[i];
	sort(xs + 1, xs + n + 1);
	f(i, 0, s)scanf("%d%d", &sg[i].second, &sg[i].first);
	sort(sg, sg + s);
	sf[n + 1] = -1e9;
	int l = 1, r = n + 1;
	while (r > l){
		int m = l + r >> 1;
		if (ok(xs[m]))r = m;
		else l = m + 1;
	}
	printf("%d\n", l == n + 1 ? -1 : xs[l]);
}