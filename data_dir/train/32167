#include <bits/stdc++.h>

using namespace std;

#define INF (long) 1e18
#define long long long
#define pll pair<long, long>
#define pb push_back
#define FOR(i, n) \
    for (size_t i = 0; i < (size_t) n; i++)
#define SORT(v, atr) \
    sort(v.begin(), v.end(), \
         [](auto &a, auto &b) { return a.atr < b.atr; })
#define PRINTV(v) \
    if (not v.empty()) { \
        printf("%lld", v[0]); \
        for (long _i = 1; _i < (long) v.size(); _i++) \
            printf(" %lld", v[_i]); \
        printf("\n"); \
    }

template<typename T>
    class Matriz2D : public vector<vector<T>>
{
public:
    size_t n, m;

    Matriz2D() {}

    Matriz2D(size_t n, size_t m, const T &valor)
        : n(n), m(m) {
        this->resize(n);
        for (size_t i = 0; i < n; i++) {
            (*this)[i].resize(m, valor);
        }
    }
};

long read(auto &v, auto &X, long cont, long depth)
{
    static long k = 0;
    static long maxD = 1;
    if (depth + 1 > maxD) {
        maxD = depth + 1;
        X.pb(vector<string>());
    }
    FOR (j, cont) {
        X[depth].pb(v[k].first);
        long i = k;
        long n = v[i].second;
        while (v[i].second--) {
            k++;
            read(v, X, n, depth + 1);
        }
    }
    return maxD;
}

int main()
{
    // ios::sync_with_stdio(false);

    long n, k, a, b;
    cin >> n >> k >> a >> b;

    bool verde = (a >= b);
    string s;
    while (n) {
        long dif;
        if (a > b) {
            if (not verde) {
                if (b == 0) break;
                dif = 1;
                FOR (i, dif) {
                    s.pb('B');
                }   
                b -= dif;
            }
            else {
                dif = min(k, a);
                FOR (i, dif) {
                    s.pb('G');
                }
                a -= dif;
            }
        } else {
            if (verde) {
                if (a == 0) break;
                dif = 1;
                FOR (i, dif) {
                    s.pb('G');
                }   
                a -= dif;
            }
            else {
                dif = min(k, b);
                FOR (i, dif) {
                    s.pb('B');
                }
                b -= dif;
            }
        }
        n -= dif;
        verde = not verde;
    }
    if (n > 0) puts("NO");
    else {
        cout << s << endl;
    }
}