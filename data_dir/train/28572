#include<bits/stdc++.h>

#define SZ(x) ((int(x.size())))

typedef long long ll;
typedef long double ld;

using namespace std;

const int maxn = 1*1000*1000+10;
int n, m, mxr[maxn], mxc[maxn], t, a[maxn], ans[maxn], mx;
vector <int> vec[maxn], b;
vector <pair <int, int> > v;
pair <int, int> p[maxn];
bool mark[maxn];

void dfs (int x)
{
    mark[x] = 1;
    b.push_back (x);
    mx = max (mx, max (mxr[x / m], mxc[x % m]) + 1);
    for (int i = 0; i < SZ(vec[x]); i++)
    {
        if (!mark[vec[x][i]])
            dfs (vec[x][i]);
    }
}

int main()
{
    scanf ("%d %d", &n, &m);
    for (int i = 0; i < n; i++)
    {
        v.clear();
        for (int j = 0; j < m; j++, t++)
        {
            scanf ("%d", &a[t]);
            v.push_back (make_pair (a[t], t));
            p[t] = make_pair (a[t], t);
        }
        sort (v.begin(), v.end());
        for (int j = 1; j < m; j++)
        {
            if (v[j].first == v[j - 1].first)
            {
                vec[v[j].second].push_back (v[j - 1].second);
                vec[v[j - 1].second].push_back (v[j].second);
            }
        }
    }
    for (int i = 0; i < m; i++)
    {
        v.clear();
        t = i;
        for (int j = 0; j < n; j++, t += m)
            v.push_back (make_pair (a[t], t));
        sort (v.begin(), v.end());
        for (int j = 1; j < n; j++)
        {
            if (v[j].first == v[j - 1].first)
            {
                vec[v[j].second].push_back (v[j - 1].second);
                vec[v[j - 1].second].push_back (v[j].second);
            }
        }
    }
    sort (p, p + (n * m));
    for (int i = 0; i < n * m; i++)
    {
        if (!mark[p[i].second])
        {
            mx = 0;
            b.clear();
            dfs (p[i].second);
            for (int j = 0; j < SZ(b); j++)
            {
                ans[b[j]] = mx;
                mxr[b[j] / m] = mxc[b[j] % m] = mx;
            }
        }
    }
    t = 0;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++, t++)
            printf ("%d ", ans[t]);
        printf ("\n");
    }
	return 0;
}
