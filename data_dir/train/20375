#include <bits/stdc++.h>
using namespace std;

#define int long long

const int N = 1e6 + 10;
int a, b, pre, rem10, rem01, ar[2][2];
bool check;

int32_t main() {
	for (int i = 0; i < 2; i++)
		for (int j = 0; j < 2; j++)
			cin >> ar[i][j];
	
	a = (int)sqrt(2 * ar[0][0]) + 1;
	b = (int)sqrt(2 * ar[1][1]) + 1;
	if (!ar[0][1] && !ar[1][0]) {
		if ((ar[0][0] && ar[1][1]))
			return cout << "Impossible", 0;
		
		if (ar[0][0]) {
			if (a * (a - 1) != 2 * ar[0][0])
				return cout << "Impossible", 0;
				
			while (a--)
				cout << 0;
		}
		else if (ar[1][1]) {
			if (b * (b - 1) != 2 * ar[1][1])
				return cout << "Impossible", 0;
				
			while (b--)
				cout << 1;
		}
		else
			cout << 0;
		return 0;
	}
	
	if (a * (a - 1) != 2 * ar[0][0] || b * (b - 1) != 2 * ar[1][1])
		return cout << "Impossible", 0;
	
	rem10 = ar[1][0];
	rem01 = a * b;
	
	if (a * b != ar[0][1] + ar[1][0])
		return cout << "Impossible", 0;
	
	pre = a;
	while (rem10 >= b) {
		rem10 -= b;
		rem01 -= b;
		pre--;
	}
	if (rem10) {
		rem01 -= rem10;
		pre--;
		check = 1;
	}
	
//	cout << "pre : " << pre << endl;
	
	for (int i = 0; i < pre; i++)
		cout << 0;
		
	for (int i = 0; i < rem10; i++)
		cout << 1;
	if (check)
		cout << 0;
	
	for (int i = 0; i < b - rem10; i++)
		cout << 1;
	for (int i = 0; i < a - pre - (int)check; i++)
		cout << 0;
}
