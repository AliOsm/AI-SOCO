#include <bits/stdc++.h>
using namespace std;

typedef long long int64;
int64 n, m, k, x, y, a[105][105];

void solve() {
	int64 mx = -2e18, mn = 2e18;
	for(int i = 1; i <= n; i++) {
		for(int j = 1; j <= m; j++) {
			mn = min(mn, a[i][j]);
			mx = max(mx, a[i][j]);
		}
	}

	printf("%lld %lld %lld\n", mx, mn, a[x][y]);
}

int main() {
	scanf("%lld%lld%lld%lld%lld", &n, &m, &k, &x, &y);

	int64 cnt = k / (n * m);
	int64 r = k % (n * m);

	if(n == 1) {
		for(int i = 1; i <= m; i++)
			a[1][i] = cnt;

		for(int i = 1; i <= m && r > 0; i++) {
			a[1][i]++;
			r--;
		}

		solve();
		return 0;
	}

	if(k < n * m) {
		for(int i = 1; i <= n && k > 0; i++) {
			for(int j = 1; j <= m && k > 0; j++) {
				a[i][j]++;
				k--;
			}
		}

		solve();
		return 0;
	}

	for(int i = 1; i <= n; i++)
		for(int j = 1; j <= m; j++)
			a[i][j]++;

	k -= n * m;

	cnt = k / ((n - 1) * m);
	r = k % ((n - 1) * m);

	//if(cnt > 0) {
		if(cnt % 2 == 0) {
			for(int i = 1; i <= m; i++) {
				a[1][i] += cnt / 2;
				a[n][i] += cnt / 2;
			}
		}

		else {
			for(int i = 1; i <= m; i++) {
				a[1][i] += cnt / 2 + 1;
				a[n][i] += cnt / 2;
			}
		}

		for(int i = 2; i < n; i++)
			for(int j = 1; j <= m; j++)
				a[i][j] += cnt;
	//}

	//printf("%lld\n", cnt);

	if(r == 0) {
		solve();
		return 0;
	}

	if(cnt % 2 == 1) {
		for(int i = 2; i <= n && r > 0; i++) {
			for(int j = 1; j <= m && r > 0; j++) {
				a[i][j]++;
				r--;
			}
		}
	}

	else {
		for(int i = n - 1; i > 0 && r > 0; i--) {
			for(int j = 1; j <= m && r > 0; j++) {
				a[i][j]++;
				r--;
			}
		}
	}

	solve();
	return 0;
}