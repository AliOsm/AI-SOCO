#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#include<ctime>
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define mp make_pair
#define INF 2000000000
#define DESPACITO2 1000000000000000
#define E 998244353
#define PI acos(-1)
#define MOD 1000000007
#define ll long long
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define ii pair<int,int>
#define vii vector<ii>
#define si set<int>
#define msi map<string,int>
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define TRvi(c,it) for(vi::iterator it=(c).begin();it!=(c).end();it++)
#define TRvii(c,it) for(vii::iterator it=(c).begin();it!=(c).end();it++)
#define TRmsi(c,it) for(msi::iterator it=(c).begin();it!=(c).end();it++)
 
using namespace std;

int main()
{
    IOS;
    #ifndef ONLINE_JUDGE
        // for getting input from input.txt
        freopen("input.txt", "r", stdin);
        // for writing output to output.txt
        freopen("output.txt", "w", stdout);
    #endif
    int n;
    cin >> n;
    multiset<ll>l,r;
    REP(i,1,n)
    {
        ll x,y;
        cin >> x >> y;
        l.insert(x);
        r.insert(y);
    }
    int ct=n;
    ll sum=0;
    while(ct)
    {
        ct--;
        auto it1=r.upper_bound((*l.rbegin()));
        auto it2=l.upper_bound((*r.rbegin()));
        if(it1==r.begin())
        {
            sum+=(*r.rbegin());
            r.erase(prev(r.end()));
            it2--;
            l.erase(it2);
        }
        else if(it2==l.begin())
        {
            sum+=(*l.rbegin());
            it1--;
            l.erase(prev(l.end()));
            r.erase(it1);
        }
        else
        {
            it1--;
            it2--;
            if((*it1)>=(*it2))
            {
                sum+=(*l.rbegin());
                r.erase(it1);
                l.erase(prev(l.end()));
            }
            else
            {
                sum+=(*r.rbegin());
                r.erase(prev(r.end()));
                l.erase(it2);
            }
        }
    }
    cout << sum+n;
}