#include <bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ll long long
#define ld long double
#define vi   vector<int>
#define pii pair<int, int>
#define ull unsigned long long
#define sz(v)  ((int)((v).size()))
#define all(v) ((v).begin()),((v).end())
#define MEM(dp,i) memset(dp ,i, sizeof (dp))
#define repit( cont , i  ) for( auto i : cont)
#define forr(c,x,n)   for(ll c=x;c<=(ll)n; ++c )
#define forrr(c,x,n)  for(ll c=x;c>=( ll )n ;--c )
#define db(x) cout << " LOOK " <<(#x) <<" = " <<  x << '\n'
#define ICPC ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define printarr(a , l , r ) forr ( i , l , r )cout << a[i] << " ";cout<<endl;
#define printarr2(a, n , m) forr ( i , 1 , n){forr ( j , 1, m )cout << a[i][j] << " ";cout<<endl;}

//freopen("input.txt", "r", stdin);
//freopen("output.txt", "w", stdout);

ll n , a , b , k ;
vector < int > v;

ll solve (int  l , int r)
{
    ll cnt = upper_bound(all(v) , r) - lower_bound(all(v) , l);
    if ( !cnt ) return a;

    ll ans =  ( r - l + 1 ) * 1LL * b * cnt ;
    if ( r > l )
        {
        int mid = ( l + r ) / 2;
        ll ans1 = (solve(l , mid ) + solve( mid+1 , r ));

        ans = min ( ans , ans1 );
        }
        return ans ;

}
int main()
{
ICPC;
cin >> n >> k >> a >> b ;
forr ( i , 1 , k )
{
    int x;
    cin >> x;
    v.push_back(x);
}
sort ( all(v));
cout  << solve( 1,  1 << n  );
}
