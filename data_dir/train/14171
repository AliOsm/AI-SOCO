#include <bits/stdc++.h>
#include<string.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define Max(x,y,z) max(x,max(y,z))
#define Min(x,y,z) min(x,min(y,z))
#define fr(i,s,e) for(i=s;i<e;i++)
#define rf(i,s,e) for(i=s-1;i>=e;i--)
#define pb push_back
#define eb emblace_back
#define mp make_pair
#define ff first
#define ss second
//#define int   long long
#define ll   long long
#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#define vl vector<long long>
#define inf (1LL<<61)
#define vi vector<int> 
#define vii vector< vector<int> >
#define vll vector< vector<long long> >
#define vpi vector< pair<int,int> >   
#define vpl vector< pair<ll,ll> >   
#define viii vector< vector<vector<int> > >
typedef pair<pair<int, int>,int> P;
#define cd complex<double>
#define PI 4*atan(1)
#define mod %1000000007
#define pi 3.14159265358979323846//20 decimals
#define ld long double
const int N = 100001;
vii G(N);
int lca[N][18];
int t[N];
int level[N];
int tim=0;
vi be;
vi en;
vi im;
vii g;
vi reverse_map;
int ans=0;
int rec(int s)
{
    int cnt=0;
    int lans=0;
    for(auto it:g[s])
    {
        lans+=rec(it);
        if(im[it] && level[reverse_map[s]]==level[reverse_map[it]]-1)
            cnt++;
    }
    if(im[s] && cnt)
    {
        ans=1000000;
        return 1;
    }
    if(im[s])
    {
        ans+=lans;
        return 1;
    }
    if(lans>1)
    {
        ans+=1;
        return 0;
    }
    if(im[s] && lans==0)
        lans=1;
    return lans;
}
void dfs(int s,int par,int lev)
{
    tim++;
    be[s]=tim;
    t[s]=par;
    level[s]=lev;
    for(auto it:G[s])
    {
        if(it!=par)
        {
            dfs(it,s,lev+1);
        }
    }
    en[s]=tim;
}
void init(int n)
{
    for(int i=1;i<=n;i++)
        lca[i][0]=t[i];
    for(int j=1;j<=17;j++)
    {
        for(int i=1;i<=n;i++)
        {
            lca[i][j]=lca[lca[i][j-1]][j-1];
        }
    }
}   
int LCA(int u,int v)
{
    if(level[u]<level[v])
        swap(u,v);
    for(int j=17;j>=0;j--)
    {
        if(level[lca[u][j]]>=level[v])
            u=lca[u][j];
    }
    if(u==v)
        return u;
    for(int j=17;j>=0;j--)
    {
        if(lca[u][j]!=lca[v][j])
        {
            u=lca[u][j];
            v=lca[v][j];
        }
    }
    return t[u];
}

int32_t main()
{
     IOS;
     #ifndef ONLINE_JUDGE
     freopen("int.txt","r",stdin);
     freopen("out.txt","w",stdout);
     #endif
     int n;
     cin>>n;
     for(int i=0;i<n-1;i++)
     {
        int u,v;
        cin>>u>>v;
        G[u].pb(v);
        G[v].pb(u);
     }
     be.resize(n+1);
     en.resize(n+1);
     dfs(1,1,1);
     init(n);
     int q;
     cin>>q;
     while(q--)
     {
        int k;
        cin>>k;
        vpi temp(k);
        set<pair<int,int> > s;
        map<int,int> m;
        for(int i=0;i<k;i++)
        {
            cin>>temp[i].ss;
            temp[i].ff=be[temp[i].ss];
            m[temp[i].ss]=1;
        }
        if(k==1)
        {
            cout<<0<<endl;
            continue;
        }
        sort(temp.begin(),temp.end());
        for(int i=0;i<k-1;i++)
        {
            int h=LCA(temp[i].ss,temp[i+1].ss);
            s.insert(mp(be[h],h));
            s.insert(temp[i]);
            if(i==k-2)
                s.insert(temp[i+1]);
            
        }
        vpi v(s.begin(),s.end());
        int sz=v.size();
        int c=1;
        im.clear();
        im.resize(sz+1,0);
        reverse_map.clear();
        reverse_map.resize(v.size()+1);
        stack<int> st;
        st.push(1);
        reverse_map[1]=v[0].ss;
        if(m[v[0].ss])
            im[1]=1;
        c++;
        g.clear();
        g.resize(sz+1);
        for(int i=1;i<sz;i++)
        {

            while(!st.empty() && en[reverse_map[st.top()]]<be[v[i].ss])
                st.pop();
            if(!st.empty())
            {
                g[st.top()].pb(c);
            }
            st.push(c);
            reverse_map[c]=v[i].ss;
            if(m[v[i].ss])
                im[c]=1;
            c++;
        }
        ans=0;
        rec(1);
        if(ans>n)
            ans=-1;
        cout<<ans<<endl;

     }

     return 0;
}
    
 