#include <bits/stdc++.h>

using namespace std;

#define fr first
#define sc second
#define pb push_back
#define ins insert
#define input freopen("input.txt","r",stdin)
#define output freopen("output.txt","w",stdout)
#define mp make_pair
#define fast_io ios_base::sync_with_stdio(0);
#define y1 yy1
//iterator , unsigned, begin, end, count, continue
// fixed setprecision

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<int> vi;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

string itosm(ll x)
{
    if(x == 0)
        return "0";
    string res = "";
    while(x > 0)
    {
        res += ((x % 10) + '0');
        x /= 10;
    }
    reverse(res.begin(), res.end());
    return res;
}

ll stoim(string str)
{
    ll res = 0;
    int p = 0;
    if(str[0] == '-')
        p++;
    for(int i = p; i < str.length(); i++)
    {
        res *= 10;
        res += (str[i] - '0');
    }
    return res;
}

const ll infll = 1e18 + 3;
const int inf = 1009000999;
const ld eps = 1e-7;
const int maxn = 1e6 + 1146;
const int baseint = 1000200013;
const ll basell = 1e18 + 3;
const ld PI = acos(-1.0);
const ll mod = 1e9 + 9;

int s[maxn];
int c[maxn];
int dp[maxn][3];

void solve()
{
    int n;
    cin >> n;
    for(int i = 0; i < n; i++)
        cin >> s[i];
    for(int i = 0; i < n; i++)
        cin >> c[i];
    vector<int> t;
    for(int i = 0; i < n; i++)
        t.pb(s[i]);
    sort(t.begin(), t.end());
    map<int, int> f;
    for(int i = 0; i < t.size(); i++)
        f[t[i]] = i;
    for(int i = 0; i < n; i++)
        s[i] = f[s[i]];
    int ans = inf;
    for(int i = 0; i <= n; i++)
        for(int j = 0; j < 3; j++)
            dp[i][j] = inf;
    for(int i = 0; i < n; i++)
    {
        for(int j = 0; j < s[i]; j++)
            dp[s[i]][2] = min(dp[s[i]][2], dp[j][1] + c[i]);
        for(int j = 0; j < s[i]; j++)
            dp[s[i]][1] = min(dp[s[i]][1], dp[j][0] + c[i]);
        dp[s[i]][0] = min(dp[s[i]][0], c[i]);
    }
    for(int i = 0; i <= n; i++)
        ans = min(ans, dp[i][2]);
    if(ans == inf)
        ans = -1;
    cout << ans;
}

int main()
{
    srand(time(0));
//    srand(228);
    fast_io;
    cin.tie(0);
    cout.tie(0);
 //   input;
//    output;
//    for(int i = 0; i < 100000; i++)
//        brut();
//    output;
//    freopen("money.in", "r", stdin);
//    freopen("money.out", "w", stdout);
//     int t;
//     cin >> t;
//     fout << t << endl;
//    scanf("%d", &t);
//     int cnt = 1;
//     while(t--){
//        cout << "Case #" << cnt << ": ";
//        printf("Case %d: ", cnt);
//      while(1)
        solve();
//        brut();
//         cout << "\n";
//        puts("");
//        cnt++;
//     }
    return 0;
}
