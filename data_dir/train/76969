// In the name of God.
// You're anything and We're nothing.
#include <bits/stdc++.h>
using namespace std;
const int maxn = 2e5 + 17, lg = 18;
int n, q, sp[lg][maxn], first[maxn], last[maxn], a[maxn];
int get(int l, int r){
	int k = 0;
	while((1 << k + 1) <= r - l)
		k++;
	return min(sp[k][l], sp[k][r - (1 << k)]);
}
int main(){
	ios::sync_with_stdio(0), cin.tie(0);
	cin >> n >> q;
	fill(first, first + q + 1, n);
	fill(last, last + q + 1, -1);
	bool seen0 = 0, seenq = 0;
	for(int i = 0; i < n; i++){
		cin >> a[i];
		seenq |= a[i] == q;
		seen0 |= a[i] == 0;		
	}
	if(!seenq)
		if(!seen0)
			return cout << "NO\n", 0;
		else
			for(int i = 0; i < n; i++)
				if(a[i] == 0){
					a[i] = q;
					break;
				}
	int lst = q;
	for(int i = 0; i < n; i++)
		if(a[i] != 0){
			lst = a[i];
			break;
		}
	for(int i = 0; i < n; i++){
		if(a[i] == 0)
			a[i] = lst;
		else
			lst = a[i];
		sp[0][i] = a[i];
		last[ a[i] ] = max(last[ a[i] ], i);
		first[ a[i] ] = min(first[ a[i] ], i);
	}
	for(int k = 1; k < lg; k++)
		for(int i = 0; i + (1 << k) <= n; i++)
			sp[k][i] = min(sp[k - 1][i], sp[k - 1][i + (1 << k - 1)]);
	bool ok = 1;
	for(int i = 1; i <= q; i++)
		if(first[i] < last[i])
			ok &= get(first[i], last[i]) >= i;
	if(ok){
		cout << "YES\n";
		for(int i = 0; i < n; i++)
			cout << a[i] << ' ';
		cout << '\n';
	}
	else{
		cout << "NO\n";
	}
}
