#include<bits/stdc++.h>
using namespace std;

const int md=1e9+7;

int t;
string s;
int fact[300000];
int rfact[300000];
int n;
vector<int> ans[100001];
bool used[300000];
int pow25[300000];
int pow26[300000];

int bpow(int a,int b)
{
    if(b==0)
        return 1;
    int res=bpow(a,b>>1);
    res=(res*1ll*res)%md;
    if(b&1)
        res=(res*1ll*a)%md;
    return res;
}

int koef(int n,int k)
{
    int res=fact[n];
    res=(res*1ll*rfact[k])%md;
    res=(res*1ll*rfact[n-k])%md;
    return res;
}

void solve(int x)
{
    ans[x].resize(100002);
    ans[x][x]=1;
    for(int i=x+1;i<=100000;i++)
        ans[x][i]=(ans[x][i-1]*26ll+koef(i-1,x-1)*1ll*pow25[i-1-(x-1)])%md;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ///freopen("input.txt","r",stdin);
    fact[0]=1;
    rfact[0]=1;
    pow26[0]=1;
    pow25[0]=1;
    for(int i=1;i<=200000;++i)
    {
        fact[i]=(fact[i-1]*1ll*i)%md;
        rfact[i]=bpow(fact[i],md-2);
        pow26[i]=(pow26[i-1]*26ll)%md;
        pow25[i]=(pow25[i-1]*25ll)%md;
    }
    cin>>t;
    cin>>s;
    while(t --> 0)
    {
        int tt;
        cin>>tt;
        if(tt==2)
        {
            cin>>n;
            if(n<s.size())
            {
                cout<<"0\n";
                continue;
            }else
            {
                if(!used[s.size()])
                {
                    used[s.size()]=1;
                    solve(s.size());
                }
                cout<<ans[s.size()][n]<<"\n";
            }
        }else
            cin>>s;
    }
}
