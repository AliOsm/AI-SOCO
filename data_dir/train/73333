#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define ll long long

ll ones[100];
ll pas[100][100];
int n;

void init()
{
	REP(i, 100)
	{
		pas[i][0] = pas[i][i] = 1ll;
		for(int j = 1; j<i; j++) pas[i][j] = pas[i - 1][j - 1] + pas[i - 1][j];
	}
	
	REP(k, 62)
		REP(i, k/2 + 1) ones[k] += pas[k - i][i]; 
	
}

void solve(ll k)
{
	vector<bool> solution(n);
	
	while(true)
	{
		int l = 1, m, r = 60; 
		while(l != r)
		{
			m = (l + r + 1)/2;
			if(ones[m] <= k) l = m;
			else r = m - 1;
		}
		
		if(ones[l] == k)
		{
			if(l%2 == 0)
				REP(i, l) solution[n - 1 - i] = true;
			else
				REP(i, l) solution[n - 1 - i] = (i != 0);
			break;
		}
		else
		{	
			solution[n - l] = solution[n - l - 1] = true;
			k -= ones[l];
		}
	}
	vector<int> p(n);
	REP(i, n) p[i] = i + 1;
	
	REP(i, n)
		if(solution[n - 1 - i])
		{
			swap(p[n - 1 - i], p[n - 1 - i - 1]);
			solution[n - 1 - i] = solution[n - 1 - i - 1] = false;
		}
	REP(i, n) printf("%d%c", p[i], i == n - 1 ? '\n' : ' ');
}

int main()
{
	ll k;
	scanf("%d %lld", &n, &k);
	init();
	solve(k);	
}
