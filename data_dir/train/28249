#include<bits/stdc++.h>
#include<unordered_set>
#include<unordered_map>
using namespace std;

long long int x, y, p, q;

long long int gcd(long long int a, long long int b){
	if (a > b)swap(a, b);
	while (a){
		swap(a, b);
		a %= b;
	}
	return b;
}
long long int lcm(long long int a, long long int b){
	return a*b / gcd(a, b);
}
long long int cost = 0;
long long int ff = 0;
bool ok(long long int val){
	long long int Y = y + q*val;
	long long int X = (Y / q)*p;
	cost = Y - y;
	return X - x <= Y - y+ff;
}
int main(){
	int t;
	cin >> t;
	while (t--){
		cin >> x >> y >> p >> q;
		if (p == 0){
			if (x == 0){
				puts("0");
			}
			else{
				puts("-1");
			}
			continue;
		}
		if (q == 1){
			if (x == y){
				puts("0");
			}
			else{
				puts("-1");
			}
			continue;
		}
		long long int needy = (x + p - 1LL) / p*q;
		long long int mx = (y+q-1LL)/q*q;
		long long int su = y;
		mx = max(mx,needy);
		su = mx - su;
		y = mx;
		long long int mint = 0;
		long long int maxt = INT_MAX;
		ff = su;
		while (mint + 1LL < maxt){
			long long int mid = (mint + maxt) >> 1LL;
			if (ok(mid)){
				maxt = mid;
			}
			else{
				mint = mid + 1LL;
			}
		}
		if (ok(mint)){

		}
		else{
			ok(maxt);
		}
		long long int V = cost + su;
		printf("%lld\n", V);
		/*long long int mul = max((((x + p - 1LL) / p)*p)/p*q-y,((y + q - 1LL) / q)*q-y);
		long long int need = mul;/* mul*q - y;*/
		/*printf("%lld\n", need);*/
	}
	return 0;
}