#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define read(x) scanf( "%lld" , &x )
#define forq(i , a , b) for (int i = (a); i <= (b); ++i)
#define forr(i , b) forq( i , 0 , b - 1 )
#define carr( n , array ) forr(i , n) read(array[i])
#define coutarr(n , array ) cout << "\n" ; forr (i , n) printf("%lld " , array[i]) ; cout << "\n" ;
#define F first
#define S second
#define IF ->first
#define IS ->second
#define qqmemset(array , val) memset (array , val , sizeof(array))
#define ALLV(vect) vect.begin() , vect.end()
#define sizee(vec) (ll)vec.size()

ll R = 7 + 1e9 , NUMTESTCASE ;
const int NN = 10 + 3e5 ;
const double pi = acos(-1.0) ;
int di [4] = {1 , 0 , -1 , 0} , dj [4] = {0 , 1 , 0 , -1} , DI [8] = {1 , 1 , 0 , -1 , -1 , -1 , 0 , 1} , DJ [8] = {0 , 1 , 1 , 1 , 0 , -1 , -1 , -1} ;
using namespace std;
ll n , l , r , z[3] , dp[NN][3] ;
int main()
{
    cin >> n >> l >> r;
    ll newl = l , newr = r ;
    while (newl % 3 != 1) newl ++ ;
    while (newr % 3) newr -- ;
    forq (i , l , newl - 1) z[i % 3] ++ ;
    forq (i , newr + 1 , r) z[i % 3] ++ ;
    forr (i , 3) z[i] += (newr - newl + 1) / 3 ;
    forr (k , 3) dp[1][k] = z[k] ;
    forq (i , 2 , n) 
        forr (k , 3) 
            forr (j , 3) {
                dp[i][ (j + k) % 3 ] += dp[i - 1][j] * z[k] ;
                dp[i][ (j + k) % 3 ] %= R ;
            }
    cout << dp[n][0] ;
    return 0;
}
