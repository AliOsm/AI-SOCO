#include <bits/stdc++.h>
using namespace std;

const int N = 100100;

int n, u, v, i, vis[N];
vector<int> ans;
set<int> edges[N];

bool check(int u, int v, int p) {
	if (p > 0 && !edges[p].count(v)) return 0;
	int cnt = 0;
	for (int x : edges[v]) cnt += edges[u].count(x);
	return (cnt >= 2);
}

void solve(int u = 1, int p = 0) {
	if (vis[u]++) return;

	ans.push_back(u);

	for (int v : edges[u])
		if (!vis[v] && check(u, v, p))
			return solve(v, u);
}

int main() {
	cin >> n;
	for (i = 0; i < 2 * n; ++i) {
		scanf("%d %d", &u, &v);
		edges[u].insert(v);
		edges[v].insert(u);
	}
	solve();
	if (ans.size() != n) return printf("-1"), 0;
	for (int x : ans) printf("%d ", x);
	return 0;
}