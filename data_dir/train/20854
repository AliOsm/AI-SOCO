#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <iomanip>
#include <cmath>
#include <queue>
#define pb push_back
#define mp make_pair
#define int long long
#pragma GCC optimize("O3")
 const long long mod1=998244353;
    const long long mod2=1000000007;
long long pow(int a,int b) {
    if (b==0 || a==1) return 1;
   
    if (b%2==0) { long long k=pow(a,b/2); return (k*k); }
    else { long long k=pow(a,b/2); return k*k*a; }
}
long long powmod(long long a,long long b,long long mod) {
    if (b==0 || a==1)  {if (mod==1) return 0; else return 1; }
   
    if (b%2==0) { long long k=powmod(a,b/2,mod); return (k*k)%mod; }
    else {long long k=powmod(a,b/2,mod); return ( (k*k) %mod *a)% mod; }
}
long long gcd(long long a, long long b) {
    if (a==0) return b;
    if (b==0) return a;
    if (a>b) return gcd(a%b,b); else return gcd(b%a,a);
}
int prime(int p) { // 1 - простое
    for (int i=2;i*i<=p;i++) {
        if (p%i==0 && i<p) return 0;  
    }
    return 1;
}
long long sqr(long long i) {
    return i*i;
}
using namespace std;

signed main() {
   
     /* --------- */
    
int a,k,l,r;
cin>>a>>k>>l>>r;
int t1[k];
int l1[1000000];
int r1[1000000];
int q[1000000];
int tt1,tt2;
for (int i=0;i<1000000;i++) q[i]=0; 
for (int i=0;i<k;i++) {
    cin>>t1[i]>>tt1>>tt2;
if (t1[i]<1000000) { q[t1[i]]=1;
    l1[t1[i]]=tt1;
    r1[t1[i]]=tt2; } 
} 
for (int i=1;i<=1000000;i++) { 
    if (q[i]==0) { l1[i]=0;
    r1[i]=0; } 
    if (l<r) {
        if ((l<l1[i] || l>r1[i]) && (l+1<l1[i] || l+1>r1[i])) { cout<<"R"; l++; } else cout<<"X"; 
    }
    if (l>r) {
        if ((l<l1[i] || l>r1[i]) && (l-1<l1[i] || l-1>r1[i])) { cout<<"L"; l--; } else cout<<"X"; 
    }
    if (l==r) break; 
}
   /* --------- */
    return 0;
}