//be naame khodaa

#include <bits/stdc++.h>

typedef long long ll;

const ll P = 1e9+9;
const int maxn = 100005;

using namespace std;

vector <int> v[maxn], rv[maxn];
map <ll, int> mp;
bool mark[maxn], can[maxn];
vector <int> l;
int x[maxn], y[maxn], in[maxn];
set <int> s;
int m;

bool Can(int x)
{
	for (int u : v[x])
			if (!mark[u] && in[u] == 1)
				return false;
	return true;
}

ll H(ll X, ll Y)
{
	return X*(m+10) + Y;
}

void modify(int u, bool c)
{
	if (can[u] && !c)
	{
		can[u] = false;
		s.erase(u);
	}
	else if ((!can[u]) && c)
	{
		can[u] = true;
		s.insert(u);
	}
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin >> m;
	for (int i = 0; i < m; i++)
	{
		cin >> x[i] >> y[i];
		mp[H(x[i], y[i])] = i;
	}
	for (int i = 0; i < m; i++)
	{
		if (mp.find(H(x[i], y[i]+1)) != mp.end())
		{
			ll h = H(x[i], y[i]+1);
			int x = mp[h];
			v[i].push_back(x);
			rv[x].push_back(i);
			in[x]++;
		}
		if (mp.find(H(x[i]-1, y[i]+1)) != mp.end())
		{
			ll h = H(x[i]-1, y[i]+1);
			int x = mp[h];
			v[i].push_back(x);
			rv[x].push_back(i);
			in[x]++;
		}
		if (mp.find(H(x[i]+1, y[i]+1)) != mp.end())
		{
			ll h = H(x[i]+1, y[i]+1);
			int x = mp[h];
			v[i].push_back(x);
			rv[x].push_back(i);
			in[x]++;
		}
	}
	for (int i = 0; i < m; i++)
	{
		can[i] = Can(i);
		if (can[i])
			s.insert(i);
	}
	bool f = true;
	for (int i = 0; i < m; i++)
	{
		int x = (f ? (*s.rbegin()) : (*s.begin()));
		f = !f;
		l.push_back(x);
		s.erase(x);
		mark[x] = true;
		for (int u : rv[x])
		{
			if (mark[u]) continue;
			modify(u, Can(u));
		}
		for (int u : v[x])
		{
			if (mark[u]) continue;
			in[u]--;
			if (in[u] == 1)
			{
				for (int w : rv[u])
				{
					if (mark[w]) continue;
					modify(w, false);
				}
			}
		}
	}
	ll ans = 0;
	for (int i = 0; i < l.size(); i++)
		ans = (ans*m + l[i])%P;
	cout << ans << endl;
    return 0;
}
