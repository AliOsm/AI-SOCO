#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll long long
#define pp pair<ll,ll>
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define present(c,x) ((c).find(x) != (c).end())
#define mp make_pair
#define hell 1000000007
#define F first
#define S second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree<pp , null_type , less<pp> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t=1 ;
void solve()
{
    ll n , m ;
    cin >> n >> m ;
    map<ll,ll> mapa , ans ;
    vector<ll> v( n + m + 1 ) , x(n+m+5);
    rep( i , 0 , n + m )
    {
        cin >> v[i+1] ;
        mapa[v[i+1]]=i+1;
    }
    vector<ll> vv ;
    set<ll> d ;
    rep( i , 0 , n + m )
    {
        cin >> x[i+1] ;
        if( x[i+1] == 1 )
            d.insert(v[i+1]);
        else
            vv.pb( v[i+1] ) ;
    }
    d.insert(-1e18);
    d.insert(1e18);
    rep( i , 0 , sz(vv) )
    {
        d.insert(vv[i]);
        auto it1 = d.find(vv[i]) , it2 = d.find(vv[i]) ;
        it1--;
        it2++;
        ll xx = *it1 , y = *it2 ;
        if( abs(vv[i] - xx ) <= abs(vv[i]-y))
            ans[mapa[xx]]++;
        else
            ans[mapa[y]]++;
        d.erase(d.find(vv[i]));
    }
    rep( i , 1 , n + m + 1 )
        if(x[i]==1)cout << ans[i] << " " ;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
