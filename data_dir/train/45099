/*
 * temp.cpp
 *
 *  Created on: 2012-7-18
 *      Author: BSBandme
 */
//#pragma comment(linker, "/STACK:1024000000,1024000000")
#include <iostream>
#include <fstream>
#include <string.h>
#include <cstdio>
#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <cassert>
#include <list>
#include <iomanip>
#include <math.h>
#include <deque>
#include <utility>
#include <map>
#include <set>
#include <bitset>
#include <numeric>
#include <climits>
#include <cctype>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <functional>
#include <sstream>
#include <tr1/unordered_map>
#include <tr1/unordered_set>

using namespace std;
using namespace tr1;

#define mpr make_pair
typedef unsigned int ui;
typedef unsigned long long ull;
typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <double, double> pdd;
typedef vector <int> vi;
typedef vector <ll> vll;
typedef vector <double> vd;
typedef vector <string> vs;
typedef map <string, int> mpsi;
typedef map <double, int> mpdi;
typedef map <int, int> mpii;

const double pi = acos(0.0) * 2.0;
const double eps = 1e-12;
const int step[8][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}, {1, 1}, {1, -1}, {-1, 1}, {-1, -1}};

template <class T> inline T abs1(T a) {return a < 0 ? -a : a;}

template <class T> inline T max1(T a, T b) { return a > b ? a : b; }
template <class T> inline T max1(T a, T b, T c) { return max1(max1(a, b), c); }
template <class T> inline T max1(T a, T b, T c, T d) { return max1(max1(a, b, c), d); }
template <class T> inline T max1(T a, T b, T c, T d, T e) { return max1(max1(a, b, c, d), e); }
template <class T> inline T min1(T a, T b) { return a < b ? a : b; }
template <class T> inline T min1(T a, T b, T c) { return min1(min1(a, b), c); }
template <class T> inline T min1(T a, T b, T c, T d) { return min1(min1(a, b, c), d); }
template <class T> inline T min1(T a, T b, T c, T d, T e) { return min1(min1(a, b, c, d), e); }

inline int jud(double a, double b){
	if(abs(a) < eps && abs(b) < eps) return 0;
	else if(abs1(a - b) / abs1(a) < eps) return 0;
	if(a < b) return -1;
	return 1;
}
template <typename t> inline int jud(t a, t b){
	if(a < b) return -1;
	if(a == b) return 0;
	return 1;
}

// f_lb == 1代表返回相同的一串的左边界，f_small == 1代表返回如果没有寻找的值返回小的数
template <typename it, typename t1>
inline int find(t1 val, it a, int na, bool f_small = 1, bool f_lb = 1){
	int be = 0, en = na - 1;
	if(*a <= *(a + na - 1)){
		if(f_lb == 0) while(be < en){
			int mid = (be + en + 1) / 2;
			if(jud(*(a + mid), val) != 1) be = mid;
			else en = mid - 1;
		}else while(be < en){
			int mid = (be + en) / 2;
			if(jud(*(a + mid), val) != -1) en = mid;
			else be = mid + 1;
		}
		if(f_small && jud(*(a + be), val) == 1) be--;
		if(!f_small && jud(*(a + be), val) == -1) be++;
	} else {
		if(f_lb) while(be < en){
			int mid = (be + en + 1) / 2;
			if(jud(*(a + mid), val) != -1) be = mid;
			else en = mid - 1;
		}else while(be < en){
			int mid = (be + en) / 2;
			if(jud(*(a + mid), val) != 1) en = mid;
			else be = mid + 1;
		}
		if(!f_small && jud(*(a + be), val) == -1) be--;
		if(f_small && jud(*(a + be), val) == 1) be++;
	}
	return be;
}

template <class T> inline T lowb(T num) {return num & (-num); }
inline int bitnum(ui nValue) { return __builtin_popcount(nValue); }
inline int bitnum(int nValue) { return __builtin_popcount(nValue); }
inline int bitnum(ull nValue) { return __builtin_popcount(nValue) + __builtin_popcount(nValue >> 32); }
inline int bitnum(ll nValue) { return __builtin_popcount(nValue) + __builtin_popcount(nValue >> 32); }
inline int bitmaxl(ui a) { if(a == 0) return 0; return 32 - __builtin_clz(a); }
inline int bitmaxl(int a) { if(a == 0) return 0; return 32 - __builtin_clz(a); }
inline int bitmaxl(ull a) { int temp = a >> 32; if(temp) return 32 - __builtin_clz(temp) + 32; return bitmaxl(int(a)); }
inline int bitmaxl(ll a) { int temp = a >> 32; if(temp) return 32 - __builtin_clz(temp) + 32; return bitmaxl(int(a)); }

long long pow(long long n, long long m, long long mod = 0){
	if(m < 0) return 0;
	long long ans = 1;
	long long k = n;
	while(m){
		if(m & 1) {
			ans *= k;
			if(mod) ans %= mod;
		}
		k *= k;
		if(mod) k %= mod;
		m >>= 1;
	}
	return ans;
}

#define  MOD 1000000007
template <class t1, class t2>
inline void add(t1 &a, t2 b, int mod = -1) {
	if(mod == -1) mod = MOD;
	a += b;
	while(a >= mod) a -= mod;
	while(a < 0) a += mod;
}
template <class t>
void output1(t arr) {
	for(int i = 0; i < (int)arr.size(); i++)
		cerr << arr[i] << ' ';
	cerr << endl;
}
template <class t>
void output2(t arr) {
	for(int i = 0; i < (int)arr.size(); i++)
		output1(arr[i]);
}


//#define debug
//.........................mi.......feng......xian.......xia.......jin.......zhi.......hack...............................................

const int maxn = 10010;
int arr[maxn];
int arr1[maxn];
int ans[maxn * 100][2], lans, ans1[maxn * 100][2], lans1;
int n;

int gauss(int *rarr, int n, int rans[][2], int &lrans) {
	int have = 0;
	for(int i = 30; i >= 0; i--) {
		int no = have;
		for(int j = have; j < n; j++) if(rarr[j] & (1 << i))
			no = j;
		if((rarr[no] & (1 << i)) == 0) continue;
		swap(rarr[have], rarr[no]);
		if(no != have) {
			rans[lrans][0] = have; rans[lrans++][1] = no;
			rans[lrans][0] = no; rans[lrans++][1] = have;
			rans[lrans][0] = have; rans[lrans++][1] = no;
		}
		for(int j = 0; j < n; j++) if(j != have && (rarr[j] & (1 << i))) {
			rarr[j] ^= rarr[have];
			rans[lrans][0] = j; rans[lrans++][1] = have;
		}
		have++;
	}
	return have;
}
int main(){
	ios_base::sync_with_stdio(0);
	#ifdef debug //......................................................................................................
	freopen("input.txt", "r", stdin);
	int __size__ = 256 << 20; // 256MB
	char *__p__ = (char*)malloc(__size__) + __size__;
	__asm__("movl %0, %%esp\n" :: "r"(__p__));
	#endif //...........................................................................................................

	scanf("%d", &n);
	for(int i = 0; i < n; i++) scanf("%d", arr + i);
	for(int j = 0; j < n; j++) scanf("%d", arr1 + j);
	int have1 = gauss(arr, n, ans, lans);
	int have2 = gauss(arr1, n, ans1, lans1);
	if(have1 < have2) {
		puts("-1");
		return 0;
	}
	bool flag = 1;
	for(int i = 0; i < have2; i++) {
		bool rflag = 0;
		for(int j = 0; j < have1; j++) if(bitmaxl(arr[j]) == bitmaxl(arr1[i])) {
			rflag = 1;
			break;
		}
		if(rflag == 0) {
			flag = 0;
			break;
		}
	}
	if(flag == 0) {
		puts("-1");
		return 0;
	}
	for(int i = 0; i < have1; i++) {
		bool rflag = 0;
		for(int j = 0; j < have2; j++) if(bitmaxl(arr1[j]) == bitmaxl(arr[i])) {
			rflag = 1;
			break;
		}
		if(rflag == 0) {
			for(int j = 0; j < have2; j++) if(arr1[j] & (1 << (bitmaxl(arr[i]) - 1))) {
				for(int k = 0; k < i; k++) if(bitmaxl(arr[k]) == bitmaxl(arr1[j])) {
					arr[k] ^= arr[i];
					ans[lans][0] = k; ans[lans++][1] = i;
				}
			}
			arr[i] ^= arr[i];
			ans[lans][0] = i; ans[lans++][1] = i;
		}
	}
	for(int i = 0; i < have2; i++) if(arr[i] == 0){
		for(int j = i + 1; j < have1; j++) if(arr[j] != 0) {
			arr[i] ^= arr[j];
			ans[lans][0] = i; ans[lans++][1] = j;
			arr[j] ^= arr[j];
			ans[lans][0] = j; ans[lans++][1] = j;
			break;
		}
	}
	for(int i = 0; i < have2; i++) if(arr[i] != arr1[i]) {
		puts("-1");
		return 0;
	}
	printf("%d\n", lans + lans1);
	for(int i = 0; i < lans; i++) printf("%d %d\n", ans[i][0] + 1, ans[i][1] + 1);
	for(int i = lans1 - 1; i >= 0; i--) printf("%d %d\n", ans1[i][0] + 1, ans1[i][1] + 1);

    return 0;
}
