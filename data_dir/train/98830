#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define y1 buvkbfk
using namespace std;
const ll xx[] = {-1, 1, 0, 0},
         yy[] = {0, 0, -1, 1};
ll n, m, qq, p, a[255][255], ans[255][255], us[255][255], c['{'], vx, vy, x, y, z;
char ch;

queue < pair < pair < int , int > , int > > q;

int main(){
    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    cin >>n>>m>>qq>>p;
    c['A'] = qq;
    for (ch = 'B'; ch <= 'Z'; ++ch){
        c[ch] = c[ch - 1] + qq;
    }
    for (int i = 1; i <= n; ++i){
        for (int j = 1; j <= m; ++j){
            cin >>ch;
            if (ch == '.')continue;
            if (ch == '*'){a[i][j] = -1;continue;}
            a[i][j] = c[ch];
        }
    }
    int t = 0;
    for (int i = 1; i <= n; ++i){
        for (int j = 1; j <= m; ++j){
            t++;
            if (a[i][j] <= 0)continue;
            q.push(mp(mp(i, j), a[i][j]));
            while (q.size() > 0){
                x = q.front().fi.fi;
                y = q.front().fi.se;
                z = q.front().se;
                //cout <<x<<" "<<y<<" "<<z<<endl;
                q.pop();
                us[x][y] = t;
                if (ans[x][y] <= p)ans[x][y] += z;
                z /= 2;
                if (z == 0)continue;
                for (int l = 0; l < 4; ++l){
                    vx = x + xx[l];
                    vy = y + yy[l];
                    if (vx < 1 || vx > n || vy < 1 || vy > m)continue;
                    if (a[vx][vy] != -1 && us[vx][vy] != t){us[vx][vy] = t;q.push(mp(mp(vx, vy), z));}
                }
            }
        }
    }
    ll ss = 0;
    for (int i = 1; i <= n; ++i){
        for (int j = 1; j <= m; ++j){
            //cout <<ans[i][j]<<" ";
            ss += ans[i][j] > p;
        }
        //cout <<endl;
    }
    cout <<ss;
}

