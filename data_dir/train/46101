#include <stdio.h>
#include <iostream>
#include <vector>
#include <assert.h>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <stack>
#include <string>
#include <sstream>
#include <memory.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
using namespace std;
typedef long long ll;
const int N = 100;
int R, C, v[N][N], row[N], col[N];
int check(int r0) {
	for (int i = 0; i < C; ++i) {
		if (v[0][i] - r0 < 0)
			return 1e9;
		col[i] = v[0][i] - r0;
	}
	for (int i = 0; i < R; ++i) {
		if (v[i][0] - col[0] < 0)
			return 1e9;
		row[i] = v[i][0] - col[0];
	}
	for (int i = 0; i < R; ++i)
		for (int j = 0; j < C; ++j)
			if (row[i] + col[j] != v[i][j])
				return 1e9;
	int sum = 0;
	for (int i = 0; i < R; ++i)
		sum += row[i];
	for (int i = 0; i < C; ++i)
		sum += col[i];
	return sum;
}
int main()
{
	scanf("%d%d", &R, &C);
	for (int i = 0; i < R; ++i)
		for (int j = 0; j < C; ++j)
			scanf("%d", &v[i][j]);
	int best = 1e8, at = -1;
	for (int i = 0; i <= 500; ++i) {
		int ret = check(i);
		if (ret < best) {
			best = ret;
			at = i;
		}
	}
	if (at == -1) {
		puts("-1");
		return 0;
	}
	check(at);
	int total = 0;
	for (int i = 0; i < R; ++i)
		total += row[i];
	for (int i = 0; i < C; ++i)
		total += col[i];
	printf("%d\n", total);
	for (int i = 0; i < R; ++i)
		while (row[i]--)
			printf("row %d\n", i + 1);
	for (int i = 0; i < C; ++i)
		while (col[i]--)
			printf("col %d\n", i + 1);
	return 0;
}