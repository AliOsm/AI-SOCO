#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define ull unsigned ll
#define mp make_pair
#define pb push_back
#define F first
#define S second

using namespace std;

const int MIN = 1e3 + 2;
const int MXN = 1e6 + 3;
const int INF = 1e9 + 7;
const ll LINF = 1e18 + 15;
const double EPS = 1e-9;

int a, b, c, d;
int z, o;
char A[MXN];

inline int sum (int x){
	if (x < 0)
		return 0;
	return x * 1LL * (x + 1) / 2;
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> a >> b >> c >> d;
	for (int i = 1; i <= 50000; i++){
		if (sum (i - 1) == a){
			z = i;
			break;	
		}
		if (sum (i - 1) > a){
			cout << "Impossible";
			return 0;
		}
	}
	for (int i = 1; i <= 50000; i++){
		if (sum (i - 1) == d){
			o = i;
			break;	
		}
		if (sum (i - 1) > d){
			cout << "Impossible";
			return 0;
		}
	}
	//cout << z << " " << o << " ";
	int all = z + o;
	int zz = z + o;
	int ansz = 0, anso = 0;
	//cout << all << " ";
	all = sum (all - 1);
	//cout << all << " ";
	if (a && d){
		if (all - a - d != b + c){
			cout << "Impossible";
			return 0;
		}
		for (int i = 1; i <= zz; i++){
			if (ansz + o <= b){
				cout << 0;
				z--;
				ansz += o;
			}
			else {
				cout << 1;
				o--;
			}
		}
		return 0;
	}
	else {
		int Z = 0;
		int S = 0;
		int ANSZ = ansz, ZZ = z, O = o;
		if (a == 0)
			Z++;
		if (d == 0)
			Z++;
		//cout << ansz << " " << o << " ";
		for (int j = max (1, zz - Z); j <= zz; j++){
			for (int k = max (0, ZZ - 1); k <= ZZ; k++){
			   for (int l = max (0, O - 1); l <= O; l++){
			S = 0, ansz = ANSZ, z = k, o = l;
			for (int i = 1; i <= j; i++){
				if (ansz + o <= b){
					S++;
					A[S] = '0';
					z--;
					ansz += o;
				}
				else {
					S++;
					A[S] = '1';
					o--;
				}
			}
			/*cout << j << " ";
			cout << S << "\n";
			for (int i = 1; i <= S; i++){
			   cout << A[i];
			   if (i == S)
			      cout << "\n";
			}*/
			int prefz[MXN], prefo[MXN];
			prefz[S] = 0, prefo[S] = 0;
			for (int i = S - 1; i >= 1; i--){
				if (A[i + 1] == '0'){
					prefz[i] = prefz[i + 1] + 1;
					prefo[i] = prefo[i + 1];
				}
				else {
					prefo[i] = prefo[i + 1] + 1;
					prefz[i] = prefz[i + 1];
				}
			}
			int resz = 0, reso = 0, anszet = 0, ansou = 0;
			for (int i = 1; i <= S; i++){
			   //cout << prefo[i] << " " << prefz[i] << "\n";
				if (A[i] == '0'){
					resz += prefo[i]; 
						anszet += prefz[i];
				}
				else {
					reso += prefz[i];
						ansou += prefo[i];
				}
			}
			if (resz == b && reso == c && anszet == a && ansou == d){
				for (int i = 1; i <= S; i++){
					cout << A[i];
				}
				return 0;
			}
			}      
		}
	}
	   
      cout << "Impossible";
	}
	
	return 0;
}