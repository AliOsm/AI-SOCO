#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <string>

using namespace std;

int main() {
  int n, m;
  cin >> n >> m;

  vector<vector<int>> dp(n, vector<int>(26));

  string s;
  cin >> s;


  vector<int> deg(n);
  vector<vector<int>> g(n);
  vector<vector<int>> rg(n);
  for (int i = 0; i < m; i++) {
    int u, v;
    scanf("%d %d", &u, &v);
    u--;
    v--;
    g[u].push_back(v);
    rg[v].push_back(u);
    deg[u]++;
  }

  queue<int> q;
  for (int i = 0; i < n; i++) {
    if (deg[i] == 0) {
      q.push(i);
    }
  }

  int cnt = 0;
  while (!q.empty()) {
    cnt++;
    int u = q.front(); q.pop();
    dp[u][s[u] - 'a'] = 1;
    for (int v : g[u]) {
      for (int i = 0; i < 26; i++) {
        dp[u][i] = max(dp[u][i], dp[v][i] + (i == s[u] - 'a'));
      }
    }
    for (int v : rg[u]) {
      if (--deg[v] == 0) {
        q.push(v);
      }
    }
  }

  if (cnt < n) {
    cout << -1 << endl;
  } else {
    int mx = 0;
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < 26; j++) {
        mx = max(mx, dp[i][j]);
      }
    }
    cout << mx << endl;
  }
}
