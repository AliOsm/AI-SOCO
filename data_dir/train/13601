#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>

using namespace std;

int k[100500];
const int INF=1e9;
vector<int> a;

vector<int> d;
vector<int> d1;

int n,t[400500];

int sum (int v, int tl, int tr, int l, int r)
{
    if (l > r)
        return 0;
    if (l == tl && r == tr)
        return t[v];
    int tm = (tl + tr) / 2;
    return max( sum(v*2, tl, tm, l, min(r,tm))
                , sum (v*2+1, tm+1, tr, max(l,tm+1), r));
}

void update (int v, int tl, int tr, int pos, int new_val)
{
    if (tl == tr)
        t[v] = new_val;
    else
    {
        int tm = (tl + tr) / 2;
        if (pos <= tm)
            update (v*2, tl, tm, pos, new_val);
        else
            update (v*2+1, tm+1, tr, pos, new_val);
        t[v] =max( t[v*2], t[v*2+1]);
    }
}

void find_dec()
{
    d.resize(a.size());
    d[0]=1;
    update(1,0,n,a[0],d[0]);
    for (int i=1; i<a.size(); i++)
    {
        int j=sum(1,0,n,0,a[i]);
        d[i]=j+1;
        update(1,0,n,a[i],d[i]);
    }

}

void find_inc()
{
    for (int i=0;i<=400050;i++)
    {
        t[i]=0;
    }
    reverse(a.begin(),a.end());
    d1.resize(a.size());
    d1[0]=1;
    update(1,0,n,a[0],d1[0]);
    for (int i=1; i<a.size(); i++)
    {
        int j=sum(1,0,n,0,a[i]);
        d1[i]=j+1;
        update(1,0,n,a[i],d1[i]);
    }
    reverse(d1.begin(),d1.end());

}

int main()
{
    //freopen("a","r",stdin);
    cin >> n;
    int m;
    cin >> m;
    for(int i=0; i<n; i++)
    {
        int l,r;
        cin >> l >> r;
        ++k[l];
        --k[r+1];
    }
    for (int i=1; i<=m; i++)
    {
        k[i]+=k[i-1];
        //cout << k[i] << ' ';
        a.push_back(k[i]);
    }
    //cout << endl;
    find_dec();
    find_inc();
    int res=0;
    for (int i=0;i<a.size();i++)
    {
        res=max(res,d[i]+d1[i]-1);
    }
    cout << res << endl;
    return 0;
}
