#pragma GCC optimize(2)
#pragma GCC optimize(3)
#pragma GCC optimize(4)
#include<bits/stdc++.h>
using namespace std;
#define y1 y11
#define fi first
#define se second
#define pi acos(-1.0)
#define LL long long
//#define mp make_pair
#define pb push_back
#define ls rt<<1, l, m
#define rs rt<<1|1, m+1, r
#define ULL unsigned LL
#define pll pair<LL, LL>
#define pli pair<LL, int>
#define pii pair<int, int>
#define piii pair<pii, int>
#define pdd pair<double, double>
#define mem(a, b) memset(a, b, sizeof(a))
#define debug(x) cerr << #x << " = " << x << "\n";
#define fio ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
//head

const int N = 4e5 + 10;
vector<int> vc;
int bit[N];
piii a[N/2];
int ans[N/2];
void add(int x) {
    while(x < N) bit[x]++, x += x&-x;
}
int sum(int x) {
    int res = 0;
    while(x) res += bit[x], x -= x&-x;
    return res;
}
int main() {
    int n;
    scanf("%d", &n);
    for (int i = 1; i <= n; ++i) {
        scanf("%d %d", &a[i].fi.fi, &a[i].fi.se);
        vc.pb(a[i].fi.fi);
        vc.pb(a[i].fi.se);
    }
    sort(vc.begin(), vc.end());
    vc.erase(unique(vc.begin(), vc.end()), vc.end());
    for (int i = 1; i <= n; ++i) {
        int l = lower_bound(vc.begin(), vc.end(), a[i].fi.fi) - vc.begin() + 1;
        int r = lower_bound(vc.begin(), vc.end(), a[i].fi.se) - vc.begin() + 1;
        a[i].fi.fi = l;
        a[i].fi.se = r;
        a[i].se = i;
    }
    sort(a+1, a+n+1);
    for (int i = n; i >= 1; --i) {
        int l = a[i].fi.fi;
        int r = a[i].fi.se;
        add(r);
        ans[a[i].se] = sum(r-1);
    }
    for (int i = 1; i <= n; ++i) printf("%d\n", ans[i]);
    return 0;
}
