#include <bits/stdc++.h>
using namespace std;
const int N = 51;
int col[N][N],lol,dx[] = {-1,0},dy[] = {0,-1},in[N*N],out[N*N];
bool vis[N*N];
vector<vector<int>>v;
bool f;
void dfs(int u,int p){
	vis[u] = 1;
	in[u] = out[u] = lol++;
	for(auto i : v[u]){
		if(i == p)continue;
		if(!vis[i]){
			dfs(i,u);
			if(out[i] >= in[u]){
				if(!u)f = 1;
				else{puts("1");exit(0);}
			}
			out[u] = min(out[u],out[i]);
		}
		out[u] = min(out[u],in[i]);
	}
}
int main(){
	//freopen("readin.txt","r",stdin);
	int n,m,freq = 0;
	string s;
	scanf("%d%d",&n,&m);
	for(int i = 0;i < n;i++){
		cin >> s;
		for(int j = 0;j < m;j++)col[i][j] = s[j] == '#' ? lol++ : -1,freq+=s[j] == '#';
	}
	if(freq < 3)return puts("-1"),0;
	v.resize(lol);
	for(int i = 0;i < n;i++)
		for(int j = 0;j < m;j++){
			if(!(col[i][j] + 1))continue;
			for(int k = 0;k < 2;k++){
				int nx = i + dx[k],ny = j + dy[k];
				if(nx < 0 || ny < 0 || !(col[nx][ny] + 1))continue;
				v[col[i][j]].push_back(col[nx][ny]);
				v[col[nx][ny]].push_back(col[i][j]);
			}
		}
	dfs(0,-1);
	if(f){
		memset(vis,0,sizeof vis);
		vis[0] = 1;
		dfs(1,0);
		freq = 0;
		for(int i = 0;i < v.size();i++)freq+=vis[i];
		if(freq < v.size())return puts("1"),0;
	}
	puts("2");
}
