#include <bits/stdc++.h>
using namespace std;
#define ll long long
// from geeksforgeeks
string findSum(string str1, string str2) 
{ 
    if (str1.length() > str2.length())     swap(str1, str2); 
    string str = ""; 
    int n1 = str1.length(), n2 = str2.length(); 
    reverse(str1.begin(), str1.end()); 
    reverse(str2.begin(), str2.end()); 
    int carry = 0; 
    for (int i=0; i<n1; i++) 
    { 
        int sum = ((str1[i]-'0')+(str2[i]-'0')+carry); 
        str.push_back(sum%10 + '0'); 
        carry = sum/10; 
    } 
    for (int i=n1; i<n2; i++) 
    { 
        int sum = ((str2[i]-'0')+carry); 
        str.push_back(sum%10 + '0'); 
        carry = sum/10; 
    } 
    if (carry) 
        str.push_back(carry+'0'); 
    reverse(str.begin(), str.end()); 
    return str; 
} 
int main() 
{
        ll n;
        cin>>n;
        string s;
        cin>>s;
        vector<string> ans; 
            ll temp1 = 0;
            ll temp2 = n/2-1;
            ll temp3 = n-1;
            string s1,s2,g;
            while(s[temp2+1]=='0')  temp2--;
            s1 = s.substr(temp1,temp2+1);
            s2 = s.substr(temp2+1);
            if(s1.size()>0 && s2.size()>0)
            {
            g = findSum(s1,s2);
            ans.push_back(g);  }
            temp2 = n/2;
            while(s[temp2+1]=='0')  temp2++;
            s1 = s.substr(temp1,temp2+1);
            s2 = s.substr(temp2+1);
            if(s1.size()>0 && s2.size()>0)
            {
            g = findSum(s1,s2);
            ans.push_back(g);  }
            if(ans[0].size()<ans[1].size())  {cout<<ans[0];}
            else if(ans[0].size()>ans[1].size())  {cout<<ans[1];}
            else { sort(ans.begin(),ans.end()); cout<<ans[0];}
            return 0;
}