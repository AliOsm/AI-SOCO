#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define int long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;
typedef  tree< int , null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

const int N = 5000002;
int sz = 1;
int l[N], r[N], s[N], used[500000];
int ans;
void add(int x, int v = 1, int h = 30){
    s[v]++;
    if (h == -1) return;
    if ((x >> h) & 1){
        if (r[v] == 0){
            r[v] = ++sz;
        }
        add(x, r[v], h - 1);
    } else{
        if (l[v] == 0){
            l[v] = ++sz;
        }
        add(x, l[v], h - 1);
    }
}
void solve(int x, int v = 1, int h = 30){
    if (h == -1){
        cout << ans << endl;
        return;
    }
    int k = (1 << h);
    if ((x >> h) & 1){
        if (s[r[v]] == k){
            ans += (1 << h);
            solve(x, l[v], h - 1);
        } else{
            solve(x, r[v], h - 1);
        }
    } else{
        if (s[l[v]] == k){
            ans += (1 << h);
            solve(x, r[v], h - 1);
        } else{
            solve(x, l[v], h - 1);
        }
    }
}
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt",  "r", stdin);
    //freopen("output.txt", "w", stdout);
    int n, m;
    cin >> n >> m;
    for (int i = 1; i <= n; i++){
        int x;
        cin >> x;
        if (used[x]) continue;
        used[x] = 1;
        add(x);
    }
    int q = 0;
    for (int i = 1; i <= m; i++){
        int x;
        cin >> x;
        x ^= q;
        q = x;
        ans = 0;
        solve(x);
    }
}
