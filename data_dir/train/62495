# include <bits/stdc++.h>
using namespace std;
const int N = 3e5 + 10, M = 9, INF = 1e9 + 10;
int a[N][M];
int main(){
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
	int n, m; 
	cin >> n >> m;
	for(int i = 1; i <= n; i ++){
		for(int j = 0; j < m; j ++){
			cin >> a[i][j];
		}
	}
	int l = 0, r = INF, res = 0;
	while(l <= r){
		int mid = (l + r) >> 1;
		vector < bool > ok(2 << m, false);
		bool k = false; 
		for(int i = 1; i <= n; i ++){
			int x = 0;
			for(int j = 0; j < m; j ++){
				if(a[i][j] >= mid)x |= (1 << j);  
			}
			ok[x] = 1;
		}
		for(int i = 0; i < (1 << m); i ++){
			for(int j = 0; j < (1 << m); j ++){
				if(ok[i] && ok[j] && __builtin_popcount(i | j) == m){
					k = true;
					break;
				}
			}
		}
		if(k == true){
			res = mid;
			l = mid + 1;
		}else{
			r = mid - 1; 
		}
	}
	vector < int > id(2 << m, 0);
	for(int i = 1; i <= n; i ++){
		int x = 0;
		for(int j = 0; j < m; j ++){
			if(a[i][j] >= res)x |= (1 << j);
		}
		id[x] = i;
	}
	for(int i = 0; i < (1 << m); i ++){
		for(int j = 0; j < (1 << m); j ++){
			if(id[i] && id[j] && __builtin_popcount(i | j) == m){
				cout << id[i] << ' ' << id[j] << '\n';
				return 0; 
			}
		}
	}
}