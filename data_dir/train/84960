#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

typedef long long int ll;

vector<pair<ll,ll> > v;
ll sol[1000000];

int main()
{
  ios::sync_with_stdio(false);
  int n;
  cin>>n;
  for (int i=0;i<n;i++) {
    ll l,r;
    cin>>l>>r;
    v.push_back(pair<ll,ll> (l,1));
    v.push_back(pair<ll,ll> (r,-1));
  }
  sort(v.begin(),v.end());
  int act=0;
  for (int i=0;i<int(v.size());i++) {
    if (i==0 or v[i-1].first!=v[i].first) {
      int j=i;
      while (j+1<int(v.size()) and v[j+1].first==v[i].first) j++;
      for (int k=i;k<=j;k++)
	if (v[k].second==1)
	  act++;
      sol[act]++;
      if (j==int(v.size())-1) break;
      ll l=v[i].first;
      ll r=v[j+1].first;
      for (int k=i;k<=j;k++)
	if (v[k].second==-1)
	  act--;
      if (r>l)
	sol[act]+=r-1-l;
    }
  }
  for (int i=1;i<=n;i++) {
    if (i>1) cout<<" ";
    cout<<sol[i];
  }
  cout<<endl;
}
