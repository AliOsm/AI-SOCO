#include<iostream>
#include<math.h>
#include <bits/stdc++.h>
#include<string.h>
#include<algorithm>

using namespace std;

#define ll long long
#define D double
#define ff first
#define ss second
#define FOR(a,n) for(i=0;i<n;i++){	cin>>a[i];}



 

vector<vector<ll> > v(100001);
bool ch[100001];

map<pair<ll,ll>,ll> fr;

 bool isPrime(int n)
	{
	    
	    if (n <= 1)  return false;
	    if (n <= 3)  return true;
	    
	    if (n%2 == 0 || n%3 == 0) 
	    	return false;
	 
	    for (int i=5; i*i<=n; i=i+6)
	    {
	        if (n%i == 0 || n%(i+2) == 0)
	           return false;
	    }
	    
	    return true;
	}

void swap(char a,char b)
{
	char t;
	t=a;
	a=b;
	b=t;
}

ll fact(ll n)
{
	if(n<=1)
	return 1;
	else
	return n*fact(n-1);
	
}
ll ans=0;
ll vc[100001]={0};
ll le[100001]={0};
void DFS(ll n,ll color,ll nn)
{
	 bool ch[nn+1];
	 for(ll i=0;i<nn+1;i++)
	 ch[i]=false;
	stack<ll> s;
	ch[n]=true;
	s.push(n);
	vc[n]=color;
	while(s.size()>0)
	{
		ll x=s.top();
		s.pop();
		for(ll i=0;i<v[x].size();i++)
		{
			if(ch[v[x][i]]==false && le[v[x][i]]>=le[n])
			{	
				s.push(v[x][i]);
				ch[v[x][i]]=true;
				vc[v[x][i]]=color;
			}
		}
	}
/*	for(ll i=0;i<nn;i++)
	{
		cout<<vc[i+1]<<" ";
	}
	cout<<endl;*/


}

	queue<int> q;
void BFS(ll n)
{
	ll i;
	q.push(n);
	le[n]=0;
	ch[n]=true;
	
	while(q.size()>0)
	{
		ll x=q.front();
		q.pop();
		
		for(i=0;i<v[x].size();i++)
		{
			if(ch[v[x][i]]==false)
			{
				q.push(v[x][i]);
				ch[v[x][i]]=true;
				le[v[x][i]]=le[x]+1;
				
			}
		}
	}
	
	
}

int main()
{
ll n,h,a,b,q;
	cin>>n>>h>>a>>b>>q;
	
	while(q--)
	{
		ll ta,fa,tb,fb,c=0,fl=0;
		cin>>ta>>fa>>tb>>fb;
		
		if(fa>=a && fa<=b)
		{
			c=c+abs(tb-ta)+abs(fa-fb);
		}
		
		else
		{
			if(fa>b)
			{
				if(ta==tb && fb>a)
				{
					fl++;
					c=abs(fb-fa);
				}
				else
				{
					c=c+fa-b;
					fa=b;
				}
			}
			else
			{
				if(tb==ta && fb<a)
				{
					fl++;
					c=abs(fb-fa);
				}
				else
				{
					c+=a-fa;
					fa=a;
				}
			}
		//	cout<<c<<" ";
			c+=abs(tb-ta);
		//	cout<<c<<" ";
			if(fb!=fa && fl==0)
			c+=abs(fb-fa);
		}
		cout<<c<<endl;
	}
}
