#include <bits/stdc++.h>
using namespace std;
#define int long long
int snr = 0;
vector<int> hamming(1,0);
void check(vector<string> &s) //o(nk)
{
    int cnt;
    for(int i=1;i<s.size();i++)
    {
        cnt = 0;
        for(int j=0;j<s[i].size();j++)
            if(s[i][j]!=s[0][j])
                cnt++;
        hamming.push_back(cnt);
    }
}
int32_t main() {
    ios::sync_with_stdio(false);cin.tie(0);
    int k,n;
    cin>>k>>n;
    vector<string> s(k);
    vector<int> pres(26,0);
    for(auto &i:s)
        cin>>i;
    for(int i=0;i<n;i++)
    {
        if(pres[s[0][i]-'a'])
            snr = 1;
        pres[s[0][i]-'a']++;
    }
    for(auto &i:s)
    {
        vector<int> pres2(26,0);
        for(int j = 0;j<i.size();j++)
            pres2[i[j]-'a']++;
        if(pres!=pres2)
            return cout<<-1,0;
    }
    check(s);
    for(int i=0;i<n;i++) //o(n^2)
        for(int j = i + 1;j<n;j++)
        {
            int x;
            for(x=1;x<k;x++)
            {
                int lel = hamming[x];
                if(s[0][i] != s[x][i] && s[0][i] == s[x][j])
                    lel--;
                if(s[0][i] == s[x][i] && s[0][i] != s[x][j])
                    lel++;
                if(s[0][j] != s[x][j] && s[0][j] == s[x][i])
                    lel--;
                if(s[0][j] == s[x][j] && s[0][j] != s[x][i])
                    lel++;
                if(lel==2 || (lel==0 && snr))
                    continue;
                break;
            }
            if(x==k)
            {
                swap(s[0][i],s[0][j]);
                cout<<s[0];
                return 0;
            }
        }
    cout<<-1;
    return 0;
}