#include <bits/stdc++.h>
using namespace std;

typedef long long lld;
typedef unsigned long long llu;
typedef long double llf;
typedef pair<int,int> PII;
typedef pair<lld,lld> PLL;
typedef pair<int,lld> PIL;
typedef pair<lld,int> PLI;

#define F1(i,s,n) for(int i=s;i<int(n);++i)
#define FI(i,s,n) for(int i=n-1;i>=s;--i)
#define F(i,s,n,k) for(int i=s;i!=int(n);i+=(k))
#define WC(a) while(a--)

#define FF first
#define SS second
#define SZ(x) ((int)((x).size()))
#define PB push_back
#define ALL(x) (x).begin(), (x).end()

template<typename T>
void _dump( const char* s, T&& head ) { cerr<<s<<"="<<head<<endl; }

template<typename T, typename... Args>
void _dump( const char* s, T&& head, Args&&... tail ) {
	int c=0;
	while ( *s!=',' || c!=0 ) {
		if ( *s=='(' || *s=='[' || *s=='{' ) c++;
		if ( *s==')' || *s==']' || *s=='}' ) c--;
		cerr<<*s++;
	}
	cerr<<"="<<head<<", ";
	_dump(s+1,tail...);
}

#define dump(...) do { \
	fprintf(stderr, "%s:%d - ", __PRETTY_FUNCTION__, __LINE__); \
	_dump(#__VA_ARGS__, __VA_ARGS__); \
} while (0)

template<typename Iter>
ostream& _out( ostream &s, Iter b, Iter e ) {
	s<<"[";
	for ( auto it=b; it!=e; it++ ) s<<(it==b?"":" ")<<*it;
	s<<"]";
	return s;
}

template<typename A, typename B>
ostream& operator <<( ostream &s, const pair<A,B> &p ) { return s<<"("<<p.first<<","<<p.second<<")"; }
template<typename T>
ostream& operator <<( ostream &s, const vector<T> &c ) { return _out(s,ALL(c)); }
template<typename T, size_t N>
ostream& operator <<( ostream &s, const array<T,N> &c ) { return _out(s,ALL(c)); }
template<typename T>
ostream& operator <<( ostream &s, const set<T> &c ) { return _out(s,ALL(c)); }
template<typename A, typename B>
ostream& operator <<( ostream &s, const map<A,B> &c ) { return _out(s,ALL(c)); }

int main(){
	ios_base::sync_with_stdio(0);cin.tie(0);
	string ss; cin>>ss;
	int n = ss.size();
	bool allH = 1, oneS = islower(ss[0]);
	for(int i=0;i<n;i++) if(!isupper(ss[i]))
		allH = 0;
	for(int i=1;i<n;i++) if(!isupper(ss[i]))
		oneS = 0;
	if(allH){
		for(int i=0;i<n;i++) cout<<char(ss[i]-'A'+'a');
		cout<<'\n';
	}else if(oneS){
		cout<<char(ss[0]-'a'+'A');
		for(int i=1;i<n;i++) cout<<char(ss[i]-'A'+'a');
		cout<<'\n';
	}else cout<<ss<<'\n';
	return 0;
}