#include <bits/stdc++.h>
#define FASTIO ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define LL long long int
 
const int N = 1e6 + 5;
// const int MOD = 1e9 + 7;
const int INF = 1e9;
// const LL INF = 1e18;
const int MOD = 998244353;
const int lgN = 22;

using namespace std;

template<typename Iterator>
vector<int> Z_Algo(Iterator st, Iterator en) {
    vector<Iterator> link;
    auto it = st; 
    while (it != en) {
        link.push_back(it);
        it++;
    }
    it = st; it++;
    int i = 1, j, L = 0, R = -1, k, n = link.size();
    vector<int> ans(n, 0);
    for (i=1;i<n;i++) {
        if (i > R) {
            j = i; k = 0;
            while(j < n && *link[j] == *link[k]) {
                k++; j++;
            }
            if (k > 0) {
                L = i; R = j-1;
            } else {
                L = 0; R = -1;
            }
            ans[i] = R - L + 1;
        } else {
            k = ans[i-L];
            if (i + k - 1 < R) {
                ans[i] = k;
            } else {
                L = i;
                while(R < n-1 && *link[R+1] == *link[R-L+1]) {
                    R++;
                }
                ans[i] = R - L + 1;
            }
        }
    }
    return ans;
}

void solve() {
    string s;
    cin >> s;
    vector<int> z = Z_Algo(s.begin(), s.end());
    int n = s.length(), i, ans = 0, mx = 0;
    for (i=0;i<n;i++) {
        if (z[i] == n-i) {
            if (mx >= z[i]) ans = max(ans, z[i]);
        }
        mx = max(mx, z[i]);
    }
    if (ans == 0) {
        cout << "Just a legend\n";
        return;
    }
    cout << s.substr(0, ans) << '\n';
} 

 
int main() {
    FASTIO;
    int T = 1;
    // cin >> T;
    for (int t=1; t<=T; t++) {
        solve();
    }
    return 0;
}