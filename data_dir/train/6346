#include <bits/stdc++.h>

        using namespace std;

        /* ---*-----*-----
        ---------o--------
        -----------------*/

        typedef long long ll;
        typedef long double ld;

        typedef pair<int, int> pi;
        typedef pair<ll,ll> pl;
        typedef pair<ld,ld> pd;

        typedef vector<int> vi;
        typedef vector<ld> vd;
        typedef vector<ll> vl;
        typedef vector<pi> vpi;
        typedef vector<pl> vpl;
        typedef vector<char> vc;

        typedef map<int,int> mii;
        typedef map<ll,ll> mll;
        typedef map<char,int> mci;
        typedef map<string,int> msi;

        #define mp make_pair
        #define pb push_back
        #define f first
        #define s second
        #define lb lower_bound
        #define ub upper_bound

        const int MOD = 1000000007;
        const int N = 105;
        set<char> vowel={'A', 'O', 'Y', 'E', 'U', 'I','a','o','y','e','u','i'}; 
        ll gcd(ll a, ll b) { return (b == 0 ? a : gcd(b, a % b)); }
        ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
        bool issquare(ll w ){
            return trunc(sqrt(w))*trunc(sqrt(w))==w;
        }
        /*ll _sieve_size;
        bitset<10000010> bs;
        vi primes;
        void sieve(ll upperbound) {
        _sieve_size = upperbound + 1;
        bs.set();
        bs[0] = bs[1] = 0;
        for (ll i = 2; i <= _sieve_size; i++) if (bs[i]) {

        for (ll j = i * i; j <= _sieve_size; j += i) bs[j] = 0;
        primes.push_back((int)i);
        } }*/

        int dx[]={1,-1,0,0,1,-1,1,-1};
        int dy[]={0,0,1,-1,1,1,-1,-1};

        ll n,m,k,a,b,t,l,ans=0,res=-1,posmin,posmax,x,y=0,z=0,xmax=0,ymax=0;

        bool check=true;

        //bool vis[N],check=true;

        char c,c1,tab[50][50];

        string ch,ch1,ch2;
        priority_queue<int> pq;

        map<char,set<int> > edje;
        msi mastring;
        mci machar;
        mll mai;
        set<char> setchar;
        map<pair<ll,ll>,ll> memo;

        set<ll> si;

        vl v,vv;
        vpl vvv;
        



        int main(){
            ios_base::sync_with_stdio(false);
            //freopen("overcode.in", "r", stdin);
            //memset(dist,INT_MAX,sizeof(dist));
            //memset(tab,-1,sizeof(tab));
            cin >> n >>m;
            for(int i=0;i<n;i++){
                cin >> x;
                if(x+m<=5)v.pb(x);
            }
            cout << v.size()/3 ;
        return 0;
        }