#include <bits/stdc++.h>

using namespace std;

const int MaxN = 2e5 + 15;
const int MOD = 1e9 + 7;
const long long INF = 1e9 * 1ll * 1e9;


int n, T;
pair<int, pair<int, int> > a[MaxN];

bool can(int x)
{
    long long all = 0;
    int t = x;
    for(int i = 1; i <= n && t; ++i)
        if(a[i].second.second >= x)
        {
            all += a[i].first;
            --t;
        }
    return all <= T && t == 0;
}

void solve(int x)
{
    cout << x << '\n';
    long long all = 0;
    int t = x;
    for(int i = 1; i <= n && t; ++i)
        if(a[i].second.second >= x)
        {
            all += a[i].first;
            --t;
            cout << a[i].second.first << ' ';
        }
    cout << '\n';
}

int main()
{
    ios_base :: sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n >> T;

    for(int i = 1; i <= n; ++i)
    {
        cin >> a[i].second.second >> a[i].first;
        a[i].second.first = i;
    }

    sort(a + 1, a + n + 1);

    int l = 1;
    int r = n;
    int ans = 0;

    while(l <= r)
    {
        int mid = (l + r) / 2;
        if(can(mid))
        {
            ans = mid;
            l = mid + 1;
        }else
            r = mid - 1;
    }

    cout << ans << '\n';
    solve(ans);

    return 0;
}
