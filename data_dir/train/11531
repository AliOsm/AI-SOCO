#include <bits/stdc++.h>
#define pb push_back
#define sc second
#define fr first
#define mk make_pair
#define ll long long
#define ii pair<int,int>
#define mp make_pair
using namespace std;
int n;
int a[5];
string s[1005];
string t[1005];
int memo[1005][5][5][5][5][5];
int solve2(int i,int j,int x1,int x2,int x3,int x4,int k);
int solve(int i,int j,int x1,int x2,int x3,int x4)
{
    if(i == n)
    {
        return 0;
    }
    int &ret = memo[i][j][x1][x2][x3][x4];
    if(ret != -1)
        return ret;
    ret = 1e9;
    for(int k=0;k<=4;k++)
    {
        ret = min(ret , solve2(i,j,x1,x2,x3,x4,k));
    }
    return ret;
}

int solve2(int i,int j,int x1,int x2,int x3,int x4,int k)
{
    if(k == 0)
    {
        if(s[i][j] == '*')
        {
            bool ok1 = (j == 0 && x1 == 0);
            bool ok2 = (j == 1 && x2 == 0);
            bool ok3 = (j == 2 && x3 == 0);
            bool ok4 = (j == 3 && x4 == 0);
            if(ok1|ok2|ok3|ok4)
            return 1e9;
        }
        if(j == 3)
        {
            return solve(i+1,0,max(0,x1-1),max(0,x2-1),max(0,x3-1),max(0,x4-1));
        }

        return solve(i,j+1,x1,x2,x3,x4);
    }
    int y1,y2,y3,y4;
    if(j == 0)
    {
        y1 = x1;
        y2 = x2;
        y3 = x3;
        y4 = x4;
        y1 = max(y1 , k);
        if(k > 1)
        {
            y2 = max(y2 , k);
        }
        if(k > 2)
        {
            y3 = max(y3,k);
        }
        if(k > 3)
        {
            y4 = max(y4,k);
        }
        return a[k-1]+solve(i,j+1,y1,y2,y3,y4);
    }
    else if(j == 1)
    {
        y1 = x1;
        y2 = x2;
        y3 = x3;
        y4 = x4;
        y2 = max(y2 , k);
        if(k > 1)
        {
            y3 = max(y3,k);
        }
        if(k > 2)
        {
            y4 = max(y4,k);
        }
        return a[k-1]+solve(i,j+1,y1,y2,y3,y4);
    }
    else if(j == 2)
    {
        y1 = x1;
        y2 = x2;
        y3 = x3;
        y4 = x4;
        y3 = max(y3,k);
        if(k > 1)
        {
            y4 = max(y4,k);
        }
        return a[k-1]+solve(i,j+1,y1,y2,y3,y4);
    }
    else
    {
        y1 = max(0,x1-1);
        y2 = max(0,x2-1);
        y3 = max(0,x3-1);
        y4 = max(0,x4-1);
        y4 = max(y4,k-1);
        return a[k-1]+solve(i+1,0,y1,y2,y3,y4);
    }
}

int main()
{
    memset(memo,-1,sizeof(memo));
    cin>>n;
    for(int i=0;i<4;i++)
        cin>>a[i];
    for(int i=0;i<4;i++)
        cin>>t[i];
    for(int i=0;i<n;i++)
    {
        s[i] = "";
        for(int j=0;j<4;j++)
        {
            s[i]+= t[j][i];
        }
    }

    cout<<solve(0,0,0,0,0,0);
}
