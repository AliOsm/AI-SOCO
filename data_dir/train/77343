/*
Submitted With (^^) by -> Hossam ^_^
 _____________________
|     ___     ___     |
|    (^_^)   (^_^)    |
|   /( | )\_/( | )\   |
|_____|_|_____|_|_____|
*/

#include <bits/stdc++.h>
// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>

using namespace std;

inline void prep()
{
    cin.tie(0);
    cin.sync_with_stdio(0);
};

#define X first
#define Y second
// #define endl '\n'
#define ll long long
#define inf (0x7fffffffffffffff)
#define all(x) x.begin(), x.end()
#define debug(x) cerr << #x << " = " << (x) << "\n";
#define ZXC cerr << clock() * 1.0 / CLOCKS_PER_SEC << endl;
#define SEED (chrono::high_resolution_clock::now().time_since_epoch().count())

const int mod = (int)1e9 + 7;
// const int mod = 998244353;
const int MX = (int)1e5 + 10;

int n;

int go(int i, int j, const vector<vector<bool>>& ok){

    int sz = j - i + 1;

    if(ok[i][j]) return sz;

    int hf = sz / 2;

    return max(go(i, j - hf, ok), go(i + hf, j, ok));
}

int main(){

    prep();

    cin >> n;

    int a[n];
    for(int i = 0; i < n; ++i)
        cin >> a[i];

    vector<vector<bool>> ok(n, vector<bool>(n, 0));
    for(int i = 0; i < n; ++i){
        int valid = true;
        ok[i][i] = true;
        for(int j = i + 1; j < n; ++j){
            valid &= a[j - 1] <= a[j]; 
            ok[i][j] = valid;
        }
    }

    cout << go(0, n - 1, ok) << endl;
    
    return 0;
}