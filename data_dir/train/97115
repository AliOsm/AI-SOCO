//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>
#define mem(a,v) memset((a), (v), sizeof (a))
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int i = 0; i < (n); i++) ni(a[i])
#define nal(a, n) for (int i = 0; i < (n); i++) nl(a[i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define pil pair<int, long long>
#define pll pair<long long, long long>
#define vii vector<pii>
#define vil vector<pil>
#define vll vector<pll>
#define vi vector<int>
#define vl vector<long long>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef cc_hash_table<int,int,hash<int>> ht;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> oset;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const ll INF = 1e16 + 7;
const int MAXN = 1e2 + 5;
const double eps = 1e-9;
char s[MAXN], t[MAXN], p[MAXN];
int vis[MAXN], cnt[30];

void solve() {
	mem(vis, 0);
	mem(cnt, 0);
	scanf("%s %s %s", s, t, p);
	int n=strlen(s), m=strlen(t), k=strlen(p);
	int j = 0;
	for (int i = 0; i < n; i++) {
		while (j < m && t[j] != s[i]) j++;
		if (j == m) {
			printf("NO\n");
			return;
		}
		vis[j++] = 1;
	}
	for (int i = 0; i < m; i++)
		if (!vis[i])
			cnt[t[i]-'a']++;
	for (int i = 0; i < k; i++)
		cnt[p[i]-'a']--;
	for (int i = 0; i < 30; i++)
		if (cnt[i] > 0) {
			printf("NO\n");
			return;
		}
	printf("YES\n");
}

int main() {
	int t; ni(t);
	while (t--) solve();
	return 0;
}
