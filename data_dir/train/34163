#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

ll a[57];
ll dp[57][57];
ll n, k;
vector< ll >setbits;

ll satisfies(ll n)
{
    for (ll x : setbits) {
        if ( (n&(1LL<<x)) == 0) return 0;
    }

    return 1;
}

ll canDo(ll i)
{
    ll sm = 0;
    for (ll i = 1; i <= n; i++) {
        sm += a[i];
        dp[1][i] = satisfies(sm);
    }

    for (ll l = 2; l <= k; l++) {
        for (ll i = l; i <= n; i++) {
            dp[l][i] = 0;
            sm = 0;
            for (ll j = i; j > l-1; j--) {
                sm += a[j];
                dp[l][i] |= (satisfies(sm)&dp[l-1][j-1]);
            }
        }
    }

    return dp[k][n];
}

int main()
{
    std::ios_base::sync_with_stdio(false);
    cin.tie(0);

    cin >> n >> k;

    for (ll i = 1; i <= n; i++) {
        cin >> a[i];
    }

    ll ans = 0;
    for (ll i = 60; i >= 0; i--) {
        setbits.push_back(i);
        if (canDo(i)) {
            ans |= (1LL<<i);
        } else {
            setbits.pop_back();
        }
    }

    cout << ans << endl;

    return 0;
}

