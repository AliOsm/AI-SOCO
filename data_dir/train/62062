/*
  ------------------------- Hachiikung ---------------------------------
  ---------------------- Worrachate Bosri ------------------------------
  ------ Faculty of Computer Engineering Chulalongkorn University ------
*/
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<stack>
#include<list>
#include<set>
#include<map>
#include<string>
#include<utility>
using namespace std;
#define REP(i,FN) for(int i=0;i<FN;i++)
#define FOR(i,ST,FN) for(int i=ST;i<=FN;i++)
#define FORD(i,FN,ST) for(int i=FN;i>=ST;i--)
#define FORX(i,c) for(typeof(c.begin())i=c.begin();i!=c.end();i++)
#define pause system("pause")
#define S scanf
#define P printf
#define X first
#define Y second
#define pb push_back
#define PII pair<int,int>
#define mp make_pair
#define sz size()
#define eps 1e-8

const int MOD(1000000007);
const int INF((1<<30)-1);
const int MAXN(500005);

int a[MAXN], path[MAXN], q[MAXN];

int main(){

    int n;
    S("%d",&n);
    REP(i,n)
        S("%d",&a[i]);

    REP(i,n)
        path[i] = INF;

    int fr = 0, bk = 0;

    for(int i=0,j=0;i<n;i=j)
    {
        while(j < n && a[j] == a[i])
            j++;

        if(j-i > 1 || i == 0 || j == n)
        {
            FOR(k,i,j-1)
                path[k] = 0;
            q[bk++] = i;
            if(j-1 != i) q[bk++] = j-1;
        }
    }

    int ans = 0;

    while(fr != bk)
    {
        int node = q[fr++];

        ans = max(ans, path[node]);

        if(node-1 >= 0 && path[node]+1 < path[node-1])
        {
            q[bk++] = node-1;
            a[node-1] = a[node];
            path[node-1] = path[node]+1;
        }

        if(node+1 < n && path[node]+1 < path[node+1])
        {
            q[bk++] = node+1;
            a[node+1] = a[node];
            path[node+1] = path[node]+1;
        }
    }

    P("%d\n",ans);

    REP(i,n)
        P("%d ",a[i]);

}
