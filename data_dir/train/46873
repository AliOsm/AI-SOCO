#include <bits/stdc++.h>
using namespace std;
const int OO = 0x3f3f3f3f, N = 505;
long long d[N][N], b[N];
int n, i, j, k, x, y, z, a[N];
void floyd()
{
    for(k = 0;k < n;++k)
    {
        z = a[k];
        for(i = 0;i < n;++i)
        {
            x = a[i];
            for(j = 0;j < n;++j)
            {
                y = a[j];
                if(d[x][z] < OO && d[z][y] < OO)
                    d[x][y] = min(d[x][y], d[x][z] + d[z][y]);
            }
        }
        for(i = 0;i <= k;++i)
        {
            x = a[i];
            for(j = 0;j <= k;++j)
                y = a[j], b[k] += d[x][y];
        }
    }
}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    cin >> n;
    memset(d, OO, sizeof OO);
    for(;i < n;++i)
        for(j = 0;j < n;++j)
            cin >> d[i][j];
    for(i = 0;i < n;++i)
        cin >> a[i], --a[i];
    reverse(a, a + n);
    floyd();
    for(i = n - 1;i >= 0;i--)
        cout << b[i] << ' ';
    return 0;
}
