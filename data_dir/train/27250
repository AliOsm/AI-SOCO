#define _CRT_SECURE_NO_WARNINGS

#pragma comment(linker, "/STACK:640000000")

#include <iostream>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <list>
#include <vector>
#include <string>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
#include <bitset>
#include <unordered_set>
#include <unordered_map>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define forn1(i, n) for(int i = 1; i <= (int)(n); i++)
#define forr(i, l, r) for(int i = int(l); i <= int(r); i++)
#define all(a) (a).begin(), (a).end()
#define sz(a) (int)((a).size())
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define y1 __y1
#define sqr(x) ((x) * (x))

typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;

const int INF = (int)(1e9);
const li INF64 = (li)(INF)* (li)(INF);
const ld eps = 1e-9;
const ld pi = ld(3.1415926535897932384626433832795);

inline bool in(int i, int j, int n, int m) {
    return i >= 1 && i <= n && j >= 1 && j <= m;
}

inline int myrand() {
    return (rand() ^ (rand() << 15));
}

const int dx[] = { 0, -1, 1, 0 };
const int dy[] = { -1, 0, 0, 1 };

//vsyakaya xernya

template <typename T1, typename T2>
inline ostream& operator <<(ostream &out, const pair<T1, T2> &a) {
    return out << "(" << a.x << "," << a.y << ")";
}

template <typename T>
inline void outArr(const T a[], int n) {
#ifdef _DEBUG
    cerr << " == " << n << " : ";
    forn(i, n) cerr << a[i] << ", "; cerr << endl;
#endif
}

template <typename T>
inline void out(const T &a) {
#ifdef _DEBUG
    cerr << " == " << a << endl;
#endif
}

template <typename T1, typename T2>
inline void out(const pair<T1, T2> &a) {
#ifdef _DEBUG
    cerr << " == " << a.x << ' ' << a.y << endl;
#endif
}

template <typename T>
inline void out(const vector<T> &a) {
#ifdef _DEBUG
    cerr << " == " << sz(a) << " : ";
    for (const auto &x : a) cerr << x << ", "; cerr << endl;
#endif
}

template <typename T>
inline void out(const set<T> &a) {
#ifdef _DEBUG
    cerr << " == " << sz(a) << " : ";
    for (const auto &x : a) cerr << x << ", "; cerr << endl;
#endif
}

#ifdef _DEBUG
#define err(x) { cerr << #x; out(x); }
#define print(x, n) { cerr << #x; outArr(x, n); }
#else
#define err(x) {}
#define print(x, n) {}
#endif

const int N = 2e5 + 555;

int n, a[N];

inline void gen() {
    return;
}

inline bool read() {
    cin >> n;
    forn1(i, n) cin >> a[i];
    return true;
}

int pref[N];

inline void solve() {
    forn1(i, n) pref[i] = max(pref[i - 1], a[i]);
    int i = n;
    int ans = 0;
    while (i >= 1) {
        ans++;
        int j = i - 1;
        int mn = a[i];
        while (j >= 1 && mn < pref[j]) {
            mn = min(mn, a[j]);
            j--;
        }

        i = j;
    }

    cout << ans << endl;
    return;
}

int main() {
#ifdef _DEBUG
    assert(freopen("input.txt", "rt", stdin));
    assert(freopen("output.txt", "wt", stdout));
#endif

    cout << setprecision(10) << fixed;
    cerr << setprecision(10) << fixed;

    srand(int(time(NULL)));

    int T = 1;
    //assert(scanf("%d", &T) == 1);

    forn(i, T) {
        //cerr << "TEST == " << i + 1 << endl;
        assert(read());
        solve();
    }

#ifdef _DEBUG
    cerr << "TIME == " << clock() << " ms" << endl;
#endif
    return 0;
}