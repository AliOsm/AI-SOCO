#include <bits/stdc++.h>

using namespace std;

int par[200000];
int sz[200000];

int find(int x) {
	if (x == par[x]) return x;
	return par[x] = find(par[x]);
}

void unite(int x, int y) {
	x = find(x);
	y = find(y);
	if (x == y) return;
	par[x] = y;
	sz[y] += sz[x];
}

int getsize(int x) {
	return sz[find(x)];
}

int main() {
	cin.tie(0);
	ios::sync_with_stdio(false);
	int n, m, q;
	cin >> n >> m >> q;
	for (int i = 0; i < n * 2; i++) {
		par[i] = i;
		sz[i] = 1;
	}
	map<string, int> mp;
	for (int i = 0; i < n; i++) {
		string s;
		cin >> s;
		mp[s] = i;
	}
	for (int i = 0; i < m; i++) {
		int t;
		string a, b;
		cin >> t >> a >> b;
		int u = mp[a];
		int v = mp[b];
		if (t == 1) {
			if (find(u) == find(v + n)) {
				cout << "NO" << endl;
			} else {
				cout << "YES" << endl;
				unite(u, v);
				unite(u + n, v + n);
			}
		} else {
			if (find(u) == find(v)) {
				cout << "NO" << endl;
			} else {
				cout << "YES" << endl;
				unite(u, v + n);
				unite(u + n, v);
			}
		}
	}
	for (int i = 0; i < q; i++) {
		string a, b;
		cin >> a >> b;
		int u = mp[a];
		int v = mp[b];
		if (find(u) == find(v)) {
			cout << 1 << endl;
		} else if (find(u) == find(v + n)) {
			cout << 2 << endl;
		} else {
			cout << 3 << endl;
		}
	}
}