#include <bits/stdc++.h>
#define int long long 
using namespace std;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);
    long long powmod(long long a,long long b,long long mod) {
        if (b==0 || a==1)  {if (mod==1) return 0; else return 1; }
       
        if (b%2==0) { long long k=powmod(a,b/2,mod); return (k*k)%mod; }
        else {long long k=powmod(a,b/2,mod); return ( (k*k) %mod *a)% mod; }
    }
    long long gcd(long long a, long long b) {
        if (a==0) return b;
        if (b==0) return a;
        if (a>b) return gcd(a%b,b); else return gcd(b%a,a);
    }
      int prime(int p) { // 1 - простое
        for (int i=2;i*i<=p;i++) {
            if (p%i==0 && i<p) return i;  
        }
        return 1;
    }
    
     int inv(int a, int mod) {
        return powmod(a,mod-2,mod); 
    }
  int random_modul() {
    
    uniform_int_distribution <int> u1(5e8, 1e9);
    int pepega=u1(rnd); 
    while (prime(pepega)!=1) pepega=u1(rnd); 
    return pepega; 
}
 
 
    void solve () {
       
       
         /* --------- */
         
    int a;
    cin>>a;
    vector <vector<int>> m(a); 
    for (int i=0;i<a-1;i++) {
        int k; cin>>k; for (int j=0;j<k;j++) {int x; cin>>x; m[i].push_back(x); }
    }
    for (int f1=1;f1<=a;f1++) {
        int check=1;
        int cur=1;
        vector <int> ans(a);
        ans[0]=f1; 
        vector <bool> used(a+1);
        used[f1]=true;
        while (1==1) { 
        int find=-1; 
        for (int u=0;u<a-1;u++) {
            int tu=0; for (int j=0;j<m[u].size();j++) if (!used[m[u][j]]) tu++; 
            if (tu==1) { find=u; break; }
        }
        
        
        if (find==-1 && cur<=a-1) {check=0;}
        if (find==-1) break; 
        int find2=0;
        for (int j=0;j<m[find].size();j++) if (!used[m[find][j]]) find2=m[find][j]; 
        used[find2]=true; 
        ans[cur]=find2; cur++; 
        
        }
        
        
        if (check==1) {
            vector <int> find(a+1);
            for (int u=0;u<a;u++) find[ans[u]]=u;
            for (int u=0;u<a-1;u++) {
              int min1=19999;
              int max1=0;
              for (int j=0;j<m[u].size();j++) {min1=min(min1,find[m[u][j]]); max1=max(max1,find[m[u][j]]); }
              if (max1-min1+1!=m[u].size()) check=0;  
           } 
            if (check==1) { for (int j=0;j<a;j++) cout<<ans[j]<<" "; cout<<"\n"; return; } 
        }
        
    }
    
         /* --------- */  
            return;
    }
     
     
     
    signed main() {
       
       
       //  cout<<fixed<<setprecision(10); 
       
          int tututu;
          tututu=1;
          
        cin>>tututu; // если нет запросов, то закоментить
        
          for (int qwerty=0;qwerty<tututu;qwerty++) solve();
      
       
        return 0;
    }