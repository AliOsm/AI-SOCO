#include<iostream>

using namespace std;

#define F first
#define S second
int x[5 * 1000005], a[4][5 * 1000005];
pair<int, int> interval[5 * 1000005];
bool c[5 * 1000005];

void make(int now, int l, int r)
{
    if(l == r)
        return;
    interval[now] = make_pair(l, r);
    if(l == r - 1)
    {
        for(int i = x[l]; i < x[l] + 3; i++)
            a[i][now] = 1;
        return;
    }
    int mid = (l + r) / 2;
    make(now * 2, l, mid);
    make(now * 2 + 1, mid, r);
    a[0][now] = a[0][now * 2] + a[0][now * 2 + 1];
    a[3][now] = a[3][now * 2] + a[3][now * 2 + 1];
    a[1][now] = max(a[0][now * 2] + a[1][now * 2 + 1], a[1][now * 2] + a[3][now * 2 + 1]);
    a[2][now] = max(a[3][now * 2] + a[2][now * 2 + 1], a[2][now * 2] + a[0][now * 2 + 1]);
}

void flip(int now, int l, int r)
{
    if(c[now] == 1)
    {
        c[now] = 0;
        swap(a[0][now], a[3][now]);
        swap(a[1][now], a[2][now]);
        c[now * 2] ^= 1;
        c[now * 2 + 1] ^= 1;
    }
    if(l <= interval[now].F && interval[now].S <= r)
    {
        swap(a[0][now], a[3][now]);
        swap(a[1][now], a[2][now]);
        c[now * 2] ^= 1;
        c[now * 2 + 1] ^= 1;
        return;
    }
    if(interval[now].S <= l || r <= interval[now].F)
        return;
    flip(now * 2, l, r);
    flip(now * 2 + 1, l, r);
    a[0][now] = a[0][now * 2] + a[0][now * 2 + 1];
    a[3][now] = a[3][now * 2] + a[3][now * 2 + 1];
    a[1][now] = max(a[0][now * 2] + a[1][now * 2 + 1], a[1][now * 2] + a[3][now * 2 + 1]);
    a[2][now] = max(a[3][now * 2] + a[2][now * 2 + 1], a[2][now * 2] + a[0][now * 2 + 1]);
}

int main()
{
    int n, m;
    cin >> n >> m;
    string s;
    cin >> s;
    for(int i = 0; i < n; i++)
        if(s[i] == '7')
            x[i] = 1;
    make(1, 0, n);
    while(m--)
    {
        cin >> s;
        if(s == "count")
            cout << a[1][1] << endl;
        else
        {
            int l, r;
            cin >> l >> r;
            flip(1, l - 1, r);
        }
    }
    return 0;
}
