#include <bits/stdc++.h>
using namespace std;

typedef pair <int, int> P;

const int N = 1e5 + 10;

vector <int> G[N];
int a[N], used[N];
priority_queue <int, vector <int>, greater <int> > pq;
set <P> s;

int main(){
	int n, m, u, v;
	scanf("%d %d",&n,&m);
	for (int i = 1; i <= m; i++){
		scanf("%d %d",&u,&v);
		if (u > v) swap(u, v);
		if (u == v || s.count({u, v})) continue;
		G[u].push_back(v);
		G[v].push_back(u);
		s.insert({u, v});
	}
	memset(used, 0, sizeof(used));
	pq.push(1);
	used[1] = 1;
	while (!pq.empty()){
		u = pq.top(); pq.pop();
		printf("%d ", u);
		for (int i = 0; i < G[u].size(); i++){
			v = G[u][i];
			if (!used[v]){
				pq.push(v);
				used[v] = 1;
			}
		}
	}
	printf("\n");
	return 0;
}