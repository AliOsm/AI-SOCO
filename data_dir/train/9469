#include<bits/stdc++.h>

#define mp make_pair
#define vi vector<int>
#define vll vector<long long>
#define all(a) a.begin(), a.end()
#define vsort(v) sort(all(v))
#define UNIQUE(a)  sort(all(a)); a.erase(unique(all(a)), a.end())
#define clr(a,k) memset(a,k,sizeof a)
#define check_bit(a, b) (a&(1<<b))
#define set_bit(a, b) (a|(1<<b))
#define total_bit(a) __builtin_popcount(a)
#define MAX 100009 /// 10^5
#define xx first
#define yy second
#define bclr(b) memset(b,false,sizeof b)
#define fr(i, a) for(i = 0; i < a; i++)
#define frr(i,a) for(i = a - 1; i >= 0, i--)
#define LL long long
#define ll long long
#define pb push_back
#define pii pair<int, int>
#define vll vector<long long>
///***** bit *****///
#define use_cin  ios_base::sync_with_stdio(0); cin.tie(0);
#define READ  freopen("C:\\Users\\emotionless\\Desktop\\uva 01-11-15\\codejam\\alarm.in","r",stdin)
#define WRITE  freopen("C:\\Users\\emotionless\\Desktop\\uva 01-11-15\\codejam\\alarm.out","w",stdout)

///***** Input / Output *****///
#define s1(a) scanf("%d", &a)
#define s2(a, b) scanf("%d %d", &a, &b)
#define s3(a, b, c) scanf("%d %d %d", &a, &b, &c)
#define p1(a) printf("%d", a)
#define p2(a, b) printf("%d %d", a, b)
#define p3(a, b, c) printf("%d %d %d", a, b, c)
#define eps 1e-9
#define deb cout<<"I am here"<<endl
#define MOD 1000000007
#define INF 100000000

using namespace std;

///******* Template ********///

template <class T> inline T bigmod(T p,T e,T M)
{
    if(e==0)return 1;
    if(e%2==0)
    {
        T t=bigmod(p,e/2,M);
        return (t*t)%M;
    }
    return (bigmod(p,e-1,M)*p)%M;
}
template <class T> inline T gcd(T a,T b)
{
    if(b==0)return a;
    return gcd(b,a%b);
}
template <class T> inline T modinverse(T a,T M)
{
    return bigmod(a,M-2,M);
}

/**
return (a * b) % m;
where a, b, m <= 10^18
**/
template <class T> inline T multimod(T a, T b, T m)
{
    T ans = 0ll;
    a%=m, b%=m;
    while(b)
    {
        if(b&1ll) ans = m - ans > a?(ans + a): (ans + a - m);
        b >>= 1ll;
        a = (m - a)>a?a+a:a+a-m;
    }
    return (T)ans;
}



///***** fast scan start here.... *****///

/// use input.grabBuffer(); for all input in the first line.


///****** fast scan ends here ***********///

//int dr[] = {-1, 0, 1, 0}; int dc[] = {0, 1, 0, -1}; /// 4 sides
//int dr[] = {-1, -1, 0, 1, 1, 1, 0, -1}; dc[] = {0, 1, 1, 1, 0, -1, -1, -1}; /// 8 sides

template<typename T>
void pop_front(std::vector<T>& vec)
{
    vec.front() = vec.back();
    vec.pop_back();
    vec.front() = vec.back();  // but should this work?
}
#define MX 1000000000000000000ll
///***** Template ends here *****///
///********************* Code starts here ****************************

struct Z
{
    int a, b, c;
    Z(){}
    Z(int _, int __, int ___)
    {
        a = _;
        b= __;
        c = ___;
    }
    bool operator < (const Z& A) const
    {
        return c < A.c;
    }
};


int x[100009], y[100009];
deque<Z>V[100009];
int ansx[100009];
int ansy[100009];


map<pii, bool>MP;

int main()
{
//    vector<int>as;
//    as.pb(2);
//    as.pb(3);
//    as.pb(4);
//    pop_front(as);
//    cout<<as.back()<<endl;

//    READ;
//    WRITE;
    int t;
    int num, cases = 1;
    int i, j, k, n;
    cin>>n;
    map<int, int>M;
    k = 1;
    for(i = 0; i < n; i++)
    {
        cin>>x[i]>>y[i];
        int dif = y[i] - x[i];
        if(M.find(dif) == M.end())
        {
            M[dif] = k++;
        }
        int id = M[dif];
        V[id].pb(Z(x[i], y[i], x[i] + y[i]));
    }

//    cout<<"ok"<<endl;


    for(i = 1; i < k; i++)
    {
        sort(V[ i ].begin(), V[ i ].end());
    }

    for(i = 0; i < n; i++)
    {
        cin>>num;

        num = M[num];
        if(V[num].size() == 0)
        {
            cout<<"NO"<<endl;
            return 0;
        }
        ansx[i] =V[num][0].a;
        ansy[i] =V[num][0].b;
        V[num].pop_front();
    }

    for(i = 0; i < n; i++)
    {
        int cx = ansx[i];
        int cy = ansy[i];
        pii p = mp(cx, cy+1);
        pii p1 = mp(cx+1, cy);
        if(MP[p] || MP[p1])
        {
            cout<<"NO"<<endl;
            return 0;
        }
        pii p2 = mp(cx, cy);
        MP[p2] = 1;
    }
    cout<<"YES"<<endl;
    for(i = 0;  i< n; i++)
        cout<<ansx[i]<<" "<<ansy[i]<<endl;

    return 0;
}
