#include <bits/stdc++.h>
using namespace std;

const int MAX = 1005;
int n, mk[MAX];

struct par {
	int w, h;
} a[MAX];

int solve(int h, int s, int cnt) {
	for(int i = 1; i <= n; i++) {
		if(mk[i])
			continue;

		if(min(a[i].h, a[i].w) > h)
			return -1;
	}

	for(int i = 1; i <= n; i++) {
		if(mk[i])
			continue;

		if(a[i].h > h) {
			cnt--;
			s += a[i].h;
			mk[i] = 1;
		}
	}

	if(cnt < 0)
		return -1;

	vector <int> diff;
	for(int i = 1; i <= n; i++) {
		if(mk[i])
			continue;

		s += a[i].w;

		if(a[i].w <= h)
			diff.push_back(a[i].h - a[i].w);
	}

	sort(diff.begin(), diff.end());

	int l = diff.size();
	l = min(l, cnt);

	for(int i = 0; i < l; i++) {
		if(diff[i] >= 0)
			break;

		s += diff[i];
	}

	return s;
}

int main() {
	scanf("%d", &n);

	int ans = 0, mx = 0;
	for(int i = 1; i <= n; i++) {
		scanf("%d%d", &a[i].w, &a[i].h);
		ans += a[i].w;
		mx = max(mx, a[i].h);
	}

	ans *= mx;

	int op = n / 2;
	for(int i = 1; i <= n; i++) {
		for(int j = 1; j <= n; j++)
			mk[j] = 0;

		mk[i] = 1;
		int r = solve(a[i].h, a[i].w, op);

		if(r != -1)
			ans = min(ans, r * a[i].h);

		for(int j = 1; j <= n; j++)
			mk[j] = 0;

		mk[i] = 1;

		r = solve(a[i].w, a[i].h, op - 1);

		if(r != -1)
			ans = min(ans, r * a[i].w);
	}

	printf("%d\n", ans);
	return 0;
}