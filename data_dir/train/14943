#include <bits/stdc++.h>
using namespace std;
#define pb  push_back
#define ll  long long
#define vi  vector<int>
#define vvi vector<vi >
#define all(x) x.begin(), x.end()

int n, m;
vector<string> a, b;
vvi u, d, v;
vi  z;
vi  len;
vector<set<int> > dif;

void ray(int i, int j) {
    u[i][j] = 1;
    int I = i;
    int J = j;
    if (b[i][j] == 'U') --I;
    if (b[i][j] == 'D') ++I;
    if (b[i][j] == 'L') --J;
    if (b[i][j] == 'R') ++J;
    if (u[I][J] == 2) {
        v[i][j] = v[I][J];
        d[i][j] = d[I][J] + 1;
        u[i][j] = 2;
    }
    else if (u[I][J] == 1) {
        d[i][j] = 1;
        u[i][j] = 2;
        v[i][j] = I * m + J;
        z.pb(v[i][j]);
    }
    else {
        ray(I, J);
        v[i][j] = v[I][J];
        d[i][j] = d[I][J] + 1;
        u[i][j] = 2;
    }
}

void f() {
    cin >> n >> m;
    a.resize(n);
    for (int i = 0; i < n; ++i)
        cin >> a[i];
    b.resize(n);
    for (int i = 0; i < n; ++i)
        cin >> b[i];
    z.clear();
    u.assign(n, vi(m, 0));
    d.assign(n, vi(m, 0));
    v.assign(n, vi(m, 0));
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            if (u[i][j]) continue;
            ray(i, j);
        }
    }
    len.assign(n * m, 0);
    int num = 0;
    for (int e = 0; e < z.size(); ++e) {
        int i = z[e] / m;
        int j = z[e] % m;
        num += d[i][j];
        len[z[e]] = d[i][j];
    }
    dif.clear();
    dif.resize(n * m);
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            if (a[i][j] == '1') continue;
            int V = v[i][j];
            dif[V].insert(d[i][j] % len[V]);
        }
    }
    int cnt = 0;
    for (int e = 0; e < z.size(); ++e)
        cnt += dif[z[e]].size();
    cout << num << " " << cnt << "\n";
}

int main() {
    ios_base::sync_with_stdio(false); cin.tie(0);
    int t; cin >> t;
    while (t--)
        f();

    return 0;
}