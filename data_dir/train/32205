#include <bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef pair <ll, ll> pll;

const int Max = 2e6 + 10;
const int Mod = 1e9 + 7;
const ll Inf = 1LL << 62;

int ar[Max];

map <pll, ll> mp;

set <ll> a;

int calc(int n) {
	int tot = 0;

	for(int i : a) {
		if(i < 1 || i >= n) {
			continue;
		} 
		//cout << i << " ";
		if(i & 1) {
			if(ar[i] >= ar[i + 1]) {
				tot++;
			}
		}
		else {
			if(ar[i] <= ar[i + 1]) {
				tot++;
			}
		}
	} //cout << endl;

	return tot;
}

int calc2(int n) {
	int tot = 0;

	for(int i = 1; i < n; i++) {
		if(i & 1) {
			if(ar[i] >= ar[i + 1]) {
				tot++;
			}
		}
		else {
			if(ar[i] <= ar[i + 1]) {
				tot++;
			}
		}
	}

	return tot;
}

int main() {
#ifdef Mr_Emrul
	freopen("inputf.in", "r", stdin);
#endif /// Mr_Emrul

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n, cnt = 0; cin >> n;

	for(int i = 1; i <= n; i++) {
		cin >> ar[i];
	}

	//vector <int> a;

	//set <ll> a;

	for(int i = 1; i < n; i++) {
		if(i & 1) {
			if(ar[i] >= ar[i + 1]) {
				cnt++;

				//a.insert(i - 1);
				a.insert(i);
				a.insert(i + 1);
			}
		}
		else {
			if(ar[i] <= ar[i + 1]) {
				cnt++;
			//a.insert(i - 1);
				a.insert(i);
				a.insert(i + 1);
			}
		}
	}

	a.insert(1);
	a.insert(2);
	a.insert(n - 1);
	a.insert(n);

	//cout << b[0] << endl;


	if(a.size() > 10) {
		cout << 0 << endl;
		return 0;
	}

	ll ans = 0;

	for(int i = 1; i < n; i++) {
		for(int x : a) {
			if(i == x) {
				continue;
			}
			if(mp[{i, x}] || mp[{x, i}]) {
				continue;
			}
			swap(ar[i], ar[x]);
			ll p = 0, q = 0, r = 0;

			if(a.find(i - 1) == a.end()) r = 1;
			if(a.find(i) == a.end()) p = 1;
			if(a.find(i + 1) == a.end()) q = 1;
			a.insert(i - 1);
			a.insert(i);
			a.insert(i + 1);

			if(calc(n) == 0) {
				ans++;
				mp[{x, i}] = 1;
				mp[{i, x}] = 1;
			}

			swap(ar[i], ar[x]);
			if(r) a.erase(i - 1);
			if(p) a.erase(i);
			if(q) a.erase(i + 1);

		}
	}

	cout << ans << endl;
	return 0;
}