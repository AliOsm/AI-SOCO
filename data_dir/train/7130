#include <iostream>
#include <set>
#include <algorithm>
#include <cstring>
#include <vector>
#include <queue>
using namespace std;

typedef long long ll;

const int MAXV = 1000005;

set< pair<int, int> > factors;

void process(int n ){

    for( set< pair<int,int> >::iterator it = factors.begin(); it != factors.end(); ){

        int cnt = 0;
        int target = it->second;
        int factor = it->first;


        if( n == 1 )break;


        if( n % factor == 0){
            while( n % factor == 0){
                cnt++;
                n/= factor;
            }
        }

        if( cnt >= target ){
            factors.erase( make_pair(factor, target) );
            it = factors.begin();

            if( factors.empty() ) break;
        }else{
            it++;
        }

    }

}

bool check(int n ){

    for(int i = 2; i * i <= n; i++){
        if( n % i == 0){
            int cnt = 0;

            while(n % i == 0){
                cnt++;
                n /= i;
            }

            factors.insert( make_pair( i, cnt ) );

        }
    }

    if( n > 1 )
        factors.insert( make_pair(n, 1) );

    return true;
}
int main()
{

    ios::sync_with_stdio(0);
    int n, k; cin >> n >> k;

    check(k);

    for(int i = 0; i < n; i++){

        int v; cin >> v;
        process(v);

        if( factors.empty() ) break;

    }

    if( factors.empty() )
        cout << "Yes" << endl;
    else
        cout << "No" << endl;

    return 0;
}
