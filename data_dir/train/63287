#include <bits/stdc++.h>

using namespace std;

struct vec
{
    long double x,y;
    bool operator ==(const vec &a) const{
        return x==a.x&&y==a.y;
    }
    bool operator <(const vec &a) const{
        if(a.x!=x) return x<a.x;
        return y<a.y;
    }
    vec operator +(const vec &a) const{
        return {x+a.x,y+a.y};
    }
    vec operator *(const long double &a) const{
        return {x*a,y*a};
    }
    vec operator -(const vec &a) const{
        return {x-a.x,y-a.y};
    }
    vec operator /(const long double &a) const{
        return {x/a,y/a};
    }
    long double len() const{
        return sqrt(x*x+y*y);
    }
    long double dot(const vec &a) const{
        return x*a.x+y*a.y;
    }
    long double crs(const vec &a) const{
        return x*a.y-y*a.x;
    }
    vec proj(const vec &a) const{
        return (a/a.len())*(*this).dot(a)/a.len();
    }
};


struct P
{
    int x,y;
};

bool as(P a,P b)
{
    return a.x<b.x;
}

long long d,x,y,z,mod=998244353;
vector<int> v;
int i,n,m,k,a,b,c;
int e;
int o[1111];
int l[111][11111];
//stack<int> s;
//multiset<int> s[5111];
priority_queue<int,vector<int>,greater<int> > q;
vec u[1];
//char r[51111];
string r;
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
//map<int,int> p,p1;
//v.resize(unique(v.begin(),v.end())-v.begin());

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//rng();


int main()
{
    cin>>r;
    n=0;
    for(int t=0;t<r.size();t++)
    {
        if(r[t]=='v')
        {
            n++;
        }
        else
        {
            v.push_back(max(n-1,0)+m);
            //printf("%d ",v[v.size()-1]);
            m=max(n-1,0)+m;
            n=0;
        }
    }
    v.push_back(max(n-1,0)+m);
    //printf("%d\n",n);
    /*m=0;
    b=v.size()-1;
    for(int t=0;t<r.size();t++)
    {
        if(r[t]=='v')
        {
            n++;
        }
        else
        {

            x+=max(n-1,0)*v[b];
            n=0;
            b--;
        }
    }*/
    for(int h=0;h<v.size()-1;h++)
    {
        x+=(long long)v[h]*(v[v.size()-1]-v[h]);
    }
    printf("%lld",x);
}

