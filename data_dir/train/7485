#include <bits/stdc++.h>
using namespace std;

#define int           long long
#define S             second
#define F             first
#define pb            push_back
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend() 
#define lb            lower_bound
#define si(c)         (int)((c).size())
#define lcm(a, b)      (a * (b / __gcd(a,b)))  
#define inf           (long long )(9e18+1)
#define endl          '\n'
#define mp            make_pair
#define time(s)       (double(clock()-s)/double(CLOCKS_PER_SEC))
#define debug(args...)    _F(#args, args)
#define vi            std::vector<int>
#define pii           pair<int, int> 
#define vpi           vector<pii >

clock_t start;
mt19937_64 rng(chrono::system_clock::now().time_since_epoch().count());

template<typename T> void _F(const char *name, T arg1){
    cerr << name << " = " << arg1 << endl;
}
template<typename T, typename... Args> void _F(const char *names, T arg1, Args... args){
    const char *name = strchr(names, ',');cerr.write(names, name-names) << " = " << arg1 << endl;_F(name+2, args...);
}
template<typename T1, typename T2> istream& operator>>(istream& in, pair<T1, T2> &q){ 
    in >> q.F >> q.S; return in;
}
template<typename T1, typename T2> ostream& operator<<(ostream& out, pair<T1, T2> &q){
    out << q.F << " " << q.S; return out;
}
template< typename T1, typename T2> pair<T1, T2> operator+(pair<T1, T2> p1, pair<T1, T2> p2){
    return {p1.F+p2.F, p1.S+p2.S};
}
template< typename T1, typename T2> pair<T1, T2> operator-(pair<T1, T2> p1, pair<T1, T2> p2){
    return {p1.F-p2.F, p1.S-p2.S};
}

void solve() {
    int n, m;
    cin >> n >> m;
    int a[n+1][m+1];
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= m; j++){
            cin >> a[i][j];
        }
    }
    int dp[n+1][m+1];
    memset(dp, 0, sizeof(dp));
    int len, b;
    int ans = inf;
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= m; j++){
            len = (n-i)+(m-j);
            b = a[i][j]+len;
            // cout << b << endl;
            // b = 9;
            dp[1][1] = 0;
            for(int ii = 1; ii <= n; ii++){
                bool f = 0;
                for(int jj = 1; jj <= m; jj++){
                    if(ii != 1 && jj != 1){
                        dp[ii][jj] = min(dp[ii-1][jj], dp[ii][jj-1]);
                    }
                    else if(ii != 1)
                        dp[ii][jj] = dp[ii-1][jj];
                    else if(jj != 1)
                        dp[ii][jj] = dp[ii][jj-1];
                    if(b-(n-ii)-(m-jj)-a[ii][jj] > 0){
                        dp[ii][jj] = inf;
                    }
                    dp[ii][jj] += abs(b-(n-ii)-(m-jj)-a[ii][jj]);
                    // cout << dp[ii][jj] << " ";
                }//cout << endl;
            }
            //cout << dp[n][m] << " " << i << " "  << j << endl;
            ans = min(ans, dp[n][m]);
        }
    }
    cout << ans << endl;
}

signed main(){

    ios_base::sync_with_stdio(0); 
    cin.tie(0); cout.tie(0);   

    int t = 1;
    start = clock(); 

    cout << fixed << setprecision(20);

    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout);
    freopen("error.txt", "w", stderr);
    #endif
   
    cin >> t;
    
    for(int i = 1; i <= t; ++i){
        //cout << "Case #" << i << ": "; 
        solve();
        //cout << endl;
    }
    //cerr << time(start);
    return 0;
}