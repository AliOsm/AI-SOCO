# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
using namespace std;
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) ((x)&1)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define pb push_back
#define fir first
#define sec second
#define all(x) (x).begin(),(x).end()
#define mem(a,x) memset(a,x,sizeof(a))
#define rep(i,a,b) for (int i=(a); i<=(b); ++i)
#define per(i,a,b) for (int i=(a); i>=(b); --i)
#define rep_it(it,x) for (__typeof((x).begin()) it=(x).begin(); it!=(x).end(); it++)
#define ____ puts("\n_______________\n\n") 
#define debug(x) ____; cout<< #x << " => " << (x) << endl
#define debug_pair(x) cout<<"\n{ "<<(x).fir<<" , "<<(x).sec<<" }\n"
#define debug_arr(x,n) ____; cout<<#x<<":\n"; rep(i,0,n) cout<<#x<<"["<<(i)<<"] => "<<x[i]<<endl
#define debug_arr2(x,n,m) ____; cout<<#x<<":\n"; rep(i,0,n) rep(j,0,m) cout<<#x<<"["<<(i)<<"]["<<(j)<<"]= "<<x[i][j]<<((j==m)?"\n\n":"    ")
#define debug_set(x) ____; cout<<#x<<": \n"; rep_it(it,x) cout<<(*it)<<" "; cout<<endl
#define debug_map(x) ____; cout<<#x<<": \n"; rep_it(it,x) debug_pair(*it)
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef vector<int> vi;
const int oo = /*2 * 1000 * 1000 * 1000*/0x3f3f3f3f;
const ll ooo=9223372036854775807ll; 
const int _cnt = 1000 * 1000 + 7;
const int _p = 1000 * 1000 * 1000 + 7;
const int N=200005; 
const double PI=acos(-1.0);
const double eps=1e-9;
int o(int x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }

void file_put() {
	string s="";
    freopen((s+"filename.in").c_str(), "r", stdin);
    freopen((s+"filename.out").c_str(), "w", stdout);
}

int X,n,a[N],m,x,y,op;

struct P{ int x,y; };

struct node{
	ll ans; int L,R,ln,rn,all; P l[24],r[24];
	node() { ans=all=L=R=ln=rn=0; }
	node(int x,int y) {
		ans=(y<X),all=y; L=R=x;
		ln=rn=1; l[1].x=r[1].x=x,l[0].x=x-1,r[0].x=x+1;
		l[0].y=r[0].y=0; l[1].y=r[1].y=y;
	}
	friend node operator + (const node &a,const node &b) {
		if (a.all==-1) return b;
		if (b.all==-1) return a;
		node c;
		c.ans=a.ans+b.ans;
		c.all=a.all|b.all;
		c.L=a.L,c.R=b.R;
		c.ln=a.ln,c.rn=b.rn;
		memcpy(c.l,a.l,sizeof(a.l));
		memcpy(c.r,b.r,sizeof(b.r));
		int j=0;
		per(i,a.rn,1) {
			for (;j<b.ln && (a.r[i].y|b.l[j+1].y)<X; ++j);
			c.ans+=(ll)(a.r[i-1].x-a.r[i].x)*(b.l[j].x-b.l[0].x);
		}
		rep(i,1,b.ln) c.l[c.ln+=((a.all|b.l[i].y)!=c.l[c.ln].y)]=P{b.l[i].x,a.all|b.l[i].y};
		rep(i,1,a.rn) c.r[c.rn+=((a.r[i].y|b.all)!=c.r[c.rn].y)]=P{a.r[i].x,a.r[i].y|b.all};
		return c;
	}
} t[N<<2];

void build(int k,int l,int r){
	if (l==r) { t[k]=node(l,a[l]); return; }
	int mid=l+r>>1;
	build(k<<1,l,mid),build(k<<1|1,mid+1,r);
	t[k]=t[k<<1]+t[k<<1|1];
}

void update(int k,int l,int r,int pos,int v){
	if (l==r) { t[k]=node(l,v); return; }
	int mid=l+r>>1;
	if (pos<=mid) update(k<<1,l,mid,pos,v); else
		update(k<<1|1,mid+1,r,pos,v);
	t[k]=t[k<<1]+t[k<<1|1];
}

node query(int k,int l,int r,int L,int R) {
	if (L<=l && r<=R) return t[k];
	int mid=l+r>>1;
	node ret=node(-1,-1);
	if (L<=mid) ret=ret+query(k<<1,l,mid,L,R);
	if (R>mid) ret=ret+query(k<<1|1,mid+1,r,L,R);
	return ret;
}

int main() {
    //file_put();
    
    scanf("%d%d%d",&n,&m,&X);
    rep(i,1,n) scanf("%d",&a[i]);
    build(1,1,n);
    while (m--) {
    	scanf("%d%d%d",&op,&x,&y);
    	if (op==1) update(1,1,n,x,y);
    	if (op==2) printf("%lld\n",(ll)(y-x+1)*(y-x+2)/2-query(1,1,n,x,y).ans);
	}
	
    return 0;
}
