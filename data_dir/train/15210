#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<cassert>
#include<cassert>
#include<unordered_map>
#include<unordered_set>
#include<functional>
#include<queue>
#include<stack>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<sstream>
#include<iomanip>
#include<cstdio>
#include<cstdlib>
#include<numeric>
#include<random>
#include<chrono>
#include<bitset>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define pb push_back
#define xx first
#define yy second
#define sz(x) (int)(x).size()
#define gc getchar
#define IO ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define mp make_pair

#ifndef ONLINE_JUDGE
#  define LOG(x) (cerr << #x << " = " << (x) << endl)
#else
#  define LOG(x) ((void)0)
#endif

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const double PI=3.1415926535897932384626433832795;
const ll INF = 1LL<<62;
const ll MINF = -1LL<<62;

template<typename T> T getint() {
	T val=0;
	char c;
	
	bool neg=false;
	while((c=gc()) && !(c>='0' && c<='9')) {
		neg|=c=='-';
	}

	do {
		val=(val*10)+c-'0';
	} while((c=gc()) && (c>='0' && c<='9'));

	return val*(neg?-1:1);
}

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); uniform_int_distribution<int>(0, n-1)(rng)

int n;
int a[200001];
int dp1[200001];
int dp2[200001];
vector<int> adj[200001];
int st1[200001];
void dfs1(int x) {
	st1[x]=1;
	vector<int> lst;
	for(auto i:adj[x]) {
		if(!st1[i]) {
			dfs1(i);
			lst.push_back(i);
		}
	}
	
	int val=(a[x]==0?-1:1);	
	for(int i:lst) {
		if(dp1[i]>0) val+=dp1[i];
	}
	
	dp1[x]=val;
}

int st2[200001];
void dfs2(int x, int par=0) {
	st2[x]=1;
	vector<int> lst;
	for(auto i:adj[x]) {
		if(!st2[i]) {
			lst.push_back(i);
		}
	}
	
	int val=(a[x]==0?-1:1)+(par>0?par:0);
	//~ cerr<<x<<" -> "<<val<<" "<<par<<"\n";
	for(auto i:lst) {
		if(dp1[i]>0) val+=dp1[i];
	}
	
	dp2[x]=val;
	
	
	for(auto i:lst) {
		if(dp1[i]>0) val-=dp1[i];
		dfs2(i, val);
		if(dp1[i]>0) val+=dp1[i];
	}
	
}



int main() {
	IO;
	cin>>n;
	for(int i=1;i<=n;++i) {
		cin>>a[i];
	}
	
	for(int i=1;i<n;++i) {
		int a,b;
		cin>>a>>b;
		adj[a].push_back(b);
		adj[b].push_back(a);
	}
	
	dfs1(1);
	dfs2(1);

	for(int i=1;i<=n;++i) cout<<dp2[i]<<" \n"[i==n]; 
	return 0;
}
