#include <bits/stdc++.h>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
const int MOD = (int)1e9+7;
const int N = (int)1e6+7;

// -------------------------------------------------- 变量 -------------------------------------------------- //

struct Node {
	int c, tmp;
	Node () {}
	Node (int c, int t) : c(c), tmp(t) {}
}a[N];

int n;
vi v[3];

// -------------------------------------------------- 函数 -------------------------------------------------- //

void Init() {
	rep(i, 0, 3) v[i].clear();
	rep(i, 0, n) {
		int c; char s[5];
		scanf("%d%s", &c, s);
		int len = strlen(s);
		int tmp = 0;
		rep(j, 0, len) {
			v[s[j]-'A'].pb(c);
			tmp ^= (1 << (s[j]-'A'));
		}
		a[i] = Node(c, tmp);
	}
}

int Solve() {
	rep(i, 0, 3) sort(all(v[i]));
	if (v[0].empty() || v[1].empty() || v[2].empty()) return puts("-1");
	int ans = INF;
	rep(i, 0, n) {
		//de(a[i].c);
		if (a[i].tmp == 7) {
		//	ok = 1;
			ans = min(ans, a[i].c);
		}
	}
	//if (ok) return printf("%d\n", ans);

	//ok = 0, ans = INF;
	rep(i, 0, n-1) rep(j, i+1, n) if ((a[i].tmp | a[j].tmp) == 7) {
		//ok = 1;
		ans = min(ans, a[i].c + a[j].c);
	}
	//if (ok) return printf("%d\n", ans);
	ans = min(ans, v[0][0] + v[1][0] + v[2][0]);
	return printf("%d\n", ans);
}

// -------------------------------------------------- main -------------------------------------------------- //

int main ()
{
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d", &n)) {
        //if (n == 0) break;
        //static int kase = 0; printf("Case #%d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}