#include <bits/stdc++.h>
using namespace std;
#define ll long long
set < pair <ll, pair<ll,ll> > > a;
set < pair <ll, pair<ll,ll> > >::iterator ii,jj,kk;
vector <ll> ans(100500, -1);
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    #endif
    ll n;
    ll i;
    cin>>n;
    for(i=0; i<n; i++)
    {
        ll x, r;
        cin>>x>>r;
        a.insert( make_pair(x, make_pair(i, r)) );
    }
    ll many = 1e9;
    ll lit = 0;
    pair <ll, pair <ll,ll> > little = make_pair(-many, make_pair(0LL,0LL)), great(make_pair(many, make_pair(0LL,0LL)));
    //a.insert(make_pair(many, make_pair(lit, lit)));
    a.insert(little);
    a.insert(great);
    ll m;
    cin>>m;
    ll total = 0;
    for(i=0; i<m; i++)
    {
       // cout<<"i = "<<i<<endl;
        ll x, y;
        cin>>x>>y;
        pair <ll,pair<ll,ll> > temp = make_pair(x, make_pair(0LL,0LL) );
        a.insert(temp);
        ii = a.find(temp);
        jj = ii;
        kk = ii;
        jj--;
        kk++;
        pair < ll, pair <ll,ll> > levo = (*jj), pravo = (*kk);
       // if (levo.second)
       ll num = levo.second.first;
       if (ans[num] == -1 && levo!=little && levo!=great)
            {
                ll dist = (levo.first - x) * (levo.first - x) + y * y;
                if (dist<=levo.second.second * levo.second.second /*r * r*/)
                {
                    total++;
                    ans[num] = i + 1;
                }
            }
            //////////
            num = pravo.second.first;
       if (ans[num] == -1 && pravo!=little && pravo!=great)
            {
                ll dist = (pravo.first - x) * (pravo.first - x) + y * y;
                if (dist<=pravo.second.second * pravo.second.second/*r * r*/)
                {
                    total++;
                    ans[num] = i + 1;
                }
            }
        a.erase(temp);
    }
        cout<<total<<endl;
        for(i=0; i<n; i++)
            cout<<ans[i]<<" ";

    return 0;
}