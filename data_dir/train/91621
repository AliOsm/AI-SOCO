#include <bits/stdc++.h>

#define ll long long
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mp make_pair
#define ff first
#define ss second

using namespace std;

const double pi=acos(-1);
const int N=(int)1e5+1,mod=1000000007,M=2e9;

int n;
ll r,h,t,ans;
vector<pair<ll,int> > v;

bool cmp(pair<ll,int> x,pair<ll,int> y){
    if(x.ff==y.ff)return x.ss>y.ss;
    return x.ff<y.ff;
}


struct st{
    ll mx[1<<18];

    void update(int x,ll v,int from=0,int to=n-1,int i=0){
        if(x<from||x>to)return ;
        if(from==to){
            mx[i]=v;
            return ;
        }
        int mid=(from+to)>>1,l=2*i+1,r=l+1;
        update(x,v,from,mid,l);
        update(x,v,mid+1,to,r);
        mx[i]=max(mx[l],mx[r]);
    }

    ll getMax(int x,int y,int from=0,int to=n-1,int i=0){
        if(from>y||to<x)return 0;
        if(from>=x&&to<=y)return mx[i];
        int mid=(from+to)>>1,l=2*i+1,r=l+1;
        if(y<=mid)return getMax(x,y,from,mid,l);
        if(x> mid)return getMax(x,y,mid+1,to,r);
        return max(getMax(x,y,from,mid,l),getMax(x,y,mid+1,to,r));
    }

}tree;

int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%I64d%I64d",&r,&h);
        v.pb({h*r*r,i});
    }
    sort(v.begin(),v.end(),cmp);
    for(int i=0;i<n;i++){
        t=tree.getMax(0,v[i].ss);
        tree.update(v[i].ss,t+v[i].ff);
        ans=max(ans,t+v[i].ff);
    }
    printf("%.9f",pi*ans);
    return 0;
}
