#pragma comment (linker, "/STACK:256000000")
 
#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>
 
//#include <random>
 
using namespace std;
 
 
double PI = 3.1415926535897932384626433832795;
double EPS = 1e-2;
 
typedef unsigned int uint32;
typedef long long int64;
typedef unsigned long long uint64;
 
typedef pair<int, int> pii;
const int MAXN = 1000100;
const int MAXC = 1e7;
const int mod = 1e9 + 7;

inline int mul(int a, int b)
{
	if (a < 0)
		a += mod;
	if (b < 0)
		b += mod;
	return (a *(int64) b) % mod;
}
 
inline int sum(int a, int b)
{
	a += b;
	if (a >= mod)
		a -= mod;
	return a;
}
 
inline int sub(int a, int b)
{
	a -= b;
	if (a < 0)
		a += mod;
	return a;
}
 
inline int pw(int base, int deg)
{
	int res = 1;
	while(deg)
	{
		if (deg & 1)
			res = mul(base, res);
		base = mul(base, base);
		deg >>= 1;
	}
	return res;
}

int n;
vector < vector < int > > gr; 
int64 ans = 0;
void dfs(int u, int anc)
{
	for(int i = 0; i < gr[u].size(); ++i)
	{
		int to = gr[u][i];
		if (to == anc)
			continue;
		dfs(to, u);
	}
	int k = gr[u].size();
	ans += k * (int64) (k - 1) / 2;
}

void solve()
{
	cin >> n;
	gr.resize(n);
	for(int i = 0; i < n - 1; ++i)
	{
		int a, b;
		cin >> a >> b;
		a--, b--;
		gr[a].push_back(b);
		gr[b].push_back(a);
	}
	dfs(0, -1);
	cout << ans;
}
 
 
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
    srand(1313);
	
	int t = 1;
	//cin >> t;
	for(int i = 0; i < t; ++i)
	{
		solve();
		//cout << endl;
	}
	
    return 0;
}   