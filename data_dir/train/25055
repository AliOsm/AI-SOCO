#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll N = 2e6 + 10, mod = 1e9 + 7;
ll fact[N], rev[N];

vector<ll> primes(ll n) {
    vector<ll> res;
    for (ll i = 2; i * i <= n; i++) {
        if (n % i == 0) {
            ll cnt = 0;
            while (n % i == 0) {
                cnt++;
                n /= i;
            }
            res.push_back(cnt);
        }
    }
    if (n > 1)
        res.push_back(1);
    return res;
}

ll power(ll n, ll m) {
    ll res = 1;
    if (m) {
        res = power(n, m / 2);
        if (res < 0)
            res += mod;
        res = (res * res) % mod;
        if (res < 0)
            res += mod;
        if (m % 2)
            res = (res * n) % mod;
        if (res < 0)
            res += mod;
    }
    return res;
}

ll c(ll n, ll m) {
    ll res = ((fact[n] * rev[m] % mod) * rev[n - m]) % mod;
    if (res < 0)
        res += mod;
    return res;
}

int main() {
    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
    int q;
    cin >> q;
    fact[0] = 1;
    rev[0] = 1;
    for (int i = 1; i <= 2e6; i++)
        fact[i] = (fact[i - 1] * i) % mod;
    rev[(ll)2e6] = power(fact[(ll)2e6], mod - 2);
    for (int i = 2e6 - 1; i; i--)
        rev[i] = rev[i + 1] * (i + 1) % mod;
    while (q--) {
        ll x, y;
        cin >> x >> y;
        vector<ll> v = primes(x);
        ll ans = power(2, y - 1);
        for (ll i = 0; i < v.size(); i++)
            ans = (ans * c(y + v[i] - 1, y - 1)) % mod;
        if (ans < 0)
            ans += mod;
        cout << ans << "\n";
    }
    return 0;
}
