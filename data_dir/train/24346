/////////////////////////   _LeMur_
#define _CRT_SECURE_NO_WARNINGS
#include <unordered_map>
#include <unordered_set>
#include <functional>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <chrono>
#include <random>
#include <bitset>
#include <cstdio>
#include <vector>
#include <string>
#include <ctime>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <list>
#include <map>
#include <set>

using namespace std;

const int N = 250005;
const int inf = 1000 * 1000 * 1000;
const int mod = 1000 * 1000 * 1000 + 7;

int n , m;

int f[N] , rf[N];

int binpow(int a,int b){
    if(b == 0)return 1;
    if(b % 2)return a * 1ll * binpow(a , b - 1) % m;
    int t = binpow(a , b / 2);
    return t * 1ll * t % m;
}

int main(){
    cin >> n >> m;

    f[0] = rf[0] = 1;
    for(int i=1;i<=n;i++){
        f[i] = f[i - 1] * 1ll * i % m;
        rf[i] = binpow(f[i] , m - 2);
    }

    int pat = 0;
    for(int i=1;i<=n;i++){
        int cnt = (n - i + 1) * 1ll * (n - i + 1) % m;
        int F = f[i] * 1ll * f[n - i] % m;
        pat += F * 1ll * cnt % m;
        pat %= m;
    }

    cout << pat << endl;
    return 0;
}
