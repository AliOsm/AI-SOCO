#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>

typedef long long ll;
using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(int i = (a); i <= (b); i++)
#define fd(i,a,b) for(int i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<int,int>
#define SZ(x) ((int)x.size())
#define vii vector<pair<int,int>>

const int INF = 2000000005;
const ll INFLL = 1000000000000000002ll;
const ll MOD = 1000000007;

inline ll min(ll a, ll b, ll c){return min(min(a,b),c);}
inline ll min(ll a, ll b, ll c, ll d){return min(min(min(a,b),c),d);}
inline ll max(ll a, ll b, ll c){return max(max(a,b),c);}
inline ll max(ll a, ll b, ll c, ll d){return max(max(max(a,b),c),d);}

// -------------------------------------------------------------------------------------------------------------

bool U[1005];
int A[2505], N, K;
vector<int> P;

int main()
{
    f(i,2,1000) if(!U[i])
    {
        P.pb(i);
        for(int k = 2*i; k <= 1000; k += i) U[k] = true;
    }
    f(i,1,SZ(P)-1)
    {
        int a = P[i-1];
        int b = P[i];
        if(a+b+1 <= 1000 && !U[a+b+1]) A[a+b+1] = 1;
    }
    f(i,1,1000) A[i] += A[i-1];
    cin >> N >> K;
    if(A[N] >= K) cout << "YES";
    else cout << "NO";
}
