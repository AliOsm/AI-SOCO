#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif

#include <iostream>
#include <cmath>
#include <iomanip>
#include <string>
#include <cstring>
#include <cstdio>
#include <math.h>
#include <algorithm>
#include <stdio.h>
#include <climits>
#include <stack>
#include <queue>
#include <vector>
#include <set>
#include <sstream>
#include <map>
#include <ctime>
#include <cstdlib>
#include <list>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include<unordered_map>
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
int dx8[] = { 0, 0, 1, -1, 1, -1, 1, -1 };
int dy8[] = { -1, 1, 0, 0, -1, -1, 1, 1 };
int dy[] = { 1, -1, 0, 0 };
int dx[] = { 0, 0, 1, -1 };
int X[6] = { 0, 0, 0, -1, 0, 1 };
int Y[6] = { 0, 0, -1, 0, 1, 0 };
int Z[6] = { 1, -1, 0, 0, 0, 0 };
// start + (end - start) / 2;

#define OO ll(1e18)

int main() {
	int Q, sz = 1, last = 0;;
	double ans = 0;
	vector<pair<int, int>>v;
	v.push_back({ 0,0 });
	scanf("%d", &Q);
	while (Q--) {
		int t;
		scanf("%d", &t);
		if (t == 1) {
			int a, x;
			scanf("%d%d", &a, &x);
			ans += (a*x);
			v[a - 1].second += x;
			if (a == sz)last += x;
		}
		else if (t == 2) {
			int a;
			scanf("%d", &a);
			ans += a;
			sz++;
			last = a;
			v.push_back({ a,0 });
		}
		else {
			ans -= last;
			sz--;
			v[v.size() - 2].second += v[v.size() - 1].second;
			v.pop_back();
			last = v[v.size() - 1].first + v[v.size() - 1].second;
		}
		printf("%.6f\n", ans / sz);
	}
}