#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int N = 4e6 + 100, MOD = 1000 * 1000 * 1000 + 7;

int sum(int a, int b) {
	a += b;
	if(a < 0)
		a += MOD;
	else if(a >= MOD)
		a -= MOD;
	return a;
}

void _sum(int &a, int b) {
	a = sum(a, b);
}

int mul(int a, int b) {
	return 1LL * a * b % MOD;
}

int POWER(int a, int b) {
	int res = 1;
	while(b) {
		if(b & 1)
			res = mul(res, a);
		a = mul(a, a);
		b >>= 1;
	}
	return res;
}

int n, k, now, ans, cnt[N], add[N], power[N];
bool bad[N];

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	for (int i = 2; i < N; i++)
		if(cnt[i] == 0)
			for (int j = i; j < N; j += i)
				cnt[j]++;
	for (int i = 2; i * i < N; i++)
		for (int j = i * i; j < N; j += i * i)
			bad[j] = true;
	
	cin >> n >> k;
	for (int i = 0; i < N; i++)
		power[i] = POWER(i, n);
	for (int i = 1; i <= k; i++) {
		if(bad[i])
			continue;
		for (int j = i; j <= k; j += i) {
			int val = (cnt[i] & 1? -power[j / i]: power[j / i]);
			val = sum(val, 0);
			_sum(add[j], val);
			_sum(add[j + i], -val);
		}
	}
	for (int i = 1; i <= k; i++) {
		now = sum(now, add[i]);
		_sum(ans, now ^ i);
	}
	cout << ans;
	return 0;
}
