#include<bits/stdc++.h>
using namespace std;

#define LL                  long long
#define ull                 unsigned long long LL
#define scl(n)              scanf("%lld", &n)
#define scf(n)              scanf("%lf", &n)
#define sci(n)              scanf("%d", &n)
#define scii(n,m)           scanf("%d %d",&n,&m)
#define sciii(n,m,p)        scanf("%d %d %d",&n,&m,&p)

#define MOD                 1000000007
#define MODP                99999999999973LL
#define pb                  push_back
#define mp                  make_pair
#define pp                  pair<LL,LL>
#define memo(a,b)           memset(a,b,sizeof(a))
#define INF                 1e9
#define EPS                 1e-8
#define Pi                  acos(-1.0)
LL bigmod(LL b, LL p, LL md){if(p==0) return 1;if(p%2==1){ return ((b%md)*bigmod(b,p-1,md))%md;} else {LL y=bigmod(b,p/2,md);return (y*y)%md;}}
#define N 2000

int main()
{
    LL n;
    cin>>n;

    int id=0;

    vector<LL>v;
    int op=0;
    while(1)
    {


        int f=1;
        LL c=0;
        LL m=n;
        LL cnt=0;
        while(m)
        {
            if(m%2) cnt++;
            else
                f=0;
            c++;
            m=m>>1;

        }

        if(f)
            break;

        if(id%2==0)
        {
            n=n  ^ ((1LL<<c)-1);
            v.pb(c);
            op++;
        }
        else
        {
            n=n+1;
            op++;
        }
        id++;

    }

        cout<<op<<endl;
        for(int i=0;i<v.size();i++)
            cout<<v[i]<<" ";






    return 0;
}

/* LL dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* LL dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* LL dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* LL dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction

