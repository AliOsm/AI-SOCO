#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>


#define LL long long
#define uLL unsigned long long
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define vI vector<int>
#define vvI vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
#define forI(tmp) for(auto(it)=(tmp).begin();(it)!=(tmp).end();(it)++)
#define PI 3.14159265356
#define sc(a) scanf("%d", &(a))
const LL mod = 1000000007;
const LL Inf = 2 * 1e9;
const LL p = 31;
using namespace std;
LL gcd(LL a, LL b) {
	if (b == 0)
		return a;
	else
		return gcd(b, a % b);
}
int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	int n;
	cin >> n;
	vI a(n), b(n), tmpa(6), tmpb(6);

	forn(i, 0, n) {
		cin >> a[i];
		tmpa[a[i]]++;
	}
	forn(i, 0, n) {
		cin >> b[i];
		tmpb[b[i]]++;
	}
	int ans1 = 0, ans2 = 0;
	forn(i, 1, 6) {
		if (tmpa[i] != tmpb[i]) {
			int m = tmpa[i] + tmpb[i];
			if (m % 2) {
				cout << -1;
				return 0;
			}
			m /= 2;
			if (tmpa[i] > m) {
				ans1 += tmpa[i] - m;
			}
			else ans2 += tmpb[i] - m;
		}
	}
	if (ans1 != ans2) {
		cout << -1;
		return 0;
	}
	cout << ans1;
	return 0;
}