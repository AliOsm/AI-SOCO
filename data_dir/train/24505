#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
 
using namespace std;
using namespace __gnu_pbds;
 
#define debug(s) cerr << #s << " = " << s << '\n'
#define all(v) (v).begin(), (v).end()
#define mem(a,val) memset(a, val, sizeof a)
 
#define maxn 200010
#define INF 1e15
#define eps 1e-9
#define pi acos(-1.0)
#define ff first
#define ss second
#define endl '\n'
typedef long long ll;
 
//typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

int n;
int arr[maxn], mx, mxnum;
map<int, int> mp;
set<int> s;

bool ok(int len) {
  bool flag1 = false;
  if (len <= mx) flag1 = true;
  if (!flag1) return false;
  int cnt = 0;
  if (mx > len) cnt = 1;
  cnt += (s.size() - 1);
  return (cnt >= len);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int tc;
  cin >> tc;
  while (tc--) {
    mp.clear();
    s.clear();
    cin >> n;
    mx = 0, mxnum = -1;
    for (int i = 1; i <= n; ++i) {
      cin >> arr[i];
      mp[arr[i]]++;
      if (mp[arr[i]] > mx) {
        mx = mp[arr[i]];
        mxnum = arr[i];
      }
      s.insert(arr[i]);
    }
    int lo = 1, hi = n, ans = 0;
    while (lo <= hi) {
      int mid = (lo + hi) >> 1;
      if (ok(mid)) {
        ans = mid;
        lo = mid + 1;
      }
      else hi = mid - 1;
    }
    cout << ans << endl;
  }
}