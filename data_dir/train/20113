#include<bits/stdc++.h>
//#define DEBUG
#define FOR(i,n) for(int i=1;i<=n;i++)
#define FORZ(i,n) for(int i=0;i<n;i++)
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define piii pair<pair<int,int>,int>
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define SIZE 32622
#define MOD 1000000007  
#define LD long long double
#define bpc __builtin_popcount
#define gentum getnum
using namespace std;
 
inline ll getnum()
{
    char c = getchar();
    ll num,sign=1;
    for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
    for(num=0;c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}

int A[200005];
int Tree[200005][22];
int Pow[22],lg[200005];
int Nxt[200005];

int givemin(int l,int r)
{
	int p = lg[r-l+1];
	return min(Tree[l][p],Tree[r-Pow[p]+1][p]);
}

int main()
{
    Pow[0]=1;for(int i=1;i<=20;i++)Pow[i]=2*Pow[i-1];
    lg[1]=0;for(int i=2,j=0;i<=200002;i++){if(i>Pow[j])j++;lg[i]=j-1;}

    int n=getnum();
    for(int i=1;i<=n;i++)
    {
        A[i]=getnum();
        A[i+n]=A[i];
    }
    A[n+n+1]=INT_MAX/2;

    n*=2;
    for(int i=1;i<=n;i++)
    {
        Tree[i][0]=A[i];
    }

    for(int p=1;p<=20;p++)
    {
        for(int i=1;i<=n;i++)
        {
            if(Pow[p-1]+i>n)Tree[i][p]=Tree[i][p-1];
            else Tree[i][p]=min(Tree[i][p-1],Tree[i+Pow[p-1]][p-1]);
        }
    }

    n/=2;
    for(int i=1;i<=n;i++)
    {
        int l=i,r=i+n-1;

        while(l<r)
        {
            int m=(l+r)/2;           

            if(givemin(i,m)*2<A[i])r=m;
            else l=m+1;
        }

        if(A[r]*2>=A[i])r=10*n;        
        Nxt[i]=r;
        Nxt[i+n]=r+n;
    }

    for(int i=2*n-1;i>=1;i--)
    {
        Nxt[i]=min(Nxt[i],Nxt[i+1]);
    }

    for(int i=1;i<=n;i++)
    {
        if(Nxt[i]>4*n)printf("-1 ");
        else printf("%d ",Nxt[i]-i);
    }
}