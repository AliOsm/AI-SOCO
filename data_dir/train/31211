#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector<ii> vii;
typedef map<ll,ll> mll;
typedef vector<bool> vb;

#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash
#define endl "\n"
#define prina(arr,dau,cuoi) FTB(mmczmp,dau,cuoi)cout<<arr[mmczmp]<<" ";cout<<endl;
#define debug cout<<"debug\n"
#define pb push_back
#define pbg(ke,u,v) ke[u].pb(v);ke[v].pb(u);
#define fi first
#define se second
#define pi acos(-1.0)
#define lbnd(f,s,gt) lower_bound(f,s,gt)
#define ubnd(f,s,gt) upper_bound(f,s,gt)
#define all(s) s.begin(),s.end()
#define bitcount(n) __builtin_popcountll(n)
#define FTB(i,a,b) for(ll i=a,_b=b;i<=_b;i++)
#define FT(i,a,b) for(ll i=a,_b=b;i<_b;i++)
#define FGB(i,a,b) for(ll i=a,_b=b;i>=_b;i--)
#define FG(i,a,b) for(ll i=a,_b=b;i>_b;i--)
/////////////////////////////////////////////


ll n,m,h[]={1,-1,0,0},c[]={0,0,-1,1},deg[2005][2005];
char s[2005][2005];
bool ok[2005][2005];

bool is(ll a,ll b){
    return 1<=a&&a<=n&&1<=b&&b<=m&&s[a][b]=='.'&&ok[a][b]==false;
}
vector<pair<pair<ll,ll>,pair<ll,ll>>> res;
queue<ii> q;

void Solve(){
    cin>>n>>m;
    FTB(i,1,n) FTB(j,1,m){
        cin>>s[i][j];
        if(s[i][j]=='*') ok[i][j]=true;
    }
    FTB(i,1,n) FTB(j,1,m){
        if(s[i][j]=='*') continue;
        FT(g,0,4){
            deg[i][j]+=is(i+h[g],j+c[g]);
        }
        if(deg[i][j]==1){
            q.push({i,j});
        }
    }
    while(q.size()){
        auto [x,y]=q.front();q.pop();
        if(ok[x][y]==true) continue;
        ok[x][y]=true;
        bool ha=true;
        FT(g,0,4){
            ll a=x+h[g],b=y+c[g];
            if(is(a,b)){
                ha=false;
                res.pb({{x,y},{a,b}});
                ok[a][b]=true;
                FT(g,0,4){
                    ll aa=a+h[g],bb=b+c[g];
                    if(is(aa,bb)){
                        deg[aa][bb]--;
                        if(deg[aa][bb]==1) q.push({aa,bb});
                    }
                }
                break;
            }

        }
        if(ha) {cout<<"Not unique";return;}
    }
    FTB(i,1,n) FTB(j,1,m){
        if(!ok[i][j]) {cout<<"Not unique";return;}
    }
    for(auto [aa,bb]:res){
        auto [x,y]=aa;
        auto [a,b]=bb;
        if(x==a){
            s[x][min(y,b)]='<';
            s[x][max(y,b)]='>';
        }
        else{
            s[min(x,a)][y]='^';
            s[max(x,a)][y]='v';
        }
    }
    FTB(i,1,n){
        FTB(j,1,m) cout<<s[i][j];
        cout<<endl;
    }

}

int main(){
    ios::sync_with_stdio(0);cin.tie(0);

    //freopen("1.in","r",stdin);
    //freopen("1.out","w",stdout);


    int Test_numbers=1;
    //int Test_numbers;cin>>Test_numbers;

    while(Test_numbers--) Solve();

    //cerr << "\nTime run: " << 1000 * clock() / CLOCKS_PER_SEC << "ms\n";

	return 0;
}
