         /*"Success isn't permanent, failure isn't fatal,
                                      it's the courage to continue that counts"*/
#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
//using namespace __gnu_pbds;
using namespace std;
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
#define ll long long 
#define scn(n) scanf("%d",&n)
#define lscn(n) scanf("%lld",&n)
#define lpri(n) printf("%lld",n)
#define pri(n) printf("%d",n)
#define pln() printf("\n")
#define priln(n) printf("%d\n",n)
#define lpriln(n) printf("%lld\n",n)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define pb push_back     
#define mp make_pair
#define F first
#define S second
#define gcd __gcd
#define inf INT_MAX
#define ninf INT_MIN
const int mod=1e9+7;         
const int N=2e5+4;

int main()
{
	int t;

	scn(t);

	while(t--)
	{
		ll a,b,q;

		lscn(a); lscn(b); lscn(q);

		if(a>b)
		swap(a,b);

		ll lcm=(a*b)/gcd(a,b);

		while(q--)
		{
			ll l,r;

			lscn(l); lscn(r);

			ll ans=r-l+1,sub=0;

			//cout<<b<<endl;

			for(ll i=0;i<b;i++)
			{
				ll here=0;

				if(r>=i)
				here+=(((r-i)/lcm)+1);//,cout<<i<<" "<<(((r-i)/lcm)+1)<<" ";

				if(l-1>=i)
				here-=(((l-1-i)/lcm)+1);//,cout<<(((l-i)/lcm)+1)<<endl;

				//if(i==0 and l==0)
				//here--;

				//cout<<i<<" "<<here<<endl; 

				sub+=here;

				//if(sub==0)
				//priln(i);

				//cout<<lcm<<" "<<i<<" "<<here<<" "<<sub<<endl;
			}

			ans-=sub;

			printf("%lld ",ans);
		}

		printf("\n");
	}

    return 0; 
}