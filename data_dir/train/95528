#include <iostream>
#include <bits/stdc++.h>

using namespace std;
int n,m,k,dp[510][510],cost[510][510],pre[510];
char a;
const int Inf = 1e9;
vector < int > v;

int Rec(int i , int k){

    if(i == n)   return 0;

    if(dp[i][k] != -1)  return dp[i][k];

    int Res = Inf;
    for(int j=0;j<=m;j++)  if(k - j>=0)  Res = min(Res , cost[i][j] + Rec(i + 1 , k - j));

    return dp[i][k] = Res;
}

int main()
{
    memset(dp , -1 , sizeof(dp));
    cin >> n >> m >> k;
    for(int i=0;i<n;i++)
        for(int j=0;j<=k;j++)
            cost[i][j] = Inf;
    for(int i=0;i<n;i++){
        for(int j=1;j<=m;j++){
            cin >> a;
            if(a == '1')  v.push_back(j) , pre[j]++;
            pre[j]+=pre[j - 1];
        }
        if(!v.size())  cost[i][0] = 0;
        for(int j=0;j<v.size();j++){
            for(int q=j;q<v.size();q++){
                int idx = pre[v[j] - 1] + (pre[m] - pre[v[q]]);
                cost[i][idx] = min(cost[i][idx] , v[q] - v[j] + 1);
            }
            cost[i][v.size()] = 0;
        }
        memset(pre , 0 , sizeof(pre));
        v.clear();
    }
    cout << Rec(0 , k);
    return 0;
}
