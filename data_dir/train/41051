#include <bits/stdc++.h>
using namespace std;
#define ll long long
struct match
{
    string team1, team2;
    int goals1, goals2;
};

match f(string s)
{
    match p;
    int i,n = s.size(),pos;
    string emp = "";
    p.goals2 =  s[n-1]-'0';
    p.goals1 =  s[n-3]-'0';
    for(i=0; i<n; i++)
        if (s[i] != ' ')
        {
            emp+=s[i];
        }
        else
        {
            pos = i;
            break;
        }
        p.team1 = emp;
        emp = "";
        for(i=pos+1; i<n; i++)
        {
         if (s[i] != ' ')
        {
            emp+=s[i];
        }
        else
        {
            pos = i;
            break;
        }
        }
        p.team2 = emp;
        return p;
}

struct table
{
    string s;
    int point, score, conc, game;
};
bool operator <(table a,table b)
{
    if (a.point<b.point) return true;
    if (a.point>b.point) return false;
    if (a.score-a.conc<b.score-b.conc) return true;
    if (a.score-a.conc>b.score-b.conc) return false;
    if (a.score<b.score) return true;
    if (a.score>b.score) return false;
    if (a.s>b.s) return true;
    if (a.s<b.s) return false;
}
vector <table > a(4);
set <string > already;
set <string > ::iterator ii;

void simulation(ll i, ll j, ll x, ll y)// добавить команде на i месте x голов и 3 очка, а команде на j месте y голов и 0 очков
{
        vector <table > b(4);
        b = a;
        b[i].point+=3;
        b[i].score+=x;
        b[i].conc+=y;
        b[j].point+=0;
        b[j].score+=y;
        b[j].conc+=x;
        sort(b.begin(), b.end());
        reverse(b.begin(), b.end());
        if (b[0].s == "BERLAND" || b[1].s == "BERLAND")
        {
/*
            for(ll t=0; t<4; t++)
                cout<<b[t].s<<" "<<b[t].point<<" "<<b[t].score<<" "<<b[t].conc<<endl;
            cout<<endl;
*/
            cout<<x<<":"<<y;
            exit(0);
        }

}

int main()
{
  //  freopen("input.txt","r",stdin);
    string s;
    int i, j,nx = 0;
    match q;
    for(i=0; i<5; i++)
    {
        getline(cin,s);
        q = f(s);
      //  cout<<q.team1<<" "<<q.team2<<" "<<q.goals1<<" "<<q.goals2<<endl;
        ///////////////////////////////////////////////////////////////////////////////
        if ( already.find(q.team1) == already.end()) // такой команды ещё нет
        {
          //  cout<<"new team 1"<<endl;
            already.insert(q.team1);
            a[nx].s = q.team1;
            a[nx].score = q.goals1;
            a[nx].conc = q.goals2;
            a[nx].game = 1;
            if (q.goals1>q.goals2) a[nx].point = 3;
                else if (q.goals1 == q.goals2) a[nx].point = 1;
                    else a[nx].point = 0;
            nx++;
        }
        else
        {
            //cout<<"old team 1"<<endl;
            for(j=0; j<4; j++)
                if (a[j].s == q.team1)
            {
                a[j].score += q.goals1;
            a[j].conc += q.goals2;
            a[j].game++;
            if (q.goals1>q.goals2) a[j].point += 3;
                else if (q.goals1 == q.goals2) a[j].point += 1;
                    else a[j].point += 0;
            }
        }
        ////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////
        if ( already.find(q.team2) == already.end()) // такой команды ещё нет
        {
         //   cout<<"new team 2"<<endl;
            already.insert(q.team2);
            a[nx].s = q.team2;
            a[nx].score = q.goals2;
            a[nx].conc = q.goals1;
            a[nx].game = 1;
            if (q.goals2>q.goals1) a[nx].point = 3;
                else if (q.goals1 == q.goals2) a[nx].point = 1;
                    else a[nx].point = 0;
            nx++;
        }
        else
        {
          //  cout<<"old team 2"<<endl;
            for(j=0; j<4; j++)
                if (a[j].s == q.team2)
            {
                a[j].score += q.goals2;
            a[j].conc += q.goals1;
            a[j].game++;
            if (q.goals2>q.goals1) a[j].point += 3;
                else if (q.goals1 == q.goals2) a[j].point += 1;
                    else a[j].point += 0;
            }
        }
        //////////////////////////////////////////////////////////
    }
    sort(a.begin(), a.end());
    /*
    for(i=0; i<4; i++)
        cout<<a[i].s<<" "<<a[i].point<<" "<<a[i].score<<" "<<a[i].conc<<" "<<a[i].game<<endl;
        */
        // ищем берляндию
        ll pos1, pos2;
        for(i=0; i<4; i++)
        {
            if (a[i].s == "BERLAND") pos1 = i;
            else if (a[i].game == 2) pos2 = i;
        }
    for(ll dif = 1; dif<=100; dif++)
    {
        for(ll second = 0; second<=100; second++)
            simulation(pos1,pos2, second+dif, second);
    }
    cout<<"IMPOSSIBLE";
    return 0;
}
