// https://serhatgiydiren.github.io/

#include <bits/stdc++.h>

using namespace std;

const int M=55;

void solve(const int &test_id)
{
 int n,m,a=0,b=0;
 bool found=false;
 cin >> n >> m;
 int x[M][M],y[M][M];
 vector < pair < int , int > > res;
 for(int i=0;i<M;i++) for(int j=0;j<M;j++) x[i][j]=y[i][j]=0;
 for(int i=0;i<n;i++) for(int j=0;j<m;j++) cin >> x[i][j];
 while(true)
 {
  found=true;
  for(int i=0;i<n;i++) for(int j=0;j<m;j++) if (x[i][j]!=y[i][j]) { found=false; break; }
  if (found) break;
  if (b+1==m)
  {
   a++;
   b=0;
  }
  if (a+1==n) break;
  if (x[a][b]==x[a][b+1] && x[a][b]==x[a+1][b] && x[a][b]==x[a+1][b+1] && x[a][b]==1)
  {
   res.push_back(make_pair(a+1,b+1));
   for(int i=a;i<a+2;i++) for(int j=b;j<b+2;j++) y[i][j]=x[i][j];
  }
  b++;
 }
 if (found)
 {
  cout << res.size() << endl;
  for(unsigned i=0;i<res.size();i++) cout << res[i].first << " " << res[i].second << endl;
 }
 else cout << -1 << endl;
}

void solve_cases()
{
 int test_cases=1;
 //cin >> test_cases;
 for(int i=1;i<=test_cases;i++) solve(i);
}

void fast_io()
{
 ios::sync_with_stdio(false);
 cin.tie(0);
 cout.tie(0);
 cout << fixed << setprecision(15);
 cerr << fixed << setprecision(15);
}

int main()
{
 fast_io();
 solve_cases();
 return EXIT_SUCCESS;
}
