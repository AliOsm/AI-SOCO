/**
    Was it fate that made you lower your head, or was it yourself ?

    স্বপ্ন দেখার খোলা চোখে
    হয়না সাহস আর মনে
    করি না কিছু পাওয়ার আশা

    ব্যর্থ আমার প্রার্থনারা
    আজ আমি, সব হারানো,
    আমি শূন্যতায় ভেসে, হাহাকার দেখি
    লাগে ভয়, যেন আমার,
    দেখা হলনা আলো, সুধায় অন্ধকার ...
    কেউ বোঝেনি আমায়, চেনেনি তো কেউ,
    দেখেও কতবার তবু দেখেনি কেউ
    মোর সত্য কল্পনা যতো বাস্তবতা মিথ্যে ততো
    তাই আমি, বৃষ্টি এলেই,
    পাহাড়ের চূড়ায় বসে বর্ষায় ভিজি
    ভাঙ্গলে মেঘ, পারি যেতেও আকাশ,
    শুকাতে রোদের তীরে নিজেকে আমি
    ফেরা হলো না ঘরে, নাহি ফিরলো ঘর দিকে আমার
    এসে পথেরি মাঝে, পেছনে তাকিয়ে ফিরে আবার ...
    হেটে যাই, আমি খুজতে কিছু
    আমি আজও জানিনা, কিসেরি পিছু ...
    সাথী রয়, কস্ট আমার,
    সে নেয় না তো বিদায়, দেয় নাতো বিদায়...
    নেয় নাতো বিদায়...

    আমি মিথ্যে বলেছি
    কতো মিথ্যে বলেছি নিজেকে
    এক রূপকথার মত
    বদলে যাবে এই জীবন শেষে ...
    আজ আমি, ছন্নছাড়া,
    আমি এক দিশেহারা লুকিয়ে মরি
    জানবে না, এই নেশার মায়া,
    কত যে বড় বোঝা, কত যে বোঝা ...
    নেশার মায়া, কত যে বোঝা,
    নেশার মায়া, কত যে বোঝা...
    নেশার মায়া, কত যে বোঝা...
    নেশার মায়া...

**/
#include <bits/stdc++.h>
using namespace std;

using ll = long long;
const int sz = 1e5 + 10;
ll ar[sz];
int main() {
    #ifdef CLown1331
        freopen( "gen_in.txt","r",stdin );
//        freopen( "gen_out.txt","w+",stdout );
    #endif /// CLown1331
    int n;
    ll x, k, ans;
    while( scanf( "%d %lld %lld", &n, &x, &k ) == 3 ) {
        for( int i=0; i<n; i++ ) {
            scanf( "%lld", &ar[i] );
        }
        sort( ar, ar + n );
        ans = 0;
        for( int i=0; i<n; i++ ) {
            ll up, lw;
            ll up_koita, lw_koita;
            if( ar[i] % x == 0 ) {
                up_koita = k;
                up = up_koita * x + ar[i];
                up--;
                if( ar[i] % x != 0 ) up += x;
                lw_koita = k;
                if( ar[i] % x == 0 ) lw_koita--;
                lw = x * lw_koita + ar[i];
            }
            else {
                ll h = ( ( ar[i] / x ) + 1 ) * x;
                up_koita = k - 1;
                up = up_koita * x + h;
                up--;
                up += x;
                lw_koita = k;
                lw_koita--;
                lw = x * lw_koita + h;
            }
            if( !k ) {
                if( ar[i] % x == 0 ) continue;
                ll nxt = ( ( ar[i] / x ) + 1 ) * x;
                lw = ar[i];
                up = ( nxt - 1 );
            }
            ans += upper_bound( ar, ar + n, up ) - lower_bound( ar, ar + n, lw );
//            cerr << ar[i] << ": " << lw << " " << up << " " << ( upper_bound( ar, ar + n, up ) - lower_bound( ar, ar + n, lw ) ) << "\n";
        }
        printf( "%lld\n", ans );
        fprintf( stderr, "-----------\n" );
    }
    return 0;
}
