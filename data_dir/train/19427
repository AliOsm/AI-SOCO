#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const int N = 1e6 + 100;

const int B = 30;


int query(int a, int b) {
    cout << "? " << a << " " << b << endl;
    int x = 13, y = 11;
    int flag;
    cin >> flag;

//    if((x^a) > (y^b)) flag = 1;
//    else if((x^a) == (y^b)) flag = 0;
//    else flag = -1;

    return flag;
}

int eq[30];
int c, d;

void solve() {
    for(int bit = B-1; bit >= 0; bit--) {
        if(eq[bit] == 0) continue;
        int f = query(c^(1<<bit), d);
        if(f == -1) {
            c ^= (1<<bit);
            d ^= (1<<bit);
        }
    }
    cout << "! " << c << " " << d << endl;
    exit(0);
}


int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    // freopen("in.txt", "r", stdin);

    bool a_b;
    int f = query(0,0);
    if(f == 0) {
        for(int bit = 0; bit < B; bit++) {
            eq[bit] = 1;
        }
        solve();
    }
    else if(f == 1) {
        a_b = 1;
    }
    else {
        a_b = 0;
    }

    c = 0, d = 0;

    for(int bit = B-1; bit >= 0; bit--) {
        c ^= (1<<bit), d ^= (1<<bit);
        int f = query(c, d);
        if(a_b) {
            if(f == 1) {
                eq[bit] = 1;
                c ^= (1<<bit);
                d ^= (1<<bit);
            }
            else {
                d ^= (1<<bit);
                int ff = query(c, d);
                if(ff == 0) {
                    for(int b = 0; b < bit; b++) {
                        eq[b] = 1;
                    }
                    solve();
                }
                else if(ff == 1) {
                    a_b = 1;
                }
                else {
                    a_b = 0;
                }
            }
        }
        else {
            if(f == -1) {
                eq[bit] = 1;
                c ^= (1<<bit);
                d ^= (1<<bit);
            }
            else {
                c ^= (1<<bit);
                int ff = query(c, d);
                if(ff == 0) {
                    for(int b = 0; b < bit; b++) {
                        eq[b] = 1;
                    }
                    solve();
                }
                else if(ff == 1) {
                    a_b = 1;
                }
                else {
                    a_b = 0;
                }
            }
        }
    }

//    for(int bit = B-1; bit >= 0; bit--) {
//        cout << eq[bit] << " ";
//    }

//    assert(1 == 0);

    return 0;
}

