#include<bits/stdc++.h>
#define MOD (ll)(1e9+7)
#define MAX (ll)(1e7+3)
using namespace std;
using ll = long long;
ll ch[MAX] = {};
vector <ll> prime;
void sieve () {
	for (ll i = 2; i < sqrt(MAX); i++) {
		if (!ch[i]) {
			for (ll j = i * 2; j < MAX; j += i) {
				ch[j] = 1;
			}
		}
	}
	for (ll i = 2; i < MAX; i++) {
		if (!ch[i]) {
			prime.push_back (i);
		}
	}
	fill (ch, ch + MAX, 0);
}
int main () {

    ios_base::sync_with_stdio(false);
	cin.tie (NULL);
	sieve();
	ll n;
	cin >> n;
	ll ar[n];
	for (ll i = 0; i < n; i++) {
		cin >> ar[i];
		ch[ar[i]]++ ;
	}	
	ll chh[prime.size ()] = {};
	for (ll i = 0; i < prime.size (); i++) {
		if (i) {
			chh[i] = chh[i - 1];
		}
		for (ll j = prime[i]; j < MAX; j += prime[i]) {
			if (ch[j]) {
				chh[i] += ch[j];
			}
		}
	}
	ll m;
	cin >> m;
	for (ll i = 0; i < m; i++) {
		ll a, b;
		cin >> a >> b;
		if (a > MAX - 3) {
			cout << "0\n";
			continue;
		}
		b = min (MAX - 3, b);
		ll st = lower_bound (prime.begin(), prime.end(), a) - prime.begin();
		ll en = upper_bound (prime.begin(), prime.end(), b) - prime.begin() - 1;
		cout << chh[en] - (st > 0 ? chh[st - 1] : 0) << "\n";
	}
}
