#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<ll> vi;
typedef vector<ll> vll;
typedef vector<vi> vvi;
typedef pair<int, int> pii;
typedef vector<pii> vii;
typedef vector<bool> vb;
typedef vector<string> vs;
const int di[] = { -1, 0, 1, 0, -1, 1, 1, -1 };
const int dj[] = { 0, 1, 0, -1, -1, 1, -1, 1 };
const ll MOD = 1e9 + 7;
const ll INF = 1e9;
const long double EPS = 1e-7;
#define all(n) n.begin(),n.end()

vi primeFactorize(int n) {
	vi ret;
	while (n % 2 == 0) {
		ret.push_back(2);
		n /= 2;
	}
	for (int i = 3; i * i <= n; i += 2)
		while (n % i == 0)
			ret.push_back(i), n /= i;
	if (n > 2) ret.push_back(n);
	sort(all(ret));
	return ret;
}

int solve2(int n) {
	vi fact = primeFactorize(n);
	if (fact.size() == 1) return INF;
	int ret = n - fact.back() + 1;
	//for (int i = n; i > n - fact.back(); i--) {
	//	ret = min(ret, i);
	//}
	return ret;
}

int solve(int n) {
	vi fact = primeFactorize(n);
	int ret = n;
	for (int i = n; i > n - fact.back(); i--) {
		ret = min(ret, solve2(i));
	}
	return ret;
}

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	int n; cin >> n;
	cout << solve(n) << endl;
	cin.ignore(), cin.get();
}
