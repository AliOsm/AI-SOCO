#include<bits/stdc++.h>
#include<ext/numeric>
using namespace std;
using namespace __gnu_cxx;

vector<vector<int> > v(1005);
pair<int, int> p1, p2;

bool sq(int i) {
    int t = sqrt(i);
    return t * t == i;
}
void preCalc() {
    for (int i = 1; i < 1005; ++i)
        for (int j = 1; j < 1005; ++j)
            if (sqrt(i * i + j * j) < 1005 && sq(i * i) && sq(j * j)
                    && sq(i * i + j * j))
                v[sqrt(i * i + j * j)].push_back(i);
}
bool nonZero() {
    return p1.first && p2.first && p1.second && p2.second;
}
bool slope() {
    double x = p1.first, y = p1.second, x2 = p2.first, y2 = p2.second;
    return (y / x) * (y2 / x2) == -1;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
#endif
    int a, b;
    scanf("%d%d", &a, &b);
    preCalc();
    for (int i = 0; i < (int) v[a].size(); ++i)
        for (int j = 0; j < (int) v[b].size(); ++j) {
            p1.first = v[a][i], p2.first = -v[b][j];
            p1.second = sqrt(a * a - v[a][i] * v[a][i]), p2.second = sqrt(
                    b * b - v[b][j] * v[b][j]);
            if (nonZero() && p1.first != p2.first && p1.second != p2.second) {
                if (slope()) {
                    printf("YES\n0 0\n%d %d\n %d %d", p1.first, p1.second,
                            p2.first, p2.second);
                    return 0;
                }
            }
        }
    puts("NO");
}
