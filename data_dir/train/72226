#pragma comment(linker, "/STACK:268435456")

#include<iostream>
#include<cstdio>

#include<string>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<stack>

#include<iomanip>
#include<memory.h>
#include<algorithm>
#include<cstring>
#include<ctime>
#include<cmath>
#include<cassert>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); ++i)
#define for1(i, n) for(int i = 1; i < (int)(n); ++i)
#define forr(i, n) for(int i = int(n) - 1; i >= 0; --i)
#define fore(i, a, b) for(int i = int(a); i <= int(b); ++i)
#define correct(x, y, n, m) (0 <= x && x < n && 0 <= y && y < m)
#define X first
#define Y second
#define all(a) a.begin(), a.end()
#define pb push_back
#define mp make_pair
#define sz(v) (int)(v.size())
#define hash archash
#define next arcnext
#define link arclink
#define y0 arcy0
#define y1 arcy1
#define log2 arclog2

template<typename T> inline T abs(T a){ return ((a < 0) ? -a : a); }
template<typename T> inline T sqr(T a){ return a * a; }
template<class T> T gcd(T a, T b) { return a ? gcd (b % a, a) : b; }
template<class T> T lcm(T a, T b) { return a / gcd (a, b) * b; }
template<class T> T sign(T a) { return a > 0 ? 1 : (a < 0 ? -1 : 0); }

template<typename A, typename B> inline ostream& operator<< (ostream& out, const pair<A, B>& p) { return out << p.X << " " << p.Y << " "; }
template<typename T> inline ostream& operator<< (ostream& out, const vector<T>& a) { forn(i, sz(a)) { if (i) out << ' '; out << a[i]; } return out << " "; }
template<typename T> inline ostream& operator<< (ostream& out, const set<T>& a) { return out << vector<T>(all(a)); }

typedef long long li;
typedef unsigned long long uli;
typedef long double ld;
typedef pair <int, int> pt;
typedef vector <int> vi; 
typedef vector <vector <int> > vvi;
typedef vector <pair <int, int> > vpt; 

const int dx[] = {-1, 0, 1,  0};
const int dy[] = { 0, 1, 0, -1};
const int dxK[] = {-1, -1, 0, 1, 1,  1,  0, -1};
const int dyK[] = { 0,  1, 1, 1, 0, -1, -1, -1};
const int dxKn[] = {-2, -1, 1, 2,  2,  1, -1, -2};
const int dyKn[] = { 1,  2, 2, 1, -1, -2, -2, -1};

const int N = int(5e5) + 9;
const int M = int(2e4) + 9;
const int LOGN = 22;
const int SQN = 350;
const int MOD = int(1e9) + 7;
const int INF = 1e9 + 100;
const li INF64 = 2e18;
const ld PI = 3.1415926535897932384626433832795;
const ld EPS = 1e-9;

ld dp[M];
ld ndp[M];
int d = M / 2;
int n;
int a[M];
int cnt[M];

void solve(){	
	cin >> n;
	forn(i, n)
		cin >> a[i];
	sort(a, a + n);
	for1(i, n)
		forn(j, i)
			++cnt[a[i] - a[j]];

	dp[d] = 1;
	forn(_, 2){
		forn(i, 5009){
			if(cnt[i] == 0)
				continue;
			forn(j, M){
				if(abs(dp[j]) < EPS)
					continue;
				ndp[j - i] += dp[j] * (cnt[i] / ld(n * (n - 1) / 2));
			}
		}
		forn(i, M)
			dp[i] = ndp[i], ndp[i] = 0;
		//for(int e = d; e >= d - 10; --e)cout << dp[e] << ' ';cout << endl;
	}

	forn(i, 5009){
		if(cnt[i] == 0)
			continue;
		forn(j, M){
			if(abs(dp[j]) < EPS)
				continue;
			ndp[j + i] += dp[j] * (cnt[i] / ld(n * (n - 1) / 2));
		}
	}
	forn(i, M)
		dp[i] = ndp[i];

	ld res = .0;
	for(int i = d + 1; i < M; ++i)
		res += dp[i];
	cout << res;

}

int main(){

    srand(time(NULL));
    cout << setprecision(10) << fixed;
    cerr << setprecision(10) << fixed;   

    solve();

    return 0;
}
