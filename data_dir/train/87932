//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>
#define mem(a,v) memset((a), (v), sizeof (a))
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int i = 0; i < (n); i++) ni(a[i])
#define nal(a, n) for (int i = 0; i < (n); i++) nl(a[i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define pil pair<int, long long>
#define pll pair<long long, long long>
#define vii vector<pii>
#define vil vector<pil>
#define vll vector<pll>
#define vi vector<int>
#define vl vector<long long>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef cc_hash_table<int,int,hash<int>> ht;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> oset;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
const int MAXN = 1e6 + 5;
const double eps = 1e-9;
int lo[MAXN], hi[MAXN], a[MAXN];
int hiM[MAXN], pref[MAXN];

int main() {
	int n, x;
	scanf("%d %d", &n, &x);
	for (int i = 1; i <= n; i++) {
		ni(a[i]);
		if (lo[a[i]] == 0)
			lo[a[i]] = i;
		hi[a[i]] = i;
		pref[i] = max(pref[i-1], a[i]);
	}
	hi[x+1] = INF, lo[x+1] = INF;
	int r = x, pre = x + 1;
	for (; r > 0; r--) {
		if (lo[r] == 0)
			continue;
		if (hi[r] > lo[pre]) {
			r++;
			break;
		}
		pre = r;
	}
	ll ans = 0;
	pre = -1;
	for (int i = 1; i <= x; i++) {
		int val = max(i, r-1);
		if (pre != -1)
			val = max(val, pref[pre]);
		ans += (ll) (x - val + 1);
		if (lo[i] == 0) continue;
		if (lo[i] < pre) break;
		pre = hi[i];
	}
	prl(ans);
    return 0;
}


// 1 2 3 4 6 5 7 8 9