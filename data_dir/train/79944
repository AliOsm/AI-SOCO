#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>
#include <unordered_map>
#include <unordered_set>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.1415926535897
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

int b[100100];
vector<pnt > res;
vector<vector<int> > g;
vector<int> all;
int cnt[100100];
int todel[100100];

int main()
{
#ifdef Fcdkbear
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	double beg = clock();
#endif

	int n;
	scanf("%d", &n);
	g.resize(n + 1);
	for (int i = 2; i <= n; ++i)
	{
		if (b[i] == 0)
		{
			for (int j = i; j <= n; j += i)
			{
				if (b[j] == 0) 
				{
					b[j] = 1;
					g[i].push_back(j);
				}
			}
		}
	}
	int last = -1;
	FOR(i, 2, g.size())
	{
		cnt[i] = g[i].size();
		if (g[i].size() & 1) 
		{
			if ((i + i <= n) && (i > 2))
			{
				todel[i + i] = 1;
				g[i].push_back(i + i);
			}
		}
	}
	FOR(i, 2, g.size())
	{
		int last = -1;
		FOR(j, 0, g[i].size())
		{
			int v = g[i][j];
			if ((todel[v] == 1) && (i==2))
				continue;
			if (last == -1)
				last = v;
			else
			{
				res.push_back(mp(last, v));
				last = -1;
			}
		}
	}
	printf("%d\n", res.size());
	FOR(i, 0, res.size())
	{
		printf("%d %d\n", res[i].first, res[i].second);
	}

#ifdef Fcdkbear
	double end = clock();
	fprintf(stderr, "*** Total time = %.3lf ***\n", (end - beg) / CLOCKS_PER_SEC);
#endif
	return 0;
}