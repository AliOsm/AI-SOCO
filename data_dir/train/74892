#include <bits/stdc++.h>

using namespace std;

#define endl           '\n'
#define all(x)         x.begin(), x.end()
#define rall(x)        x.rbegin(), x.rend()
#define mem(x, y)      memset(x, y, sizeof x)

template <typename T> T gcd(T a, T b) {return !b ? a : gcd(b, a % b);}
template <typename T> inline void umin(T &a, T b) {a = a < b ? a : b;}
template <typename T> inline void umax(T &a, T b) {a = a > b ? a : b;}
template <typename T>
inline void Int(T &n) {
    n = 0; int f = 1; register int ch = getchar();
    for (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -1;
    for (; isdigit(ch); ch = getchar()) n = (n << 3) + (n << 1) + ch - '0';
    n = n * f;
}

const int N = (int) 3e5 + 5;
const int INF = (int) 1e9 + 7;
const long long MOD = (long long) 1e9 + 7;

int c[N], pos[N];

int main() {
    int n, k; Int(n), Int(k);
    set <pair <int, int> > st;
    for (int i = 1; i <= n; i++) {
        Int(c[i]);
        st.insert({c[i], i});
    }
    set <int> free;
    for (int i = k + 1; i <= n + k; i++) {
        free.insert(i);
    }

    long long res = 0;
    set < pair <int, int> > :: reverse_iterator itr;
    for (itr = st.rbegin(); itr != st.rend(); itr++) {
        int u = itr -> second;
        int v = *free.upper_bound(u - 1);
        res += 1LL * (v - u) * c[u];
        pos[u] = v;
        free.erase(v);
    }

    printf("%lld\n", res);
    for (int i = 1; i <= n; i++) {
        printf("%d%c", pos[i], i < n ? ' ' : '\n');
    }
    return 0;
}