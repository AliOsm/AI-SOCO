
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <functional>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
#define  int long long int
typedef complex<long double> cd;
const long double pi=acos(-1);
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <db, db> pdd;
typedef vector<int> vi;
typedef vector<vector<int> > matrix;
#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
#define sz(x) (int)(x.size())
#define ff first
#define ss second
#define endl "\n"
#define debug(x) (cerr << #x << ": " << x << "\n")
#define setbits(x) __builtin_popcount(x)
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p;}
const int MOD = 998244353;
const ll hell=1000000007;
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;

typedef tree<int, null_type, less<int>, rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;
int convert(string s)
{
    int n=s.length();vi v;int x=0;
    for(int i=0;i<n;i++)
    {
        if(s[i]=='.')
        {
            v.pb(x);
            x=0;
        }
        else
        {
            x=x*10+(s[i]-'0');
        }
    }
    v.pb(x);int ans=0;
    for(int i=3;i>=0;i--)
    {
        x=v[i]<<(8*(3-i));int j=8*(3-i);
        while(j<(8*(4-i)))
        {
            if(x&(1ll<<j))
                ans=ans|(1ll<<j);
            j++;
        }
    }
    return ans;
}
void convertans(int x)
{
   // cout<<x<<endl;
    int j=0;int y=0;vi v;
    while(j<8)
    {
        if(x&(1ll<<j))
            y=y|(1ll<<j);
        j++;
    }
    v.pb(y);
    y=0;
    while(j<16)
    {
        if(x&(1ll<<j))
            y=y|(1ll<<(j-8));
        j++;
    }
    v.pb(y);
    y=0;
    while(j<24)
    {
        if(x&(1ll<<j))
            y=y|(1ll<<(j-16));
        j++;
    }
    v.pb(y);
    y=0;
    while(j<32)
    {
        if(x&(1ll<<j))
            y=y|(1ll<<(j-24));
        j++;
    }
    v.pb(y);
    for(int i=3;i>=0;i--)
    {
        cout<<v[i];
        if(i)
            cout<<".";
    }
    cout<<endl;
}
int32_t main()
{
    IOS;
    int n,k;
    cin>>n>>k;
    int a[n];string s;
    for(int i=0;i<n;i++)
    {
        cin>>s;
        a[i]=convert(s);
    }
   // for(int i=0;i<n;i++)
     //  cout<<a[i]<<endl;
    int mask=(1ll<<32)-1;
    int j=0;map<int,int>mp;int x;int z,mn=100,ans=-1;
    while(j<31)
    {
        mp.clear();
        mask=mask^(1ll<<j);
        for(int i=0;i<n;i++)
        {
            x=a[i]&mask;
            mp[x]=1;
           // if(j==0)
             //   cout<<x<<endl;
        }
        if((int)mp.size()==k)
        {
            z=setbits(mask);
            if(z<mn)
            {
                mn=z;
                ans=mask;
            }
            
        }
        //mask=mask^(1ll<<j);
        j++;
    }
    if(ans==-1)
    {
        cout<<-1<<endl;
    }
    else
    {
        convertans(ans);
    }
    return 0;
}
