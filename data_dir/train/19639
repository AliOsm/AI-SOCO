#include <iostream>
#include <cstdio>
#include <algorithm>
using namespace std;
#define SZ 150010
int n,m; double c;
int x[SZ];
double vals[SZ] , prob[SZ];
// data structure
struct data{
  double sum,opt,optl,optr;
  data(double _sum=0,double _opt=0,double _optl=0,double _optr=0){
   sum=_sum; opt=_opt; optl=_optl; optr=_optr;
                                                                 }
};
data merge(data l,data r){
  data ret(l.sum+r.sum , max(l.opt,r.opt) , max(l.optl , l.sum+r.optl) , max(r.optr , r.sum+l.optr));
  ret.opt=max(ret.opt , l.optr+r.optl);
  return ret;
}
#define TSZ 262144
int how;
data T[2*TSZ];
void init(){
  for(int i=0;i<how;++i){
   T[i+TSZ].sum=vals[i];
   T[i+TSZ].opt=T[i+TSZ].optl=T[i+TSZ].optr=max(0.0 , vals[i]);
                        }
  for(int i=TSZ-1;i>0;--i)
   T[i]=merge(T[2*i] , T[2*i+1]);
}
int LO,HI;
data _get(int vr=1,int f=0,int t=TSZ-1){
  if(t<LO || HI<f)return data();
  if(LO<=f && t<=HI)return T[vr];
  return merge(_get(2*vr , f , (f+t)/2) , _get(2*vr+1 , (f+t)/2+1 , t));
}
data get(int f,int t){LO=f; HI=t; return _get();}
int main(){
  scanf("%d%d%lf",&n,&m,&c);
  for(int i=0;i<n;++i)scanf("%d",&x[i]);
  for(int i=0;i<n-1;++i)scanf("%lf",&prob[i]) , prob[i]/=100;
  how=n-1;
  for(int i=0;i<how;++i)vals[i]=(x[i+1]-x[i])/2.0-prob[i]*c;
  init();
  double ans=0;
  while(m--){
   int a,b; scanf("%d%d",&a,&b); --a; b-=2;
   ans+=get(a,b).opt;
            }
  printf("%.9lf\n" , ans);
  //system("pause");
  return 0;
}
