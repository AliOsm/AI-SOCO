// KALAM
# include<bits/stdc++.h>

using namespace std;

const int N = 1000 + 77;
int n , m , Mod , dp[N][N] , X[3] , T[N];
char S[N];
int main(){
	scanf("%d %d %d" , & n , & m , & Mod);
	dp[0][0] = 1;
	for(int sum = 1;sum < N;++ sum)
		for(int i = 0;i <= sum;++ i){
			int j = sum - i;
			if(j % 2 == 1)
				continue ;
			j >>= 1;
			dp[i][j] = j * (j - 1) / 2 * 1ll * dp[i + 2][j - 2] % Mod;
			dp[i][j] = (dp[i][j] + i * (i - 1) / 2 * 1ll * dp[i - 2][j]) % Mod;
			dp[i][j] = (dp[i][j] + j * i * 1ll * dp[i][j - 1]) % Mod;
		}

	for(int i = 1;i <= m;++ i){
		scanf("%s" , S + 1);
		for(int j = 1;j <= n;++ j)
			if(S[j] == '1')
				++ T[j];
	}
	for(int i = 1;i <= n;++ i){
		if(T[i] > 2)
			return ! printf("0\n");
		++ X[2 - T[i]];
	}
	printf("%d\n" , dp[X[1]][X[2]]);
	return 0;
}
