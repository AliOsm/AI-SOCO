//#include "stdc++.h"
#include<bits/stdc++.h>
#include<iostream>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <ll, int> pli;
typedef pair <db, db> pdd;
typedef vector<int> vi;
#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
#define sz(x) (int)(x.size())
#define ff first
#define ss second
#define endl "\n"
#define int long long int
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p;}
const ll MOD = 1000000007;
const ll mod=1000000006;
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
/*
 shuffle(x,x+n,rng) // shuffling elements of x in random order
 */

int32_t main()
{
    IOS;
    //cerr<<1<<endl;
    int n;
    cin>>n;
    int a[n];int ans=0;
   // cout<<1<<endl;
    int pos[1<<21][2];
    for(int i=0;i<(1<<21);i++)
    {   pos[i][0]=-1;
        pos[i][1]=-1;
    }
    //cout<<1<<endl;
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    for(int i=n-1;i>=0;i--)
    {
        if(pos[a[i]][0]==-1)
        {
            pos[a[i]][0]=i;
        }
        else if(pos[a[i]][1]==-1)
        {
            pos[a[i]][1]=i;
        }
    }
    //cout<<1<<endl;
    int val;int MX=1<<21;
    for(int i=MX-1;i>=0;i--)
    {
        int j=1;
        while(j<(MX))
        {
            if(!(j&i))
            {
                val=i|j;
                if(val<(MX))
                {
                    if(pos[val][0]!=-1)
                    {
                        if(pos[val][0]>pos[i][0])
                        {
                            pos[i][1]=pos[i][0];
                            pos[i][0]=pos[val][0];
                            pos[i][1]=max(pos[i][1],pos[val][1]);
                        }
                        else if(pos[i][1]<pos[val][0]&&pos[val][0]!=pos[i][0])
                        {
                            pos[i][1]=pos[val][0];
                        }
                    }
                }
            }
            j=j<<1;
        }
    }
    int w;
  //  for(int i=0;i<=9;i++)
    //cout<<i<<" "<<pos[i][0]<<" "<<pos[i][1]<<endl;
    for(int i=0;i<n-2;i++)
    {
        w=0;
        int j=1<<20;
        while(j>0)
        {
            if(!(j&a[i]))
            {
                if(pos[w|j][0]>i&&pos[w|j][1]>i&&pos[w|j][0]!=pos[w|j][1])
                    w=w|j;
            }
            j=j>>1;
        }
        ans=max(ans,a[i]|w);
    }
    cout<<ans<<endl;
    return 0;
}





