using namespace std;
#include<bits/stdc++.h>
#define ll long long
#define pii pair <int,int>
#define pll pair <ll,ll>
#define mp make_pair
#define pb push_back
#define fir first
#define sec second
#define sz(c) ((c).size())
#define all(c) (c).begin(),(c).end()
#define fn "test"   ///____FILE_NAME_HERE_____
#define MASK(i) ((1LL)<<(i))
#define BIT(x,i) (((x)>>(i))&1)
#define rep(c,it) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define rrep(c,it) for(__typeof((c).rbegin()) it=(c).rbegin();it!=(c).rend();it++)

template <class T,class U> void maximize(T &x,U y)
{
    if(x < y)x=y;
}
template <class T,class U> void minimize(T &x,U y)
{
    if(x > y)x=y;
}
template <class T> T Abs(T x)
{
    return (x < (T)0 ? -x : x);
}
template <class T> T safe_sqrt(T x)
{
    return sqrt(max((T)0,x));
}
template <class T,class U,class V> T addmod(T x,U k,V mod)
{
    return ((x + k)%mod + mod) % mod;
}
template <class T,class U,class V> T submod(T x,U k,V mod)
{
    return ((x - k)%mod + mod) % mod;
}
template <class T,class U,class V> T mulmod(T x,U k,V mod)
{
    return (ll)x*k%mod;
}

/*------------------------------------------END_OF_TEMPLATE------------------------------------------*/

namespace task{

const int N=1e5+5;
unordered_map <int,bool> inarr,ma[2];
vector <int> ve;
int n,l,x,y;
int a[N];
bool okx=false,oky=false;

void solve()
{
    scanf("%d%d%d%d",&n,&l,&x,&y);
    for(int i=1;i<=n;++i)scanf("%d",a+i),inarr[a[i]]=true;
    for(int i=1;i<=n;++i)
    {
        if(inarr[a[i]-x])okx=true;
        if(inarr[a[i]+x])okx=true;
        if(inarr[a[i]-y])oky=true;
        if(inarr[a[i]+y])oky=true;
    }
    for(int i=1;i<=n;++i)
    {
        if(a[i]-x >= 0)ma[0][a[i]-x]=true,ve.pb(a[i]-x);
        if(a[i]+x <= l)ma[0][a[i]+x]=true,ve.pb(a[i]+x);
        if(a[i]-y >= 0)ma[1][a[i]-y]=true,ve.pb(a[i]-y);
        if(a[i]+y <= l)ma[1][a[i]+y]=true,ve.pb(a[i]+y);
    }
    if(okx and oky)puts("0"),exit(0);
    sort(all(ve));
    ve.erase(unique(all(ve)),ve.end());
    int xx=-1,yy=-1,best=-1;
    rep(ve,it)
    {
        if(ma[0][*it])xx=*it;
        if(ma[1][*it])yy=*it;
        if(ma[0][*it] and ma[1][*it])best=*it;
    }
    if(!okx and oky)printf("1\n%d",xx);
    else if(okx and !oky)printf("1\n%d",yy);
    else
    {
        if(~best)printf("1\n%d",best);
        else printf("2\n%d %d",xx,yy);
    }
}}

int main(void)
{
    #ifndef ONLINE_JUDGE
    freopen(fn".inp","r",stdin);
    freopen(fn".out","w",stdout);
    #endif // ONLINE_JUDGE
    task::solve();
}
