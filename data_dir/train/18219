#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define int long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;
typedef  tree< int , null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

const int N = 300000;
vector < int > g[N];
int ans[N], a[N];
set < int > s;
void dfs(int v, int p = -1, int gc = 0, int ff = 0){
    if (p == -1){
        ans[v] = a[v];
        gc = a[v];
    } else{
        auto x = *s.rbegin();
        ans[v] = max(ff, x * gc);
    }
    vector < int > z, t;
    for (auto i: s){
        z.pb(i);
        t.pb(i);
    }
    for (auto u: g[v]){
        if (u == p) continue;
        vector < int > q;
        z = t;
        for (auto& i: z){
            i = __gcd(i * gc, a[u]) / __gcd(a[u], gc);
        }
        while(!s.empty()) s.erase(s.begin());
        for (auto i: z) s.insert(i);
        if (p == -1) ff = a[u];
        int d = __gcd(gc, a[u]);
        s.insert(gc / d);
        dfs(u, v, d, __gcd(a[u], ff));
    }
}
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt",  "r", stdin);
    //freopen("output.txt", "w", stdout);
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++) cin >> a[i];
    for (int i = 1; i < n; i++){
        int u, v;
        cin >> u >> v;
        g[u].pb(v);
        g[v].pb(u);
    }
    dfs(1);
    for (int i = 1; i <= n; i++) cout << ans[i] << " ";
}
