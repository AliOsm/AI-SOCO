
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
using namespace std;
#define rep(i, n) for (int (i) = 0, j123 = n; (i) < j123; (i) ++)
#define rep1(i, n) for (int (i) = 1, j123 = n; (i) <= j123; (i) ++)
#define db(x) {cout << #x << " = " << (x) << endl;}
#define dba(a, x, y) {cout << #a << " :";for(int i123=(x);i123<=(y);i123++) cout<<setw(4)<<(a)[i123];cout<<endl;}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define sz(x) int(x.size())
#define endl '\n'
typedef long long ll;
typedef long double ld;
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const ld pi = acos(-1);
// const int MOD = ;

int N, M, Q;
int T[555][555];
int mx[555];
int main()
{
  ios_base::sync_with_stdio(0); cout.precision(15); cout << fixed; cout.tie(0); cin.tie(0);
  cin >> N >> M >> Q;
  rep1(i,N) rep1(j,M) cin >> T[i][j];
  rep1(i,N)
  {
    for (int j = 1; j <= M;)
    {
      if (T[i][j] == 0)
      {
        j++;
        continue;
      }
      int k = j;
      while (k + 1 <= M && T[i][k+1]==1)
      {
        k++;
      }
      mx[i] = max(mx[i], k - j + 1);
      j = k + 1;
    }
  }
  rep1(query,Q)
  {
    int r, c;
    cin >> r >> c;
    T[r][c] ^= 1;
    mx[r] = 0;
    for (int j = 1; j <= M;)
    {
      if (T[r][j] == 0)
      {
        j++;
        continue;
      }
      int k = j;
      while (k + 1 <= M && T[r][k+1]==1)
        k++;
      mx[r] = max(mx[r], k - j + 1);
      j = k + 1;
    }
    int ans = 0;
    rep1(rr,N)
    ans = max(ans, mx[rr]);
    cout << ans << endl;
  }
}
