/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

class ProblemAMaze {
public:
    int n, m, k;
    char arr[501][501];
    int free = 0, sx, sy;
    int cnt = 2;
    void dfs(int i, int j){
        if(i+1<=n and arr[i+1][j] == '.' and cnt!=(free-k+1)) ++cnt, arr[i+1][j]='X', dfs(i+1, j);
        if(i-1>=1 and arr[i-1][j] == '.' and cnt!=(free-k+1)) ++cnt, arr[i-1][j]='X', dfs(i-1, j);
        if(j+1<=m and arr[i][j+1] == '.' and cnt!=(free-k+1)) ++cnt, arr[i][j+1]='X', dfs(i, j+1);
        if(j-1>=0 and arr[i][j-1] == '.' and cnt!=(free-k+1)) ++cnt, arr[i][j-1]='X', dfs(i, j-1);
    }
	void solve(std::istream& in, std::ostream& out) {
		in>>n>>m>>k;
        for(int i = 1; i<=n; ++i){
            for(int j = 1; j<=m; ++j){
                in>>arr[i][j];
                if(arr[i][j] == '.') ++free, sx = i, sy = j;
            }
        }
        arr[sx][sy] = 'X';
        dfs(sx, sy);
        for(int i = 1; i<=n; ++i){
            for(int j = 1; j<=m; ++j){
                if(arr[i][j] == '.') arr[i][j] = 'X';
                else if(arr[i][j] == 'X') arr[i][j] = '.';
                out<<arr[i][j];
            }
            out<<"\n";
        }
	}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	ProblemAMaze solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
