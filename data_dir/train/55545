#include <bits/stdc++.h>

using namespace std;
using matrix = vector<vector<long long>>;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

#define all(x) (x).begin(), (x).end()
//#define int ll

int A[4][4], B[4][4], p[4][4];

pll func(int a, int b) {
    if (a == 3 && b == 2 || a == 2 && b == 1 || a == 1 && b == 3) {
        return {1, 0};
    }
    swap(a, b);
    if (a == 3 && b == 2 || a == 2 && b == 1 || a == 1 && b == 3) {
        return {0, 1};
    }
    return {0, 0};
}

signed main() {

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    //cout.setf(ios::fixed);
    //cout.precision(20);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    ll k;
    pll ans = {0, 0};
    int a, b;
    cin >> k >> a >> b;
    for (int i = 1; i <= 3; ++i) {
        for (int j = 1; j <= 3; ++j) {
            cin >> A[i][j];
        }
    }
    for (int i = 1; i <= 3; ++i) {
        for (int j = 1; j <= 3; ++j) {
            cin >> B[i][j];
        }
    }
    for (int i = 1; i <= 3; ++i) {
        for (int j = 1; j <= 3; ++j) {
            p[i][j] = -1;
        }
    }
    p[a][b] = 0;
    vector<pll> cur;
    int id = 1;
    while (k) {
        pll f = func(a, b);
        ans.first += f.first;
        ans.second += f.second;
        k--;
        cur.push_back(f);
        int na = A[a][b];
        int nb = B[a][b];
        a = na;
        b = nb;
        if (p[a][b] == -1) {
            p[a][b] = id++;
            continue;
        }
        pll sum = {0, 0};
        for (int i = p[a][b]; i < id; ++i) {
            sum.first += cur[i].first;
            sum.second += cur[i].second;
        }
        ans.first += (k / (id - p[a][b])) * sum.first;
        ans.second += (k / (id - p[a][b])) * sum.second;
        k %= id - p[a][b];
        break;
    }
    while (k--) {
        pll f = func(a, b);
        ans.first += f.first;
        ans.second += f.second;
        int na = A[a][b];
        int nb = B[a][b];
        a = na;
        b = nb;
    }
    cout << ans.first << ' ' << ans.second;
}
