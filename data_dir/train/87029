#include <bits/stdc++.h>
  
using namespace std;
  
template<class T> void ckmin(T &a, T b) { a = min(a, b); }
template<class T> void ckmax(T &a, T b) { a = max(a, b); }
  
#define pb push_back
#define mp make_pair
#define cotu cout
#define itn int
#define Red ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define F first
#define S second
#define sz(x) (int)x.size()
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define repst(i, n) for(auto it = n.begin(); it != n.end(); ++it)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
  
#define ordered_set tree<int , null_type,less<int >, rb_tree_tag,tree_order_statistics_node_update> 
  
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
  
typedef long long ll;
  
const int inf = int(1e9);
const int mod = inf + 7;
const int N = 1e6 + 555;
const double PI = acos(-1.0);

ll t[N];
vector<pair<ll, ll> > c;
void solve()
{
	int n;
	cin >> n;
	ll a[n], b[n];
	for(int i = 0; i < n; ++i){
		cin >> a[i];
	}
	for(int i = 0; i < n; ++i){
		cin >> b[i];
	}
	rep(i, n) c.pb(mp(a[i], b[i]));
	sort(all(c));
	ll res = 0;
	for(int i = 0; i < n - 1; ++i){
		if(c[i].F != c[i + 1].F) continue;	
		for(int j = 0; j < n; ++j){
			if((c[i].F | c[j].F) == c[i].F) {
				t[j] = 1;
			}
		}
	}
	for(int i = 0; i < n; ++i) res += t[i] * c[i].S;
	cout << res;
}
 
  
int main()
{
    Red;
    solve();
    return 0;
}