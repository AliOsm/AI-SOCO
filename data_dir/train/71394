#define _CRT_SECURE_NO_WARNINGS 1
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <algorithm>
#include <numeric>
#include <unordered_map>
#include <sstream>
#include <iostream>
#include <cmath>
#include<cstring>
#include <cstdio>
#include <stack>
#include<iomanip>
#include<queue>
#include <unordered_set>
#include<functional>
#include<iterator>
#include<new>
#include<cstdlib>
#include<math.h>
#include<fstream>
using namespace std;
#define pi 3.141592653589793
#define ii  pair<int,int>
#define ll long long
#define p10(ans) printf("%0.10f\n", ans)
#define pr(ans) printf("%d\n", ans)
#define scc(x)  scanf("%c\n", &c)
#define pll(ans) printf("%lld\n", ans)
#define scll(x) scanf("%lld",&x)
#define scd(a)  scanf("%lf", &a)
#define sci(x)  scanf("%d",&x)
#define pc(ans)  printf("%c", ans)
#define pd(a)    printf("%lf\n", a)
#define scanfchararray(arr) scanf("%s", arr)
#define printfstring(s)    printf("%s\n", s.c_str())
#define all(v)             v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v)            ((int)((v).size()))
#define mem(arr,d) memset(arr,d,sizeof(arr))
#define inf 10000000000000000
#define ninf -10000000000000000
#define MOD 100000007
#define pow2(x) ((x)*(x))
#define max3(a, b, c) max(a, max(b, c))
#define min3(a, b, c) min(a, min(b, c))
#define eps 1e-3
#define numberofdigit(N) floor(log10(N)) + 1;
#define nearestPowerOfTwo(S) ((int)pow(2.0, (int)((log((double)S) / log(2.0)) + 0.5)))
#define loop0(i,n) for(int i=0;i<n;++i)
#define loop1(i,n) for(int i=1;i<=n;++i)
#define watch(x) cout << (#x) << " is " << (x) << endl
ll fastPower(ll base, ll exp,ll mod) {
base %= mod;
ll result = 1;
while (exp > 0) {
if (exp & 1)
result = (result * base) % mod;
base = (base * base) % mod;
exp >>= 1;
}
return result;
}
long long gcd(long long a, long long b)
{
if (b == 0)return a; return gcd(b, a%b);
}
long long lcm(long long a, long long b) {
return  a * b / gcd(a, b);
}
ll nCr(ll n, ll r,ll mod) {
	if (n < r)
		return 0;

	if (r == 0)
		return 1;

	return ((n%mod) * ((nCr(n - 1, r - 1,mod) / r)%mod))%mod;
}
ll removeAt(ll code, int idx, int val,ll BASE,ll mod) {
return (code - (val * fastPower(BASE, idx,mod)) % mod + mod) % mod;
}

ll addAt(ll code, int idx, int val,ll BASE,ll mod) {
return (code + (val * fastPower(BASE, idx,mod)) % mod) % mod;
}

ll shiftLeft(ll code,ll BASE,ll mod) {
return (code * BASE) % mod;
}

ll shiftRight(ll code,ll BASE,ll mod) {
return (code * fastPower(BASE, mod - 2,mod) % mod) % mod;
}

const int N = 2e5+5;
int main() {
	int q;
	sci(q);
	while (q--) {
		int n,x;
		sci(n);
		vector<int>freq(n + 1);
		for (int i = 1; i <= n; ++i) { sci(x); ++freq[x]; }
		sort(freq.rbegin(), freq.rend());
		int maxx = freq[0];
		int ans = freq[0];
		for (int i = 1; i <n; ++i) {
			if (maxx <= 0)break;
			if (freq[i] >= maxx) { ans += maxx - 1; --maxx; }
			else { ans += freq[i]; maxx = freq[i]; }
		}
		pr(ans);
		
	}

}