#include<bits/stdc++.h>
#define int long long
using namespace std;
const int N = 1e5 + 10, NX = 1e9 + 7;
int n, r, t, m, p, res, c = 1, A[N], B[N], PA[N], PB[N];
int Power(int a, int b)
{
    if (b == 0)
        return (1);
    int tt = Power(a, b / 2);
    tt = (1ll * tt * tt) % NX;
    if (b & 1)
        tt = (1ll * tt * a) % NX;
    return (tt);
}
int32_t main()
{
    cin >> n >> m;
    for (int i = 0; i < n; i++)
        cin >> A[i];
    for (int i = 0; i < n; i++)
        cin >> B[i];
    PA[0] = (A[0] == 0);
    PB[0] = (B[0] == 0);
    for (int i = 1; i < n; i++)
        PA[i] = PA[i - 1] + (A[i] == 0);
    for (int i = 1; i < n; i++)
        PB[i] = PB[i - 1] + (B[i] == 0);
    for (int i = 0; i < n; i++)
    {
        if (A[i] != 0 && B[i] != 0)
        {
            if (B[i] > A[i])
                break;
            if (A[i] > B[i])
            {
                t = PA[n - 1] - PA[i] + PB[n - 1] - PB[i];
                res = (res + (1ll * Power(m, t) * c) % NX) % NX;
                break;
            }
            continue;
        }
        if (A[i] == 0 && B[i] == 0)
        {
            t = PA[n - 1] - PA[i] + PB[n - 1] - PB[i];
            p = (1ll * m * (m - 1) / 2) % NX;
            res = (res + (((1ll * Power(m, t) * c) % NX) * p) % NX) % NX;
            c = (1ll * c * m) % NX;
            continue;
        }
        if (A[i] == 0)
        {
            t = PA[n - 1] - PA[i] + PB[n - 1] - PB[i];
            res = (res + ((1ll * Power(m, t) * (m - B[i])) % NX) * c) % NX;
            continue;
        }
        if (B[i] == 0)
        {
            t = PA[n - 1] - PA[i] + PB[n - 1] - PB[i];
            res = (res + ((1ll * Power(m, t) * (A[i] - 1)) % NX) * c) % NX;
        }
    }
    t = Power(m, PA[n - 1] + PB[n - 1]);
    res = (1ll * res * Power(t, NX - 2)) % NX;
    cout << res;
    return (0);
}
