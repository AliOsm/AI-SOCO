///      file: codeforces4
# include <bits/stdc++.h>
///+++++-----+++++-----+++++
# define x first
# define y second
# define z third
# define ll long long
# define speed ios_base::sync_with_stdio(false)
# define fin(s) freopen( s, "r", stdin)
# define fout(s) freopen( s, "w", stdout)
# define pr pair<int,int>
# define pb(a) push_back(a)	

//const std::pr d[8] = { 	{-1, -1}, {-1, 0}, {-1, 1}, {0, -1}
//					   ,{-0,  1}, {1, -1}, {1,  0}, {1,  1} 	};

const std::pr d[4] = { 		{0,  -1}, {0,  1}, {-1, 0}, {1,  0} 	};
const int N = 1e5 + 100;
const int mod = 1e9 + 7;
const int inf = 1e9 + 1e8;

using namespace std;

vector < pr > gr[111];
int used[111];
bool colors[111];
int n, m, q;

void dfs(int u, int c, int v)
{
	used[u] = c;
	if(u == v){
		colors[c] = true;
		return;
	}
	for (pr p: gr[u]){
		if(p.y != c && c != -1)continue;
		
		if(used[p.x] != c)
			dfs(p.x, p.y, v);
	}
}

int main()
{
	speed;
	cin >> n >> m;
	for (int i = 0; i < m; i++){
		int a, b, c;
		cin >> a >> b >> c;
		gr[a].push_back({b, c});
		gr[b].push_back({a, c});
	}
	cin >> q;
	for (int i = 0; i < q; i++){
		int u, v;
		cin >> u >> v;
		fill(used, used + 101, 0);
		fill(colors, colors + 101, 0);
		dfs(u, -1, v);
		int ans = 0;
		for (auto c:colors)ans += c;
		cout << ans << endl;
	}
}
