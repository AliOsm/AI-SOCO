#pragma GCC optimize(3)
#include <bits/stdc++.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define mod 1000000007
#define int long long
#define inf (1LL << 30)
const int maxnodes=1005;
#define ll long long
#define N 1000000
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
int fact[N + 1];
int ifact[N + 1];

ll fastexpom(ll a,ll b,ll m)
{
    if (b < 0) b += m - 1;
  ll res=1;
      while(b>0)
      {
        if(b%2==1)
          res=(((res)%m)*((a)%m))%m;
        a=(((a)%m)*((a)%m))%m;
        b/=2;
      }
      return res;
}
ll modinv(ll a, ll m=1000000007)
{
  return fastexpom(a,m-2,m);
}
void preprocess()
{
    fact[0] = 1;
    ifact[0] = 1;
    for(int i = 1;i <= N;i++)
    {
        fact[i] = (fact[i-1] * i)%mod;
        ifact[i] = modinv(fact[i]);
    }
}
int nCr(int n,int r)
{
    if(n == 0 and r == 0)
        return 1;
    if(r > n or r < 0 or n == 0)
        return 0;
    
    int ans = (fact[n] * ifact[n-r])%mod;
    ans = (ans * ifact[r])%mod;
    return ans;
}
int Cayleighs(int x,int y)
{
    
    int ans = (y * fastexpom(x,x-y-1,mod))%mod;
    return ans;
}
int32_t main()
{
    IOS;
    #ifndef ONLINE_JUDGE
    freopen("int.txt","r",stdin);
    freopen("out.txt","w",stdout);
    #endif
    int n,m,a,b;
    cin >> n >> m >> a >> b;
    int fans = 0;
    preprocess();
    for(int edges = 1 ; edges <= n - 1;edges++)
    {
        int ans = (nCr(n - 2,edges - 1) * fact[edges - 1])%mod;
        ans = (ans * nCr(m - 1,edges - 1))%mod;
        ans = (ans * Cayleighs(n,edges + 1))%mod;
        ans = (ans * fastexpom(m,n - edges - 1,mod))%mod;
        fans = (fans + ans)%mod;
    }

    cout << fans;

    return 0;
}