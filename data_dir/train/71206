#include <iostream>
#include <cstdio>
#include <string>
#include <queue>

using namespace std;
const int N = 1000000;

long long a[N], offset;
typedef struct{long long a, b;} tp;

int main() {
    ios::sync_with_stdio(false);

    long long n, k;
    cin >> n >> k;
    offset = k;
    a[k - offset] = 1;
    long long l = 0 - offset, sum = 0;
    vector<tp> v;
    v.push_back({0, k - 1});
    v.push_back({1, k});

    for(long long i = 1; ; i++) {
        sum += a[i - 1];

        if(l >= 0)
            sum -= a[l];
        l++;

        a[i] = sum;
        v.push_back({sum, i + offset});
        if(a[i] > n)
            break;
    }

    vector<long long> ans;
    for(long long i = v.size() - 1; i >= 0; i--) {
        if(n >= v[i].a) {
            ans.push_back(v[i].a);
            n -= v[i].a;
        }
    }
    cout << ans.size() << "\n";
    for(long long i = 0; i < ans.size(); i++) {
        cout << ans[i] << " ";
    }
    return 0;
}
