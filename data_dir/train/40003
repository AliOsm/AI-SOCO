#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES

#include <iostream>
#include <cstdio>
#include <string>
#include <stdlib.h>
#include <set>
#include <vector>
#include <list>
#include <algorithm>
#include <regex>
#include <math.h>
#include <map>
#include <iterator>
#include <climits>
#include <numeric>
#include <bitset>
#include <unordered_map>
#include <unordered_set>
#include <iomanip>
#include <queue>	
#include <deque>
#include <stack>
#include <array>
#include <valarray>
#include <complex>
#include <random>
#include <functional>
#include <thread>

using namespace std;

#define int long long
#define ll long long
typedef int hv;
#define double long double
#define make(type, x) type x; cin>>x	
#define make2(type, x, y) type x, y; cin>>x>>y
#define make3(type, x, y, z) type x, y, z; cin>>x>>y>>z
#define make4(type, x, y, z, q) type x, y, z, q; cin>>x>>y>>z>>q
#define ALL(x) (x).begin(), (x).end()
#define RALL(x) (x).rbegin(), (x).rend()
#define FORIT(p) for(auto it = p.begin(); it != p.end(); it++)
#define FOR(b) for(signed i = 0; i <(b); i++)
#define FORE(i, l, r) for(int i = (l); i < (r); i++)
#define NFOR(i, n) for(int i = (((int) n)-1); i >= 0; i--)
#define VI vector<int>
#define VVI vector<vector<int>>
#define PII pair<int, int>
#define PPII pair<PII, int>
#define M7 1000000007ll
#define M9 1000000009ll
#define MFFT 998244353ll 
#define makev(a, n) VI a(n); FOR(n) cin >> a[i];


void Solve() {
	make(int, q);
	while (q--) {
		make(int, n);
		vector<PII> a(n);
		FOR(n) {
			make2(int, q, t);
			a[q - 1].first++;
			a[q - 1].second += t;
		}
		vector<multiset<PII>> b(n + 1);
		for (int i = 0; i < n; ++i) {
			if (a[i].first) {
				b[a[i].first].emplace(-a[i].second, a[i].first);
			}
		}
		int cur = n, ans1 = 0, ans2 = 0;
		while (b[cur].empty()) cur--;
		int real = cur;
		while (cur) {
			if (!b[real].empty()) {
				ans1 += cur;
				ans2 += min(cur, -b[real].begin()->first);
				b[real].erase(b[real].begin());
			}
			if (cur == 0) break;
			int real2 = --cur;
			if (b[real2].size() > b[real].size()) swap(real, real2);
			for (auto& z : b[real2]) b[real].insert(z);
		}
		cout << ans1 << ' ' << ans2 << '\n';
	}
}

signed main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
#ifdef _SUPER_DEFINE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	Solve();
	fflush(stdout);
	while (!cin.eof()) {
		string s = "_";
		do getline(cin, s);
		while (!cin.eof() && !s.empty());
		if (cin.eof()) return 0;
		FOR(2) cout << endl;
		Solve();
		fflush(stdout);
	}
#else
	Solve();
#endif
	return 0;
}