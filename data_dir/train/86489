#include<bits/stdc++.h>
#define xx first
#define yy second
using namespace std;
int seg[4*200005];
void update(int n, int s, int e, int indx, int val)
{
    if(s==indx && e==indx)
    {
        seg[n]= val;
        return;
    }
    if(s>indx || e<indx)return;
    int mid= (s+e)>>1;
    update(n*2, s, mid, indx, val);
    update(n*2 +1, mid+1, e, indx, val);
    seg[n]= max(seg[n*2], seg[n*2 +1]);
    return;
}
int query(int n, int s, int e, int l, int r)
{
    if(s>=l && e<=r)return seg[n];
    if(s>r || e<l)return 0;
    int mid= (s+e)>>1;
    return max(query(n*2, s, mid, l, r), query(n*2 +1, mid+1, e, l, r));
}
int hero[4*200005];
void update2(int n, int s, int e, int indx, int val)
{
    if(s==indx && e==indx)
    {
        hero[n]= max(hero[n], val);
        return;
    }
    if(s>indx || e<indx)return;
    int mid= (s+e)>>1;
    update2(n*2, s, mid, indx, val);
    update2(n*2 +1, mid+1, e, indx, val);
    hero[n]= max(hero[n*2], hero[n*2 +1]);
    return;
}
int query2(int n, int s, int e, int l, int r)
{
    if(s>=l && e<=r)return hero[n];
    if(s>r || e<l)return 0;
    int mid= (s+e)>>1;
    return max(query2(n*2, s, mid, l, r), query2(n*2 +1, mid+1, e, l, r));
}
int bs(int n, int s)
{
    int lo= s, hi= n, res= 0;
    while(lo<=hi)
    {
        int mid= (lo+hi)>>1;
        int en= mid-s+1;
        int mx= query(1, 1, n, s, s+en-1);
        int hh= query2(1, 1, n, en, n);

        if(hh>=mx)res= en, lo=mid+1;
        else hi= mid-1;
    }return res;
}
int main()
{
    int ts, n, x, m, y;
    scanf("%d", &ts);
    while(ts--)
    {
        int mx1= 0, mx2= 0;
        scanf("%d", &n);
        for(int i=1; i<=(4*n); i++)seg[i]= 0, hero[i]= 0;
        for(int i=1; i<=n; i++)
        {
            scanf("%d", &x);
            mx1= max(mx1, x);
            update(1, 1, n, i, x);
        }
        scanf("%d", &m);
        for(int i=1; i<=m; i++)
        {
            scanf("%d %d", &x, &y);
            mx2= max(mx2, x);
            update2(1, 1, n, y, x);
        }

        if(mx1>mx2)
        {
            printf("-1\n");
            continue;
        }

        int res= 0;
        int st= 1;
        while(st<=n)
        {
            res++;
            st+= bs(n, st);
        }printf("%d\n", res);
    }return 0;
}

