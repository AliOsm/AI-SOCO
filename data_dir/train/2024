#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
#define dbl(k, x) fixed << setprecision(k) << (x)

template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define _upgrade ios_base::sync_with_stdio(0);
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

const int N = 1e6 + 7;

int n, k, phi[N];

int main()
{
    _upgrade
    
    cin >> n >> k;

    if(k == 1)
    {
        cout << 3 << "\n";
        return 0;
    }

    for(int i = 2; i <= n; i++)
        phi[i] = i;
    for(int i = 2; i <= n; i++)
    {
        if(phi[i] != i) continue;
        for(int j = i; j <= n; j += i)
            phi[j] = phi[j] / i * (i - 1);
    }

    for(int i = 2; i <= n; i++)
        DBG(i, phi[i]);

    sort(phi + 3, phi + n + 1);
    LL ans = 2;
    for(int i = 3; i < 3 + k; i++)
        ans += phi[i];
    cout << ans << "\n";

	return 0;
}