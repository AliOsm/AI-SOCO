#include <bits/stdc++.h>
using namespace std;
int t;
vector<int>nex;
int fnd(int cur){
    if(nex[cur]==cur)return cur;
    return nex[cur]=fnd(nex[cur]);
}
int main()
{ios_base::sync_with_stdio(0);cout.tie(0);cin.tie(0);
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        vector<int>ar;
        map<int,int>pos;
        for(int i=0;i<n;i++){
            int el;cin>>el;ar.push_back(el);
            pos[el]=i;
        }
        vector<int>vals;
        set<pair<int,int>,greater<pair<int,int>>>st;
        for(int i=0;i<n;i++){
            vals.push_back(1);
            st.insert({1,i});
        }
        bool bo=0;
        nex.resize(n+1);
        for(int i=0;i<=n;i++)nex[i]=i;
        for(int j=0;j<n;j++){
            int i=ar[j]-1;
            int mx=(*st.begin()).first;
            //cout<<i<<' '<<vals[i]<<' '<<mx<<endl;
            if(vals[i]!=mx){
                bo=1;
                break;
            }
            st.erase({vals[i],i});
            //vals[i]=0;
            nex[i]=i+1;
            int nx=fnd(i);
            if(nx<n){
                st.erase({vals[nx],nx});
                vals[nx]+=vals[i];
                st.insert({vals[nx],nx});
            }
        }
        if(!bo)cout<<"Yes"<<'\n';
        else cout<<"No"<<'\n';
    }
    return 0;
}
