#include <algorithm>
#include <bitset>
#include <cassert>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <string>

#ifdef PRINTERS
#include "printers.hpp"
using namespace printers;
#define tr(a)        cerr<<#a<<": "<<a<<endl;
#else
#define tr(a)    
#endif
#define int         long long
#define ll          long long
#define pb          push_back
#define mp          make_pair
#define pii         pair<int,int>
#define vi          vector<int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (int)x.size()
#define hell        1000000007
#define endl        '\n'
#define rep(i,a,b)    for(int i=a;i<b;i++)
using namespace std;

void solve(){
    int n,m;
    cin>>n>>m;
    vector<pair<int,char>>a,b;
    rep(i,0,n){
        int l;
        char ch;
        cin>>l>>ch>>ch;
        if(!a.empty() and a.back().S==ch){
            a.back().F+=l;
        }
        else{
            a.pb(mp(l,ch));
        }
    }
    rep(i,0,m){
        int l;
        char ch;
        cin>>l>>ch>>ch;
        if(!b.empty() and b.back().S==ch){
            b.back().F+=l;
        }
        else{
            b.pb(mp(l,ch));
        }
    }
    if(sz(b)==1){
        int ans=0;
        rep(i,0,sz(a)){
            if(a[i].S==b[0].S){
                ans+=max(0LL,a[i].F-b[0].F+1);
            }
        }
        cout<<ans;
    }
    else if(sz(b)==2){
        int ans=0;
        rep(i,0,sz(a)-sz(b)+1){
            bool isGood=1;
            rep(j,0,sz(b)){
                if(j==0 or j==sz(b)-1){
                    isGood&=(b[j].F<=a[i+j].F and b[j].S==a[i+j].S);
                }
                else{
                    isGood&=(b[j].F==a[i+j].F and b[j].S==a[i+j].S);
                }
            }
            ans+=isGood;
        }
        cout<<ans<<endl;
    }
    else{
        vector<pair<int,char>>myB(b.begin()+1,b.end()-1);
        vi lps(sz(myB));
        int len=0;
        lps[0]=0;
        int idx=1;
        while(idx<sz(myB)){
            if(myB[idx]==myB[len]){
                len++;
                lps[idx]=len;
                idx++;
            }
            else{
                if(len){
                    len=lps[len-1];
                }
                else{
                    lps[idx]=0;
                    idx++;
                }
            }
        }
        int i=0;
        int j=0;
        int ans=0;
        while(i<sz(a)){
            if(a[i]==myB[j]){
                j++,i++;
            }
            if(j==sz(myB)){
                int starting=i-j-1;
                if(a[starting].F>=b[0].F and a[starting].S==b[0].S and a[starting+sz(myB)+1].F>=b[sz(myB)+1].F and a[starting+sz(myB)+1].S==b[sz(myB)+1].S)ans++;
                j=lps[j-1];
            }
            else if(i<sz(a) and a[i]!=myB[j]){
                if(j)j=lps[j-1];
                else i++;
            }
        }
        cout<<ans<<endl;
    }
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
//    cin>>t;
    while(t--){
        solve();
    }
    return 0;
}