#include <bits/stdc++.h>

using namespace std;

#ifdef NeverBeRed
#include "debug.h"
#else
#define debug(...) 9715
#endif
typedef long long ll;
typedef long double ld;
typedef complex<ld> point;
#define F first
#define S second

vector<vector<int>> f(vector<string> s, int k)
{
	int n = s.size();
	vector<vector<int>> a(n, vector<int>(n));
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < n; ++j)
			a[i][j] = s[i][j] == 'W';

	auto b = a;
	for (int i = 1; i < n; ++i)
		for (int j = 0; j < n; ++j)
			a[i][j] &= a[i-1][j];

	for (int i = n-2; i >= 0; --i)
		for (int j = 0; j < n; ++j)
			b[i][j] &= b[i+1][j];

	auto c = a;
	for (int i = 0; i+k+1 < n; ++i)
		for (int j = 0; j < n; ++j)
			c[i][j] &= b[i+k+1][j];

	for (int i = 0; i < n; ++i)
		for (int j = 1; j < n; ++j)
		{
			a[i][j] += a[i][j-1];
			b[i][j] += b[i][j-1];
			c[i][j] += c[i][j-1];
		}

	auto get = [&](vector<int> &x, int i, int j)
	{
		if (i > j) return 0;
		if (!i) return x[j];
		return x[j] - x[i-1];
	};

	vector<vector<int>> ans(n, vector<int>(n));
	for (int i = 0; i+k <= n; ++i)
		for (int j = 0; j+k <= n; ++j)
		{
			ans[i][j] = get(b[0], 0, j-1) + get(b[0], j+k, n-1);

			if (i == 0)
			{
				if (i+k == n) ans[i][j] += k;
				else ans[i][j] += get(b[i+k], j, j+k-1);
			}
			else if (i+k == n)
			{
				ans[i][j] += get(a[i-1], j, j+k-1);
			}
			else
			{
				ans[i][j] += get(c[i-1], j, j+k-1);
			}
		}

	return ans;
}

int main()
{
	#ifdef TurnRed
		//freopen("a.in", "r", stdin);
		//freopen("a.out", "w", stdout);
	#endif

	ios_base::sync_with_stdio(0), cin.tie(0);

	int n, k;
	cin >> n >> k;

	auto rot = [&](int &i, int &j)
	{
		swap(j, i);
		i = n-1-i;
	};

	vector<string> s(n);
	for (auto &i : s) cin >> i;

	auto a1 = f(s, k);
	auto s2 = s;
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < n; ++j)
		{
			int x = i, y = j;
			rot(x, y);
			s2[x][y] = s[i][j];
		}

	auto a2 = f(s2, k);

	int ans = 0;
	for (int i = 0; i < n; ++i)
		for (int j = 0; j+k <= n; ++j)
		{
			int x = i, y = j+k-1;
			rot(x, y);
			ans = max(ans, a1[i][j] + a2[x][y]);
		}
	cout << ans << "\n";

	return 0;
}
