// ==========================================================================
//
//                   Bismillahir-Rahmanir-Rahim
//
// ==========================================================================
#include <bits/stdc++.h>
#define        ll                              long long
#define        f(x,y,z)                        for(int x=y;x<z;x++)
#define        take1(a);                       scanf("%d",&a);
#define        take2(a,b);                     scanf("%d%d",&a,&b);
#define        take3(a,b,c);                   scanf("%d%d%d",&a,&b,&c);
#define        take4(a,b,c,d);                 scanf("%d%d%d%d",&a,&b,&c,&d);
#define        pii                             pair<int,int>
#define        mem(a,x)                        memset(a,x,sizeof(a))
#define        N                               100010
#define        M                               1000000007
#define        pi                              acos(-1.0)
#define        ff                              first
#define        ss                              second
#define        pb                              push_back
template < class T> inline T gcd(T a, T b){return a%b ? gcd(b,a%b) : b;}
using namespace std;
int ar[5005][5005];int che[N];pii paint[N];int p[3][5005];
int main()
{
    int r,c,n;
    take3(r,c,n);int row=0,clm=0;
    f(i,0,n){
     take1(che[i]);
     take2(paint[i].ff,paint[i].ss);
    }
    for(int i=n-1;i>=0;i--){
         if(p[che[i]][paint[i].ff]) continue;
         if(che[i]==1){
            row++;p[che[i]][paint[i].ff]=1;
            f(j,1,c+1){
                if(ar[paint[i].ff][j]==0)
                     ar[paint[i].ff][j]=paint[i].ss;
            }
         }
         else{
             clm++;p[che[i]][paint[i].ff]=1;
            f(j,1,r+1){
                if(ar[j][paint[i].ff]==0)
                     ar[j][paint[i].ff]=paint[i].ss;
            }


         }
        if(row==r||clm==c) break;
    }
    f(i,1,r+1){ f(j,1,c+1) printf("%d ",ar[i][j]);printf("\n");}
      return 0;
}
