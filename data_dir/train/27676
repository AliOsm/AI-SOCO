#include <fstream>
#include <iostream>
#include <vector>
#include <cstring>
#include <algorithm>
#include <queue>
 
using namespace std;

const int Nmax = 1000005;
const int INF = 1000000000;
const int MOD = 998244353;

void fix(int &x) {
    if(x >= MOD) {
        x -= MOD;
    }
}

int a[Nmax];

int main()
{
    int t, n;
    #ifndef ONLINE_JUDGE
        freopen ("data.in","r",stdin);
        freopen ("data.out","w",stdout);
    #endif
    cin.sync_with_stdio( false );
    cin >> t;
    while(t--) {
        cin >> n;
        vector<int> lft(n + 1, -1);
        vector<int> rgt(n + 1, -1);
        vector<int> pos(n + 1, -1);
        priority_queue<pair<int, int>> Q;
        for(int i = 1; i <= n; i++) {
            int x;
            cin >> x;
            a[i] = x;
            pos[x] = i;
            Q.push({1, x});
        }
        int i;
        for(i = 1; i <= n; i++) {
            int p = pos[i];
            int myCount;
            if(p == 1 || lft[p - 1] == -1) {
                myCount = 1;
            }
            else {
                myCount = p - lft[p - 1] + 1;
            }
            while(!Q.empty() && Q.top().second < i) {
                Q.pop();
            }
            int maxCount = Q.top().first;
            if(myCount < maxCount) {
                cout << "No\n";
                break;
            }
            if(p == 1 || lft[p - 1] == -1) {
                lft[p] = p;
            }
            else {
                lft[p] = lft[p - 1];
            }
            if(p == n || rgt[p + 1] == -1) {
                rgt[p] = p;
            }
            else {
                rgt[p] = rgt[p + 1];
            }
            rgt[lft[p]] = rgt[p];
            lft[rgt[p]] = lft[p];
            if(rgt[p] < n) {
                Q.push({rgt[p] - lft[p] + 2, a[rgt[p] + 1]});
            }
        }
        if(i == n + 1) {
            cout << "Yes\n";
        }
    }
    return 0;
}