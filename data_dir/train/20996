

    // Sakhiya07 - Yagnik Sakhiya
     
    #include <bits/stdc++.h>
    using namespace std;
     
    #define ll long long int
    #define ld long double
    #define ff first
    #define ss second
    #define pb push_back
    #define mp make_pair
    #define bp __builtin_popcountll
    #define MOD 1000000007
    const int N = 2e3 + 5;
     
    #define FAST ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);srand(time(NULL));
     
    #include <ext/pb_ds/assoc_container.hpp> 
    #include <ext/pb_ds/tree_policy.hpp> 
    using namespace __gnu_pbds; 
    #define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update>
    ll a[N][N];
    int main() 
    {
        string s;
        cin >> s;
        string t = s;
        reverse(t.begin(),t.end());
        ll n = s.size();
        s = 'A' + s;
        t = 'A' + t;
        ll p1[n+1]={0};
        p1[0] = 1;
        for(ll i=1;i<=n;i++)  p1[i] = (p1[i-1] * 31)%MOD;
        ll pre[n+1]={0},suf[n+1]={0};
        for(ll i=1;i<=n;i++)
        {
            pre[i] = (p1[i] * (s[i]-'a'+1))%MOD;
            pre[i] = (pre[i] + pre[i-1])%MOD;
        }
        for(ll i=1;i<=n;i++)
        {
            suf[i] = (p1[i] *(t[i]-'a'+1))%MOD;
            suf[i] = (suf[i] + suf[i-1])%MOD;
        }
        ll dp[n+2]={0};
        for(ll i=1;i<=n;i++)
        {
            for(ll j=1;j<=n-i+1;j++)
            {
                ll temp1 = (pre[j+i-1] - pre[j-1] + MOD)%MOD;
                ll temp2 = (suf[n-j+1] - suf[n-j+1-i] + MOD)%MOD;
                ll start1 = j;
                ll start2 = n-j+2-i;
                if(start2<start1)   
                {
                    temp2 = (temp2 * p1[start1-start2])%MOD;
                }
                else
                {
                    temp1 = (temp1 * p1[start2-start1])%MOD;
                }
                if(temp1==temp2)  a[j][i] = 1;
            }
        }
        for(ll i=n;i>=1;i--)
        {
            for(ll j=0;j<=n;j++)   dp[i]+=a[i][j];
            dp[i] += dp[i+1];
        }
        ll ans = 0;
        for(ll i=1;i<=n;i++)
        {
            for(ll j=1;j<=n;j++)
            {
                if(a[i][j]==1)
                {
                    if(i+j<n+2)    ans += dp[i+j];
                }
            }
        }
        cout<<ans;
    }    
    	 	   							 				  		  	 			