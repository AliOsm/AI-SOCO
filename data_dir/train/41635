#include <bits/stdc++.h>
using namespace std;

const int N = (1 << 17);
int n;
int st[N << 1][60];
int a[N];

void build(int p, int s, int e)
{
    if (s == e)
    {
        if (s <= n)
        {
            for (int i = 0; i < 60; i++)
                st[p][i] = 1 + (i % a[s] == 0 ? 1 : 0);
        }
        return;
    }
    build(p << 1, s, (s + e) / 2);
    build(p << 1 | 1, (s + e) / 2 + 1, e);
    for (int i = 0; i < 60; i++)
        st[p][i] = st[p << 1][i] + st[p << 1 | 1][(i + st[p << 1][i]) % 60];
}

int query(int p, int s, int e, int i, int j, int t)
{
    if (s > j || e < i)
        return 0;
    if (s >= i && e <= j)
        return st[p][t % 60];
    int t1 = query(p << 1, s, (s + e) / 2, i, j, t);
    int t2 = query(p << 1 | 1, (s + e) / 2 + 1, e, i, j, t + t1);
    return t1 + t2;
}

void update(int p, int val)
{
    p += N - 1;
    for (int i = 0; i < 60; i++)
        st[p][i] = 1 + (i % val == 0 ? 1 : 0);
    p /= 2;
    while (p > 0)
    {
        for (int i = 0; i < 60; i++)
            st[p][i] = st[p << 1][i] + st[p << 1 | 1][(i + st[p << 1][i]) % 60];
        p /= 2;
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> a[i];
    build(1, 1, N);
    int q;
    cin >> q;
    while (q--)
    {
        string s;
        cin >> s;
        int x, y;
        cin >> x >> y;
        if (s[0] == 'A')
        {
            y--;
            cout << query(1, 1, N, x, y, 0) << endl;
        }
        else
        {
            update(x, y);
        }
    }
}