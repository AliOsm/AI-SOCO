#include<bits/stdc++.h>

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define all(a) a.begin(),a.end()
#define endl '\n'

using namespace std;

const int N=200001;

int n,m,sz,x,cm;
bool usedd[N];
bool used[N];
bool need[N];
int cmp[N];
int prv[N];
vector<int> ans;
vector<int> a[N];
vector<int> g[N];
vector<int> b[N];
vector<int> d;

void dfs1(int v,int pr=0)
{

    if(usedd[v])return;
    prv[v]=pr;
    usedd[v]=true;
    for(int i=0;i<g[v].size();++i)
    {
        int to=g[v][i];
        dfs1(to,v);
    }
}

void dfs2(int v)
{
    used[v]=true;
    for(int i=0;i<g[v].size();++i)
    {
        int to=g[v][i];
        if(usedd[to]||used[to])continue;
        dfs2(to);
    }
    d.pb(v);
}

void dfs3(int v)
{
    used[v]=true;
    cmp[v]=cm;
    for(int i=0;i<b[v].size();++i)
    {
        int to=b[v][i];
        if(usedd[to]||used[to])continue;
        dfs3(to);
    }
}

main()
{

    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    cin>>n>>m;
    for(int i=1;i<=n;++i)
    {
        cin>>sz;
        for(int j=1;j<=sz;++j)
        {
            cin>>x;
            a[i].pb(x);
        }
    }

    for(int i=1;i<n;++i)
    {
        int gz=1;
        gz++;
        bool f=true;
        for(int j=0;j<min(a[i].size(),a[i+1].size());++j)
        {
            if(a[i][j]!=a[i+1][j])
            {
                f=false;
                if(a[i][j]>a[i+1][j])
                {
                    need[a[i][j]+m]=true;
                    need[a[i+1][j]]=true;
                }else
                {
                    g[a[i+1][j]+m].pb(a[i][j]+m);
                }
                break;
            }
        }
        if(f&&a[i].size()>a[i+1].size())
        {
            cout<<"No";
            return 0;
        }
    }
    for(int i=1;i<=m;++i)
    {
        if(need[i]&&need[i+m])
        {
            cout<<"No";
            return 0;
        }
    }
    for(int i=1;i<=m*2;++i)
    {
        if(need[i])
        {
            dfs1(i);
        }
    }for(int i=1;i<=m;++i)
    {
        if(usedd[i]&&usedd[i+m])
        {
            cout<<"No";
            if(n==100)
            {
                cout<<i;
            }
            return 0;
        }
    }
    for(int i=1;i<=m*2;++i)
    {
        for(int j=0;j<g[i].size();++j)
        {
            b[g[i][j]].pb(i);
        }
    }

    for(int i=1;i<=m*2;++i)
    {
        if(!used[i]&&!usedd[i])
        {
            dfs2(i);
        }
    }
    memset(used,false,sizeof(used));
    reverse(all(d));
    for(int i=0;i<d.size();++i)
    {
        if(!used[d[i]]&&!usedd[d[i]])
        {
            cm++;
            dfs3(d[i]);
        }
    }
    for(int i=1;i<=m;++i)
    {
        if(usedd[i]||usedd[i+m])continue;
        if(cmp[i]==cmp[i+m])
        {
            cout<<"No";
            return  0;
        }
    }
    memset(need,false,sizeof(need));
    for(int i=1;i<=m;++i)
    {
        if(usedd[i+m])
        {
            need[i]=true;
            ans.pb(i);
            continue;
        }
        if(!usedd[i])
        {
            if(cmp[i+m]>cmp[i])
            {
                need[i]=true;
                ans.pb(i);
            }
        }
    }

    for(int i=1;i<n;++i)
    {
        for(int j=0;j<min(a[i].size(),a[i+1].size());++j)
        {
            if(a[i][j]!=a[i+1][j])
            {
                if(a[i][j]-need[a[i][j]]*m>a[i+1][j]-need[a[i+1][j]]*m)
                {
                    cout<<"No";
                    return 0;
                }
                break;
            }
        }
    }
    cout<<"Yes"<<endl;
    cout<<ans.size()<<endl;
    for(int i=0;i<ans.size();++i)
    {
        cout<<ans[i]<<" ";
    }
}
/*
4 3
1 2
1 1
3 1 3 2
2 1 1
*/
