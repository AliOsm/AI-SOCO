#include<bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define all(a) a.begin(),a.end()
#define endl '\n'
#define y1 y123123123
#define int ll

using namespace std;

const int N = 1e5 + 3;
const int inf = 1e9 + 3;
const int M = 8;

vector<int> h[2][N];
vector<int> st[N];
vector<int> md;
vector<int> p;
vector<int> s(M, 0);
int l1[N], r1[N], l2[N], r2[N];

vector<pair<int, int> > g1;
vector<pair<int, int> > g2;
vector<int> s1[N], s2[N];

int n;

int rnd() {
    int r = rand();
    r <<= 15;
    return rand() ^ r;
}

bool prost(int x) {
    for(int i = 2; i * i <= x; ++i) {
        if(x % i == 0) return false;
    }
    return true;
}

void solve(int z) {
    g1.clear();
    g2.clear();

    for(int i = 1; i <= n; ++i) {
        g1.pb(mp(r1[i], i));
        g2.pb(mp(l1[i], i));
    }

    sort(all(g1));
    sort(all(g2));
    reverse(all(g2));

    for(int i = 0; i < n; ++i) {
        s1[i].clear();
        s2[i].clear();
        int nm1 = g1[i].ss;
        int nm2 = g2[i].ss;

        for(int j = 0; j < M; ++j) {
            int s11 = i > 0 ? s1[i - 1][j] : 0;
            int s22 = i > 0 ? s2[i - 1][j] : 0;
            s11 += st[nm1][j];
            s22 += st[nm2][j];
            if(s11 >= md[j]) s11 -= md[j];
            if(s22 >= md[j]) s22 -= md[j];

            s1[i].pb(s11);
            s2[i].pb(s22);
        }
    }

    for(int i = 1; i <= n; ++i) {
        for(int j = 0; j < M; ++j) {
            h[z][i].pb(s[j]);
        }

        int l = 0;
        int r = n - 1;
        while(l < r) {
            int mid = (l + r + 1) / 2;
            if(g1[mid].ff < l1[i]) l = mid;
            else r = mid - 1;
        }

        if(g1[l].ff < l1[i]) {
            for(int j = 0; j < M; ++j) {
                h[z][i][j] -= s1[l][j];
                if(h[z][i][j] < 0)h[z][i][j] += md[j];
            }
        }

        l = 0;
        r = n - 1;
        while(l < r) {
            int mid = (l + r + 1) / 2;
            if(g2[mid].ff > r1[i]) l = mid;
            else r = mid - 1;
        }

        if(g2[l].ff > r1[i]) {
            for(int j = 0; j < M; ++j) {
                h[z][i][j] -= s2[l][j];
                if(h[z][i][j] < 0)h[z][i][j] += md[j];
            }
        }
    }
}

main() {
    srand(time(0));
    md.resize(M);
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    for(int j = 0; j < M; ++j) {
        md[j] = rnd() % 100000000 + 1000000007;
        md[j] = max(md[j], 1000000007ll);
        while(!prost(md[j])) {
            md[j]++;
        }
    }
    p.resize(M);
    for(int j = 0; j < M; ++j) {
        p[j] = rnd() % 100 + 100;
        while(!prost(p[j]))p[j]++;
    }

    cin >> n;
    for(int i = 0; i <= n; ++i) {
        h[0][i].resize(M);
        h[1][i].resize(M);
        st[i].resize(M);
    }
    for(int j = 0; j < M; ++j) st[0][j] = 1;
    for(int i = 1; i <= n; ++i) {
        for(int j = 0; j < M; ++j)
            st[i][j] = st[i - 1][j] * p[j] % md[j];
    }

    for(int i = 1; i <= n; ++i) {
        for(int j = 0; j < M; ++j) {
            s[j] += st[i][j];
            s[j] %= md[j];
        }
    }

    for(int i = 1; i <= n; ++i) {
        cin >> l1[i] >> r1[i] >> l2[i] >> r2[i];
    }
    solve(0);
    for(int i = 1; i <= n; ++i) {
        l1[i] = l2[i];
        r1[i] = r2[i];
    }
    solve(1);

    for(int i = 1; i <= n; ++i) {
        for(int j = 0; j < M; ++j) {
            if(h[0][i][j] % md[j] != h[1][i][j] % md[j]) {
                cout << "NO" << endl;
                return 0;
            }
        }
    }

    cout << "YES";

}
