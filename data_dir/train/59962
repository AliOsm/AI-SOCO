#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const int N = 8;
int x[N], y[N];
vector<vector<int> > X, Y;
map<pair<int, int>, int> freq;

bool check(const vector<int> &X, const vector<int> &Y) {
	freq.clear();
	if (X[0] >= X[1] || X[1] >= X[2])
		return false;
	if (Y[0] >= Y[1] || Y[1] >= Y[2])
		return false;
	for (size_t i = 0; i < X.size(); ++i)
		for (size_t j = 0; j < Y.size(); ++j)
			++freq[make_pair(X[i], Y[j])];
	for (int i = 0; i < N; ++i)
		--freq[make_pair(x[i], y[i])];
	for (size_t i = 0; i < X.size(); ++i)
		for (size_t j = 0; j < Y.size(); ++j) {
			if (i == 1 && j == 1) {
				if (freq[make_pair(X[i], Y[j])] != 1)
					return false;
			} else if (freq[make_pair(X[i], Y[j])] != 0)
				return false;
		}
	return true;
}

int main() {
//	freopen("a", "r", stdin);
	for (int i = 0; i < N; ++i)
		scanf("%d%d", &x[i], &y[i]);
	for (int i = 0; i < N; ++i)
		for (int j = 0; j < N; ++j)
			for (int k = 0; k < N; ++k)
				if (i != j && i != k && j != k) {
					X.push_back(vector<int>());
					X.back().push_back(x[i]);
					X.back().push_back(x[j]);
					X.back().push_back(x[k]);
				}
	for (int i = 0; i < N; ++i)
		for (int j = 0; j < N; ++j)
			for (int k = 0; k < N; ++k)
				if (i != j && i != k && j != k) {
					Y.push_back(vector<int>());
					Y.back().push_back(y[i]);
					Y.back().push_back(y[j]);
					Y.back().push_back(y[k]);
				}
	bool can = false;
	for (size_t i = 0; i < X.size() && !can; ++i)
		for (size_t j = 0; j < Y.size() && !can; ++j)
			can |= check(X[i], Y[j]);
	if (can)
		puts("respectable");
	else
		puts("ugly");
	return 0;
}