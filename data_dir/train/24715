#include <bits/stdc++.h>
using namespace std;
#define finish(x) return cout << x << endl, 0
#define ll long long

const int N = 1000001;

int n, dp[N][20][2], mod = 1e9 + 7;

int calc(int x, int y){
    return n / ((1 << x) * (y ? 3 : 1));
}
int solve(int ind, int x, int y){
    if(ind == n) return x == 0 && y == 0;
    int &ret = dp[ind][x][y];
    if(ret != -1) return ret;
    ret = 1LL * solve(ind + 1, x, y) * (calc(x, y) - ind) % mod;
    if(x) ret += 1LL * solve(ind + 1, x - 1, y) * (calc(x - 1, y) - calc(x, y)) % mod;
    if(ret >= mod) ret -= mod;
    if(y) ret += 1LL * solve(ind + 1, x, y - 1) * (calc(x, y - 1) - calc(x, y)) % mod;
    if(ret >= mod) ret -= mod;
    return ret;
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    memset(dp, -1, sizeof dp);
    cin >> n;
    int nn = n;
    int log = 0;
    while(nn){
        log++;
        nn /= 2;
    }
    log--;
    int ans = solve(1, log, 0);
    if((1 << (log - 1)) * 3 <= n) ans += solve(1, log - 1, 1);
    if(ans >= mod) ans -= mod;
    cout << ans << endl;
}
