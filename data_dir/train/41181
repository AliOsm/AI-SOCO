#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define rep(i,a,b) for(int i = (a); i < (b); i++)
#define iter(it,c) for(auto it = (c).begin(); it != (c).end();++it)
#define pb push_back
#define fs first
#define sc second
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vii> vvii;

const int INF = ~(1<<31);
const double pi = acos(-1);
const double EPS = 1e-9;
typedef unsigned long long ull;

template <class T> T smod(T a, T b) {
  return (a % b + b) % b; }

const int cs = 25*50000;
int n;
int tts = 0;
vector<vector<bitset<cs+1>>> M;


int main() {
    cin.sync_with_stdio(false);
    cin >> n;
    vi B,C, A(2*n);
    rep(i,0,2*n) cin >> A[i];
    sort(A.begin(), A.end());
    rep(i,2,2*n) tts += A[i];

    B.pb(A[0]);
    C.pb(A[1]);

    A.erase(A.begin());
    A.erase(A.begin());

    rep(i,0,49) {
        vector<bitset<cs+1>> LE;
        rep(j,0,25) {
            bitset<cs+1> L;
            LE.pb(L);
        }
        M.pb(LE);
    }


    M[0][0].set(0,1);
    for(int i = 0; i < n*2-2; i++) {
        for(int g = 0; g < 25; g++) {
            for(int sm = 0; sm <= cs; sm++) {
                if(M[i][g].test(sm)) {
                    M[i+1][g].set(sm,1);
                    if(g+1 <= 24 && sm+A[i] <= 25*cs) {
                        M[i+1][g+1].set(sm+A[i],1);
                    }
                }
            }
        }
    }
    int mn = 100000000;
    int val = 0;
    for(int sm = 0; sm <= cs; sm++) {
        if(M[2*n-2][n-1].test(sm)) {
            int oth = tts-sm;
            if(abs(oth-sm) < mn) {
                mn = min(mn, abs(oth-sm));
                val = sm;
            }
        }
    }
    int at = n*2-2;
    int g = n-1;
    int sm = val;
    while(at != 0) {
        if(g-1 >= 0 && sm-A[at-1] >= 0 && M[at-1][g-1].test(sm-A[at-1]))  {
            B.pb(A[at-1]);
            sm -= A[at-1];
            at -= 1;
            g -= 1;
        } else {
            C.pb(A[at-1]);
            at -= 1;
        }
    }

    sort(B.begin(), B.end());
    sort(C.rbegin(), C.rend());
    iter(it,B) cout << *it << " ";
    cout << endl;
    iter(it,C) cout << *it << " ";
    cout << endl;
    return 0;
}

















