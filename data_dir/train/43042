#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>
#include <list>
#include <unordered_set>
#include <complex>

#define ll long long
#define ld long double
#define ull unsigned ll
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vpii vector<pii>
#define vvi vector<vector<int>>
#define endl '\n'
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const ll  Inf = 1e18;
ll LINF = (ll)2e18;
using namespace std;
ll mod = 1e9 + 7;
ll mod3 = 998244353;
ll mod2 = 1e9 + 123;
#define M_PI       3.14159265358979323846   // pi

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("javacert.in", "r", stdin);
	//freopen("javacert.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0); cout.setf(ios::fixed); cout.precision(20);
	int n, k;
	cin >> n >> k;
	vi ANS;
	int mn = 1e9;
	forn(i, 0, k + 1) {
		vi ans = {i};
		int cur = i + k + 1;
		while (cur < n) {
			cur = min(n-1, cur + k);
			ans.push_back(cur);
			cur += k + 1;
		}
		if (ans.size() < mn) {
			mn = ans.size();
			ANS = ans;
		}
	}
	cout << ANS.size() << endl;
	forn(i, 0, ANS.size()) {
		cout << ANS[i]+1 << " ";
	}
	return 0;
}