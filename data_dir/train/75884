#include <bits/stdc++.h>

#define FI(i,a,b) for(int i=(a);i<=(b);i++)
#define FD(i,a,b) for(int i=(a);i>=(b);i--)

#define LL long long
#define Ldouble long double
#define PI 3.1415926535897932384626

#define PII pair<int,int>
#define PLL pair<LL,LL>
#define mp make_pair
#define fi first
#define se second

using namespace std;

int s[5][5], tmp[4];
int sol[8], ans = 999999;
/*
1: abbb
2: abba
3: abab
4: abaa
5: aabb
6: aaba
7: aaab
*/

bool important[8][8];
int v[8], g[8], p;

void deal(int id){
	FI(i, 1, 7) if(important[i][id]) g[i] -= v[id];
}

void attempt(){
	p = 0;
	FI(i, 1, 4) FI(j, i + 1, 4) g[++p] = s[i][j];
	deal(1); //1 done
	if((g[2] + g[3] - g[6]) & 1) return;
	v[5] = (g[2] + g[3] - g[6]) / 2;
	deal(5); //5 done
	if((g[1] + g[3] - g[5]) & 1) return;
	v[3] = (g[1] + g[3] - g[5]) / 2;
	deal(3); //3 done
	if((g[1] + g[2] - g[4]) & 1) return;
	v[2] = (g[1] + g[2] - g[4]) / 2;
	deal(2); //2 done
	v[4] = g[1];
	v[6] = g[2];
	v[7] = g[3];
	
	int summ = 0;
	FI(i, 1, 7){
		if(v[i] < 0) return;
		summ += v[i];
	}
	if(summ < ans){
		ans = summ;
		FI(i, 1, 7) sol[i] = v[i];
	}
}

bool wtf[800008][4];

int main(){
	FI(i, 1, 4) FI(j, i + 1, 4) scanf("%d", &s[i][j]);
	FI(i, 1, 7){
		FI(j, 0, 2){
			if((i - 1) & (1 << j)) tmp[3 - j] = 0;
			else tmp[3 - j] = 1;
		}
		int tp = 0;
		FI(j, 1, 4) FI(k, j + 1, 4){
			tp++;
			if(tmp[j - 1] != tmp[k - 1]){
				important[tp][i] = 1;
			}
		}
	}
	
	FI(i, 0, 100000) v[1] = i, attempt();
	if(ans == 999999){
		printf("-1\n");
		return 0;
	}
	printf("%d\n", ans);
	
	p = 0;
	FI(i, 1, 7) while(sol[i]--){
		p++;
		wtf[p][0] = 0;
		FI(j, 0, 2){
			if((i - 1) & (1 << j)) wtf[p][3 - j] = 0;
			else wtf[p][3 - j] = 1;
		}
	}
	FI(i, 0, 3){
		FI(j, 1, ans) printf("%c", (int)wtf[j][i] + 'a');
		printf("\n");
	}
	return 0;
}