#include<bits/stdc++.h>
using namespace std;

//defines
#define openin freopen("input.txt","r",stdin)
#define openout freopen("output.txt","w",stdout)
#define fast ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define ll long long
#define int long long
#define mod 1000000007
#define repr(i,x,y) for (__typeof(x) i=x;i>=y;i--)
#define rep(i,x,y) for (__typeof(x) i=x;i<=y;i++)
#define all(c) (c).begin(),(c).end()
#define ff first
#define ss second
#define pb push_back
#define mp make_pair

/* Print pair */
template <typename T,typename S>
ostream & operator << (ostream &os , const pair<T,S> &v) {
    os << "(" ;
    os << v.first << "," << v.second << ")" ;
    return os ;
}
/* Print vector */
template <typename T>
ostream & operator << (ostream &os , const vector<T> &v) {
    os << "[" ;
    int sz = v.size() ;
    for(int i = 0 ; i < sz ; ++i) {
        os << v[i] ;
        if(i!=sz-1)os << "," ;
    }
    os << "]\n" ;
    return os ;
}
/* Print set */
template <typename T>
ostream & operator << (ostream &os , const set<T> &v) {
    T last = *v.rbegin() ;
    os << "[" ;
    for(auto it : v) {
        os << it  ;
        if(it != last) os << "," ;
    }
    os << "]\n" ;
    return os ;
}
/* Print Map */
template <typename T,typename S>
ostream & operator << (ostream &os , const map<T,S> &v) {
    for(auto it : v) {
        os << it.first << " : " << it.second << "\n" ;
    }
    return os ;
}
int power(int a , int b)
{
    int res = 1 ;
    while(b)
    {
        if(b%2) {
            res = (res * a) % mod ;
        }
        b/=2 ;
        a = (a*a) % mod ;
    }
    return res ;
}

//debug
#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
		cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
		const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

const int N = 105 ;

string arr[2] ;
int dp[N][3] ;

int32_t main()
{
    fast;
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin) ;
    #endif // ONLINE_JUDGE

    cin >> arr[0] >> arr[1] ;
    int n = arr[0].size() ;
    for(int i = 1 ; i < n ; ++i) {
        for(int j = 0 ; j < 3 ; ++j) {
            dp[i][j] = max({dp[i - 1][0] , dp[i - 1][1] , dp[i - 1][2]}) ;
        }
        if(arr[0][i] == arr[1][i] and arr[0][i] == '0') {
            if(arr[0][i - 1] == '0') {
                dp[i][0] = max(dp[i][0] , dp[i - 1][2] + 1) ;
            }
            if(arr[1][i - 1] == '0') {
                dp[i][0] = max(dp[i][0] , dp[i - 1][1] + 1) ;
            }
        }
        if(arr[0][i - 1] == arr[1][i - 1] and arr[0][i - 1] == '0') {
            int temp = (i - 2 >= 0) ? dp[i - 2][0] : 0 ;
            if(arr[0][i] == '0') {
                dp[i][1] = max(dp[i][1] , temp + 1) ;
            }
            if(arr[1][i] == '0') {
                dp[i][2] = max(dp[i][2] , temp + 1) ;
            }
        }
        dp[i][0] = max({dp[i][0] , dp[i][1] , dp[i][2]}) ;
    }
    int res = -1 ;
    for(int i = 0 ; i < n ; ++i) for(int j = 0 ; j < 3 ; ++j) {
        res = max(res , dp[i][j]) ;
    }
    cout << res << endl ;
    return 0;
}
