#include <bits/stdc++.h>
using namespace std;

#define fr(i,n)    for(int i=0;i<n;i++)
#define fru(i,a,b) for(int i=a;i<=b;i++)
#define frd(i,a,b) for(int i=a;i>=b;i--)

typedef long long   ll;
typedef long double ld;
	
const int INF = 2e9 + 10;
const int MOD = 1e9 + 7;
const int N   = 1e6 + 10;

struct POINT {
   int x;
   int y;
   //POINT(){}
   //POINT(int x, int y): x(x), y(y){}
   //bool operator < (const POINT &e) const { return x < e.x || x == e.x && y < e.y; }
} p[N];

int n, k, m, connect, cnt; 
int mark[N], c[N];
vector<vector<int>> vec;

void dfs(int v) {
   
   if(mark[v])
      return;
   
   mark[v] = connect;
   cnt++;
   
   fr(i, (int)vec[v].size())
   {
      int u = vec[v][i];
      if(!mark[u])
         dfs(u);
   }
}

int main() {
   ios_base::sync_with_stdio(0);
   cout.tie(0); cin.tie(0);
   
   cin >> n >> m;

   vec.resize(n + 1);
   
   map<pair<int, int>, int> mp; 
   fru(i, 1, m)
   {
      int u, v;
      cin >> u >> v;
      vec[v].push_back(u);
      vec[u].push_back(v);
   }
   
   connect = 0;
   fru(i, 1, n) if(!mark[i])
   {
      connect++;
      
      cnt = 0;
      dfs(i);
      c[connect] = cnt;
   }
   
   fru(i, 1, n) if((int)vec[i].size() != c[mark[i]] - 1)
   {
      cout << "NO";
      return 0;
   }
   
   cout << "YES";
   
   return 0;
}