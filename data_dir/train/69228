#include <bits/stdc++.h>
using namespace std;

//#define int           long long
#define S             second
#define F             first
#define pb            push_back
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend() 
#define lb            lower_bound
#define si(c)         (int)((c).size())
#define lcm(a, b)      (a * (b / __gcd(a,b)))  
#define inf           (long long)(1e15)
#define endl          '\n'
#define mp            make_pair
#define time(s)       (double(clock()-s)/double(CLOCKS_PER_SEC))
#define debug(args...)    _F(#args, args)
#define vi            std::vector<int>
#define pii           pair<int, int> 
#define vpi           vector<pii>

clock_t start;
mt19937_64 rng(chrono::system_clock::now().time_since_epoch().count());

template<typename T> void _F(const char *name, T arg1){
    cerr << name << " = " << arg1 << endl;
}template<typename T, typename... Args> void _F(const char *names, T arg1, Args... args){
    const char *name = strchr(names, ',');
    cerr.write(names, name-names) << " = " << arg1 << endl;
    _F(name+2, args...);
}
template<typename T1, typename T2> istream& operator>>(istream& in, pair<T1, T2> &q){
    in >> q.F >> q.S; return in;
}template<typename T1, typename T2> ostream& operator<<(ostream& out, pair<T1, T2> &q){
    out << q.F << " " << q.S; return out;
}template< typename T1, typename T2> pair<T1, T2> operator+(pair<T1, T2> p1, pair<T1, T2> p2){
    return {p1.F+p2.F, p1.S+p2.S};
}template< typename T1, typename T2> pair<T1, T2> operator-(pair<T1, T2> p1, pair<T1, T2> p2){
    return {p1.F-p2.F, p1.S-p2.S};
}

const int N = 1e5+1;

struct FenwickTree{
    int f[N];
    FenwickTree(){
        for(int i = 0; i < N; i++)
            f[i] = 0;
    }
    void insert(int k, int x){
        while(k < N)f[k] += x, k += k&(-k);
    }
    int sum(int r){
        int ans = 0;
        while(r > 0)ans += f[r], r -= r&(-r);
        return ans;
    }
    int sum(int l, int r){
        if(r < l)return 0; 
        return sum(r) - sum(l-1);
    }
}A[11][10], T[11][10], G[11][10], C[11][10];

string s;

void upd(int x, int j){
    int i = j-1;
    if(s[i] == 'A'){
        for(int k = 1; k <= 10; k++){
            A[k][j%k].insert(j, x);
        }
    }
    if(s[i] == 'G'){
        for(int k = 1; k <= 10; k++){
            G[k][j%k].insert(j, x);
        }
    }
    if(s[i] == 'T'){
        for(int k = 1; k <= 10; k++){
            T[k][j%k].insert(j, x);
        }
    }
    if(s[i] == 'C'){
        for(int k = 1; k <= 10; k++){
            C[k][j%k].insert(j, x);
        }
    }
}

void solve(){
    cin >> s;
    int n = si(s);
    for(int i = 0; i < n; i++){
        upd(1, i+1);
    }
    int q;
    cin >> q;
    while(q--){
        int t;
        cin >> t;
        if(t == 1){
            int x;
            char c;
            cin >> x >> c;
            upd(-1, x);
            s[x-1] = c;
            upd(1, x);
        }
        else{
            int l, r;
            string ss;
            cin >> l >> r >> ss;
            n = si(ss);
            int ans = 0;
            for(int i = 0; i < si(ss); i++){
                if(ss[i] == 'A'){
                    ans += A[n][(l+i)%n].sum(l, r);
                }
                if(ss[i] == 'G'){
                    ans += G[n][(l+i)%n].sum(l, r);
                }
                if(ss[i] == 'T'){
                    ans += T[n][(l+i)%n].sum(l, r);
                }
                if(ss[i] == 'C'){
                    ans += C[n][(l+i)%n].sum(l, r);
                }
            }
            cout << ans << endl;
        }
    }
}

signed main(){

    ios_base::sync_with_stdio(0); 
    cin.tie(0); cout.tie(0);   

    int t = 1;
    start = clock(); 

    cout << fixed << setprecision(12);

    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout);
    freopen("error.txt", "w", stderr);
    #endif

    //cin >> t;

    for(int i = 1; i <= t; ++i){
        //cout << "Case #" << i << ": ";
        solve();
        //cout << endl;
    }
    //cerr << time(start);
    return 0;
}