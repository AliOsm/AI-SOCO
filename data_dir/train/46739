#include <bits/stdc++.h>
using namespace std;
int S[18][1<<18];
int A[1<<18];
int n, q;
void dfs(int N, int op){
	if(N == 0) return;
	for(int i = 0; i < (1<<N); i += 2){
		S[N-1][i>>1] = (op == 0) ? (S[N][i] | S[N][i+1]) : (S[N][i] ^ S[N][i+1]);
	}
	dfs(N-1, 1 - op);
}
void query(int N, int val, int pos, int op){
	S[N][pos] = val;
	if(N == 0) return;
	if(pos & 1) query(N - 1, (op == 0) ? (S[N][pos] | S[N][pos-1]) : (S[N][pos] ^ S[N][pos-1]), pos >> 1, 1 - op);
	else query(N - 1, (op == 0) ? (S[N][pos] | S[N][pos+1]) : (S[N][pos] ^ S[N][pos+1]), pos >> 1, 1 - op);
}
int main(){
	scanf("%d %d", &n, &q);
	for(int i = 0; i < (1<<n); i++){
		scanf("%d", &A[i]);
	}
	for(int i = 0; i < (1<<n); i++) S[n][i] = A[i];
	dfs(n,0);
	for(int i = 0; i < q; i++){
		int p, a;
		scanf("%d %d", &p, &a);
		p--;
		query(n,a,p,0);
		printf("%d\n", S[0][0]);
	}
	return 0;
}