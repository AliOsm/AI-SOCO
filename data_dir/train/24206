#include <iostream>
#include <algorithm>
#include <string>
#include <set>
#include <vector>

using namespace std;

vector<int> factors[2001];
int memo[2001][2001];
int n, k;
int MOD = 1000000007;


void precomp()
{
   for(int i = 1; i <= 2000; i++)
   {
      factors[0].push_back(i);
      for(int j = 1; j*j <= i; j++)
      {  
         if(i%j == 0)
         {
            factors[i].push_back(j);
            if(j != i/j) factors[i].push_back(i/j);
         }
      }
   }
}

int solve(int idx, int last)
{
   if(idx == k) return 1;
   int ret = memo[idx][last];
   if(ret != -1) return ret;
   ret = 0;
   for(auto it : factors[last])
   {
      int next = it;
      if(next > n) continue;
      ret += solve(idx+1, next);
      ret %= MOD;
   }
   return memo[idx][last] = ret;

}

int main()
{
   precomp();
   for(auto a : memo) fill(a, a+2001, -1);
   cin >> n >> k;
   cout << solve(0, 0) << endl;
   return 0;
}
