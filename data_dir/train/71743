#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define mod 1000000007LL
#define maxn 5000005
#define IN freopen("C.in","r",stdin)
#define OUT freopen("output.txt","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define INF 2000000000000000000LL
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 2

using namespace __gnu_pbds;
using namespace std ;

typedef tree< i64, null_type, less<i64>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef pair<i64, i64> pii;

i64 dp[1002][10002] , c[1005] , cost[1005] ;

int main()
{
    i64 i , j , k , l , m , n ;
    i64 B , W , X ;

    scanf("%lld %lld %lld %lld",&n,&W,&B,&X) ;

    for(i=1 ; i<=n ; i++) scanf("%lld",&c[i]) ;
    for(i=1 ; i<=n ; i++) scanf("%lld",&cost[i]) ;

    dp[0][0] = W ;
    for(i=1 ; i<=10000 ; i++) dp[0][i] = -INF ;

    i64 tot = 0 ;

    for(i=1 ; i<=n ; i++)
    {
        dp[i][0] = 0LL ;
        for(j=1 ; j<=10000 ; j++) dp[i][j] = -INF ;
        for(j=0 ; j<=tot ; j++)
        {
            i64 wealth = min( dp[i-1][j]+X , W+j*B) ;

            for(k=0 ; k<=c[i] && k*cost[i]<=wealth ; k++ )
            {
                dp[i][j+k] = max( dp[i][j+k] , wealth-k*cost[i] ) ;
            }
        }
        tot += c[i] ;
      //  for(j=0 ; j<=tot ;j++) printf("%lld ",dp[i][j]) ;
      //  printf("\n") ;
    }
    i64 ans = 0 ;
    for(i=0 ; i<=10000 ; i++)
    {
        if(dp[n][i]>=0) ans = i ;
    }

    cout<<ans<<endl ;

    return 0 ;
}
