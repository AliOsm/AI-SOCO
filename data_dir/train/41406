#include <iostream>
#include <set>
using namespace std;

const int MX = 100005;
int n, a[MX];
int best[MX];
int primes [MX];
int back [MX];

void sieve () {
	for (int i = 1; i<MX; i++) primes[i] = 1;
	for (int i = 2; i < MX; i++) {
		if (!primes[i]) continue;
		back[i] = i;
		for (int j = i*2; j < MX; j += i) {
			primes[j] = 0;
			back[j] = i;
		}
	}
}

int main() {
	ios_base :: sync_with_stdio (false);
	sieve ();
	cin>>n;
	for (int i=0; i < n; i++) cin>>a[i];
	int res = 0;
	for (int i=0; i < n; i++) {
		int div;
		int val = a[i];
		int mxm = 0;
		while (val > 1) {
			div = back[val];
			mxm = max (mxm, best[div]);
			val /= div;
		}
		val = a[i];
		res = max (res, mxm + 1);
		while (val > 1) {
			div = back [val];
			best[div] = mxm + 1;
			val /= div;
		}
	}
	cout<<res<<endl;
	return 0;
}