#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=2e5+10;
uli fa[mx],fi[mx];
const uli mod=1e9+7;
uli fxp(uli b,uli x){
  uli a=1;
  for(;x!=0;b=b*b%mod,x>>=1)
    if(x&1ll)a=a*b%mod;  
  return a;
}
uli cmb(int n,int k){
  if(k>n)return 0;
  return fa[n]*fi[k]%mod*fi[n-k]%mod;
}
uli ways(uli s,uli n){
  if(s<0 || n<0)return 0;
  if(s==0 && n==0)return 1;
  return cmb(s+n-1,s);
}
int main(){
  fa[0]=fi[0]=1;
  for(int i=1;i<mx;i++){
    fa[i]=fa[i-1]*uli(i)%mod;
    fi[i]=fxp(fa[i],mod-2);
  }
  uli f,w,h;
  cin>>f>>w>>h;
  uli num=0,den=0;
  for(int n=0;n<=f;n++){
    den+=ways(f-n,n)*(ways(w-(n+1),n+1)+2ll*ways(w-n,n)+ways(w-(n-1),n-1))%mod;
    num+=ways(f-n,n)*(ways(w-(h+1)*(n+1),n+1)+2ll*ways(w-n*(h+1),n)+ways(w-(h+1)*(n-1),n-1))%mod;
    den%=mod,num%=mod;
  }
  uli ans=num*fxp(den,mod-2)%mod;
  printf("%lld\n",ans);
  return 0;
}
