#include <bits/stdc++.h>

using namespace std;

struct trie {
	struct node {
		bool on;
		int num;
		int id;
		int link[26];

		node() {
			for(int i = 0; i < 26; ++i) {
				link[i] = -1;
			}

			on = num = 0;
			id = -1;
		}
	} ;

	vector<node> t; 

	trie() {
		t.push_back(node());
	}

	vector<string> list_word;

	void add(string a) {
		list_word.push_back(a);
		int v = 0;

		vector<int> list_v(1, v);

		for(int i = 0; i < a.size(); ++i) {
			int to = a[i] - 'a';

			if(t[v].link[to] == -1) {
				t[v].link[to] = t.size();
				t.push_back(node());
			}

			v = t[v].link[to];
			list_v.push_back(v);
		}

		for(int i : list_v) {
			t[i].num += (1 - t[v].on);
			t[i].id = list_word.size() - 1;
		}

		t[v].on = 1;
	}

	int get(string a) {
		pair<int, int> temp = get_id(a);

		int id = temp.first;

		if(id == -1) {
			return a.size();
		}

		if(list_word[id].size() > a.size()) {
			return a.size();
		}

		for(int i = 0; i < list_word[id].size(); ++i) {
			if(list_word[id][i] != a[i]) {
				return a.size();
			}
		}

		return temp.second + 1 + (a.size() - list_word[id].size());
	}

	pair<int, int> get_id(string a) {
		int v = 0;

		for(int i = 0; i < a.size(); ++i) {
			int to = a[i] - 'a';

			if(t[v].link[to] == -1) {
				t[v].link[to] = t.size();
				t.push_back(node());
			}

			v = t[v].link[to];

			if(i != a.size() - 1 && t[v].num == 1) {
				return {t[v].id, i + 1};
			}
		}

		return {-1, -1};
	}
} ;

int main() {
	// freopen("input.txt", "r", stdin);

	string next;

	string text = "";
	while(getline(cin, next)) {
		if(text.size()) {
			text += ',';
		}

		text += next;
	}

	trie t;

	string word = "";
	long long ans = text.size();
	for(int i = 0; i <= text.size(); ++i) {
		if(i == text.size() || text[i] < 'a' || text[i] > 'z') {
			if(word.size() == 0) {
				continue;
			}

			ans -= max(0, (int)word.size() - t.get(word));

			t.add(word);

			word = "";
		} else {
			word += text[i];
		}
	}

	cout << ans + 1 << "\n";
}
