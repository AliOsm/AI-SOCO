#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <string>
// DON'T DIVIDE
// Try different approaches
using namespace std;

long long n, q;
const int MAXN = 200005;
long long a[MAXN], k[MAXN], prea[MAXN], prek[MAXN];

int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> q;

	for(int i = 1; i <= n; i++)
	{
		cin >> a[i];
		prea[i] = prea[i - 1] + a[i];
	}
	for(int i = 1; i <= q; i++)
	{
		cin >> k[i];
		prek[i] = prek[i - 1] + k[i];
		if(prek[i - 1] >= prea[n])
			prek[i] = k[i]; 
	}

	for(int i = 1; i <= q; i++)
	{
		int low = 1, high = n + 1;
		while(low < high)
		{
			int mid = (low + high) / 2;
			if(prea[mid] <= prek[i])
				low = mid + 1;
			else
				high = mid;
		}
		if(low == n + 1)
			cout << n << "\n";
		else
			cout << n - low + 1 << "\n";
	}


	return 0;
}