#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define oo 2000000000
int dr[8] = {0,1,0,-1,1,1,-1,-1};
int dc[8] = {1,0,-1,0,1,-1,1,-1};
const int N = 300010 , M = 100010;
long long x , k;
int tmp3;

int fastpower(int num,long long po){
    if(po == 0)
        return 1;
    int cur = fastpower(num , po / 2);
    cur = (long long)cur * cur % mod;
    if(po & 1)
        cur = (long long)cur * num % mod;
    return cur;
}

int main(){
    tmp3 = fastpower(2 , mod - 2);
    cin >> x >> k;
    if(k == 0){
        cout << (x * 2) % mod << endl;
        return 0;
    }
    if(x == 0){
        cout << 0 << endl;
        return 0;
    }
    vector< long long > v , v2(0) , v3;
    v.push_back(x);
   for(int it=0;it<=1;it++){
        v2.clear();
        for(int i=0;i<v.size();i++){
            v2.push_back(v[i] * 2);
            v2.push_back(v[i] * 2 - 1);
        }
        long double sum = 0.0000000001;
        for(int i=0;i<v2.size();i++){
            sum += v2[i];
        }
        sum *= 2;
        v3.push_back(sum / v2.size());
        v = v2;
    }
    if(k == 1)
        cout << v3[0] % mod << endl;
    else if(k == 2)
        cout << v3[1] % mod << endl;
    else{
        long long cur = (v3[1] - v3[0]) % mod;
        long long tmp = fastpower(2 , k - 1) - 1;
        tmp += mod;
        tmp %= mod;
        tmp = (long long)tmp % mod;
        long long ans = (long long)cur * tmp % mod;
        ans += v3[0];
        ans %= mod;
        cout << ans << endl;
    }
    return 0;
}
