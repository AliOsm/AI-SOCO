#pragma comment(linker, "/STACK:64000000")
#include <iostream>
#include <cstdio>
#include <cassert>
#include <cmath>
#include <cstring>
#include <ctime>
#include <cstdlib>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <string>
#include <map>
#include <set>
#include <sstream>
#include <bitset>
#include <algorithm>

#define forit(it,S) for(__typeof(S.begin()) it = (S).begin(); it != (S).end(); it++)
#define sz(x) (int)(x).size()
#define all(x) (x).begin(),(x).end()
#define ll long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
#define mp make_pair
#define pb push_back
#define ppb pop_back

using namespace std;

typedef pair<int, int> pii;

const double eps = 1e-9;
const double pi = acos(-1.0);

const int maxn = (int)1e5 + 10;
const int mod = (int)1e9 + 7;

vector<int> g[maxn];
int dp[maxn][2];
int col[maxn];

int dfs(int v, int p, int c) {
    int &res = dp[v][c];
    if (res != -1) return res;
    if (col[v] == 1 && c == 0) return res = 0;
    if (c == 0) {
        res = 1;
        for (int i = 0; i < sz(g[v]); i++) {
            int to = g[v][i];
            if (to == p) continue;
            res = res * 1LL * (dfs(to,v,1) + dfs(to,v,0)) % mod;
        }
        return res;
    } else if (col[v] == 1) {
        res = 1;
        for (int i = 0; i < sz(g[v]); i++) {
            int to = g[v][i];
            if (to == p) continue;
            res = res * 1LL * (dfs(to,v,1) + dfs(to,v,0)) % mod;
        }
        return res;
    } else {
        res = 0;
        vector<int> pref;
        int mul = 1;
        for (int i = 0; i < sz(g[v]); i++) {
            int to = g[v][i];
            if (to == p) continue;
            mul = mul * 1LL * (dfs(to,v,1) + dfs(to,v,0)) % mod;
            pref.pb(mul);
        }
        int mul2 = 1;
        for (int i = sz(g[v]) - 1; i >= 0; i--) {
            int to = g[v][i];
            if (to == p) continue;
            pref.ppb();
            int val = pref.empty() ? 1 : pref.back();           
            res = (res + val * 1LL * mul2 % mod * 1LL * dfs(to,v,1) % mod) % mod;
            mul2 = mul2 * 1LL * (dfs(to,v,1) + dfs(to,v,0)) % mod;
        }
        return res;
    }
}

int main() {
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
    int n; cin >> n;
    for (int i = 0; i < n - 1; i++) {
        int x; scanf("%d",&x);
        g[x].pb(i + 1);
        g[i + 1].pb(x);
    }
    for (int i = 0; i < n; i++) {
        scanf("%d",&col[i]);
    }
    memset(dp,-1,sizeof(dp));
    cout << dfs(0,-1,1) << endl;
    return 0;
}
