#include <cstdio>
#include <algorithm>

const int N = 222222;

int cn[N * 10];
int ql[N], qr[N], a[N], id[N];
long long answer[N];

bool compp(int x, int y) {
  int x1 = ql[x] >> 10;
  int x2 = ql[y] >> 10;
  if (x1 != x2) return x1 < x2;
  return ((qr[x] >> 10) < (qr[y] >> 10));
}

int main() {
  int n, m;
  scanf("%d%d", &n, &m);
  for (int i = 0; i < n; i++) scanf("%d", a + i);
  for (int i = 1; i <= m; i++) scanf("%d%d", ql + i, qr + i);
  for (int i = 1; i <= m; i++) {    
    --ql[i];
    --qr[i];
  }
  long long ans = 0;
  for (int i = 0; i < m; i++) id[i] = i + 1;
  std::sort(id, id + m, compp);
  int cl = 0;
  int cr = -1;
  for (int i = 0; i < m; i++) {
    int e = id[i];
    while (cl > ql[e]) {
      --cl;
      ans += (long long) a[cl] * (2 * cn[a[cl]] + 1);
      ++cn[a[cl]];
    }
    while (cr < qr[e]) {
      ++cr;
      ans += (long long) a[cr] * (2 * cn[a[cr]] + 1);
      ++cn[a[cr]];
    }
    while (cl < ql[e]) {
      --cn[a[cl]];
      ans -= (long long) a[cl] * (2 * cn[a[cl]] + 1);
      ++cl;
    }
    while (cr > qr[e]) {
      --cn[a[cr]];
      ans -= (long long) a[cr] * (2 * cn[a[cr]] + 1);
      --cr;
    }
    answer[e] = ans;
  }
  for (int i = 1; i <= m; i++) printf("%I64d\n", answer[i]);
}