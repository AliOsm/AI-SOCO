#include <bits/stdc++.h>
#define F first
#define S second
using namespace std;
typedef long long ll;
const int N = 2e5 + 5;
ll n, arr[N], dp[N][5][4];
ll solve(int idx, int state, bool jump)
{
    if(idx == n)    return 0;
    ll &ret = dp[idx][state][jump];
    if(~ret)        return ret;
    ll ans = 0;
    if(state == 0)
        ans = max(solve(idx + 1, state, jump), solve(idx, state + 1, jump) + 1);
    else if(state == 1)
    {
        ans = solve(idx + 1, state + 1, jump);
        if(idx + 1 < n && arr[idx + 1] > arr[idx])
            ans = max(solve(idx + 1, state, jump) + 1, ans);
        if(idx + 2 < n && !jump && arr[idx + 2] > arr[idx])
            ans = max(solve(idx + 2, state, 1) + 1, ans);
    }
    else
        ans = solve(idx + 1, state, jump);
    return ret = ans;
}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    cin >> n;
    memset(dp, -1, sizeof dp);
    for(int i = 0;i < n;++i)
        cin >> arr[i];
    cout << solve(0, 0, 0);
    return 0;
}
