//In the name of God

#include <iostream>
#include <algorithm>
using namespace std;
#define lol long long
const int MAXN=2e5+10;
const lol Mod=1e9+7,base=31;
lol a[MAXN],b[MAXN],h1[MAXN],h2[MAXN],p[MAXN];

void hash(lol s[],int n,lol h[])
{
  h[0]=s[0];
  for(int i=1;i<n;i++)
    h[i]=(h[i-1]*base+s[i])%Mod;
}

lol calc(int s,int e)
{
  if(s==0)
    return h1[e];
  lol g=(h1[s-1]*p[e-s+1])%Mod;
  lol x=((h1[e]-g)%Mod)+Mod;
  return x%Mod;
}

int main()
{
  p[0]=1;
  for(int i=1;i<MAXN;i++)
    p[i]=(p[i-1]*base)%Mod;
  int n,m;
  cin>>n>>m;
  for(int i=0;i<n;i++)
    cin>>a[i];
  for(int i=0;i<m;i++)
    cin>>b[i];
  lol Min=1e18;
  for(int i=n-1;i>=1;i--)
    a[i]=a[i]-a[i-1],Min=min(Min,a[i]);
  a[0]=0;
  for(int i=m-1;i>=1;i--)
    b[i]=b[i]-b[i-1],Min=min(Min,b[i]);
  b[0]=0;
  Min=min(Min,0ll);
  if(Min<=0)
    {
      for(int i=0;i<n;i++)
	a[i]+=abs(Min)+1;
      for(int i=0;i<m;i++)
	b[i]+=abs(Min)+1;
    }
  hash(b,m,h1);
  int h=calc(1,m-1),ans=0;
  fill(h1,h1+MAXN,0);
  hash(a,n,h1);
  for(int i=0;i<n-m+1;i++)
    if(calc(i+1,i+m-1)==h)
      ans++;
  cout<<ans<<endl;
  return 0;
}
