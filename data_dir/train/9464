#include <bits/stdc++.h>
using namespace std;
const int N = 200005;
int head[N], nxt[N], to[N], no = 0;
int cnt[N];
void addedge(int a, int b) {
	nxt[no] = head[a];
	to[no] = b;
	head[a] = no++;
	++cnt[a];
}

bool vis[N];
int r = 0;
int grp[N];

void dfs(int idx, int g) {
	if (vis[idx])
		return;
	//cout << idx << " " << g << "\n";
	vis[idx] = 1;
	grp[idx] = g;
	for (int i = head[idx]; ~i; i = nxt[i]) {
		dfs(to[i], !g);
	}
	if (!g)
		++r;
}

int main() {
	memset(head, -1, sizeof head);
	int n;
	scanf("%d", &n);
	int x, y;
	for (int i = 1; i < n; ++i) {
		scanf("%d %d", &x, &y);
		addedge(x, y);
		addedge(y, x);
	}
	for (int i = 1; i <= n; ++i) {
		if (cnt[i] == 1) {
			dfs(i, 1);
			break;
		}
	}
	long long ans = 0;
	//printf("%d\n", r);
	for (int i = 1; i <= n; ++i) {
		if (grp[i])
			ans += (r - cnt[i]);
	}
	printf("%lld", ans);
}
