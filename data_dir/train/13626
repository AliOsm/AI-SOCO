#include <bits/stdc++.h>

using namespace std;

typedef long ll;

vector<int> vec;

int query(int l, int r)
{
  //cout << "# " << l << ' ' << r << '\n';
  r = min(r, (int)vec.size() - 1);
  if(l > r)
    return 0;
  int ret = vec[r];
  if(l)
    ret -= vec[l- 1];
  return ret;
}

int main()
{
  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
  int n, i;
  cin >> n >> i;
  i *= 8;
  int st = 0, en = 31, k;
  while (st <= en)
  {
    int mid = (st + en) >> 1;
    if(mid * n <= i)
      k = (1 << mid), st = mid + 1;
    else
      en = mid - 1;
  }
  //cout << "max " << k << '\n';
  map<int, int> freq;
  for(int i = 0; i < n; i++)
  {
    int a;
    cin >> a;
    freq[a]++;
  }
  for(auto &x: freq)
    vec.push_back(x.second);
  for(int i = 1; i < vec.size(); i++)
    vec[i] += vec[i - 1];
  //cout << "size " << vec.size() << '\n';
  int ans = n;
  for(int i = 0; i < vec.size(); i++)
  {
    int en = min(i + k - 1, n - 1);
    int cur = query(en + 1, vec.size() - 1) + query(0, i - 1);
    //cout << i << ' ' << en << ' ' << cur << '\n';
    ans = min(ans, cur);
  }
  cout << ans;
  return 0;
}
