#include <bits/stdc++.h>
using namespace std;

const int MAX = 1e6 + 5;
int n, m, l[MAX];
long long deg[MAX];
vector <int> g[MAX];

int edges, seen[MAX];

void check(int u) {
	seen[u] = 1;
	edges += (int) g[u].size();

	for(int v : g[u])
		if(!seen[v])
			check(v);
}

int main() {
	scanf("%d%d", &n, &m);

	long long loops = 0;
	for(int i = 1; i <= m; i++) {
		int a, b; scanf("%d%d", &a, &b);

		if(a == b) {
			loops++;
			l[a] = 1;
		}

		g[a].push_back(b);
		g[b].push_back(a);
		
		deg[a]++;

		if(a != b)
			deg[b]++;
	}

	int ok = 0;
	for(int i = 1; i <= n; i++) {
		if(!seen[i]) {
			edges = 0;
			check(i);

			if(edges / 2 == m)
				ok = 1;
		}
	}

	if(!ok) {
		printf("0\n");
		return 0;
	}

	long long ans = 0;
	for(int i = 1; i <= n; i++) {
		ans += deg[i] * (deg[i] - 1) / 2LL;

		if(l[i])
			ans += m - deg[i];
	}

	ans -= loops * (loops - 1) / 2LL;

	printf("%lld\n", ans);
	return 0;
}