#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"

#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0);}

inline int safe_mul(int x, int y) __attribute__ ((warn_unused_result));

int const mod = 1e9+7;

int const maxn = 200005;

int fact[maxn];
int invfact[maxn];

inline int safe_mul(int x, int y)
{
    return x * 1LL * y % mod;
}

inline void safe_add(int& x, int y)
{
    x += y;
    if (x >= mod)
        x -= mod;
}

inline int get_inv(int x)
{
    int b = mod - 2;
    int ans = 1;
    while (b)
    {
        if (b & 1) ans = safe_mul(ans, x);
        x = safe_mul(x, x);
        b >>= 1;
    }
    return ans;
}

void init()
{
    fact[0] = invfact[0] = 1;

    for(int i = 1; i < maxn; ++i)
    {
        fact[i] = safe_mul(fact[i - 1], i);
        invfact[i] = get_inv(fact[i]);
    }
}

inline int C(int n, int k)
{
    if (n < k) return 0;
    return safe_mul(fact[n], safe_mul(invfact[k], invfact[n - k]));
}

int main()
{
//    freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    ios_base::sync_with_stdio(false);

    init();

    int n, k;
    cin >> n >> k;
    vector<pair<int,int> > a;
    a.reserve(2 * n);
    for(int i = 0; i < n; ++i)
    {
        int l,r;
        cin >> l >> r;
        a.push_back({l, -1});
        a.push_back({r, 1});
    }

    sort(a.begin(), a.end());

    int ans = 0;

    n += n;
    int cnt = 0;
    for(int i = 0; i < n;)
    {
        int cur = a[i].first;
        while (i < n && a[i].first == cur && a[i].second < 0)
        {
            ++cnt;
            ++i;
        }
        safe_add(ans, C(cnt, k));
        while (i < n && a[i].first == cur)
        {
            --cnt;
            ++i;
        }
        if (i < n)
            safe_add(ans, safe_mul(a[i].first - cur - 1, C(cnt, k)));
    }
    cout << ans << endl;
}

