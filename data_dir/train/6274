#include<iostream>
#include<algorithm>
#include<string>
#include<vector>
#include<cmath>
#include<queue>
#include<functional>
using namespace std;
int n, w, h, g[600009], x[600009], t[600009], gr[600009], T = 300000; vector<int>X[600009]; vector<pair<int, int>> Y[600009];
int main() {
	cin >> n >> w >> h;
	for (int i = 0; i < n; i++) {
		cin >> g[i] >> x[i] >> t[i];
		gr[i] = x[i] - t[i] + T;
		if (g[i] == 1) { X[gr[i]].push_back(x[i]); Y[gr[i]].push_back(make_pair(x[i], -h)); }
		else { X[gr[i]].push_back(-x[i]); Y[gr[i]].push_back(make_pair(w, -x[i])); }
	}
	for (int i = 0; i <= 2 * T; i++) { sort(X[i].begin(), X[i].end()); sort(Y[i].begin(), Y[i].end()); }
	for (int i = 0; i < n; i++) {
		int H = x[i]; if (g[i] == 2)H *= -1;
		int pos1 = lower_bound(X[gr[i]].begin(), X[gr[i]].end(), H) - X[gr[i]].begin();
		cout << Y[gr[i]][pos1].first << " " << -Y[gr[i]][pos1].second << endl;
	}
	return 0;
}