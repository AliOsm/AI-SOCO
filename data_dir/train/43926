#include <map>
#include <vector>
#include <utility>
#include <iostream>
#include <algorithm>

using namespace std;

typedef long long llint;

template<typename Itr>
void gen(Itr begin, Itr end, llint cur, vector<llint>& ret) {
  if (begin == end) {
    ret.push_back(cur);
  } else {
    Itr pos = begin;
    ++begin;
    for (int i = 0; i <= pos->second; ++i) {
      gen(begin, end, cur, ret);
      cur *= pos->first;
    }
  }
}

int main() {
  llint n, ijk, ans = 0;
  map<llint, int> pd;
  vector<llint> a, b;

  cin >> n;
  if (n % 3 != 0) {
    puts("0");
    return 0;
  }

  n /= 3;
  ijk = n;
  for (llint i = 2; i * i <= n; ++i) {
    while (n % i == 0) {
      ++pd[i];
      n /= i;
    }
  }
  if (n > 1) {
    ++pd[n];
  }
  gen(pd.begin(), pd.end(), 1, a);

  for (llint i: a) {
    llint jk = ijk / i;
    if (i <= jk / i) {
      // cout << i << " * " << jk << endl;
      llint t = i;
      map<llint, int> pd2(pd);
      for (auto& p: pd2) {
        while (t % p.first == 0) {
          --p.second;
          t /= p.first;
        }
      }
      vector<llint> b;
      gen(pd2.begin(), pd2.end(), 1, b);
      for (llint j: b) {
        llint k = jk / j;
        if (i <= j && j <= k && i + j > k && (i + j + k) % 2 == 0) {
          if (i == k) {
            ++ans;
          } else if (i == j || j == k) {
            ans += 3;
          } else {
            ans += 6;
          }
        }
      }
    }
  }
  cout << ans << endl;

  return 0;
}

