#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<map>
#include<iterator>
#include<stack>
#include<string>
#include<climits>
#include<bitset>
#include<queue>
#include<cmath>
#include<cstdlib>
#include<cstdio>
#include<sstream>

#define MOD 1000000007
#define ll long long int
#define vi vector<int>
#define vll vector<long long int>
#define vvi vector<vector<int> >
#define vvl vector<vector<long long int> >
#define vp vector<pair<int, int> >
#define sc(n) scanf("%d", &n)
#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)

using namespace std;

string toBin(long long int a)
{
	return bitset<64>(a).to_string();
}

void printArr(int* a, int n)
{
	for(int i = 0; i < n; i++)
		printf("%d ", a[i]);
	printf("\n");
}

string intToString (ll a)
{
	ostringstream temp;
	temp<<a;
	return temp.str();
}

ll pow(ll base, ll exponent)
{
	ll result = 1;
	while(exponent > 0)
	{
		if (exponent % 2 == 1)
			result *= base;
		exponent = exponent >> 1;
		base *= base;
	}
	return result;
}

ll powerWithMod(ll base, ll exponent, ll modulus)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if (exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent = exponent >> 1;
		base = (base * base) % modulus;
	}
	return result;
}

int main()
{
	ssync;
	int n, m;
	cin>>n;
	vi a(n);
	for(int i=0; i<n; i++)
		cin>>a[i];
	cin>>m;
	vi b(m);
	for(int i=0; i<m; i++)
		cin>>b[i];
	sort(a.begin(), a.end());
	sort(b.begin(), b.end());
	vector<bool> taken(m, false);
	int ans=0, last=0;
	for(int i=0; i<n; i++)
	{
		vi::iterator it = lower_bound(b.begin()+last, b.end(), a[i]-1);
		last = it - b.begin();
		while(taken[last])
			last++;
		if(last == 0)
		{
			if(abs(a[i] - b[0]) < 2)
			{
				ans++;
				last=0;
				taken[0]=true;
			}
		}
		else if(abs(a[i] - b[last]) < 2)
		{
			ans++;
			taken[last] = true;
		}
	}
	cout << ans << "\n";
	return 0;
}
