#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <hash_map>
#include <hash_set>
#include <vector>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iterator>
using namespace std;
#define mems(arr, val) memset(arr, val, sizeof(arr))
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define all(A) (A).begin(), A.end()
#define mp(a, b) make_pair(a, b)
#define forit(it, A) for(auto it = A.begin(); it != A.end(); it++)
typedef long long LL;
const LL INF = INT_MAX;
LL dX[100000];
LL dAns[100000];
int main()
{
#ifdef MY_SOL
    freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#endif
	LL a,b,w,x,c;
	cin>>a>>b>>w>>x>>c;
	LL delta = (w - x);
	LL ans = 0;
	if (c <= a)
	{
		cout<<0;
		return 0;
	}

	
	mems(dX, -1);
	
	
	
	mems(dAns, -1);
	LL lastC = c;
	LL lastAns = ans;
	int counter = 0;
	while(true)
	{
		if (dX[b] != -1)
		{
			LL deltaC = dX[b] - c;
			LL deltaAns = ans - dAns[b];
			LL temper = (c - a - 1) / deltaC;
			c -= temper * deltaC;
			ans += temper * deltaAns;
			if (c <= a)
			{
				cout<<ans;
				return 0;
			}
		}

		dX[b] = c;
		dAns[b] = ans;

		int lastb = b;
		LL tmp = b / x;
		if (c - tmp <= a)
		{
			ans += c - a;
			cout<<ans;
			return 0;
		}
		else
		{
			ans += tmp;
			c -= tmp;
		}

		b %= x;
		int ddd = (x - b - 1) / delta + 1;
		b += (ddd) * delta;
		ans += ddd;
		//dX[lastb] = c;
		//dAns[lastb] = ans;
		counter++;
	}

    return 0;
}