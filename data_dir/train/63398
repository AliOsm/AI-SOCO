#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define all(x) x.begin(), x.end()
using namespace std;
typedef long long ll ; 
typedef long double ld ;
typedef pair<ll , ll> pll ;

const ll N = 4e5 + 30 , Mod = 1e9 + 7 ;
const ll SQ = 330 ;

pll a[N] ;
ll M[N] ;
int main () {
    ios::sync_with_stdio(0), cin.tie(0) ;
    ll n , m ;
    cin >> n >> m ;
    if (m < 3) return cout << "YES" , 0 ;
    for (int i = 0 ; i < m ; i ++) {
    	cin >> a[i].F >> a[i].S ;
	}
	ll x = a[0].F ;
	for (int i = 0 ; i < m ; i ++) {
		if (a[i].F == x or a[i].S == x) M[i] = 1 ;
	}
	ll id = -1 ;
	for (int i = 0 ; i < m ; i ++) {
		if (!M[i]) id = i ;
	}
	if (id != -1) {
		ll x2 = a[id].F , y2 = a[id].S ;
		bool f = 1 ;
		for (int i = 0; i < m ; i ++) {
			if (!M[i] and a[i].F != x2 and a[i].S != x2) {
				f = 0 ;	
			}
		}
		if (f) return cout << "YES" , 0 ;
		f = 1 ;
		for (int i = 0; i < m ; i ++) {
			if (!M[i] and a[i].F != y2 and a[i].S != y2) {
				f = 0 ;	
			}
		}
		if (f) return cout << "YES" , 0 ;
	}
	if (id == -1 ) return cout << "YES" , 0 ;
	fill(M , M + N , 0 ) ;
	x = a[0].S ;
	for (int i = 0 ; i < m ; i ++) {
		if (a[i].F == x or a[i].S == x) M[i] = 1 ;
	}
	id = -1 ;
	for (int i = 0 ; i < m ; i ++) {
		if (!M[i]) id = i ;
	}
	if (id != -1) {
		ll x2 = a[id].F , y2 = a[id].S ;
		bool f = 1 ;
		for (int i = 0; i < m ; i ++) {
			if (!M[i] and a[i].F != x2 and a[i].S != x2) {
				f = 0 ;	
			}
		}
		if (f) return cout << "YES" , 0 ;
		f = 1 ;
		for (int i = 0; i < m ; i ++) {
			if (!M[i] and a[i].F != y2 and a[i].S != y2) {
				f = 0 ;	
			}
		}
		if (f) return cout << "YES" , 0 ;
	}
	if (id == -1 ) return cout << "YES" , 0 ;
    cout << "NO" ;
    return (0) ;
}
