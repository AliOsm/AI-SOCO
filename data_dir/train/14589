#include <bits/stdc++.h>
 
using namespace std;
 
#define SPEED ios::sync_with_stdio(false); cin.tie(0); cout.tie(0)
#define fileio freopen("in.in", "r", stdin),freopen("out.out", "w", stdout);
#define ll long long int
#define FF first
#define SS second
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define pll pair<long long int,long long int>
#define sd(x) scanf("%d",&x)
#define slld(x) scanf("%lld",&x)
#define pd(x) printf("%d\n",x)
#define plld(x) printf("%lld\n",x)
#define pss printf
#define MOD 1000000007
#define INF 1e18
#define eps 0.00001
#define endl '\n'
#define debug(n1) cout<<n1<<endl

int n,m;
vector<vector<int>>v;
vector<int>c,adj[1000005];
vector<pii>tmp;
int val[1000005];
int in[1000005],par[1000005];
queue<int>q;

int get(int i,int j)
{
	return (i-1)*m+j;
}

int get_par(int i)
{
	if(par[i]==i)
		return i;
	return par[i]=get_par(par[i]);
}

int main()
{
	SPEED;
	cin>>n>>m;
	v.resize(n+1,vector<int>(m+1));
	for(int i=1;i<=n;i++)
	{	
		for(int j=1;j<=m;j++)
			cin>>v[i][j],c.pb(v[i][j]),par[get(i,j)]=get(i,j);
	}
	
	sort(c.begin(), c.end());
	c.resize(unique(c.begin(), c.end())-c.begin());
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			v[i][j]=lower_bound(c.begin(), c.end(),v[i][j])-c.begin()+1;
	
	for(int i=1;i<=n;i++)
	{
		tmp.clear();
		for(int j=1;j<=m;j++)
			tmp.pb(mp(v[i][j],j));
		sort(tmp.begin(), tmp.end());
		int hh=0;
		for(int h=0;h<tmp.size();h++)
		{
			int x,y;
			x=get_par(get(i,tmp[h].SS));
			while(hh<tmp.size()&&tmp[hh].FF==tmp[h].FF)
			{
				y=get_par(get(i,tmp[hh].SS));
				par[y]=x;
				hh++;
			}
		}
	}

	for(int j=1;j<=m;j++)
	{
		tmp.clear();
		for(int i=1;i<=n;i++)
			tmp.pb(mp(v[i][j],i));
		sort(tmp.begin(), tmp.end());
		int hh=0;
		for(int h=0;h<tmp.size();h++)
		{
			int x,y;
			x=get_par(get(tmp[h].SS,j));
			while(hh<tmp.size()&&tmp[hh].FF==tmp[h].FF)
			{
				y=get_par(get(tmp[hh].SS,j));
				par[y]=x;
				hh++;
			}
		}
	}

	for(int i=1;i<=n;i++)
	{
		tmp.clear();
		int x;
		for(int j=1;j<=m;j++)
		{
			x=get_par(get(i,j));
			tmp.pb(mp(v[i][j],x));
		}
		sort(tmp.begin(), tmp.end());
		tmp.resize(unique(tmp.begin(), tmp.end())-tmp.begin());
		for(int h=1;h<tmp.size();h++)
			adj[tmp[h-1].SS].pb(tmp[h].SS),in[tmp[h].SS]++;
	}

	for(int i=1;i<=m;i++)
	{
		tmp.clear();
		int x;
		for(int j=1;j<=n;j++)
		{
			x=get_par(get(j,i));
			tmp.pb(mp(v[j][i],x));
		}
		sort(tmp.begin(), tmp.end());
		tmp.resize(unique(tmp.begin(), tmp.end())-tmp.begin());
		for(int h=1;h<tmp.size();h++)
			adj[tmp[h-1].SS].pb(tmp[h].SS),in[tmp[h].SS]++;
	}
	
	for(int i=1;i<=n*m;i++)
		if(get_par(i)==i&&in[i]==0)
			q.push(i),val[i]=1;

	while(q.size())
	{
		int i=q.front();
		q.pop();
		for(auto j:adj[i])
		{
			in[j]--;
			val[j]=max(val[j],val[i]+1);
			if(in[j]==0)
				q.push(j);
		}
	}
	for(int  i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			int y=get_par(get(i,j));
			assert(val[y]>0);
			cout<<val[y]<<" ";
		}
		cout<<endl;
	}

	return 0;
}