#include "bits/stdc++.h"

using namespace std;

long long gcd(long long a, long long b) { return b == 0 ? a : gcd(b, a % b); }

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	long long a, b, x, y;
	cin >> a >> b >> x >> y;
	long long d = gcd(x, y);
	x /= d;
	y /= d;
	cout << min(a / x, b / y) << endl;
}

/*int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	long long n, m, d;
	cin >> n >> m >> d;
	vector<pair<long long, long long>> in(n);
	for (long long i = 0; i < n; i++) {
		long long a;
		cin >> a;
		in[i] = {a, i};
	}
	sort(in.begin(), in.end());
	map<long long, long long> dayEnd;
	vector<long long> res(n);
	for (long long i = 0; i < n; i++) {
		if (!dayEnd.empty() && dayEnd.begin()->first + d < in[i].first) {
			res[in[i].second] = dayEnd.begin()->second;
			dayEnd.erase(dayEnd.begin());
		} else {
			res[in[i].second] = dayEnd.size();
		}
		dayEnd[in[i].first] = res[in[i].second];
	}

	cout << dayEnd.size() << endl;
	for (long long x : res) {
		cout << (x + 1) << " ";
	}
	cout << endl;
}*/

/*int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	long long n, h;
	cin >> n >> h;
	vector<pair<long long, long long>> in(n);
	for (long long i = 0; i < n; i++) {
		long long x, y;
		cin >> x >> y;
		in[i] = {x, y};
	}
	sort(in.begin(), in.end());
	long long res = h;
	long long l = 0;
	long long r = 0;
	long long curH = h;
	while (l < n) {
		while (r + 1 < n && curH > in[r + 1].first - in[r].second) {
			curH -= in[r + 1].first - in[r].second;
			r++;
		}
		res = max(res, in[r].second - in[l].first + curH);
		if (l + 1 < n) {
			curH += in[l + 1].first - in[l].second;
			curH = min(h, curH);
		}
		l++;
	}
	cout << res << endl;
}
*/