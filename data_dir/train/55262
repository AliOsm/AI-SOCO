/*input
7 2
0 1 0 2 1 0 2
2 1
*/
#include <iostream>
#include <cstdio>
#include <vector>
#include <functional>
#include <math.h>
#include <string.h>
#include <utility>
#include <algorithm>
#include <iomanip>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <stdlib.h>
#include <list>
#include <assert.h>
#include <time.h>
#include <fstream>
#include <sstream>
using namespace std;
#define sp ' '
#define endl '\n'
#define fi first
#define se second
#define mp make_pair
#define ll long long
#define N 100005
#define INF 2139062143
#define int ll
int n, m;
int a[N];
int need[N];
int last[N];
int prep[N];

bool check(int d) {
	memset(last, 0, sizeof(last));
	memset(prep, 0, sizeof(prep));
	for (int i = 1; i <= d; i++) last[a[i]] = i;
	for (int i = 1; i <= m; i++) {
		if (need[i] > d) return false;
		prep[last[i]] = 1;
	}
	int cur = 0;
	for (int i = 1; i <= d; i++) {
		cur++;
		if (prep[i] == 1) {
			cur--;
			// cout << a[i] << sp << cur << sp << need[a[i]] << endl;
			if (cur < need[a[i]]) return false;
			cur -= need[a[i]];
		}
	}
	return true;
}

signed main() {
	ios_base::sync_with_stdio(false); cin.tie(0);
	cin >> n >> m;
	int mlast = 0;
	for (int i = 1; i <= n; i++) {
		cin >> a[i];
		if (a[i] && last[a[i]] == 0) mlast = max(mlast, i);
		last[a[i]] = i;
	}
	for (int i = 1; i <= m; i++) if (last[i] == 0) return cout << "-1", 0;
	for (int i = 1; i <= m; i++) cin >> need[i];
	int l = mlast, r = n;
	// cout << check(5) << endl;
	while (l != r) {
		int mid = (l + r) / 2;
		if (check(mid)) r = mid;
		else l = mid + 1;
	}
	if (check(l) == false) return cout << "-1", 0;
	cout << l << endl;
}