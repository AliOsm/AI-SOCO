//Be Name Khoda
//no comment...
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
template <typename T> using ordered_multiset =  tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;
typedef long long ll;
typedef long double ld;
const int MOD = (int)1e9 + 7;
const int MAXN = (int)3e5 + 3;
const int infint = (int)1e9;
const ll inf = (ll)1e18;
int can[30];
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n, k;
	cin >> n >> k;
	string s;
	cin >> s;
	for (int i = 0; i < s.size(); i++)
		can[s[i] - 'a']++;
		
	if(n < k)
	{
		cout << s;
		int ans;
		for (int i = 26; i >= 0; i--)
		if(can[i])
			ans = i;
		for (int i = 0; i < k - n; i++)
			cout << (char)('a' + ans);
		return 0;
	}
	int ans = -1;
	for (int i = 0; i < 26; i++)
		if(can[i])
			ans = i;
			
	int last = -1;
	for (int i = 0; i < k; i++)
		if(s[i] - 'a' != ans)
			last = i;
	
	for (int i = 0; i < last; i++)
		cout << s[i];
		
	for (int i = 26; i >= 0; i--)
		if(i > (s[last] - 'a') && can[i])
			ans = i;
	cout << (char)(ans + 'a');
	for (int i = 26; i >= 0; i--)
		if(can[i])
			ans = i;
	for (int i = last + 1; i < k; i++)
		cout << (char)(ans + 'a');
}
