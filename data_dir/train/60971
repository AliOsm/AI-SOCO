#include<bits/stdc++.h>
using namespace std;


const int N = 1e3 + 5;




int n, m, a[N], dp[N][N];

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n >> m;
    for(int i = 1; i <= n; i++){
        cin >> a[i];
    }
    for(int i = 1; i <= n; i++){
        int cur = 0;
        for(int j = i; j >= 2; j--){
            if(a[j] % 2){
                cur++;
            }
            else{
                cur--;
            }
            if(cur == 0){
                for(int k = 0; k + abs(a[j] - a[j - 1]) <= m; k++){
                    dp[i][k + abs(a[j] - a[j - 1])] = max(dp[i][k + abs(a[j] - a[j - 1])], dp[j - 1][k] + 1);
                }
            }
        }
    }
    int ans = 0;
    for(int i = 0; i <= m; i++){
        ans = max(ans, dp[n][i]);
    }
    cout << ans;
}
