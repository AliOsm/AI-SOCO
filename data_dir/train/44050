#include <bits/stdc++.h>
using namespace std;
int n,m,k,cnt;
int X,Y;
long long W;
struct edge{
    int i,x,y;
    long long w;
};
int taken[int(3e5+9)];
edge e[int(3e5+9)];
int link[int(3e5+9)];
long long sz[int(3e5+9)];
vector<pair<int,int>> adj[int(3e5+9)];
priority_queue<pair<long long,pair<int,int>>> q;
queue<int> Q;

bool cmp(edge a,edge b){
    return a.w<b.w;
}

int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    scanf("%d %d %d",&n,&m,&k);
    for(int i=1;i<=m;i++){
        scanf("%d %d %I64d",&X,&Y,&W);
        e[i].i=i;
        e[i].x=X;
        e[i].y=Y;
        e[i].w=W;
        adj[X].push_back({Y,i});
        adj[Y].push_back({X,i});
    }
    for(int i=1;i<=n;i++) sz[i]=1e18;
    sz[1]=0;
    q.push({0,{1,0}});
    cnt=-1;
    while(!q.empty()){
        int a=q.top().second.first,IDX=q.top().second.second; q.pop();
        if(link[a]) continue;
        taken[IDX]=1;
        cnt++;
        link[a]=1;
        for(auto u: adj[a]){
            int b=u.first,w,idx=u.second;
            w=e[idx].w;
            if(sz[a]+w<sz[b]){
                sz[b]=sz[a]+w;
                q.push({-sz[b],{b,idx}});
            }
        }
    }
    //for(int i=1;i<=m;i++) cout<<taken[i]<<" ";
    if(cnt<=k){
        printf("%d\n",cnt);
        for(int i=1;i<=m;i++){
            if(taken[i]) printf("%d ",i);
        }
    }else{
        cnt=0;
        memset(link,0,sizeof(link));
        sz[1]=0;
        link[1]=1;
        Q.push(1);
        bool f=1;
        while(!Q.empty()&&f){
            int a=Q.front(); Q.pop();
            for(int i=0;i<adj[a].size();i++){
                int b=adj[a][i].first,idx=adj[a][i].second;
                if(taken[idx]==0) continue;
                if(link[b]) continue;
                link[b]=1;
                if(cnt+1<=k){
                    sz[b]=sz[a]+1;
                    Q.push(b);
                    taken[idx]=2;
                    cnt++;
                }else{f=0; break;}
            }
        }
        printf("%d\n",cnt);
        for(int i=1;i<=m;i++){
            if(taken[i]==2) printf("%d ",i);
        }
    }
    return 0;
}
