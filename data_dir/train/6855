#include <iostream>
#include<string>
#include <iomanip>
#include <algorithm>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <vector>
#include <math.h>
#include <cstdio>
#include <cstring>
#include <cassert>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define pb push_back
#define mp make_pair
#define X first
#define Y second
#define all(a) (a).begin(), (a).end()
#define sz(a) (int)((a).size())

typedef long long li;
typedef unsigned long long uli;
typedef long double ld;
typedef pair<int, int> pt;

const int N = 500009;
const int INF = (int)(1e9);
const li INF64 = (li)(INF) * (li)(INF);
const ld eps = 1e-9;
const ld PI = (ld)(3.1415926535897932384626433832795);

int n, w;
int a[N];
int na[N];

vector<int> zf () {
    int nn = n + w;
    vector<int> z(nn);
    for (int i = 1, l = 0, r = 0; i < nn; ++i) {
        if (i <= r)
            z[i] = min (r - i + 1, z[i - l]);
        while (i + z[i] < nn && a[z[i]] == a[i + z[i]])
            ++z[i];
        if (i + z[i] - 1 > r)
            l = i,  r = i + z[i] - 1;
    }
    return z;
}

int main(){
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif  

    
    cin >> n >> w;
    forn(i, n)
        cin >> na[w+i];
    forn(i, w)
        cin >> na[i];

    forn(i, w-1)
        a[i] = na[i+1] - na[i];
    a[w-1] = INF + 7;

    for(int i = w; i < w+n; ++i)
        a[i] = na[i+1] - na[i];


    vector <int> x = zf();
    int ans = 0;
    for(int i = w; i < x.size(); ++i)
        if(x[i] >= w-1)
            ++ans;

    cout << ans;
    return 0;
}
