#include <bits/stdc++.h>
using namespace std;

signed main() {
  ios::sync_with_stdio(false);

  int N, K, X;
  cin >> N >> K >> X;

  vector<int> A(N);
  for (int i = 0; i < N; ++i) cin >> A[i];

  static int64_t dp[2][201][201];
  memset(dp, 0xc0, sizeof(dp));
  dp[0][0][0] = 0;
  for (int i = 0; i < N; ++i) {
    memset(dp[~i & 1], 0xc0, sizeof(dp[~i & 1]));
    for (int t = 0; t <= min(X, i); ++t) {
      for (int l = 0; l <= K - 1; ++l) {
        dp[~i & 1][t + 1][0] = max(dp[~i & 1][t + 1][0], dp[i & 1][t][l] + A[i]);
        if (l + 1 < K) dp[~i & 1][t][l + 1] = max(dp[~i & 1][t][l + 1], dp[i & 1][t][l]);
      }
    }
  }

  int64_t ans = *max_element(dp[N & 1][X], dp[N & 1][X] + K);
  if (ans < 0) ans = -1;
  cout << ans << endl;

  return 0;
}
