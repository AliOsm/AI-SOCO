#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
#include <bits/stdc++.h>
#define all(c) c.begin(),c.end()
#define ll long long
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define mod 998244353
#define PI 3.1415926536
#define pll pair<ll, ll>
using namespace std;

bool is_prime(ll n) {
    for (ll i = 2; i * i <= n; ++i) {
            if (n % i == 0) {
                  return false;
            }
    }
    return true;
}

inline ll getPow(ll a,ll b) {
    ll res = 1ll, tp = a;
    while (b){
       if (b&1ll) {
           res *= tp;
       }
       tp *= tp;
       b >>= 1ll;
    }
    return res;
}

ll vec_mult(ll x1, ll y1, ll x2, ll y2, ll x3, ll y3) {
   return abs((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1));
}

void ok() {
   puts("Yes");
   exit(0);
}

void no() {
   puts("No");
   exit(0);
}

inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}

const ll N = 3e5 + 10, inf = 2e18;

// please, accepted!

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    ll n = nxt(), m = nxt();
    vector<ll> ans;
    vector<vector<ll>> g(n);
    for(int i = 0; i < m; i++) {
        ll x = nxt() - 1, y = nxt() - 1;
        if(x != y) {
            g[x].push_back(y);
            g[y].push_back(x);
        }
    }
    for(int i = 0; i < n; i++) {
        sort(all(g[i]));
    }
    vector<ll> used(n, 0);
    vector<ll> cl;
    set<ll> te;
    function<void(ll)> DFS = [&](ll v) {
        used[v] = 1;
        ans.push_back(v);
        for(auto x : g[v]) {
            if(!used[x]) {
                te.insert(x);
            }
        }
        if(te.size()) {
            ll ind = *te.begin();
            te.erase(te.begin());
            DFS(ind);
        }

    };
    for(int i = 0; i < n; i++) {
        if(!used[i]) DFS(i);
    }
    for(auto x : ans) cout << x + 1 << " ";
    return 0;
}

