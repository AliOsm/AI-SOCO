/*

    Author of solution {

           gskhirtladze;

    }

*/

#include <iostream>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <string>
#include <vector>
#include <map>
#include <queue>
#include <string>

#define fi first
#define se second
#define pb push_back
#define mk make_pair
#define Pii pair < int , int >
#define tree int t,int l,int r
#define left 2*t,l,(l+r)/2
#define right 2*t+1,(l+r)/2+1,r
#define f_sum(i,r) for (int i=r;i>=0;i=(i&(i+1))-1)
#define f_upd(i,r) for (;i<=r;i=(i|(i+1)))
#define ged(x) scanf("%I64d",&x)
#define getcx getchar
#define my int
#define put(x) cout<<x<<endl;
#define pud(x) printf("%.12f\n",x);
#define LL long long
#define INF 1000000000
#define eps 0.00000001
#define P7 1000000007
#define P9 1000000009
#define N3 2555
#define N5 262145
#define N6 1048577
#define SS system("pause")

using namespace std;

inline void inp(int &n )
 {n=0; int ch=getcx();int sign=1;
  while(ch<'0'||ch>'9'){if(ch=='-')sign=-1; ch=getcx();}
  while(  ch >= '0' && ch <= '9' ) n=(n<<3)+(n<<1)+ch-'0',ch=getcx();
  n=n*sign;}

LL gcd(LL A,LL B) {
    return A>B?gcd(B,A):A?gcd(B%A,A):B; }

LL lcm(LL A,LL B) {
    return A/gcd(A,B)*B; }

LL pow(LL A,LL B,LL P) {
   if (!B) return 1%P;
   LL h=pow(A,B/2,P); h*=h;
   h%=P; if (B%2) h*=A; return h%P; }

vector <int> z_function (string s) {
  int n = (int) s.length(); vector<int> z (n);
  for (int i=1, l=0, r=0; i<n; ++i) {
    if (i <= r) z[i] = min (r-i+1, z[i-l]);
    while (i+z[i] < n && s[z[i]] == s[i+z[i]]) ++z[i];
    if (i+z[i]-1 > r) l = i,  r = i+z[i]-1; } return z; }
/* // DSU
int PR[N5],SZ[N5];

int parent(int u) {
  if (PR[u] == u) return u;
  PR[u]=parent(PR[u]);return PR[u];}

void uni(int u,int v){
 u=parent(u); v=parent(v);
 SZ[u]+=SZ[v]; SZ[v]=0; PR[v]=u;}
*/
/* // Primes
int lp[N6+2];
vector < int > pr;

void get_pr(int N) {
 for (int i=2;i<=N;i++)
  {if (lp[i] == 0){ pr.pb(i); lp[i]=i; }
   for (int j=0;j<pr.size()&& pr[j]<=lp[i] && pr[j]*i<=N;j++) lp[pr[j]*i]=pr[j]; } }
*/
int tst;
void get_ready() {
     //freopen(".in","r",stdin);
     //freopen(".out","w",stdout);
     tst=1; //get(tst);
}
vector < int > g[56];
string s[250];
int f[29],is[29];
string ans;
int may;

void go(int u)
 {
  f[u]=1;
  for (int i=1;i<g[u].size();i++)
   if (g[u][i] != g[u][i-1]) {if (f[g[u][i]] == 1) may=false; else
   if (f[g[u][i]] == 0)go(g[u][i]); }
  ans+=char(u+'a');
  f[u]=2;
 }

int n,i,j;

bool READ() {

cin>>n;
cin>>s[1];
may=true;
for (i=2;i<=n;i++)
{
  cin>>s[i];
  for (j=0;j<min(s[i-1].size(),s[i].size());j++)
  if (s[i-1][j] != s[i][j])
   {
    g[s[i][j]-'a'].pb(s[i-1][j]-'a');
    is[s[i-1][j]-'a']++;
    break;
   }
   if (s[i-1].size() > s[i].size() && j == min(s[i-1].size(),s[i].size()))
    {
       may=false;
    }
  }
  for (i=0;i<='z'-'a';i++)
     g[i].pb(-1),sort(g[i].begin(),g[i].end());
for (i='a'-'a';i<='z'-'a';i++)
 if (!is[i]) { go(i); }
 if (!may) { ans="Impossible"; }
 for (i=0;i<='z'-'a';i++)
     if (!f[i]) ans="Impossible";
 cout<<ans<<endl;

return 1;
}

bool SOLVE() {
return 1;}

bool PRINT() {
return 1;}

bool CLEAR() {
return 1;}

my main() {get_ready();
while (tst--){

 if (!READ()) { return 0; }
 if (!SOLVE()) { return 0; }
 if (!PRINT()) { return 0; }
 if (!CLEAR()) { return 0; }

}}