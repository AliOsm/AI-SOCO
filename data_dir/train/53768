#include <bits/stdc++.h>
using namespace std;

const int md = 998244353;
inline void add(int &a, int b) {
	a += b;
	if (a >= md) a -= md;
}
inline void sub(int &a, int b) {
	a -= b;
	if (a < 0) a += md;
}
inline int mul(int a, int b) {
	return (int) ((long long) a * b % md);
}
inline int power(int a, long long b) {
	int res = 1;
	while (b > 0) {
		if (b & 1) {
			res = mul(res, a);
		}
		a = mul(a, a);
		b >>= 1;
	}
	return res;
}
inline int inver(int a) {
	a %= md;
	if (a < 0) a += md;
	int b = md, u = 0, v = 1;
	while (a) {
		int t = b / a;
		b -= t * a; swap(a, b);
		u -= t * v; swap(u, v);
	}
	assert(b == 1);
	if (u < 0) u += md;
	return u;
}
int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n;
	cin >> n;
	vector< vector<int> > a(n);
	vector<int> g(1e6 + 1);
	for (int i = 0; i < n; i++) {
		int k;
		cin >> k;
		a[i].resize(k);
		for (int j = 0; j < k; j++) {
			cin >> a[i][j];
			add(g[a[i][j]], mul(inver(n), inver(k)));
		}
	}
	int ans = 0;
	for (int i = 0; i < n; i++) {
		int res = 0;
		for (int j = 0; j < (int)a[i].size(); j++) {
			add(res, g[a[i][j]]);
		}
		add(ans, mul(inver(n), res));
	}
	cout << ans << '\n';
	return 0;
}
