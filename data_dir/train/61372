#include <bits/stdc++.h>
using namespace std;
const char duom[] ="i.txt";
vector <pair <int,pair<int,int>> > edge;
int father [100005];
int size[100005];
bool special[100005];
int special_amount[100005];
long long ans;
int rask(int x)
{
    while(x!=father[x])x=father[x];
    return x;
}
void unite(int x,int y)
{
    x=rask(x);
    y=rask(y);
    if(size[x]<size[y])swap(x,y);
    size[x]+=size[y];
    special_amount[x]+=special_amount[y];
    father[y]=x;
}
int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    //ifstream cin (duom);
    int n,m,k;
    cin >> n >> m >> k;
    for(int i=1;i<=n;i++)
    {
        father[i]=i;
        size[i]=1;
    }
    for(int i=0;i<k;i++)
    {
        int x;
        cin >> x;
        special[x]=true;
        special_amount[x]=1;
    }
    for(int i=0;i<m;i++)
    {
        int u,v,w;
        cin >> u>> v>>w;
        if(u==v)continue;
        edge.push_back({w,{u,v}});
    }
    sort(edge.begin(),edge.end());
    for(int i=0;i<edge.size();i++)
    {
        if(rask(edge[i].second.first)!=rask(edge[i].second.second))
        {
            unite(edge[i].second.first,edge[i].second.second);
            if(special_amount[rask(edge[i].second.first)]==k)
            {
                ans=edge[i].first;
                break;
            }
        }
    }
    for(int i=0;i<k;i++)cout << ans<<" ";
    return 0;
}
