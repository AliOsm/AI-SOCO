#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define pi 3.141592653589793238
#define int long long
using namespace __gnu_pbds;
using namespace std;
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

bool mm[1005][1005];
vector<pair<int,int> >temp; 
int n,m;
int dis[1005][1005];
void bfs()
{
  queue<pair<int,int> >qq;
  for(auto i:temp)
  {
    dis[i.first][i.second]=0;
    qq.push(i);
  }

  while (!qq.empty())
  {
    pair<int,int>pp=qq.front();
    qq.pop();
    if(pp.first>1)
    {
      if(dis[pp.first-1][pp.second]>dis[pp.first][pp.second]+1)
      {
        dis[pp.first-1][pp.second]=dis[pp.first][pp.second]+1;
        qq.push({pp.first-1,pp.second});
      }      
    } 
    if(pp.second>1)
    {
      if(dis[pp.first][pp.second-1]>dis[pp.first][pp.second]+1)
      {
        dis[pp.first][pp.second-1]=dis[pp.first][pp.second]+1;
        qq.push({pp.first,pp.second-1});
      }      
    } 
    if(pp.first<n)
    {
      if(dis[pp.first+1][pp.second]>dis[pp.first][pp.second]+1)
      {
        dis[pp.first+1][pp.second]=dis[pp.first][pp.second]+1;
        qq.push({pp.first+1,pp.second});
      }      
    } 
    if(pp.second<m)
    {
      if(dis[pp.first][pp.second+1]>dis[pp.first][pp.second]+1)
      {
        dis[pp.first][pp.second+1]=dis[pp.first][pp.second]+1;
        qq.push({pp.first,pp.second+1});
      }      
    } 
  }  
}

signed main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);  
  cout.tie(0);   

  #ifndef ONLINE_JUDGE
      if(fopen("INPUT.txt","r"))
      {
      freopen ("INPUT.txt" , "r" , stdin);
      freopen ("OUTPUT.txt" , "w" , stdout);
      }
    #endif  


    int t;
    cin>>n>>m>>t;
    fill_n(&dis[0][0],1005*1005,1e9);
    string a[n+1];
    for(int i=1;i<=n;i++)
    {
      cin>>a[i];
      a[i]="#"+a[i];
    }

    for(int i=1;i<=n;i++)
    {
      for(int j=1;j<=m;j++)
      {
        if(i>1)
        {
          if(a[i-1][j]==a[i][j])
          {
            temp.push_back({i,j});
            mm[i][j]=1;
          }
        }
        if(j>1)
        {
          if(a[i][j-1]==a[i][j]&&!mm[i][j])
          {
            mm[i][j]=1;            
            temp.push_back({i,j});
          }
        }
        if(i<n)
        {
          if(a[i+1][j]==a[i][j]&&!mm[i][j])
          {
            mm[i][j]=1;
            temp.push_back({i,j});
          }
        }
        if(j<m)
        {
          if(a[i][j+1]==a[i][j]&&!mm[i][j])
          {
            mm[i][j]=1;
            temp.push_back({i,j});
          }
        }
      }
    }
    bfs();
    while (t--)
    {
      int i,j,q;
      cin>>i>>j>>q;

      if(dis[i][j]==1e9)
        cout<<a[i][j]<<'\n';
      else
      {
        int z=q-dis[i][j];
        if(z<0)
        {
          cout<<a[i][j]<<'\n';
          continue;
        }
        if(z%2)
        {
          cout<<!(a[i][j]-'0')<<'\n';
        }
        else
        {
          cout<<a[i][j]<<'\n';
        }        
      }      
    }
    


}
