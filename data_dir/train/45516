#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>


#define LL long long
#define uLL unsigned long long
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define vI vector<int>
#define vvI vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
#define forI(tmp) for(auto(it)=(tmp).begin();(it)!=(tmp).end();(it)++)
#define PI 3.14159265356
#define sc(a) scanf("%d", &(a))
const LL mod = 1000000007;
const LL Inf = 1e9;
using namespace std;

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	int a,n,b,k;
	cin >> n >> a >> b >> k;
	vector<char> pole(n);
	forn(i, 0, n) cin >> pole[i];
	vector<int> ans;
	int tmp = 0, count = 0;
	forn(i, 0, n) {
		if (pole[i] == '1') {
			tmp = 0;
		}
		else {
			tmp++;
			if (tmp == b) {
				count++;
				tmp = 0;
			}
		}
	}
	tmp = 0;
	forn(i, 0, n) {
		if (pole[i] == '1') {
			tmp = 0;
		}
		else {
			tmp++;
			if (tmp == b) {
				count--;
				ans.push_back(i+1);
				if (count < a) break;
				tmp = 0;
			}
		}
	}
	cout << ans.size() << endl;
	forn(i, 0, ans.size()) cout << ans[i] << " ";
	return 0;
}