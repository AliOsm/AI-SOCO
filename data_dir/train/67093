#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <map>
#include <iterator>
#include <cmath>
#include <set>
#include <deque> 
#include <string>


using namespace std;

char s[200010];
int szS;
char t[200010];
int szT;

int posHeadT[200010];
int posTailT[200010];


int main()
{
	scanf("%s\n%s\n", s, t);
	szS = strlen(s);
	szT = strlen(t);
	
	int maxLen = 0;

	//���������һ��ȡ�м䣬һ��ȡ���ߣ�������Ҫ�����Ƕ�
	//ȡ���鼫��ֵ��һ���һ��ʼ��������������һ��ӵ��������ӽ�β��ǰ 
	int p = 0;
	for (int i = 0 ; i < szT ; i++) 
	{
		while ((p < szS) && (s[p] != t[i]))
			p++;
		posHeadT[i] = p;
		p++;		
	}
	
	p = szS - 1;
	for (int i = szT - 1 ; i >= 0 ; i--) 
	{
		while ((p >= 0) && (s[p] != t[i]))
			p--;
		posTailT[i] = p;
		p--;		
	}
	
	int curLen;
	curLen = posHeadT[0] - 0;
	if (maxLen < curLen) maxLen = curLen;
	curLen = szS - 1 - posHeadT[szT - 1];
	if (maxLen < curLen) maxLen = curLen;
	
	curLen = posTailT[0] - 0;
	if (maxLen < curLen) maxLen = curLen;
	curLen = szS - 1 - posTailT[szT - 1];
	if (maxLen < curLen) maxLen = curLen;
	
	for (int i = 0 ; i < szT - 1 ; i++)
	{
		curLen = posTailT[i + 1] - posHeadT[i] - 1;
		if (maxLen < curLen) maxLen = curLen;
	}
	
	printf("%d\n", maxLen);
	
		
	return 0;
}

