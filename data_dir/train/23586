//const int N = 2e5+5;
//vi solve(vi arr){
//    map<int,int> cnt;
//    for(int x : arr)
//        ++cnt[x];
//    int l = arr[0], r = arr.back();
//    vi ans;
//    rep(i,l,r){
//        ans.pb(i);
//        --cnt[i];
//    }
//    for(int i = r; i >= l; --i){
//        while(cnt[i] > 0){
//            ans.pb(i);
//            --cnt[i];
//        }
//    }
//    return ans;
//}
//void _(){
//    int n;
//    cin >> n;
//    vi arr(n);
//    cin >> arr;
//    vi cnt(N);
//    for(int x : arr)
//        cnt[x]++;
//    sort(all(arr));
//    vi p{0,0,n-1};
//    rep(i,n)
//        if(cnt[arr[i]] < 2 || (i && arr[i]-1 > arr[i-1]) || (i+1 < n && arr[i+1]-arr[i] > 1))
//            p.pb(i);
//    unique(p);
//    p.insert(p.begin(),0);
//    vi ans;
//    rep(i,sz(p)-1){
//        if(arr[p[i+1]]-arr[p[i]] > 1 && p[i+1] == p[i]+1) continue;
//        vi tmp = solve(vi(arr.begin()+p[i],arr.begin()+p[i+1]+1));
//        if(sz(tmp) > sz(ans))
//            ans = tmp;
//    }
//    print_n sz(ans),ans;
//
//}
//
#include <map>
#include <iomanip>
#include <algorithm>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define pb push_back
#define REP_INT(i,l,r) for(int i = l; i <= r; ++i)
#define REP_ZERO_INT(i,r) for(int i = 0; i < r; ++i)
#define GET_REP_MACRO(_1,_2,_3,_4,NAME,...) NAME
#define rep(...) GET_REP_MACRO(__VA_ARGS__,REP_ANY,REP_INT,REP_ZERO_INT)(__VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef vector<int> vi;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 vector<T> unique(vector<T>& arr){
    sort(all(arr));
    arr.erase(unique(all(arr)), arr.end());
    return arr;
}
T1 istream& read(T, T, istream& = cin);
T1 istream& operator>>(istream& stream, vector<T>& t){
    return read(all(t), stream);
}
T1 istream& read(T b, T e, istream& stream){
    for(T it = b; it != e; ++it)
        stream >> *it;
    return stream;
}
struct _print {
    string sep,end;
    bool space;
    ostream &stream;
    _print(string _sep=" ",string _end="\n",
            ostream &_stream = cout)
        : sep(_sep),end(_end),space(false),
            stream(_stream) {}
    ~_print() { stream << end; }
    template <typename T>
        _print &operator , (const T &t) {
            if (space) stream << sep;
            space = true;
            stream << t;
            return *this;
        }
};
#define print_n _print("\n"),
T1 ostream& operator<<(ostream& stream, const vector<T>& t){
    for(int i = 0; i < sz(t); ++i){
        stream << t[i];
        if(i+1 < sz(t))
            stream << ' ';
    }
    return stream;
}
const int N = 2e5+5;
vi solve(vi arr){
    map<int,int> cnt;
    for(int x : arr)
        ++cnt[x];
    int l = arr[0], r = arr.back();
    vi ans;
    rep(i,l,r){
        ans.pb(i);
        --cnt[i];
    }
    for(int i = r; i >= l; --i){
        while(cnt[i] > 0){
            ans.pb(i);
            --cnt[i];
        }
    }
    return ans;
}
void _(){
    int n;
    cin >> n;
    vi arr(n);
    cin >> arr;
    vi cnt(N);
    for(int x : arr)
        cnt[x]++;
    sort(all(arr));
    vi p{0,0,n-1};
    rep(i,n)
        if(cnt[arr[i]] < 2 || (i && arr[i]-1 > arr[i-1]) || (i+1 < n && arr[i+1]-arr[i] > 1))
            p.pb(i);
    unique(p);
    p.insert(p.begin(),0);
    vi ans;
    rep(i,sz(p)-1){
        if(arr[p[i+1]]-arr[p[i]] > 1 && p[i+1] == p[i]+1) continue;
        vi tmp = solve(vi(arr.begin()+p[i],arr.begin()+p[i+1]+1));
        if(sz(tmp) > sz(ans))
            ans = tmp;
    }
    print_n sz(ans),ans;
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        _();
}
