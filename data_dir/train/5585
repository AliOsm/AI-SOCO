#include <iostream>
#include <vector>
#include <cstring>
using namespace std;

int n;
const int MAXN=3009;
vector<int> v[MAXN];
typedef long long ll;
ll cnt[MAXN];
ll C2[MAXN];

void fill_C2(void)
{
	C2[0]=0;
    for(int i=1; i<MAXN; i++)
	{
		C2[i]=C2[i-1]+i-1;
	}
}

int main()
{
	ios_base::sync_with_stdio(false);
	int m;
	cin >> n >> m;
	for(int i=0; i<m; i++)
	{
        int a, b;
        cin >> a >> b;
        v[a].push_back(b);
	}

	fill_C2();
	ll result=0LL;
    for(int i=1; i<=n; i++)
	{
        memset(cnt, 0, sizeof(cnt));
		int sz=v[i].size();
		for(int jj=0; jj<sz; jj++)
		{
            int j=v[i][jj];
            int sz2=v[j].size();
            for(int kk=0; kk<sz2; kk++)
			{
				int k=v[j][kk];
				cnt[k]++;
			}
		}
        for(int j=1; j<=n; j++)
		{
			if(j!=i)
			{
				//cout << i << ' ' << j << ' ' << cnt[j] << endl;
				result+=C2[cnt[j]];
			}
		}
	}

	cout << result;
	return 0;
}
