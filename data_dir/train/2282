#include <bits/stdc++.h>
#define ll long long
#define rw freopen("input.txt","r",stdin),freopen("output.txt","w",stdout);
#define pb push_back
#define F first
#define S second
#define pf push_front
#define lp(i,a,b) for (int i=a;i<=(int)b;++i)
#define lp2(i,a,b) for (int i=a;i>=b;--i)
#define f(x) return cout<<x<<"\n",0
#define pii pair<int,int>
#define pll pair<ll,ll>
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
#define p(x) cout<<#x<<" = { "<<x<<" } \n"
#define vi vector<int>
#define vl vector<ll>
#define vii vector<pii>
#define vll vector<pll>
#define EPS 1e-6
#define FAST ios::sync_with_stdio(0),ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define clr(c,x) memset(c,x,sizeof(c));
using namespace std;
const int N=1e5+5,mod=(int)1e9+7;
ll c[N],cost;
vi v[N];
void dfs(int node,int par,int lvl)
{
    ll mn=INT_MAX;
    for (auto u:v[node])
    {
        if (u==par)
            continue;
        if (lvl&1)
            mn=min(mn,c[u]);
    }
    if (mn!=INT_MAX)
    {
        if (mn-c[par]<0)
            exit(puts("-1"));
        cost+=(mn-c[par]);
    }
    for (auto u:v[node])
    {
        if (u==par)
            continue;
        if (lvl&1)
            cost+=(c[u]-mn);
        dfs(u,node,lvl+1);
    }
}
int main()
{
#ifdef ONLINE_JUDGE
    FAST;
#endif
    int n;
    cin>>n;
    lp(i,2,n)
    {
        int p;
        cin>>p;
        v[p].pb(i);
    }
    lp(i,1,n)
    cin>>c[i];
    dfs(1,1,0);
    cout<<cost+c[1]<<"\n";
    return 0;
}