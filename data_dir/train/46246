#include<bits/stdc++.h>
using namespace std;

#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math")

const int maxn = 2e6 + 10;

int t;
int c[maxn];
int cnt[maxn];
int wow[maxn];

void in();
void solve();

int main(){
    in();
    solve();
}

void in(){
    ios::sync_with_stdio(false);
    cout.tie(0);
    cin.tie(0);
    cin >> t;
}

void solve(){
    for(int T = 0; T < t; T++){
        int n;
        cin >> n;
        int j = 1;
        for(int i = 0; i < n; i++){
            cin >> c[i];
            cnt[c[i]]++;
            if((n + i) / (i + 1) != wow[j - 1])
                wow[j++] = (n + i) / (i + 1);
        }
        while(wow[j - 1] == 0)
            j--;
        for(int x = 1; x < j; x++){
            int f2 = 0;
            int f = 1;
            for(int i = 0; i <= n; i++){
                if(cnt[i] != 0){
                    int T = (cnt[i] + wow[x] - 1) / wow[x];
                    f2 += T;
                    int t = T * wow[x] - cnt[i];
                    //cout << c[i] << ' ' << cnt[c[i]] << ' ' << wow[x] << ' ' << T << ' ' << t << endl;
                    if(t > T){
                        //cout << "BAD" << endl;
                        //cout << c[i] << ' ' << cnt[c[i]] << ' ' << wow[x] << ' ' << T << ' ' << t << endl;
                        f = 0;
                        break;
                    }
                }
            }
            //if(f2 == 0){
            //    cout << n << '\n';
            //    break;
            //}
            if(f && (n + f2 - 1) / f2 == wow[x]){
                cout << f2 << '\n';
                break;
            }
        }
        for(int i = 0; i <= n; i++)
            cnt[i] = 0;
    }
}
