#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>
#include <valarray>
#include <random>
#include <bitset>
#include <iomanip>


typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 


#define forn(i,n) for(tint i=0;i<(tint)(n); i++)
#define forsn(i,s,n) for(tint i=(s);i<(tint)(n); i++)
#define debug(x) cout << #x << " = "  << x << endl

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		tint p = tint(v.size());
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}
const tint maxN = 1024;
int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	tint n;
	while (cin >> n)
	{
		vector<vector<tint> > a (n, vector<tint> (n,0));
		vector<tint> sf (n,0), sc(n,0);
		forn(i,n)
		forn(j,n)
		{
			cin >> a[i][j];
			sf[i] += a[i][j];
			sc[j] += a[i][j];
		}
		
		tint r = 0;
		forn(i,n)
		forn(j,n)
			r += (a[i][j]*a[j][i]);
		r %= 2;
		tint q;
		cin >> q;
		forn(kk,q)
		{
			tint t;
			cin >> t;
			if (t == 1)
			{
				tint fila;
				cin >> fila;
				fila--;
				r += (1);
				r %= 2;
			}
			else if (t == 2)
			{
				tint columna;
				cin >> columna;
				columna--;
				r += (1);
				r %= 2;
			}
			else
				cout << r%2;
		}
		cout << "\n";
		
	}
	return 0;
}



