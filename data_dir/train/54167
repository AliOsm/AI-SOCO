#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
using namespace std;
typedef long long mt;
#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= b; ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

#define N 301
#define K 1001
#define M (55)
#define INF 10000000000000007// 1e16 + 7
#define MOD 1000000009  //1000000007//1e9 + 7
#define EPS 1e-9
#define MAX 1000000000000000001
//#pragma comment(linker, "/STACK:2000000000")

mt n, fs, k;
mt a, b, c;
mt d[N][N];
int main(void)
{
#ifdef _DEBUG	
	freopen("in.txt", "r", stdin);
#endif
	scanf("%lld", &n);
	rep(0, n, i)
		rep(0, n, j)
		scanf("%lld", &d[i][j]), fs += d[i][j];
	fs >>= 1;
	scanf("%lld", &k);
	while (k--) {
		scanf("%lld %lld %lld", &a, &b, &c), --a, --b;
		rep(0, n, i)
			rep(i + 1, n, j) {
			mt x = min(d[j][a] + d[b][i] + c, d[i][a] + d[b][j] + c);
			if (x < d[i][j])
				fs += x - d[i][j], d[j][i] = d[i][j] = x;
		}
		printf("%lld\n", fs);
	}
	return 0;
}