/* 159C */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 2e5+5;
int a[26][maxn];
char s[105];
int len, k;

inline int lowest(int x) {
	return x & (-x);
}

void update(int i, int x, int delta) {
	while (x <= len) {
		a[i][x] += delta;
		x += lowest(x);
	}
}

int sum(int i, int x) {
	int ret = 0;
	
	while (x) {
		ret += a[i][x];
		x -= lowest(x);
	}
	return ret;
}

void solve(int id, int th) {
	int l = 1, r = len, mid;
	int tmp;
	
	while (l < r) {
		mid = (l+r)>>1;
		tmp = sum(id, mid);
		if (tmp >= th)
			r = mid;
		else
			l = mid + 1;
	}
#ifndef ONLINE_JUDGE
    printf("l = %d\n", l);
#endif
	update(id, l, -1);
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	scanf("%d %s", &k, s+1);
	int l = strlen(s+1);
	len = l * k;
	
	memset(a, 0, sizeof(a));
	
	int i, j;
	
	for (i=1; i<=l; ++i) {
		for (j=i; j<=len; j+=l)
			update(s[i]-'a', j, 1);
	}
	
	
	int n, p;
	char op[3];
	
	scanf("%d", &n);
	while (n--) {
		scanf("%d %s", &p, op);
		solve(op[0]-'a', p);
	}
	
	for (i=1; i<=len; ++i) {
		for (j=0; j<26; ++j) {
			if (sum(j,i) - sum(j,i-1) > 0) {
				putchar(j+'a');
				break;
			}
		}
	}
	putchar('\n');
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
