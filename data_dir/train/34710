#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vvi;
typedef vector<pii> vii;
typedef vector<vector<pii> > vvii;
typedef long double ld;
typedef map<int, int> mapii;
typedef map<string, int> mapsi;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pi  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) { x, {y, z } }

const int N = 1e5 + 5;
vii val;
vvi node;
ll n, m;
ll sz[N], par[N], arr[N];

int get(int u)
{
	return (u == par[u] ? u : par[u] = get(par[u]));
}

void merge(int u, int v)
{
	if (sz[u] > sz[v])
	{
		par[v] = u;
		sz[u] += sz[v];
	}
	else
	{
		par[u] = v;
		sz[v] += sz[u];
	}
}
// 3agwa is 5ere3 fel DSU :(
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> n >> m;

	node = vvi(n);
	val = vii(n);

	rep(i, 0, n)
	{
		cin >> arr[i];
		val[i] =
		{	arr[i], i};
		par[i] = i;
		sz[i] = 1;
	}

	sort(val.rbegin(), val.rend());

	while (m--)
	{
		int u, v;
		cin >> u >> v;
		u--, v--;
		node[u].push_back(v);
		node[v].push_back(u);
	}
	ll sum = 0;
	rep(i, 0, n)
	{
		int u = val[i].second;
		for (auto v : node[u])
		{
			if (arr[u] > arr[v])
				continue;
			int pa = get(u), pb = get(v);

			if (pa == pb)
				continue;
			sum += (1ll * arr[u] * sz[pa] * sz[pb]);
			merge(pa, pb);
		}
	}

	cout << fixed << setprecision(6) << 2. * sum / (n * (n - 1));

	return 0;
}
