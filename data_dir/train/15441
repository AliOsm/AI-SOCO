#include <bits/stdc++.h>
using namespace std;

#define sc( x ) scanf( "%d" , &x )
#define REP( i , n ) for( int i = 0 ; i < n ; i++ )
#define clr( t , val ) memset( t , val , sizeof(t) )

#define all(v)  v.begin() , v.end()
#define pb push_back

#define mp make_pair
#define fi first
#define se second

#define test puts("************test************");

#define N 100005
#define MOD 1000000007
#define INF (1<<30)
#define EPS (1e-5)

typedef long long ll;
typedef pair< int , int > pii;
typedef vector< int > vi;

string tos( ll x ){
    ostringstream out;
    out << x;
    return out.str();
}
string g( ll x ){
    string s;
    while( x ){
        if( x & 1 ) s += "1";
        else s += "0";
        x >>= 1 ;
    }
    reverse( all( s ) );
    return s;
}
int n , k;
string target;
ll memo[ 70 ][ 2 ][ 70 ];
bool used[ 70 ][ 2 ][ 70 ];
ll dp( int pos , int menor , int cnt ){
    if( pos == n ) return cnt == k;
    if( used[ pos ][ menor ][ cnt ] ) return memo[ pos ][ menor ][ cnt ];
    used[ pos ][ menor ][ cnt ] = 1;
    ll &dev = memo[ pos ][ menor ][ cnt ] = 0;
    if( menor ){
        REP( i , 2 ) dev += dp( pos + 1 , 1 , cnt + (i == 1) );
    }else{
        for( int i = 0 ; i <= target[ pos ] ; ++i )
            dev += dp( pos + 1 , i < target[ pos ] , cnt + (i == 1) );
    }
    return dev;
}
ll f( ll num ){
    target = g( num );
    //cout << target << " " ;
    n = target.size();
    REP( i , n ) target[ i ] -= '0';
    clr( used , 0 );
    return dp( 0 , 0 , 0 );
}

ll get( ll num ){
    return f( num << 1 ) - f( num );
}
int main(){
    ll m;   
    while( cin >> m >> k ){
        if( m == 0 ){
            if( k > 1 ) cout << "1" << endl;
            else{
                assert( 0 );
            }
            continue;
        }
        ll lo = 1 , hi = 1e18 + 5;
        //cout << hi << " " << get( hi ) << endl;
        while( hi - lo > 1 ){
            ll med = ( lo + hi )>>1;
            if( get( med ) >= m ) hi = med;
            else lo = med;
        }
        //cout << hi << " " << get( hi ) << endl;
        cout << hi << endl;
    }
}