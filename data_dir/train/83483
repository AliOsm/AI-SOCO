/// b.cpp

# include <stdio.h>
# include <bits/stdc++.h>
using namespace std;
const pair < int , int > DD[] = {{1,0},{1,1},{0,1},{-1,1},{-1,0},{-1,-1},{0,-1},{1,-1}};
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define IOS ios_base :: sync_with_stdio(0);cin.tie(0)
# define p(v) cerr << #v << " = " << v << '\n'
# define p2(v) cerr << #v << " = " << (complex < __typeof(v.x) > (v.x,v.y)) << '\n'
# define vi vector < int >
# define vl vector < ll >
# define pll pair < ll , ll >
# define pii pair < int , int >
# define mp make_pair
# define db long double
# define fail puts("-1")
# define yes puts("YES")
# define no puts("NO")
# define PP puts("Possible")
# define II puts("Impossible")
# define vii vector < pii >
# define vll vector < pll >
# define pb push_back
# define pdd pair < db , db >
template < class T > T smin(T &a,T b) {if (a > b) a = b;return a;}
template < class T > T smax(T &a,T b) {if (a < b) a = b;return a;}
int main(void)
{
    #ifdef CF
    freopen("input","r",stdin);
    #endif // CF
    srand(time(0));
    fo << fixed << setprecision(7);
    cerr << fixed << setprecision(7);
    static int was[1 << 10][1 << 10];
    static char s[1 << 10][1 << 10];
    int n,m;
    fi>>n>>m;
    for (int i = 1;i <= n;++i)
        fi>>(s[i] + 1);
    for (int i = 1;i <= n;++i)
        for (int j = 1;j <= m;++j)
            was[i][j] += was[i - 1][j] + was[i][j - 1] - was[i - 1][j - 1] + (s[i][j] == '*');
    auto get = [&](int x1,int y1,int x2,int y2)
    {
        int ans = was[x2][y2] + was[x1 - 1][y1 - 1] - was[x1 - 1][y2] - was[x2][y1 - 1];
        return ans;
    };
    pii S,T;
    for (int i = 1;i <= n;++i)
        for (int j = 1;j <= m;++j)
        {
            if (s[i][j] == 'S')
                S = mp(i,j);
            if (s[i][j] == 'T')
                T = mp(i,j);
        }
    const int dx[] = {0,1,-1,0};
    const int dy[] = {1,0,0,-1};
    for (int a = 0;a < 4;++a)
        for (int b = 0;b < 4;++b)
            for (int i = 0;i <= 1000;++i)
                for (int j = 0;j <= 1000;++j)
                {
                    int xx = S.x + i * dx[a];
                    int yy = S.y + i * dy[a];
                    if (!(1 <= xx && xx <= n) || !(1 <= yy && yy <= m) || get(min(S.x,xx),min(S.y,yy),max(S.x,xx),max(S.y,yy)))
                        continue;
                    int cx = xx;
                    int cy = yy;
                    xx += j * dx[b];
                    yy += j * dy[b];
                    if (!(1 <= xx && xx <= n) || !(1 <= yy && yy <= m) || get(min(cx,xx),min(cy,yy),max(cx,xx),max(cy,yy)))
                        continue;
                    if (!(xx == T.x || T.y == yy) || get(min(xx,T.x),min(yy,T.y),max(xx,T.x),max(yy,T.y)))
                        continue;
                    return yes * 0;
                }
    no;
    cerr << "Time elapsed :" << clock() * 1000.0 / CLOCKS_PER_SEC << " ms" << '\n';
    return 0;
}
