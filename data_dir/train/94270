#include <bits/stdc++.h>
#define MOD 1000000007
#define Nmax 1000005
#define pb push_back
#define mp make_pair
#define INF 2000000000
#define eps 0.000000000001

using namespace std;

int n,m,a[Nmax],b[Nmax],Nr,in[Nmax],sol[Nmax],l,Ciclu;
bool viz[Nmax],seen[Nmax];
vector <int> L[Nmax];

inline bool Cmp(const int A, const int B)
{
    return a[A]<a[B];
}

inline void Dfs(int nod)
{
    if(Ciclu) return;
    viz[nod]=true;
    vector <int> :: iterator it;
    for(it = L[nod].begin(); it!=L[nod].end(); ++it)
        if(!viz[*it]) Dfs(*it);
    sol[++l]=nod;
}

inline void DfsC(int nod)
{
    if(Ciclu) return;
    viz[nod]=true; seen[nod]=true;
    vector <int> :: iterator it;
    for(it = L[nod].begin(); it!=L[nod].end(); ++it)
    {
        if(seen[*it])
        {
            Ciclu=1; return;
        }
        if(!viz[*it]) DfsC(*it);
    }
    sol[++l]=nod; seen[nod]=false;
}


inline void CicluV()
{
    for(int i=1;i<=Nr;++i)
        if(!viz[i]) DfsC(i);
}

inline void SortT()
{
    int i,ok=0;
    for(i=1;i<=Nr;++i)
        if(!in[i] && !viz[i])
        {
            ok=1;
            Dfs(i);
        }
}

int main()
{
    int i,j,k;
    #ifndef ONLINE_JUDGE
        freopen ("date.in","r",stdin);
        freopen ("date.out","w",stdout);
    #endif
    cin.sync_with_stdio(0);
    cin>>n>>m; Nr=m;
    for(i=1;i<=n;++i)
    {
        for(j=1;j<=m;++j)
        {
            cin>>a[j]; b[j]=j;
        }
        sort(b+1,b+m+1,Cmp);
        for(j=1;j<=m && a[b[j]]==-1;++j);
        for(;j<m;++j)
            if(a[b[j]]!=a[b[j+1]])
            {
                ++Nr;
                for(k=j;k && a[b[k]]==a[b[j]];--k)
                {
                    L[b[k]].pb(Nr); ++in[Nr];
                    //cout<<b[k]<<" "<<Nr<<"\n";
                }
                for(k=j+1;k<=m && a[b[k]]==a[b[j+1]];++k)
                {
                    L[Nr].pb(b[k]); ++in[b[k]];
                    //cout<<Nr<<" "<<b[k]<<"\n";
                }
            }
    }
    CicluV();
    for(i=1;i<=Nr;++i) viz[i]=false;
    SortT();
    if(Ciclu) cout<<"-1";
    else
    {
        for(i=Nr;i;--i)
            if(sol[i]<=m) cout<<sol[i]<<" ";
    }
    return 0;
}
