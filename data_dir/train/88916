#pragma optimize("Ofast")

#include <bits/stdc++.h>

using namespace std;

using ll = long long int;
using ull = unsigned long long int;
using dd = double;
using ldd = long double;
using si = short int;
using pii = pair<int, int>;
using pll = pair<ll, ll>;

#define all(x) (x).begin(), (x).end()
#define ff first
#define ss second

// debug defines
#ifdef HOME
    int jjj;
    #define PO cout << "Pomelo" << endl;
    #define OL cout << "Oliva" << endl;
    #define debug(x) cout << #x << " " << x << endl;
    #define debug_v(x) cout << #x << " "; for (auto ii : x) cout << ii << " "; cout << endl;
    #define debug_vp(x) cout << #x << " "; for (auto ii : x) cout << '[' << ii.ff << " " << ii.ss << ']'; cout << endl;
    #define wait() cin >> jjj;
#else
    #define PO 0
    #define OL 0
    #define debug(x) 0
    #define debug_v(x) 0
    #define debug_vp(x) 0
    #define wait() 0
#endif // HOME
// end of debug defines

vector<int> dsu, ans;

int get_pre(int v)
{
    if (dsu[v] == v)
        return v;
    return (dsu[v] = get_pre(dsu[v]));
}

int main()
{
    ios_base::sync_with_stdio(0);
    cout.tie(0);
    cin.tie(0);

    int n;
    int m;
    cin >> n >> m;
    dsu.resize(n + 10);
    ans.resize(n + 1, 0);

    for (int i = 0; i <= n +9; ++i)
    {
        dsu[i] = i;
    }

    for (int i = 0; i < m; ++i)
    {
        int l, r, w;
        cin >> l >> r >> w;
        for (int j = get_pre(l); j < w; j = get_pre(j + 1))
        {
            dsu[j] = ans[j] = w;
        }
        for (int j = get_pre(w + 1); j <= r; j = get_pre(j + 1))
        {
            ans[j] = w;
            dsu[j] = get_pre(r + 1);
        }
    }
    for (int i = 0; i < n; ++i)
        cout << ans[i + 1] << " ";
}

