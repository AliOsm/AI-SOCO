#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define MAXN (1 << 10)
#define MAXK (1 << 20)
#define mod (long long)((long long)1e9 + 7)

using namespace std;
using namespace __gnu_pbds;

template <typename T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

int n, k;
char a[MAXN], b[MAXN];

void read()
{
	scanf("%s", &a);
	scanf("%s", &b);
	scanf("%d", &k);
	n = strlen(a);
}

long long dp[MAXK][2];

void solve()
{
	long long A = 0, B = 0;

	for(int st = 0; st < n; st++)
	{
		bool good = true;
		for(int i = st, j = 0; j < n; j++, i++)
		{
			i %= n;
			j %= n;

			if(a[i] != b[j])
				good = false;
		}

		A += good;
		B += !good;
	}

	bool start = true;
	for(int i = 0; i < n; i++)
		if(a[i] != b[i])
			start = false;

	dp[0][0] = start;
	dp[0][1] = !start;

	for(int i = 1; i <= k; i++)
	{
		dp[i][0] = (dp[i - 1][0] * (A - 1) + dp[i - 1][1] * A) % mod;
		dp[i][1] = (dp[i - 1][0] * B + dp[i - 1][1] * (B - 1)) % mod;
	}

	printf("%d\n", dp[k][0]);
}

int main()
{
	read();
	solve();
	return 0;
}

