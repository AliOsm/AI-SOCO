#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, pll> p3l;
typedef pair<char, ll> pcl;
typedef vector<char> vc;
typedef vector<ll> vll;
typedef vector<pll> vpll;
typedef vector<p3l> vp3l;
typedef vector<vll> vvll;
typedef vector<vector<pll>> vvpll;
typedef vector<ld> vld;

const int MOD = 998244353;

#define fan(i, a, n) for(auto i=a; i<n; ++i)
#define boost ios_base::sync_with_stdio(0);cout.tie(0);cin.tie(0)
#define fna(i, n, a) for(int i=n-1; i>=a; --i)
#define fit(it, x) for(auto &it:x)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define pb push_back
#define rs resize
#define endl "\n"
#define fst first
#define snd second
#define sz size
#define ins insert
#define mp make_pair
#define ce cout << "\n"

ld sqr(ld a) {
  return a * a;
}
//#define dbg(x)
//
//vector<vector<int>> dfsv;
//vector<char> used;
//void dfs(int n){
//    used[n]=true;
//    fit(it,dfsv[n]){
//        if(!used[*it])dfs(*it);
//    }
//}
//ll phi(ll x){
//    ll result = x;
//    for(ll i=2;i*i<=x;i++){
//        if(x%i==0){
//            while(x%i==0){
//                x/=i;
//            }
//            result -= result/i;
//        }
//    }
//    if (x > 1)
//        result -= result / x;
//    return result;
//}
ld gcd(ld a, ld b) {
  if (b == 0)
    return a;
  else
    return gcd(b, fmod(a,b));
}
//ll m;
//ll mulmod(ll a,ll b){
//    a%=m;
//    if(b==0)return 1;
//    if(b%2==0){
//        return mulmod((a*a)%m,b/2)%m;
//    }else{
//        return (mulmod((a*a)%m,b/2)%m+a)%m;
//    }
ll ans[1001][2001][4];
int main() {
  boost;
  int n,k;
  cin >> n >> k;
  ans[1][1][0] = 1;
  ans[1][2][1] = 1;
  ans[1][2][2] = 1;
  ans[1][1][3] = 1;
  fan(i,2,1001){
    fan(j,1,2*i+1){
      if(j==1){
        ans[i][j][0] = 1;
        ans[i][j][3] = 1;
        continue;
      }
      ans[i][j][0] = ans[i-1][j][0]+ans[i-1][j][1]+ans[i-1][j][2]+ans[i-1][j-1][3];
      ans[i][j][3] = ans[i-1][j][1]+ans[i-1][j][2]+ans[i-1][j][3]+ans[i-1][j-1][0];
      ans[i][j][1] = ans[i-1][j-1][0]+ans[i-1][j-1][3]+ans[i-1][j][1]+ans[i-1][j-2][2];
      ans[i][j][2] = ans[i-1][j-1][0]+ans[i-1][j-1][3]+ans[i-1][j][2]+ans[i-1][j-2][1];
      fan(k,0,4)ans[i][j][k]%=MOD;
    }
  }
  cout << (ans[n][k][0]+ans[n][k][1]+ans[n][k][2]+ans[n][k][3])%MOD;


  return 0;
}