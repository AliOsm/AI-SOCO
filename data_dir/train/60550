/*
ID: Tariqul
PROG: 
LANG: C++
*/

#include <algorithm> 
#include <cctype> 
#include <cmath> 
#include <cstdio> 
#include <cstdlib> 
#include <cstring> 
#include <deque> 
#include <iostream> 
#include <list> 
#include <map> 
#include <numeric> 
#include <queue> 
#include <set> 
#include <sstream> 
#include <stack> 
#include <string> 
#include <vector>

using namespace std; 

#define fo(i,j,n) for(i=j;i<n;++i)
#define Fo(i,j,n) for(i=n-1;i>=j;--i)
#define foo(i,j,v) fo(i,j,sz(v))
#define Foo(i,j,v) Fo(i,j,sz(v))
#define li(v) v.begin(),v.end()
#define sz(v) ((int)v.size())
#define CLR(a,v) memset((a),(v),sizeof(a))
#define inf 1000000001
//typedef long long Long;
typedef __int64 Long;
#define pi (2*acos(0))
#define eps 1e-9

#define two(X) (1<<(X))
#define twoL(X) (((Long)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)

char BUFFER[100000 + 5];
bool readn(int &n)	{ return scanf("%d",&n) == 1; } 
bool readl(Long &n)	{ return scanf("%I64d",&n) == 1; } 
bool readd(double &n){ return scanf("%lf",&n) == 1; } 
bool reads(string &s){ s = ""; int n = scanf("%s",BUFFER); if(n == 1)s = BUFFER; return n == 1; }
bool readln(string &s){ char *valid = gets(BUFFER); if(valid)s = BUFFER; return ((bool)valid); }

const int maxn = 100000 + 10;
vector<int> adj[maxn];
set<int> st[maxn];
bool vis[maxn];
bool alive(int i,int j)
{
	if(vis[j])return false; if(i > j)swap(i,j); 
	if(st[i].find(j) != st[i].end())return false;
	st[i].insert(j);
	return true;
}

int doit(int u)
{
	vector<int> x(0),t(0); vis[u] = true;
	int i,j,v,w;
	foo(i,0,adj[u])
	{
		v = adj[u][i];
		if(alive(u,v))t.push_back(v);
	}
	foo(i,0,t)
	{
		v = t[i];
		w = doit(v);
		if(0 == w)x.push_back(v);
		else printf("%d %d %d\n",u,v,w);
	}
	while(sz(x) > 1)
	{
		v = x.back(); x.pop_back();
		w = x.back(); x.pop_back();
		printf("%d %d %d\n",v,u,w);
	}
	if(sz(x) == 0)return 0;
	return x.back();
}

int main()
{
	#ifdef localhost
	freopen("D://input.txt","r",stdin);
	//freopen("D://output.txt","w",stdout);
	#endif
	
	int i,n,m,a,b; cin >> n >> m;
	if(m%2)
	{
		cout << "No solution\n";
		return 0;
	}
	fo(i,0,maxn){ adj[i].clear(); st[i].clear(); } CLR(vis,false);
	fo(i,0,m)
	{
		readn(a); readn(b);
		adj[a].push_back(b);
		adj[b].push_back(a);
	}
	doit(1);	
	//printf("\n");
	return 0;
} 