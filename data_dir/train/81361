#include <bits/stdc++.h>
using namespace std;

const int MAX = 1e5 + 5;

#define dbg(a) cout << "-> " << __LINE__ << ": " << #a << " = " << a << endl

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n, m;
	cin >> n >> m;
	vector <int> x(n);
	set <int> vis;
	for (int i = 0; i < n; i++) {
		cin >> x[i];
		vis.insert(x[i]);
	}
	long long res = 0;
	queue <pair <int, int>> Q;
	for (int i = 0; i < n; i++) {
		if (vis.find(x[i] - 1) == vis.end()) {
			Q.push({x[i] - 1, 1});
			vis.insert(x[i] - 1);
		}
		if (vis.find(x[i] + 1) == vis.end()) {
			Q.push({x[i] + 1, 1});
			vis.insert(x[i] + 1);
		}
	}
	vector <int> y(m);
	for (int i = 0; i < m; i++) {
		y[i] = Q.front().first;
		res += Q.front().second;
		int cost = Q.front().second;
		Q.pop();
		vis.insert(y[i]);
		if (vis.find(y[i] - 1) == vis.end()) {
			Q.push({y[i] - 1, cost + 1});
			vis.insert(y[i] - 1);
		}
		if (vis.find(y[i] + 1) == vis.end()) {
			Q.push({y[i] + 1, cost + 1});
			vis.insert(y[i] + 1);
		}
	}
	cout << res << '\n';
	for (int v : y) {
		cout << v << ' ';
	}
	cout << '\n';
	return 0;
}
