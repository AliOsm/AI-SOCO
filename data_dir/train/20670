#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define IN freopen("hard1.txt","r",stdin)
#define OUT freopen("hard1.txt","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 1000005

using namespace __gnu_pbds;
using namespace std ;

typedef tree< i64, null_type, less<i64>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef pair<i64, i64> pii;

#define INF 2000000000000000000LL
#define alpha 26
#define mod 998244353LL
#define maxn 300005
#define LOG 18

vector <int> g[maxn] ;
int dp[maxn][3] ;

void dfs(int u , int par)
{
    dp[u][0] = 1 ; dp[u][1] = 1 ; dp[u][2] = 1 ;

    int tosub = 1 ;

    for(int v:g[u])
    {
        if(v==par) continue ;
        dfs(v,u) ;

        int un = 0 , t = 0 ;
        un = ( 1LL*dp[u][0]*dp[v][0] + 1LL*dp[u][0]*dp[v][1]   +  1LL*dp[u][0]*dp[v][0] + 1LL*dp[u][0]*(dp[v][1]+dp[v][2])  )%mod ;
        t = (  1LL*dp[u][1]*dp[v][0] + 1LL*dp[u][1]*dp[v][1]   +  1LL*dp[u][1]*dp[v][0] )%mod ;

//        if(g[v].size()==1) un = (un + 1LL*dp[u][0]*dp[v][0] )%mod ;

        dp[u][2] = (1LL*dp[u][2]*(dp[v][0]+dp[v][1]))%mod ;
        dp[u][0] = un ; dp[u][1] = t ;
    }
    dp[u][1] = ((dp[u][1] - dp[u][2])%mod + mod)%mod ;
//    dp[u][1] = ((dp[u][1]-tosub)%mod + mod)%mod ;
}

int main()
{
    int n ;
    scanf("%d",&n) ;

    for(int i=1 ; i<n ; i++)
    {
        int u , v ;
        scanf("%d %d",&u,&v) ;
        g[u].pb(v) ; g[v].pb(u) ;
    }

    dfs(1,0) ;

    int ans = (dp[1][0]+dp[1][1] - 1)%mod ;
    ans = (ans+mod)%mod ;

 //   printf("%d %d %d\n",dp[1][0],dp[1][1],dp[1][2]) ;

    printf("%d\n" , ans ) ;

    return 0 ;
}
