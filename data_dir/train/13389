#include <bits/stdc++.h>
using namespace std;

int n;
long long a[200055];
long long res[200055];
long long dat[200055];
set<int> s;

void add(int id, long long val) {
	while (id < n) {
		dat[id] += val;
		id |= (id + 1);
	}
}
long long get(int id) {
	if (id < 0) return 0LL;

	long long res = 0LL;

	while (id >= 0) {
		res += dat[id];
		id = (id & (id + 1)) - 1;
	}

	return res;
}
inline void go(int x) {
	if (res[x] <= a[x]) return;

	if (s.find(x) != s.end()) s.erase(x);

	auto ite = s.upper_bound(x);

	if (ite != s.end()) res[*ite] += (res[x] - a[x]);

	res[x] = a[x];

	if (ite != s.end() && res[*ite] > a[*ite]) go(*ite);
}
int main() {
	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		scanf("%lld", &a[i]);
	}

	int m;

	scanf("%d", &m);

	int ope, x;
	long long y;

	for (int i = 0; i < n; i++) s.insert(i);

	while (m--) {
		scanf("%d", &ope);

		if (ope == 1) {
			scanf("%d %lld", &x, &y);
			x--;

			res[x] += y;

			if (res[x] > a[x]) go(x);
		} else {
			scanf("%d", &x);
			x--;

			printf("%lld\n", res[x]);
		}
	}

	return 0;
}
