#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

typedef long long ll;

struct creature {
    ll hp, dmg, diff;
    int b;
    bool operator < (const creature& a) const {
        return a.diff < diff;
    }
};

vector<creature> v;

int main() {
    int n, a, b;
    ll hp, dmg, sum = 0LL, last = 0x8000000000000000LL, ans = 0LL;
    
    scanf("%d%d%d", &n, &a, &b);
    for (int i = 0; i < n; i++) {
        scanf("%I64d%I64d", &hp, &dmg);
        v.push_back((creature) {hp, dmg, max(hp-dmg, 0LL), 0});
    }
    
    sort(v.begin(), v.end());
    for (int i = 0; i < n; i++) {
        if (v[i].diff > 0 && b > 0) {
            v[i].b = 1;
            b--;
            if (b == 0)
                last = v[i].diff;
        }
        sum += v[i].dmg;
        if (v[i].b)
            sum += v[i].diff;
    }
    
    ans = sum;
    for (int i = 0; i < n; i++) {
        ll new_hp = v[i].hp << a;
        if (new_hp <= v[i].dmg)
            continue;
        ll new_diff = new_hp - v[i].dmg;
        if (v[i].b) {
            ll new_sum = sum - v[i].diff + new_diff;
            ans = max(ans, new_sum);
        }
        else if (b > 0) {
            ll new_sum = sum + new_diff;
            ans = max(ans, new_sum);
        }
        else {
            ll new_sum = sum - last + new_diff;
            ans = max(ans, new_sum);
        }
    }
    
    printf("%I64d\n", ans);

    return 0;
}
