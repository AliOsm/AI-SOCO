#include <algorithm>
#include <string.h>
#include <stdio.h>
#include <iostream>
#include <vector>
#include <queue>
#include <cmath>
#include <set>
#include <map>
#include <stack>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

const int inf = 0x3f3f3f3f;
const ll oo = 0x3f3f3f3f3f3f3f3fll;
const double eps = 1e-6;

const int N = 300010;
const int M = 5010;

#define pb push_back
#define sz(x) ((x).size())

int n;
char s1[N], s2[N];
int c1[31], c2[31];
int sum[N][31];

bool check(int x, int a, int b){ // id == x , a -> b;
    if(a == b){
        return sum[n][a] - sum[x][a] >= c1[a] - c2[a];
    }
    if(c1[a] <= c2[a] || c1[b] >= c2[b]) return false;
    if(sum[n][a] - sum[x][a] < c1[a] - c2[a] - 1)
        return false;
    return true;
}

int main(){
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    scanf("%s%s", s1 + 1, s2 + 1);
    n = strlen(s1 + 1);
    for(int i = 1; i <= n; i++)
        c1[s1[i] - 'A']++;
    for(int i = 1; i <= n; i++)
        c2[s2[i] - 'A']++;
    for(int i = 1; i <= n; i++)
        for(int j = 0; j < 26; j++)
            sum[i][j] = sum[i - 1][j] + (s1[i] == j + 'A');
    int ret = 0;
    for(int i = 0; i < 26; i++)
        if(c1[i] > c2[i]) ret += c1[i] - c2[i];
    for(int i = 1; i <= n; i++){
        for(int j = 0; j < 26; j++){
            if(!check(i, s1[i] - 'A', j)) continue;
            c1[s1[i] - 'A']--;
            c1[j]++;
            s1[i] = j + 'A';
            break;
        }
    }
    cout << ret << endl;
    cout << s1 + 1 << endl;
    return 0;
}