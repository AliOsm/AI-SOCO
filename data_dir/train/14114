#include <bits/stdc++.h>

using namespace std;
const int N = 2e5 + 3;
int a[N], n;
int st[4 * N];
void build(int l = 0, int r = n - 1, int i = 1, int level = 0) {
	if (l == r) {
		st[i] = a[l];
		return;
	}
	int mid = (l + r) >> 1, li = i << 1, ri = li + 1;
	build(l, mid, li, level + 1);
	build(mid + 1, r, ri, level + 1);
	if (st[li] && st[ri])
		st[i] = min(st[li], st[ri]);
	else if (st[li])
		st[i] = st[li];
	else
		st[i] = st[ri];
}

int query(int x, int y, int l = 0, int r = n - 1, int i = 1) {
	int li = i << 1, ri = li + 1;
	if (r < x || l > y)
		return 1e9;
	if (x <= l && r <= y)
		return st[i];
	int mid = (l + r) >> 1;
	int ql = query(x, y, l, mid, li);
	int qr = query(x, y, mid + 1, r, ri);
	int ret;
	if (ql && qr)
		ret = min(ql, qr);
	else if (ql)
		ret = ql;
	else
		ret = qr;
	return ret;
}
int first[N], last[N];
int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif
	int q;
	scanf("%d %d", &n, &q);
	memset(first, -1, sizeof first);
	memset(last, -1, sizeof first);
	for (int i = 0; i < n; ++i) {
		scanf("%d", a + i);
		if (first[a[i]] == -1)
			first[a[i]] = i;
		last[a[i]] = i;
	}
	if (first[q] == -1) {
		if (first[0] == -1) {
			puts("NO");
			return 0;
		}
		a[first[0]] = q;
	}
	build();
	for (int i = 1; i <= q; ++i) {
		if (first[i] == -1)
			continue;
		int m = query(first[i], last[i]);
		if (m < i) {
			puts("NO");
			return 0;
		}
	}
	int prev = 0;
	for (int i = 0; i < n; ++i) {
		if (a[i])
			prev = a[i];
		else
			a[i] = prev;
	}
	prev = 0;
	for (int i = n - 1; ~i; --i) {
		if (a[i])
			prev = a[i];
		else
			a[i] = prev;
	}
	puts("YES");
	for (int i = 0; i < n; ++i) {
		printf("%d%c", a[i], " \n"[i == n - 1]);
	}
	return 0;
}
