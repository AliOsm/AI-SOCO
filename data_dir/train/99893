#include <bits/stdc++.h>
#include <ext/hash_map>
using namespace std;
using namespace __gnu_cxx;

#define EPS      1e-12
#define F        first
#define S        second
#define pi       acos(-1)
#define ll       long long
#define oo       0x3f3f3f3f
#define sz(x)    (int)x.size()
#define sc(x)    scanf("%d",&x)
#define all(x)   x.begin(),x.end()
#define rall(x)  x.rbegin(),x.rend()

int n;
ll arr[100100];

int trie[4000100][2],lstNode;
ll isEnd[4000100];
int idxs[4000100];

void init(){
  memset(trie,-1,sizeof trie);
  memset(isEnd,0,sizeof isEnd);
  memset(idxs,-1,sizeof idxs);
}

string conv(ll x){
  string tmp="";
  for(int i=0;i<40;i++){
    if(x%2)tmp+='1';
    else tmp+='0';
    x/=2;
  }
  reverse(all(tmp));
  return tmp;
}

void insert(string s,int id,ll v){
  int cur=0;
  for(int i=0;i<sz(s);i++){
    int nxt=trie[cur][s[i]-'0'];
    if(nxt==-1)
      trie[cur][s[i]-'0']=nxt=++lstNode;
    if(idxs[cur]==-1)
      idxs[cur]=id;
    cur=nxt;
  }
  if(idxs[cur]==-1)
    idxs[cur]=id;
  isEnd[cur]=v;
}

ll findBest(string s,int id,ll x){
  ll res=x;
  int cur=0;
  for(int i=0;i<sz(s);i++){
    int nxt=trie[cur][s[i]-'0'];
    if(nxt!=-1&&idxs[cur]>=id){
      cur=nxt;
    }else{
      nxt=trie[cur][1-(s[i]-'0')];
      if(nxt!=-1&&idxs[cur]>=id)cur=nxt;
      else return x;
    }
  }
  res=max(res,x^isEnd[cur]);
  return res;
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  //freopen("output.txt", "w", stdout);
#endif
  scanf("%d",&n);
  for(int i=1;i<=n;i++)
    scanf("%lld",&arr[i]);
  init();
  ll cur=0;
  insert(conv(cur),n+1,0);
  ll ans=0;
  for(int i=n;i>0;i--){
    cur^=arr[i];
    ans=max(ans,cur);
    insert(conv(cur),i,cur);
  }
  cur=0;
  for(int i=1;i<=n;i++){
    cur^=arr[i];
    ans=max(ans,cur);
    ll rev=((1LL<<40)-1)^cur;
    ans=max(ans,findBest(conv(rev),i+1,cur));
  }
  cout<<ans;
}
