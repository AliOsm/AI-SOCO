#pragma GCC optimize("O3")
#include <bits/stdc++.h>

using namespace std;
using namespace __gnu_cxx;


#define f first
#define s second
#define sz(x) (int)(x).size()
#define em empty()
#define pb push_back
#define eb emplace_back
#define pf push_front
#define mem(a,b,s) for(int i=0 ; i<=s ; ++i) a[i]=b;
#define mem2(a,r,c,b) for(int i=0 ; i<=r ; ++i)    for(int j=0 ; j<=c ; ++j)    a[i][j]=b;
#define all(a) a.begin(),a.end()
#define rall(a)	a.rbegin(),a.rend()
#define mp make_pair
#define in insert
#define sc(x) scanf("%d",&(x))
#define scl(a)	scanf("%lld",&a)
#define sc2(a,b)	scanf("%d%d",&a,&b)
#define rep(x,a,b)	for(auto x=a ; x<=b ; ++x)
#define irep(x,a,b)	for(auto x=a ; x>=b ; --x)
#define X real()
#define Y imag()
#define vec(a,b) ((b)-(a))
#define polar(r,t) ((r)*exp(point(0,(t))))
#define angle(v) (atan2((v).Y,(v).X))
#define length(v) ((long double)hypot((v).Y,(v).X))
#define lengthSqr(v) (dot(v,v))
#define dot(a,b) ((conj(a)*(b)).real())
#define cross(a,b) ((conj(a)*(b)).imag())
#define rotate(v,t) (polar(v,t))
#define rotateabout(v,t,a)  (rotate(vec(a,v),t)+(a))
#define reflect(p,m) ((conj((p)/(m)))*(m))
#define normalize(p) ((p)/length(p))
#define same(a,b) (lengthSqr(vec(a,b))<EPS)
#define mid(a,b) (((a)+(b))/point(2,0))
#define perp(a) (point(-(a).Y,(a).X))
#define colliner pointOnLine
#define debug(x)	cerr << #x << " is " << x << endl;

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vii;
typedef set<int> si;
typedef set<pair<int,int> > sii;
typedef map<int,int>	mii;
typedef pair<int,char>	ic;
typedef pair<int,string> is;
typedef long double ld;
typedef priority_queue<ii> pqii;
typedef priority_queue<int>pqi;
typedef complex<long double> point;
typedef string BIGINT;

const long double pi=acos(-1);
const long double EPS = 1e-9;
const int MAXN=1e5+10;
const ll MOD=1e9+7;
const int oo=2e9+10;
const ll OO=1e18;

int dx[]={0,1,0,-1,-1,-1,1,1};
int dy[]={1,0,-1,0,-1,1,-1,1};

int n,x,y,cn[2020],ce[2020];
int par[2020],siz[2020];
bool po[2020];
ll ans;
ii p[2020];
deque<pair<ll,ii>>v;
pair<ll,ii>cur;
vii ed;
vi no;



ll dist(const int& a, const int& b)
{	return abs(p[a].f-p[b].f)+abs(p[a].s-p[b].s);	}

int GSI(int u)
{	return u==par[u]?u:par[u]=GSI(par[u]);	}

bool US(int u, int v)
{
	if(v==-1)
	{
		int t=GSI(u);
		if(po[t])	return 0;
		po[t]=1;
		return 1;
	}
	u=GSI(u),v=GSI(v);
	if(u==v || (po[u]&&po[v]))	return 0;
	if(siz[v]>siz[u])	swap(u,v);
	siz[u]+=siz[v],par[v]=u,po[u]|=po[v];
	return 1;
}

int main()
{
//	srand(time(0));
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
 	freopen("In.txt","r",stdin);
//	freopen("Out.txt","w",stdout);
#else
//	freopen("stations.in","r",stdin);
//	freopen("output.txt","w",stdout);
#endif

 	scanf("%d",&n);
 	rep(i,1,n)	scanf("%d%d",&p[i].f,&p[i].s),par[i]=i,siz[i]=1;
 	rep(i,1,n)	scanf("%d",cn+i),v.pb({cn[i],{i,-1}});
 	rep(i,1,n)	scanf("%d",ce+i);
 	rep(i,1,n)	rep(j,i+1,n)
 			v.pb({(1ll*ce[i]+ce[j])*1ll*dist(i,j),{i,j}});
 	sort(all(v));
 	while(sz(v))
 	{
 		cur=v.front(),v.pop_front();
 		if(!US(cur.s.f,cur.s.s))	continue;
 		ans+=cur.f;
 		if(~cur.s.s)	ed.pb(cur.s);
 		else no.pb(cur.s.f);
 	}
 	printf("%lld\n%d\n",ans,sz(no));
 	for(auto& e:no)	printf("%d ",e);
 	printf("\n%d\n",sz(ed));
 	for(auto& e:ed)	printf("%d %d\n",e.f,e.s);
}
