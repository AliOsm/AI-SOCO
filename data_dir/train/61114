#include <iostream>
#include <vector>
#include <queue>
using namespace std;

vector <int> adia[100010];
bool viz[100010];
queue <int> q;
int dist[100010];
int tata[100010];

bool dfs(int nod, int tt);

int main()
{
    int n, a, b;
    cin >> n;

    for (int i(1); i <= n; i++) {
        cin >> a >> b;
        adia[a].push_back(b);
        adia[b].push_back(a);
    }

    dfs(1, 0);

    while (!q.empty()) {
        int x = q.front();
        q.pop();
        for (auto i : adia[x]) {
            if (!dist[i]) {
                dist[i] = 1 + dist[x];
                q.push(i);
            }
        }
    }

    for (int i(1); i <= n; i++)
        cout << dist[i] - 1 << ' ';
    return 0;
}

bool dfs(int nod, int tt)
{
    tata[nod] = tt;
    viz[nod] = 1;
    for (auto i : adia[nod]) {
        if (i == tt)
            continue;
        if (viz[i]) {
            while (nod != tata[i]) {
                viz[nod] = 1;
                dist[nod] = 1;
                q.push(nod);
                nod = tata[nod];
            }
            return true;
        }
        if (dfs(i, nod))
            return true;
    }
    return false;
}
