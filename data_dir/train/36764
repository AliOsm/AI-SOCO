#include <bits/stdc++.h>

#define x0 abc
#define y0 ABC
#define x1 abcd
#define y1 ABCD
#define xn abcde
#define yn ABCDE

#define l_b lower_bound
#define u_b upper_bound

#define fi first
#define se second
#define m_p make_pair

#define p_b push_back
#define po_b pop_back

#define ld long double
#define ll long long

#define cont continue
#define re return

#define MAXLL 9000000000000000000LL
#define MAXINT 2000000000

#define MINLL -9000000000000000000LL
#define MININT -2000000000

#define P acos(-1)

#define endl '\n'

#define OUT cout << "-------" << endl;

using namespace std;

int one, two, que[1201][3], mx[1201][1201], n, m, i, nom, step, queB, queE, zn1, zn2;

bool pole[1201], finish;

    void add(int nom, int f, int step)
    {
        if ((pole[nom]) || (finish))
        re;

        que[queE][1] = nom;

        que[queE][2] = step;

        queE++;

        finish = (nom == f);

        pole[nom] = true;
    }

    int bfs(int s, int f, int zn)
    {
        for (i = 1; i <= n; i++) pole[i] = false;

        queB = 0;

        queE = 1;

        finish = false;

        add(s, f, 0);

        while (!finish) {
            queB++;

            if (queB == queE)
            re -1;

            nom = que[queB][1];

            step = que[queB][2];

            for (i = 1; i <= n; i++)
                if (mx[nom][i] == zn) add(i, f, step + 1);
        }

        re que[queE - 1][2];
    }

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n >> m;

    for (i = 1; i <= m; i++) {
        cin >> one >> two;

        mx[one][two] = mx[two][one] = 1;
    }

    zn1 = bfs(1, n, 0);

    zn2 = bfs(1, n, 1);

    if ((zn1 == -1) || (zn2 == -1)) {
        cout << "-1" << endl;

        re 0;
    }

    cout << max(zn1, zn2) << endl;

    re 0;
}
