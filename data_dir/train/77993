#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, pll> p3l;
typedef pair<char, ll> pcl;
typedef vector<char> vc;
typedef vector<ll> vll;
typedef vector<pll> vpll;
typedef vector<p3l> vp3l;
typedef vector<vll> vvll;
typedef vector<ld> vld;

const int MOD = (int) 1e9;

#define fan(i, a, n) for(auto i=a; i<n; ++i)
#define boost ios_base::sync_with_stdio(0);cout.tie(0);cin.tie(0)
#define fna(i, n, a) for(int i=n-1; i>=a; --i)
#define fit(it, x) for(auto &it:x)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define pb push_back
#define rs resize
//#define endl "\n"
#define fst first
#define snd second
#define sz size
#define ins insert
#define mp make_pair
#define ce cout << "\n"

ld sqr(ld a) {
  return a * a;
}
//#define dbg(x)
//
//vector<vector<int>> dfsv;
//vector<char> used;
//void dfs(int n){
//    used[n]=true;
//    fit(it,dfsv[n]){
//        if(!used[*it])dfs(*it);
//    }
//}
//ll phi(ll x){
//    ll result = x;
//    for(ll i=2;i*i<=x;i++){
//        if(x%i==0){
//            while(x%i==0){
//                x/=i;
//            }
//            result -= result/i;
//        }
//    }
//    if (x > 1)
//        result -= result / x;
//    return result;
//}
ll gcd(ll a, ll b) {
  if (b == 0)
    return a;
  else
    return gcd(b, a % b);
}
//ll m = MOD;
//ll mulmod(ll a, ll b) {
//  a %= m;
//  if (b == 0)return 1;
//  if (b % 2 == 0) {
//    return mulmod((a * a) % m, b / 2) % m;
//  } else {
//    return (mulmod((a * a) % m, b / 2) % m * a) % m;
//  }
//}
//int dp[5001][10001];
ll a[11][100001], mep[11][100001];
bool used[100001];
ll ans = 0, n, m;
void check(ll v) {
  ll curr[11];
  fan(i, 0, m) {
    curr[i] = mep[i][v] + 1;
  }
  used[v] = true;
  ll c = 1;
  while (true) {
    ll next;
    if (curr[0] != n)next = a[0][curr[0]]; else break;
    bool good = true;
    fan(i, 1, m) {
      if (curr[i] != n) {
        if (next != a[i][curr[i]]) {
          good = false;
          break;
        }
      } else {
        good = false;
        break;
      }
    }
    if (good)c++; else break;
    fan(i, 0, m)curr[i]++;
    used[next] = true;
  }
  ans += (c * (c + 1)) / 2;
}

int main() {
  boost;
  cin >> n >> m;
  fan(i, 0, n)used[i] = false;
  fan(i, 0, m) {
    fan(j, 0, n) {
      cin >> a[i][j];
      a[i][j]--;
      mep[i][a[i][j]] = j;
    }
  }
  fan(i, 0, n) {
    ll curr = a[0][i];
    if (!used[curr])check(curr);
  }
  cout << ans;

  return 0;
}