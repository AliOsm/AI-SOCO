/*"Everything in the universe is balanced. Every disappointment
   you face in life will be balanced by something good for you!
                Keep going, never give up."            */
#include "bits/stdc++.h"
using namespace std;

#define ll long long int
#define ld double 
#define rep(i,a,b) for(int i=a;i<=b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define deb cerr << "Line no." << __LINE__
#define nl '\n'
#define pb push_back
#define all(a) a.begin(),a.end()
#define P pair<ll,ll> 
#define F first
#define S second
const ll p_mod=9999999999999983;
const long double pi = 3.14159265358979323;
const ll N=4e6+9;
const ll mod=1e9+7;
typedef double f80;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
int rand(int l, int r){uniform_int_distribution<int> uid(l, r); return uid(rng); }
ll powerk(ll x, ll y);

ll a[N],countt[N],dp[25][25],vis[N],ans[N];

ll go(ll bit)
{
  if(vis[bit])return ans[bit];
  vis[bit]=1;
  if(__builtin_popcount(bit)==1)return ans[bit]=0;

  ll minm=1e18;
  rep(i,1,20)
  {
    if(bit&(1<<i))
    {
      ll total = 0;
      rep(j,1,20)
      {
        if(bit&(1<<j))
        {
          total += dp[i][j] ;
        }
      }
      minm = min(minm,total+go(bit^(1<<i)));
    }
  }
  return ans[bit]=minm;

}

void solve()
{    
  ll n,m,bit=0;
  cin>>n;
  rep(i,1,n)
  {
    cin>>a[i];
    countt[a[i]]++;
    bit|=(1<<a[i]);
  }

  rep(i,1,20)
  {
    if(countt[i])
    {
      ll x=0;
      rep(j,1,n)
      {
        if(a[j]==i)x++;
        else dp[a[j]][i] += x;
      }
      //rep(j,1,5)cout<<dp[j][i]<<" ";cout<<nl;
    }
  }
  cout<<go(bit);

}


int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    ll t=1;
    //pre();
    //cin>>t;
    while(t--)
    {
      solve();
    }  
}
ll powerk(ll x, ll y)
{
  if(y==0)return 1;
  if(y==1)return x%mod;
  if(y&1)
    return ((powerk((x*x)%mod, y/2)%mod)*x)%mod;
  else return powerk((x*x)%mod,y/2)%mod;
}

// Xorawar