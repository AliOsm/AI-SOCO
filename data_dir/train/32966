#include<bits/stdc++.h>
#define F first
#define S second
using namespace std;

typedef long long ll;
typedef vector<ll> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<vii> vvii;
typedef vector<vvvi> vvvvi;

ll frec[1000002];


int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    int n, t;
    cin >> n >> t;
    vi V(n), L(t), R(t), ans(t), order(t);
    for (int i = 0; i < n; ++i) cin >> V[i];
    for (int i = 0; i < t; ++i) {
        cin >> L[i] >> R[i];
        L[i]--, R[i]--;
        order[i] = i;
    }
    sort(order.begin(), order.end(), [&](int a, int b) {
        int la = L[a]/sqrt(t), lb = L[b]/sqrt(t);
        if (la < lb) return true;
        else if (la > lb) return false;
        return R[a] < R[b];
    });

    frec[V[0]] = 1;
    ll cur = V[0];
    int l = 0, r = 0;
    for (int i = 0; i < t; ++i) {
        int ind = order[i];
        while (l < L[ind]) {
            ll f = frec[V[l]];
            cur -= (2*f-1)*V[l];
            frec[V[l]]--;
            l++;
        }
        while (l > L[ind]) {
            l--;
            ll f = frec[V[l]];
            cur += (2*f+1)*V[l];
            frec[V[l]]++;
        }
        while (r < R[ind]) {
            r++;
            ll f = frec[V[r]];
            cur += (2*f+1)*V[r];
            frec[V[r]]++;
        }
        while (r > R[ind]) {
            ll f = frec[V[r]];
            cur -= (2*f-1)*V[r];
            frec[V[r]]--;
            r--;
        }
        ans[ind] = cur;
    }
    for (int i = 0; i < t; ++i) cout << ans[i] << "\n";
    return 0;
}