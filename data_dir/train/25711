#include <bits/stdc++.h>
using namespace std;

#define mp make_pair
#define pb push_back

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 200100;

int n;
int a[MAXN];
int b[MAXN];
int st1[18][MAXN];
int st2[18][MAXN];
int Log[MAXN];

inline int g(int l, int r) {
  int L = Log[r - l + 1];
  return max(st1[L][l], st1[L][r - (1 << L) + 1]);
}

inline int f(int l, int r) {
  int L = Log[r - l + 1];
  return min(st2[L][l], st2[L][r - (1 << L) + 1]);
}

int main() {
#ifdef LOCAL
  freopen("input.txt", "r", stdin);
#endif
  //ios_base::sync_with_stdio(false);
  //cin.tie(0);
  scanf("%d", &n);
  for (int i = 0; i < n; ++i) {
    scanf("%d", a + i);
  }
  for (int i = 0; i < n; ++i) {
    scanf("%d", b + i);
  }
  for (int i = 0; i < n; ++i) {
    st1[0][i] = a[i];
    st2[0][i] = b[i];
  }
  Log[1] = 0;  
  for (int i = 2; i < MAXN; ++i)
    Log[i] = Log[i >> 1] + 1;
  for (int i = 1; i < 18; ++i) {
    for (int j = 0; j + (1 << i) <= n; ++j) {
      st1[i][j] = max(st1[i - 1][j], st1[i - 1][j + (1 << (i - 1))]);
      st2[i][j] = min(st2[i - 1][j], st2[i - 1][j + (1 << (i - 1))]);
    }
  }
  ll res = 0;
  for (int i = 0; i < n; ++i) {
    int l = i - 1;
    int r = n;
    while (r - l > 1) {
      int mid = (l + r) >> 1;
      if (g(i, mid) < f(i, mid)) l = mid;
      else r = mid;
    }
    if (i <= l + 1 && g(i, l + 1) == f(i, l + 1)) {
      int start = l + 1;
      l = i - 1;
      r = n;
      while (r - l > 1) {
        int mid = (l + r) >> 1;
        if (g(i, mid) > f(i, mid)) r = mid;
        else l = mid;
      }
      res += r - start;
    }
  }
  cout << res << endl;
  return 0;
}