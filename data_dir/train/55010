#include<bits/stdc++.h>
#define N 35005
#define K 55
using namespace std;

int n,k,dp[K][N],st[N*4],lazy[N*4],a[N];

void up(int node,int bas,int son,int x,int y,int val) {

  if(bas>y || son<x) return ;
  if(bas>=x && son<=y) {
    lazy[node]+=val;
    return ;
  }
  int orta=(bas+son)/2;
  up(node*2,bas,orta,x,y,val);
  up(node*2+1,orta+1,son,x,y,val);
  st[node]=max(st[node*2]+lazy[node*2],st[node*2+1]+lazy[node*2+1]);

}

int get(int node,int bas,int son,int x,int y) {

  if(x>y) return 0;
  if(bas>y || son<x) return 0;
  if(bas>=x && son<=y) return st[node]+lazy[node];
  int orta=(bas+son)/2;
  return max(get(node*2,bas,orta,x,y),get(node*2+1,orta+1,son,x,y))+lazy[node];

}

void build(int node,int bas,int son,int kk) {

  lazy[node]=0;
  if(bas==son) {
    st[node]=dp[kk][bas-1];
    return ;
  }
  int orta=(bas+son)/2;
  build(node*2,bas,orta,kk);
  build(node*2+1,orta+1,son,kk);
  st[node]=max(st[node*2],st[node*2+1]);

}

int main() {

  scanf("%d %d",&n,&k);
  for(int i=1;i<=n;i++) {
    scanf("%d",&a[i]);
  }
  for(int kk=1;kk<=k;kk++) {
    int prev[N]={0};
    for(int i=1;i<=n;i++) {
      up(1,1,n,prev[a[i]]+1,i,1);
      dp[kk][i]=get(1,1,n,1,i);
      prev[a[i]]=i;
    }
    build(1,1,n,kk);
  }
  printf("%d",dp[k][n]);

}
