#include<cstdio>
#include<cstring>
#include<set>
#include<string>
#include<iostream>
#include<cmath>
#include<vector>
#include<map>
#include<stack>
#include<time.h>
#include<queue>
#include<cstdlib>
#include<algorithm>
using namespace std;
#define lowbit(x) ((x)&(-(x)))
#define sqr(x) ((x)*(x))
#define PB push_back
#define MP make_pair
typedef long long lld;
typedef vector<int> VI;
typedef vector<string> VS;
typedef pair<int,int> PII;
const int maxn  =  200010;
#define lson l,m,rt<<1
#define rson m+1,r,rt<<1|1
const int inf = 1000000000;
vector<lld> num;
void dfs(int dep,lld n)
{
    if(n && n < 1000000000) num.push_back(n);
    if(dep == 10)
    {
        return ;
    }
    dfs(dep+1,n*10+4);
    dfs(dep+1,n*10+7);
}
lld gao(lld a,lld b,lld x,lld y)
{
    if(x > b || y < a) return 0;
    if(x <= a)
    {
        if(y >= b)  return b-a+1;
        else return y-a+1;
    }
    else 
    {
        if(y >= b) return b-x+1;
        else return y-x+1;
    }
}
lld solve(lld a,lld b,lld c,lld d,int k)
{
    int sz=num.size();
    //printf("sz=%d\n",sz);
    lld al,ar,bl,br;
    lld ans=0;
    for(int i=0;i+k-1<sz;i++)
    {
    //  printf("i=%d\n",i);
        if(num[i+k-1] > max(b,d)) break;
        if(i==0) al=1;
        else al=num[i-1]+1;
        ar=num[i];
        bl=num[i+k-1];
        br=inf;
        if(i+k < sz)    br = num[i+k] - 1;
        //printf("%I64d %I64d %I64d %I64d\n",al,ar,bl,br);
        if(a==b && c==d) {
             lld tmp=ans;
             ans+=gao(a,b,al,ar) * gao(c,d,bl,br);
             if(ans==tmp)ans+=gao(a,b,bl,br) * gao(c,d,al,ar);
        }
        else  {
        ans+=gao(a,b,al,ar) * gao(c,d,bl,br);
        ans+=gao(a,b,bl,br) * gao(c,d,al,ar);
        if(k==1 && a<=num[i+k-1] && num[i+k-1] <= b && c <= num[i+k-1] && num[i+k-1] <= d)
            ans--;
        }
        //printf("ans=%I64d\n",ans);
    }
    return ans;
}
int main()
{
    lld a,b,c,d,k;
    dfs(0,0);//2034
    sort(num.begin(),num.end());
    //for(int i=0;i<num.size();i++) printf("%I64d ",num[i]);puts("");
    scanf("%I64d%I64d%I64d%I64d%I64d",&a,&b,&c,&d,&k);
    lld tot=(b-a+1) * (d-c+1);
    lld ans=solve(a,b,c,d,k);
    printf("%.20lf\n",ans*1.0/tot);
}