#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <cmath>
#include <bitset>
#include <string>
using namespace std;

#define rep(i, n) f(i, 0, n - 1)
#define f(i, a, b) fd(i, a, b, 1)
#define fd(i, a, b, d) for(int i = (a); i <= (int)(b); i += (d))
#define uint64 unsigned int64
#define int64 long long

#ifndef ONLINE_JUDGE
#include <time.h>
clock_t _time;
void startProfile()
{
  _time = clock();
  printf("Begin profiling..\n...\n");
}
void stopProfile()
{
  printf("\n...\nEnd profiling. Time: %f sec.\n", (double)(clock() - _time) / CLOCKS_PER_SEC);
}
#endif

double dist(double x, double y, double z)
{
  return sqrt(x * x + y * y + z * z);
}

int main()
{
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  startProfile();
#endif

  int n;
  cin >> n;

  vector<int> x(n), y(n), z(n);
  rep(i, n)
    cin >> x[i] >> y[i] >> z[i];

  vector<double> a(n);
  rep(i, n)
    a[i] = dist(x[i] - x[0], y[i] - y[0], z[i] - z[0]);

  double result = DBL_MAX;
  f(i, 1, n - 2)
  {
    f(j, i + 1, n - 1)
    {
      double c = dist(x[i] - x[j], y[i] - y[j], z[i] - z[j]);
      double t = min(a[i], a[j]) + (abs(a[i] - a[j]) + c) / 2.0;
      result = min(result, t);
    }
  }

  cout.precision(6);
  cout << fixed << result;

#ifndef ONLINE_JUDGE
  stopProfile();
#endif
  return 0;
}