#include "bits/stdc++.h"
#define FI first.first
#define SE first.second
#define TH second
#define fi first
#define se second
#define th second

using namespace std;

class DebugStream {}LOG;
template <typename T>DebugStream &operator<<(DebugStream &s, const T&) { return s; }
#ifdef DEBUG
#define LOG clog
#endif

typedef long long ll;
typedef pair<ll, ll> ii;
typedef long double ld;
mt19937 rnd(time(NULL));

const int maxN = 4e2 + 9, maxV = 1e6 + 9, MOD = 1e9 + 7, SQ = 335, lg = 20, bs = 29;

int dp[maxN][212][212], n, m, u, aux[maxN][212][212];
char chr[maxN][212][212];
string one, two;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	#ifdef DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif

	cin >> one >> two;
	n = one.size(), m = two.size();

	memset(dp, -1, sizeof dp);
	dp[0][0][0] = 0;
	for(u = 0; dp[u][0][n] < m; u++) {
		for(int i = 0, uno, dos; i <= 210; i++) {
			for(int j = 0; j <= n; j++) {
				if(dp[u][i][j] == -1) continue;

				// Apertura
				uno = j, dos = dp[u][i][j];
				if(uno < n && one[uno] == '(') uno++;
				if(dos < m && two[dos] == '(') dos++;
				if(dp[u + 1][i + 1][uno] < dos)
					dp[u + 1][i + 1][uno] = dos, chr[u + 1][i + 1][uno] = '(', 
					aux[u + 1][i + 1][uno] = j;

				if(i == 0) continue;
				// Cerradura
				uno = j, dos = dp[u][i][j];
				if(uno < n && one[uno] == ')') uno++;
				if(dos < m && two[dos] == ')') dos++;
				if(dp[u + 1][i - 1][uno] < dos)
					dp[u + 1][i - 1][uno] = dos, chr[u + 1][i - 1][uno] = ')',
					aux[u + 1][i - 1][uno] = j;
			
			}
		}
	}

	string str = "";
	for(int i = u, a = 0, b = n; i >= 1; i--) {
		auto c = chr[i][a][b];
		str += c;
		b = aux[i][a][b];
		if(c == ')') a++;
		else a--;
	}
	reverse(str.begin(), str.end());
	cout << str << '\n';
}
