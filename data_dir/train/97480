#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp> // Common file
//#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std;
//using namespace __gnu_pbds;
//typedef tree<
//        pair<long long, int>, // change type
//        null_type,
//        less<pair<long long, int> >, // change type
//        rb_tree_tag,
//        tree_order_statistics_node_update>
//        ordered_set;

typedef long long ll;
#define rep(i, start, end) for(int i = start; i < end; ++i)
#define sz(x) (int)(x).size()
#define pb push_back
#define row first
#define col second
#define all(x) x.begin(), x.end()
#define clr(d, v) memset(d, v, sizeof(d))
#define pii pair<int, int>
const double PI = 3.14159265358979323846;
const double eps = (1e-4);
int dcmp(long double x, long double y)
{
    if (abs(x - y) < eps)
        return 0;
    if (x > y)
        return 1;
    return -1;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
//    freopen("facebook.txt", "w", stdout);
#endif
    int n;
    cin >> n;
    vector<pair<int, int> > v(n);
    vector<pair<int, int> > ans;
    rep(i,0,n)
    {
        cin >> v[i].first;
        v[i].second = 2 * (i + 1) - 1;
    }
    sort(all(v));
    reverse(all(v));
    for (int i = 0; i < n; ++i)
    {
        int p = v[i].second;
        if (i < n - 1)
            ans.push_back({p, v[i + 1].second});
        int need = v[i].first;
        int to = i + need - 1;
        ans.push_back({v[to].second, p + 1});
        if (to == sz(v) - 1)
            v.push_back({-1, p + 1});
    }
    for (int i = 0 ; i < sz(ans); ++i)
        cout << ans[i].first << ' ' << ans[i].second << '\n';
    return 0;
}