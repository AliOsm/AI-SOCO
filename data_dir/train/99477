#include"bits/stdc++.h"

using namespace std;

#define MAX 300002

int n;

vector<int> v;

vector<int> g[MAX];
long long int tmp;
bool vis[MAX];

long long int dp[MAX];


inline void dfs(int b) {
	tmp++;
	vis[b] = true;
	for (int go : g[b]) {
		if(vis[go]==false)dfs(go);
		else continue;
		dp[b] += max(0LL, dp[go]);
	}
	dp[b] += v[b];
	return;
}
long long int er;
long long int ss;
inline void dfs2(int b) {
	tmp++;
	vis[b] = true;
	dp[b] = 0;
	for (int go : g[b]) {
		if (vis[go] == false)dfs2(go);
		else continue;
		dp[b] += max(0LL, dp[go]);
	}
	dp[b] += v[b];
	if (dp[b] == er) {
		ss++;
		dp[b] = INT_MIN;
	}
	return;
}
int main() {
	cin >> n;
	long long int mxt = INT_MIN;
	for (int i = 0; i < n; i++) {
		long long int a;
		scanf("%lld", &a);
		v.push_back(a);
		mxt = max(mxt, a);
	}
	for (int i = 1; i < n; i++) {
		int a, b;
		scanf("%d%d", &a, &b);
		a--;
		b--;
		if (true) {
			g[a].push_back(b);
			g[b].push_back(a);
		}
	}
	dfs(0);
	long long int ans = LLONG_MIN;
	ans = *max_element(dp, dp + n);
	er = ans;
	long long int sz = 0;
	memset(vis, false, sizeof(vis));
	dfs2(0);
	sz = ss;
	ans *= sz;
	printf("%lld %lld\n", ans, sz);
	return 0;
}