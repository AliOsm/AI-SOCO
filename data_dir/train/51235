#include<iostream>
#include<vector>
#include<algorithm>
#include<memory.h>
#include<queue>
using namespace std ;
#define ll long long 
#define all(x) x.begin() , x.end()
int const N = 505 , MOD = 1e9 + 7; 
int n , m , dp[N][N] , dp2[N][N];
char g[N][N];
int main(){
     // freopen("input.txt" ,"r",stdin);
       scanf("%d%d",&n,&m);
       for(int i=1;i<=n;++i)
       	 for(int j=1;j<=m;++j)
       	 	  cin >> g[i][j];
         for(int i=1;i<=n;++i){
             for(int j=1;j<=m;++j){
                 dp[i][j] += dp[i-1][j] + dp[i][j-1] - dp[i-1][j-1];
                 if(g[i][j-1]=='.' && g[i][j]=='.'){++dp[i][j];}
              //   cout << dp[i][j] << " ";
             }
             //cout << "\n";
         }
         for(int i=1;i<=m;++i){
              for(int j=1;j<=n;++j){
                  dp2[j][i] += dp2[j-1][i] + dp2[j][i-1] - dp2[j-1][i-1];
                    if(g[j-1][i]=='.' && g[j][i]=='.')++dp2[j][i];
                  //  cout<<dp[i][j]<<" ";
              }
         //     cout << "\n";
         }
         int q ;
         scanf("%d",&q);
         for(int i=0;i<q;++i){
             int r1 , c1 , r2 , c2 ;
             scanf("%d%d%d%d",&r1,&c1,&r2,&c2);
             int an = dp[r2][c2] + dp[r1-1][c1] - dp[r2][c1] - dp[r1-1][c2];
             an += dp2[r2][c2] + dp2[r1][c1-1] - dp2[r2][c1-1] - dp2[r1][c2]; 
             printf("%d\n",an);
         }
}