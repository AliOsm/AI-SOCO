//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int i = 0; i < (n); i++) ni(a[i])
#define nal(a, n) for (int i = 0; i < (n); i++) nl(a[i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vii vector<pii>
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef cc_hash_table<int,int,hash<int>> ht;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
const int MAXN = 1e6 + 5;
const double eps = 1e-9;
ll a[MAXN];
char str[MAXN];

int main()
{
    int n, k;
    ni(n), ni(k);
    for (int i = 0; i < n; i++) {
        nl(a[i]);
    }scanf("%s", str);
    ll ans = 0;
    for (int i = 0; i < n; i++) {
        int j = i;
        vector<ll> tmp;
        for (; j < n && str[j] == str[i]; j++) {
            tmp.emplace_back(a[j]);
        }
        sort(tmp.rbegin(), tmp.rend());
        for (int l = 0; l < min((int)tmp.size(), k); l++)
            ans += tmp[l];
        i=j-1;
    }
    prl(ans);
    return 0;
}
