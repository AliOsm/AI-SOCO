/*input
3
37 49 24
3
33 5 70

*/
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>
using namespace std;
#define sp ' '
#define endl '\n'
#define fi first
#define se second
#define mp make_pair
#define int long long
#define N 505
// const int INF = 1e18;
// const int mod = 1e9+7;
int n, m;
vector<int> a, b;
int dp[N];
int ans = 0;
int par[N];
vector<int> order;

void cal(int val) {
	pair<int, int> maxl = mp(0, 0);
	for (int i = 0; i < m; i++) {
		if (b[i] == val) {
			if (dp[i] < maxl.fi + 1) {
				dp[i] = maxl.fi + 1;
				par[i] = maxl.se;
			}
		}
		else if (b[i] < val) {
			maxl = max(maxl, mp(dp[i], i));
		}
		ans = max(ans, dp[i]);
	}
}

void trace(int i, int left) {
	if (left == 0) return;
	order.push_back(b[i]);
	i = par[i];
	trace(i, left - 1);
}

signed main() {
	ios_base::sync_with_stdio(false); cin.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++) {
		int t; cin >> t; a.push_back(t);
	}
	cin >> m;
	for (int i = 1; i <= m; i++) {
		int t; cin >> t; b.push_back(t);
	}
	for (int i = 0; i < n; i++) cal(a[i]);
	cout << ans << endl;
	for (int i = 0; i < m; i++) {
		if (dp[i] == ans) {
			trace(i, ans);
			break;
		}
	}
	if (ans)
		for (int i = order.size() - 1; i >= 0; i--) cout << order[i] << sp;
}