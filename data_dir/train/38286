#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,sse3,sse4,popcnt,abm,mmx")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define mt make_tuple
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md (l + ((r - l) / 2))
#define all(x) x.begin(),x.end()
#define ll long long
#define ld long double
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;
using namespace __gnu_pbds;

const int N = 2e5 + 11, mod = 1e9 + 7, mod2 = 998244353;
const int MAX = 3e5 + 11;
const int INF1 = 2e9 + 11;
const ll INF2 = 2e18 + 11;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0, 1, 1, -1, -1};
const int dy[] = {0, 0, 1, -1, 1, -1, 1, -1};
const double EPS = 1e-4;
const double PI = acos(-1.0);


template<typename T> using ordered_set = tree <T, null_type, less <T>, rb_tree_tag, tree_order_statistics_node_update>;
template<typename T1, typename T2> inline void chmin(T1 &a, T2 b) { if (a > b) a = b; }
template<typename T1, typename T2> inline void chmax(T1 &a, T2 b) { if (a < b) a = b; }


typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int n, q, a[N], l[N], r[N], t[N * 4];
set <int> st;
inline void build(int v, int l, int r) {
    if (l == r) {
        t[v] = a[l];
        return;
    }
    build(v + v, l, md);
    build(v + v + 1, md + 1, r);
    t[v] = min(t[v + v], t[v + v + 1]);
}
inline int get(int v, int l, int r, int left, int right) {
    if (left > r || right < l) return INF1;
    if (left <= l && r <= right) return t[v];
    return min(get(v + v, l, md, left, right), get(v + v + 1, md + 1, r, left, right));
}
main() {
    file("floor4");
//    ios;
    cin >> n >> q;
    fo(i, 1, n, 1) {
        cin >> a[i];
        st.ins(a[i]);
        r[a[i]] = i;
    }
    if (!r[q] && !r[0]) return !(cout << "NO");
    if (!r[q]) a[r[0]] = q, r[q] = r[0];
    if (*st.begin() == 0) st.erase(st.begin());
    fo(i, 1, n, 1) {
        if (a[i] > q) return !(cout << "NO");
        if (!a[i]) a[i] = (i == 1 ? 1 : a[i - 1]);
    }
    fo(i, 1, n, 1) {
        if (!l[a[i]]) l[a[i]] = i;
        r[a[i]] = i;

    }
    build(1, 1, n);
    for (auto & it : st) if (get(1, 1, n, l[it], r[it]) < it) return !(cout << "NO");
    cout << "YES\n";
    fo(i, 1, n, 1) cout << a[i] << " ";
    return 0;
}
/**

*/
