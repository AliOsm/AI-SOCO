#include <bits/stdc++.h>
using namespace std;
#define int long long
#define IOS ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0)
int in(){int32_t x ; scanf("%d",&x) ;  return x ;}
inline long long lin() {long long x ; scanf("%lld",&x) ; return x ;}
const int maxn = 1e6 + 10;
struct edge
{
    int to , id , flip;
};
vector<edge> g[maxn];
int odd = 0;
vector<pair<int,int> > res;
bool mark[maxn];
inline void dfs(int node)
{
    while (g[node].size())
    {
        edge cur = g[node].back();
        g[node].pop_back();
        if (mark[cur.id]) continue;
        mark[cur.id] = true;
        dfs(cur.to);
        res.push_back({cur.id,cur.flip});
    }
}
int32_t main()
{
    int n = in();
    int id = 0;
    for (int i = 0 ; i < n ; i ++)
    {
        int a = in()  , b = in() ;
        g[a].push_back({b,i,0});
        g[b].push_back({a,i,1});
        id = a;
    }
    
    
    for (int i = 0 ; i <= 6 ; i++){
        if (g[i].size() % 2) odd ++ , id = i;
    }
    if (odd > 2) return cout << "No solution\n" , 0;
    dfs(id);
    if (res.size() != n ) return cout << "No solution\n" , 0;
    reverse(res.begin(),res.end());
    for (auto x : res) cout << x.first + 1 << " " << (x.second == 0 ? "+" : "-") << "\n";
}
