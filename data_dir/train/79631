		//	   - -- --- ---- -----be name khoda----- ---- --- -- -		\\

#include <bits/stdc++.h>
using namespace std;

const int N = 200002, M = 5, B = 20;

int a[N][M], psum[N][M], rmq[M][N][B], res[M], n, m, k;

int getMax(int l, int r, int i)
{
	int best = 0, len = r - l;
	for(int b = 0; b < B; b++)
		if(len >> b & 1)
		{
			best = max(best, rmq[i][l][b]);
			l += (1 << b);
		}
	return best;
}

bool check(int l, int r)
{
	long long tot = 0;
	for(int i = 0; i < m; i++)
		tot += getMax(l, r, i);
	return tot <= k;
}

void prep()
{
	for(int d = 0; d < m; d++)
		for(int i = n - 1; i >= 0; i--)
		{
			rmq[d][i][0] = a[i][d];
			for(int b = 1; b < B; b++)
				if(i + (1 << (b - 1)) < N)
					rmq[d][i][b] = max(rmq[d][i][b - 1], rmq[d][i + (1 << (b - 1))][b - 1]);
				else
					rmq[d][i][b] = rmq[d][i][b - 1];
		}
}

int main()
{
	ios::sync_with_stdio(0); cin.tie(0);
	cin >> n >> m >> k;
	for(int i = 0; i < n; i++)
		for(int j = 0; j < m; j++)
			cin >> a[i][j];
	prep();
	int mx = -1, mxL = -1, mxR = -1, r = 0;
	for(int l = 0; l < n; l++)
	{
		r = max(r, l + 1);
		while(check(l, r) && r <= n)
			r++;
		r--;
		if(r - l > mx)
		{
			mx = r - l;
			for(int j = 0; j < m; j++)
				res[j] = getMax(l, r, j);
		}
	}
	for(int i = 0; i < m; i++)
		cout << res[i] << " ";
	cout << endl;
}
