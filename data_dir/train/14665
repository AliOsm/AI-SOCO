#include<bits/stdc++.h>
using namespace std;
const int MXN = 1e5 + 10;
int n, r, t, p, c, A[MXN * 10], T[MXN * 10];
string s, S[3] = {"insert", "getMin", "removeMin"};
priority_queue < int , vector < int > , greater < int > > P;
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> s;
        if (s == S[2])
        {
            if (P.size() == 0)
                t ++, P.push(-1e9);
            T[t ++] = 2;
            P.pop();
            continue;
        }
        cin >> r;
        if (s == S[0])
        {
            P.push(r);
            A[t] = r;
            t ++;
            continue;
        }
        while (P.size() > 0)
        {
            if (P.top() < r)
            {
                T[t ++] = 2;
                P.pop();
                continue;
            }
            break;
        }
        if (P.size() == 0)
        {
            A[t ++] = r;
            P.push(r);
        }
        if (P.top() != r)
        {
            A[t ++] = r;
            P.push(r);
        }
        A[t] = r;
        T[t ++] = 1;
    }
    cout << t << "\n";
    for (int i = 0; i < t; i++)
    {
        cout << S[T[i]];
        if (T[i] != 2)
            cout << " " << A[i];
        cout << "\n";
    }
    return (0);
}
