#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
using namespace std;
#define x first
#define y second
#define dbg(x) cout << #x << '=' << x << '\n';
#define ll long long
#define pi pair<int,int>
#define pl pair<ll,ll>
#define pd pair<double,double>
#define ld long double
#define pld pair<ld,ld>
#define lg length()
#define sz size()
#define pb push_back
#define MAXN 100005
#define INF 1000000005
#define LINF 1000000000000000005
#define x1 xdddddddddddddddddd
#define y1 ydddddddddddddddddd
#define int ll

int n,a,b,h[15],p[15],k[15],s[15],t=INF,curr;

void Gen(int nod){
    if(curr>t) return;
    if(nod==n){
        if(k[nod-1]<=h[nod-1] || k[nod]<=h[nod]) return;
        t=curr;
        for(int i=1;i<=n;i++){
            s[i]=p[i];
        }
    }
    else if(nod==2 || nod==n-1){
        for(int j=0;j<=16;j++){
            p[nod]=j;
            curr+=j;
            k[nod]+=a*j;
            k[nod-1]+=b*j;
            k[nod+1]+=b*j;
            if(k[nod-1]>h[nod-1]) Gen(nod+1);
            curr-=j;
            k[nod]-=a*j;
            k[nod-1]-=b*j;
            k[nod+1]-=b*j;
        }
    }
    else{
        for(int j=0;j<=8;j++){
            p[nod]=j;
            curr+=j;
            k[nod]+=a*j;
            k[nod-1]+=b*j;
            k[nod+1]+=b*j;
            if(k[nod-1]>h[nod-1]) Gen(nod+1);
            curr-=j;
            k[nod]-=a*j;
            k[nod-1]-=b*j;
            k[nod+1]-=b*j;
        }
    }
}

int32_t main(){
    ios_base :: sync_with_stdio(0); cin.tie(); cout.tie();
    cin >> n >> a >> b;
    for(int i=1;i<=n;i++){
        cin >> h[i];
    }
    Gen(2);
    cout << t << '\n';
    for(int i=1;i<=n;i++){
        for(int j=1;j<=s[i];j++) cout << i << ' ';
    }
}
