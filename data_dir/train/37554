#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <set>
#include <map>

using namespace std;
const int N = 1000000;
const long long md = 1e9 + 7;

long long bin_pow(long long a, long long b) {
    if(!b)
        return 1;
    if(b % 2) {
        return (a * bin_pow(a, b - 1LL)) % md;
    } else {
        long long temp = bin_pow(a, b / 2LL);
        return (temp * temp) % md;
    }
}

int main() {
    ios::sync_with_stdio(false);

    string a;
    cin >> a;
    long long k;
    cin >> k;

    long long ans = 1;
    ans *= bin_pow(2LL, 1LL * a.size() * k) + md - 1;
    ans %= md;

    ans *= bin_pow((bin_pow(2LL, 1LL * a.size()) + md - 1) % md, md - 2);
    ans %= md;

    long long sum = 0;
    long long pw = 1;

    for(int i = 0; i < a.size(); i++) {


        if(a[i] == '0' || a[i] == '5') {
            sum += pw;
            sum %= md;
        }
        pw *= 2LL;
        pw %= md;
    }

    cout << (sum * ans) % md << "\n";
    return 0;
}
