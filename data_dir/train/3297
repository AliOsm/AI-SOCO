#include<bits/stdc++.h>
using namespace std;

long long n;
long long ti;

int cango[2000][2000];

void path(int x, int y) {
	cango[x][y] = cango[y][x] = 1;
}

int main() {
	scanf("%I64d", &n);
	ti = 1;
	while (ti <= n) {
		ti <<= 1;
	}

	int cnt = 2;
	int flag0 = 0;
	int lena = 0;

	int lastbubu = 0;
	int lasti = 1;

	while (ti) {
		if (n & ti) {

			if (flag0 == 0) {
				lena = 0;
				long long tti = ti;
				while (tti) {
					tti >>= 1;
					lena++;
				}
			}

			long long tti = ti;

			int nowlena = 0;
			while (tti) {
				tti >>= 1;
				nowlena++;
			}

			tti = ti;

			int bubu = lena - nowlena;

			int minub = bubu - lastbubu;

			while (minub) {
				minub--;
				cnt++;
				path(cnt, lasti);
				lasti = cnt;
			}

			lastbubu = bubu;

			int lasta, lastb;
			nowlena--;

			if (nowlena == 0) {
				path(lasti, 2);
			} else {
				nowlena--;
				cnt++;
				path(cnt, lasti);
				lasta = cnt;
				cnt++;
				path(cnt, lasti);
				lastb = cnt;
				while (nowlena--) {
					cnt++;
					path(cnt, lasta);
					path(cnt, lastb);
					cnt++;
					path(cnt, lasta);
					path(cnt, lastb);
					lasta = cnt - 1;
					lastb = cnt;
				}
				path(lasta, 2);
				path(lastb, 2);
			}
			flag0 = 1;
		}
		ti >>= 1;
	}

	printf("%d\n", cnt);
	for (int i = 1; i <= cnt; i++) {
		for (int j = 1; j <= cnt; j++) {
			if (cango[i][j]) {
				putchar('Y');
			} else {
				putchar('N');
			}
		}
		puts("");
	}
	return 0;
}
