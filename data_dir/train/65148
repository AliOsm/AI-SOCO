/*
	Author : harshit15
	Before submission
	- Fast IO
	- mx value
	- int overflow
*/
#include <bits/stdc++.h> 
using namespace std;
#define fl(i,a,b) for(int i=a;i<b;i++)
#define ll long long
#define endl '\n'
#define pb push_back
#define ff first
#define ss second
#define mod 998244353 
#define mx 200005
#define mx2 15
#define inf 1e17
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
vector<int> v[mx];
bool vis[mx];
vector<int> odd[2];
void print(int x)
{
	cout<<odd[x].size()<<endl;
	fl(i,0,odd[x].size())
	{
		cout<<odd[x][i]<<" ";
	}
	cout<<endl;
}
void dfs(int x, bool flag)
{
	vis[x] = 1;
	odd[flag].pb(x);
	fl(i,0,v[x].size())
	{
		if(!vis[v[x][i]])
		{
			dfs(v[x][i],flag ^ 1);
		}
	}
}
main()
{
	fast;
	int t;
	cin >> t;
	while(t--)
	{
		int n , m;
		cin >> n >> m;
		fl(i,0,m)
		{
			int x , y;
			cin >> x >> y;
			v[x].pb(y);
			v[y].pb(x);		
		}
		dfs(1,0);
		if(odd[0].size() < odd[1].size())
		{
			print(0);
		}
		else 
		{
			print(1);
		}
		fl(i,1,n+1)
		{
			v[i].clear();
			vis[i] = 0;
		}
		odd[0].clear();
		odd[1].clear();
	}
}
