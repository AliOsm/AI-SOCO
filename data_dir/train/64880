#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll N=2e5 + 5;
const ll mod=1e9 + 7;

ll fct[N],inv[N],invfct[N];
void init(){
    fct[0]=fct[1]=1;
	inv[1]=1;
	invfct[0]=invfct[1]=1;
	for(ll i=2;i<N;i++){
		fct[i]=i*fct[i-1]%mod;
		inv[i]=ll(mod-inv[mod%i])*(mod/i)%mod;
		invfct[i]=ll(inv[i])*invfct[i-1]%mod;
	}
}

map<ll , ll> mp;
ll n,l,r,k,ans,dist,cur;
calc(ll cur){
    ll ans = ( fct[cur]*invfct[cur-k] )%mod;
    ans = (ans * invfct[k] )%mod;
    return ans;
}

int main(){
    ios_base:: sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    init();
    cin>>n>>k;
    for(ll i=0;i<n;i++){
        cin>>l>>r;
        mp[l]++;mp[r+1]--;
    }
    l = mp.begin()->first;
    for(map<ll,ll>::iterator itr=mp.begin() ; itr!=mp.end() ; itr++){
        dist = itr->first - l;
        if(cur>=k)ans = (ans + (calc(cur)*dist)%mod )%mod;
        cur = cur + itr->second;
        l = itr->first;
    }
    cout<<ans;
}
