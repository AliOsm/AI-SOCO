#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef unsigned int uint;
typedef long double ld;
//#define ll __int128
#define int ll
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ld, ld> pld;
typedef vector<int> vi;
typedef vector< vi > vvi;
typedef vector< vvi > vvvi;
typedef vector<pii> vpi;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<vvl> vvvl;
typedef vector<ld> vld;
typedef vector<vld> vvld;

#define inmin(a, b) a = min(a, (b))
#define inmax(a, b) a = max(a, (b))
#define mp(a,b) make_pair(a,b)
#define modsum(a, b) ((a) + (b) >= M ? (a) + (b) - M : (a) + (b))
#define modsubtract(a, b) ((a) - (b) < 0 ? (a) - (b) + M : (a) - (b))
#define modmultiply(a, b) (((a) * (b)) % M)
#define ALL(a) a.begin(),a.end()
#define RALL(a) a.rbegin(),a.rend()
#define sqr(x) ((x) * (x))
#define fori(i, n) for(int i = 0; i < int(n); ++i)
#define cint const int &
#define SZ(a) ((int)(a.size()))
#define watch(x) cout << (#x) << " = " << x << endl;

const double PI = atan2(1, 0) * 2;

const string DIGITS = "0123456789";
const string ALPH = "abcdefghijklmnopqrstuvwxyz";


template<class T>
ostream & operator << (ostream &out, vector<T> &a) {
    out << "{";
    for (auto x : a) out << x << " ";
    return out << "}";
}

void smain();

signed main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);


#ifdef ART_HOME
    freopen("input.txt", "r", stdin);
    clock_t start = clock();
#endif
    cout << setprecision(12) << fixed;
    smain();
#ifdef ART_HOME
    cout << "\n\n\n";
    cout << "TOTAL EXECUTION TIME: " << float(clock() - start) / CLOCKS_PER_SEC << endl;
#endif
}


const int N = 1 << 17;
const ll M = 1e9 + 7;


pii dp[N];


void smain() {
   string s, f;
   cin >> f;

   for (int i = 0; i < SZ(f); ++i)
       if (f[i] == 'a')
           s += 'a';
       else if (f[i] == 'b' && SZ(s) && s.back() == 'a')
           s += 'b';

   if (!SZ(s))
   {
       cout << "0\n";
       return;
   }

   if (s[0] == 'a')
       dp[0].first++;

   for (int i = 1; i < SZ(s); ++i)
   {
       dp[i] = dp[i - 1];

       if (s[i] == 'a')
       {
            dp[i].first += dp[i - 1].second;
            dp[i].first++;
       }
       else if (s[i] == 'b')
       {
           dp[i].second = dp[i - 1].first;
       }

       dp[i].first %= M;
       dp[i].second %= M;

   }

   cout << dp[SZ(s) - 1].first << '\n';
}