#include <bits/stdc++.h>
using namespace std; 

const int N = 2e5 + 50;
int p[N], rp[N];
int l[N], r[N];

int main() {
	ios::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);

	int n; cin >> n; 
	for (int i = 1; i <= n; i++) {
		cin >> p[i];
		rp[p[i]] = i;
	}

	set<int> pos;

	for (int i = n; i > 0; i--) {
		set<int> ::iterator it = pos.lower_bound(rp[i]);

		if (it == pos.end())
			r[i] = n;
		else
			r[i] = (*it)-1;

		if (it == pos.begin())
			l[i] = 1;
		else
			l[i] = *(--it) + 1;

		
		pos.insert(rp[i]);
	}
	long long ans = 0;
	for (int i = 1; i <= n; i++) {
		int x = rp[p[i]];
		int xl = l[p[i]];
		int xr = r[p[i]];

		if (x - xl < xr - x) {
			for (int j = xl; j < x; j++) {
				int y = p[i] - p[j];

				if (rp[y] > i && rp[y] <= xr) {
					ans++;
				}
			}
		}
		else {
			for (int j = x + 1; j <= xr; j++) {
				int y = p[i] - p[j];

				if (rp[y] >= xl && rp[y] < i) {
					ans++;
				}
			}
		}
	}

	cout << ans;

}