#include <bits/stdc++.h>          
using namespace std;

#define ll long long
#define fr(i,n) for(int i=0;i<n;i++)
#define fru(i,a,b) for(int i=a;i<=b;i++)
#define frd(i,a,b) for(int i=a;i>=b;i--)

const int INF = 1e9;
const int N = 100000;

int n, m;
int p[N];
vector<int> v;

int validSimple(int x) {
    
   int d = sqrt((double)x);
   vector<int> vec;
   
   fru(i, 1, d) p[i] = 0;
   fru(i, 2, d)
   {
       if(!p[i])
       {
           p[i] = i;
           vec.push_back(i);
           
           if(x % i == 0)
               return 0;
       }
       
       for(int j = 0; j < vec.size() && i * vec[j] <= d; j++)
            p[i * vec[j]] = vec[j];
   }

   return 1;   
} 

int main() {
   ios_base::sync_with_stdio(0);
   
   cin >> n;

   int d = sqrt((double)n);
 
   fru(i, 2, d)
   {
       if(!p[i])
       {
           p[i] = i;
           v.push_back(i);
       }
       
       for(int j = 0; j < v.size() && i * v[j] <= d; j++)
            p[i * v[j]] = v[j];
   }   
   
   if(validSimple(n))
   {
       cout << 1 << '\n';
       cout << n;
       return 0;
   }
   
   fr(i, v.size()) fr(j, v.size())
   {
       if(v[i] + v[j] == n)
       {
           cout << 2 << '\n';
           cout << v[i] << " " << v[j];
           return 0;
       }
       
       if(n - v[i] - v[j] > 1 && validSimple(n - v[i] - v[j]))
       {
           cout << 3 << '\n';
           cout << v[i] << " " << v[j] << " " << n - v[i] - v[j];
           return 0;
       }
   }
   
   return 0;
}