#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define MAX ((ll)(1e9))
#define pi (1.0*acos(-1))
#define M ((ll)(1e9 + 7))
#define NN ((ll)(305))
#define N ((ll)(3e5+7))
#define eps 0
#define log 20


using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef unsigned long long ull;


typedef tree < ll,  null_type,  less < ll >,  rb_tree_tag,  tree_order_statistics_node_update > o_set;
/// o_set s;
/// s.order_of_key(k) : Number of items strictly smaller than k .
/// *(s.find_by_order(k)) : K-th element in a set (counting from zero).

int ar[N], a[N], b[N], op[N];

int main()
{
    int mx = 0, n , q;
    scanf("%d %d",&n,&q);
    for(int i = 1; i<=n; i++){
        scanf("%d",&ar[i]);
        mx = max(mx,ar[i]);
    }
    a[1] = ar[1];
    b[1] = ar[2];
    op[1] = min(a[1],b[1]);
    for(int i = 2; i<n; i++){
        a[i] = max(a[i-1],b[i-1]);
        b[i] = ar[i+1];
        op[i] = min(a[i],b[i]);
    }

    while(q--){
        ll m;
        scanf("%lld",&m);
        if(m<n) printf("%d %d\n",a[m],b[m]);
        else{
            m = m%(n-1);
            if(m==0) m = n-1;
            printf("%d %d\n",mx,op[m]);
        }
    }
}
