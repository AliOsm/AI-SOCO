//http://codeforces.com/blog/entry/23278
#include <iostream>
#include<vector>
#include<algorithm>
//#include <cmath>
//#include <complex>
#include<queue>
#include<map>
#include <string>
#include<bits/stdc++.h>
#define pi 3.141592654
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
#define input ios_base::sync_with_stdio(0);cin.tie(0);
//#define x real()
//#define y imag()
using namespace std;
typedef pair<double,double>pdd;
typedef long long  ll;
typedef pair<ll, ll>pii;
//typedef complex<double> point;
//template<typename T>T gcd(T x, T y) { if(y == 0)return x; else return gcd(y, x%y); }
//typedef bitset<30> mask;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
//const double PI = acos(-1.0);
//const double EPS = 1e-9;
//typedef complex<double> point;
int n,m,c[5005],v[5005],x,y,mx;
int main()
{

//cout<<Pow((ll)1000000,(ll)110);
//freopen("input.txt","r",stdin);
//freopen("output.txt","w",stdout);
//    char input[15];
//    scanf("%s", &input);  array of char
//  gets(c+1);  array of char
input;
cin>>n>>m;
fill(v,v+n,1e9);
forr(i,1,m)
{
    cin>>x>>y;
    x--;
    y--;
    c[x]++;
    if(x<y)
    v[x]=min(v[x],y-x);
    else
    v[x]=min(v[x],n-(x+1)+(y+1));

    mx=max(mx,c[x]);
}

forr(i,0,n-1)
{
    int s=i;
    int ans=0;
    while(1)
    {
        if(c[s]&&c[s]>=mx-1)
        {
            int d;
            if(s>=i)d=s-i;
            else d=n-(i+1)+(s+1);

            ans=max(ans,d+(c[s]-1)*n+v[s]);
        }
        s=(s+1)%n;
        if(s==i)break;
    }
    cout<<ans<<" ";
}
return 0;
}
