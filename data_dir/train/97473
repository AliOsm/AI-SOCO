#include <bits/stdc++.h>
using namespace std;
const int N = int (1e5) + 256;
const int MOD = int (1e9) + 7;
long long d[N], p[N];
long long get (int l, int r)
{
	long long q = (p[r] - p[l - 1]) % MOD;
	if (q < 0)
		q += MOD;
	return q;
}
int main () {
    #ifndef ONLINE_JUDGE 
		freopen (".in", "r", stdin); 
    #endif 
    int t, k;
    scanf ("%d%d", &t, &k);
	p[1] = d[1] = 1;
	for (int i = 2; i < k; ++ i)
		d[i] = 1, p[i] = (p[i - 1] + d[i]) % MOD;
	d[k] = 2; p[k] = p[k - 1] + d[k];
	for (int i = k + 1; i <= int (1e5) + 1; ++ i)
		d[i] = (d[i - 1] + d[i - k]) % MOD, p[i] = (p[i - 1] + d[i]) % MOD;
	while (t --)
	{
		int l, r;
		scanf ("%d%d", &l, &r);
		printf ("%I64d\n", get (l, r) % MOD);
	}
	return 0;
}