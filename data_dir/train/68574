#include <bits/stdc++.h>
using namespace std;
const int maxn = 200000 + 5;
const int mod = 998244353;

int a[ maxn ], n;
vector< int > pos[ maxn ];
void init() {
	scanf( "%d", &n );
	for ( int i = 0 ; i < n ; ++ i )
		scanf( "%d", a + i );
}

void compress() {
	vector< int > z3;
	for ( int i = 0 ; i < n ; ++ i )
		z3.push_back( a[ i ] );
	sort( z3.begin(), z3.end() );
	z3.resize( unique( z3.begin(), z3.end() ) - z3.begin() );
	for ( int i = 0 ; i < n ; ++ i )
		a[ i ] = ( int )( lower_bound( z3.begin(), z3.end(), a[ i ] ) - z3.begin() );
}

int b[ maxn ];
bool done[ maxn ];
void mark( int x, int c ) {
	queue< int > bfs;
	bfs.push( x );
	done[ x ] = true;
	while( not bfs.empty() ) {
		int y = bfs.front(); bfs.pop();
		for ( int p : pos[ y ] ) {
			b[ p ] = c;
			if ( not p or done[ a[ p - 1 ] ] )
				continue;
			done[ a[ p - 1 ] ] = true;
			bfs.push( a[ p - 1 ] );
		}
	}
}

void solve() {
	compress();
	for ( int i = 0 ; i < n ; ++ i )
		pos[ a[ i ] ].push_back( i );
	int cur = 0;
	for ( int i = 0 ; i < n ; ++ i ) {
		if ( b[ i ] ) continue;
		mark( a[ i ], ++cur );
	}

	int ans = 1;
	for ( int i = 1 ; i < cur ; ++ i )
		ans = ans + ans >= mod ? ans + ans - mod : ans + ans;
	printf( "%d\n", ans );
}

int main() {
	init(); solve();
	return 0;
}