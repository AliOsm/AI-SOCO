#include <bits/stdc++.h>

using namespace std;

const int N = 91;

long long f[N] = {1, 1};

int main() {
  for (int i = 2; i < N; ++i) {
    f[i] = f[i - 1] + f[i - 2];
  }
  int t;
  scanf("%d", &t);
  while (t--) {
    long long num, dp[N][2];
    int u[N], n = 0;
    scanf("%lld", &num);
    for (int i = N - 1; i; --i) if (num >= f[i])
      num -= f[u[n++] = i];
    reverse(u, u + n);
    dp[0][1] = 1;
    dp[0][0] = (u[0] - 1) / 2;
    for (int i = 1; i < n; ++i) {
      dp[i][1] = dp[i - 1][0] + dp[i - 1][1];
      dp[i][0] = dp[i - 1][0] * ((u[i] - u[i - 1]) / 2) + dp[i - 1][1] * ((u[i] - u[i - 1] - 1) / 2);
    }
    printf("%lld\n", dp[n - 1][0] + dp[n - 1][1]);
  }
  return 0;
}
