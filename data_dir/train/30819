#include <bits/stdc++.h>
#define EPS 1e-9

using namespace std;
typedef long long ll;

int n;

double d1,d2;
double pax,pay,pbx,pby;
double ax,ay,bx,by;

double mn;

void get()
{

    double l=0;
    double r=1;

    mn=-1;

    for(int i=0;i<50;i++)    {
        double m1=l+(r-l)/3.0;
        double m2=r-(r-l)/3.0;

        double x1,y1,x2,y2;
        double fm1,fm2;

        x1=pax+(ax-pax)*m1;
        y1=pay+(ay-pay)*m1;
        x2=pbx+(bx-pbx)*m1;
        y2=pby+(by-pby)*m1;
        fm1=hypot(x1-x2,y1-y2);


        x1=pax+(ax-pax)*m2;
        y1=pay+(ay-pay)*m2;
        x2=pbx+(bx-pbx)*m2;
        y2=pby+(by-pby)*m2;
        fm2=hypot(x1-x2,y1-y2);

        if(fm1<fm2)    {
            r=m2;
            mn=fm1;
        }
        else    {
            l=m1;
            mn=fm2;
        }
    }

}


int main()
{
    scanf("%d",&n);

    scanf("%lf %lf",&d1,&d2);

    scanf("%lf %lf %lf %lf",&pax,&pay,&pbx,&pby);

    int cnt=0;

    bool f=0;

    for(int i=1;i<n;i++)    {
        scanf("%lf %lf %lf %lf",&ax,&ay,&bx,&by);
        get();
        if(i==1)    {
            if(mn<d1 || fabs(mn-d1)<EPS)    cnt++;
            if(hypot(ax-bx,ay-by)>d2)    f=1;
        }
        else    {
            if(mn<d1 || fabs(mn-d1)<EPS)    {
                if(f || hypot(pax-pbx,pay-pby)>d2)    {cnt++;f=0;}
                if(hypot(ax-bx,ay-by)>d2)    f=1;
            }
            else    {
                if(max(hypot(pax-pbx,pay-pby),hypot(ax-bx,ay-by))>d2)    f=1;
            }
        }
        pax=ax;pay=ay;pbx=bx;pby=by;
    }

    printf("%d\n",cnt);


    return 0;
}
