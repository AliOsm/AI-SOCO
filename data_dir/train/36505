/*input
4
2 3 4 6
*/
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>
using namespace std;
#define sp ' '
#define endl '\n'
#define fi first
#define se second
#define mp make_pair
#define int long long
#define N 200005

#define M 1000005
int primes[M];
void eratosthene() {
	for (int i = 2; i <= M - 5; i++) if (primes[i] == 0) for (int j = i; j <= M - 5; j += i) primes[j] = i;
}

int n;
int a[N];
int cnt[M], fac[M], p2[M];

ostream& operator << (ostream &os, vector<int>&x) {
	for (int i = 0; i < x.size(); i++) os << x[i] << sp;
	return os;
}
ostream& operator << (ostream &os, pair<int, int> x) {
	cout << x.fi << sp << x.se << sp;
	return os;
}
ostream& operator << (ostream &os, vector<pair<int, int> >&x) {
	for (int i = 0; i < x.size(); i++) os << x[i] << endl;
	return os;
}

const int mod = 1e9 + 7;
void proc(int x) {
	vector<int> tmp; tmp.push_back(1);
	while (x > 1) {
		int t = primes[x];
		int pre = 0 ;
		while (x % t == 0) {
			x /= t;
			int sz = tmp.size();
			for (int i = pre; i < sz; i++) {
				tmp.push_back(tmp[i]*t);
			}
			pre = sz;
		}
	}
	for (int i = 0; i < tmp.size(); i++) {
		cnt[tmp[i]]++;
	}
}

int cal(int x) {
	int t = fac[x] * cnt[x] % mod * p2[cnt[x] - 1] % mod;
	if (t < 0)t += mod;
	return t % mod;
}

signed main() {
	ios_base::sync_with_stdio(false); cin.tie(0);
	eratosthene();
	cin >> n;
	for (int i = 1; i <= n; i++) {
		cin >> a[i]; proc(a[i]);
	}
	p2[0] = 1;
	for (int i = 1; i <= M - 5; i++) fac[i] = i, p2[i] = (p2[i - 1] * 2) % mod;
	int ans = 0;
	for (int i = 2; i <= M - 5; i++) {
		if (cnt[i] == 0 || fac[i] == 0) continue;
		ans = (ans + cal(i));
		for (int j = i + i; j <= M - 5; j += i) fac[j] -= fac[i];
	}
	ans %= mod;
	cout << ans << endl;
}
