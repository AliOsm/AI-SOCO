#include <stdio.h>
#include <string.h>

#define N	1000000
#define A	26
#define INF	0x3f3f3f3f

int min(int a, int b) { return a < b ? a : b; }

int tt[N + 1][26], sz[N + 1], dp[N + 1];
char special[N + 1];

void dfs(int p, int i, int x) {
	int a, s;

	if (p == -1)
		dp[i] = 0;
	else
		dp[i] = special[i] ? min(dp[p], x) + 1 : dp[p] + 1;
	x = min(x, dp[i]);
	x += special[i] ? 1 : 0;
	s = special[i] ? 1 : 0;
	for (a = 0; a < A; a++) {
		int j = tt[i][a];

		if (j != -1) {
			dfs(i, j, x);
			s += sz[j];
			x += sz[j];
		}
	}
	sz[i] = s;
}

int main() {
	static int aa[N];
	int n, k, h, i;

	scanf("%d", &n);
	for (i = 0; i <= n; i++)
		memset(tt[i], -1, sizeof tt[i]);
	for (i = 1; i <= n; i++) {
		static char s[2];
		int p;

		scanf("%d%s", &p, s);
		tt[p][s[0] - 'a'] = i;
	}
	scanf("%d", &k);
	for (h = 0; h < k; h++) {
		scanf("%d", &aa[h]);
		special[aa[h]] = 1;
	}
	dfs(-1, 0, 0);
	for (h = 0; h < k; h++)
		printf("%d ", dp[aa[h]]);
	printf("\n");
	return 0;
}
