//bismillahir rahmanir rahim            //Author:Fayed Anik

#include <bits/stdc++.h>

using namespace std;


#define         ll                         long  long
#define         lf                         double
#define         pb(x)                      push_back(x)
#define         ull                        unsigned long long
#define         sfl(a)                     scanf("%lld",&a)
#define         sf(a)                      scanf("%d",&a)
#define         pf(a)                      printf("%d\n",a)
#define         pfl(a)                     printf("%lld\n",a)
#define         pdl(a)                     printf("%llf\n",a)
#define         FOR(x,n)                   for(ll x=1;x<=n;++x)
#define         vii                        vector< ll > v
#define         pi                         3.14159265359
#define         mex                        10000000
#define         pii                        pair< ll , ll >
#define         mem(m,a)                   memset( m, a,sizeof m)
#define         mp(a,b)                    make_pair(a,b)
#define         maxn                       100000
#define         mod                        1000000007
#define         INF                        1e17
#define         f1                         first
#define         f2                         second
#define         all(v)                     v.begin(),v.end()
#define         PI                         acos(-1)
#define         printminusone              printf("-1\n")
#define         bug                        printf("bug")

ll a[51][51],b[51][51];

ll m,n;
void backtrack(ll i,ll j){
	if(i>n or j>m){
		bool f=1;
		for(ll i=1;i<=n;i++){
			for(ll j=1;j<m;j++){
				if(a[i][j]<a[i][j+1] and b[i][j]<b[i][j+1]){
					continue;
				}
				else{
					f=0;
				}
			}
		}

		for(ll i=1;i<=m;i++){
			for(ll j=1;j<n;j++){
				if(a[j][i]<a[j+1][i] and b[j][i]<b[j+1][i]){
					continue;
				}
				else{
					f=0;
				}
			}
		}

		if(f){
			printf("Possible\n");
			exit(0);
		}
		else{
			return;
		}
	}

	swap(a[i][j],b[i][j]);
	backtrack(i,j+1);
	backtrack(i+1,j);

	swap(a[i][j],b[i][j]);
}
int main(){

	sfl(n),sfl(m);

	for(ll i=1;i<=n;i++){
		for(ll j=1;j<=m;j++){
			sfl(a[i][j]);
		}
	}

	FOR(i,n){
		FOR(j,m){
			sfl(b[i][j]);
			if(a[i][j]>b[i][j]){
				swap(a[i][j],b[i][j]);
			}
		}
	}

    //backtrack(1,1);

	
	for(ll i=1;i<=n;i++){
		for(ll j=2;j<=m;j++){
			if(a[i][j]<=a[i][j-1]){
				swap(a[i][j],b[i][j]);
			}

			if(b[i][j]<=b[i][j-1]){
				swap(b[i][j],a[i][j]);
			}
		}
	}

	for(ll i=1;i<=m;i++){
		for(ll j=2;j<=n;j++){
			if(a[j][i]<=a[j-1][i]){
				swap(a[j][i],b[j][i]);
			}
			if(b[j][i]<=b[j-1][i]){
				swap(a[j][i],b[j][i]);	
			}
		}
	}

	for(ll i=1;i<=n;i++){
		for(ll j=2;j<=m;j++){
			if(a[i][j]<=a[i][j-1] or b[i][j] <= b[i][j-1]){
				printf("Impossible\n");
				return 0;
			}
		}
	}

	for(ll i=1;i<=m;i++){
		for(ll j=2;j<=n;j++){
			if(a[j][i]<=a[j-1][i] or b[j][i] <= b[j-1][i]){
				printf("Impossible\n");
				return 0;
			}
		}
	}

	printf("Possible\n");

	

	return 0;
}

