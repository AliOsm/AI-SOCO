#include<bits/stdc++.h>
#include<ext/numeric>
using namespace std;
using namespace __gnu_cxx;

bool v[1000005];
vector<int> prime;
int mat[501][501];
void sieve() {
    v[0] = v[1] = 1;
    prime.push_back(2);
    for (int i = 4; i < 1000005; i += 2)
        v[i] = 1;
    for (long long i = 3; i < 1000005; i += 2)
        if (!v[i]) {
            prime.push_back(i);
            for (long long j = i * i; j < 1000005; j += i)
                v[j] = 1;
        }
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("in.txt", "rt", stdin);
//  freopen("output.txt", "wt", stdout);
#endif
    sieve();
    int n, m;
    scanf("%d%d", &n, &m);
    //vector<vector<int> > mat(n, vector<int>(m));
    long long mn = 0;
    for (int i = 0; i < m; ++i) {
        scanf("%d", &mat[0][i]);
        mn += ((long long) prime[lower_bound(prime.begin(), prime.end(),
                mat[0][i]) - prime.begin()] - (long long) mat[0][i]);
    }
    for (int i = 1; i < n; ++i) {
        long long x = 0;
        for (int j = 0; j < m; ++j) {
            scanf("%d", &mat[i][j]);
            x += ((long long) prime[lower_bound(prime.begin(), prime.end(),
                    mat[i][j]) - prime.begin()] - (long long) mat[i][j]);
        }
        mn = min(x, mn);
    }
    for (int j = 0; j < m; ++j) {
        long long x = 0;
        for (int i = 0; i < n; ++i)
            x += ((long long) prime[lower_bound(prime.begin(), prime.end(),
                    mat[i][j]) - prime.begin()] - (long long) mat[i][j]);
        mn = min(x, mn);
    }
    printf("%lld", mn);
}
