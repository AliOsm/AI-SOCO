#include <iostream>

using namespace std;

#define MAXN 100008

typedef long long llong;

int N;
llong A[MAXN];

llong frun[MAXN];
llong rrun[MAXN];

void print(int N, llong seq[]) {
   for (int i = 1; i <= N; ++i)
      cerr << seq[i] << ' ';
   cerr << "\n";
}

const llong INF = 1000000000000000LL;

int main(int argc, char* argv[]) {
   ios_base::sync_with_stdio(false); 
   cin.tie(NULL);

   cin >> N;
   for (int i = 1; i <= N; ++i)
      cin >> A[i];

   A[0]   = -INF;
   A[N+1] =  INF;

   llong best = 0;

   frun[0] = 0;
   for (int i = 1; i <= N; ++i) {
      if (A[i] > A[i-1])
         frun[i] = frun[i-1] + 1;
      else
         frun[i] = 1;
      best = max(best, frun[i]);
   }

   rrun[N+1] = 0;
   for (int i = N; i >= 1; --i) {
      if (A[i] < A[i+1])
         rrun[i] = rrun[i+1] + 1;
      else
         rrun[i] = 1;
   }

/*
   print(N, A);
   print(N, frun);
   print(N, rrun);
*/

   for (int i = 1; i <= N; ++i) {
   //   if (frun[i] != 1) continue;
      llong x = A[i-1] + 1;
      if (A[i+1] > x)
         best = max(best, frun[i-1] + rrun[i]);
      else
         best = max(best, frun[i-1] + 1);
   }

   for (int i = N; i >= 1; --i) {
   //   if (rrun[i] != 1) continue;
      llong x = A[i+1] - 1;
      if (A[i-1] < x)
         best = max(best, frun[i] + rrun[i+1]);
      else
         best = max(best, rrun[i+1] + 1);
   }

   cout << best << "\n";

   return 0;
}
