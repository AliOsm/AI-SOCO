#include <bits/stdc++.h>
#define pii pair<int,int>
#define pll pair<ll,ll>
#define fr first
#define sc second
#define ll  long long
#define mp make_pair

using namespace std;

int n,m;
int a[100100];
int b[100100];
int c[100100];
vector<int>p[100100];
int out[100100];
bool vis[100100];
int out2[100100];
bool rev[100100];
bool ch(int M){
    for(int i=1 ; i<=n ;i++){
        out[i] = vis[i] = out2[i] = 0;
    }

    for(int i=0 ;i <m ;i ++){
        rev[i] = 0;
        out[b[i]]++;
        if(c[i] <= M)
            out2[b[i]]++;
    }
    set<int>st;
    set<int>::iterator it;
    for(int i=1 ; i<=n ;i ++){
        if(out[i] == out2[i]){
            st.insert(i);
        }
    }

    while(!st.empty()){
        int t = *st.begin();
        st.erase(t);
        for(int i=0 ;i <p[t].size() ;i ++){
            int in = p[t][i];
            if(vis[a[in]])continue;
            if(vis[b[in]])continue;
            if(a[in] == t){
                out[b[in]]--;
                if(c[in] <= M){
                    out2[b[in]]--;
                }
                if(st.count(b[in]) && out[b[in]] != out2[b[in]]){
                    st.erase(b[in]);
                }
                if(out[b[in]]== out2[b[in]]){
                    st.insert(b[in]);
                }

            }
            else{
                rev[in] = 1;

            }
        }
        vis[t] = 1;

    }
    for(int i=1 ;i <=n ;i ++){
        if(!vis[i])return 0;
    }
    return 1;
}

int main(){
    cin>>n>>m;
    for(int i= 0;i <m ; i++){
        scanf("%d%d%d",&a[i],&b[i],&c[i]);
        p[a[i]].push_back(i);
        p[b[i]].push_back(i);
    }

    int l = 0 , h = 1e9+2,res=0;
    ch(2);
    while(l<= h){
        int m = (l+h)/2;
        if(ch(m)){
            res = m;
            h = m-1;
        }
        else{
            l = m+1;
        }
    }
    ch(res);
    cout<<res<<" ";
    vector<int>ed;
    for(int i=0 ;i <m ;i ++){
        if(rev[i]){
            ed.push_back(i);
        }
    }
    cout<<ed.size()<<endl;
    for(int i=0 ;i <ed.size() ; i++){
        printf("%d ",ed[i]+1);
    }


    return 0;
}
