#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <vector>
#include <stack>
#include <map>
#include <queue>
using namespace std;
const long long MAX=30000001119;
const int N=100015;
int n,m;
long long c[N];
long long  t[N];
long long ans;
int mark[N];
inline bool can(long long r){
    for(int i=0;i<n;i++){
        int pos=lower_bound(t,t+m,c[i])-t;
        int ll=pos-1;
        int rr=pos+1;
        if(pos<m){
            if(abs(c[i]-t[pos])<=r){continue;}
        }
        if(ll>-1){
            if(abs(c[i]-t[ll])<=r){continue;}

        }
        if(rr<m){
            if(abs(c[i]-t[rr])<=r){continue;}
            
        }
        return 0;
        
    
    
    }

    return 1;

}
int main() {
    scanf("%d %d",&n,&m);
  for(int i=0;i<n;i++){
        scanf("%lld",&c[i]);
      
    }
 
    for(int i=0;i<m;i++){
        scanf("%lld",&t[i]);
    }
    sort(t,t+m);
    sort(c,c+n);
    ans=MAX;
    long long ll=0,hh=MAX;
    while(ll<hh){
        long long mid=ll+(hh-ll)/2;
        if(hh-ll<100){break;}
        if(can(mid)){
            ans=min(ans,mid);
            hh=mid;
        }else{ll=mid+1;}
        }
    while(ll<=1LL*hh){
        if(can(ll)){ans=min(ans,ll);}
        ll++;
    }
    printf("%lld\n",ans);
    return 0;
}