#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;

template<typename T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

#define ll long long
#define pi pair<ll,ll>
#define __   ios_base::sync_with_stdio(0);cin.tie();cout.tie();
#define mod 1000000007

ll Set(ll N,ll pos)
{
    return N=N | (1<<pos);
}
ll reset(ll N,ll pos)
{
    return N= N & ~(1<<pos);
}
bool check(ll N,ll pos)
{
    return (bool)(N & (1<<pos));
}


ll ar[]= {0,0,1,-1};
ll br[]= {1,-1,0,0};

string s,s1,s2;
ll n,m;
ll arr[500000];
ll brr[500000];
vector<pi>v,v1;

map<ll,ll>mp;
ll vis[500005];


int main()
{
    __
    ll i,j,a,b,c,d,e,f,g,x,y,z,t,k,l;

    ll ans=0;

    ll chk=0;
    ll last=0;
    cin>>n;
    ll mx=0;
    ll pos=0,cnt=0,even=0,odd=0;

    for(i=1; i<=n; i++)
    {
        cin>>arr[i];
        if(arr[i]!=0)
            last=i;
        if(arr[i]==0)
            continue;
        if(arr[i]%2==0)
            even++;
        else
            odd++;
        if(pos==0&&arr[i]!=0)
            pos=i;

        if(i!=1)
        {
            if(arr[i-1]==0) continue;
            if(arr[i-1]%2!=arr[i]%2)
                ans++;
        }
    }

    //cout<<ans<<endl;
    //cout<<odd<<" "<<even<<endl;
    if(pos==0)
    {
       if(n!=1) cout<<1<<endl;
        else cout<<0<<endl;
        return 0;
    }
    odd=n-n/2-odd;
    if(n%2==1) even=n-n/2-even-1;
    else even=n-n/2-even;
    //cout<<odd<<" "<<even<<endl;
    for(i=pos; i<=n; i++)
    {
        if(arr[i]!=0)
        {
            if(cnt!=0)
            {
                if(chk==0||(chk==2&&arr[i]%2==1)||(chk==1&&arr[i]%2==0))
                    v.push_back({cnt,0});
                else if(chk==2&&arr[i]%2==0)
                    v.push_back({cnt,2});
                else
                    v.push_back({cnt,1});
                cnt=0;
                if(arr[i]%2==0)
                    chk=2;
                else
                    chk=1;
            }


                if(arr[i]%2==0)
                    chk=2;
                else
                    chk=1;
        }
        else
            cnt++;
    }


    sort(v.begin(),v.end());
   // cout<<v.size()<<endl;
    for(i=0; i<v.size(); i++)
    {

        if(v[i].second==0)
        {
            ans++;
            //cout<<"disha"<<endl;
        }
        else if(v[i].second==1)
        {
            if(odd>=v[i].first)
            {
                odd-=v[i].first;
            }
            else
                ans+=2;
        }
        else
        {
            if(even>=v[i].first)
            {
                even-=v[i].first;
            //cout<<"shajib"<<endl;
            }
            else
                ans+=2;
        }
    }
    cnt=0;

    if(pos-1<=n-last){
    if(arr[pos]%2==0)
    {
        if(even<pos-1)
            ans++;
        else even-=pos-1;
    }
    else
    {
        if(odd<pos-1)
            ans++;
        else odd-=pos-1;
    }


    if(arr[last]%2==0)
    {
        if(even<n-last)
            ans++;
        else even-=n-last;
    }
    else
    {
        if(odd<n-last)
            ans++;
        else odd-=n-last;
    }
    }
    else{
      if(arr[last]%2==0)
    {
        if(even<n-last)
            ans++;
        else even-=n-last;
    }
    else
    {
        if(odd<n-last)
            ans++;
        else odd-=n-last;
    }


    if(arr[pos]%2==0)
    {
        if(even<pos-1)
            ans++;
        else even-=pos-1;
    }
    else
    {
        if(odd<pos-1)
            ans++;
        else odd-=pos-1;
    }
    }



    cout<<ans<<endl;
}

