#include<bits/stdc++.h>
#define MP make_pair
#define PB push_back
#define PP pop_back()
#define ALL(x) x.begin(),x.end()
#define st first
#define nd second
#define sz(x) (int) x.size()
#define pii pair<int,int>
#define ii int,int
#define ll long long
#define llu long long unsigned
#define INPUT freopen("inp.in","r",stdin);
#define OUTPUT freopen("oup.out","w",stdout);
#define sag(x) 2*x+1
#define sol(x) 2*x
#define orta (bas+son)/2
#define MIN3(x,y,z) min(min(x,y),z)
#define MAX3(x,y,z) max(max(x,y),z)
#define FOR(i,j,k) for(int i=j;i<=k;i++)
#define ROF(i,j,k) for(int i=j;i>=k;i--)
#define dbgs(x) cerr<<(#x)<<" --> "<<(x)<<" "
#define dbg(x) cerr<<(#x)<<" --> "<<(x)<<endl;getchar()
#define MOD 1000000007
#define inf 1000000005
#define N 2005
using namespace std;
ll n,ans1,ans2;
ll a[N][N],dp1[N+N],dp2[N+N];
pair<ll,ll> cvp1=MP(1,1),cvp2=MP(1,2);
int main() {
    scanf("%lld",&n);
    FOR(i,1,n) FOR(j,1,n) scanf("%lld",&a[i][j]);
    FOR(i,1,n) FOR(j,1,n) {
        dp1[i+j]+=a[i][j];
        dp2[i+n-j+1]+=a[i][j];
    }
    FOR(i,1,n) FOR(j,1,n) {
        if((i+j)&1 && ans1<dp1[i+j]+dp2[i+n-j+1]-a[i][j]) {
            ans1=dp1[i+j]+dp2[i+n-j+1]-a[i][j];
            cvp1=MP(i,j);
        }
        if(!((i+j)&1) && ans2<dp1[i+j]+dp2[i+n-j+1]-a[i][j]) {
            ans2=dp1[i+j]+dp2[i+n-j+1]-a[i][j];
            cvp2=MP(i,j);
        }
    }
    printf("%lld\n%lld %lld %lld %lld",ans1+ans2,cvp1.st,cvp1.nd,cvp2.st,cvp2.nd);
}
