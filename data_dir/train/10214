#define _USE_MATH_DEFINES 
#define _CRT_SECURE_NO_DEPRECATE 
#include <iostream> 
#include <cstdio> 
#include <cstdlib> 
#include <vector> 
#include <sstream> 
#include <string> 
#include <map> 
#include <set> 
#include <algorithm> 
#include <cmath> 
#include <cstring> 
#include <queue>
using namespace std; 
#pragma comment(linker, "/STACK:256000000") 
#define mp make_pair 
#define pb push_back 
#define all(C) (C).begin(), (C).end() 
#define sz(C) (int)(C).size() 
#define PRIME 1103 
#define PRIME1 31415 
typedef long long int64; 
typedef unsigned long long uint64; 
typedef pair<int, int> pii; 
typedef vector<int> vi; 
typedef vector<vector<int> > vvi; 
//------------------------------------------------------------ 
const int N = 2000;
pii q[10 * N * N];
int st, en;
char mas[N][N];
int n, m;
int dx[4] = {0, 0, 1, 1};
int dy[4] = {0, 1, 0, 1};
int was[N][N];
int ok(int x, int y)
{
    if (x < 0 || x >= n - 1 || y < 0 || y >= m - 1)
        return 0;
    return 1;
}

void bfs(int x, int y)
{
    if (was[x][y])
        return;
    was[x][y] = 1;
    for(int i = 0; i < 4; ++i)
    {
        int tx = x + dx[i], ty = y + dy[i];
        mas[tx][ty] = '.';
    }
    int al[8] = {1, 1, 1, 0, 0 -1, -1, -1};
    int bet[8] = {-1, 0, 1, -1, 1, -1, 0, 1};
    for(int i = 0; i < 8; ++i)
    {
        int tx = x + al[i], ty = bet[i] + y;
        if (!ok(tx, ty))
            continue;
        int t = 0;
        for(int p = 0; p < 4; ++p)
        {
            int xa = tx + dx[p], ya = ty + dy[p];
            t += (mas[xa][ya] == '*');
        }
        if (t == 1)
            q[en++] = pii(tx, ty);
        en %= N * N * 10;
    }
}

int main()
{
#ifdef WIN32
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    int t;
    cin >> n >> m;
    for(int i = 0; i < n; ++i)
    {
        string st;
        cin >> st;
        for(int j = 0; j < m; ++j)
            mas[i][j] = st[j];
    }
    for(int i = 0; i < n - 1; ++i)
    {
        for(int j = 0; j < m - 1; ++j)
        {
            int t = 0;
            for(int r = 0; r < 4; ++r)
            {
                int tx = i + dx[r], ty = j + dy[r];
                t += (mas[tx][ty] == '*');
            }
            if (t == 1)
                q[en++] = pii(i, j);
        }
    }

    while(st != en)
    {
        bfs(q[st].first, q[st].second);
        st++;
        st %= (10 * N * N);
    }

    for(int i = 0; i < n; ++i)
    {
        for(int j = 0; j < m; ++j)
            printf("%c", mas[i][j]);
        printf("\n");
    }
}