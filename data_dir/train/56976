/* In the name of Allah */
#include<bits/stdc++.h>
using namespace std;

#define X first
#define Y second
typedef long long ll;
typedef pair<ll, ll> pll;
const int N = 1e6 + 5;
vector<int> adj[N];
vector<pll> vec[N];
ll k, cnt[N];
int w, p[N];

inline void read_input() {
	int n;
	cin >> n;
	while (n--) {
		ll y;
		int x;
		cin >> x >> y;
		vec[x].push_back({0, y});
	}
	cin >> k;
}

inline void solve() {
	iota(p, p + N, 0);
	for (int i = 2; i < N; i++)
		for (int j = i; j < N; j += i)
			p[j] = p[i];
	for (int i = N - 1; i > 1; i--) {
		vector<pll> help;
		ll st = 0, en = 0;
		sort(vec[i].begin(), vec[i].end());
		for (auto x: vec[i])
			if (x.X <= en)
				en += x.Y - x.X;
			else {
				if (st < en)
					help.push_back({st, en});
				st = x.X, en = x.Y;
			}
		if (st < en)
			help.push_back({st, en});
		for (auto x: help) {
			if (x.Y > k) {
				cnt[i] += x.Y - max(x.X, k);
				x.Y -= x.Y - max(x.X, k);
			}
			if (x.X++ < x.Y++)
				for (int j = i - 1; j > 1; j /= p[j])
					vec[p[j]].push_back(x);
		}
		w += cnt[i] > 0;
	}
}

inline void write_output() {
	cout << w << endl;
	for (int i = 2; i < N; i++)
		if (cnt[i])
			cout << i << ' ' << cnt[i] << endl;
}

int main() {
	ios:: sync_with_stdio(0), cin.tie(0), cout.tie(0);
	read_input(), solve(), write_output();
	return 0;
}
