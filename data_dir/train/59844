/**
 *    author:  skmonir
 *    created: 31-Jan-2018 23:31:13
**/

#include <bits/stdc++.h>

using namespace std;

#define endl                '\n'
#define TN                  typename
#define all(x)              x.begin(), x.end()
#define rall(x)             x.rbegin(), x.rend()
#define mem(x, y)           memset(x, y, sizeof x)
#define FOR(x, l, r)        for (int x = l; x <= r; ++x)
#define ROF(x, l, r)        for (int x = l; x >= r; --x)

template <TN T> inline void Int(T &n) {
    n = 0; int f = 1; register int ch = getchar();
    for (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -1;
    for (; isdigit(ch); ch = getchar()) n = (n << 3) + (n << 1) + ch - '0';
    n = n * f;
}

template <TN T> T gcd(T a, T b) {return !b ? a : gcd(b, a % b);}
template <TN T> inline void umin(T &a, T b) {a = a < b ? a : b;}
template <TN T> inline void umax(T &a, T b) {a = a > b ? a : b;}
template <TN T, TN W> inline void Int(T &x, W &y) {Int(x), Int(y);}
template <TN T, TN W, TN Q> inline void Int(T &x, W &y, Q &z) {Int(x, y), Int(z);}

const int N = 2e3 + 7;
const int inf = 1e9 + 7;
const int mod = 1e9 + 7;

char s[N][N];

int main() {
    int n, m, k; Int(n, m, k);

    int free = 0;
    for (int i = 1; i <= n; ++i) {
        scanf("%s", s[i] + 1);
        for (int j = 1; s[i][j]; ++j) free += (s[i][j] == '.');
    }

    if (k == 1) return !printf("%d\n", free);

    int res = 0;
    for (int i = 1; i <= n; ++i) {
        int cc = 0;
        for (int j = 1; j <= m; ++j) {
            if (s[i][j] == '*') {
                res += max(0, cc - k + 1);
                cc = 0;
            } else cc++;
        }
        res += max(0, cc - k + 1);
    }

    for (int j = 1; j <= m; ++j) {
        int cc = 0;
        for (int i = 1; i <= n; ++i) {
            if (s[i][j] == '*') {
                res += max(0, cc - k + 1);
                cc = 0;
            } else cc++;
        }
        res += max(0, cc - k + 1);
    }

    printf("%d\n", res);

    return 0;
}