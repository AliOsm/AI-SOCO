#include <bits/stdc++.h>
using namespace std;

const int MOD = 100000000;
int n1, n2, k1, k2, dp[101][101][11][11];

void calc1(int i1, int i2, int j1)
{
    if (i1 == 0)
        return;
    int &v = dp[i1][i2][j1][0];
    if (j1 > 1)
        v = dp[i1 - 1][i2][j1 - 1][0];
    else {
        int maxj2 = min(i2, k2);
        for (int j2 = 1; j2 <= maxj2; j2++)
            v = (v + dp[i1 - 1][i2][0][j2]) % MOD;
    }
}

void calc2(int i1, int i2, int j2)
{
    if (i2 == 0)
        return;
    int &v = dp[i1][i2][0][j2];
    if (j2 > 1)
        v = dp[i1][i2 - 1][0][j2 - 1];
    else {
        int maxj1 = min(i1, k1);
        for (int j1 = 1; j1 <= maxj1; j1++)
            v = (v + dp[i1][i2 - 1][j1][0]) % MOD;
    }
}

int ans()
{
    int v = 0;
    for (int j1 = 1; j1 <= k1; j1++)
        v = (v + dp[n1][n2][j1][0]) % MOD;
    for (int j2 = 1; j2 <= k2; j2++)
        v = (v + dp[n1][n2][0][j2]) % MOD;
    return v;
}

int main()
{
    cin >> n1 >> n2 >> k1 >> k2;
    dp[1][0][1][0] = dp[0][1][0][1] = 1;
    for (int s = 2; s <= n1 + n2; s++) {
        int maxi1 = min(s, n1);
        for (int i1 = max(0, s - n2), i2 = s - i1; i1 <= maxi1; i1++, i2--) {
            for (int j1 = 1; j1 <= k1; j1++)
                calc1(i1, i2, j1);
            for (int j2 = 1; j2 <= k2; j2++)
                calc2(i1, i2, j2);
        }
    }
    cout << ans();
}