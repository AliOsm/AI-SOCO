#include <bits/stdc++.h>
using namespace std;

struct data
{
    int64_t d,u,v,w;
};

data a[100005];
int64_t n,m,k,d[100005],f1[100005],f2[100005];

bool cmp(data x1,data x2)
{
    return x1.d<x2.d;
}

void Process1()
{
    for(int64_t i=1;i<=n;i++)
        d[i]=1e12;
    f1[0]=int64_t(1e12)*n;
    for(int64_t i=1;i<=m;i++)
    {
        f1[i]=f1[i-1];
        if(a[i].v==0)
        {
            f1[i]-=d[a[i].u];
            d[a[i].u]=min(d[a[i].u],a[i].w);
            f1[i]+=d[a[i].u];
        }
    }
}

void Process2()
{
    for(int64_t i=1;i<=n;i++)
        d[i]=1e12;
    f2[m+1]=int64_t(1e12)*n;
    for(int64_t i=m;i>=1;i--)
    {
        f2[i]=f2[i+1];
        if(a[i].u==0)
        {
            f2[i]-=d[a[i].v];
            d[a[i].v]=min(d[a[i].v],a[i].w);
            f2[i]+=d[a[i].v];
        }
    }
}

int64_t Binary(int64_t x)
{
    int64_t rs=f2[m+1],l=1,r=m;
    while(l<=r)
    {
        int64_t mid=(l+r)/2;
        if(a[mid].d>=x)
        {
            rs=f2[mid];
            r=mid-1;
        }
        else
            l=mid+1;
    }
    return rs;
}

int main()
{
    ios_base::sync_with_stdio(false);
    //freopen("854D.INP","r",stdin);
    cin>>n>>m>>k;
    for(int64_t i=1;i<=m;i++)
        cin>>a[i].d>>a[i].u>>a[i].v>>a[i].w;
    sort(a+1,a+m+1,cmp);
    Process1();
    Process2();
    int64_t res=1e18;
    for(int64_t i=1;i<=m;i++)
        res=min(res,f1[i]+Binary(a[i].d+k+1));
    if(res>=1e12)
        cout<<-1;
    else
        cout<<res;
}
