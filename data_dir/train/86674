#include <bits/stdc++.h>

using namespace std;

#define long long long
#define INF (long) 1e18
#define MOD 998'244'353
#define pll pair<long, long>
#define pb push_back
#define FOR(i, a, b) \
    for (long i = a; i < (long) b; i++)
#define REP(i, n) FOR(i, 0, n)
#define SORT(v, atr) \
    sort(v.begin(), v.end(), \
      [](auto &a, auto &b) { return a.atr < b.atr; });
#define UNSORT(v, atr) \
    sort(v.begin(), v.end(), \
      [](auto &a, auto &b) { return a.atr > b.atr; });
#define PRINTV(v) \
    if (not v.empty()) { \
        printf("%lld", v[0]); \
        for (long _i = 1; _i < (long) v.size(); _i++) \
            printf(" %lld", v[_i]); \
        printf("\n"); \
    }

auto gera_primos(long n)
{
  set<long> primos;
  vector<bool> crivo(n);
  primos.insert(1);
  primos.insert(2);
  for (long i = 3; i < n; i += 2) {
    if (crivo[i]) continue;
    primos.insert(i);
    for (long j = i; j < n; j += i) {
      crivo[j] = true;
    }
  }
  return primos;
}

struct Node
{
  long id;
  bool visitado;
  long n;
  vector<long> adj;
  long gcd, gcd_old;

  Node() {
    static long i = 0;
    id = i++;
  }
};

int main()
{
  long n;
  string a, b;
  cin >> a >> b >> n;

  string x = "v<^>";
  if (n % 2 == 0) puts("undefined");
  else {
    if (n % 4 == 1) {
      if ((x.find(a) + 1) % 4 == x.find(b)) puts("cw");
      else puts("ccw");
    } else {
      if ((x.find(a) + 3) % 4 == x.find(b)) puts("cw");
      else puts("ccw");
    }
  }
}
