#include <bits/stdc++.h>

#define fore(i, l, r) for(int i = int(l); i < int(r); ++i)
#define forn(i, n) fore(i, 0, n)
#define nfor(i, n) for(int i = int(n) - 1; i >= 0; --i)
#define for1(i, n) for(int i = 1; i < int(n); ++i)

#define mp make_pair
#define pb push_back
#define sz(a) int((a).size())
#define all(a) (a).begin(), (a).end()
#define x first
#define y second
#define correct(x, y, xmax, ymax) ((x) >= 0 && (x) < (xmax) && (y) >= 0 && (y) < (ymax))

using namespace std;
    
template<typename T> inline T abs(T a){ return ((a < 0) ? -a : a); }
template<typename T> inline T sqr(T a){ return a * a; }
template<class T> T gcd(T a, T b) { return a ? gcd (b % a, a) : b; }
template<class T> T lcm(T a, T b) { return a / gcd (a, b) * b; }
template<class T> T sign(T a) { return a > 0 ? 1 : (a < 0 ? -1 : 0); }

template<class A, class B> ostream& operator <<(ostream &out, const pair<A, B> &p) {
    return out << "(" << p.x << ", " << p.y << ")";
};

template<class A> ostream& operator <<(ostream &out, const vector<A> &v) {
    out << "[";
    forn(i, sz(v)) {
        if(i)
            out << ", ";
        out << v[i];
    }
    return out << "]";
}

typedef long long li;
typedef long double ld;
typedef pair<int,int> pt;
typedef vector <int> vi;

const int dx[] = {-1, 0, 1,  0};
const int dy[] = { 0, 1, 0, -1};
const int dxK[] = {-1, -1, 0, 1, 1,  1,  0, -1};
const int dyK[] = { 0,  1, 1, 1, 0, -1, -1, -1};
const int dxKn[] = {-2, -1, 1, 2,  2,  1, -1, -2};
const int dyKn[] = { 1,  2, 2, 1, -1, -2, -2, -1};

const int INF = int(1e9) + 100;
const li INF64 = int(1e18) + 100;
const ld EPS = 1e-9;
const ld PI = acosl(-1.0);
const int N = 5009;

int k, n;
string s[N];
bool bad;

inline bool read(){
    if(!(cin >> k >> n))
        return false;
	forn(i, k)	
		cin >> s[i];
    return true;
}

bool ok(string res){
	forn(i, k){
		int cnt = 0;
		forn(j, n)
			cnt += res[j] != s[i][j];
		if(!(cnt == 0 || cnt == 2))
			return false;
		if(cnt == 0 && bad)
		    return false;
	}
	return true;
}

inline void solve(){
    fore(i, 1, k){
        string s1 = s[0], s2 = s[i];
        sort(all(s1)), sort(all(s2));
        if(s1 != s2){
            cout << -1 << endl;
            return;
        }
    }
    bad = true;
    forn(i, n)forn(j, i)
        if(s[0][i] == s[0][j])
            bad = false;
            
	sort(s, s + k);
	vector <int> v;
	forn(i, n)
		if(s[0][i] != s[k - 1][i])
			v.pb(i);
	
	if(sz(v) > 4){
		puts("-1");
		return;
	}
	if(s[0] == s[k - 1]){
	    swap(s[0][0], s[0][1]);
	    cout << s[0] << endl;
	    return;
	}
	forn(i, sz(v)) forn(j, n){
		string res = s[0];
		swap(res[v[i]], res[j]);
		
		if(ok(res)){
			cout << res << endl;
			return;
		}
	}
	
	puts("-1");
}

int main() {
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    int tt = clock();
#endif
    cout << fixed << setprecision(15);
    cerr << fixed << setprecision(15);

    if(read()) {
        solve();

#ifdef _DEBUG
        cerr << "TIME = " << clock() - tt << endl;
        tt = clock();
#endif
    }

    return 0;
}