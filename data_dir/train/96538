#include <bits/stdc++.h>
#define ll  long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define sc second
#define fr first

using namespace std;

const int MX = 400,MX_LEN = 100;

int mex[6][6][6][MX +2][3];
int repeatedLen[6][6][6];
int start[6][6][6];
void preMex(int x,int y,int z){
    for(int i=1 ;i <=MX ; i++){
        for(int ls =0 ; ls < 3 ; ls++){
            set<int>st;
            st.insert(mex[x][y][z][max(i-x,0)][0]);
            if(ls != 1)
                st.insert(mex[x][y][z][max(i-y,0)][1]);
            if(ls != 2)
                st.insert(mex[x][y][z][max(i-z,0)][2]);
            for(int k=0 ; ; k++){
                if(st.count(k))continue;

                mex[x][y][z][i][ls] = k;
                break;
            }
        }
    }
}

void findPatr(int x,int y,int z){
    preMex(x,y,z);
    bool ok = 0;
    for(int len =1 ; len <=MX_LEN ; len++){
        ok = 0;
        for(int st = 0 ;st <= MX_LEN - 4*len ; st++){
            ok = 1;
            for(int i=st+len ;i <=MX;  i++){
                for(int ty=0 ;ty < 3 ; ty++){
                    if(mex[x][y][z][i][ty] != mex[x][y][z][i-len][ty]){
                        ok =0 ;
                        break;
                    }
                }
                if(!ok)break;
            }
            if(ok){
                repeatedLen[x][y][z] = len;
                start[x][y][z] = st;
                break;
            }
        }
        if(ok)break;
    }
    if(ok){

/*
        int st = start[x][y][z];
        for(int i=st ;i < st+repeatedLen[x][y][z] ; i++){
            cout<<mex[x][y][z][i][0]<<" ";
        }
        cout<<endl;
        //cout<<endl;
        for(int i=st+repeatedLen[x][y][z] ;i < st+2*repeatedLen[x][y][z] ; i++){
            cout<<mex[x][y][z][i][0]<<" ";
        }
        cout<<endl;
        cout<<endl;
        //exit(0);*/
    }
    else{
        cout<<"err "<<x<<" "<<y<<" "<<z<<endl;

    }
}

void pre(){
    for(int x=1 ; x <= 5; x++){
        for(int y=1; y <=5 ; y++){
            for(int z = 1 ; z<= 5 ; z++){
                findPatr(x,y,z);
            }
        }
    }
}

int calMex(int x,int y,int z,ll n,int ls=0){
    if(n <= MX){
        return mex[x][y][z][n][ls];
    }
    n -= start[x][y][z];
    n %= repeatedLen[x][y][z];
    return mex[x][y][z][ start[x][y][z]+n][ls];
}

ll a[1001000];

int main(){

    pre();
   // cout<<"ok"<<endl;
    int tt;
    cin>>tt;
    while(tt--){
        int n,x,y,z;
        scanf("%d%d%d%d",&n,&x,&y,&z);
        int xr = 0;
        for(int i=0 ; i<n ;i ++){
            scanf("%lld",&a[i]);
            xr ^= calMex(x,y,z,a[i]);
        }
        int res =0 ;
        for(int i=0 ;i < n; i ++){
            xr ^= calMex(x,y,z,a[i]);
            res += calMex(x,y,z,max(a[i]-x,0LL),0) == xr;
            res += calMex(x,y,z,max(a[i]-y,0LL),1) == xr;
            res += calMex(x,y,z,max(a[i]-z,0LL),2) == xr;
            xr ^= calMex(x,y,z,a[i]);
        }
        printf("%d\n",res);
    }
    return 0;
}
