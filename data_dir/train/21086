#include<bits/stdc++.h>
#define int long long
using namespace std;

int seg[400005];
int sum[400005];
int ans[100005];
int tot=0;
int cc=0;
void upd(int ver,int tl,int tr,int pos,int val)
{
  if(tl>tr)
    return ;
  else if(tl==tr)
  {
    sum[ver]=val;
    seg[ver]=max(0LL,val);
  }
  else
  {
    int tm=(tl+tr)/2;
    if(tm>=pos)
      upd(2*ver,tl,tm,pos,val);
    else
      upd(2*ver+1,tm+1,tr,pos,val);
    sum[ver]=sum[2*ver]+sum[2*ver+1];
    seg[ver]=max(seg[2*ver]+sum[2*ver+1],seg[2*ver+1]);
  }
}

int get(int ver,int tl,int tr)
{
  if(tl>tr)
    return 0;
  else if(tl==tr)
  {
    if(seg[ver]==1)
      return 1;
    return 0;
  }
  else
  {
    int tm=(tl+tr)/2;
    if(seg[2*ver+1]+tot>0)
    {
      return tm-tl+1+get(2*ver+1,tm+1,tr);
    }
    else
    {
      tot+=sum[2*ver+1];
      return get(2*ver,tl,tm);
    }    
  }  
}

signed main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);  
  cout.tie(0);   

  #ifndef ONLINE_JUDGE
      if(fopen("INPUT.txt","r"))
      {
      freopen ("INPUT.txt" , "r" , stdin);
      freopen ("OUTPUT.txt" , "w" , stdout);
      }
  #endif

  int n;
  cin>>n;
  int x,y,z;
  ans[0]=-1;
  for(int i=1;i<=n;i++)
  {
    cc++;
    tot=0;
    cin>>x>>y;
    if(y==0)
    {
      upd(1,1,n,x,-1);
      if(seg[1]>0)
      {
        int ind=get(1,1,n);
        cout<<ans[ind]<<'\n';
      }
      else
      {
        cout<<-1<<'\n';
      }      
    }
    else
    {
      cin>>z;
      ans[x]=z;
      upd(1,1,n,x,1);
      if(seg[1]>0)
      {
        int ind=get(1,1,n);
        cout<<ans[ind]<<'\n';
      }
      else
      {
        cout<<-1<<'\n';
      }      
    }    
  }


}
