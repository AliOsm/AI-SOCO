#pragma comment(linker, "/STACK:268435456")

#include<iostream>
#include<cstdio>

#include<string>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<stack>

#include<iomanip>	
#include<memory.h>
#include<algorithm>
#include<cstring>
#include<ctime>
#include<cmath>
#include<cassert>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); ++i)
#define for1(i, n) for(int i = 1; i < (int)(n); ++i)
#define forr(i, n) for(int i = int(n) - 1; i >= 0; --i)
#define fore(i, a, b) for(int i = int(a); i <= int(b); ++i)
#define correct(x, y, n, m) (0 <= x && x < n && 0 <= y && y < m)
#define X first
#define Y second
#define all(a) a.begin(), a.end()
#define pb push_back
#define mp make_pair
#define sz(v) (int)(v.size())
#define hash archash
#define next arcnext
#define link arclink
#define y0 arcy0
#define y1 arcy1
#define log2 arclog2
//#define best arcbest

template<typename T> inline T abs(T a){ return ((a < 0) ? -a : a); }
template<typename T> inline T sqr(T a){ return a * a; }
template<class T> T gcd(T a, T b) { return a ? gcd (b % a, a) : b; }
template<class T> T lcm(T a, T b) { return a / gcd (a, b) * b; }
template<class T> T sign(T a) { return a > 0 ? 1 : (a < 0 ? -1 : 0); }

typedef long long li;
typedef unsigned long long uli;
typedef long double ld;
typedef pair <int, int> pt;
typedef vector <int> vi; 
typedef vector <vector <int> > vvi;
typedef vector <pair <int, int> > vpt; 

const int dx[] = {-1, 0, 1,  0};
const int dy[] = { 0, 1, 0, -1};
const int dxK[] = {-1, -1, 0, 1, 1,  1,  0, -1};
const int dyK[] = { 0,  1, 1, 1, 0, -1, -1, -1};
const int dxKn[] = {-2, -1, 1, 2,  2,  1, -1, -2};
const int dyKn[] = { 1,  2, 2, 1, -1, -2, -2, -1};

const int N = int(2e2) + 9;
const int M = int(3e3) + 9;
const int LOGN = 22;
const int SQN = 350;
const int MOD = int(1e9) + 7;
const int INF = 1e9 + 100;
const li INF64 = 2e18;
const ld PI = 3.1415926535897932384626433832795;
const ld EPS = 1e-9;

int n;
string s;
int r, g, b;
bool u[N][N][N];
queue<pair<int, pt> > q;

void push(pair<int, pt > v){
	if(!u[v.X][v.Y.X][v.Y.Y]){
		u[v.X][v.Y.X][v.Y.Y] = true;
		q.push(v);
	}
}

void solve(){	
	int res = 0;
	cin >> n >> s;
	forn(i, n)
		if(s[i] == 'R')
			++r;
		else if(s[i] == 'G')
			++g;
		else
			++b;

	
	q.push(mp(r, mp(g, b)));
	u[r][g][b] = true;
	while(!q.empty()){
		pair<int, pt> v = q.front();
		q.pop();
		if(v.X >= 2)
			push(mp(v.X - 1, v.Y));
		if(v.Y.X >= 2)
			push(mp(v.X, mp(v.Y.X - 1, v.Y.Y)));
		if(v.Y.Y >= 2)
			push(mp(v.X, mp(v.Y.X, v.Y.Y - 1)));
		if(v.X && v.Y.X)
			push(mp(v.X - 1, mp(v.Y.X - 1, v.Y.Y + 1)));
		if(v.X && v.Y.Y)
			push(mp(v.X - 1, mp(v.Y.X + 1, v.Y.Y - 1)));
		if(v.Y.Y && v.Y.X)
			push(mp(v.X + 1, mp(v.Y.X - 1, v.Y.Y - 1)));
	}
	if(u[0][0][1])
		cout << 'B';
	if(u[0][1][0])
		cout << 'G';
	if(u[1][0][0])
		cout << 'R';
}

int main(){

	//....freopen("input.txt", "r", stdin);
	//..freopen("output.txt", "w", stdout);

    srand(time(NULL));
    cout << setprecision(10) << fixed;
    cerr << setprecision(10) << fixed;   
	ios_base::sync_with_stdio(0);

    solve();

    return 0;
}