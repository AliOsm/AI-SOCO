#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
#define F first
#define S second

struct seg
{
	vector<ll> st;
	seg(int n) : st(8*n) {}
	int query(int cur, int b, int e, ll x)
	{
		if (b+1 == e)
			return (st[cur] > x) ? b : (b+1);

		int m = (b+e)>>1;

		if (st[cur<<1] <= x)
			return query(cur<<1|1, m, e, x-st[cur<<1]);
		return query(cur<<1, b, m, x);
	}
	void update(int cur, int b, int e, int p, ll x)
	{
		if (b+1 == e)
		{
			st[cur] += x;
			return;
		}
		int m = (b+e)>>1;
		if (p < m)
			update(cur<<1, b, m, p, x);
		else
			update(cur<<1|1, m, e, p, x);
		st[cur] = st[cur<<1] + st[cur<<1|1];
	}
};

int main()
{
	//freopen("a.txt", "r", stdin);
	ios_base::sync_with_stdio(0), cin.tie(0);

	ll n, t;
	cin >> n >> t;
	vector<ll> a(n);

	seg st(n);
	ll s = 0;
	int cnt = 0;
	for (auto &i : a)
	{
		++cnt;
		cin >> i, s += i;
		st.update(1, 1, n+1, cnt, i);
	}

	ll ans = 0;

	int z = n;
	while (z)
	{
		ll x = (t/s);
		ans += x*z;
		t -= x*s;

		int p = st.query(1, 1, n+1, t);
		if (p < n+1)
		{
			--z;
			s -= a[p-1];
			st.update(1, 1, n+1, p, -a[p-1]);
		}
	}

	cout << ans << "\n";

	return 0;
}
