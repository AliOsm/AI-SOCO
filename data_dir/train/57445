/*"Everything in the universe is balanced. Every disappointment
   you face in life will be balanced by something good for you!
                Keep going, never give up."						*/
#include "bits/stdc++.h"
using namespace std;

#define ll long long int
#define ld double 
#define rep(i,a,b) for(int i=a;i<=b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define deb cerr << "Line no." << __LINE__
#define nl '\n'
#define pb push_back
#define all(a) a.begin(),a.end()
#define P pair<ll,ll> 
#define F first
#define S second
const ll p_mod=9999999999999983;
const long double pi = 3.14159265358979323;
const ll N=1e6+9;
const ll mod=1e9+7;
typedef double f80;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
int rand(int l, int r){uniform_int_distribution<int> uid(l, r); return uid(rng); }
ll powerk(ll x, ll y);

ll a[N];
map<string , ll> mp;
vector<ll> v[N];

void solve()
{    
	string s[4];
	ll ans=1e9;
	rep(i,1,3)cin>>s[i],mp[s[i]]++;
	for(auto it: mp)
	{
		ans = min(ans,3-it.S);
	}
	//cout<<ans<<nl;
	rep(i,2,8)
	{
		string s="",u="",t="";
		ll ch=i+48;
		s+=ch;
		s+='s';
		t+=ch+1;
		t+='s';
		u+=ch-1;
		u+='s';
		//cout<<s<<u<<t<<nl;
		ll sum=0;
		if(mp[s])sum++;
		if(mp[u])sum++;
		if(mp[t])sum++;
		ans = min(ans, 3-sum);
	}
	//cout<<ans<<nl;
	rep(i,2,8)
	{
		string s="",u="",t="";
		ll ch=i+48;
		s+=ch;
		s+='m';
		t+=ch+1;
		t+='m';
		u+=ch-1;
		u+='m';
		ll sum=0;
		if(mp[s])sum++;
		if(mp[u])sum++;
		if(mp[t])sum++;
		ans = min(ans, 3-sum);

	}
	//cout<<ans<<nl;
	rep(i,2,8)
	{
		string s="",u="",t="";
		ll ch=i+48;
		s+=ch;
		s+='p';
		t+=ch+1;
		t+='p';
		u+=ch-1;
		u+='p';
		ll sum=0;
		if(mp[s])sum++;
		if(mp[u])sum++;
		if(mp[t])sum++;
		ans = min(ans, 3-sum);

	}
	cout<<ans;


}


int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    ll t=1;
    //pre();
    //cin>>t;
    while(t--)
    {
      solve();
    }  
}
ll powerk(ll x, ll y)
{
  if(y==0)return 1;
  if(y==1)return x%mod;
  if(y&1)
    return ((powerk((x*x)%mod, y/2)%mod)*x)%mod;
  else return powerk((x*x)%mod,y/2)%mod;
}

// Xorawar