#include <string.h>
#include <sstream>
#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <bitset>
#include <algorithm>
#include <iostream>
#include <stdlib.h>    
#include <time.h> 
#include <stack>
#include <queue>
#include <set>
 
#include <map>
#include <vector>
#include <string>
#include <stdlib.h>
 
#define ll long long
#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i)
#define frr(i,a,b) for(int i = a; i > b; --i)
#define pb push_back
#define sf scanf
 
#define pf printf
#define mp make_pair
 
using namespace std;
const int N = 1000;
const int mod = 1000000007;

int a[N],b[N];
int num[N],b_num[N];

int n,m;
int g[N][N],gg[N][N];
int ans_r[N],ans_c[N];

int check() {
	//fr(i,0,n)pf("i = %d r = %d\n",i,ans_r[i]);
	//fr(i,0,m)pf("i = %d c = %d\n",i,ans_c[i]);
	fr(i,0,n) {
		fr(j,0,m) {
	//		printf(" gg = %d x = %d\n",gg[i][j],ans_r[i]^ans_c[j]);
			if( (ans_r[i]^ans_c[j]) != gg[i][j]) return 0;
		}
	}
	return 1;
}

int sol1(){
	ans_r[0] = 1;
	for(int i = 0;i < m; ++i) {
		ans_c[i] = gg[0][i] ^ans_r[0];
	}
	for(int i = 1; i < n; ++i) {
		ans_r[i] = gg[i][0] ^ans_c[0];
	}

	if(check()) return 1;

	ans_r[0] = 0;
	for(int i = 0;i < m; ++i) {
		ans_c[i] = gg[0][i] ^ans_r[0];
	}
	for(int i = 1; i < n; ++i) {
		ans_r[i] = gg[i][0] ^ans_c[0];
	}

	if(check()) return 1;

	return 0;
}

int sol(){
	vector<int> ft(n*m);
	
	for(int ii = n*m-1; ii>=0; --ii) {
		ft[ii] = 1;
		fr(i,0,n) {
			fr(j,0,m) {
				gg[i][j] = ft[i*m+j];
				gg[i][j] ^=g[i][j];
			}
		}
		if(sol1()) return 1;
	}
	return 0;
}


int main() {
	cin>>n>>m;
	fr(i,0,n) {
		fr(j,0,m){
			cin>>g[i][j];
		}
	}
	
	if(sol()) {
		cout<<"YES"<<endl;
		fr(i,0,n)printf("%d",ans_r[i]);printf("\n");
		fr(i,0,m)pf("%d",ans_c[i]);pf("\n");
	}
	else {
		cout<<"NO"<<endl;
	}
}

