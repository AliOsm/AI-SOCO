#include <stdio.h>
#include <vector>
#include <algorithm>
#define pb push_back
#define MAXN 100005
using namespace std;

int v[MAXN];
int r[MAXN];
vector <pair <int, int> > tail[MAXN];

int search(int low, int high, int val) {
    int mid;
    int best = -1;

    while(low <= high) {
        mid = (low + high);
        if (tail[mid].back().first < val) {
            best = mid;
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    return best;
}

int LIS(int n) {
    int len = 1;
    tail[0].pb(make_pair(v[0], 0));

    for (int i = 1; i < n; i++) {
        int idx = search(0, len - 1, v[i]);
        tail[idx + 1].pb(make_pair(v[i], i));
        if (idx + 1 == len) {
            len++;
        }
    }
    return len;
}

int main(void) {
    int n;

    scanf(" %d", &n);
    for (int i = 0; i < n; i++) {
        scanf(" %d", &v[i]);
    }
    int len = LIS(n);

    for (int i = 0; i < (int)tail[len - 1].size(); i++) {
        int idx = tail[len - 1][i].second;
        r[idx] = 2;
    }
    if ((int)tail[len - 1].size() == 1) {
        r[tail[len - 1][0].second] = 3;
    }
    for (int i = len - 2; i >= 0; i--) {
        int a = 0;
        int b = 0;
        int count = 0;
        while(a < (int)tail[i + 1].size() && b < (int)tail[i].size()) {
            int va = tail[i + 1][a].first;
            int ida = tail[i + 1][a].second;
            int vb = tail[i][b].first;
            int idb = tail[i][b].second;
            if (r[ida] != 1) {
                if (vb >= va) {
                    b++;
                } else if (idb > ida) {
                    a++;
                } else {
                    count++;
                    r[idb] = 2;
                    b++;
                }
            } else {
                a++;
            }
        }
        for (int j = 0; j < (int)tail[i].size(); j++) {
            int idx = tail[i][j].second;
            if (r[idx] == 2 && count == 1) {
                r[idx] = 3;
            } else if (r[idx] == 0) {
                r[idx] = 1;
            }
        }
    }

    for (int i = 0; i < n; i++) {
        printf("%d", r[i]);
    }
    printf("\n");

    return 0;
}
