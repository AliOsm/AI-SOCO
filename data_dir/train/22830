#include<bits/stdc++.h>
using namespace std;
#define int long long 
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define F first
#define S second
int const M=3e5+10;
vector<int>cyc[M],adj[M];
int cnt=0,p[M],mark[M],ans[M],ps[M],h[M];
void froot(int ind,int v,int u)
{
	cyc[ind].pb(u);
	if(u==v)return;
	froot(ind,v,p[u]);
}
void dfs(int v,int l)
{
//	cerr<<v<<"****"<<endl;
	p[v]=l;
	mark[v]=1;
	h[v]=h[l]+1;
	for(int i=0;i<adj[v].size();i++)
	{
		int u=adj[v][i];
		if(u==l || (mark[u] && h[v]<=h[u]))continue;
		if(mark[u])
		{
			froot(cnt++,u,v);
		}
		else dfs(u,v);
	}
}
main()
{
	int n,m,a,b;
	cin>>n>>m;
	for(int i=1;i<=m;i++)scanf("%lld%lld",&a,&b),adj[a].pb(b),adj[b].pb(a);
	for(int i=1;i<=n;i++)
	{
		if(!mark[i])dfs(i,0);
	}
	for(int i=1;i<=n;i++)ans[i]=n;
	for(int i=0;i<=cnt;i++)
	{
		int minn=n+1,maxx=0;
		if(cyc[i].size())
		{
			for(int j=0;j<cyc[i].size();j++)minn=min(cyc[i][j],minn),maxx=max(cyc[i][j],maxx);
		}
		ans[minn]=min(ans[minn],maxx-1);
	}
//	for(int i=1;i<=n;i++)cout<<i<<" "<<ans[i]<<"*******"<<endl;
	for(int i=n-1;i>=1;i--)
	{
		ans[i]=min(ans[i+1],ans[i]);
	//	cerr<<i<<" "<<ans[i]<<"********"<<endl;
	}
	for(int i=1;i<=n;i++)ps[i]=ps[i-1]+ans[i]-i+1;
	int q,l,r;
	cin>>q;
	for(int i=1;i<=q;i++)	
	{
		scanf("%lld%lld",&l,&r);
		int ind=lower_bound(ans+1,ans+n+1,r)-ans;
		ind=max(ind,l);
		int an=0;
		if(ind<=r)
			an+=((r-ind+2)*(r-ind+1))/2;
		//cerr<<ps[ind-1]<<endl;
		if(ind>l)
			an+=ps[ind-1]-ps[l-1];
		printf("%lld\n",an);
	}
}
