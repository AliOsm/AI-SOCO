#include <bits/stdc++.h>
using namespace std;

const int N = 1e5 + 10;
const int mod = 1e9 + 7;

char s[N];
int C[1 << 20], pre[N];
int n;

int lowbit(int x){
	return (x & -x);
}

int sum(int x){
	int ret = 0;
	while (x > 0){
		ret += C[x];
		x -= lowbit(x);
	}
	return ret;
}

void add(int x, int d){
	while (x <= n){
		C[x] += d;
		x += lowbit(x);
	}
}

int main(){
	int q, l, r, rec, ans, temp;
	scanf("%d %d",&n,&q);
	scanf("%s",s + 1);
	memset(C, 0, sizeof(C));
	for (int i = 1; i <= n; i++){
		if (s[i] == '1') add(i, 1);
	}
	pre[0] = 1;
	for (int i = 1; i <= n; i++){
		pre[i] = pre[i - 1] * 2;
		pre[i] %= mod;
	}
	for (int i = 1; i <= q; i++){
		scanf("%d %d",&l,&r);
		rec = sum(r) - sum(l - 1);
		ans = pre[rec] - 1;
		if (ans < 0) ans += mod;
		temp = pre[r - l + 1 - rec] - 1;
		if (temp < 0) temp += mod;
		ans += (1LL * ans * temp) % mod;
		ans %= mod;
		printf("%d\n",ans);
	}
	return 0;
}