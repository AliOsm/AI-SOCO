#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ff first
#define ss second
#define PI 2*acos(0.0)
#define all(a) a.begin(),a.end()
#define INF (1<<28)
#define mem(a,x) memset(a,x,sizeof(a))
#define SEGMENT_TREE left=2*node,right=left+1,mid=(b+e)/2
using namespace std;


/*------------------------------------BITMASK------------------------------------------*/
//int Change(int N, int pos){return N= N^(1<<pos);}
//bool Check(int N, int pos){return (bool)(N &(1<<pos));}
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------DIRECTION_ARRAY-------------------------*/
//------FOUR_DIRECTION---------//
//int fx[]={0,1,0,-1};
//int fy[]={1,0,-1,0};


//------EIGHT_DIRECTION---------//
//int fx[]={0,1,1,1,0,-1,-1,-1};
//int fy[]={1,1,0,-1,-1,-1,0,1};
/*--------------------------------------------------------------------------------------*/

//int gcd(int a, int b){return (a==0)? b: gcd(b%a,a);}
//int lcm(int a, int b){return (a/gcd(a,b))*b;}

///-----------------------------START FROM HERE--------------------------------------///
int arr[100];
vector<int>output;
void shift(int id, int n){

    output.pb(arr[id]);
    for(int i=id+1; i<=n; i++)arr[i-1]=arr[i];

}


int main(){
    int n;
    scanf("%d", &n);

    for(int i=1; i<=n; i++)cin>>arr[i];
    int j=1;
    while(n){
        int id=1, mx=-1;
        for(int i=1; i<=n; i++){
            if(arr[i]>mx){
                mx=arr[i];
                id=i;
            }
            if(i>1 && abs(arr[i]-arr[i-1])>=2){
                cout<<"NO";
                return 0;

            }
        }
        shift(id, n);
        n--;
    }
    for(int i=1; i<output.size(); i++){

        if(abs(output[i]-output[i-1])>=2)
            {

                cout<<"NO";
                return 0;
            }
    }

    cout<<"YES"<<endl;

}
