//let's do it
 #include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define inf 1000000000000
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define boost1 ios::sync_with_stdio(false);
#define boost2 cin.tie(0);
#define mem(a,val) memset(a,val,sizeof a)
#define endl "\n"
#define maxn 200005

ll dist[maxn],arr[maxn],n;
map<ll,ll>banned[maxn],done[maxn];
vector<ll>v[maxn],store[maxn];
vector<pair<ll,ll> >edges;

void bfs(int src)
{
    for(ll i=1;i<=n;i++)
    dist[i]=inf;
    dist[src]=0;
    queue<ll>q;
    q.push(src);
    while(!q.empty())
    {
        ll x=q.front();
        q.pop();
        for(ll i=0;i<v[x].size();i++)
        {
            ll y=v[x][i];
            if(banned[x].find(y)!=banned[x].end())
            continue;
            if(dist[y]>dist[x]+1)
            {
                dist[y]=dist[x]+1;
                q.push(y);
            }
        }
    }
    return;

}

int main()
{
    boost1;boost2;
    ll i,j,x,y,ans;
    cin>>n;
    for(i=1;i<=n;i++)
    cin>>arr[i];
    for(i=1;i<=n;i++)
    {
        for(j=0;j<=60;j++)
        {
            if(arr[i]&(1LL<<j))
            store[j].pb(i);
        }
    }
    for(i=0;i<=60;i++)
    {
        if(store[i].size()>=3)
        {
            cout<<"3";
            return 0;
        }
    }
    for(i=0;i<=60;i++)
    {
        if(store[i].size()==2)
        {
            x=store[i][0];
            y=store[i][1];
            if(x>y)
            swap(x,y);
            if(done[x].find(y)!=done[x].end())
            continue;
            v[x].pb(y);
            v[y].pb(x);
            edges.pb(mp(x,y));
            done[x][y]=1;
        }
    }
    ans=inf;
    for(auto it:edges)
    {
        x=it.F;
        y=it.S;
        banned[x][y]=1;
        banned[y][x]=1;
        bfs(x);
        if(dist[y]<=inf && ans>dist[y]+1)
        ans=dist[y]+1;
        banned[x].erase(y);
        banned[y].erase(x);
    }
    if(ans>=inf)
    ans=-1;
    cout<<ans;
    return 0;
}
