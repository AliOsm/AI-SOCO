#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pf push_front
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("board.in");ofstream out("board.out");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

int main() {
    fast;
    str t; int z; cin>>t>>z;
    vec<set<int>> m(26, set<int>());
    for(int q=0; q<t.size(); q++) m[t[q]-'a'].insert(q);
    for(; z; z--){
        int c,x; cin>>c>>x;
        if(c==1){
            char y; cin>>y;
            x--;
            m[t[x]-'a'].erase(x);
            m[y-'a'].insert(x);
            t[x] = y;
        }
        else{
            int y; cin>>y;
            x--; y--;
            int o = 0;
            for(int q=0; q<26; q++){
                o+= m[q].size()==0 || *prev(m[q].end())<x ? 0 : *m[q].lower_bound(x)<=y;
            }
            cout<<o<<"\n";
        }
    }
}