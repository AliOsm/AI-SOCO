#include <bits/stdc++.h>

using namespace std;
int n,m,k;
int dp[1000][100][2];

int solve(int i,int mod,bool found,int currMod) {
    if(i == n)
        return found;

    if(dp[i][mod][found] != -1)
        return dp[i][mod][found];

    int ans = 0;
    for(int j = i == n-1?1:0;j<10;j++) {
        int newMod = (mod + j*currMod) % k;
        bool newFound = found?found:j!= 0 && newMod == 0;
        ans = (ans + solve(i+1,newMod,newFound,currMod * 10 % k ) ) % m;
    }

    return dp[i][mod][found] = ans;
}


int main()
{
    cin>>n>>k>>m;
    memset(dp,-1,sizeof dp);
    cout<<solve(0,0,0,1%k);
    return 0;
}
