#include <bits/stdc++.h>
using namespace std;
typedef long long int64;
typedef complex<double> cmplx;
const double pi = 3.14159265358979323846;
const int inf = (int)2e+9 + 2;
const int mod = (int)1e+9 + 7;
const double eps = 1e-8;
const int N = 100'000;

int n, m, k;
string s[1000];
char a[1000][1000];

void mark(int x, int y)
{
    if (s[x][y] == '#' && s[x][y + 1] == '#' && s[x][y + 2] == '#'
        && s[x + 1][y] == '#' && s[x + 1][y + 2] == '#'
        && s[x + 2][y] == '#' && s[x + 2][y + 1] == '#' && s[x + 2][y + 2] == '#') {
        a[x][y] = 1;
        a[x][y + 1] = 1;
        a[x][y + 2] = 1;
        a[x + 1][y ] = 1;
        a[x + 1][y + 2] = 1;
        a[x + 2][y] = 1;
        a[x + 2][y + 1] = 1;
        a[x + 2][y + 2] = 1;
    }
}

void solve()
{
    cin >> n >> m;
    getline(cin, s[0]);
    for (int i = 0; i < n; ++i)
        getline(cin, s[i]);
    for (int i = 0; i < n - 2; ++i) {
        for (int j = 0; j < m - 2; ++j) {
            mark(i, j);
        }
    }
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            if (s[i][j] == '#' && !a[i][j]) {
                cout << "NO";
                return;
            }
        }
    }
    cout << "YES";
}

void precalc()
{

}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0), cout.tie(0);
    precalc();
    int test = 1;
    //cin >> test;
    for (; test; --test)
        solve();
    return 0;
}
