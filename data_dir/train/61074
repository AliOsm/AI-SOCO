#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

#define ll long long int
#define pb push_back
#define mp make_pair
#define ld long double
#define sz(a) (ll)(a).size()
#define endl "\n"

typedef tree<pair<ll,ll> ,null_type,less<pair<ll,ll> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
//K-th smallest
//cout << k << "kth smallest: " << *A.find_by_order(k-1) << endl;
//NO OF ELEMENTS < X
//cout << "No of elements less than " << X << " are " << A.order_of_key(X) << endl;

int main()
{
	std::ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

 	ll t;
 	cin >> t;
 	while(t--)
 	{
 		string a;
 		cin >> a;
 		ll n = a.length(), c = 0, nx[n], curr = -1, var = 0, len = 0, maxn = 200000;
 		for(int i=n-1;i>=0;i--)
 		{
 			if(a[i] - '0' == 1) curr = i, nx[i] = i;
 			else nx[i] = curr;
 		}
 		for(int i=0;i<n;i++)
 		{
 			len = 0;
 			var = 0;
 			if(nx[i] == -1) continue;
 			len = nx[i] - i;
 			for(int j=nx[i];j<n;j++)
 			{
 				var = var * 2 + a[j] - '0';
 				len += 1;
 				if(var == len) c += 1;
 				if(var > maxn) break;
 			}
 		}
 		cout << c << endl;
 	}   
    return 0;
}