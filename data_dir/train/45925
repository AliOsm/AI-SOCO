//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")


#include<bits/stdc++.h>

using namespace std;

typedef complex<long double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back

const int maxn=(int)2e5+5;
const ll mod=(ll)(1e9+7);
ll a[maxn],b[maxn],pre[maxn];
ld pi=2.0*acos(0.0);

int mul(ll a,ll b)
{
	ll ret=(a*b);
	
	if(ret>=mod)
	{
		ret%=mod;
	}
	
	return (int)ret;
}

int add(ll a,ll b)
{
	ll ret=a+b;
	
	if(ret>=mod)
	{
		ret%=mod;
	}
	
	return (int)ret;
}

int sub(ll a,ll b)
{
	ll ret=a-b;
	
	if(ret<0)
	{
		ret+=mod;
	}
	
	return (int)ret;
}

int main()
{
	ios_base::sync_with_stdio(0);
		
	int n,q;
	
	cin>>n>>q;
	
	for(int i=1;i<=n;i++)
	{
		cin>>a[i];
		
		pre[i]=pre[i-1]+a[i];
	}
	
	int last=1;ll curr=a[1];
	
	for(int i=0;i<q;i++)
	{
		ll val;
		
		cin>>val;
			
		if(val<curr)
		{
			curr-=val;
			
			cout<<(n-last+1)<<endl;
			
			continue;
		}
		
		int low=last,high=n;
		
		while(low<high)
		{
			int mid=(low+high+1)>>1;
			
			ll now=pre[mid]-pre[last-1]+(curr-a[last]);
			
			if(val>=now)
			{
				low=mid;
			}
			
			else
			{
				high=mid-1;
			}
		}
		
		if(low==n)
		{
			last=1;curr=a[1];
			
			cout<<n<<endl;
			
			continue;
		}
		
		ll left=val-(pre[low]-pre[last-1]+curr-a[last]);
		
		last=low+1;curr=a[last]-left;
		
		cout<<(n-last+1)<<endl;
	}
	
	return 0;
}



