#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 100000 + 10;
const int M = 1000000007;
const double eps = 1e-9;
const double PI = acos(-1);
const int oo = 1000000000;
#define pb push_back
int n,m,pre[2][2003][2003],dp[2][2003][2003],fen[2][2003][2003];
char g[2003][2003];

int upd(int k, int i, int j, int val){
	int lm=k?m:n;
	while(j<=lm){
		fen[k][i][j]=(fen[k][i][j]+val)%M;
		j+=j&-j;
	}
}

int get(int k, int i, int j){
	int ret=0;
	for(int t=j; t; t-=t&-t)
		ret=(ret+fen[k][i][t])%M;
	return ret;
}

int go(int k, int i, int j){
	if(k)swap(i,j);
	int ct=pre[k][i][j+1];
	int l=j+1, r=(k?n:m)-ct;
	if(l>r) return 0;
	int ret=(get(k^1, i, r) - get(k^1, i, l-1) + M)%M;
	upd(k,j,i,ret);
	return ret;
}

int main(){
	cin>>n>>m;
	for(int i=1; i<=n; ++i)
		scanf("%s", g[i]+1);
	if(n==1 && m==1)
		return cout<<1<<endl,0;
	if(g[n][m]=='R')
		return cout<<0<<endl,0;
	for(int i=n; i; --i)
		for(int j=m; j; --j)
			pre[0][i][j]=pre[0][i][j+1]+(g[i][j]=='R'),
			pre[1][j][i]=pre[1][j][i+1]+(g[i][j]=='R');
	for(int i=m-1; i; --i){
		if(g[n][i]=='R')break;
		dp[0][n][i]=1;
		upd(0,i,n,1);
	}
	for(int i=n-1; i; --i){
		if(g[i][m]=='R')break;
		dp[1][i][m]=1;
		upd(1,i,m,1);
	}
	for(int i=n-1; i; --i){
		for(int j=m-1; j; --j){
			for(int k=0; k<2; ++k){
				dp[k][i][j]=go(k,i,j);
			}
		}
	}
	cout<<(dp[0][1][1]+dp[1][1][1])%M<<endl;

	return 0;
}