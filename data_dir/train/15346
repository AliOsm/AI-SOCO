#include<stdlib.h>
#include<stdio.h>
#include<math.h>
#define N 100001
#include<set>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;
#define mp make_pair
int n,m,ans,a[N],r[N];
set<pair<int,int> >s,t;
bool cmp(int x,int y){return a[x]>a[y];}
int check()
{
	if((*s.begin()).first!=(*s.rbegin()).first)return -1;
	return s.size();
}
void print()
{
	for(auto i=t.begin();i!=t.end();i++)
	  cout<<(*i).first<<" "<<(*i).second<<endl;
	cout<<endl;
}
int main()
{
	scanf("%d",&n);
	s.insert(mp(n,1));
	t.insert(mp(1,n));
	for(int i=1;i<=n;i++)
	  scanf("%d",&a[i]),r[i]=i;
	sort(r+1,r+n+1,cmp),ans=a[r[1]]+1;
	for(int i=1;i<n;i++)
	  {
	  int pos=r[i];
	  auto it=t.upper_bound(mp(pos+1,0));it--;
	  int l1=(*it).first,r1=pos-1,l2=pos+1,r2=(*it).second;
	  //cout<<l1<<" "<<pos<<" "<<r2<<endl;
	  s.erase(mp((*it).second-(*it).first+1,(*it).first)),t.erase(*it);
	  if(l1<=r1)t.insert(mp(l1,r1)),s.insert(mp(r1-l1+1,l1));
	  if(l2<=r2)t.insert(mp(l2,r2)),s.insert(mp(r2-l2+1,l2));
	  int res=check();
	  if(res>m)m=res,ans=a[r[i+1]]+1;
	  if(res==m)ans=min(ans,a[r[i+1]]+1);
	  //print();
	  }
	return printf("%d\n",ans),0;
}
