#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>

using namespace std;
typedef long long mt;
//#define mt int
#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= b; ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

#define N 51
#define K 5
#define M (100001)
#define INF 100000000000000007//10000000000000007// 1e16 + 7
#define MOD 1000000007ll  //1000000007//1e9 + 7
#define EPS 1e-9
#define MAX 1000000000000000001
//#pragma comment(linker, "/STACK:200000000")

mt n, m, answ, ln;
char s[N][N], si[N * 2];

pair<mt, mt> b, e;

mt bx[] = { -1, 1, 0, 0 };
mt by[] = { 0, 0,  -1, 1 };

mt dx[4], dy[4];

void test() 
{
	mt pos_x = b.first, pos_y = b.second;
	rep(0, ln, i) {
		pos_x += dx[si[i] - '0'];
		pos_y += dy[si[i] - '0'];

		if (pos_x == e.first && pos_y == e.second) {
			++answ;
			return;
		}

		if (pos_x < 0 || pos_x >= n || pos_y < 0 || pos_y >= m || s[pos_x][pos_y] == '#')
			return;
	}
}

mt v[4];
void dfs(mt st) 
{
	if (st == 4) { test(); return; }
	rep(0, 4, i) {
		bool ok = true;
		rep(0, st, j)
			if (i == v[j])
				ok = false;
		if (ok) {
			v[st] = i;
			dx[st] = bx[i];
			dy[st] = by[i];

			dfs(st + 1);
		}
	}
}

int main(void)
{
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	scanf("%lld %lld", &n, &m);
	rep(0, n, i)
		scanf("%s", s[i]);

	rep(0, n, i)
		rep(0, m, j) {
		if (s[i][j] == 'S') b = make_pair(i, j);
		else if (s[i][j] == 'E') e = make_pair(i, j);
	}

	scanf("%s", si);
	ln = strlen(si);

	dfs(0);
	printf("%lld\n", answ);
	return 0;
}