#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <cassert>
#include <queue>
using namespace std;
#define forr(i, a, b) for(ll i = (a); i < (ll) (b); i++)
#define forn(i, n) forr(i, 0, n)
#define pb push_back
#define fst first
#define snd second
#define SZ(x) ((ll)x.size())
typedef long long ll;
#define dforn(i, n) for(ll i = n - 1; i >= 0; i--)

const ll MAXN = -1;

ll a, b, xa, xb, ya, yb;

pair<ll, ll> getCuad(ll x, ll y){
  if(x > 0 && -x < y && y < x) return {-1, 1};
  if(x < 0 && x < y && y < -x) return {1, -1};
  if(y < 0 && y < x && x < -y) return {-1, -1};
  if(y > 0 && -y < x && x < y) return {1, 1};
  assert(false);
}

pair<ll, ll> getCoord(ll x, ll y){
  pair<ll, ll> M = getCuad(x, y);
  int X = abs(x+y)/a;
  int Y = abs(x-y)/b;
  X = X - (M.fst == -1 ? 1 : 0);
  Y = Y - (M.snd == -1 ? 1 : 0);
  return make_pair(X, Y);
}

void floordiv(int x, int y, int &q, int &r){
  q=x/y;r=x%y;
  if((r!=0)&&(r<0)!=(y<0))q--,r+=y;
}

int main() {
  //~ freopen("input.in", "r", stdin);
  while(scanf("%lld%lld%lld%lld%lld%lld", &a, &b, &xa, &ya, &xb, &yb) >= 1){
    a *= 2; b *= 2;
    
    int q1, r1; floordiv(xa+ya, a, q1, r1);
    int q2, r2; floordiv(xa-ya, b, q2, r2);
    int q3, r3; floordiv(xb+yb, a, q3, r3);
    int q4, r4; floordiv(xb-yb, b, q4, r4);
    
    //~ printf("%d, %d, %d, %d\n", q1, q2, q3, q4);
    int v1 = abs(q1 - q3);
    int v2 = abs(q2 - q4);
    printf("%d\n", max(v1, v2));
    
    
    //~ pair<ll, ll> A = getCoord(xa, ya);
    //~ pair<ll, ll> B = getCoord(xb, yb);
    //~ printf("%lld %lld %lld %lld\n", A.fst, A.snd, B.fst, B.snd);
    //~ ll ansX = abs(A.fst - B.fst);
    //~ ll ansY = abs(A.snd - B.snd);
    //~ printf("%lld\n", max(ansX, ansY));
  }
  return 0;
}
