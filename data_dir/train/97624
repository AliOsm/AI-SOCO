#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define F first
#define S second 
#define all(x) x.begin(), x.end()
#define sort(x) sort(all(x))
#define debug(x)  cerr << #x << " = " << x << endl
#define endl '\n'
#define sync ios::sync_with_stdio(0), cin.tie(0)

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef vector<int> vi;

const ll MOD = 1e9 + 7;
const ll MAXN = 2e5 + 300 ;
const ll MINN = 1e3 + 20 ;

ll a[MAXN], b[MAXN];

int gcd(int a, int b) { return (b ? gcd(b, a % b) : a); }
int mod(int n) { while(n < 0) n += MOD; return n % MOD; }

bool Mark[MAXN];

int n , m;
int cnt ;
vector<int> adj[MAXN];
int cat[MAXN];
int ans ;
 
void input (){
  	cin >> n >> m;
  	for (int i = 1 ; i <= n ; i ++) cin >> cat[i] ;
	for (int i = 0 ; i  < n - 1 ; i ++) {
		int x , y ;
		cin >> x >> y;
		adj[x].pb(y);
		adj[y].pb(x);
	}
	
	
}

void dfs(int v , int cnt ){
    if (cnt > m) return ;
  	Mark[v] = true ;
  	if (adj[v].size() == 1 and v > 1) {
  	    ans ++ ;
  	    return ;
    }
  	for (int i = 0 ; i < adj[v].size()  ; i ++){
  		int u = adj[v][i] ;
		if (!Mark[u]){
		    if (cat[u]) dfs(u , cnt + 1);
		    else dfs (u , 0) ;
        }	
	}
	return ;
}



int main(){
    sync;
    input();
    if (cat[1]) dfs (1 , 1) ;
    else dfs (1 , 0 ) ;
    cout << ans ;
	return 0;
}
