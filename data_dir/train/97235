#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(x) (int)(x).size()
#define li long long
#define ld long double
#define x first
#define y second
#define pt pair<int, int>
#define pll pair<li, li>
#define forn(i, t) for(int i = 0; i < (t); i++)
#define fore(i, f, t) for(int i = (f); i < (t); i++)
#define forr(i, f, t) for(int i = (f) - 1; i >= (t); i--)
#define all(x) (x).begin(), (x).end()
#define ins insert

using namespace std;


const int INF = 1e9;
const int MOD = 1e9 + 7;
const li INF64 = 1e18;
const ld EPS = 1e-7;

mt19937 myrand(time(NULL));

li n;


bool read(){
	if(scanf("%lld", &n) != 1)
		return 0;
	return 1;
}


void solve(){
	li k = n;
	int sum = 0, sum1 = 0, cnt = 0;
	int cur[20], num[20];
	while (k){
		sum += (k / 10 > 0 ? 9 : k - 1);
		sum1 += k % 10;
		cur[cnt] = sum1;
		num[cnt++] = k % 10;
		k /= 10;
	}
	if (sum > sum1){
		fore(i, 1, cnt)
			if (num[i] != 0 && sum1 - cur[i - 1] - 1 + 9 * i == sum){
				li ans = 0;
				forr(j, cnt, i + 1)
					ans = ans * 10 + num[j];
				ans = ans * 10 + num[i] - 1;
				forn(j, i)
					ans = ans * 10 + 9;
				printf("%lld\n", ans);
				return;
			}
		li ans = 0;
		ans = num[cnt - 1] - 1;
		forn(i, cnt - 1)
			ans = ans * 10 + 9;
		printf("%lld\n", ans);
		return;
	}
	printf("%lld\n", n);
}


int main(){
	#ifdef _DEBUG
		freopen("input.txt", "r", stdin);
	#endif
	while(read())
		solve();
	return 0;
}