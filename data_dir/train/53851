#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define ld long double
#define EPS 1e-16
#define OO (long long)1e18
#define all(x) x.begin(),x.end()
#define allr(x) x.rbegin(),x.rend()
const int MOD = (long long) (1e9 + 7);
const long long N = 2e5;

vector<ll> v;
ll ans = 0, K = 0;

bool can(int k, int s) {
	vector<ll> st;
	for (int i = 0; i < (int) v.size(); i++)
		st.push_back((k * 1ll * (i + 1)) + v[i]);
	int sz = 0;
	sort(all(st));
	for (int i = 0; i < (int) st.size(); i++) {
		if (s >= st[i] && sz < k) {
			sz++;
			s -= st[i];
			if (sz == k) {
				break;
			}
			continue;
		}
		break;
	}
	if (sz == k) {
		ans = s;
		K = sz;
	}
	return sz >= k;
}

int main() {
	int n, s;
	scanf("%d %d", &n, &s);
	v.resize(n);
	for (int i = 0; i < n; i++)
		scanf("%lld", &v[i]);
	int st = 0, en = n, mid;
	for (int i = 0; i < 50; i++) {
		mid = st + (en - st) / 2;
		if (can(mid, s))
			st = mid + 1;
		else
			en = mid - 1;
	}
	printf("%lld %lld\n", K, s - ans);
}
