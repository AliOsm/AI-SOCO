#include<bits/stdc++.h>

using namespace std;

#define    pf               printf
#define    PF(a)            printf("%d\n",(a))
#define    PF2(a,b)         printf("%d %d\n",(a), (b))
#define    PF3(a,b,c)       printf("%d %d %d\n",(a), (b), (c))
#define    PFL(a)           printf("%lld\n",(a))
#define    PFL2(a,b)        printf("%lld %lld\n",(a), (b))
#define    PFL3(a,b,c)      printf("%lld %lld %lld\n",(a), (b), (c))
#define    get(a)           cin>>a
#define    sf               scanf
#define    SF(a)            scanf("%d",&a)
#define    SF2(a,b)         scanf("%d %d",&a, &b)
#define    SF3(a,b,c)       scanf("%d %d %d",&a, &b, &c)
#define    SFL(a)           scanf("%lld",&a)
#define    SFL2(a,b)        scanf("%lld %lld",&a, &b)
#define    SFL3(a,b,c)      scanf("%lld %lld %lld",&a, &b, &c)
#define    gl(a)            getline(cin,(a))
#define    gc()             getchar()
#define    pb               push_back
#define    m_p              make_pair
#define    pc()             printf("Case %d: ",tt++)
#define    tc()             cout<<"Case "<<tt++<<": "
#define    SZ(a)            (int)(a).size()
#define    all(a)           a.begin(),a.end()
#define    FF               first
#define    SS               second
#define    MAX              2134567891
#define    MOD              1000000007
#define    MM               100005
#define    PI               2*acos(0.0)
#define    cond(n,m)        (xx>=0 && xx<(n) && yy>=0 && yy<(m))

#define    mem(a)           memset((a),0,sizeof (a))
#define    SET(a)           memset((a),-1,sizeof (a))
#define    output           freopen("output.txt","w",stdout);
#define    input            freopen("input.txt","r",stdin);
#define    I_O              ios_base::sync_with_stdio(0); cin.tie(0)
#define    rep(a)           for(int i=0;i<(a);i++)
#define    FOR(a,b)         for(int i=(a);i<(b);i++)
#define    REP(a)           for(int j=0;j<(a);j++)
#define    rev(a)           for(int i=(a);i>=0;i--)
#define    fr(i,n)          for(i=0;i<n;i++)
#define    fr1(i,n,m)       for(i=n;i<m;i++)

int dx[]  = {0, 0, 1, -1};
int dy[]  = {1, -1, 0, 0};
int dx8[] = {0, 0, 1, 1, 1, -1, -1, -1};
int dy8[] = {1, -1, -1, 0, 1, -1, 0, 1};
int kx8[] = {1, 1, 2, 2, -1, -1, -2, -2};
int ky8[] = {2, -2, 1, -1, 2, -2, 1, -1};

typedef long long ll;
typedef unsigned long long llu;
typedef priority_queue < int > PQ;
typedef pair < int, int > pi;
typedef pair < ll , pi > pii;
typedef vector < ll > vi;
typedef vector < ll > vl;
//typedef vector < string > vs;

/*
//FUNCTION//
ll bigmod(ll a, ll b, ll c)
{
    if(b==0)return 1%c;ll x=bigmod(a,b/2,c);x=x*x%c;
    if(b%2==1)x=x*a%c;return x;
}

ll poww(ll a, ll b)
{
    if(b==0)return 1;ll x=poww(a,b/2);x=x*x;if(b%2==1)x=x*a;return x;
}

ll mod_inverse(ll a, ll mod){return bigmod(a,mod-2,mod);}

ll LCM(ll a, ll b){ return a*b/ __gcd(a,b);}

int pr = 10000000;
vi primelist;
bool a[MM*100];
void seive( )
{
    int i,j,k=sqrt(pr);
    a[1]=1;
    primelist.pb(2);
    for(i=4;i<=pr;i+=2)a[i]=1;
    for(i=3;i<=k;i+=2)if(!a[i])for(j=i*i;j<=pr;j+=2*i)a[j]=1;
    for(i=3;i<=pr;i+=2)if(!a[i])primelist.pb(i);
}

ll fact_divs( ll n, ll p)
{
    ll cnt=0;while(p<=n){cnt += n/p;n /= p;}return cnt;
}
struct point{double x, y;};
double area( point A, point B, point C){
return 0.5*(A.x*(B.y-C.y) - A.y*(B.x-C.x) + B.x*C.y - C.x*B.y);
}

//*/
int a[MM*2];

int sum[12][MM*2*3][2];

void update(int id, int l, int r, int k, int L, int val)
{
    if(l==r)
    {
        sum[id][k][0] = val;
        sum[id][k][1] = MAX;
        return;
    }
    int mid = (l+r)/2;
    if(L<=mid)
    {
        update(id,l,mid,k*2,L,val);
    }
    else
    {
        update(id,mid+1,r,k*2+1,L,val);
    }
    if(sum[id][k*2][0]<sum[id][k*2+1][0])
    {
        sum[id][k][0] = sum[id][k*2][0];
        sum[id][k][1] = min(sum[id][k*2][1],sum[id][k*2+1][0]);
    }
    else
    {
        sum[id][k][0] = sum[id][k*2+1][0];
        sum[id][k][1] = min(sum[id][k*2+1][1],sum[id][k*2][0]);
    }
}
pi query(int id, int l, int r, int k, int L, int R)
{
    if(l>R || r<L)return {MAX,MAX};
    if(l>=L && r<=R)
    {
        return {sum[id][k][0],sum[id][k][1]};
    }
    int mid = (l+r)/2;
    pi p = query(id,l,mid,k*2,L,R);
    pi q = query(id,mid+1,r,k*2+1,L,R);
    pi rr;
    if(p.first<q.first)
    {
        rr.first = p.first;
        rr.second = min(p.second,q.first);
    }
    else
    {
        rr.first = q.first;
        rr.second = min(p.first,q.second);
    }
    return rr;

}

int main() {

    I_O;
    int n,m;
    SF2(n,m);
    for(int i=1;i<=n;i++)
    {
        SF(a[i]);
        ll tmp = a[i],cnt=1;
        for(int j=1;j<=10;j++)
        {
            if(tmp%10)
            {
                update(cnt,1,n,1,i,a[i]);

            }
            else
            {
                update(cnt,1,n,1,i,MAX);

            }
            cnt++;
            tmp/=10;
        }
    }
    while(m--)
    {
        int typ,id,val,l,r;
        SF(typ);
        if(typ==1)
        {
            SF2(id,val);
            ll tmp = val,cnt=1;
            for(int i=1;i<=10;i++)
            {
                if(tmp%10)
                {
                    update(cnt,1,n,1,id,val);

                }
                else
                {
                    update(cnt,1,n,1,id,MAX);

                }
                cnt++;
                tmp/=10;
            }
        }
        else
        {
            SF2(l,r);
            int mx = MAX;
            for(int i=1;i<=10;i++)
            {
                pi v = query(i,1,n,1,l,r);
                if(v.first<MAX && v.second<MAX)
                {
                    mx = min(mx,v.first+v.second);

                }

            }
            if(mx==MAX)mx = -1;
            PF(mx);
        }
    }
    return 0;
}
/*
4 5
300 10001 20 20
2 1 3
1 1 310
2 1 3
2 3 3
2 3 4

10 10
1000000000
 100000000
  10000000
   1000000
    100000
     10000
      1000
       100
        10
         1

2 1 10
*/
