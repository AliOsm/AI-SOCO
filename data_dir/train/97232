#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

const int N=1010;
const int mod=409;
const int inf=0x3f3f3f3f;

using namespace std;

#define sp(x) ((x)*(x))

int x,y,n,d;

struct data
{
	int x,y;
	data() {}
	data(int x,int y) :x(x),y(y) {}
};

#define pb push_back
#define sz(x) ((x).size())

vector<data> vt;

int dp[N][N][4];
int sw(int x)
{
	if(x==0) return 0;
	if(x==1) return 2;
	if(x==2) return 1;
	return 3;
}

int dfs(int x,int y,int s)
{
	if(sp(x-mod)+sp(y-mod)>sp(d)) return 1;
	int &ret=dp[x][y][s];
	if(ret+1) return ret;
	for(int i=0;i<sz(vt);i++)
		if(!dfs(x+vt[i].x,y+vt[i].y,0)) return ret=1;
	//if((!(s&1)) && (!dfs(y,x,sw(s)|2))) return ret=1;
	return ret=0;
}

int main()
{
	scanf("%d%d%d%d",&x,&y,&n,&d);
	for(int i=0;i<n;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		vt.pb(data(x,y));
	}
	memset(dp,-1,sizeof(dp));
	//for(int i=mod;i<=mod+d;i++)
		//for(int j=mod;j<=mod+d;j++)
			//for(int k=0;k<4;k++)
				//printf("dp[%d][%d][%d]=%d\n",i-mod,j-mod,k,dfs(i,j,k));
	if(dfs(x+mod,y+mod,0)) puts("Anton");
	else puts("Dasha");
	return 0;
}
