#include <bits/stdc++.h>
using namespace std;

#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pii;
typedef pair<pii, ll> para;
const ll inf = 1e9 + 7;
const ll maxN = 5e6 + 5;
const ll MOD = 998244353;

int n, m, a, b, c;
vector<pii> edges[maxN];
int dpNew[maxN], dpPrev[maxN];

int main() {
	ios_base::sync_with_stdio(0);
	cin >> n >> m;
	REP(i, m) {
		cin >> a >> b >> c;
		edges[c].pb(pii(a, b));
	}
	RI(i, 1e5 + 2) {
		for (auto edge: edges[i]) {
			if (dpNew[edge.nd] == 0) dpNew[edge.nd] = dpPrev[edge.nd];
			dpNew[edge.nd] = max(dpNew[edge.nd], dpPrev[edge.st] + 1);
		}

		for (auto edge: edges[i]) {
			dpPrev[edge.nd] = dpNew[edge.nd];
		}
		for (auto edge: edges[i]) {
			dpNew[edge.nd] = 0;
		}
	}
	int ans = 0;
	RI(i, n) ans = max(ans, dpPrev[i]);
	cout << ans;
	return 0;
}
