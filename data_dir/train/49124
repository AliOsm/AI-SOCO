//raja1999
#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx


using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >

//std::ios::sync_with_stdio(false);
int init[100003],gol[100003],k;
vi v;
vector< vi>  adj(109001);
int dfs(int cur,int cou1,int cou2,int prev,int level)
{
	//cout<<"hi"<<endl;
	int j,c,flag;
	level++;
	//if(cur==2)
		//cout<<flag<<endl;
	rep(j,adj[cur].size())
	{
		flag=0;
		c=adj[cur][j];
		if(c!=prev)
		{
			if(init[c]!=gol[c])
			{
				//cout<<"hi"<<endl;
				if(level%2==0&&cou2%2==0)
				{
					k++;
					v.pb(c);
					flag=1;
					dfs(c,cou1,cou2+1,cur,level);
				}
				else if(level%2==1&&cou1%2==0)
				{
					k++;
					v.pb(c);
					flag=1;
					dfs(c,cou1+1,cou2,cur,level);
				}
			}
			if(init[c]==gol[c])
			{
				if(level%2==0&&cou2%2==1)
				{
					k++;
					v.pb(c);
					flag=1;
					dfs(c,cou1,cou2+1,cur,level);
				}
				else if(level%2==1&&cou1%2==1)
				{
					k++;
					v.pb(c);
					flag=1;
					dfs(c,cou1+1,cou2,cur,level);
				}
			}
			if(flag==0){
				//cout<<c<<endl;
				dfs(c,cou1,cou2,cur,level);
			}
		}
	}
}
int main(){
	std::ios::sync_with_stdio(false);
	int n,i,u,vvvvv;
	cin>>n;
	rep(i,n-1)
	{
		cin>>u>>vvvvv;
		//cout<<u<<" "<<vvvvv<<endl;
		adj[u].pb(vvvvv);
		adj[vvvvv].pb(u);
	}
	rep(i,n)
	{
		cin>>init[i+1];
	}
	//cout<<adj[13][1]<<endl;
	rep(i,n)
	{
		 cin>>gol[i+1];
	}
	rep(i,n)
	{
		//cout<<init[i+1]<<" "<<gol[i+1]<<endl;
	}
	if(init[1]!=gol[1]){
		k++;
		v.pb(1);
		dfs(1,1,0,0,1);
	}
	else
		dfs(1,0,0,0,1);
	cout<<k<<endl;
	rep(i,v.size())
	{
		cout<<v[i]<<endl;
	}//
} 
