#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <map>
#include <iostream>
#include <vector>
#include <set>
#include <functional>

using namespace std;

const int maxn = 5 * 1e5 + 10;

long double lt = 0, rt = 1e9 + 1e9 + 1, eps = 1e-12;
pair<long long, long long> ft[maxn], sc[maxn];
int lenft, lensc;

bool offer(long double t) {
	int i, j;
	j = 0;
	i = 0;

	long double bst = 1e19; //??

	while (j < lensc) {
		if (j > 0) {
			bst += (sc[j].first - sc[j - 1].first);
		}

		while (i < lenft && ft[i].first < sc[j].first) {
			long double a = (sc[j].first - ft[i].first) - ft[i].second * t;
			if (a < bst) bst = a;
			++i;
		}

		if (bst <= t * sc[j].second) return true; // 1e-15 ?? 
		++j;
	}

	return false;
}

int main() {

#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

	lenft = lensc = 0;

	int n;
	cin >> n;
	for (int i = 0; i < n; ++i) {
		int x, v;
		scanf("%d%d", &x, &v);
		if (v > 0) {
			ft[lenft++] = make_pair(x, v);
		} else {
			sc[lensc++] = make_pair(x, -v);
		}
	}

	if (lensc == 0 || lenft == 0 || sc[lensc - 1].first < ft[0].first) {
		cout << -1;
		return 0;
	}

	while (abs(rt - lt) > eps * max((long double)1.0, rt)) { //
		long double mt = (lt + rt) / 2.0;
		if (offer(mt))
			rt = mt;
		else
			lt = mt;
	}

	printf("%.15lf", rt);

	return 0; 
}