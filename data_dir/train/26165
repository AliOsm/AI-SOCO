// KALAM
#include<bits/stdc++.h>
using namespace std;
typedef pair < int , int > pii;
const int N = 3e5 + 77;
const int Mod = 1e9 + 7;
int n , T , a[N] , t[N] , l , r;
bool solve(int c){
	priority_queue < int , vector < int > , greater < int > > q;
	for(int i = 1;i <= n;i++){
		if(a[i] >= c){
			q.push(t[i]);
		}
	}
	long long sum = 0;
	if(q.size() < c)return false;
	while(c--){
		sum += q.top();
		q.pop();
	}
	return sum <= T;
}
int main(){
	scanf("%d %d", & n , & T);
	l = 0;r = n + 1;
	for(int i = 1;i <= n;i++){
		scanf("%d %d", & a[i] , & t[i]);
	}
	while(r - l > 1){
		if(solve((l + r) / 2))l = (l + r) / 2;
		else r = (l + r) / 2;
	}
	printf("%d\n%d\n",l,l);
	priority_queue < pii , vector < pii > , greater < pii > > q;
	for(int i = 1;i <= n;i++){
		if(a[i] >= l){
			q.push(make_pair(t[i],i));
		}
	}
	while(l--){
		printf("%d ",q.top().second);
		q.pop();
	}
	return (0);
}
