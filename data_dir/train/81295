#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <string>
#include <cstring>
// DON'T DIVIDE
// Try different approaches
using namespace std;

pair<int, int> a[4], b[4];

int main()
{
	ios::sync_with_stdio(0);
	int axmin = 100, axmax = -100, aymin = 100, aymax = -100;
	int bxmin = 100, bxmax = -100, bymin = 100, bymax = -100; 
	for(int i = 0; i < 4; i++)
	{
		cin >> a[i].first >> a[i].second;
		axmin = min(axmin, a[i].first);
		axmax = max(axmax, a[i].first);
		aymin = min(aymin, a[i].second);
		aymax = max(aymax, a[i].second);
	} 
	for(int i = 0; i < 4; i++)
	{
		cin >> b[i].first >> b[i].second;
		bxmin = min(bxmin, b[i].first);
		bxmax = max(bxmax, b[i].first);
		bymin = min(bymin, b[i].second);
		bymax = max(bymax, b[i].second);
	}

	if(axmin > bxmax || axmax < bxmin || aymin > bymax || aymax < bymin)
	{
		cout << "NO\n";
		return 0;
	}

	for(int i = 0; i < 4; i++)
	{
		bool poss = false, under = false;
		double x1 = b[i].first, y1 = b[i].second;
		double x2 = b[(i + 1) % 4].first, y2 = b[(i + 1) % 4].second;
		if(y1 == bymax || y2 == bymax)
			under = true;
		for(int j = 0; j < 4; j++)
		{
			if(under)
			{
				double truey = (y2 - y1) * (a[j].first - x1) / (x2 - x1) + y1;
				if(a[j].second <= truey)
					poss = true;
			}
			else
			{
				double truey = (y2 - y1) * (a[j].first - x1) / (x2 - x1) + y1;
				if(a[j].second >= truey)
					poss = true;
			}
		}
		if(!poss)
		{
			cout << "NO\n";
			return 0;
		}
	}

	cout << "YES\n";
	return 0;
}