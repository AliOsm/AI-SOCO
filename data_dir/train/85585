#include <bits/stdc++.h>

#define ld long double
#define ll long long
#define sz size()
#define every(xx) xx.begin(),xx.end()
#define pb push_back
#define in insert
#define er erase
#define S second
#define F first
#define pii pair <int, int>
#define to_be continue
#define mp make_pair
#define stop exit (0)
#define fname ""
#define speed ios_base::sync_with_stdio(0);cin.tie(0)
#define input freopen (fname".in", "r", stdin)
#define output freopen (fname".out", "w", stdout)
#define int ll
#define N 300000

using namespace std;

const int inf = 1e9 + 123;
const ll INF = 1e18 + 123;
const double pi = acos (-1.0);
const ld eps = 1e-3;

vector <int> g[N];
bool u[5001][5001], u2[N];
vector <pii> countries;
int n, m, k, vertexs, ways, allvertexs, allways, ans, big, a[N];

void dfs1 (int v)
{
	for (int i = 0; i < g[v].sz; i ++)
		if (!u[g[v][i]][v])
			ways ++, u[g[v][i]][v] = 1, u[v][g[v][i]] = 1, dfs1 (g[v][i]);
}

void dfs2 (int v)
{
	u2[v] = 1;
	vertexs ++;
	for (int i = 0; i < g[v].sz; i ++)
		if (!u2[g[v][i]])
			dfs2 (g[v][i]);
}


main ()
{
	speed;
	cin >> n >> m >> k;
	for (int i = 1; i <= k; i ++)
		cin >> a[i];
	for (int i = 1; i <= m; i ++)
	{
		int x, y;
		cin >> x >> y;
		g[x].pb (y);
		g[y].pb (x); 
	}
	for (int i = 1; i <= k; i ++)
	{
		dfs1 (a[i]);
		dfs2 (a[i]);
		countries.pb (mp (vertexs, ways));
		ways = vertexs = 0;
	}
	sort (every (countries));
	for (int i = 0; i < countries.sz; i ++)
		ans += countries[i].F * (countries[i].F - 1) / 2 - countries[i].S;
   	big = countries[countries.sz - 1].F;
   	for (int i = 1; i <= n; i ++)
   	{
   		if (!u2[i])
   		{
   			dfs1 (i);
   			dfs2 (i);
   			allvertexs += vertexs;
   			allways += ways;
   			ways = vertexs = 0; 	
   		}
   	}
   	ans += (allvertexs) * (allvertexs - 1) / 2 - allways;
   /*	cout << ans << " " << big << " " << allvertexs; 
   	cout << endl;
   	cout << countries[0].F << " " << countries[0].S;*/
   	cout << ans + big * allvertexs;
}               
//Coded by A....