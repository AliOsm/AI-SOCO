#include <bits/stdc++.h>
using namespace std;

const int N = 1e5 + 100;

int n, m, ans, help[N], k[N], f[N], g[N], l[N], r[N];
string s, t;

void kmp() {
	int a = 0;
	k[1] = 0;
	for (int i = 1; i < t.size(); i++) {
		while(t[a] != t[i] && a)
			a = k[a];
		if(t[a] == t[i])
			a++;
		k[i + 1] = a;
	}
	help[0] = (s[0] == t[0]);
	a = help[0];
	for (int i = 1; i < s.length(); i++) {
		while(a && s[i] != t[a])
			a = k[a];
		if(s[i] == t[a])
			a++;
		help[i] = a;
	}
}

int main() {
	cin >> s >> m;
	n = s.length();
	while(m--) {
		cin >> t;
		if(t.length() == 1)
			continue;
		kmp();
		copy(help, help + N, f);
		reverse(s.begin(), s.end());
		reverse(t.begin(), t.end());
		kmp();
		copy(help, help + N, g);
		reverse(g, g + n);
		reverse(s.begin(), s.end());
		l[0] = f[0];
		r[n] = 0;
		for (int i = 1; i < n; i++)
			l[i] = max(l[i - 1], f[i]);
		for (int i = n - 1; i >= 0; i--)
			r[i] = max(r[i + 1], g[i]);
		bool ok = false;
		for (int i = 0; i < n; i++)
			ok |= l[i] + r[i + 1] >= t.length();
		ans += ok;
	}
	cout << ans;
	return 0;
}
