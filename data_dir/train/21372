/*
Submitted With (^^) by -> Hossam ^_^
_____________________
|     ___     ___     |
|    (^_^)   (^_^)    |
|   /( | )\_/( | )\   |
|_____|_|_____|_|_____|
*/

#include <bits/stdc++.h>

using namespace std;

inline void prep()
{
    cin.tie(0);
    cin.sync_with_stdio(0);
};

#define X first
#define Y second
#define ll long long
#define inf (0x7fffffffffffffff)
#define all(x) x.begin(), x.end()
#define debug(x) cerr << #x << " = " << (x) << " ";
#define ZXC cerr << clock() * 1.0 / CLOCKS_PER_SEC << endl;

const int mod = (int)1e9 + 7;
const int MX = (int)1e5 + 5;


int main()
{
    prep();

    int n, k;
    cin >> n >> k;

    int a[n], io[n];
    for(int i = 0; i < n; ++i){
        cin >> a[i];
        io[i] = i;
    }

    int cost[n];
    for(int j = 0; j < n; ++j){
        cin >> cost[j];
    }

    sort(io, io + n, [&](int x, int y){
        return a[x] < a[y];
    });

    ll res = 0;
    multiset<int> ms;
    vector<ll> ans(n);
    for(int i = 0; i < n; ++i){
        int idx = io[i];
        ans[idx] = res + cost[idx];
        if(i < k){
            res += cost[idx];
            ms.insert(cost[idx]);
        }
        else{
            if(!ms.empty()){
                auto rem = ms.begin();
                if(*rem < cost[idx]){
                    res += cost[idx] - *rem;
                    ms.erase(rem);
                    ms.insert(cost[idx]);
                }
            }
        }
    }

    for(auto x : ans) cout << x << " ";
    cout << endl;

    // ZXC
    return 0;
}