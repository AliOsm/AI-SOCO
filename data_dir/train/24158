#define _USE_MATH_DEFINES
#define _CRT_SECURE_NO_DEPRECATE

#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#include <cmath>
#include <sstream>
#include <utility>
#include <ctime>
#include <memory.h>
#include <cctype>
#include <cstdlib>
#include <complex>

using namespace std;

#pragma comment (linker, "/STACK:64000000")

#define y0 qwe
#define y1 asd
#define sz size()
#define pb push_back
#define fors(w,s) for(set <string> :: iterator w = s.begin(); w != s.end(); w++)
#define pii pair<int, int>
#define pll pair<ll, ll>
#define ull unsigned long long
#define vi vector <int>
#define vvi vector <vi>
#define inf 2000000000
#define mod 1000000007
#define ll long long
#define maxint 2139062143 //2147483647
#define maxll 9223372036854775807
#define fi first
#define se second
#define eps 1e-9
#define doubleinf 1000000000000000.0

struct letter
{
    int p[26];
};

int l, r, h, g, q, j, i, y, q1, q2, k, ans, mn, m, n, a[100500];
char buf[100005]; 
letter b[100500];
bool wn, ls;

bool win(int q)
{
    for (int j = 0; j < 26; j++)
    {
        if (b[q].p[j])
        {
            if (!win(b[q].p[j]))
            {
                return 1;
            }
        }
    }
    return 0;
}

bool lose(int q)
{
    bool ls = true;
    for (int j = 0; j < 26; j++)
    {
        if (b[q].p[j])
        {
            ls = false;
            break;
        }
    }
    if (ls)
    {
        return true;
    }
    for (int j = 0; j < 26; j++)
    {
        if (b[q].p[j])
        {
            if (!lose(b[q].p[j]))
            {
                return 1;
            }
        }
    }
    return 0;
}

inline void solve()
{
    scanf ("%d%d", &n, &k);
    for (i = 1; i <= n; i++)
    {
        scanf ("%s", &buf);
        q = 0;
        for (j = 0; buf[j]; j++)
        {
            if (b[q].p[buf[j] - 'a'])
            {
                q = b[q].p[buf[j] - 'a'];
            }
            else
            {
                b[q].p[buf[j] - 'a'] = ++l;
                q = l;
            }
        }
    }
    wn = win(0);
    ls = lose(0);
    if (!wn)
    {
        printf ("Second\n");
        return;
    }
    if (wn && ls)
    {
        printf ("First\n");
        return;
    }
    if (wn && !ls)
    {
        if (k & 1)
        {
            printf ("First\n");
        }
        else
        {
            printf ("Second\n");
        }
    }
}

inline void init()
{
    
}

inline void answer()
{
    
}

int main()
{
    //freopen ("input.txt","r",stdin); freopen ("output.txt","w",stdout);
    //freopen ("olympiad.in","r",stdin); freopen ("olympiad.out","w",stdout);
    init();
    solve();
    answer();
    return 0;
}