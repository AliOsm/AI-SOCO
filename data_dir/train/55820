#include <bits/stdc++.h>
using namespace std;

const int N = 7e4 + 10;

string s;
string Ans[N];

struct Node
{
    Node* Child[10];
    unordered_set<int> st;

    Node(){
        for (int i = 0; i < 10; i++)
            Child[i] = NULL;
    }
} *Root;

void Add(int Start, int ID)
{
    Node *Cur = Root;
 
    for (int i = Start; i < s.size(); i++)
    {
        int idx = s[i] - '0';
        if (!Cur->Child[idx])
            Cur->Child[idx] = new Node;

        Cur = Cur->Child[idx];
        Cur->st.insert(ID);
    }
}

void Calc(Node *Cur, string str)
{
    if (Cur->st.size() == 1){
        int idx = *Cur->st.begin();
        if (Ans[idx].size() > str.size())
            Ans[idx] = str;
    }

    for (int i = 0; i < 10; i++) if (Cur->Child[i])
        Calc(Cur->Child[i], str + char(i + '0'));
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

    Root = new Node;

    int n;  cin >> n;
    for (int i = 1; i <= n; i++)
    {
        cin >> s;

        for (int j = 0; j < s.size(); j++)
            Add(j, i);
    
        Ans[i] = "000000000000";
    }

    Calc(Root, "");

    for (int i = 1; i <= n; i++)
        cout << Ans[i] << '\n';

    return 0;
}
