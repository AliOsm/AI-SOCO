#include<bits/stdc++.h>
using namespace std;
int depth[300000], sub_tree[300000];
int n;
vector < int > edges[300000];

void find_depth(int pos, int dpt)
{
    depth[pos] = dpt;
    for(int i = 0; i < edges[pos].size(); i++){
        find_depth(edges[pos][i], dpt + 1);
    }

}

int find_sub_tree(int pos)
{
    int p = 1;
    for(int i = 0; i < edges[pos].size(); i++){
        p += find_sub_tree(edges[pos][i]);
    }

    return sub_tree[pos] = p;

}

int main()
{
    cin >> n;

    for(int i = 2; i <= n; i++){
        int x;
        scanf("%d", &x);
        edges[x].push_back(i);
    }

    find_depth(1, 0);
    find_sub_tree(1);

    for(int i = 1; i <= n; i++){
        double ans = 1 + (double) depth[i] + (double)(n - depth[i] - sub_tree[i]) / (double) 2;

        printf("%lf ", ans);
    }



    return 0;
}
