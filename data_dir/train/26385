#include <algorithm>
#include <iostream>
#include <numeric>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <utility>
#include <unordered_set>
#include <unordered_map>

using namespace std;
using ll = long long;

int const N = 100 * 1000 + 16;

int n;
int a[N];
int b[N];

int main() {
  cin.tie(0);
  cin.sync_with_stdio(0);
  
  cin >> n;
  for(int i = 0; i < n; ++i)
    cin >> a[i] >> b[i];
  
  // front
  unordered_map<int,int> f;
  f.reserve(2*n);
  f.max_load_factor(0.5);
  for(int i = 0; i < n; ++i)
    f[a[i]]++;
  
  // back
  unordered_map<int,int> h;
  h.reserve(2*n);
  h.max_load_factor(0.5);
  for(int i = 0; i < n; ++i)
    h[b[i]] += a[i]!=b[i];
  
  int mn = n+n;
  int need = (n+1) >> 1;
  for(int i = 0; i < n; ++i)
    if(f[a[i]] + h[a[i]] >= need)
      mn = min(mn, max(0, need-f[a[i]]));
 
  for(int i = 0; i < n; ++i)
    if(f[b[i]] + h[b[i]] >= need)
      mn = min(mn, max(0, need-f[b[i]]));
  
  cout << (mn == n+n ? -1 : mn);
}