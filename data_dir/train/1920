#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define ll long long
#define ld long double
using namespace std;
ll n, ans;
struct seg{
    int x1, x2, y1, y2;
    void get(){
        scanf("%d%d%d%d", &x1, &y1, &x2, &y2);
        if(x1 > x2)
            swap(x1, x2);
        if(y1 > y2)
            swap(y1, y2);
    }
}s;
vector<seg>h,v;
bitset<5001>b[5001];
bool intersect(seg a, seg b){
    if(b.y1 == b.y2)
        swap(a,b);
    return (a.x1 <= b.x1 && a.x2 >= b.x1 && b.y1 <= a.y1 && b.y2 >= a.y1);
}
int main()
{
    scanf("%lld", &n);
    while(n--){
        s.get();
        if(s.y1 == s.y2)
            h.push_back(s);
        else
            v.push_back(s);
    }
    if(h.size() > v.size())
        swap(h,v);
    for(int i = 0; i < h.size(); i++){
        for(int j = 0; j < v.size(); j++){
            b[i][j] = intersect(h[i], v[j]);
        }
    }
    for(int i = 0; i < h.size(); i++){
        for(int j = i + 1; j < h.size(); j++){
            ll x = (b[i] & b[j]).count();
            ans += (x * (x - 1)) / 2;
        }
    }
    printf("%lld", ans);
    return 0;
}
