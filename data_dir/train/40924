#include <bits/stdc++.h>
using namespace std;

using ll = long long;
const int N = 5e3+10;
const int MOD = 1e9+7;

ll n, k;
ll dp[N][N];

ll powmod(ll a, ll b, ll r = 1) {
	while(b) {
		if(b & 1) r = r * a % MOD;
		a = a * a % MOD;
		b >>= 1;
	} return r;
}

ll DP(ll a, ll b) {
	ll c = n - b;
	if(a == 0) return powmod(2ll, c);
	if(dp[a][b] != -1) return dp[a][b];
	dp[a][b] = (c ? c * DP(a - 1, b + 1) % MOD : 0ll) + (b ? b * DP(a - 1, b) % MOD : 0ll);
	if(dp[a][b] >= MOD) dp[a][b] -= MOD;
	return dp[a][b];
}

int main() {
	scanf("%lld %lld", &n, &k);
	memset(dp, -1, sizeof dp);
	printf("%lld\n", DP(k, 0));
	return 0;
}