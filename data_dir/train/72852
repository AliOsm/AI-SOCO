#pragma GCC optimize("O3")
#include<bits/stdc++.h>
#include<map>
#include<iostream>
#include <cstring>
#include <iomanip>
#include <algorithm>
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
#define input ios_base::sync_with_stdio(0);cin.tie(0);

//const double PI  = acos(-1.0);
using namespace std;
//typedef pair<double,double>pdd;
typedef long long  ll;
typedef pair<ll, ll>pii;
//typedef complex<double> point;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
//char rv[4]={'D','R','L','U'};
const double EPS = 1e-9;
const int N = 5e5 + 9;
int ans[505][505];

 int main()
{
//freopen("circles.in ","r",stdin);
//freopen("circles.out","w",stdout);
//__builtin_popcount()
input
        int k;
        cin>>k;
        int t=(1<<18)-1;
        int n=t^k;

       // cout<<k<<" "<<n<<" "<<t<<endl;
        //return 0;
        ans[1][1]=ans[3][2]=t;
        forr(i,2,3)ans[i][1]=k;
        forr(i,1,2)ans[i][2]=n;
        forr(i,3,3)ans[3][i]=k;
        cout<<"3 3"<<endl;
        forr(i,1,3)
        {
            forr(j,1,3)cout<<ans[i][j]<<" ";
            cout<<endl;
        }


return 0;
}
