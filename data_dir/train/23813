#include<bits/stdc++.h>

using namespace std;
map<char,string>mp;
vector<int>DIV;
char temp[6000];
string dir[10000];
bool visit[6000][6000];

void SET(){
    mp['0'] = "0000"; mp['1'] = "0001"; mp['2'] = "0010"; mp['3'] = "0011";
    mp['4'] = "0100"; mp['5'] = "0101"; mp['6'] = "0110"; mp['7'] = "0111";
    mp['8'] = "1000"; mp['9'] = "1001"; mp['A'] = "1010"; mp['B'] = "1011";
    mp['C'] = "1100"; mp['D'] = "1101"; mp['E'] = "1110"; mp['F'] = "1111";
}

int main()
{
    int n;
    SET();
    scanf("%d",&n);
    for(int i = 1; i<=n; i++){
        if(n%i == 0)DIV.push_back(i);
    }
    for(int i = 1; i<=n; i++){
        scanf("%s",temp);
        dir[i]+='3';
        for(int j = 0; j<n/4; j++){
            dir[i] += mp[temp[j]];
        }
    }
    reverse(DIV.begin(),DIV.end());
    int mx = 0;
    for(int i = 0; i<DIV.size(); i++){
        int x = DIV[i];
        bool rf = true;
        for(int k = 1; k<=n; k+=x){
            //if(rf == false)break;
            for(int j = 1; j<=n; j+=x){
                //if(rf == false)break;
                char ch = dir[k][j];
                for(int p = k; p<k+x; p++){
                    for(int q = j; q <j+x; q++){
                        if(ch != dir[p][q]){
                            rf = false;
                           // break;
                        }
                    }
                    
                }
            }
        }
        if(rf == true){
            mx = max(mx,x);
        }
    }
    cout << mx << endl;
    return 0;
}
