#define _CRT_SECURE_NO_DEPRECATE
#pragma comment(linker,"/stack:256000000")

#include <cmath> 
#include <ctime> 
#include <iostream> 
#include <string> 
#include <vector> 
#include <algorithm> 
#include <set> 
#include <map> 
#include <cstring> 
#include <cstdlib> 
#include <queue> 
#include <cstdio> 
#include <cfloat>
#include <cassert>

using namespace std;

#define REP(i, n) for (int (i) = 0; (i) < (n); (i)++) 
#define sz(v) (int)(v).size() 
#define all(v) (v).begin(), (v).end()

int D(const pair<int,int> &p, const pair<int,int> &q){
	return (p.first-q.first)*(p.first-q.first)+(p.second-q.second)*(p.second-q.second);
}

int main() {
	int n, m;
	cin>>n>>m;
	vector<pair<int,int> >p;
	for(int i=0;i<=5;i++){
		for(int j=0;j<=5;j++){
			if(i<=n&&j<=m){
				p.push_back(make_pair(i,j));
			}
			if(n-i>=0&&m-j>=0){
				p.push_back(make_pair(n-i,m-j));
			}
		}
	}
	sort(all(p));
	assert(p.size()>=4);
	p.resize(unique(all(p))-p.begin());
	int R=0;
	int res[4];
	REP(i,sz(p))REP(j,sz(p))REP(k,sz(p))REP(t,sz(p)){
		if(i==j||i==k||i==t||j==k||j==t||k==t)continue;
		int d=D(p[i],p[j])+D(p[j],p[k])+D(p[k],p[t]);
		if(d>R){
			R=d;
			res[0]=i;
			res[1]=j;
			res[2]=k;
			res[3]=t;
		}
	}
	for(int i=0;i<4;i++){
		cout<<p[res[i]].first<<" " <<p[res[i]].second<<endl;
	}
	return 0;
}