#include <bits/stdc++.h>

using namespace std;
int const N = 101;
int mod = 100000000 ;
int n,m,k1,k2;
int dp[N][N][2];
void add_self(int &a,int b){
    a+=b;
    if(a>=mod)a-=mod;
}
int solve(int t1,int t2,int flag){
   if(t1 < 0 || t2 < 0)return 0;
    if(!t1 && !t2)return 1;
    if( flag && !t1)return 0;
    if(!flag && !t2)return 0;
    int &ret = dp[t1][t2][flag];
    if(ret + 1)return ret;
    ret = 0;
    int mx = k2;
    if(flag)mx = k1;
    for(int i=1;i<=mx;i++)add_self(ret,solve(t1 - flag * i,t2 - !flag * i,!flag));
    return ret;
}
int main() {
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif
    cin >> n >> m >> k1 >> k2;
    memset(dp,-1,sizeof dp);
    cout << (solve(n,m,0) + solve(n,m,1))%mod;
    return 0;
}