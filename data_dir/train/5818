#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,tune=native")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef  vector<int> vi;
typedef  pair<int,int> pii;
typedef  pair<int,string> pis;
double   pi=3.1415926535898;
#define SPEED      ios::sync_with_stdio(false);cin.tie(NULL); cout.tie(NULL);
#define lop(i,n)   for(int i=0;i<int(n);i++)
#define ff(i,a,b)  for(int i=a;i<=int(b);i++)
#define fr(i,a,b)  for(int i=a;i>=int(b);i--)
#define ms(x,a)    memset(x,a,sizeof(x))
#define all(x)     (x).begin(),(x).end()
#define sz(x)      int(x.size())
#define pb         push_back
#define ii pair <int,int>
#define F          first
#define S          second       //  __builtin_popcount;
//freopen("input.txt","r",stdin),freopen("output.txt","w",stdout);
string ys = "YES\n";
string no = "NO\n" ;
const double EPS = 1e-6;
const int inf = 1e9+1;
const ll M  = 1e9+7 ;
/////  for (int i= -inf ; i < inf ; i++)   Hi  :P

const int N=555;

int n;
string s;
int cTime,ans;
int f()
{
    if (s[1] == '1' && s[2] == '2')
    {
        s[1] = s[2] = '0';
    }
    int g = ((s[1]-'0')*10+(s[2]-'0'))*60+(s[4]-'0')*10+(s[5]-'0');
    if (s[7] == 'p')
    {
        g += 12*60;
    }
    return g;
}
int main()
{
    SPEED;
    cin >> n;
    getline(cin,s);
    getline(cin,s);
    cTime = f();
    int frec = 0;
    ff(i,2,n)
    {
        getline(cin,s);
        int t = f();
        if (t > cTime)
        {
            cTime = t;
            frec = 1;
        }
        else if(t<cTime)
        {
            cTime = t;
            frec = 1;
            ans++;
        }
        else if (t== cTime)
        {
            frec ++;
            if (frec > 10)
            {
                ans++;
                frec = 1;
            }
        }
    }
    cout << 1+ans;
}


/*

2073600

*/











