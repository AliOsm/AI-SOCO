#include<iostream>
#include<cmath>
#include<vector>
#include<string>
#include<sstream>
#include<fstream>
#include<algorithm>
#include<set>
#include<map>
#include<string.h>
#include<cstdio>
#include<hash_map>
using namespace std;
const int inf = 1000000001;
const int MOD = 1000000007;
typedef long long Int;
#define FOR(i,a,b) for(int i=(a); i<=(b);++i)
#define mp make_pair
#define pb push_back
#define sz(s) (int)((s).size())

/*const int N = 1000009;
vector<int>gg[N+1];
int h[N+1];
int cnt[N+1];

map<int, set<int> > g[N+1];

const int TEST = 0;

int myrand(int n) {
  return ((rand() << 15) + rand()) % n;
}

void dfs(int v, int fath) {
	cnt[v]=1;
	set<pair<int,int> > son;
	FOR(i,0,sz(g[v])-1) {
		int to = gg[v][i];
		if(to==fath) continue;
		h[to]=h[v]+1;
		dfs(to, v);
		cnt[v] += cnt[to];
		son.insert(mp(cnt[to], to));
	}
	son.insert(mp(1, v));
	g[v][0].insert(h[v]);

	while(sz(son)>1) {
		set<pair<int,int>>::iterator it=son.begin();
		int v1 = it->second;
		son.erase(son.begin());

		set<pair<int,int>>::iterator it=son.begin();
		int v2 = it->second;
		son.erase(son.begin());

		//   v1 --> v2
		for(map<int,set<int> > ::iterator id=g[v1].begin(); id!=g[v1].end(); ++id) {
			
		}
	}

}
*/

const int N=5002;
int dp[N+1][N+1];
int pr[N+1][N+1];
vector<pair<int,int> >g[N+1];

int main() {
	//freopen("input.txt","r",stdin);freopen("output.txt", "w", stdout);
	int n,m,T;
	cin>>n>>m>>T;
	FOR(i,1,m) {
		int x,y,z;
		cin>>x>>y>>z;
		g[x].pb(mp(y, z));
	}

	memset(dp, 63, sizeof(dp));
	dp[1][1]=0;
	pr[1][1]=0;
	FOR(j,1,n) FOR(i,1,n) if(dp[i][j]<=T) {
		FOR(id,0,sz(g[i])-1) {
			int to = g[i][id].first;
			int len = dp[i][j]+g[i][id].second;
			if(len<dp[to][j+1]) {
				dp[to][j+1]=len;
				pr[to][j+1]=i;
			}
		}
	}

	int len=n;
	while(dp[n][len]>T) len--;
	cout<<len<<endl;
	vector<int> ans;
	while(n!=1) {
		ans.pb(n);
		n=pr[n][len];
		len--;
	}
	ans.pb(1);
	reverse(ans.begin(), ans.end());
	FOR(i,0,sz(ans)-1) cout<<ans[i]<<" ";cout<<endl;
}