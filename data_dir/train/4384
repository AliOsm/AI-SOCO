/* Author haleyk10198 */
/* �@��:  haleyk10198 */
/* CF handle: haleyk100198*/
#include <bits/stdc++.h>

#define MOD 1000000007
#define LINF (1LL<<60)
#define INF 2147483647
#define PI 3.1415926535897932384626433
#define ll long long
#define pii pair<int,int>
#define mp(x,y) make_pair((x),(y))
#define pb(x) push_back((x))

using namespace std;

string itos(int x){
	stringstream ss;
	ss << x;
	return ss.str();
}

int n;
vector<pii> e[100010];

ll c[100010], kc[100010]; // *** Facepalm ***

void mult(ll &x, ll y){
	(x *= y) %= MOD;
}

ll pwr(ll b, ll e){
	if(e == 0)
		return 1;
	if(e == 1)
		return b;
	return (pwr((b*b)%MOD, e/2)*pwr(b, e%2))%MOD;
}

ll inv(ll x){
	return pwr(x, MOD-2);
}

void add(ll &x, ll y){
	x += y;
	x %= MOD;
	if(x < 0)
		x += MOD;
}

void dfs(ll now, ll p){
	bool isLeaf = true;
	c[now] = e[now].size();
	for(auto x: e[now]){
		int nxt = x.first;
		int cost = x.second;
		add(kc[now], cost);
		if(nxt - p){
			isLeaf = false;
			dfs(nxt, now);
			add(kc[now], kc[nxt]);
			add(c[now], -c[nxt]);			
		}
	}
	if(isLeaf){
		c[now] = kc[now] = 0;
		return;
	}
	c[now] = inv(c[now]);
	mult(kc[now], c[now]);
	return;
}

int main(){
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	cin >> n;
	for(int i = 1; i < n; i++){
		int u, v, w;
		cin >> u >> v >> w;
		e[u].pb(mp(v, w));
		e[v].pb(mp(u, w));
	}
	dfs(0, 0);
	cout << kc[0] << endl;
	return 0;
}
