#include <bits/stdc++.h>

typedef long long ll;
using namespace std;

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(int i = (a); i <= (b); i++)
#define fd(i,a,b) for(int i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<int,int>
#define SZ(x) ((int)x.size())
#define vii vector<pair<int,int>>

const int INF = 2000000005;
const ll INFLL = 1000000000000000002ll;
const ll MOD = 1000000007;

inline ll min(ll a, ll b, ll c){return min(min(a,b),c);}
inline ll min(ll a, ll b, ll c, ll d){return min(min(min(a,b),c),d);}
inline ll max(ll a, ll b, ll c){return max(max(a,b),c);}
inline ll max(ll a, ll b, ll c, ll d){return max(max(max(a,b),c),d);}

// -------------------------------------------------------------------------------------------------------------

int A[70005][10], N;
map<pii,int> M;

string query(int idx)
{
    int low = 99, bl = 0, br = 0;
    f(i,0,8)
        {
            int x = 0;
            f(j,i,8)
            {
                x = 10*x + A[idx][j];
                M[{x,j-i+1}]--;
            }
        }
    f(i,0,8)
        {
            int x = 0;
            f(j,i,8)
            {
                x = 10*x + A[idx][j];
                //cout << i << "," << j << " for " << idx << " = " << x << "\n";
                if(M[{x,j-i+1}] == 0 && j-i+1 < low)
                    {
                        low = j-i+1;
                        bl = i, br = j;
                    }
            }
        }
        f(i,0,8)
        {
            int x = 0;
            f(j,i,8)
            {
                x = 10*x + A[idx][j];
                M[{x,j-i+1}]++;
            }
        }
        string ret = "";
        f(i,bl,br) ret += (char) (A[idx][i] + '0');
        return ret;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin >> N;
    string s;
    f(idx,1,N)
    {
        cin >> s;
        f(i,0,8) A[idx][i] = s[i] - '0';
        f(i,0,8)
        {
            int x = 0;
            f(j,i,8)
            {
                x = 10*x + A[idx][j];
                M[{x,j-i+1}]++;
            }
        }
    }
    f(i,1,N) cout << query(i) << "\n";
}
