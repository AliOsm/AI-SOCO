/* In the name of Allah */
#include<bits/stdc++.h>
using namespace std;

const int N = 3e5 + 5, P = 998244353;
int n, m, ans, two[N] = {1}, mark[N], a, b;
vector<int> adj[N];

void dfs(int u, int c = 1) {
	mark[u] = c;
	(c & 1? a: b)++;
	for (auto v: adj[u])
		if (!mark[v])
			dfs(v, 3 - c);
		else if (mark[v] == c)
			ans = 0;
}

void prep() {
	for (int i = 1; i < N; i++)
		two[i] = 2 * two[i - 1] % P;
}

void readInput() {
	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		int u, v;
		cin >> u >> v;

		u--, v--;
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
}

void solve() {
	ans = 1;
	for (int u = 0; u < n; u++)
		if (!mark[u]) {
			a = b = 0;
			dfs(u);
			ans = 1LL * ans * (two[a] + two[b]) % P;
		}
	cout << ans << endl;
}

void trim() {
	for (int u = 0; u < n; u++) {
		adj[u].clear();
		mark[u] = 0;
	}
}

void testCases() {
	int t;
	cin >> t;
	for (int i = 0; i < t; i++) {
		readInput();
		solve();
		trim();
	}
}

int main() {
	ios_base:: sync_with_stdio(0), cin.tie(0), cout.tie(0);
	prep(), testCases();
	return 0;
}