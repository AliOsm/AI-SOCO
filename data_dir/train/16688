#include<bits/stdc++.h>

using namespace std;

const int N = 1e6 + 8, MOD = 1e9 + 7;
const long long INF = 2e16;
#define ss second
#define ff first
#define int long long
#define double long double

using vi = vector <int>;
using vp = vector <pair <long long, long long>>;

mt19937 Flash_new_51(515151);

int kol[N], kol1[N];

signed main() {
    cin.tie(0);
    ios_base::sync_with_stdio(0);
    string s;
    int n;
    cin >> s >> n;
    string s1 = "";
    set <char> kek;
    priority_queue <pair <int, char>> mem;
    for (int i = 0; i < s.size(); i++) {
        kek.insert(s[i]);
        //kol[s[i]]++;
        kol1[s[i]]++;
    }

    if (kek.size() > n) {
        cout << -1;
        return 0;
    }
    for (auto to : kek) {
        kol[to] = 1;
        s1+= to;
        n--;
    }
    for (int i = 0; i < n; i++) {
        int maxx = 0;
        char c1;
        for (char c = 'a'; c <= 'z'; c++) {
            if (!kol[c]) continue;
            int o = (kol1[c] + kol[c] - 1) / kol[c];
            if (o >= maxx) {
                maxx = o;
                c1 = c;
            }
        }
        s1+= c1;
        kol[c1]++;
      //  cout << maxx << endl;
    }

    int maxx = 0;
    for (char c = 'a'; c <= 'z'; c++) {
        if (!kol[c]) continue;
        int o = (kol1[c] + kol[c] - 1) / kol[c];
        maxx = max(maxx, o);
    }
    cout << maxx << "\n" << s1;


}
