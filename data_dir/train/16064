// g++ -std=c++14 -O2 -Wall -Wextra a.cpp
//In The Name Of God :
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <bits/stdc++.h>
using namespace std ;
using namespace __gnu_pbds;
#define X first 
#define Y second
#define int long long
typedef long long ll ;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define ALL(x) (x).begin(),(x).end()
#define size(x) ((int)((x).size()))
typedef pair < int , int > pii ; 
typedef pair < pii , int > pii_i ;
typedef pair < int , pii > pi_ii ;
typedef pair < pii , pii > pii_ii ;
#define ordered_set(TYPE) tree<TYPE, null_type, less<TYPE>, rb_tree_tag, tree_order_statistics_node_update>
//#define "%I64d" "%
const int maxL = 70 ;
//const int inf = 1e9+100 ;
typedef long long ll ;
int mod = 1e9+7 ;
ll mod1 = 1e9+7 ;
int inf = 5e4 ;
typedef long double ld ;
const int maxn = 1e5+10 ;
const int baze = 330 ;
#define next rerekewlrejgtlilrelfd
int n , m , b [ maxn ] , d [ maxn ] ;
vector < int > vc [ maxn ] ;
set < pii_i > st ;

int32_t main ( )
{
  fast ;
  cin >> n >> m ;
  for ( int i = 0 ; i < n ; i ++)
    cin >> b [ i ] ;
  for ( int i = 0 , u , v ; i < m ; i ++)
    {
      cin >> u >> v ;
      vc [ v ] . push_back ( u ) ;
      d [ u ] ++ ;
    }
  for ( int i = 0 ; i < n ; i ++ )
    st . insert ( pii_i ( pii(d [ i ],b[i]) , i ) ) ;
  int ans = 0 ;
  vector < int > hlp ;
  while ( size ( st ) ) 
    {
      if ( st . begin ( ) -> X . Y == 0 )
	{
	  int v = st.begin()->Y; 
	  st . erase ( st . begin ( ) ) ;
	  for ( int u : vc [ v ] )
	    {
	      st . erase ( pii_i ( pii ( d [ u ] , b [ u ] ) , u ) ) ;
	      d [ u ] -- ; 
	      st . insert ( pii_i ( pii ( d [ u ] , b [ u ] ) , u ) ) ;
	    }
	  continue ; 
	}
      ans ++ ; 
      while ( size ( st ) && st.begin()->X.X== 0 )
	{
	  int v = st.begin()->Y; 
	  st . erase ( st . begin ( ) ) ;
	  if ( b[v] == 0 )
	    hlp . push_back ( v ) ;
	  else
	    for ( int u : vc [ v ] )
	      {
		st . erase ( pii_i ( pii ( d [ u ] , b [ u ] ) , u ) ) ;
		d [ u ] -- ; 
		st . insert ( pii_i ( pii ( d [ u ] , b [ u ] ) , u ) ) ;
	      }
	}
      for ( int v : hlp )
	for ( int u : vc [ v ] )
	  {
	    st . erase ( pii_i ( pii ( d [ u ] , b [ u ] ) , u ) ) ;
	    d [ u ] -- ; 
	    st . insert ( pii_i ( pii ( d [ u ] , b [ u ] ) , u ) ) ;
	  }
      hlp . clear ( ) ;
    }
  cout << ans << endl ;
} 
