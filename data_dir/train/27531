#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll long long
#define ld float
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define hell (ll)1000000007
#define f first
#define s second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree< ll , null_type , less<ll> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t = 1 ;
const ll N = 1e5 + 55 ;
vector<ll> p(N) , a , b ;
map<ll,ll> mapa ;
void solve()
{
    ll n ;
    cin >> n ;
    vector<ll> v(n+1) ;
    rep( i , 2 , n + 1 )
    {
		cout << "i : " << i << " " << p[i] << ' ' ;
        if( p[i] == i )
        {
            v[i] = mapa[i] ;
        }
        else
            v[i] = mapa[p[i]] ;
        cout << v[i] << ' ' ;
    }
    /*rep( i , 0 , 10 )
		cout << a[i] << " " << b[i] << "\n" ;*/
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    rep( i , 1 , N ){
        p[i] = i ;
    }
    rep( i , 1 , N )
    {
        if( p[i] == i )
        {
            a.pb(i) ;
            if( i == 1 )continue;
            b.pb(i) ;
            for( ll j = i * i ; j < N ; j+=i)
            {
                p[j] = min( p[j] , i ) ;
            }
        }
    }
    rep( i , 0 , (ll)min(sz(a),sz(b)))
		mapa[b[i]]=i+1;
    ll n ;
    cin >> n ;
    vector<ll> v(n+1) ;
    rep( i , 2 , n + 1 )
    {
		//cout << "i : " << i << " " << p[i] << ' ' ;
        if( p[i] == i )
        {
            v[i] = mapa[i] ;
        }
        else
            v[i] = mapa[p[i]] ;
        cout << v[i] << ' ' ;
    }
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //cin>>t;
   // while(t--)
    //    solve() ;
    return 0 ;
}