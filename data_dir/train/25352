#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <cstdlib>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <iostream>
#include <set>
#include <list>
#include <map>
#include <time.h>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
typedef pair<string, int> psi;
const ll MOD = 1e9 + 7;
const long double PI = 3.141592653589793238462643383279502884197;

priority_queue<int, vector<int>, greater<int> > pq;
vector<int> v;

int mat[41][41];
ll dp[41][41][41][41];

ll go(int x, int y, int xx, int yy) {
	if (x > xx || y > yy) return 0;
	if (dp[x][y][xx][yy] != -1) return dp[x][y][xx][yy];

	ll sum = 0;
	if (mat[xx][yy] + mat[x - 1][y - 1] - mat[xx][y - 1] - mat[x - 1][yy] == 0) sum++;

	sum += go(x + 1, y, xx, yy);
	sum += go(x, y, xx - 1, yy);
	sum += go(x, y + 1, xx, yy);
	sum += go(x, y, xx, yy - 1);

	sum -= go(x + 1, y, xx - 1, yy);
	sum -= go(x, y + 1, xx, yy - 1);
	sum -= go(x + 1, y + 1, xx, yy);
	sum -= go(x + 1, y, xx, yy - 1);
	sum -= go(x, y + 1, xx - 1, yy);
	sum -= go(x, y, xx - 1, yy - 1);

	sum += go(x + 1, y + 1, xx - 1, yy);
	sum += go(x + 1, y + 1, xx, yy - 1);
	sum += go(x + 1, y, xx - 1, yy - 1);
	sum += go(x, y + 1, xx - 1, yy - 1);

	sum -= go(x + 1, y + 1, xx - 1, yy - 1);

	return dp[x][y][xx][yy] = sum;
}

int main() {
	memset(dp, -1, sizeof(dp));
	int n, m, q;
	scanf("%d %d %d", &n, &m, &q);

	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++) {
			scanf("%1d", &mat[i][j]);
			mat[i][j] += mat[i][j - 1];
		}

	for (int i = 1; i <= m; i++)
		for (int j = 1; j <= n; j++)
			mat[j][i] += mat[j - 1][i];

	int a, b, c, d;
	while (q--) {
		scanf("%d %d %d %d", &a, &b, &c, &d);
		printf("%lld\n", go(a, b, c, d));
	}
}