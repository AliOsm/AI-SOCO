#pragma comment (linker, "/STACK:256000000")
 
#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>
 
//#include <random>
 
using namespace std;
 
 
double PI = 3.1415926535897932384626433832795;
double EPS = 1e-2;
 
typedef unsigned int uint32;
typedef long long int64;
typedef unsigned long long uint64;
 
typedef pair<int, int> pii;
const int MAXN = 1000100;
const int MAXC = 1e7;
const int mod = 1e9 + 7;
const int ROOT = 400;

int n, m;
int mas[MAXN];
int par[MAXN];
vector < vector < int > > val, pos;
void unite(int a, int b)
{
	if (rand() & 1)
		swap(a, b);
	par[a] = b;
}

int fin(int a)
{
	if (par[a] == a)
		return a;
	return par[a] = fin(par[a]);
}
int res[MAXN];

void solve()
{
	scanf("%d %d", &n, &m);
	for(int i = 0; i < n; ++i)
	{
		scanf("%d", &mas[i]);
	}
	for(int i = 0; i < n; ++i)
	{
		par[i] = i;
	}
	for(int i = 0; i < m; ++i)
	{
		int u, v;
		scanf("%d %d", &u, &v);
		u--, v--;
		if (fin(u) != fin(v))
		{
			unite(fin(u), fin(v));
		}
	}
	val.resize(n);
	pos.resize(n);
	for(int i = 0; i < n; ++i)
	{
		val[fin(i)].push_back(mas[i]);
		pos[fin(i)].push_back(i);
	}
	for(int i = 0; i < n; ++i)
	{
		sort(val[i].begin(), val[i].end());
		reverse(val[i].begin(), val[i].end());
		for(int j = 0; j < val[i].size(); ++j)
		{
			res[pos[i][j]] = val[i][j];
		}
	}

	for(int i = 0; i < n; ++i)
	{
		printf("%d ", res[i]);
	}
}
 
 
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
    srand(1313);
	
	int t = 1;
	//cin >> t;
	for(int i = 0; i < t; ++i)
	{
		solve();
		//cout << endl;
	}
	
    return 0;
}   