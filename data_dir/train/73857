//int n,m;
//bool solve(int days, vi cnt, vpii offers){
//    vi latest(n+1);
//    for(auto _ : offers)
//        if(_.X <= days)
//            latest[_.Y] = max(latest[_.Y],_.X);
//    vi tmp;
//    rep(i,1,n)
//        rep(j,cnt[i-1])
//            tmp.pb(latest[i]);
//    sort(all(tmp));
//    int buy = 0;
//    for(int x : tmp){
//        if(x > buy)
//            ++buy;
//    }
//    return 2*sum(cnt)-buy <= days;
//}
//void _(){
//    cin >> n >> m;
//    vi arr(n);
//    vpii offers(m);
//    cin >> arr >> offers;
//    int lo = sum(arr), hi = 2*sum(arr), mid;
//    while(lo < hi){
//        mid = (lo+hi)/2;
//        if(solve(mid,arr,offers))
//            hi = mid;
//        else
//            lo = mid+1;
//    }
//    print lo;
//}
//
#include <iomanip>
#include <algorithm>
#include <cassert>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define pb push_back
#define REP_INT(i,l,r) for(int i = l; i <= r; ++i)
#define REP_ZERO_INT(i,r) for(int i = 0; i < r; ++i)
#define GET_REP_MACRO(_1,_2,_3,_4,NAME,...) NAME
#define rep(...) GET_REP_MACRO(__VA_ARGS__,REP_ANY,REP_INT,REP_ZERO_INT)(__VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define X first
#define Y second
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
template <typename F, typename S> static
istream& operator>>(istream& stream, pair<F, S>& t){
    return stream >> t.first >> t.second;
}
T1 istream& read(T, T, istream& = cin);
T1 istream& operator>>(istream& stream, vector<T>& t){
    return read(all(t), stream);
}
T1 istream& read(T b, T e, istream& stream){
    for(T it = b; it != e; ++it)
        stream >> *it;
    return stream;
}
T1 T sum(vector<T>& arr){
    T ans = 0;
    for(auto x : arr)
        ans += x;
    return ans;
}
struct _print {
    string sep,end;
    bool space;
    ostream &stream;
    _print(string _sep=" ",string _end="\n",
            ostream &_stream = cout)
        : sep(_sep),end(_end),space(false),
            stream(_stream) {}
    ~_print() { stream << end; }
    template <typename T>
        _print &operator , (const T &t) {
            if (space) stream << sep;
            space = true;
            stream << t;
            return *this;
        }
};
#define print _print(),
int n,m;
bool solve(int days, vi cnt, vpii offers){
    vi latest(n+1);
    for(auto _ : offers)
        if(_.X <= days)
            latest[_.Y] = max(latest[_.Y],_.X);
    vi tmp;
    rep(i,1,n)
        rep(j,cnt[i-1])
            tmp.pb(latest[i]);
    sort(all(tmp));
    int buy = 0;
    for(int x : tmp){
        if(x > buy)
            ++buy;
    }
    return 2*sum(cnt)-buy <= days;
}
void _(){
    cin >> n >> m;
    vi arr(n);
    vpii offers(m);
    cin >> arr >> offers;
    int lo = sum(arr), hi = 2*sum(arr), mid;
    while(lo < hi){
        mid = (lo+hi)/2;
        if(solve(mid,arr,offers))
            hi = mid;
        else
            lo = mid+1;
    }
    print lo;
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        _();
}
