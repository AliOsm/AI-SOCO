#include <bits/stdc++.h>
using namespace std;
 
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'
#define int long long
int a1,a2,b1,b2;
int32_t main()
{
    IOS;
    cin>>a1>>b1>>a2>>b2;
    int a11,b11,a22,b22;
    a11=a1;b11=b1;a22=a2;b22=b2;
    map<int,int> c;
    for(int i=2;i*i<=a1;i++)
    {
        while(!(a1%i))
        {
            a1/=i;
            c[i]=1;
        }
    }
    if(a1!=1)
        c[a1]=1;
    for(int i=2;i*i<=b1;i++)
    {
        while(!(b1%i))
        {
            b1/=i;
            c[i]=1;
        }
    }
    if(b1!=1)
        c[b1]=1;
    while(!(a2%2))a2/=2;
    while(!(a2%3))a2/=3;
    while(!(b2%2))b2/=2;
    while(!(b2%3))b2/=3;
    for(int i=2;i*i<=a2;i++)
    {
        while(!(a2%i))
        {
            a2/=i;
            if(c.find(i)==c.end())
                return cout<<-1,0;
        }
    }
    if(a2!=1 && c.find(a2)==c.end())
        return cout<<-1,0;
    for(int i=2;i*i<=b2;i++)
    {
        while(!(b2%i))
        {
            b2/=i;
            if(c.find(i)==c.end())
                return cout<<-1,0;
        }
    }
    if(b2!=1 && c.find(b2)==c.end())
        return cout<<-1,0;
    a1=a11;b1=b11;a2=a22;b2=b22;
    priority_queue<pair<int,pair<pair<int,int>,pair<int,int>>>,vector<pair<int,pair<pair<int,int>,pair<int,int>>>>,greater<pair<int,pair<pair<int,int>,pair<int,int>>>>> pq;
    pq.push({0,{{a1,b1},{a2,b2}}});
    map<pair<int,pair<pair<int,int>,pair<int,int>>>,int> mp;
    while(pq.size()!=0)
    {
        auto i=pq.top();
        pq.pop();
        if(!(mp.find(i)==mp.end()))
            continue;
        mp[i];
        int a1=i.second.first.first;
        int b1=i.second.first.second;
        int a2=i.second.second.first;
        int b2=i.second.second.second;
        if(a1*b1==a2*b2)
        {
            cout<<i.first<<endl;
            cout<<a1<<' '<<b1<<'\n'<<a2<<' '<<b2;
            return 0;
        }
        if(a1*b1>a2*b2)
        {
            if(!(a1%2))
                pq.push({i.first+1,{{a1/2,b1},{a2,b2}}});
            if(!(a1%3))
                pq.push({i.first+1,{{2*a1/3,b1},{a2,b2}}});
            if(!(b1%2))
                pq.push({i.first+1,{{a1,b1/2},{a2,b2}}});
            if(!(b1%3))
                pq.push({i.first+1,{{a1,2*b1/3},{a2,b2}}});
        }
        else
        {
            if(!(a2%2))
                pq.push({i.first+1,{{a1,b1},{a2/2,b2}}});
            if(!(a2%3))
                pq.push({i.first+1,{{a1,b1},{2*a2/3,b2}}});
            if(!(b2%2))
                pq.push({i.first+1,{{a1,b1},{a2,b2/2}}});
            if(!(b2%3))
                pq.push({i.first+1,{{a1,b1},{a2,2*b2/3}}});
        }
    }
    cout<<-1;
}
