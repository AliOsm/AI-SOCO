#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define mt make_tuple
#define DEBUG 1
#define cerr if (DEBUG) cerr
#define fprintf if (DEBUG) fprintf
#define local freopen("in.txt","r",stdin);
#define test cerr<<"hi\n";
#define tr(x) cerr<<#x" "<<x<<'\n';
#define fi first
#define se second
#define HH1 402653189
#define HH2 1610612741
#define INF 0x3f3f3f3f
#define tii tuple<int,int,int>
#define npos string::npos

using namespace std;

#define MOD 1000000007LL
#define MAXN 500005

int p[MAXN][22];
int n, m;
vector<pii> segs;
vector<pii> px[MAXN];

void precom() {
	for (pii op : segs) {
		px[op.fi].pb(mp(+1, op.se));
		px[op.se].pb(mp(-1, op.se));
	}
	
	multiset<int> s;
	
	for (int pos = 0; pos < MAXN; pos++) {
		for (pii op : px[pos]) {
			if (op.fi == +1) s.insert(op.se);
			if (op.fi == -1) s.erase(s.find(op.se));
		}
		
		if (s.size()) p[pos][0] = *s.rbegin();
		else p[pos][0] = -1;
	}
}

void build_table() {
	for (int lg = 1; lg <= 20; lg++) {
		for (int v = 0; v < MAXN; v++) {
			if (p[v][lg - 1] == -1) continue;
			p[v][lg] = p[p[v][lg - 1]][lg - 1];
		}
	}
}

int main(){
	ios_base::sync_with_stdio(0); cin.tie(0);

	memset(p, -1, sizeof(p));
	
	int q;
	cin >> n >> q;
	
	for (int i = 0; i < n; i++)	{
		int x, y; cin >> x >> y;
		segs.pb(mp(x, y));
	}
	
	precom();
	build_table();
	
	while (q--) {
		int x, y; cin >> x >> y; y--;
		
		int ans = 0, cur = x;
		
		for (int lg = 20; lg >= 0; lg--) {
			if (p[cur][lg] == -1 || p[cur][lg] > y) continue;
			
			cur = p[cur][lg];
			ans += 1 << lg;
		}
		
		cur = p[cur][0];
		
		if (cur == -1 || cur <= y) cout << -1 << '\n';
		else cout << ans + 1 << '\n';
	}
}

