#include<bits/stdc++.h> 

#define ll long long
#define ios ios_base::sync_with_stdio(false);cin.tie(NULL);
#define sz size()
#define pb push_back
#define mp make_pair
#define F first
#define S second     
#define all(s) s.begin(), s.end()
#define file(s) freopen(s".in","r",stdin); freopen(s".out","w",stdout);

using namespace std;
const int maxn = (int)1e5 + 78;
struct tree{ 
    int t[4 * maxn], lz[4 * maxn];
		inline void push(int v, int tl, int tr){
        if(lz[v] != -1){
            t[v] = (tr - tl + 1) * lz[v];
            if(tl != tr)
                lz[v + v + 1] = lz[v + v] = lz[v];
            lz[v] = -1;
        }
    }
    void upd(int l, int r, int val, int v = 1, int tl = 1, int tr = maxn){
        push(v, tl, tr);
        if(l > r || tl > r || tr < l)
            return;
        if(l <= tl && tr <= r){
            lz[v] = val;
            push(v, tl, tr);
            return;
        }
        int tm = (tl + tr) >> 1;
        upd(l, r, val, v + v, tl, tm);
        upd(l, r, val, v + v + 1, tm + 1, tr);
        t[v] = t[v + v] + t[v + v + 1];
    }
    int get(int l, int r, int v = 1, int tl = 1, int tr = maxn){
        push(v, tl, tr);
        if(l > r || tl > r || tr < l)
            return 0;
        if(l <= tl && tr <= r)
            return t[v];
        int tm = (tl + tr) >> 1;
        return get(l, r, v + v, tl, tm) + get(l, r, v + v + 1, tm + 1, tr);
    }
} t[37];
int sort1(int l, int r){
	int pos = l;
	for(int i = 0; i <= 25; i++){
		int cnt = t[i].get(l, r);
		t[i].upd(l, r, 0);
		t[i].upd(pos, pos + cnt - 1, 1);
		pos += cnt;
	}
}
int sort2(int l, int r){
	int pos = l;
	for(int i = 25; i >= 0; i--){
		int cnt = t[i].get(l, r);
		t[i].upd(l, r, 0);
		t[i].upd(pos, pos + cnt - 1, 1);
		pos += cnt;
	}
}
int n, m;
char s[maxn];
int main () {
	cin >> n >> m;
	for(int i = 1; i <= n; i++){
		cin >> s[i];
		t[s[i] - 'a'].upd(i, i, 1);
	}
	for(int i = 1; i <= m; i++){
		int l, r, t;
		cin >> l >> r >> t;
		if(t){
			sort1(l, r);
		}
		else{
			sort2(l, r);
		}
	}
	string ans = "";
	for(int i = 1; i <= n; i++){
		for(int j = 0; j <= 25; j++){
			if(t[j].get(i, i)){
				cout << char(j + 'a');
				break;
			}
		}
	}
}