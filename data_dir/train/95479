/*
 * app.cpp
 *
 *  Created on: 18.06.2015
 *      Author: Eran
 */

#include <bits\stdc++.h>

using namespace std;

#define stdio true
#define input "floor.in"
#define output "floor.out"

const int alpha = 26;
const int maxn = 305;
const int logn = 18;
const int inf = 2000000000;
const long long mod = 18592061276251;
const long long l_inf = (long long) 4e18;
const double eps = 1e-8;

int n, k;
string str;
vector<int> pref, suff;

void pref_func() {
	pref = vector<int>(n, 0);
	for (int i = 1; i < n; i++) {
		int v = pref[i - 1];
		while (v > 0 && str[v] != str[i])
			v = pref[v - 1];
		if (str[v] == str[i])
			v++;
		pref[i] = v;
	}
}

void z_func() {
	suff = vector<int>(n, 0);
	for (int i = 1, l = 0, r = 0; i < n; i++) {
		if (i <= r)
			suff[i] = min(r - i + 1, suff[i - l]);
		while (i + suff[i] < n && str[suff[i]] == str[i + suff[i]])
			suff[i]++;
		if (i + suff[i] - 1 > r) {
			l = i;
			r = i + suff[i] - 1;
		}
	}
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.precision(10);
	cout << fixed;
	if (!stdio) {
		freopen(input, "r", stdin);
		freopen(output, "w", stdout);
	}
	cin >> n >> k >> str;
	pref_func();
	z_func();
	int cycle = 0, max_pref = 0, max_pos = 0;
	for (int pos = 1; pos <= n; pos++) {
		if (pos % (pos - pref[pos - 1]) == 0) {
			int len = pos - pref[pos - 1];
			int cnt = pos / len;
			len *= cnt / k;
			if (min(len, suff[len * k]) + len * k > max_pos) {
				cycle = len;
				max_pref = min(len, suff[len * k]);
				max_pos = cycle * k + max_pref;
			}
			if (cnt % (k + 1) == 0) {
				cout << '1';
				continue;
			}
		}
		if (max_pos >= pos) {
			cout << '1';
		} else {
			cout << '0';
		}
	}
}

