#include <cstdio>
#include <vector>
#include <utility>
#include <algorithm>
 
using pii = std::pair<int, int>;
using vii = std::vector <  pii > ;
using vi = std::vector< int >;
using ll = long long;

#define x  first
#define y  second

bool is_square(const vii& v) {
	int x_left = INT_MAX, x_right = INT_MIN, y_down = INT_MAX, y_up = INT_MIN;
	for (const pii& p : v) {
		x_left  = std::min ( x_left  , p.x  ) ;
		x_right = std::max ( x_right , p.x  ) ;
		y_down  = std::min ( y_down  , p.y  ) ;
		y_up    = std::max ( y_up    , p.y  ) ;
	}

	int dx = x_right - x_left;
	int dy = y_up - y_down;
	if ( dx < 0 || dy <  0 || dx != dy ) {
		return false;
	}

	for (pii p : v) {
		bool left_side  = ( p.x == x_left  && p.y >= y_down && p.y <= y_up    ) ;
		bool right_side = ( p.x == x_right && p.y >= y_down && p.y <= y_up    ) ;
		bool up_side    = ( p.y == y_up    && p.x >= x_left && p.x <= x_right ) ;
		bool down_side  = ( p.y == y_down  && p.x >= x_left && p.x <= x_right ) ;

		if ( ! (left_side || right_side || up_side || down_side ) ) 
		{
			return false;
		}
	}

	return true;
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif //ONLINE_JUDGE
	 
	vii points;
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n*4+1; ++i) {
		pii p;
		scanf("%d%d", &p.x, &p.y);
		points.push_back(p);
	}

	vii v;
	for (int i = 0; i < 4 * n + 1; ++i) {
		v.clear();
		for (int j = 0; j < 4 * n + 1; ++j) {
			if (j == i)continue;
			v.push_back(points[j]);
		}
		if (is_square(v)) {
			printf("%d %d\n", points[i].x, points[i].y);
			return 0;
		}
	}
	

}