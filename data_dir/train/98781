/// In The Name Of God

#include <bits/stdc++.h>

#define f first
#define s second

#define pb push_back
#define pp pop_back
#define mp make_pair

#define sz(x) (int)x.size()
#define sqr(x) ((x) * 1ll * (x))
#define all(x) x.begin(), x.end()

#define rep(i, l, r) for (int i = (l); i <= (r); i++)
#define per(i, l, r) for (int i = (l); i >= (r); i--)

#define Kazakhstan ios_base :: sync_with_stdio(0), cin.tie(0), cout.tie(0);

#define nl '\n'
#define ioi exit(0);

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const int N = (int)14 + 7;
const int inf = (int)1e9 + 7;
const int mod = (int)1e9 + 7;
const ll linf = (ll)1e18 + 7;

const int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1};
const int dy[] = {0, 1, 0, -1, 1, -1, 1, -1};

using namespace std;

int n;
char a[N][N];

vector <ll> dp[1 << 14][14];

int main() {
	#ifdef wws
		freopen ("in.txt", "r", stdin);
	#endif
	Kazakhstan
	cin >> n;
	rep(i, 0, n - 1) {
		cin >> a[i];
	}
  for (int mask = 0; mask < (1 << n); mask++) {
    for (int last = 0; last < n; last++) {
      if (mask & (1 << last)) {
        int cnt = __builtin_popcount(mask);
        dp[mask][last].resize(1 << (cnt - 1), 0);
        if (cnt == 1) dp[mask][last][0] = 1;
      }
    }
  }
  for (int mask = 0; mask < (1 << n); mask++) {
    for (int last = 0; last < n; last++) {
      if (mask & (1 << last)) {
        int id = __builtin_popcount(mask) - 1;
        for (int nxt = 0; nxt < n; nxt++) {
          if (mask & (1 << nxt)) continue;
          int nxt_adj = (a[last][nxt] == '1') << id;
          for (int adj = 0; adj < sz(dp[mask][last]); adj++) {
            dp[mask | (1 << nxt)][nxt][adj | nxt_adj] += dp[mask][last][adj];
          }
        }
      }
    }
  }
	for (int mask = 0; mask < (1 << (n - 1)); mask++) {
    ll ans = 0;
    for (int i = 0; i < n; i++) {
      ans += dp[(1 << n) - 1][i][mask];
    }
    cout << ans << ' ';
	}
	ioi
}
