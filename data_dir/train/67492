/**
 * Dont raise your voice, improve your argument.
 * --Desmond Tutu
 */

#include <bits/stdc++.h>
using namespace std;

const double PI = acos(-1);
typedef long long ll;
#define int ll
#define fori(n) for(int i=0; i<int(n); i++)

#define cins(s) string s; cin>>s;
#define cini(i) int i; cin>>i;
#define cind(d) double d; cin>>d;
#define cinai(a, n) vi a(n); fori(n) { cin>>a[i]; }
#define cinas(s, n) vs s(n); fori(n) { cin>>s[i]; }
#define cinad(a, n) vd a(n); fori(n) { cin>>a[i]; }

typedef pair<int, int> pii;
typedef pair<double, double> pdd;
typedef vector<double> vd;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<string> vs;

/* brute force count all n possible solutions, ignore center.
 * multiply by n because of n possible values in center.
 */
void solve() {
    cini(n);
    cini(a);
    cini(b);
    cini(c);
    cini(d);

    int ans=0;
    for(int i=1; i<=n; i++) {
        int sum=a+b+i;
        int val=sum-b-d;
        if(val<=0 || val>n)
            continue;
        val=sum-a-c;
        if(val<=0 || val>n)
            continue;
        val=sum-c-d;
        if(val<=0 || val>n)
            continue;
        ans++;
    }
    ans*=n;
    cout<<ans<<endl;
}

signed main() {
    cin.tie(nullptr);
    std::ios::sync_with_stdio(false);
        solve();
}

