#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

#define EPS 1e-9
#define INF 1070000000LL
#define MOD 1000000007LL
#define fir first
#define foreach(it,X) for(__typeof((X).begin()) it=(X).begin();it!=(X).end();it++)
#define ite iterator
#define mp make_pair
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<(n);i++)
#define pb push_back
#define sec second
#define sz(x) ((int)x.size())

using namespace std;

struct timer{
	time_t start;
	timer(){start=clock();}
	~timer(){cout<<1.*(clock()-start)/CLOCKS_PER_SEC<<" secs"<<endl;}
};

typedef istringstream iss;
typedef long long ll;
typedef pair<int,int> pi;
typedef stringstream sst;
typedef vector<int> vi;

int n,k,l,a[111];
int on[10010];
int m,pos[22];
int dist[22][10010];
int dp[1<<20];

int main(){
	cin.tie(0);
	ios_base::sync_with_stdio(0);
	
	cin>>n>>k>>l;
	rep(i,k){
		int x;
		cin>>x;
		on[x]=1;
	}
	rep(i,n+1){
		if(on[i]^on[i+1]){
			pos[m++]=i;
		}
	}
	rep(i,l)cin>>a[i];
	rep(i,m){
		rep(j,n+1)dist[i][j]=INF;
		dist[i][pos[i]]=0;
		queue<int> Q;
		Q.push(pos[i]);
		while(sz(Q)){
			int x=Q.front();
			Q.pop();
			rep(j,l)for(int sign=-1;sign<2;sign+=2){
				int nx=x+sign*a[j];
				if(0<=nx && nx<=n && dist[i][nx]==INF){
					dist[i][nx]=dist[i][x]+1;
					Q.push(nx);
				}
			}
		}
	}
	rep(i,1<<m)dp[i]=INF;
	dp[0]=0;
	rep2(mask,1,1<<m)if(__builtin_popcount(mask)%2==0){
		int low=0;
		while(!(mask>>low&1))low++;
		rep2(i,low+1,m)if(mask>>i&1){
			dp[mask]=min(dp[mask],dp[mask^(1<<low)^(1<<i)]+dist[low][pos[i]]);
		}
	}
	cout<<(dp[(1<<m)-1]<INF?dp[(1<<m)-1]:-1);
}
