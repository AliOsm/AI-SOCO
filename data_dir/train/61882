#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define read(x) scanf( "%lld" , &x )
#define forq(i , a , b) for (int i = (a); i <= (b); ++i)
#define forr(i , b) forq( i , 0 , b - 1 )
#define carr( n , array ) forr(i , n) read(array[i])
#define coutarr(n , array ) cout << "\n" ; forr (i , n) printf("%lld " , array[i]) ; cout << "\n" ;
#define F first
#define S second
#define IF ->first
#define IS ->second
#define qqmemset(array , val) memset (array , val , sizeof(array))
#define ALLV(vect) vect.begin() , vect.end()
#define sizee(vec) (ll)vec.size()

ll R = 7 + 1e9 , NUMTESTCASE ;
const int NN = 10 + 2e5 ;
const double pi = acos(-1.0) ;
int di [4] = {1 , 0 , -1 , 0} , dj [4] = {0 , 1 , 0 , -1} , DI [8] = {1 , 1 , 0 , -1 , -1 , -1 , 0 , 1} , DJ [8] = {0 , 1 , 1 , 1 , 0 , -1 , -1 , -1} ;
using namespace std;
ll a[NN] , dp[NN][4] , n , ans = 0 ;
int main()
{
    cin >> n;
    forq (i , 1 , n) {
        scanf("%lld" , &a[i]) ; dp[i][1] = dp[i - 1][1] +  a[i] ;
    }
    int j = 1 ;
    for (int i = n ; i >= 1 ; i --) {
        dp[i][2] = dp[i + 1][2] + a[i] ;
        while (j < i && dp[i][2] > dp[j][1]) j ++ ;
        if (j >= i) break ;
        if (dp[i][2] == dp[j][1]) ans = max(ans , dp[i][2]) ;
    }
    cout << ans ;
    return 0;
}
