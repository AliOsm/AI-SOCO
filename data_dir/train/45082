#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <queue>
#include <set>
#include <map>
#include <stack>
#include <cmath>
#include <ctime>
#include <string>
#include <cstdlib>
#include <algorithm>
using namespace std;
#define read            freopen("C:\\Users\\USER\\Desktop\\in.txt", "r", stdin)
#define write           freopen("C:\\Users\\USER\\Desktop\\in.txt", "a", stdout)
#define repi(n)         for (i=0; i<(n); i++)
#define repj(n)         for (j=0; j<(n); j++)
#define rep1(a, n)      for (i=(a); i<(n); i++)
#define pii             pair<int, int>
#define pll             pair<LL, LL>
#define inf             1<<30
#define in(a)           scanf("%d", &a)
#define ins(a)          scanf("%s", a)
#define in2(a, b)       scanf("%d%d", &a, &b)
#define in3(a, b, c)    scanf("%d%d%d", &a, &b, &c)
#define pn              printf("\n");
#define pcs(a)          printf("Case %d: ", a)
#define pr(a)           printf("%d\n", a)
#define pr(a)           printf("%d\n", a)
#define prs(a)          printf("%d ", a)
#define pr2(a, b)       printf("%d %d\n", a, b)
#define pr3(a, b ,c)    printf("%d %d %d\n", a, b, c)
#define MP              make_pair
#define vi              vector<int>
#define vll             vector<LL>
#define msi             map<string, int>
#define mll             map<LL, LL>
#define _ceil(n, a)     ((n)%(a)==0?((n)/(a)):((n)/(a)+1))
#define cl              clear()
#define sz              size()
#define pb              push_back
#define MEM(a, b)       memset((a), (b), sizeof(a))
#define MAX(A,B)        (((A)>(B))?(A):(B))
#define MIN(A,B)        (((A)<(B))?(A):(B))
#define all(X)          (X).begin(), (X).end ()
#define iter(it, X)     for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
#define ext(a)          {printf("%s\n", a); return 0;}
#define oka(x, y)       ((x)>=0&&(x)<row&&(y)>=0&&(y)<col)
#define mod             1000000007
typedef long long LL;
//int  dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int  dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int  dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//bool check(int n, int pos) {return (n & (1<<pos))>>pos;} //typecast 1 in case of LL
//int  on(int n, int pos) {return n | (1<<pos);} //typecast 1 in case of LL
//int  off(int n, int pos) {return n & ~(1<<pos);} //typecast 1 in case of LL
//bool operator < (const data &d) const{return cost<d.cost;}

/* ***************************************************************************************
   *************************************************************************************** */
const int M=510000;
int A[M];
int main()
{
#ifndef ONLINE_JUDGE
    read;
#endif
    int i, j, k, n, last, sum, temp;

    in(n);
    for (i=1; i<=n; i++) in(A[i]);

    A[0]=A[1];
    A[n+1]=A[n];
    int maxx=0;
    last=-1;

    for (i=1; i<=n+1; i++)
    {
        if (A[i]==0&&A[i+1]==1)
        {
            if (last==-1) last=i-1;
            i++;
        }
        else if (last!=-1)
        {
            if (A[i]==0&&A[last]==0)
            {
                for (j=last+1; j<i; j++) A[j]=0;
                maxx=MAX(maxx, (i-last-1)/2);
            }
            else if (A[i]==1&&A[last]==1)
            {
                for (j=last+1; j<i; j++) A[j]=1;
                maxx=MAX(maxx, (i-last-1)/2);
            }
            else if (A[i]==0&&A[last]==1)
            {
                k=(i-last-1)/2;
                for (j=0; j<k; j++) A[last+j+1]=1;
                for (; last+j+1<i; j++) A[last+j+1]=0;

                maxx=MAX(maxx, k);
            }
            else
            {
                k=(i-last-1)/2;
                for (j=0; j<k; j++) A[last+j+1]=0;
                for (; last+j+1<i; j++) A[last+j+1]=1;

                maxx=MAX(maxx, k-1);
            }

            last=-1;
        }
    }

    pr(maxx);
    for (i=1; i<=n; i++) prs(A[i]);

return 0;
}
