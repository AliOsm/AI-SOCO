#include <iostream>
#include <cmath>
#include <algorithm>
#include <string>
#include <vector>

using namespace std;

const int N = 2 * 1e5 + 100;
const int INF = 1e9;

int a[N];

int w[N], l[N], W[N], L[N];

vector<pair<int, int> >ans;

int main()
{
    int n;
    cin >> n;

    for (int i=1; i<=n; i++)
        cin >> a[i];

    int winner = a[n];

    for (int i=1; i<N; i++)
        w[i] = l[i] = INF;

    for (int i=1; i<=n; i++)
    {
        W[i] = W[i-1];
        L[i] = L[i-1];
        if (a[i] == winner)
        {
            W[i]++;
            w[W[i]] = i;
        }
        else
        {
            L[i]++;
            l[L[i]] = i;
        }
    }

    int WIN = W[n];
    int LOSE = L[n];



    for (int i=1; i<=n; i++)
    {
        int win = 0, lose = 0;
        int sw = 0, sl = 0;
        int lastw=0, lastl=0;
        while (win < WIN)
        {

            int ww = w[win + i];
            int ll = l[lose + i];

            if (ww == INF && ll == INF)
                break;

            if (ww < ll)
            {
                sw++;
                lastw = ww;
            }
            else
            {
                sl++;
                lastl = ll;
            }

            int pos = min(ll, ww);

            win = W[pos];
            lose = L[pos];
        }

        if (sw > sl && lastw == n)
            ans.push_back(make_pair(sw, i));
    }

    sort(ans.begin(), ans.end());

    cout << ans.size() << "\n";

    for (int i=0; i<ans.size(); i++)
        cout << ans[i].first << " " << ans[i].second << "\n";
}
