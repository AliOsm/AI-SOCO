#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <fstream>
#include <cstdio>
#include <map>
#include <hash_map>
#include <string>
#include <iomanip>
#include <vector>
#include <memory.h>
#include <queue>
#include <set>
#include <stack> 
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include <bitset>
#pragma comment (linker, "/STACK:267177216")
using namespace std;
#define mems(A, val) memset(A, val, sizeof(A))
#define mp(a, b) make_pair(a, b)
#define all(B) (B).begin(), (B).end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define forit (it, coll) for(auto it = coll.begin(); it != coll.end(); ++it)
const int MAX = 2147483647;
const int MAXN = 110000 / 2;
typedef long long LL;
const LL MOD = 1000000000 + 7;
const double PI = 3.1415926535897932384626433832795;

int main(int argc)
{
#ifdef _DEBUG
    freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#else
    //freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
    //freopen("sum.in", "r", stdin); freopen("sum.out", "w", stdout);
#endif
    int n, k;
    scanf("%d%d", &n, &k);

    vector<int> s(n);
    forn(i, 0, n)scanf("%d", &s[i]);
    int maxi = s.back();

    while (s.size() > 0 && (s.size() - 1) <= 2 * (k - 1)){
        s.pop_back();
        k--;
    }

    for (int i = 0; i < s.size(); ++i){
        if (k == 0)
        {
            maxi = max(maxi, s[i]);
        }
        else{
            maxi = max(maxi, s[i] + s.back());
            k--;
            s.pop_back();
        }
    }

    cout << maxi;

    return 0;
}