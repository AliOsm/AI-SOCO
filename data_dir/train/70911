//IOI 2021

#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 1000 + 17, MAXK = 51, mod = 1e9 + 7;

int sum(int a, int b) {
	a += b;
	if (a >= mod)
		a -= mod;
	return a;
}
int mul(int a, int b) {
	return (1LL * a * b) % mod;
}

int pw(int x, int y) {
	int res = 1;
	while (y) {
		if (y & 1)
			res = mul(res, x);
		y >>= 1;
		x = mul(x, x);
	}
	return res;
}

int q, dp[MAXK][MAXN][MAXN], ans[MAXN][MAXN], Fac[2 * MAXN], FacRev[2 * MAXN];

void prep_fac() {
	Fac[0] = 1;
	for (int i = 1; i < 2 * MAXN; i++)
		Fac[i] = mul(i, Fac[i - 1]);
}
void prep_facRev() {
	for (int i = 0; i < 2 * MAXN; i++)
		FacRev[i] = pw(Fac[i], mod - 2);
}
void prep_dp() {
	for (int i = 0; i < MAXN; i++)
		dp[0][0][i] = 1;
	for (int i = 1; i <= 50; i++)
		for (int j = 1; j < MAXN; j++)
			for (int p = 1; p < MAXN; p++)
				dp[i][j][p] = sum(dp[i][j][p - 1], (j >= p? dp[i - 1][j - p][p - 1]: 0));
}
int C(int n, int r) {
	return mul(Fac[n], mul(FacRev[r], FacRev[n - r]));
}
void prep_ans() {
	for (int i = 1; i < MAXN; i++)
		for (int j = 1; j <= 50; j++)
			for (int p = 1; p <= i; p++)
				ans[i][j] = sum(ans[i][j], mul(mul(Fac[j], dp[j][p][i]), C(i - p + j, j)));
}

int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	prep_fac();
	prep_facRev();
	prep_dp();
	prep_ans();

	cin >> q;
	while (q--) {
		int n, k;
		cin >> n >> k;
		cout << (k > 50? 0: ans[n][k]) << '\n';
	}
	return 0;
}
