#include<bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define all(a) a.begin(),a.end()
#define endl '\n'

using namespace std;

const int N=5e5+3;
const int inf=1e9+3;
const int md=1e9+7;

int n,sz,q,t,l,r,x,bg,bg1;
int a[N],d[N*4];

void update(int v,int x)
{
    v+=sz-1;
    d[v]=x;
    v/=2;
    while(v)
    {
        d[v]=__gcd(d[v+v],d[v+v+1]);
        v/=2;
    }
}

int get_gc(int v,int l,int r,int l_v,int r_v)
{
    if(l>r_v||r<l_v)return 0;
    if(l>=l_v&&r<=r_v)
    {
        return d[v];
    }
    int mid=(l+r)/2;
    return __gcd(get_gc(v+v,l,mid,l_v,r_v),get_gc(v+v+1,mid+1,r,l_v,r_v));
}

int get_k(int v,int l,int r,int l_v,int r_v,int x)
{
    if(l>r_v||r<l_v)return -1;
    if(l>=l_v&&r<=r_v)
    {
        if(d[v]%x==0)
        {
            return -1;
        }
    }

    if(l==r)
        return l;

    int mid,res;
    mid=(l+r)/2;
    res=get_k(v+v,l,mid,l_v,r_v,x);
    if(res!=-1)return res;
    return get_k(v+v+1,mid+1,r,l_v,r_v,x);
}

main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

    cin>>n;
    sz=1;
    while(sz<n)sz*=2;
    for(int i=1;i<=n;++i)
    {
        cin>>a[i];
        d[i+sz-1]=a[i];
    }

    for(int i=sz-1;i>=1;i--)
    {
        d[i]=__gcd(d[i+i],d[i+i+1]);
    }

    cin>>q;
    while(q--)
    {
        cin>>t;
        if(t==1)
        {
            cin>>l>>r>>x;
            bg=get_k(1,1,sz,l,r,x);
            if(bg==-1)
            {
                cout<<"YES"<<endl;
                continue;
            }
            bg1=bg;

            bg=get_gc(1,1,sz,l,bg1-1);
            if(bg%x!=0)
            {
                cout<<"NO"<<endl;
                continue;
            }

            bg=get_gc(1,1,sz,bg1+1,r);
            if(bg%x!=0)
            {
                cout<<"NO"<<endl;
                continue;
            }
            cout<<"YES"<<endl;

        }else
        {
            cin>>l>>r;
            update(l,r);
        }
    }

}
