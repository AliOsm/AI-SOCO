#include <iostream>
#include <deque>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
using namespace std;

int main(){
	ios_base::sync_with_stdio(false);
	int n;
	cin >> n;
	priority_queue <int> s;
	vector < pair <string, int> > res;
	while(n--) {
		string cmd;
		cin >> cmd;
		if(cmd == "insert") {
			int x;
			cin >> x;
			s.push(-1.0 * x);
			res.push_back(make_pair(cmd, x));
		} else if(cmd == "removeMin") {
			if(!s.empty()) {
				s.pop();
			} else {
				res.push_back(make_pair("insert", 1));
			}
			res.push_back(make_pair(cmd, 1e9 + 1));
		} else {
			int mn;
			cin >> mn;
			bool in = false;
			while(!s.empty()) {
				int cur = -1.0 * s.top();
				if(cur == mn) {
					in = true;
					break;
				} else if(cur < mn) {
					res.push_back(make_pair("removeMin", 1e9 + 1));
					s.pop();
				} else {
					break;
				}
			}
			if(!in) {
				s.push(-1.0 * mn);
				res.push_back(make_pair("insert", mn));
			}
			res.push_back(make_pair(cmd, mn));
		}
	}
	cout << res.size() << endl;
	for(int i = 0; i < res.size(); ++i) {
		if(res[i].second == 1e9 + 1) {
			cout << res[i].first << endl;
		} else {
			cout << res[i].first << " " << res[i].second << endl;
		}
	}
    return  0;
}