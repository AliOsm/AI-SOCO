#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <typeinfo>
#include <utility>
#include <valarray>
#include <vector>
#include <cstring>
#include <unordered_map>
#include <unordered_set>

using namespace std;

#define ll long long
#define all(aaa) aaa.begin(), aaa.end()
#pragma warning(disable : 4996)

signed main() {
#ifdef HOME
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n;
	cin >> n;


	map<ll, ll> mp;

	for (int i = 0; i < n; i++) {
		ll x, y;
		cin >> x >> y;
		y -= x * x;

		if (mp.count(x))
			mp[x] = max(mp[x], y);
		else
			mp[x] = y;
	}

	vector<pair<ll, ll>> v;
	for (auto p : mp) {
		while (v.size() > 1 && 
			(v[v.size() - 1].first - v[v.size() - 2].first) * 
			(p.second - v[v.size() - 2].second) -
			(v[v.size() - 1].second - v[v.size() - 2].second) *
			(p.first - v[v.size() - 2].first) >= 0) {
			v.pop_back();
		}
		v.push_back(p);
	}

	cout << v.size() - 1;

	return 0;
}