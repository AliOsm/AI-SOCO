#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int MX = 200005;
const int MD = 998244353;

int mod_mult(ll a, ll b) {
	return (a * b) % MD;
}

vector<int> neigh[MX];
int fact[MX];

int dfs(int v, int p)
{
	int res = fact[neigh[v].size()];
	for (auto u : neigh[v]) {
		if (u == p) continue;
		res = mod_mult(res, dfs(u, v));
	}
	return res;
}

int main()
{
	fact[0] = 1;
	for (int i = 1; i < MX; i++) fact[i] = mod_mult(fact[i - 1], i);
	
	int n;
	ignore = scanf("%d", &n);
	
	for (int i = 0; i < n - 1; i++) {
		int u, v;
		ignore = scanf("%d %d", &u, &v);
		neigh[u].push_back(v);
		neigh[v].push_back(u);
	}
	
	int ans = n;
	for (auto u : neigh[1]) {
		int tmp = dfs(u, 1);
		ans = mod_mult(ans, tmp);
	}
	ans = mod_mult(ans, fact[neigh[1].size()]);
	
	printf("%d\n", ans);
}
