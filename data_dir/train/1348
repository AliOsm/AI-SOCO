/**
*
* Author: MARS
* Lang: GNU C++14
*
**/

#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair < int , int >
#define LS pair < ll , string >

typedef unsigned long long ull;
typedef long double ldbl;
typedef long long ll;
typedef double dbl;

const ldbl E = 2.71828182845904523536;
const ldbl pi = acos(-1);
const dbl eps = 1e-9;
const ll mod = 1e9+7;
const ll inf = 1LL<<30;

/** /////////// ** Code ** /////////// **/

const int N=200200;
vector<int>adj[N];
map<ii,bool>exist;

int U[N],V[N];
int deg[N];
int ans[N];
set<ii>s;

int n,m,k;

void rem(){
    while(s.size()){
        int d=(*s.begin()).F;
        int u=(*s.begin()).S;
        if(d >= k) break;

        s.erase(s.begin());

        for(auto v:adj[u]){
            if(exist.count({v,u})){
                exist.erase({v,u});
                exist.erase({u,v});

                s.erase({deg[v],v});
                deg[v]--;
                s.insert({deg[v],v});
            }
        }
    }
}

int main()
{
    scanf("%d%d%d",&n,&m,&k);
    for(int i=0 ; i<m ; i++){
        scanf("%d%d",&U[i],&V[i]);
        int u=U[i] , v=V[i];
        adj[u].push_back(v);
        adj[v].push_back(u);
        deg[u]++ , deg[v]++;
        exist[{u,v}]=exist[{v,u}]=1;
    }

    for(int i=1 ; i<=n ; i++)
        s.insert({deg[i],i});


    rem();

    for(int i=m-1 ; i>=0 ; i--){
        ans[i]=s.size();
        int u=U[i] , v=V[i];
        if(!exist.count({u,v})) continue;

        exist.erase({u,v});
        exist.erase({v,u});

        s.erase({deg[u],u});
        deg[u]--;
        s.insert({deg[u],u});

        s.erase({deg[v],v});
        deg[v]--;
        s.insert({deg[v],v});

        rem();
    }


    for(int i=0 ; i<m ; i++)
        printf("%d\n",ans[i]);

    return 0;
}
