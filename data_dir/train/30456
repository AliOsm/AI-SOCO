#include <bits/stdc++.h>

using namespace std;

#define fi first
#define se second
#define pf push_front
#define pb push_back
#define mk make_pair
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)x.size()
#define SWS ios_base::sync_with_stdio(false)
#define rfile freopen("input.txt", "r", stdin)
#define wfile freopen("output.txt", "w", stdout)
#define files rfile; wfile

typedef long long ll;
typedef long double ld;

const int Z = (int)1e3 + 111;
const int inf = (int)1e9 + 111;
const ll llinf = (ll)1e18 + 5;
const int MOD = (int)1e9 + 7;

ll dp[Z][10 * Z], c[Z], cost[Z];

int main () {
	srand(time(0));
	//files;
	SWS;
	int n;
	ll w, b, x, sum = 0;
	cin >> n >> w >> b >> x;
	for (int i = 1; i <= n; ++i) {
        cin >> c[i];
        sum += c[i];
	}
	for (int i = 1; i <= n; ++i) {
        cin >> cost[i];
	}
	for (int i = 0; i <= n; ++i) {
        for (int j = 0; j <= sum; ++j) {
            dp[i][j] = -llinf;
        }
	}
	dp[0][0] = w;
	///pref[pref][cnt]
	for (int i = 1; i <= n; ++i) {
        for (int cnt = 0; cnt <= sum; ++cnt) {
            for (int cur = 0; cur <= min((int)c[i], cnt); ++cur) {
                if (dp[i-1][cnt-cur] == -llinf) continue;
                if (min(dp[i-1][cnt-cur] + x, w + (cnt - cur) * b) < cost[i] * cur) continue;
                dp[i][cnt] = max(dp[i][cnt], min(dp[i-1][cnt-cur] + x, w + (cnt - cur) * b) - cost[i] * cur);
            }
        }
	}
	int ans = 0;
	for (int i = 0; i <= sum; ++i) {
        if (dp[n][i] != -llinf) ans = i;
	}
	cout << ans;
	return 0;
}
