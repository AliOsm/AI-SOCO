#include <iostream>
#include <iomanip>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <math.h>
#include <queue>
#include <functional>

using namespace std;
using ll = long long;

#define endl "\n"

// g++ -std=c++14 -o out sol.cc && ./out < input.txt

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	auto cmp = [] (int a, int b) {
		return a > b;
	};
	priority_queue<int, vector<int>, decltype(cmp)> queue(cmp);
	vector<pair<string, int>> res;
	auto rput = [&] (string s, int val) {
		res.push_back(make_pair(s, val));
	};
	int n; cin >> n;
	while(n --> 0) {
		string op; cin >> op;
		if (op == "removeMin") {
			if (!queue.empty()) {
				rput("removeMin", queue.top());
				queue.pop();
			} else {
				rput("insert", 0);
				rput("removeMin", 0);
			}
		} else if (op == "insert") {
			int val; cin >> val;
			queue.push(val);
			rput("insert", val);
		} else {
			int val; cin >> val;
			while(!queue.empty() && queue.top() < val) {
				queue.pop();
				rput("removeMin", 0);
			}
			if (queue.empty() || queue.top() != val) {
				rput("insert", val);
				queue.push(val);
			}
			rput("getMin", val);
		}
	}
	cout << res.size() << endl;
	for(auto & pair : res) {
		cout << pair.first;
		if (pair.first != "removeMin") cout << " " << pair.second;
		cout << endl;
	}
}
