#include <bits/stdc++.h>
using namespace std;

//matrix multiplication con memoria dinamica, funciona ok

typedef long long int64;
const int MAX = 105;
const int MOD = 998244353;

struct matrix { //matrix empieza de 0
	int n, m;
	int a[MAX][MAX];

	matrix() {}

	matrix(int n_, int m_) {
		n = n_, m = m_;

		for(int i = 0; i < n; i++)
			for(int j = 0; j < m; j++)
				a[i][j] = 0;
	}

	matrix operator * (const matrix &t) {
		int p = t.m;
		matrix res(n, p);

		for(int i = 0; i < n; i++) {
			for(int j = 0; j < p; j++) {
				for(int k = 0; k < m; k++) {
					int v = (a[i][k] * 1LL * t.a[k][j]) % (MOD - 1);
					res.a[i][j] = (res.a[i][j] + v) % (MOD - 1);
				}
			}
		}

		return res;
	}

	void print() {
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < m; j++)
				printf("%d ", a[i][j]);
			printf("\n");
		}

		printf("\n");
	}
};

int k, n, m;

matrix getI(int k) {
	matrix A(k, k);

	for(int i = 0; i < k; i++)
		A.a[i][i] = 1;

	return A;
}

matrix exp(matrix a, int n) {
	matrix ans = getI(k);

	while(n > 0) {
		if(n % 2 == 1)
			ans = ans * a;
			
		a = a * a;
		n /= 2;
	}
	
	return ans;
}

int64 exp(int64 a, int64 n, int64 MOD) {
	int64 ans = 1;
	while(n > 0) {
		if(n % 2LL == 1LL)
			ans = ans * a % MOD;
			
		a = a * a % MOD;
		n /= 2LL;
	}
	
	return ans;
}

int64 dlog(int64 a, int64 b, int64 m)
 {
    int64 ans = 1e18 , n = (int64) sqrt (m + .0) + 1,an = 1;
    for (int i = 0; i<n; ++i) an = (an*a)%m;
    map<int64,int64> vals;
    for (int64 i=1, cur=an; i<=n; ++i) 
    {
        if (!vals.count(cur))vals[cur] = i;
        cur = (cur*an)%m;
    }
    for (int64 i=0, cur=b; i<=n; ++i) 
    {
        if (vals.count(cur)) 
        {
            int64 tmp = vals[cur] * n - i;
            ans = min(ans,tmp);
        }
        cur = (cur*a)%m;
    }
    if(ans != 1e18)
        return ans;
    else
        return -1;
}

int main() {
	scanf("%d", &k);

	matrix A(k, k);

	for(int i = 0; i < k; i++)
		scanf("%d", &A.a[0][i]);

	for(int i = 1; i < k; i++)
		A.a[i][i - 1] = 1;

	scanf("%d%d", &n, &m);

	matrix V(k, 1); V.a[0][0] = 1;
	matrix S = exp(A, n - k) * V;

	int e = S.a[0][0];
	int64 u = dlog(exp(3, e, MOD), m, MOD);

	if(u == -1) {
		printf("-1\n");
		return 0;
	}

	printf("%lld\n", exp(3, u, MOD));
	return 0;
}