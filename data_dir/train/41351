#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int MX = 100005;
vector<int> neigh[MX];

bool isCycle;

int tin[MX];
int TT = 0;
void dfs(int v, int p)
{
	tin[v] = ++TT;
	
	for (int u : neigh[v]) {
		if (u == p) continue;
		if (!tin[u]) dfs(u, v);
		else if (tin[u] < tin[v]) {
			isCycle = true;
		}
	}
}

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n, m;
	cin >> n >> m;
	
	for (int i = 0; i < m; i++) {
		int u, v;
		cin >> u >> v;
		neigh[u].push_back(v);
		neigh[v].push_back(u);
	}
	
	int ans = 0;
	for (int i = 1; i <= n; i++) {
		if (!tin[i]) {
			isCycle = false;
			dfs(i, 0);
			if (!isCycle) ans++;
		}
	}
	
	cout << ans << "\n";
}
