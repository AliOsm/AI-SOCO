#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define pii pair<int,int>
#define piii pair<int,pair<int,int> >
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define SIZE 100006
#define MOD (long long)1000000007
using namespace std;

inline ll getnum()
{
    char c = getchar();
    ll num,sign=1;
    for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
    for(num=0;c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}

int Treea[200002*4];
int Treeb[200002*4];

int updatea(int l,int r,int ind,int pos,int val)
{
    Treea[ind]+=val;
    if(l==r)return 0;

    int m=(l+r)/2;

    if(pos<=m)updatea(l,m,2*ind,pos,val);
    else updatea(m+1,r,2*ind+1,pos,val);
}

int geta(int l,int r,int ind,int lx,int rx)
{
    if(l==lx&&r==rx)return Treea[ind];

    int m=(l+r)/2;

    if(rx<=m)return geta(l,m,2*ind,lx,rx);
    else if(lx>m)return geta(m+1,r,2*ind+1,lx,rx);
    else return geta(l,m,2*ind,lx,m)+geta(m+1,r,2*ind+1,m+1,rx);
}


int updateb(int l,int r,int ind,int pos,int val)
{
    Treeb[ind]+=val;
    if(l==r)return 0;

    int m=(l+r)/2;

    if(pos<=m)updateb(l,m,2*ind,pos,val);
    else updateb(m+1,r,2*ind+1,pos,val);
}

int getb(int l,int r,int ind,int lx,int rx)
{
    if(l==lx&&r==rx)return Treeb[ind];

    int m=(l+r)/2;

    if(rx<=m)return getb(l,m,2*ind,lx,rx);
    else if(lx>m)return getb(m+1,r,2*ind+1,lx,rx);
    else return getb(l,m,2*ind,lx,m)+getb(m+1,r,2*ind+1,m+1,rx);
}


int main()
{
    int n=getnum(),k=getnum(),a=getnum(),b=getnum(),q=getnum();

    for(;q--;)
    {
        int type=getnum();

        if(type-1)
        {
            int d=getnum();
            int ans=0;

            if(d>1)ans+=getb(1,n,1,1,d-1);
            if(d+k<=n)ans+=geta(1,n,1,d+k,n);

            printf("%d\n",ans);
        }
        else
        {
            int d=getnum(),x=getnum(),temp=x;

            int y=geta(1,n,1,d,d);
            if(y+x>a)temp=a-y;
            updatea(1,n,1,d,temp);

            y=getb(1,n,1,d,d);
            if(y+x>b)x=b-y;
            updateb(1,n,1,d,x);
        }
    }
}
