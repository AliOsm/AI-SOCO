#include<bits/stdc++.h>
using namespace std;
#define ll long long int
vector<pair<ll,pair<ll,ll> > >ad[100009];
vector<ll>vec,ans;
ll vis[100009];
bool chk;
ll T,X,n;
ll s[100009],f[100009];
void dfs(ll a)
{
    //cout<<"node: "<<a" "<<endl;
    if(vis[a]==2)
    {
        return;
    }
    if(vis[a]==1)
    {
        chk=false;
        return;
    }
    vis[a]=1;
    s[a]=++T;
    ll i,b,c,l=ad[a].size();
    for(i=0;i<l;i++)
    {
        c=ad[a][i].second.first;
        b=ad[a][i].first;
        if(c>X)
        {
            dfs(b);
        }
    }

    vis[a]=2;
    f[a]=++T;

}
bool call(ll x)
{
    ll i,j,a,b,c;
    memset(vis,0,sizeof(vis));
    chk=true;
    T=0;
    X=x;
    for(i=1;i<=n;i++)
    {
        if(vis[i]==0)
        {
            dfs(i);
            if(chk==false)
            {
                break;
            }
        }
    }
    return chk;
}
int main()
{
    ll a,b,c,d,e,i,j,k,l,m,x,y,t,p,r,mid;
    scanf("%lld%lld",&n,&m);
    vec.push_back(0);
    for(i=1;i<=m;i++)
    {
        scanf("%lld%lld%lld",&a,&b,&c);
        vec.push_back(c);
        ad[a].push_back(make_pair(b,make_pair(c,i)));
    }
    sort(vec.begin(),vec.end());
    l=0;
    r=m;
    while(l<=r)
    {
        mid=(l+r)/2;
        if(call(vec[mid]))
        {
            x=mid;
            r=mid-1;
        }
        else
        {
            l=mid+1;
        }
    }
    x=vec[x];
    call(x);
    for(i=1;i<=n;i++)
    {
        l=ad[i].size();
        for(j=0;j<l;j++)
        {
            b=ad[i][j].first;
            c=ad[i][j].second.first;
            k=ad[i][j].second.second;
            if(c<=x)
            {
                if(f[i]<f[b])
                {
                    ans.push_back(k);
                }
            }
        }
    }
    l=ans.size();
    printf("%lld %lld\n",x,l);
    for(i=0;i<l;i++)
    {
        printf("%lld ",ans[i]);
    }
    printf("\n");
}
