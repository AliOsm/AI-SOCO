/*****Enigma27*****/
#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define	endl		'\n'
#define pll         pair<ll int,ll int>
#define vll          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define x           first
#define y           second
#define sz(x)       (ll int)x.size()
#define hell        998244353
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define gcd(a,b)    __gcd((a),(b))
#define lcm(a,b)    ((a)*(b)) / gcd((a),(b))
#define ios	    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
using namespace std;
#define int         long long
ll n,i,j,k,l,sum=0,flag=0,t,a[1005],ans=0,f[1005],dp[1004];
ll expo(ll base, ll exponent, ll mod) {								//return base^exponent modulo modulus
    ll ans = 1;
    base%=mod;
    while(exponent !=0 ) {
        if((exponent&1) == 1) {
            ans = ans*base ;
            ans = ans%mod;
        }
        base = base*base;
        base %= mod;
        exponent>>= 1;
    }
    return ans%mod;
}
ll inv(ll x){
	return expo(x,hell-2,hell);
}
ll C(ll n,ll r){
    if(n<0 || r<0 || n<r) return 0;
    return (((f[n]*inv(f[r]))%hell)*inv(f[n-r]))%hell;
}
signed main()
{
	ios
	f[0]=1;
	for(int i=1;i<=1000;i++) f[i]=(i*f[i-1])%hell;
	cin>>n;
	for(int i=0;i<n;i++) cin>>a[i];	
	dp[n]=1;
	for(i=n-1;i>=0;i--){
		dp[i]=0;
		if(a[i]<=0 || a[i]>=n-i)continue;
		for(int j=i+1;j<=n;j++){
			ll temp= (C(j-i-1,a[i])*dp[j])%hell;
			//cout<<j-i-1<<" "<<a[i]<<" "<<C(j-i-1,a[i])<<endl;
			dp[i]=(dp[i]+temp)%hell;
		}
		//for(int i=0;i<n;i++) cout<<dp[i]<<" ";cout<<endl;
		ans=(ans+dp[i])%hell;
	}
	//for(int i=0;i<n;i++) cout<<dp[i]<< " " ;cout<<endl;
	cout<<ans<<endl;
	return 0;
}