#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
template <class T> int size(const T &x) { return x.size(); }
#define rep(i,a,b) for(int i = (a); i < (b); i++)
#define iter(it,c) for(auto it = (c).begin(); it != (c).end();++it)
#define pb push_back
#define fs first
#define sc second
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

const int INF = ~(1<<31);
const double pi = acos(-1);
const double EPS = 1e-9;

ll memo[300'000+20][3][3];
ll n,x;
vi A;

ll dp(ll at, ll started, ll startedminus) {
    if(at >= n) return 0;
    if(memo[at][started][startedminus] != -1) return memo[at][started][startedminus];
    ll mx = 0;
    if(started == 1) {
        if(startedminus == 1) {
            mx = max(mx, dp(at+1,started,1)+A[at]*x);
            mx = max(mx, dp(at+1,started,2)+A[at]);
            mx = max(mx, dp(at+1,2,2));
        } else if(startedminus == 0) {
            mx = max(mx, dp(at+1,started,0)+A[at]);
            mx = max(mx, dp(at+1,started,1)+A[at]*x);
            mx = max(mx, dp(at+1,started,2)+A[at]);
            mx = max(mx, dp(at+1,2,2));
        } else if(startedminus == 2) {
            mx = max(mx, dp(at+1,started,2)+A[at]);
            mx = max(mx, dp(at+1,2,2));
        }
    } else if(started == 0){
        mx = max(mx, dp(at+1, 1, 0)+A[at]);
        mx = max(mx, dp(at+1, 1, 1)+A[at]*x);
        mx = max(mx, dp(at+1, 0, 0));
    }
    return memo[at][started][startedminus] = mx;

}

int main() {
    cin.sync_with_stdio(false);
    cin >> n >> x;
    A = vi(n);
    rep(i,0,n) cin >> A[i];
    memset(memo,-1,sizeof(memo));
    cout << dp(0,0,0) << endl;
    return 0;
}


