///*** One Last Try ***///
#include<bits/stdc++.h>
using namespace std;
#pragma comment(linker, "/stack:200000000")
#define inf ( int )( 1e9 )
#define mxs (int)( 1e6 + 10 )
#define ll long long int
#define md  int mid = ( l + r )>>1;
int dx[]={+1,-1,+0,+0};///Four Directions
int dy[]={+0,+0,+1,-1};///Four directions
//int dx [] = {+1,-1,+0,+0,-1,-1,+1,+1};///Eight Directions
//int dy [] = {+0,+0,+1,-1,+1,-1,-1,+1};///Eight Directions
int t, n, m, j, ans, k, a, b, c, d, e,f ,sum , i ,lo , hi , mid;
string s, s2, s3, s4;
int ar [ mxs ] , ar2 [ mxs ];
char grid [ 1001 ] [ 1001 ];
void brainfuck();
bool checker( int x, int y )
{
    return !( x < 0 || y < 0 || x == n || y == m );
}
int main()
{
    ios_base::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    brainfuck();
    return 0;
}
void brainfuck()
{
    cin>>n>>m;
    for ( i = 0 ; i < n; i++ )cin>>grid [ i ];
    for ( i = 0 ; i < n; i++ )
    {
        for ( j = 0 ; j < m; j++ )if ( grid [ i ] [ j ] == '.' )grid [ i ] [ j ] = 'D';
    }
    for ( i = 0 ; i < n; i++ )
    {
        for ( j = 0 ; j < m; j++ )
        if ( grid [ i ] [ j ] == 'W' )
        {
            for ( k = 0 ; k < 4; k++ )
            {
                a = i + dx [ k ];
                b = j + dy [ k ];
                if ( checker ( a , b ) && grid [ a ] [ b ] == 'S' )
                {
                    cout<<"No";
                    return;
                }
            }
        }
    }
    cout<<"Yes\n";
    for ( i = 0 ; i < n; i++ )cout<<grid [ i ]<<"\n";
}
