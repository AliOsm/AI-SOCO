#include<bits/stdc++.h>

using namespace std;

int fx[]={+0,+0,+1,-1,-1,+1,-1,+1};
int fy[]={-1,+1,+0,+0,+1,+1,-1,-1};

map<pair<int,int>,bool>mp;
map<pair<int,int>,int>visit;
map<pair<int,int>,int>dist;

#define mx 1e9

queue<pair<int,int> >q;
int x1,y3,x2,y2;

void bfs(){
    q.push(make_pair(x1,y3));
    while(!q.empty()){
        pair<int,int>u;
        u = q.front();
        q.pop();
        //cout <<u.first << " " << u.second << endl;
        for(int i = 0; i<8; i++){
            int x = u.first + fx[i];
            int y = u.second + fy[i];
            if(mp[make_pair(x,y)]==true && dist[make_pair(x,y)]==0 && x>=1 && x<=mx && y>=1 && y<=mx){
                q.push(make_pair(x,y));
                dist[make_pair(x,y)] = dist[u] + 1;
            }
        }
    }
    if(dist[make_pair(x2,y2)]==0)cout << -1 << endl;
    else cout << dist[make_pair(x2,y2)] << endl;
}

int main()
{
    scanf("%d%d%d%d",&x1,&y3,&x2,&y2);
    mp[make_pair(x1,y3)] = true;
    mp[make_pair(x2,y2)] = true;
    int k;
    scanf("%d",&k);
    for(int j = 0; j<k; j++){
        int ri,a,b;
        scanf("%d%d%d",&ri,&a,&b);
        for(int i = a; i<=b; i++)
            mp[make_pair(ri,i)] = true;
    }
    bfs();
    return 0;
}
