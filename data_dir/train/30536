#define _CRT_SECURE_NO_WARNINGS

#include <string>
#include <sstream>
#include <cstring>
#include <sstream>
#include <vector>
#include <algorithm>
#include <iostream>
#include <stdio.h>
#include <fstream>
#include <ctime>
#include <cmath>
#include <math.h>
#include <set>
#include <map>
using namespace std;

#define pp system("pause");
#define ct double ttme = clock()
#define p_ct cout << (clock() - ttme) / CLOCKS_PER_SEC << endl
#define all(c) (c).begin(),(c).end()
#define fft ifstream fin("input.txt"); ofstream fout("output.txt")
#define fft_c FILE *fin, *fout
#define fft_c_open fin = fopen("input.txt","r"); fout = fopen("output.txt","w")
#define fft_c_cl fclose(fin); fclose(fout)
#define pii pair<int,int>
#define piii pair<int,pair<int,int>>
#define M_PI 3.14159265358979323846
typedef unsigned long long ull;
typedef signed long long ll;
const int INF = 1e9;
const int MAXM = 1e7 + 5;
const int MAX = 1e7;
const int des = 10000;



int main()
{
	int n, k;

	cin >> n >> k;

	if(k * 3 > n)
	{
		cout << -1;
		return 0;
	}

	int* mass = new int[n];
	for(int i = 0; i < n; i++)
		mass[i] = 1;

	int curr = 0;
	for(int i = 0; i < k; i++)
	{
		if(i % 2 == 0)
		{
			mass[curr] = i + 1;
			mass[curr + 1] = i + 1;

			if(curr + 3 > n - 1)
				mass[0] = i + 1;
			else
				mass[curr + 3] = i + 1;

			curr += 3;
		}
		else
		{
			mass[curr - 1] = i + 1;
			mass[curr + 1] = i + 1;
			mass[curr + 2] = i + 1;

			curr += 3;
		}
	}

	for(int i = 0; i < n; i++)
		printf("%d ", mass[i]);

	//pp;
}