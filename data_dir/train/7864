#include <cassert>
#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define sc3(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define scs(a) scanf("%s", a)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl
typedef long long int ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef vector<ii> vii;
typedef vector< vii> vvii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
const int N=1e5+10;
ll pot[60];
int n;
map<ll,int> mapa;
ll v[N];
vector<ll> coco;
ll pode[60];
ll fixa[60];
int ondemax(){
	int i;
	for(i=59;i>=0;i--) if(pot[i]!=0) return i;
	return -1;
}
int getmin(){
	int ret;
	int i=ondemax();
	int mini=pot[i];
	for(;i>=0;i--) if(mini>pot[i]) mini=pot[i];
	return mini;
}
int qnts_livres(){
	int x=0;
	for(int i=1;i<60;i++) x+=pode[i];
	return x;
}
void tira(int x){
	for(int i=59;i>=1;i--) 
		while(x>0 and pode[i]>0) pode[i]--,x--;
	assert(x==0);
}
void resolve()
{
	ll r=0;
	sort(coco.begin(),coco.end());
	int x=coco.size()-1;
	ll livre=0;
//	for(int x: coco) db(x);

	for(ll i=59;i>0;i--){
		if(fixa[i]==0) continue;
		ll proxfixa=1;
		for(proxfixa=i-1;proxfixa>=0;proxfixa--) if(fixa[proxfixa]) break;
		ll cont=0;
		r+=fixa[i];
		livre+=fixa[i];
		if(x>=0 and coco[x]>(1ll<<(i+1))){
			cout<<-1<<endl;
			return;
		}
		while(x>=0 and coco[x]>=(1ll<<(proxfixa+1)) ){
			cont++;
			x--;
		}
		if(cont>livre){
			cout<< -1<<endl;
			return;
		}
		livre-=cont;
	}
	if(x+1>livre){
		cout<<-1<<endl;
		return;
	}
	livre-=x+1;
	int c=0;
	while(livre>0 and fixa[0]>0) livre--, fixa[0]--,c++;
	while(fixa[0]>1) fixa[0]-=2,c++,r++;
	r+=fixa[0];
	pode[0]=0;

	for(ll i=1;i<60;i++){
		int x=min(livre,fixa[i]);
		pode[i]=x;
		livre-=x;
	}
	for(ll i=1;i<60;i++)
	{
		while(qnts_livres()>i+1 and pode[i]>0){
			pode[i]--;
			tira(i+1);
			r--,c++;
		}
	}
	for(int i=0;i<=c;i++) cout<<r+i<<" ";
	cout<<endl;
}
int main()
{
	for(ll i=0;i<60;i++) mapa[1ll<<i]=i+1;
	cin>>n;
	for(int i=0;i<n;i++){
		cin>>v[i];
		int x=mapa[v[i]];
		//cout<<v[i]<<endl;
		if(x>0){
			pot[x-1]++;
		}
		else coco.pb(v[i]);
	}
	ll r=0;
	for(int i=0;i<60;i++){
		//db(pot[i]);
	}
	while(true){
		int x=ondemax();
		if(x==-1) break;
		int val=getmin();
		fixa[x]=val;
		for(int i=0;i<=x;i++) pot[i]-=val;
		while(pot[x]>0){
			coco.pb(1ll<<x);
			pot[x]--;
		}
	}
	resolve();

	return 0;
}
