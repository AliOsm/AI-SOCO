#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cstdlib>

using namespace std;

typedef long long int ll;

ll modulo=1e9+7;

void anyade(ll &a,ll b)
{
  a=(a+b)%modulo;
}

const int limite=1005;

ll combi[limite][limite];
ll coste[limite];

vector<int> v;

int main()
{
  {
    for (int n=0;n<limite;n++)
      for (int k=0;k<=n;k++)
	if (k==0 or k==n) combi[n][k]=1;
	else combi[n][k]=(combi[n-1][k]+combi[n-1][k-1])%modulo;
  }
  for (int x=2;x<limite;x++)
    coste[x]=1+coste[__builtin_popcount(x)];
  string s;
  cin>>s;
  int k;
  cin>>k;
  for (int i=0;i<int(s.size());i++)
    v.push_back(s[i]-'0');
  if (k==0) {
    cout<<1<<endl;
    exit(0);
  }
  if (int(v.size())==1) {
    cout<<0<<endl;
    exit(0);
  }
  int n=int(v.size());
  ll sol=0;
  int num1=0;
  for (int i=0;i<n;i++) {
    if (v[i]==1) {
      int m=n-1-i;
      for (int q=0;q<=m;q++) {
	int n1=num1+q;
	if (n1>0 and 1+coste[n1]==k)
	    anyade(sol,combi[m][q]);
      }
      num1++;
    }
  }
  if (k==1) anyade(sol,modulo-1);
  if (1+coste[num1]==k)
    anyade(sol,1);
  cout<<sol<<endl;
}
