#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define PB push_back
#define MP make_pair

#define rep(i,n) for(int i=0;i<(n);++i)
#define REP(i,n) for(int i=1;i<=(n);++i)
#define FOR(i,l,h) for(int i=(l);i<=(h);++i)
#define FORD(i,h,l) for(int i=(h);i>=(l);--i)
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl
#define tr(it,c) for(auto it=(c).begin(); it!=(c).end(); ++it)
#define all(c) (c).begin(), (c).end()

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long int64;
typedef pair<int,int> pii;

const int maxn=10050;
int n; int64 c;
int64 a[maxn], b[maxn];

//map<int64,int64> mp;

int64 calc(int64 x)
{
	//if(mp.count(x)) return mp[x];
	int64 ans=0;
	rep(i,n) ans+=(x*a[i])/b[i];
	return ans;
}

int main(void)
{
	double __a=clock();
	//ios::sync_with_stdio(false);
	scanf("%d%I64d",&n,&c);
	rep(i,n) scanf("%I64d%I64d",a+i,b+i);
	c-=n;
	if(c<0) {puts("0"); return 0;}
	bool tag=true;
	rep(i,n) if(a[i]) tag=false;
	if(tag && c==0) {puts("-1"); return 0;}
	int64 l0=1, r0=1;
	if(calc(1)>c) {puts("0"); return 0;}
	while(calc(r0)<=c)
	{
		r0*=2;
		if(clock()-__a>1900)
		{
			puts("0");
			return 0;
		}
	}
	if(l0>r0) { int *p=0; p=0;}
	int64 l=l0, r=r0;
	int64 lb=0,rb=0;
	while(l<r)
	{
		int64 mid=(l+r)/2;
		if(calc(mid)>=c) r=mid;
		else l=mid+1;
	}
	lb=l;
	l=l0; r=r0;
	while(l<r)
	{	
		int64 mid=(l+r+1)/2;
		if(calc(mid)<=c) l=mid;
		else r=mid-1;
	}
	rb=l;
	cout<<rb-lb+1<<endl;
	//print(clock()-__a);
	return 0;
}
