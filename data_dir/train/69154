#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define PB push_back
#define MP make_pair

#define rep(i,n) for(int i=0;i<(n);++i)
#define REP(i,n) for(int i=1;i<=(n);++i)
#define FOR(i,l,h) for(int i=(l);i<=(h);++i)
#define FORD(i,h,l) for(int i=(h);i>=(l);--i)
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long int64;
typedef pair<int,int> pii;

const int maxn=100050;
int buf[maxn];
int A[maxn]={},B[maxn]={},SB=0;
int st[maxn]={};
int ans[maxn], o=0;
bool g[maxn]={};

int main(void)
{
	int n,m; scanf("%d%d",&n,&m);
	REP(i,n)
	{
		scanf("%d",buf+i);
		if(buf[i]>0) A[buf[i]]++;
		else B[-buf[i]]++,SB++;
	}
	REP(i,n)
	{
		if(A[i]+SB-B[i]==m) ans[o++]=i, g[i]=true;
	}
	if(o==1)
	{
		REP(i,n) 
		{
			if(buf[i]==ans[0] || (buf[i]<0 && buf[i]!=-ans[0])) puts("Truth");
			else puts("Lie");
		}
	}
	else
	{
		REP(i,n)
		{
			if(g[abs(buf[i])]) puts("Not defined");
			else if(buf[i]>0) puts("Lie");
			else puts("Truth");
		}
	}
	return 0;
}