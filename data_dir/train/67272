#define __USE_MINGW_ANSI_STDIO 0
#include <bits/stdc++.h>
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'
#define ff first
#define ss second
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define int long long
#define all(a) a.begin(), a.end()
#define inf (1LL<<61)
#define ull unsigned long long
#define debug1(x) cerr << #x << ": " << x <<'\n'
#define debug2(x, y) cerr << #x << ": " << x << '\t' << #y << ": " << y <<'\n'
#define debug3(x, y, z) cerr << #x << ": " << x << '\t' << #y << ": " << y << '\t' << #z << ": " << z <<'\n'
using namespace std;
int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
int gcd(int x,int y)
{
    if(y==0)
        return x;
    else
        return gcd(y,x%y);
}
int expo(int n,int m,int p)   //modULAR EXPONENTIATION
{
    int r=1;
    n=n%p;
    while(m>0)
    {
        if(m%2)
            r=(r*n)%p;
        n=(n*n)%p;
        m=m/2;
    }
    return r%p;
}
bool isPrime(int n)
{
    // Corner cases
    if (n <= 1)  return false;
    if (n <= 3)  return true;
 
    // This is checked so that we can skip 
    // middle five numbers in below loop
    if (n%2 == 0 || n%3 == 0) return false;
 
    for (int i=5; i*i<=n; i=i+6)
        if (n%i == 0 || n%(i+2) == 0)
           return false;
 
    return true;
}
int pow1(int a,int b)
{
	int p=1;
	for(int i=1;i<=b;i++)
		p=p*a;
	return p;
}
const int N=2005;
int dp[N]={0};
bool palin[N][N];
int32_t main()
{
   IOS;
   #ifndef ONLINE_JUDGE
   freopen("input.txt","r",stdin); 
   freopen("output.txt","w",stdout);
   #endif
   /********************* Code starts here ***********************/
   memset(palin,false,sizeof(palin));
   string s;
   cin>>s;
   int n=s.size();
   for(int i=0;i<n;i++)
   {
   	palin[i][i]=true;
   }
   for(int i=0;i+1<n;i++)
   {
   	if(s[i]==s[i+1])
   	{
   		palin[i][i+1]=true;
   	}
   }
   for(int k=3;k<=n;k++)
   {
   	for(int j=0;j+k-1<n;j++)
   	{
   		int i=j+k-1;
   		if(palin[j+1][i-1]&&s[i]==s[j])
   		{
   			palin[j][i]=true;
   		}
   	}
   }
   for(int i=0;i<n;i++)
   {
   	for(int j=i;j>=0;j--)
   	{
   		if(palin[j][i])
   		{
   			//debug2(i,j);
   			dp[i]++;
   		}
   	}
   }
   for(int i=1;i<n;i++)
   {

   	dp[i]+=dp[i-1];
   }
   int ans=0;
   for(int i=0;i<n;i++)
   {
   	for(int j=1;j<=i;j++)
   	{
   		if(palin[j][i])
   		{
   			//debug2(j,i);
   			ans=ans+dp[j-1];
   		}
   	}
   }
   cout<<ans<<endl;
}