#include<bits/stdc++.h>
#define ll long long
#define fe first
#define se second
using namespace std;
const int N = 1e3 + 5;
pair<int, int> a[N];
struct node{
    node * left, * right;
    int isend;
};
node * getnode(){
    node * temp = new node();
    temp -> left = NULL;
    temp -> right = NULL;
    temp -> isend = 0;
    return temp;
}
vector<string> ans(N);
string yo;
bool flag = 0;
int used[N];
int id;
void solve(node * cur, int x){
    if(cur -> isend == 1)
        return;
    if(x == 0){
        cur -> isend = 1;
        ans[id] = yo;
        flag = 1;
        return;
    }
    if(cur -> left == NULL)
        cur -> left = getnode();
    if(!flag)
        yo += '0', solve(cur -> left, x - 1), yo.pop_back();
    if(cur -> right == NULL)
        cur -> right = getnode();
    if(!flag)
        yo += '1', solve(cur -> right, x - 1), yo.pop_back();
}
int main()
{
    ios_base ::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    int n;
    cin >> n;
    for(int i = 0; i < n; i++) cin >> a[i].fe, a[i].se = i;
    node * root = getnode();
    sort(a, a + n);
    for(int i = 0; i < n; i++){
        flag = 0;
        yo.clear();
        id = a[i].se;
        solve(root, a[i].fe);
        if(!flag) return cout << "NO", 0;
    }
    cout << "YES\n";
    for(int i = 0; i < n; i++){
        cout << ans[i] << "\n";
    }
return 0;
}
