#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define bit __builtin_popcount
#define all(x) x.begin(),x.end()
#define show(x) cout<<(#x)<<" is "<<(x)<<endl

using namespace std;
using namespace __gnu_pbds;

template<typename T> using indexed_set=tree <T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef vector<vector<int>> matrix;

const ll INF=1e18+123;
const ld EPS=1e-9;
const int inf=1e9+123;
const int MOD=1e9+7;
const int N=1e5+123;
const int M=1e6+123;
const int dx[]={0,0,1,-1};
const int dy[]={1,-1,0,0};

matrix mult(matrix a, matrix b){
    matrix c(sz(a),vector<int>(sz(b[0])));
    for(int i=0;i<sz(a);i++){
        for(int j=0;j<sz(b[0]);j++){
            for(int k=0;k<sz(b);k++){
                c[i][j]=(c[i][j]+1ll*a[i][k]*b[k][j])%MOD;
            }
        }
    }
    return c;
}

matrix pw(matrix a,ll n){
    if(n==1)return a;
    if(n&1)return mult(a,pw(a,n-1));
    matrix t=pw(a,n>>1);
    return mult(t,t);
}

matrix dp(16,{0});

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n,c;
    ll k,a,b;
    cin>>n>>k;
    dp[0][0]=1;
    while(n--){
        cin>>a>>b>>c;
        b=min(b,k);
        matrix f(16,vector<int>(16));
        for(int i=0;i<=c;i++){
            f[i][i]=1;
            if(i-1>=0){
                f[i][i-1]=1;
            }
            if(i+1<=c){
                f[i][i+1]=1;
            }
        }
        if(b-a)dp=mult(pw(f,b-a),dp);
        //cout<<dp[0][0]<<" ";
    }
    cout<<dp[0][0];
    return 0;
}
