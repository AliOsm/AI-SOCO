#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<stack>
#include<random>
#include<queue>
#include<list>
#include<math.h>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define nu 100001
#define mod 1000000007
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i, n) for (int i = 0; i < int(n); i++)
const ll INF=10000000000000000;
int  MOD(int  a, int  b)
{
    if(a>b)
        return a-b;
    else
        return b-a;
}
int  max3(int  a,int  b, int  c)
{
    return max(c,max(a,b));
}
int  min3(int  a,int  b,int  c)
{
    return min(a,min(b,c));
}
ll  power(ll  x,ll  y )
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x);//%mod;
        y = y>>1;
        x = (x*x);//%mod;
    }
    return res;
}
int  logg(int  a)
{
    int  x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
int  gcd(int  a,int   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
int abso(int x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll  a,ll  b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
int main()
{
    int n;
    cin>>n;
    vi a(n+1);
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
    }
    ll ans=0;
    vector<vector<int>> bit(n+1);
    for(int i=1;i<=n;i++)
    {
        for(int j=i;j<=n;j=j+(j&(-j)))
        {
            bit[j].pb(a[i]);
        }
    }
    for(int i=1;i<=n;i++)
    {
        sort(all(bit[i]));
    }
    for(int i=1;i<=n;i++)
    {
        int r=min(n,a[i]);
        ll temp=0;
        for(int j=r;j>0;j=j-(j&(-j)))
        {
            temp+=bit[j].size()-(lower_bound(all(bit[j]),i)-bit[j].begin());
        }
        ans+=temp;
        if(i<=a[i])
        {
            ans--;
        }
    }
    ans=ans/2;
    cout<<ans;
}
