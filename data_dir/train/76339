#include <bits/stdc++.h>
using namespace std;
#define finish(x) return cout << x << endl, 0
#define ll long long
 
int n;
unordered_map <int, int> m;
 
int main(){
    scanf("%d", &n);
    for(int i = 0 ; i < n ; i++){
        int x;
        scanf("%d", &x);
        m[x]++;
    }
    vector <int> cnts;
    for(auto &i : m) cnts.push_back(i.second);
    sort(cnts.begin(), cnts.end());
    pair <int, pair <int, int> > mx = {0, {0, 0}};
    int t = 0;
    for(int p = 1 ; p * p <= n ; p++){
        t += (int)cnts.size() - (lower_bound(cnts.begin(), cnts.end(), p) - cnts.begin());
        int q = t / p;
        if(q >= p) mx = max(mx, {p * q, {p, q}});
    }
    int p = mx.second.first;
    int q = mx.second.second;
    vector <vector <int> > ans(p, vector <int>(q, 0));
    int x = 0, y = 0;
    vector <int> all;
    for(auto &i : m) all.push_back(i.first);
    sort(all.begin(), all.end(), [&](int l, int r){
        return m[l] > m[r];
    });
    set <int> ys;
    for(int i = 0 ; i < q ; i++){
        ys.insert(i);
    }
    for(auto &i : all){
        int v = i;
        int cnt = min(p, m[i]);
        while(cnt--){
            if(x == -1) break;
            ans[x][y] = v;
            if(x == 0) ys.erase(y);
            x = (x + 1) % p;
            y = (y + 1) % q;
            if(ans[x][y]){
                if(ys.size() == 0){
                    x = -1;
                    break;
                }
                x = 0;
                y = *ys.begin();
            }
        }
    }
    printf("%d\n%d %d\n", p * q, p, q);
    for(auto &i : ans){
        for(auto &j : i) printf("%d ", j);
        puts("");
    }
}
