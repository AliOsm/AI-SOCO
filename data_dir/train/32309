#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
typedef long double real;

#ifdef WIN32
#define INT64 "%I64d"
#define UINT64 "%I64u"
#else
#define INT64 "%lld"
#define UINT64 "%llu"
#endif

#ifdef DEBUG
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#else
#define eprintf(...) assert (true)
#endif

const int MaxN = 100005, MaxC = 0x3F3F3F3F, NA = -1;

int64 sum (int64 x)
{
 char s [256];
 int64 res;
 int i, n;

 res = 0;

 for (i = 1; i < 10; i++)
  if (x >= i)
   res++;

 if (x >= 10)
 {
  res += x / 10 - 1;
  sprintf (s, INT64, x);
  n = strlen (s);
  if (s[0] <= s[n - 1])
   res++;
 }

 return res;
}

int main (void)
{
 int64 l, r;

 while (scanf (" " INT64 " " INT64, &l, &r) != EOF)
  printf (INT64 "\n", sum (r) - sum (l - 1));

 return 0;
}
