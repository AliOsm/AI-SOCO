#include <bits/stdc++.h>

using namespace std;

struct vec
{
    long double x,y;
    bool operator ==(const vec &a) const{
        return x==a.x&&y==a.y;
    }
    bool operator <(const vec &a) const{
        if(a.x!=x) return x<a.x;
        return y<a.y;
    }
    vec operator +(const vec &a) const{
        return {x+a.x,y+a.y};
    }
    vec operator *(const long double &a) const{
        return {x*a,y*a};
    }
    vec operator -(const vec &a) const{
        return {x-a.x,y-a.y};
    }
    vec operator /(const long double &a) const{
        return {x/a,y/a};
    }
    long double len() const{
        return sqrt(x*x+y*y);
    }
    long double dot(const vec &a) const{
        return x*a.x+y*a.y;
    }
    long double crs(const vec &a) const{
        return x*a.y-y*a.x;
    }
    vec proj(const vec &a) const{
        return (a/a.len())*(*this).dot(a)/a.len();
    }
};


struct P
{
    int x,y;
};

bool as(P a,P b)
{
    return a.x<b.x;
}

long long d,x,y,z,mod=998244353;
vector<int> v[111111];
int i,n,m,k,a,b,c;
int e;
int o[111721];
int st[111111];
int sz[111111];
int pp[111111];
int cnt[111111];
long long an[111111];
//stack<int> s;
//multiset<int> s[5111];
//priority_queue<P> q;
vec u[1];
//char r[51111];
//string r,r1,r2;
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
//map<int,int> p,p1;
//v.resize(unique(v.begin(),v.end())-v.begin());

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//rng();

void pri(int n,int m)
{
    sz[n]=1;
    e++;
    st[n]=e;
    pp[e]=n;
    for(int h=0;h<v[n].size();h++)
    if(v[n][h]!=m)
    {
        pri(v[n][h],n);
        sz[n]+=sz[v[n][h]];
    }
}

void f(int n,int p,int i)
{
    int m=-1,k=-1,e1=c,e2=d;
    for(int h=0;h<v[n].size();h++)
    if(v[n][h]!=p&&k<sz[v[n][h]])
    {
        k=sz[v[n][h]];
        m=v[n][h];
    }
    for(int h=0;h<v[n].size();h++)
    if(v[n][h]!=p&&v[n][h]!=m)
        f(v[n][h],n,0);
    if(m>0) f(m,n,1);
    for(int h=0;h<v[n].size();h++)
    if(v[n][h]!=p&&v[n][h]!=m)
    for(int t=st[v[n][h]];t<st[v[n][h]]+sz[v[n][h]];t++)
    {
        cnt[o[pp[t]]]++;
        if(c==cnt[o[pp[t]]])
            d+=o[pp[t]];
        if(c<cnt[o[pp[t]]])
            c=cnt[o[pp[t]]],d=o[pp[t]];
    }
    cnt[o[n]]++;
    if(c==cnt[o[n]])
        d+=o[n];
    if(c<cnt[o[n]])
        c=cnt[o[n]],d=o[n];
    an[n]=d;
    if(!i)
    {
        c=e1,d=e2;
        for(int t=st[n];t<st[n]+sz[n];t++)
            cnt[o[pp[t]]]--;
    }
}

int main()
{
    scanf("%d",&a);
    for(int t=1;t<=a;t++)
        scanf("%d",&o[t]);
    for(int t=1;t<a;t++)
    {
        scanf("%d %d",&n,&m);
        v[n].push_back(m);
        v[m].push_back(n);
    }
    pri(1,0);
    //puts("#");
    f(1,0,1);
    for(int t=1;t<=a;t++)
        printf("%lld ",an[t]);
}

