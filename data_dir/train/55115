#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
vector <int> groups [500005];
vector <int> members [500005];
int vis[500005];
int vis_group[500005];
int sum[500005];

int parent [500005];
int par_size[500005];

void dfs(int node , int start){
    vis[node]=true;
    parent[node] = start;
    par_size[start]++;

    for(int i : groups[node]){
        if(vis_group[ i ])continue;
        vis_group[ i ] = true;
        for(int j : members[i]  ){
            if(vis[j])continue;
            dfs(j,start);
        }
    }
}
int main()
{
	ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
	int n,m;
	cin >> n >>m;
    for(int i = 1 ; i <= m ; i++){
        int k;
        cin >> k;
        for(int j = 1 ; j <= k ; j++){
            int x;
            cin >> x;
            groups[x].push_back(i);
            members[i].push_back(x);
        }
    }
    for(int i = 1 ; i <= n ; i++){
        if(vis[i])continue;
        dfs(i , i);
    }
    for(int i = 1 ; i <= n ; i++)cout<<par_size[ parent[i] ]<< " ";
	return 0;
}
