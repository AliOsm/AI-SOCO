#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef pair<ll,ll> p2;
bool comp(p2 a,p2 b){
    return a.second<b.second;
}
void build(ll t[],ll a[],ll v,ll tl,ll tr) {
    if (tl == tr) {
        t[v] = a[tl];
    } else {
        ll tm = (tl + tr) / 2;
        build(t,a, v*2, tl, tm);
        build(t,a, v*2+1, tm+1, tr);
        t[v] = max(t[v*2],t[v*2+1]);
    }
}
ll query(ll t[],ll v,ll tl,ll tr,ll l,ll r) {
    if (l > r) 
        return 0;
    if (l == tl && r == tr) {
        return t[v];
    }
    ll tm = (tl + tr) / 2;
    return max(query(t,v*2, tl, tm, l, min(r, tm)),query(t,v*2+1, tm+1, tr, max(l, tm+1), r));
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    ll t;
    cin>>t;
    for(ll qc=0;qc<t;qc++){
        ll n,m;
        cin>>n;
        ll arr[n+1],seg[4*n+5];
        for(ll i=1;i<=n;i++)
        cin>>arr[i];
        build(seg,arr,1,1,n);
        ll hi=query(seg,1,1,n,1,n),f=0;
        cin>>m;
        vector<ll> v(n+1,0);
        for(ll i=0;i<m;i++){
            ll x,y;
            cin>>x>>y;
            if(x>=hi)
            f=1;
            v[y]=max(v[y],x);
        }
        if(f==0){
            cout<<"-1\n";
            continue;
        }
        for(ll i=n-1;i>=1;i--)
        v[i]=max(v[i],v[i+1]);
        ll i=1,res=0;
        while(i<=n){
            ll l=1,r=n-i+1;
            while(l<=r){
                ll mid=(l+r)/2,val=query(seg,1,1,n,i,i+mid-1);
                if(v[mid]>=val)
                l=mid+1;
                else
                r=mid-1;
            }
            i+=l-1;
            res++;
        }
        cout<<res<<endl;
    }
}
