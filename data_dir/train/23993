#include<bits/stdc++.h>
#define rep(i,start,lim) for(lld i=start;i<lim;i++)
#define repd(i,start,lim) for(lld i=start;i>=lim;i--)
#define scan(x) scanf("%lld",&x)
#define print(x) printf("%lld ",x)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define br printf("\n")
#define sz(a) lld((a).size())
#define YES printf("YES\n")
#define NO printf("NO\n")
#define all(c) (c).begin(),(c).end()
using namespace std;
#define INF         1011111111
#define LLINF       1000111000111000111LL
#define EPS         (double)1e-10
#define MOD         1000000007
#define PI          3.14159265358979323
using namespace std;
typedef long double ldb;
typedef long long lld;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
typedef vector<lld> vlld;
typedef pair<lld,lld> plld;
typedef map<lld,lld> mlld;
typedef set<lld> slld;
#define N 1005
lld dp[N][2][2],x[N],y[N],r[N],height[N];
vlld adj[N],tmp[N];
bool check(lld x1,lld y1,lld r1,lld x2,lld y2,lld r2) {
	return ((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2) <= r1*r1);
}
lld go(lld curr,lld height1,lld height2) {
	if(dp[curr][height1][height2]!=-1) return dp[curr][height1][height2];
	lld tmp=r[curr]*r[curr],tmp1=(height1 ? -tmp:tmp),tmp2=(height2? -tmp:tmp);
	for(auto i:adj[curr]) tmp1+=go(i,height1^1,height2),tmp2+=go(i,height1,height2^1);
	return dp[curr][height1][height2]=max(tmp1,tmp2);
}
int main()
{
	lld n,ans=0;
	rep(i,0,N) rep(j,0,2) rep(k,0,2) dp[i][j][k]=-1;
	cin>>n;
	rep(i,1,n+1) cin>>x[i]>>y[i]>>r[i];
	rep(i,1,n+1) rep(j,1,n+1) if(r[i]>r[j] and check(x[i],y[i],r[i],x[j],y[j],r[j])) 
		height[j]++,tmp[i].pb(j);
	rep(i,1,n+1) for(auto j:tmp[i]) if(height[j]==height[i]+1) adj[i].pb(j);
	rep(i,1,n+1) if(!height[i]) ans+=go(i,0,0);
	cout<<fixed<<setprecision(10)<<PI*ans;
	return 0;
}