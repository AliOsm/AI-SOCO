#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define fs first
#define se second
#define pi 2*acos(0)
#define PI 3.14159265358979323846264338

typedef long long ll;
typedef pair < int , int > pii;
typedef pair < ll , ll > pll;
const int N = 100010;
const int SZ = 5005;

inline int in() {int x; scanf("%d",&x); return x;}
inline ll lin() {ll x; scanf("%I64d",&x); return x;}

int fx[] = {-1, -1, -1, 0, 0, +1, +1, +1};
int fy[] = {-1, 0, +1, -1, +1, -1, 0, +1};

int n;
int inp[105];

int gird[SZ][SZ];

set < pair < pii , pii > > used;
vector < pair < pii , pii > > start, temp;

void Mark(pii x, pii y, int ti, int what){
    int p = x.fs - y.fs, q = x.se - y.se;
    while(ti > 0){
        int _x = y.fs + p, _y = y.se + q;
        gird[_x][_y] = 1;
        ti--; y = mp(_x, _y);
    }
    int _x = y.fs + p, _y = y.se + q;
    if(used.find(mp(y,mp(_x,_y))) == used.end()) temp.pb(mp(y,mp(_x,_y)));
    used.insert(mp(y,mp(_x,_y)));
}

int DIST(pii x, pii y){
    int ret = (x.fs - y.fs) * (x.fs - y.fs) + (x.se - y.se) * (x.se - y.se);
    return ret;
}

void Solve(pii x, pii y, int ti, int FIRST){
    for(int i = 0; i < 8; i++){
        pii tmp = mp(x.fs + fx[i], x.se + fy[i]);
        int dis = DIST(tmp,y);
        if(dis == 1){
            Mark(tmp, x, ti, FIRST);
            //if(FIRST == 1) cout << tmp.fs << " " << tmp.se << '\n';
            if(FIRST == 1){
                break;
            }
        }
    }
}

int main(){
    n = in();

    start.pb(mp(mp(2500,2500),mp(2499,2501)));
    //start.pb(mp(mp(9,6),mp(8,7)));

    for(int i = 1; i <= n; i++){
        inp[i] = in();
        int sz = (int)start.size();
        for(int j = 0; j < sz; j++){
            pii x = start[j].fs, y = start[j].se;
            Solve(x, y, inp[i], i);
        }
        start.clear();
        start = temp;
        /*cout << '\n';
        for(int j = 0; j < temp.size(); j++){
            //cout << temp[j].fs->fs << " " << temp[j].fs->se << '\n';
            pii U = temp[j].fs;
            cout << U.fs << " " << U.se << '\n';
        }
        cout << '\n';*/
        temp.clear();
        used.clear();
    }

    int ans = 0;
    for(int i = 0; i < SZ; i++){
        for(int j = 0; j < SZ; j++){
            if(gird[i][j]){
                ans++;
            }
        }
    }

    printf("%d\n",ans);
}
