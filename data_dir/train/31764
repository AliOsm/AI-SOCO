#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define PB push_back
#define all(x) x.begin(), x.end()
#define div dv
#define nxt nnxxxx
typedef long long ll; 
typedef long double ld;
typedef pair<ll, ll> pll;

const int N = 1000 * 1000 + 10, mod = 1e9 + 7; 

int sign(int x, int y, int z)
{
	cout<< 2 << ' ' << x << ' ' << y << ' ' << z << endl;
	int t;
	cin>> t;
	return t;
}

ll cross(int x, int y, int z)
{
	cout<< 1 << ' ' << x << ' ' << y << ' ' << z << endl;
	ll t;
	cin>> t;
	return t;
}

ll s[N];

bool cmp1(int x, int y)
{
	return s[x] < s[y];
}

bool cmp2(int x, int y)
{
	return s[x] > s[y];
}

vector<int> solve(vector<int> v)
{
	if(v.size() <= 1) return v;
	ll mx = -1;
	int n = v.size();
	for(int i = 0; i < n; i++) 
	{
		s[v[i]] = cross(1, 2, v[i]);
		if(s[v[i]] > s[mx]) mx = v[i];
	}
	vector<int> l, r;
	for(int i = 0; i < n; i++) 
	{
		if(v[i] == mx) continue;
		if(sign(1, mx, v[i]) == 1)
			l.PB(v[i]);
		else 
			r.PB(v[i]);
	}
	sort(l.begin(), l.end(), cmp2);
	sort(r.begin(), r.end(), cmp1);
	vector<int> ans = r;
	ans.PB(mx);
	for(auto u : l) ans.PB(u);
	return ans;
}

int32_t main()
{
	ios::sync_with_stdio(0); cin.tie(0);
	int n;
	cin>> n;
	vector<int> l, r;
	for(int i = 3; i <= n; i++)
	{
		int x = sign(1, 2, i);
		if(x == 1) l.PB(i);
		else r.PB(i);
	}
	l = solve(l);
	r = solve(r);
	cout<< 0 << ' ' << 1 << ' ';
	for(auto u : r) cout<< u << ' ';
	cout<< 2 << ' ';
	for(auto u : l) cout<< u << ' ';
	cout<< endl;
}
