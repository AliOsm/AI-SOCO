#include <bits/stdc++.h>
using namespace std;
#define PB push_back
#define ZERO (1e-10)
#define INF int(1e9+1)
#define CL(A,I) (memset(A,I,sizeof(A)))
#define DEB printf("DEB!\n");
#define D(X) cout<<"  "<<#X": "<<X<<endl;
#define EQ(A,B) (A+ZERO>B&&A-ZERO<B)
typedef long long ll;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
#define IN(n) int n;scanf("%d",&n);
#define FOR(i, m, n) for (int i(m); i < n; i++)
#define F(n) FOR(i,0,n)
#define FF(n) FOR(j,0,n)
#define FT(m, n) FOR(k, m, n)
#define aa first
#define bb second
void ga(int N,int *A){F(N)scanf("%d",A+i);}
#define MX (1000005)
vii g[MX],G[MX],e[MX],R[MX];
vi V[MX];
int cn[MX],C[MX],I[MX],H[MX],L;
void CLR(int N=MX){L=0;F(N)g[i].clear(),e[i].clear(),G[i].clear(),R[i].clear(),cn[i]=I[i]=0;}
void dfs1(int x){
    cn[x]=1;
    for(auto h:g[x])if(!cn[h.aa])dfs1(h.aa);
    H[L++]=x;
}
void dfs2(int x,int c){
    cn[x]=0,C[x]=c;
    for(auto h:e[x])if(cn[h.aa])dfs2(h.aa,c);
}
void ADD(int A,int B,int C){g[A].PB({B,C}),e[B].PB({A,C});}
int ini(int N){
    F(N)if(!cn[i])dfs1(i);
    int I=0;
    for(int i=L-1;~i;--i)if(cn[H[i]])dfs2(H[i],++I);
    F(N)--C[i];
    F(N)for(auto&h:g[i])if(C[i]^C[h.aa])G[C[i]].PB({C[h.aa],h.bb}),R[C[h.aa]].PB({C[i],h.bb});
                        else V[C[i]].PB(h.bb);
    //F(I)sort(G[i].begin(),G[i].end()),G[i].resize(unique(G[i].begin(),G[i].end())-G[i].begin());
    return I;
}
map<int,ll> P;
vi U;
int N,M,a,b,c;
ll S,d,dp[MX];
ll dyn(int u){
    ll&v=dp[u],z=0;
    if(~v)return v;
    v=0;
    for(auto&h:V[u])z+=P[h];
    for(auto&h:G[u])v=max(v,dyn(h.aa)+h.bb);
    return v+=z;
}
int main(void){
    scanf("%d%d",&N,&M),CL(dp,-1),CLR(N);
    F(M)scanf("%d%d%d",&a,&b,&c),ADD(--a,--b,c),U.PB(c);
    sort(U.begin(),U.end()),a=1,b=0;
    N=ini(N);
    for(auto&h:U){
        while(b+a<h)d+=b+=a++;
        P[h]=h*ll(a)-d;
    }
    IN(_)printf("%lld\n",dyn(C[--_]));
    return 0;
}
