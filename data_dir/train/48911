/* Author haleyk10198 */
/* �@��:  haleyk10198 */
/* CF handle: haleyk100198*/
/* FOR ACM-ICPC WF*/
#include <bits/stdc++.h>

#define MOD 1000000007
#define LINF (1LL<<60)
#define INF 2147483647
#define PI 3.1415926535897932384626433
#define ll long long
#define pii pair<int,int>
#define mp(x,y) make_pair((x),(y))
#define pb(x) push_back((x))
#define vi vector<int>
#define vvi vector<vi>
#define EPS 1e-9

#define MAXNCK 1010

using namespace std;

string str;
int n, k, to[1010];

ll f[MAXNCK], c[MAXNCK];
ll dp[2][1010][1010];

ll nck(ll n, ll k){
	if(n < k) return 0;
	ll ret = (f[n]*c[k])%MOD;
	return (ret*c[n-k])%MOD;
}

ll pwr(ll b, ll e){
	b %= MOD;
	if(e == 0) return 1;
	if(e == 1) return b;
	return (pwr(b*b, e/2)*pwr(b, e%2))%MOD;
}

void init(){
	f[0] = c[0] = 1;
	for(int i = 1; i < MAXNCK; i++) (f[i] = f[i-1]*i) %= MOD;
	c[MAXNCK-1] = pwr(f[MAXNCK-1], MOD-2);
	for(int i = MAXNCK-2; i; i--) (c[i] = c[i+1]*(i+1)) %= MOD;
	
	return;
}

int step(int x){
	if(x == 1) return 0;
	return step(__builtin_popcount(x))+1;
}

int main(){
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	
	init();
	
	cin >> str >> k;
	n = str.length();
	
	dp[0][1][0] = dp[1][1][1] = 1;
	for(int i = 1; i < n; i++)
		for(int cnt1 = 0; cnt1 <= 1000; cnt1++)
		for(int lt = 0; lt < 2; lt++){
			if(lt == 0){
				(dp[lt][i+1][cnt1] += dp[lt][i][cnt1]) %= MOD;
				(dp[lt][i+1][cnt1+1] += dp[lt][i][cnt1]) %= MOD;
			}
			else{
				if(str[i] == '1'){
					(dp[0][i+1][cnt1] += dp[lt][i][cnt1]) %= MOD;
					(dp[1][i+1][cnt1+1] += dp[lt][i][cnt1]) %= MOD;
				}
				else{
					(dp[1][i+1][cnt1] += dp[lt][i][cnt1]) %= MOD;
				}
			}
		}
	
	if(k == 0) cout << 1 << endl;
	else{
		ll res = 0;
		for(int i = 1; i <= 1000; i++){
			if(step(i)+1 == k){
				(res += dp[0][n][i]+dp[1][n][i]) %= MOD;
			}
		}
		
		if(k == 1 && --res < 0) res += MOD;
		cout << res << endl;
	}
	
	return 0;
}

