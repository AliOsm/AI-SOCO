#include <bits/stdc++.h>

using namespace std;

void ReadInt(int &x){
    x = 0;
    char c = '\0';
    while (c < '0' || c > '9') c = getchar();
    while (c >= '0' && c <= '9'){
        x = x * 10 + c - '0';
        c = getchar();
    }
}

const int N = 4040, M = 808;

int c[N][N], n, m, dp[M][N];

void dnc(int k, int l, int r, int lo, int hi) {
  if (l > r) return;
  int m = (l + r) >> 1;
  int best = lo;
  int &cur = dp[k][m];
  cur = 1e8;
  for (int i = lo; i <= hi && i <= m-1; i++) {
    int now = dp[k-1][i] + c[m][i+1];
    if (now < cur) {
      best = i;
      cur = now; 
    }
  }

  dnc(k, l, m-1, lo, best);
  dnc(k, m+1, r, best, hi);
}

int main() {
  scanf("%d %d", &n, &m);
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      ReadInt(c[i][j]);
    }
  }
  for (int j = 0; j < n; j++) {
    for (int i = j-1; i >= 0; i--) {
      c[j][i] += c[j-1][i] + c[j][i+1] - (i+1<=j-1 ? c[j-1][i+1] : 0);
    }
  }
  for (int i = 0; i < n; i++) {
    dp[1][i] = c[i][0];
  }
  for (int i = 2; i <= m; i++)
    dnc(i, 0, n-1, 0, n-1);
  printf("%d\n", dp[m][n-1]);
  return 0;
}