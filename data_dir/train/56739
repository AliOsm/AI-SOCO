#include <bits/stdc++.h>

using namespace std;

#define mem(a,b) memset(a,b,sizeof(a))
#define FOR(i,j,k) for(int i=j;i<=k;i++)
#define REV(i,j,k) for(int i=j;i>=k;i--)
#define FORR(i,j,k,l) for(int i=j;i<=k;i+=l)
#define inf         freopen("in.txt", "r", stdin)
#define outf        freopen("out.txt", "w", stdout)
#define pf          printf
#define sf(n)       scanf("%d", &n)
#define sff(a,b)    scanf("%d %d", &a, &b)
#define sfff(a,b,c)    scanf("%d %d %d", &a, &b, &c)
#define minn          (long long)-1000000000000000000
#define maxx          (long long) 1000000000000000000
#define mod          1000000007
#define LL           long long
#define NL '\n'
#define cnd tree[idx]
#define lnd (2*idx)
#define rnd ((2*idx)+1)
#define PB push_back
#define F first
#define S second
#define MK make_pair
typedef pair<int,int> pr;

int ar[100010];
set<LL>ms;
set<LL>::iterator it;
int main()
{
    ios::sync_with_stdio(false);
    //inf;
    //outf;
    LL i, j, x, y, n,b1, q, l, m, a=0, b, c=0, d=0;
    cin>>b1>>q>>l>>n;
    FOR(i,0,n-1)
    {
        cin>>ar[i];
    }
    sort(ar,ar+n);
    while(abs(b1)<=l)
    {
       if(b1==0)
       {
           x=lower_bound(ar,ar+n,0)-ar;
           if(ar[x]!=0&&x<n) cout<<"inf";
           else cout<<0<<NL;
           return 0;
       }
       else if(q==0)
       {
           x=lower_bound(ar,ar+n,b1)-ar;
           y=lower_bound(ar,ar+n,0)-ar;
           if(ar[x]==b1&&x<n)
           {
               if(ar[y]!=0&&y<n) cout<<"inf";
               else cout<<0<<NL;
               return 0;
           }
           else
           {
               if(ar[y]!=0||y>=n) cout<<"inf";
               else cout<<1<<NL;
               return 0;
           }
       }
       else if(q==1)
       {
           x=lower_bound(ar,ar+n,b1)-ar;
           if(ar[x]==b1&&x<n)
           {
               cout<<0<<NL;
               return 0;
           }
           else
           {
               cout<<"inf"<<NL;
               return 0;
           }
       }
       x=lower_bound(ar,ar+n,b1)-ar;
       if(ar[x]!=b1) c++;
       it=ms.find(b1);
       if(it!=ms.end())
       {
           if(c==0) cout<<0;
           else cout<<"inf";
           return 0;
       }
       ms.insert(b1);
       b1*=q;
    }
    cout<<c<<NL;
    return 0;
}
