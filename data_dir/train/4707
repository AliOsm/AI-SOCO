/// f.cpp

# include <stdio.h>
# include <bits/stdc++.h>
using namespace std;
const pair < int , int > DD[] = {{1,0},{1,1},{0,1},{-1,1},{-1,0},{-1,-1},{0,-1},{1,-1}};
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define IOS ios_base :: sync_with_stdio(0);cin.tie(0)
# define p(v) cerr << #v << " = " << v << '\n'
# define p2(v) cerr << #v << " = " << (complex < __typeof(v.x) > (v.x,v.y)) << '\n'
# define vi vector < int >
# define vl vector < ll >
# define pll pair < ll , ll >
# define pii pair < int , int >
# define mp make_pair
# define db long double
# define fail puts("-1")
# define yes puts("YES")
# define no puts("NO")
# define PP puts("Possible")
# define II puts("Impossible")
# define vii vector < pii >
# define vll vector < ll >
# define pb push_back
# define pdd pair < db , db >
template < class T > T smin(T &a,T b) {if (a > b) a = b;return a;}
template < class T > T smax(T &a,T b) {if (a < b) a = b;return a;}
int main(void)
{
    #ifdef CF
    freopen("input","r",stdin);
    #endif // CF
    srand(time(0));
    fo << fixed << setprecision(7);
    cerr << fixed << setprecision(7);
    static int t1[1 << 20];
    static int t2[1 << 20];
    static int s[1 << 20];
    int n;
    IOS;
    fi>>n;
    for (int i = 1;i <= n;++i)
        t2[i] = 2e9;
    vi ss;
    for (int i = 1;i <= n;++i)
        fi>>s[i],ss.pb(s[i]);
    sort(ss.begin(),ss.end());
    ss.resize(unique(ss.begin(),ss.end()) - ss.begin());
    int sz = ss.size();
    function < void(int,int,int,int,int) > U1 = [&](int p,int u,int pos,int val,int node)
    {
        if (p == u)
            t1[node] = val;
        else
        {
            int m = (p + u) / 2;
            if (pos <= m)
                U1(p,m,pos,val,node << 1);
            else
                U1(m+1,u,pos,val,node << 1 | 1);
            t1[node] = max(t1[node << 1],t1[node << 1 | 1]);
        }
    };
    function < int(int,int,int,int,int) > Q1 = [&](int p,int u,int l,int r,int node)
    {
        if (l > r)
            return 0;
        if (l <= p && u <= r)
            return t1[node];
        else
        {
            int m = (p + u) / 2;
            int ans = 0;
            if (l <= m)
                smax(ans,Q1(p,m,l,r,node << 1));
            if (m+1<=r)
                smax(ans,Q1(m+1,u,l,r,node << 1 | 1));
            return ans;
        }
    };
    auto U2 = [&](int i,int v)
    {
        for (;i;i -= i&(-i))
            smin(t2[i],v);
    };
    auto Q2 = [&](int i)
    {
        int ans = 2e9;
        for (;i <= n;i += i&(-i))
            smin(ans,t2[i]);
        return ans;
    };
    static vii qq[1 << 20];
    int m;
    fi>>m;
    static int ans[1 << 20];
    for (int i = 1;i <= m;++i)
    {
        int l,r;
        fi>>l>>r;
        qq[r].pb(mp(l,i));
    }
    for (int i = 1;i <= n;++i)
        s[i] = lower_bound(ss.begin(),ss.end(),s[i]) - ss.begin() + 1;
    for (int i = 1;i <= n;++i)
    {
        int vv = 1e9;
        do
        {
            int pos = Q1(1,n,lower_bound(ss.begin(),ss.end(),ss[s[i] - 1] - vv) - ss.begin() + 1,s[i],1);
            if (!pos)
                break;
            vv = abs(ss[s[i] - 1] - ss[s[pos] - 1]);
            U2(pos,vv);
            vv = min(vv - 1,(vv + 1) / 2);
        } while (vv >= 0);
        vv = 1e9;
        do
        {
            int pos = Q1(1,n,s[i],lower_bound(ss.begin(),ss.end(),ss[s[i] - 1] + vv + 1) - ss.begin(),1);
            if (!pos)
                break;
            vv = abs(ss[s[i] - 1] - ss[s[pos] - 1]);
            U2(pos,vv);
            vv = min(vv - 1,(vv + 1) / 2);
        } while (vv >= 0);
        for (auto it : qq[i])
            ans[it.y] = Q2(it.x);
        U1(1,n,s[i],i,1);
    }
    for (int i = 1;i <= m;++i)
        fo << ans[i] << '\n';
    cerr << "Time elapsed :" << clock() * 1000.0 / CLOCKS_PER_SEC << " ms" << '\n';
    return 0;
}
