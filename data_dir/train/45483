#include <string>
#include <sstream>
#include <cstring>
#include <sstream>
#include <vector>
#include <algorithm>
#include <iostream>
#include <stdio.h>
#include <fstream>
#include <ctime>
#include <cmath>
#include <math.h>
#include <set>
#include <map>
#include <list>
#include <iomanip>
#include <cstdio>
#include <algorithm>
using namespace std;

#define pp system("pause");
#define ct double ttme = clock()
#define p_ct cout << (clock() - ttme) / CLOCKS_PER_SEC << endl
#define all(c) (c).begin(),(c).end()
#define fft ifstream fin("input.txt"); ofstream fout("output.txt")
#define fft_c FILE *fin, *fout
#define fft_c_open fin = fopen("input.txt","r"); fout = fopen("output.txt","w")
#define fft_c_cl fclose(fin); fclose(fout)
#define pii pair<int,int>
#define mp(a,b) make_pair((a),(b))
#define pff pair<float,float>
#define piii pair<int,pair<int,int>>
#define M_PI 3.14159265358979323846
#define mem0(m) memset((m), 0, sizeof(m));
#define memb(m) memset((m), false, sizeof(m));
#define memi(m) memset((m), 0, sizeof(m));
#define rep(i,n) for(i = 0; i < (int)(n); i++)
#define repi(a, n) for(int i = a; i < (int)(n); i++)
#define repp(i, a, n) for(int (i) = a; (i) < (int)(n); (i)++)
typedef unsigned long long ull;
typedef signed long long ll;
const int INF = 1e8;
const int DEL = 687134561;
const long long MODULO = 1e9 + 7;
const int MAX = 1e7;
const int des = 10000;


ll ans = 0, m;

set<int> st;
map<pii, bool> mapp;
map<pii, int> mapp2;
pii vec[100005];
bool used[100005];
int counter = 0;

bool canMove(int x, int y) {
    if(mapp[mp(x - 1, y + 1)] && !mapp[mp(x - 1, y)] && !mapp[mp(x - 2, y)]) {
        return false;
    }
    if(mapp[mp(x, y + 1)] && !mapp[mp(x - 1, y)] && !mapp[mp(x + 1, y)]) {
        return false;
    }
    if(mapp[mp(x + 1, y + 1)] && !mapp[mp(x + 1, y)] && !mapp[mp(x + 2, y)]) {
        return false;
    }

    return true;
}

void remove(int number) {
    if(!canMove(vec[number].first, vec[number].second)) {
        used[number] = false;
        st.erase(st.find(number));
        counter--;
        return;
    }

    ans = (ans * m + number) % 1000000009;
    st.erase(st.find(number));

    mapp[vec[number]] = false;

    int x = vec[number].first, y = vec[number].second;

    for(int i = x - 2; i <= x + 2; i++) {
        for(int z = y - 1; z <= y + 1; z++) {
            if(!mapp[mp(i,z)])
                continue;

            int index = mapp2[mp(i,z)];

            if(st.find(index) != st.end())
                continue;
            if(canMove(i, z) && !used[index]) {
                used[index] = true;
                st.insert(index);
            }
        }
    }
}

int main()
{
    cin >> m;
    memb(used);
    for(int i = 0; i < m; i++) {
        int x, y;
        cin >> x >> y;

        mapp[mp(x,y)] = true;
        mapp2[mp(x,y)] = i;
        vec[i] = mp(x,y);
    }

    for(int i = 0; i < m; i++) {
        if(canMove(vec[i].first, vec[i].second)) {
            used[i] = true;
            st.insert(i);
        }
    }

    for(; counter < m; counter++) {
        if(counter % 2 == 1) {
            remove(*st.begin());
        } else {
            remove(*st.rbegin());
        }
    }

    cout << ans;
}
