#include<bits/stdc++.h>

using namespace std;
const int N = 1e6 + 1;
int n, a[N], fl[N], fr[N], ffr[N], tree[N];
int read(int idx) {
	int sum = 0;
	while (idx > 0) {
		sum += tree[idx];
		idx -= (idx & -idx);
	}
	return sum;
}
void update(int idx, int val) {
	while (idx < N) {
		tree[idx] += val;
		idx += (idx & -idx);
	}
}
int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif
	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
		scanf("%d", a + i);
	map<int, int> freq;
	for (int i = 0; i < n; ++i) {
		fl[i] = ++freq[a[i]];
	}
	freq.clear();
	for (int i = n - 1; i >= 0; --i) {
		fr[i] = ++freq[a[i]];
		++ffr[fr[i]];
	}
	for (int i = 1; i <= n; ++i) {
		update(i, ffr[i]);
	}
	long long result = 0;
	for (int i = 0; i < n; ++i) {
		update(fr[i], -1);
		result += read(fl[i] - 1);
	}
	printf("%lld\n", result);
	
	
	return 0;
}
