#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <fstream>
#include <cstdio>
#include <map>
#include <hash_map>
#include <string>
#include <iomanip>
#include <vector>
#include <memory.h>
#include <queue>
#include <set>
#include <stack> 
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include <bitset>
#pragma comment (linker, "/STACK:167177216")
using namespace std;
#define mems(A, val) memset(A, val, sizeof(A))
#define mp(a, b) make_pair(a, b)
#define all(B) (B).begin(), (B).end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define forit (it, coll) for(auto it = coll.begin(); it != coll.end(); ++it)
const int MAX = 2147483647;
const int MAXN = 1000000 + 10000;
typedef long long LL;
const LL MOD = 1000000000 + 7;

int main()
{
#ifdef _DEBUG
    freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#else
    //freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
    //freopen("f.in", "r", stdin); freopen("f.out", "w", stdout);
#endif
    string n;
    cin >> n;
    for (int i = 0; i < n.size(); ++i)
    {
        if (n[i] == '0')
        {
            cout <<"YES"<<endl<< 0;
            return 0;
        }
    }

    for (int i = 0; i < n.size(); ++i)
    {
        int tmp = n[i] - '0';
        if (tmp % 8 == 0)
        {
            cout << "YES"<<endl<<n[i];
            return 0;
        }
    }

    for (int i = 0; i < n.size(); ++i)
    {
        for (int j = i + 1; j < n.size(); ++j)
        {
            int tmp = (n[i] - '0') * 10 + n[j] - '0';
            string tt;
            tt += n[i];
            tt += n[j];
            if (tmp % 8 == 0)
            {
                cout << "YES" << endl<<tt;
                return 0;
            }
        }
    }

    for (int i = 0; i < n.size(); ++i)
    {
        for (int j = i + 1; j < n.size(); ++j)
        {
            for (int k = j + 1; k < n.size(); ++k){
                int tmp = ((n[i] - '0') * 10 + n[j] - '0') * 10 + n[k] - '0';
                string tt;
                tt += n[i];
                tt += n[j];
                tt += n[k];
                if (tmp % 8 == 0)
                {
                    cout << "YES" << endl<<tt ;
                    return 0;
                }
            }
        }
    }
    cout << "NO";
    return 0;
}