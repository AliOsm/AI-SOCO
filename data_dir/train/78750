#include<bits/stdc++.h>
using namespace std;

const int N = 3e5 + 5;
int n , k , d , x , y;
vector<vector<int> > v(N);
bool visited[N];
map<pair<int , int> , int> mp;
set<int> del;
set<pair<int ,pair<int ,int> > >se;

int main()
{
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);

    cin >> n >> k >> d;
    for(int i = 0 ; i < k ; i++)
        cin >> x , se.insert( { 0 , { x , -1 } } );

    for(int i = 0 ; i < n-1 ; i++)
    {
        cin >> x >> y;
        v[x].push_back(y);
        v[y].push_back(x);
        mp[{ x , y }]  = mp[{ y , x }] = i+1;
    }

    while(!se.empty())
    {
        int cost = se.begin()->first;
        int node = se.begin()->second.first;
        int p = se.begin()->second.second;
        se.erase(se.begin());

        if(visited[node] || cost > d) continue;
        visited[node] = 1;

        for(auto i : v[node])
        {
            if(i != p)
            {
                if(!visited[i])
                    se.insert({cost + 1 , { i , node } } );
                else del.insert(mp[{i , node}]);
            }
        }
    }

    cout << del.size() << endl;
    for(auto i : del)
        cout << i << " ";

    return 0;
}
