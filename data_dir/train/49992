#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define all(x) x.begin(), x.end()
#define boost() ios_base :: sync_with_stdio(0); cin.tie(); cout.tie(); cout << fixed; cout << setprecision(15); srand(time(NULL))
#define endl '\n'
typedef long long LL;
const int _N = 2e5 + 11;
const LL INF = 1e18;
const LL MOD = 1e9 + 7;

LL power(LL a, LL b) {
	LL res = 1LL;
	while (b) {
		if (b & 1) res = (res * a) % MOD;
		a = (a * a) % MOD;
		b >>= 1LL;
	}
	return res;
}

LL n, u, v, cnt, vis[_N], res = 1LL;
vector <LL> adj[_N], cycles;

void dfs1(int v) {
	vis[v] = 2;
	cnt++;
	for (int i = 0; i < (int)adj[v].size(); i++) {
		int to = adj[v][i];
		if (vis[to] == 1) dfs1(to);
	}
}

void dfs(int v) {
	vis[v] = 1;
	for (int i = 0; i < (int)adj[v].size(); i++) {
		int to = adj[v][i];
		cnt = 0;
		if (vis[to] == 0) dfs(to);
		else if (vis[to] == 1) {
			dfs1(to);
			cycles.pb(cnt);
		}
	}
	vis[v] = 2;
}

int main() {
	boost();
	#ifndef ONLINE_JUDGE
		freopen("in", "r", stdin);
//		freopen("out", "w", stdout);
	#endif
	cin >> n;
	for (int i = 1; i <= n; i++) {
		cin >> v;
		adj[i].pb(v);
	}
	for (int i = 1; i <= n; i++) if (!vis[i]) dfs(i);
	cnt = 0;
	for (int i = 0; i < (int)cycles.size(); i++) {
		res = (res * ((power(2, cycles[i]) - 2 + MOD) % MOD)) % MOD;
		cnt += cycles[i];
	}
	res = (res * power(2, n - cnt)) % MOD;
	cout << res << endl;
	return 0;
}
