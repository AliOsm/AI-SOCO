
 #include "bits/stdc++.h"
 using namespace std;
 char Str[200005] , Ans[200005];
 int Prefix[10][200005];
 bool Count[10];

 int binary_search_( int low , int high , int start ){
 	if( low >= high ) return low;
 	else{
 		int middle = ( low + high ) >> 1;
 		if( Prefix[0][middle] - Prefix[0][start] == middle - start )
 			return binary_search_( middle + 1 , high , start );
 		else return binary_search_( low , middle - 1 , start );
 	}
 }

 int main(){
 	int T , i , j , k , N , x , y , index;
 	scanf( "%d" , &T );

 	while( T-- ){
 		scanf( "%s" , Str + 1 );
 		N = strlen( Str + 1 );

 		for( i = 1 ; i <= N ; ++i ){
 			for( j = 0 ; j <= 9 ; ++j ){
 				if( Str[i] - '0' == j ) Prefix[j][i] = 1 + Prefix[j][i - 1];
 				else Prefix[j][i] = Prefix[j][i - 1];
 			}
 		}

 		for( i = N - 1 ; i >= 0 ; --i ){
 			index = binary_search_( i + 1 , N , i );
 			if( Prefix[0][index] - Prefix[0][i] != index - i ) --index;
 			if( index == N ) continue;
 			x = 0;
 			for( j = 0 ; j <= 9 ; ++j ){
 				Count[j] = (Prefix[j][index] & 1);
 				x += Count[j] & 1;	
 			}
 			
 			if( i == 0 && Str[1] == '1' ){
 				N -= 2;

 				for( j = 1 ; j <= N ; ++j )
 					Ans[j] = '9';

 				Ans[N + 1] = '\0';
 				break;
 			}

 			if( N - index < x || ((N - index - x)&1)  ) continue;
 			for( j = Str[index + 1] - '1' ; j >= 0 ; --j ){
 				if( (Count[j] ^ 1) == 1 ) y = 1;
 				else y = -1;
 				if( N - index - 1 - x - y < 0 || (N - index - 1 - x - y) & 1 ) continue;
 				Ans[index + 1] = '0' + j;
 				break;
 			}

 			if( j == -1 ) continue;
 			Count[j] ^= 1; 
 			x += y;

 			for( j = 0 ; j <= index ; ++j )
 				Ans[j] = Str[j];

 			for( j = index + 2 ; j <= N - x ; ){
 				if( (Count[9] ^ 1) == 1 ) y = 1;
 				else y = -1;
 				if( N - j - x - y < 0 || (N - j - x - y) & 1 ) break;
 				Ans[j] = '9';
 				x += y;
 				Count[9] ^= 1;
 				++j;	
 			}

 			for( k = 9 ; k >= 0 ; --k ){
 				if( Count[k] ) Ans[j++] = '0' + k;
 			}

 			Ans[N + 1] = '\0';
 			break;
 		}

 		printf( "%s\n" , Ans + 1 );
 	}

 	return 0;
 }