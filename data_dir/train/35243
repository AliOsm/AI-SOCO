#include <bits/stdc++.h>
#define endl '\n'

using namespace std;
template<class T, class T2> inline void chkmax(T &x, const T2 &y) { if(x < y) x = y; }
template<class T, class T2> inline void chkmin(T &x, const T2 &y) { if(x > y) x = y; }
const int MAXN = (int)5e3 + 17;

int n, m;
string t[MAXN];
int a[MAXN][MAXN];

void read()
{
    cin >> n >> m;
    for(int i = 0; i < n; i++)
        cin >> t[i];
}

int BEG;
int perm[MAXN];
bool cmp(int i, int j) { return a[i][BEG] < a[j][BEG]; }
vector<int> li[MAXN];

void counting_sort()
{
    for(int i = 0; i <= m; i++)
        li[i].clear();

    for(int i = 0; i < n; i++)
        li[a[i][BEG]].push_back(i);

    int idx = 0;
    for(int l = 0; l <= m; l++)
        for(int i = 0; i < li[l].size(); i++)
            perm[idx++] = li[l][i];
}

void solve()
{
    for(int i = 0; i < n; i++)
        for(int j = m - 1; j >= 0; j--)
            if(t[i][j] == '1') a[i][j] = a[i][j + 1] + 1;
            else a[i][j] = 0;

    int ans = 0;
    for(int i = 0; i < n; i++)
        perm[i] = i;

    for(int st = 0; st < m; st++)
    {
        ::BEG = st;
        counting_sort();

        for(int j = 0; j < n; j++)
        {
            int area = (j + 1) * a[perm[n - j - 1]][st];
            chkmax(ans, area);
        }
    }

    cout << ans << endl;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	read();
	solve();
	return 0;
}
