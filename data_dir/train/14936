#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <map>
#include <list>
#include <set>
#include <algorithm>
#include <cmath>
#include <queue>
#include <iterator>
#include <functional>
#include <numeric>
#include <cmath>
#include <stack>
#include <limits>

using namespace std;

#define ll long long
#define f0(i,n)for(i=0;i<n;i++)
#define f1(i,n)for(i=1;i<=n;i++)
#define fc(i,c,n)for(i=c;i<=n;i++)
#define f0r(i,n)for(i=n-1;i>=0;i--)
#define f1r(i,n)for(i=n;i>0;i--)
#define fcr(i,c,n)for(i=n;i>=c;i--)
#define IO ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

typedef list<ll> LST;
typedef vector<ll> VEC;
typedef map<ll, ll> MAP;

ll n, m, p, k, t, f, s, v, h;
ll a, b, c, d;
ll x, y, z, w, l, r;
ll one = 1, zero = 0, ans = 0, cnt = 0;
ll mod = 998244353;
ll INF = 10000000000000000;
ll a1, a2, a3, a4, a5, a6, a7, a8, a9;
int i, j, q;
string st1, st2, st3, st4;
char ch1, ch2, ch3;
double eps = 0.0000001;

ll NN = 100000;

VEC primes(NN+1,1);

void genPrimes() {
	fc(i, 2, NN) {
		if (primes[i]) {
			for (j = i + i; j <= NN; j += i)
				primes[j] = 0;
		}
	}
}

ll gcd(ll aa, ll bb) {
	return bb == 0 ? aa : gcd(bb, aa%bb);
}

int main() {
	IO;
	ifstream fin("Text.txt");
	cin >> n;
	cin >> st1;
	sort(st1.begin(), st1.end());
	cout << st1 << endl;
	return 0;
}