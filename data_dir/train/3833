#include <bits/stdc++.h>

using namespace std;

#define MAX 500005
#define ll long long
ll pre[MAX], suf[MAX], arr[MAX];
ll n;

void prnt(ll idx)
{
    vector<ll> pre;
    ll cur = arr[idx];
    for(ll i=idx-1; i>=0; i--){
        cur = min(cur, arr[i]);
        pre.push_back(cur);
    }
    vector<ll> post;
    cur = arr[idx];
    for(ll i=idx+1; i<n; i++){
        cur = min(cur, arr[i]);
        post.push_back(cur);
    }
    reverse(pre.begin(), pre.end());
    for(auto x : pre) cout << x << " ";
    cout << arr[idx] << " ";
    for(auto x : post) cout << x << " ";
}

int main()
{
    scanf("%lld", &n);
    set<pair<ll, ll> > st;
    for(int i=0; i<n; i++){
        scanf("%lld", &arr[i]);
    }
    ll sum = 0;
    for(int i=0; i<n; i++){
        ll val = arr[i];
        ll cnt_insert = 1;
        while(!st.empty()){
            auto iter = st.end();
            iter--;
            ll cur = (*iter).first;
            ll cnt = (*iter).second;
            if(cur < val) break;
            cnt_insert += cnt;
            sum -= cur * cnt;

            st.erase(iter);
        }
        st.insert(make_pair(val, cnt_insert));
        sum += val * cnt_insert;
        pre[i] = sum;
    }
    st.clear();
    sum = 0;
    for(int i=n-1; i>=0; i--){
        ll val = arr[i];
        ll cnt_insert = 1;
        while(!st.empty()){
            auto iter = st.end();
            iter--;
            ll cur = (*iter).first;
            ll cnt = (*iter).second;
            if(cur < val) break;
            cnt_insert += cnt;
            sum -= cur * cnt;
            st.erase(iter);
        }
        st.insert(make_pair(val, cnt_insert));
        sum += val * cnt_insert;
        suf[i] = sum;
    }
    ll ans = 0, idx = -1;
    for(int i=0; i<n; i++){
        ll cur = pre[i] + suf[i] - arr[i];
        if(cur > ans){
            ans = cur;
            idx = i;
        }
    }
    prnt(idx);
}