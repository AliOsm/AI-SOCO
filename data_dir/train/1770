# include <bits/stdc++.h>

using namespace std;

const int N = 1e5 + 2;

int n, m, a[N], b[N], c[N], used[N], vis[N];
vector < pair <int, int> > g[N];
vector < int > vec;

bool dfs(int v, int p, int cl){
      if(used[v]){
            return vis[v] == p;
      }
      used[v] = 1;
      vis[v] = p;
      vec.push_back(v);
      for(int i = 0; i < g[v].size(); i ++){
            int to = g[v][i].first, col = c[ g[v][i].second ];
            if(!dfs(to, col == cl?p:1-p, cl)){
                  return 0;
            }
      }
      return true;
}

vector <int> get(int C){
      vector <int> ans;

      memset(used, 0, sizeof(used));
      memset(vis, 0, sizeof(vis));

      for(int i = 1; i <= n; i ++){
            if(!used[i]){
                  vec.clear();
                  bool ok = dfs(i, C, C);
                  if(!ok){
                        for(int j = 0; j <= n; j ++)
                              ans.push_back(-1);
                        return ans;
                  }
                  int cnt = 0;
                  for(int  j = 0; j < vec.size(); j ++){
                        int aa = vec[j];
                        if(vis[aa])
                              cnt ++;
                  }
                  int sz = vec.size();
                  if(sz - cnt < cnt){
                        for(int j = 0; j < vec.size(); j ++){
                              int aa = vec[j];
                              if(!vis[aa])
                                    ans.push_back(aa);
                        }
                  } else {
                        for(int j = 0; j < vec.size(); j ++){
                              int aa = vec[j];
                              if(vis[aa])
                                    ans.push_back(aa);
                        }
                  }
            }
      }

      return ans;
}

int main(){
      cin >> n >> m;

      for(int i = 1; i <= m; i ++){
            char ch;
            cin >> a[i] >> b[i] >> ch;
            if(ch == 'R')
                  c[i] = 1;
            g[a[i]].emplace_back(b[i], i);
            g[b[i]].emplace_back(a[i], i);
      }

      vector <int> f = get(0);
      vector <int> s = get(1);

      if(s.size() < f.size())
            f = s;

      if(f.size() > n){
            puts("-1");
            return 0;
      }

      cout << (int)f.size() << endl;
      for(int i = 0; i < f.size(); i ++){
            cout << f[i] << " ";
      }
}
