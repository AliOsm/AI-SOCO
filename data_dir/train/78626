#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,sse3,sse4,popcnt,abm,mmx")

#include <bits/stdc++.h>	
#include <stdio.h>    
 
using namespace std;
     
#define F first
#define S second
#define lb lower_bound          	
#define ub upper_bound
#define pb push_back
#define pf push_front    
#define ppb pop_back
#define mp make_pair
#define bpp __builtin_popcount                                                                                        
#define sqr(x) ((x) * (x))
#define al 0x3F3F3F3F
#define sz(x) x.size()
#define all(x) x.begin(), x.end()
#define in insert
#define ppf pop_front
#define endl '\n'
//#define int long long
 
typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
typedef pair <int, int> pii;
 
const int mod = (int)1e9 + 7;                                  
const int N = (int)2e5 + 123;
const ll inf = (ll)3e18 + 1;
                                       
const double pi = acos(-1.0);
const double eps = 1e-7;
const int dx[] = {0, 0, 1, 0, -1};   																																					
const int dy[] = {0, 1, 0, -1, 0};  

int n;

inline void boost () {
	ios_base :: sync_with_stdio (NULL);
	cin.tie (NULL), cout.tie (NULL);
}

inline void Solve () {  
	boost (); 
	cin >> n;
	if (n <= 2) cout << "No", exit (0);
	if (n % 4 == 0) {
		cout << "Yes\n";
		cout << n / 2 << ' ';
		int l = 1, r = n;
		for (int i = 1; i <= n / 4; i ++) {
			cout << l << ' ' << r << ' ';
			l += 2;
			r -= 2;
		}
		cout << endl;
		cout << n / 2 << ' ';
		l = 2, r = n - 1;
		for (int i = 1; i <= n / 4; i ++) {
			cout << l << ' ' << r << ' ';
			l += 2;
			r -= 2;
		}
		exit (0);
	}
	if (n % 4 == 3) {
		cout << "Yes\n";
		cout << "1 2\n";
		cout << n - 1 << ' ';
		for (int i = 1; i <= n; i ++) {
			if (i == 2) continue;
			cout << i << ' ';
		}
		exit (0);
	}
	int sum = n * (n + 1) / 2;
	for (int i = 2; i * i <= sum; i ++) {
		if (sum % i == 0) {
			cout << "Yes\n";
			cout << "1 " << i << endl;
			cout << n - 1 << ' ';
			for (int j = 1; j <= n; j ++) {
				if (i == j) continue;
				cout << j << ' ';
			}
			exit (0);
		}
	}
	cout << "No";
}                                          
                  
main () {                                       
//	freopen ("ormax.in", "r", stdin);    
//	freopen ("ormax.out", "w", stdout); 	          
	int tt = 1;
//	cin >> tt;   
	while (tt --) {
		Solve ();
	}        
	return 0;      
}                                                  