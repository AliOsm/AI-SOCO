#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)   for(long long i=a;i<=b;i++)
#define fr(i,a)     for(long long i=0;i<a;i++)
#define fd(i,a,b)   for(long long i=b;i>=a;i--)
#define clr(x)      memset(x,0,sizeof(x))
#define cln(x)      memset(x,-1,sizeof(x))
#define __          printf(" ")
#define _           printf("\n")
#define stree       long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define mod         1000000007

long long d[101][101],mem[110][10010],p[110],p2[110];
long long N,m,k,x;
long long nCr(long long n,long long r){
    if(n==r||r==0) return 1;
    else if(d[n][r]!=-1) return d[n][r];
    else return d[n][r]=(nCr(n-1,r)+nCr(n-1,r-1))%mod;
}

long long Power(long long BaSe,long long PoWeR,long long MoD){
    BaSe%=MoD;
    long long ret=1;
    while(PoWeR>0){
        if(PoWeR&1) ret=(ret*BaSe)%MoD;
        PoWeR>>=1;
        BaSe=(BaSe*BaSe)%MoD;
    }
    return ret;
}


long long dp(long long cur,long long n){
    if((N-cur+1)*N<n) return 0;
    if(cur==N){
        if(n<=N) return (m-cur)/N==x?p2[n]:p[n];
        else return 0;
    }
    long long &ret=mem[cur][n];
    if(ret!=-1) return ret;
    long long mn=min(N,n),curv;
    ret=0;
    fi(i,0,mn) {
        curv=(m-cur)/N==x?p2[i]:p[i];
        curv=(curv*dp(cur+1,n-i));
        ret=(ret+curv)%mod;
    }
    return ret;
}

main(){
    cln(d);
    cln(mem);
    scanf("%lld %lld %lld",&N,&m,&k);
    x=m/N;
    fi(i,0,N) {
        p[i]=Power(nCr(N,i),x,mod);
        p2[i]=(p[i]*nCr(N,i))%mod;
    }
    printf("%lld\n",dp(1,k));
    return 0;
}
