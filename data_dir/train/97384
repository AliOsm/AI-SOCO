#include <bits/stdc++.h>
#define x first
#define y second
using namespace std;
const int sz=3e5+9;
long long dp[sz];
long long n,m;
long long mod=1e9+7;
long long add(long long a,long long b){return (a%mod+(b%mod+mod)%mod)%mod;}
long long mul(long long a,long long b){return (a%mod*b%mod)%mod;}
pair<int,int> bus[sz];
vector<int> v,veff;
vector<int> dist[sz];
map<int,int> nidx;

long long cs[sz];


int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);

    scanf("%I64d %I64d",&n,&m);

    if(!m){
        printf("0");
        return 0;
    }

    bool f=0,f2=0;
    for(int i=0;i<m;i++){
        scanf("%d %d",&bus[i].y,&bus[i].x);
        v.push_back(bus[i].x);
        v.push_back(bus[i].y);
        if(bus[i].y==0) f=1;
        if(bus[i].x==n) f2=1;
    }

    if(!f||!f2){
        printf("0");
        return 0;
    }

    sort(v.begin(),v.end());
    veff.push_back(v[0]);
    for(int i=1;i<v.size();i++) if(v[i]!=v[i-1]) veff.push_back(v[i]);

    for(int i=0;i<veff.size();i++) nidx[veff[i]]=i;

    for(int i=0;i<m;i++) dist[nidx[bus[i].x]].push_back(nidx[bus[i].y]);

    cs[0]=dp[0]=1;
    for(int i=1;i<veff.size();i++){
        for(auto u:dist[i]){
            dp[i]=add(dp[i],add(cs[i-1],-(u-1>=0?cs[u-1]:0)));
        }
        cs[i]=add(cs[i-1],dp[i]);
    }
    printf("%I64d",dp[nidx[n]]);
    return 0;
}
