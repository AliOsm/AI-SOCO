#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <iomanip>
#include <cstdio>
#include <vector>
#include <string>
#include <stack>
#include <climits>
#include <cmath>
#include <ctime>
#include <queue>
#include <list>
#include <map>
#include <set>

#define For(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)
#define FOR(i,a) For(i,1,a)
#define Ford(i,a,b) for(int (i)=(a);(i)>=(b);(i)--)
#define Rep(i,a,b) for(int (i)=(a);(i)<(b);(i)++)
#define REP(i,a) Rep(i,0,a)
#define type(x) __typeof(x.begin())
#define foreach(it,x) for(__typeof(x.begin()) it = x.begin() ; it!=x.end() ; it++ )

#define compress(x) {sort(all(x));(x).resize(unique(all(x))-(x).begin());}
#define fill(x,y) memset(x,y,sizeof x)
#define all(x) x.begin(),x.end()
#define two(x) (1LL<<(x))
#define fi first
#define se second
#define gcd __gcd
#define pb push_back
#define mp make_pair

#ifdef KAZAR
    #define eprintf(...) fprintf(stderr, __VA_ARGS__)
    #define dbg(x) cerr<<#x<<":"<<(x)<<endl
    #define dg(x) cerr<<#x<<":"<<(x)<<' '
#else
    #define eprintf(...) 0
    #define dbg(x) 0
    #define dg(x) 0
#endif

using namespace std;

typedef long long Lint;
typedef long double ld;
typedef pair<int,int> ii;
typedef pair<int,ii> iii;
typedef vector<int> vi;
typedef vector<ii> vii;

const int inf = 1e9+5143;
const Lint Linf = 1e18+5413;
const double eps = 1e-10;
const double pi = acos(-1);

template<class T> inline void umax(T &a,T b){if(a<b) a = b ; }
template<class T> inline void umin(T &a,T b){if(a>b) a = b ; }
template<class T> inline T abs(T a){return a>0 ? a : -a;}
template<class T> inline T lcm(T a,T b){
	return a/gcd(a,b)*b;
}

inline int read(){
    int res = 0LL ;int neg ;
    while(1){
        char ch = getchar();
        if(ch>='0' && ch<='9' || ch=='-'){
            if(ch=='-') neg = -1;
            else neg = 1 , res = ch-'0';
            break;
        }
    }
    while(1){
        char ch = getchar();
        if(ch>='0' && ch<='9') res*=10,res+=ch-'0';
        else break;
    }
    return res*neg;
}

const int N = 71717;

ii a[N];
int aa[N];
unsigned int one = 1;
unsigned int next[N] , dp[N];
bool used[N];
int use[N] , in[N];

int main(){

#ifdef KAZAR
	freopen("f.i","r",stdin);
	freopen("f.cik","w",stdout);
	freopen("error","w",stderr);
#endif

    int n = read();
    int s = read();

    FOR(i,n){
        aa[i] = read();
        a[i] = mp(aa[i],i);
    }

    sort(a + 1,a + 1 + n);
    reverse(a + 1,a + 1 + n);

    if(a[1].fi > s){
        puts("-1");
        return 0;
    }

    s -= a[1].fi;
    used[a[1].se] = true;

    int m = (s >> 5) + 5;

    dp[0] |= 1;

    For(i,2,n){
        int x = a[i].fi >> 5;
        int y = a[i].fi & 31;
        REP(j,m) next[j] = 0;
        REP(j,m){
            if(j + x < m){
                next[j + x] |= dp[j] << y;
                if(j + x + 1 < m && y != 0){
                    next[j + x + 1] |= dp[j] >> (32 - y);
                }
            }else{
                break;
            }
        }
        REP(j,m) if(dp[j] != next[j])
            REP(k,32)
                if((next[j] & (one << k)) && !(dp[j] & (one << k))){
                    int val = (j << 5) + k;
                    use[val] = a[i].se;
                }
        REP(j,m) dp[j] |= next[j];
        REP(j,m) eprintf("%d ",dp[j]);
        eprintf("\n");
    }

    if(s != 0 && use[s] == 0){
        puts("-1");
        return 0;
    }

    int curr = s;

    while(curr > 0){
        used[use[curr]] = true;
        curr -= aa[use[curr]];
    }

    assert(curr == 0);

    int last = a[1].se;

    FOR(i,n){
        if(!used[a[i].se]){
            in[last] = a[i].se;
            last = a[i].se;
        }
    }

    FOR(i,n){
        if(!in[i]){
            printf("%d 0\n",aa[i]);
        }else{
            printf("%d 1 %d\n",aa[i] - aa[in[i]],in[i]);
        }
    }

    return 0;
}
