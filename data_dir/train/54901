#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define x first
#define y second
#define fastread ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define PI (atan(1)*4)
#define mp make_pair
using namespace std;


//prime builder
const int maxprime = 1e6 + 10, up = sqrt(maxprime);
int prime[maxprime];
inline void sieve()
{
	for (int i = 0; i < maxprime; i++)
		prime[i] = i;
	for (int i = 2; i < maxprime; i += 2)
		prime[i] = 2;
	for (int i = 3; i <= up; i += 2)
	{
		if (prime[i] != i)
			continue;
		int lim = i * i;
		int add = 2 * i;
		for (int j = lim; j < maxprime; j += add)
		{
			if (prime[j] == j)
				prime[j] = i;
		}
	}
}

vector<int> adjlist[maxprime];
int main()
{
	fastread;
	sieve();
	int n;
	cin >> n;
	for (int i = 0; i < n; i++) {
		int x;
		cin >> x;
		while (x > 1) {
			int p = prime[x], f = 0;
			while (x % p == 0) {
				x /= p;
				f++;
			}
			adjlist[p].pb(f);
		}
	}
	ll ans = 1;
	for (int i = 2; i < maxprime; i++) {
		if (adjlist[i].size() <= (n - 2))
			continue;
		sort(adjlist[i].begin(), adjlist[i].end());
		if (adjlist[i].size() == n)
			adjlist[i][0] = adjlist[i][1];
		while (adjlist[i][0]--) {
			ans *= i;
		}
	}
	cout << ans;
	return 0;
}