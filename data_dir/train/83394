#include "bits/stdc++.h"
using namespace std;

int apply(int x, vector<int>& v, int k) {
	vector<int> ret;
	for(int i = 0; i < (int) v.size(); ++i) {
		int num = v[i];
		int cnt = 0;
		while(num > x) {
			num /= 2;
			cnt++;
		}
		if(num != x) {
			ret.push_back((int) 1e9);
		} else {
			ret.push_back(cnt);
		}
	}
	sort(ret.begin(), ret.end());
	int ans = 0;
	for(int i = 0; i < k; ++i) {
		if(ret[i] == (int) 1e9) {
			return (int) 1e9;
		}
		ans += ret[i];
	}
	return ans;
}

const int lim = 2e5 + 5;

void solve() {
	ios_base :: sync_with_stdio(false);
	cin.tie(NULL);
	int n , k; 
	cin >> n >> k;
	vector<int> v(n);
	for(int i = 0; i < n; ++i) cin >> v[i];
	vector<vector<int>> cst(lim, vector<int>());
	for(int i = 0; i < (int) v.size(); ++i) {
		int num = v[i];
		int cnt = 0;
		while(num > 0) {
			cst[num].push_back(cnt);
			num /= 2;
			cnt++;
		}
		cst[0].push_back(cnt);
	}
	int ans = 1e9;
	for(int i = 0; i < lim; ++i) {
		if((int) cst[i].size() >= k) {
			sort(cst[i].begin(), cst[i].end());
			int sm = 0;
			for(int j = 0; j < k; ++j) {
				sm += cst[i][j];
			}
			ans = min(ans, sm);
		}
	}
	cout << ans << endl;
}

int main() {
	solve();
	return 0;  
}