#pragma comment(linker, "/stack:256000000")

#include <cstdio>
#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <cstring>
#include <string>
#include <cmath>
#include <ctime>
#include <cassert>
#include <queue>

using namespace std;

#define REP(i, n) for (int (i) = 0; (i) < (n); (i)++)
#define sz(v) (int)(v).size()
#define all(v) (v).begin(), (v).end()

const int N = 5010;

int h[N], dp[N][N];

int main() {
#ifdef LOCAL
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	long long start = clock();
#endif
	int n;
	scanf("%d", &n);
	REP(i, n) scanf("%d", &h[i]);
	REP(i, n) REP(j, n) dp[i][j] = 1000000000;
	dp[0][0] = 0;
	for (int R = 0; R < n - 1; R++) {
		int x = R, back = 0, forw = 0;
		for (int L = R; L >= 0; L--) {
			dp[L][R + 1] = min(dp[L][R + 1], dp[L][R] + 1);
			back += h[L];
			while (x < n && back > forw) {
				++x;
				if (x < n) forw += h[x];
				else break;
				if (back <= forw) break;
			}
			if (x < n) dp[R + 1][x] = min(dp[R + 1][x], dp[L][R] + x - (R + 1));
		}
	}
	int res = 1000000000;
	REP(i, n) res = min(res, dp[i][n - 1]);
	printf("%d\n", res);
#ifdef LOCAL
	fprintf(stderr, "\n\nTime: %.3lf\n\n", (clock() - start) / 1000.);
#endif
	return 0;
}