#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define x first
#define y second
typedef pair<int, int> pii;
typedef long long ll;
const int N = 100001;
const int oo = 1e9;
const int LOGN = 20;
const int MOD = 1000000007;
const double PI = acos(-1);

int n , m,dp[2][41],ans = 0,cnt=0;

map<string,int> id;
pii q[N];
char tmp[100];
bitset<N> bt[50];
bitset<41> g[41],all;

void dfs(int idx,int cur,bitset<41> hv){
  if(idx == m){
    ans = max(ans,cur);
    return;
  }
  if((m-idx)+cur < ans)return;
/*  for(int i = 0 ; i < m ; ++i)
    cout << hv[i];
  cout << endl;
  for(int i = 0 ; i < m ; ++i)
    cout << g[idx][i];
  cout << endl;
  exit(0);*/
  if(hv[idx]){
    dfs(idx+1,cur+1,hv&g[idx]);
  }
  dfs(idx+1,cur,hv);
}
int main(){
  cin >> n >> m;
  for (int d,i = 0; i < n; ++i){
    scanf("%d",&q[i].first);
    if(q[i].first == 2){
      scanf("%s",tmp);
      string f = tmp;
      if(id.find(f) == id.end())id[f] = cnt++;
      q[i].second = id[f];
    }
  }
  for (int i = 0; i < m; ++i){
    int last = n;
    for(int idx = n-1 ; idx >= 0 ; --idx){
      if(q[idx].first == 1){
        if(last != n)bt[i][idx] = 1;
        last = n;
      }else{
        if(q[idx].second == i)last = idx;
      }
    }
  }
  for (int i = 0; i < m; ++i){
    for(int j = 0 ; j < m ; ++j){
      if(i==j)continue;
      if((bt[i]&bt[j]).count()==0)g[i][j] = 1;
    }
  }
  for(int i = 0 ; i < m ; ++i)all[i] = 1;
  dfs(0,0,all);
  cout << ans << endl;
  return 0;
}