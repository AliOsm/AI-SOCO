///In the name of GOD
#include<bits/stdc++.h>
using namespace std;

typedef double                      ld;
typedef long long                   ll;
typedef pair<int,int>               pii;
typedef pair<ll,ll>                 pll;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define F                           first
#define S                           second
#define sep                         ' '
#define endl                        '\n'
#define file_io                     freopen("input.txt", "r+", stdin);freopen("output.txt", "w+", stdout);
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define kill(x)                     return cout << x << endl , 0;
#define pb                          push_back

const ll MXN = 1e3 + 10;
const ll MX5 = 2e5 + 10;
const ll MX6 = 1e6 + 10;
const ll LOG = 20;
const ll INF = 8e18;
const ld eps = 1e-9;
const ll MOD = 1e9 + 7; //998244353;

ll power(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * power(a * a % md, b / 2, md) % md : power(a * a % md, b / 2, md) % md));
}
ll bmm(ll a,ll b){
    return (a%b==0 ? b : bmm(b,a%b));
}
string base2(ll n){
    string a="";while(n>=2){a+=(char)(n%2+'0');n/=2;}a+=(char)(n+'0');reverse(all(a));return a;
}
ll n, maxi, ans, root;
ll C[5][MX5], d[MX5], dis[MX5], Ans[MX5];
vector<ll> G[MX5];
bool vis[MX5];
void DFS(ll u){
    vis[u] = 1;
    for(auto v : G[u]){
        if(!vis[v]){
            dis[v] = dis[u] + 1;
            DFS(v);
        }
    }
}
ll Calc(ll a, ll b, ll c){
    ll nw = 0;
    for(ll u = 1; u <= n; u ++){
        ll rg = (dis[u] % 3 == 0 ? a : (dis[u] % 3 == 1 ? b : c));
        nw += C[rg][u];
    }
    return nw;
}
void Make(ll a, ll b, ll c){
    for(ll u = 1; u <= n; u ++){
        ll rg = (dis[u] % 3 == 0 ? a : (dis[u] % 3 == 1 ? b : c));
        Ans[u] = rg + 1;
    }
}
int main(){
    fast_io
    //file_io
    cin >> n;
    for(int i = 1; i <= n; i ++) cin >> C[0][i];
    for(int i = 1; i <= n; i ++) cin >> C[1][i];
    for(int i = 1; i <= n; i ++) cin >> C[2][i];
    for(int i = 1; i <= n - 1; i ++){
        ll u, v;
        cin >> u >> v;
        d[u] ++, d[v] ++;
        G[u].pb(v), G[v].pb(u), maxi = max({maxi, d[u], d[v]});
    }
    for(int i = 1; i <= n; i ++){
        if(d[i] == 1) root = i;
    }
    if(maxi >= 3) kill(-1);
    DFS(root);
    ans = min({Calc(0, 1, 2), Calc(0, 2, 1), Calc(1, 0, 2), Calc(1, 2, 0), Calc(2, 1, 0), Calc(2, 0, 1)});
    if(Calc(0, 1, 2) == ans)        Make(0, 1, 2);
    else if(Calc(0, 2, 1) == ans)   Make(0, 2, 1);
    else if(Calc(1, 0, 2) == ans)   Make(1, 0, 2);
    else if(Calc(1, 2, 0) == ans)   Make(1, 2, 0);
    else if(Calc(2, 1, 0) == ans)   Make(2, 1, 0);
    else if(Calc(2, 0, 1) == ans)   Make(2, 0, 1);
    cout << ans << endl;
    for(int i = 1; i <= n; i ++) cout << Ans[i] << sep;
    return 0;
}
/*
        Pain
        You made me a, you made me a believer, believer
        Pain
        You break me down, you build me up, believer, believer
*/
//! N.N