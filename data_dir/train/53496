#include<iostream>
	#include<math.h>
	#include <bits/stdc++.h>
	#include<string.h>
	#include<algorithm>
	
	using namespace std;
	
	#define ll long long
	#define D double
	#define ff first
	#define ss second
	#define FOR(a,n) for(i=0;i<n;i++){	cin>>a[i];}
	#define pb push_back
	#define mp make_pair
	#define INF 1000000000
	#define mod 1000000007 
	
	

	 bool isPrime(ll n)
		{
		    
		    if (n <= 1)  return false;
		    if (n <= 3)  return true;
		    
		    if (n%2 == 0 || n%3 == 0) 
		    	return false;
		 
		    for (ll i=5; i*i<=n; i=i+6)
		    {
		        if (n%i == 0 || n%(i+2) == 0)
		           return false;
		    }
		    
		    return true;
		}
	
	void swap(char a,char b)
	{
		char t;
		t=a;
		a=b;
		b=t;
	}
	
	ll fact(ll n)
	{
		if(n<=1)
		return 1;
		else
		return n*fact(n-1);
	}
	
	ll comb(ll n, ll k) 
{ 
    ll res = 1; 
  
     
    if ( k > n - k ) 
        k = n - k; 
  
    
    for (ll i = 0; i < k; ++i) 
    { 
        res *= (n - i); 
        res /= (i + 1); 
    } 
  
    return res; 
} 
	
	ll GCD(ll a,ll b)
	{
		if(b==1)
		return 1;
		else
		return GCD(b,a%b);
	}
	
	ll digSum(ll n)
	{
		ll c=0;
		while(n>0)
		{
			ll x=n%10;
			c=c+x;
			n=n/10;
		}
		return c;
	}
vector<vector<ll> > v(100010);	
vector<bool> th(100010),ch(100010);
	bool DFS(ll n)
	{	
		stack<ll> s;
		ll ans=0;
		ch[n]=true;
		s.push(n);
		
		while(s.size()>0)
		{	
			ll x=s.top();
			s.pop();
		
			for(ll i=0;i<v[x].size();i++)
			{
				if(ch[v[x][i]]==false)
				{	
					
					s.push(v[x][i]);
					ch[v[x][i]]=true;
				}
			}
		
		}
		return true;
	
	}
	
		queue<int> q;
	void BFS(ll n)
	{
		ll i,le[n+1];
		q.push(n);
		le[n]=0;
		ch[n]=true;
		
		while(q.size()>0)
		{
			ll x=q.front();
			q.pop();
			
			for(i=0;i<v[x].size();i++)
			{
				if(ch[v[x][i]]==false)
				{
					q.push(v[x][i]);
					ch[v[x][i]]=true;
					le[v[x][i]]=le[x]+1;
					
				}
			}
		}
		
		
	}
	
ll count(ll n)
	{
		ll c=0,k=n;
		
		while(k>0)
		{
			ll x=k%10;
			c=c+x;
			k=k/10;
			
		}
		return c;
		}	

D area(ll x1,ll y1,ll x2,ll y2,ll x3,ll y3)
{
	return abs((D)((x1*(y2-y3)+x2*(y3-y1)+x3*(y1-y2)))/(D)(2));
                
}

bool isBin(ll n)
{
	while(n>0)
	{
		ll x=n%10;
		if(x>1)
		return false;
		n/=10;
	}
	return true;
}
ll ans[1001500]={0};



ll near(ll n)
{
	ll i=n-1,j=n+1,c=0,d=0;
	
	while(1)
	{
		if(isPrime(i)==true)
		return i/2;
		if(isPrime(j)==true)
		return j/2;
		i--;j++;
	}
	
}
ll modRecursion(ll a,ll b, ll c)
{
    if(b == 0)
    return 1;
    if(b == 1)
    return a%c;
    else if( b%2 == 0)                                           //if b is even
    {
        return modRecursion((a *a)%c,b/2,c);
    }
    else                                                                    // if b is odd.
    {
        return (a*modRecursion((a*a%c),b/2,c))%c;
    }
}

int d, x, y;
void extendedEuclid(int A, int B) {
    if(B == 0) {
        d = A;
        x = 1;
        y = 0;
    }
    else {
        extendedEuclid(B, A%B);
        int temp = x;
        x = y;
        y = temp - (A/B)*y;
    }
}

int modInverse(int A, int M)
{
    extendedEuclid(A,M);
    return (x%M+M)%M;    //x may be negative
}

	int main()
	{
		
		ll n,i;
		cin>>n;
		map<ll,ll> fr,f;
		vector<pair<ll,pair<ll,ll> > > a(n);
		
		for(i=0;i<n;i++)
		{
			cin>>a[i].ff>>a[i].ss.ff;
			a[i].ss.ss=i;
		
		}
		sort(a.begin(),a.end());
		
		for(i=n-1;i>=0;i--)
		{
			for(ll j=a[i].ff-a[i].ss.ff;j<=a[i].ff+a[i].ss.ff;j++)
			{
				f[j]++;fr[j]=i;
				
			}
		}
		ll m,x,y;
		cin>>m;
		ll ans[n]={0};
	
		for(i=0;i<m;i++)
		{
			cin>>x>>y;
			
				if(f[x]>0)
				{	
					ll c,r;
					//cout<<f[x]<<" ";
					c=a[fr[x]].ff;
					r=a[fr[x]].ss.ff;
					double d=sqrt((x-c)*(x-c)+y*y);
					//cout<<x<<" "<<c<<" "<<y<<" "<<d<<"v "<<endl;
					if(d<=r && ans[a[fr[x]].ss.ss]==0)
						{
							ans[a[fr[x]].ss.ss]=i+1;
							//cout<<"AS"<<a[fr[x]].ss.ss<<" "<<i+1;
						}
					
					if(f[x]>1)
					{		
						if(fr[x]>=1)
						{
							//cout<<fr[x];
						c=a[fr[x]-1].ff;
						r=a[fr[x]-1].ss.ff;
						ll d=sqrt((x-c)*(x-c)+y*y);
					//	cout<<"XZ"<<x<<c<<d<<" ";
							if(d<=r && ans[a[fr[x]-1].ss.ss]==0)
						ans[a[fr[x]-1].ss.ss]=i+1;
						}
						
							if(fr[x]<n-1)
							{
								c=a[fr[x]+1].ff;
						r=a[fr[x]+1].ss.ff;
						 d=sqrt((x-c)*(x-c)+y*y);
					//	 cout<<a[2].ff<<c<<d<<" "<<r;
							if(d<=r && ans[a[fr[x]+1].ss.ss]==0)
							ans[a[fr[x]+1].ss.ss]=i+1;
							}
					}
				}
		}
		ll c=0;
		for(i=0;i<n;i++)
		{
			if(ans[i]==0)
			ans[i]=-1;
			else
			c++;
		}
		cout<<c<<endl;
		for(i=0;i<n;i++)
		cout<<ans[i]<<" ";
	}