#include <bits/stdc++.h>
using namespace std;
typedef long long ll;


int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n, m, d;
    cin >> n >> m >> d;
    vector<pair<int, int> > arr(n);
    vector<int> answer(n);
    for(int i = 0; i < n; ++i) {
        cin >> arr[i].first;
        arr[i].second = i;
    }
    sort(arr.begin(), arr.end());
    multiset<pair<int, int> > lastBreak;
    int nextFree = 1;
    for(int i = 0; i < n; ++i) {
        if(lastBreak.size() == 0) {
            lastBreak.insert({arr[i].first, nextFree});
            answer[arr[i].second] = nextFree;
            nextFree++;
            continue;
        }
        int prev = arr[i].first - d;
        auto it = lastBreak.lower_bound({prev, (int)-1e9});
        if(it != lastBreak.begin()) {
            it--;
            int day = it->second;
            answer[arr[i].second] = day;
            lastBreak.erase(it);
            lastBreak.insert({arr[i].first, day});
        } else {
            lastBreak.insert({arr[i].first, nextFree});
            answer[arr[i].second] = nextFree;
            nextFree++;
        }
    }
    cout << nextFree-1 << '\n';
    for(int i = 0; i < n; ++i) {
        cout << answer[i] << ' ';
    }
    cout << '\n';
    /*
    int start = 1, end = n+2, mid;
    while(start+1 < end) {
        mid = (start+end)/2;
        if(possible(mid)) {
            start = mid;
        } else end = mid;
    }
    cout << start << '\n';*/
    return 0;
}









































