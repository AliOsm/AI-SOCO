#include <iostream>

#include <queue>
#include <vector>

using namespace std;

typedef vector<int> VI;
typedef vector<VI> VVI;

int N, K;
queue<int> A[100004];

int main(int argc, char* argv[]) {
   ios_base::sync_with_stdio(false); 
   cin.tie(NULL);

   cin >> N >> K;
   if (K == 1) {
      cout << "0\n";
      return 0;
   }

   int one_pos = -1;
   for (int i = 0; i < K; ++i) {
      int m;
      cin >> m;
      for (int j = 0; j < m; ++j) {
         int a;
         cin >> a;
         if (a == 1)
            one_pos = i;
         A[i].push(a);
      }
   }

   queue<int>& Q = A[one_pos];
   for (int n = 1; !Q.empty(); ++n) {
      int cur = Q.front();
      if (cur != n) break;
      Q.pop();
   }

   long long res = 1;
   for (int i = 0; i < K; ++i) {
      if (!A[i].empty()) {
         int qs = A[i].size();
      // cerr << "* " << qs << " : " << 2*qs - 1 << endl;
         res += 2*qs - 1;
      }
      else
         res -= 1;
   }
   cout << res << endl;

   return 0;
}
