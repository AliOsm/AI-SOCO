#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define inf 0x3f3f3f3f
#define all(v) (v).begin() , (v).end()

using namespace std;

typedef vector<int> vi;
typedef long long ll;

char board[8][8];
bool isValid(int r ,int c){
    if(r < 0 || r > 7 || c < 0 || c > 7)
        return false;
    if(board[r][c] == 'M' || board[r][c] == 'S')
        return false;
    return true;
}
int main(){
    bool crushed[8][8] = {0};
    for(int i = 0 ;i < 8 ;i++){
        for(int j = 0 ;j < 8 ;j++){
            cin>>board[i][j];
        }
    }
    for(int i = 0 ;true ;i++){
        if(i % 2 == 0){
            bool found = false;
            vector<pair<int,int> > info;
            for(int i = 0 ;i < 8 ;i++){
                for(int j = 0 ;j < 8 ;j++){
                    int r = i , c = j;
                    if(board[i][j] == 'M'){
                        found = true;
                        if(isValid(r+1 , c))
                            info.pb(mp(r+1 , c));
                        if(isValid(r-1 , c))
                            info.pb(mp(r-1 , c));
                        if(isValid(r , c+1))
                            info.pb(mp(r , c+1));
                        if(isValid(r , c-1))
                            info.pb(mp(r , c-1));
                        if(isValid(r+1 , c+1))
                            info.pb(mp(r+1 , c+1));
                        if(isValid(r+1 , c-1))
                            info.pb(mp(r+1 , c-1));
                        if(isValid(r-1 , c+1))
                            info.pb(mp(r-1 , c+1));
                        if(isValid(r-1 , c-1))
                            info.pb(mp(r-1 , c-1));
                    }
                }
            }
            for(int i = 0 ;i < info.size();i++){
                board[info[i].first][info[i].second] = 'M';
            }
            if(!found){
                puts("LOSE");
                return 0;
            }else if(board[0][7] == 'M'){
                puts("WIN");
                return 0;
            }
        }else{
            vector<pair<int,int> > info;
            for(int i = 0 ;i < 8 ;i++){
                for(int j = 0 ;j < 8 ;j++){
                    if(board[i][j] == 'S'){
                        board[i][j] = '.';
                        if(i != 7)
                            info.pb(mp(i+1 , j));
                    }
                }
            }
            for(int i = 0 ;i < info.size() ;i++){
                board[info[i].first][info[i].second] = 'S';
            }
        }
        cout<<endl;
    }
}
