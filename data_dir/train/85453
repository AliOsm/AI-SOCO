/*
Nahid Hossain
Jahangirnagar University
Roll:54
*/
#include<bits/stdc++.h>
#define ll          long long int
#define db          double
#define pf          printf
#define sf          scanf
#define ff          first
#define ss          second
#define clr         clear()
#define sz          size()
#define pb          push_back
#define mk          make_pair
#define pi          acos(-1)
#define inf         100000000000000000
#define mod         1000000007
#define ull         unsigned long long int
#define f(i,k,n)    for(ll i=k;i<n;i++)
#define fr(i,n,k)   for(i=n;i>=k;i--)
#define ent(a)      scanf("%lld",&a)
#define ent2(a,b)   scanf("%lld%lld",&a,&b)
#define ent3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define mem(a)      memset(a,0,sizeof(a))
#define vec(v,s)    vector<ll>v[s]
#define arr(a,s)    ll a[s];
#define bitone(x)   __builtin_popcount(x)
//#define check(n,pos) (n&(1<<pos))
//#define set(n,pos)  (n|(1<<pos))
//knight and king//

//for(i=x;i>0;i=(i-1)&x)
int dr[]= {2, 2, -2, -2, 1, -1, 1, -1};
int dc[]= {1,-1,  1, -1, 2,  2,-2, -2};
int dr1[]= {0, 0, 1, 1, 1, -1, -1, -1};
int dc1[]= {-1, 1,-1, 0, 1, -1, 0,   1};
int dr2[]= {-1, 0, 0, 1};
int dc2[]= {-1,-1, -2, -1 };
////////////////////////////
using namespace std;
#define ma 1000005
ll n,m;
vector<ll>adj[ma],adj1[ma];
string t[ma];
bool valid(ll x,ll y)
{
    if(x>=0&&y>=0&&x<n&&y<m)
    {
        if(t[x][y]!='.')
            return true;
        return false;
    }
    return false;
}

ll hobe(ll x)
{
    ll i,j,k;
    queue<ll>q;
    for(i=0; i<n; i++)
    {
        for(j=0; j<m; j++)
        {
            if(adj[i][j]>=x&&t[i][j]!='.')
            {
                q.push(i);
                q.push(j);
                adj1[i][j]=1;
            }
            else
                adj1[i][j]=inf;
        }
    }

    while(q.sz>0)
    {
        ll ur=q.front();
        q.pop();
        ll uc=q.front();
        q.pop();
        for(i=0; i<8; i++)
        {
            ll vr=ur+dr1[i];
            ll vc=uc+dc1[i];
            if(vr<0||vr>=n||vc<0||vc>=m)
                continue;
            if(adj1[vr][vc]>adj1[ur][uc]+1)
            {
                adj1[vr][vc]=adj1[ur][uc]+1;
                q.push(vr);
                q.push(vc);
            }

        }
    }
    ll max1=0;
    for(i=0; i<n; i++)
    {
        for(j=0; j<m; j++)
        {
            if(t[i][j]!='.')

                max1=max(max1,adj1[i][j]);
        }
    }
    return max1;
}

ll checked(ll x,ll y)
{
    ll vr=x+dr1[0];
    ll vc=y+dc1[0];
    if(valid(vr,vc)==false)
        return 1;
    if(t[vr][vc]=='.')
        return 1;
    vr=x+dr1[1];
    vc=y+dc1[1];
    if(valid(vr,vc)==false)
        return 1;
    if(t[vr][vc]=='.')
        return 1;
    vr=x+dr1[2];
    vc=y+dc1[2];
    if(valid(vr,vc)==false)
        return 1;
    if(t[vr][vc]=='.')
        return 1;
    vr=x+dr1[3];
    vc=y+dc1[3];
    if(valid(vr,vc)==false)
        return 1;
    if(t[vr][vc]=='.')
        return 1;
    vr=x+dr1[4];
    vc=y+dc1[4];
    if(valid(vr,vc)==false)
        return 1;
    if(t[vr][vc]=='.')
        return 1;
    vr=x+dr1[5];
    vc=y+dc1[5];
    if(valid(vr,vc)==false)
        return 1;
    if(t[vr][vc]=='.')
        return 1;
    vr=x+dr1[6];
    vc=y+dc1[6];
    if(valid(vr,vc)==false)
        return 1;
    if(t[vr][vc]=='.')
        return 1;
    vr=x+dr1[7];
    vc=y+dc1[7];
    if(valid(vr,vc)==false)
        return 1;
    if(t[vr][vc]=='.')
        return 1;
}

int main()
{
    ll i,j,k;
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    while(cin>>n>>m)
    {
        for(i=0; i<n; i++)
        {
            cin>>t[i];
            for(j=0; j<m; j++)
            {
                adj1[i].pb(inf);
                adj[i].pb(inf);
            }
        }

        queue<ll>q;

        for(i=0; i<n; i++)
        {

            for(j=0; j<m; j++)
            {
                if(t[i][j]=='.')
                    continue;
                ll r=checked(i,j);
                if(r==1)
                {
                    q.push(i);
                    q.push(j);
                    adj[i][j]=1;
                }
            }
        }

        while(q.sz>0)
        {
            ll ur=q.front();
            q.pop();
            ll uc=q.front();
            q.pop();
            for(i=0; i<8; i++)
            {
                ll vr=ur+dr1[i];
                ll vc=uc+dc1[i];
                if(valid(vr,vc)==false)
                    continue;
                if(adj[vr][vc]>adj[ur][uc]+1)
                {
                    adj[vr][vc]=adj[ur][uc]+1;
                    q.push(vr);
                    q.push(vc);
                }

            }
        }
        ll lo=1,hi=min(n,m),mid,ans=1;
        ll max1=0;





        while(lo<=hi)
        {
            ll mid=(lo+hi)>>1;
            ll p=hobe(mid);
            if(p>mid)
                hi=mid-1;
            else if(p<mid)
                lo=mid+1;
            else
            {
                ans=mid;
                lo=mid+1;
            }
        }
        cout<<ans-1<<endl;
        for(i=0; i<n; i++)
        {
            for(j=0; j<m; j++)
            {
                if(adj[i][j]>=ans&&t[i][j]=='X')
                    cout<<"X";
                else
                    cout<<".";
            }
            cout<<endl;
        }





    }
    return 0;
}
