#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

string bin(int x) {
    string ans = "";

    while(x > 0) {
        ans += (x % 2) + '0';
        x /= 2;
    }

    reverse(ans.begin(), ans.end());
    return ans;
}

bool check(string s) {
    int c = 0;
    for(int i = 0; i < int(s.size()); i++) {
        if(s[i] == '1') c++;
    }
    string t = string(c, '1');
    t += string(s.size() - t.size(), '0');

    return s == t;
}

int main() {
    ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);

    int x;
    cin >> x;

    string s = "000000" + bin(x);
    reverse(s.begin(), s.end());


    int i = 1;
    vector<int> res;
    int cnt = 0;

    while(!check(s)) {
        if(i > 40) break;

        //cout << s << endl;
        if(i & 1) {
            int j = 0;
            while(s[j] == '0') s[j] = '1', j++;
            res.push_back(j);
            cnt++;
        }
        else {
            int j = 0;
            while(s[j] == '1') s[j] = '0', j++;
            s[j] = '1';
            cnt++;
        }

        i++;
    }
    //cout << s << endl;

    cout << cnt << endl;
    for(int i : res) cout << i << " ";
    cout << endl;
}

/**
 * xor = if equal 0, else 1
 * add 1 = while bit is equal to 1 change to 0, when equal to 0 change to 1 and stop
 * 2 ^ n - 1 = prefix of bits
 * 39 = 100111
 *    = 001111
 *    = 100000
 */