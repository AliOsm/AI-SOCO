#include<bits/stdc++.h>
#define N 200005
using namespace std;
int seg[4*N + 5], ara[N +5];
void build(int n, int s, int e)
{
    if(s==e)
    {
        seg[n]= ara[s];
        return;
    }
    int mid= (s+e)>>1;
    build(n*2, s, mid);
    build(n*2 +1, mid+1, e);
    seg[n]= min(seg[n*2], seg[n*2 +1]);
    return;
}
void update(int n, int s, int e, int indx, int val)
{
    if(s==indx && e==indx)
    {
        seg[n]= val;
        return;
    }
    seg[n*2]= max(seg[n*2], seg[n]);
    seg[n*2 +1]= max(seg[n*2 +1], seg[n]);
    int mid= (s+e)>>1;
    if(mid>=indx)
        update(n*2, s, mid, indx, val);
    else
        update(n*2 +1, mid+1, e, indx, val);
    seg[n]= min(seg[n*2],seg[n*2 +1]);
    return;
}
int query(int n, int s, int e, int indx)
{
    if(s==indx && e==indx)
        return seg[n];
    int mid= (s+e)>>1;
    if(mid>=indx)
        return max(seg[n], query(n*2, s, mid, indx));
    else
        return max(seg[n], query(n*2 +1, mid+1, e, indx));
}
int main()
{
    int n, q, t, x, y;
    scanf("%d", &n);
    for(int i=1; i<=n; i++)
        scanf("%d", &ara[i]);
    build(1, 1, n);
    scanf("%d", &q);
    while(q--)
    {
        scanf("%d", &t);
        if(t==1)
            scanf("%d %d", &x, &y), update(1, 1, n, x, y);
        else
            scanf("%d", &x), seg[1]= max(seg[1], x);
    }
    for(int i=1; i<=n; i++)
        printf("%d ", query(1, 1, n, i));
    printf("\n");

    return 0;
}

