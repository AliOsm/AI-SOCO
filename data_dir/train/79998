/* In The Name Of God */
#include <bits/stdc++.h>

# define xx first
# define yy second
# define pb push_back
# define pp pop_back
# define eps 1e-9

using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vint;
set<int> v[333];
queue<int> q,ans;
int par[333],tmp;
bool have[333][333];
void print(){
	while(!ans.empty()){
		cout<<ans.front()<<' ';
		ans.pop();
	}
	exit(0);
}
void init(int root){
	for(auto x: v[root])if(x != par[root]){
		par[x] = root;
		init(x);
		for(int i=0 ; i<333 ; i++)
			have[root][i] |= have[x][i];
	}
	if((int)v[root].size()==1 && *v[root].begin()==par[root])
		have[root][root] = true;
}
void dfs(int root){
	ans.push(root);
	if(q.empty()){
		if(root == 1)
			print();
		v[ par[root] ].erase(root);
		dfs(par[root]);
	}
	if(root == q.front()){
		q.pop();
		v[ par[root] ].erase(root);
		dfs(par[root]);
	}
	if(!have[root][q.front()]){
		v[ par[root] ].erase(root);
		dfs(par[root]);
	}
	for(auto x : v[root])if(x!=par[root] && have[x][q.front()])
		dfs(x);
	cout<<-1<<endl;
	exit(0);
}
int main(){
	ios_base::sync_with_stdio (0);
	int n;cin>>n;
	for(int i=1 ; i<n ; i++){
		int x,y;cin>>x>>y;
		v[x].insert(y);
		v[y].insert(x);
	}
	init(1);
	while(cin>>tmp){
		q.push(tmp);
	}
	dfs(1);
	return 0;
}

