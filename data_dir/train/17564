#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define pb push_back
#define popb pop_back
#define fo(i , a , b) for (int i = (a); i < (b); ++i)
#define forr(i , b) fo( i , 0 , b )
#define carr( n , array ) forr(i , n) cin >> array[i]
#define cmap( n , map ) forr (i , n) {ll x ; cin >> x ; map [x] ++ ; }
#define cpmap( n , map ) forr (i , n) {ll x , y ; cin >> x >> y ; map [x] = y ; }
#define F first
#define S second
#define IF ->first
#define IS ->second

const ll max9 = 10 + 1e9 ,  max6 = 10 + 1e6 , max12 = 10 + 1e12 , max15 = 10 + 1e15 ;
const ll min6 = -1 * max6 , min9 = -1 * max9 , min12 = -1 *max12 , min15 = -1 * max15 ;
const ll R = 7 + 1e9 , NN = 10 + 1e5 ;
using namespace std;

int main()
{
    int t ; scanf("%d" , &t) ; while (t --) {
        int n , m , ans = 0 ; scanf("%d" , &n) ;
        queue <int> monster ;
        forr (i , n) {int x ; scanf("%d" , &x) ; monster.push(x) ;}
        scanf("%d" , &m) ;
        int ab[n + 1] ; memset(ab , 0 , sizeof(ab)) ;
        fo (i , 1 , m + 1) {
            int p , s ; scanf("%d%d" , &p , &s) ;
            ab[s] = max(ab[s] , p) ;
        }
        int i = n , j = n ;
        while (i >= 1) {
            while (j >= 1 && ab[j] <= ab[i]) { ab[j] = ab[i] ; j -- ; }
            i = j ;
        }
        while (!monster.empty()) {
            int test = monster.size() , oneday = 1 , mx = monster.front() ;
            while (monster.front() <= ab[oneday] ) {
                if (oneday == n + 1 || mx > ab[oneday]) break ;
                oneday++ ; monster.pop() ;
                if (monster.empty()) break ;
                mx = max(mx , monster.front()) ;
             }
            ans ++ ;
            if (test == monster.size()) {ans = -1 ; break ;}
        }
        printf("%d\n" , ans) ;
    }
    return 0;
}
