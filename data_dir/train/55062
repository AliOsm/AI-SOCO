#include<bits/stdc++.h>
using namespace std;

#define x first
#define y second
#define pb push_back
#define mp make_pair

#define all(a) (a).begin(), (a).end()
#define sz(a) (int)(a).size()

#define int long long

int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    int n;
    cin >> n;
    vector<int> a(n);
    for (int i = 0; i < n; i++) cin >> a[i];
    vector<int> l(n);
    vector<pair<int, int>> st;
    int s = 0;
    for (int i = 0; i < n; i++) {
        int k = 1;
        while (!st.empty() && st.back().x > a[i]) {
            s -= st.back().x * st.back().y;
            k += st.back().y;
            st.pop_back();
        }
        s += k * a[i];
        st.emplace_back(a[i], k);
        l[i] = s;
    }
    vector<int> r(n);
    st.clear();
    st.shrink_to_fit();
    for (int i = n - 1; i > -1; i--) {
        int k = 1;
        while (!st.empty() && st.back().x > a[i]) {
            s -= st.back().x * st.back().y;
            k += st.back().y;
            st.pop_back();
        }
        s += k * a[i];
        st.emplace_back(a[i], k);
        r[i] = s;
    }
    int id = 0;
    for (int i = 0; i < n; i++) {
        if (l[i] + r[i] - a[i] > l[id] + r[id] - a[id]) id = i;
    }
    st.clear();
    st.shrink_to_fit();
    for (int i = 0; i <= id; i++) {
        int k = 1;
        while (!st.empty() && st.back().x > a[i]) {
            k += st.back().y;
            st.pop_back();
        }
        st.emplace_back(a[i], k);
    }
    st.back().y--;
    for (auto x : st) {
        for (int i = 0; i < x.y; i++) cout << x.x << " ";
    }
    st.clear();
    st.shrink_to_fit();
    for (int i = n - 1; i >= id; i--) {
        int k = 1;
        while (!st.empty() && st.back().x > a[i]) {
            k += st.back().y;
            st.pop_back();
        }
        st.emplace_back(a[i], k);
    }
    reverse(all(st));
    for (auto x : st) {
        for (int i = 0; i < x.y; i++) cout << x.x << " ";
    }
    return 0;
}
