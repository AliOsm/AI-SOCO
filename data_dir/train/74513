

#include<bits/stdc++.h>
using namespace std;
#define LL                  long long
#define ull                 unsigned long long
#define scl(n)              scanf("%lld", &n)
#define scf(n)              scanf("%lf", &n)
#define sci(n)              scanf("%d", &n)
#define scii(n,m)           scanf("%d %d",&n,&m)
#define sciii(n,m,p)        scanf("%d %d %d",&n,&m,&p)
#define scs(n)              scanf("%s", n)
#define pfi(n)              printf("%d\n",n)
#define pfl(n)              printf("%I64d ",n)
#define pfs(s)              printf("%s\n",s)
#define bug1		        printf("bug1")
#define	bug2			    printf("bug2")
#define	bug3		        printf("bug3")

#define FASTREAD            ios_base::sync_with_stdio(0);cin.tie(nullptr);
#define MOD                 1000000007
#define MODP                99999999999973LL
#define pb                  push_back
#define mp                  make_pair
#define pp                  pair<LL,LL>
#define memo(a,b)           memset(a,b,sizeof(a))
#define INF                 1e9
#define EPS                 1e-8
#define Pi                  acos(-1.0)

LL bigmod(LL b, LL p, LL md){if(p==0) return 1;if(p%2==1){ return ((b%md)*bigmod(b,p-1,md))%md;} else {LL y=bigmod(b,p/2,md);return (y*y)%md;}}


struct info
{
    int id;
    double val;
    bool ok;
};

double res[100005];

int main()
{
    int n;
    cin>>n;

    info arr[n];

    double sum=0;
    for(int i=0;i<n;i++)
    {
        double v,vv;
        cin>>v;

        vv=floor(v);
        if(abs(v-vv)==0)
        {
            arr[i].val=vv;
            arr[i].ok=true;
        }
        else
        {
            arr[i].ok=false;
            arr[i].val=vv;
        }
        sum+=vv;
        arr[i].id=i;

    }

    for(int i=0;i<n;i++)
    {
        if(arr[i].ok)
        {
            res[ arr[i].id ]=arr[i].val;
        }
        else
        {
            if(sum!=0)
            {
                if(sum>0)
                {
                    arr[i].val-=1;
                    sum-=1;
                }
                else
                {
                    arr[i].val+=1;
                    sum+=1;

                }

            }
            res[arr[i].id]=arr[i].val;


        }
    }

    for(int i=0;i<n;i++)
    {
       cout<<(LL)res[i]<<endl;
    }

   return 0;
}

/* LL dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* LL dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* LL dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* LL dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction
