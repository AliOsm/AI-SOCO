#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const int N = 1e6 + 100;

long long dis[802][802];

int main() {

    // freopen("in.txt", "r", stdin);
    ios::sync_with_stdio(0);
    cin.tie(0);
    int n, m, k;
    cin >> n >> m >> k;
    vector<tuple<int,int,int>> ej;
    for(int i = 0; i < m; i++) {
        int x, y, w;
        cin >> x >> y >> w;
        ej.push_back(make_tuple(w, x, y));
    }
    sort(ej.begin(), ej.end());
    map<int,int> M;
    int id = 0;
    for(int i = 0 ; i < min(m, 400); i++) {
        int x = get<1>(ej[i]), y = get<2>(ej[i]), w = get<0>(ej[i]);
        if(M[x] == 0) {
            M[x] = ++id;
        }
        if(M[y] == 0) {
            M[y] = ++id;
        }
        dis[M[x]][M[y]] = w;
        dis[M[y]][M[x]] = w;
    }

    for(int i = 1; i <= id; i++) {
        for(int j = 1; j <= id; j++) {
            if(dis[i][j] == 0 && i != j) {
                dis[i][j] = 1e18;
            }
        }
    }

    for(int k = 1; k <= id; k++) {
        for(int i = 1; i <= id; i++) {
            for(int j = 1; j <= id; j++) {
                dis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);
            }
        }
    }
    vector<long long> important_dis;
    for(int i = 1; i <= id; i++) {
        for(int j = i + 1; j <= id; j++) {
            important_dis.push_back(dis[i][j]);
        }
    }
    sort(important_dis.begin(), important_dis.end());
    cout << important_dis[k-1] << endl;
    return 0;
}

