#include <bits/stdc++.h>
using namespace std;
#define SZ(x) (int)x.size()
typedef long long ll;
const int SZ=2e5+5;
#define X first
#define Y second

int n,m;
int kmp[SZ];
pair<ll,char> txt[SZ], pat[SZ];

void input(int &z,pair<ll,char> p[])
{
    int sz=0;
    for(int i=0;i<z;i++)
    {
        ll k; char c;
        scanf("%I64d-%c",&k,&c);

        if(i>0 && p[sz-1].Y==c)
            p[sz-1].X+=k;
        else
            p[sz++]={k,c};
    }
    z=sz;
}

ll KMP()
{
    int k=0;
    for(int i=1;i<m;i++)
    {
        while(k>0 && pat[i]!=pat[k])
            k=kmp[k-1];
        if(pat[i]==pat[k])
            k++;
        kmp[i]=k;
    }
   
    ll res=0; k=0;
    for(int i=0;i<n;i++)
    {
        while(k>0)
        {
        	if(pat[k]==txt[i]) 
        	    break;
        	if(k==m-1 && pat[k].Y==txt[i].Y && pat[k].X<=txt[i].X)
        	    break;
        	k=kmp[k-1];
        }
        
        if(k==0 || k==m-1)
        {
        	if(pat[k].Y==txt[i].Y && pat[k].X<=txt[i].X)
               k++;
        }
        else
        if(pat[k]==txt[i])
            k++;

        if(k==m)
        {
        	res++;
            k=kmp[k-1];

            while(k-1>0)
            {
                if(pat[k-1]==txt[i]) 
        	        break;
                k=kmp[k-1];
            }
        }
    }
    
    return res;
}

int main()
{
    scanf("%d%d",&n,&m);
    input(n,txt);
    input(m,pat);
    
    if(m==1)
    {
        ll res=0;
        for(int i=0;i<n;i++)
            if(txt[i].Y==pat[0].Y && txt[i].X>=pat[0].X)
                res+=txt[i].X-pat[0].X+1LL;
        cout<<res;
    }
    else
        cout<<KMP();
}