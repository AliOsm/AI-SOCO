#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
using namespace std;    
const int N = int(3e5), mod = int(1e9)  + 7; 

int n,s, next[N], val[N],x , p[N];

bool used[N];

int best, pos;

int main () {
	srand(time(0));
	cin >> n >> s >> x;
	cout << "? " << s << endl;
	cin >> val[s] >> next[s];
	if(val[s] >= x){
		cout << "! " << val[s];
		return 0;
	}
	best = val[s];
	pos = s;
	/*
	if(n <= 1999){
		best = mod;
		for(int v = 1; v <= n; v++){
			if(s != v){
				cout << "? "  << v << endl;
				cin >> val[v] >> next[v];
				if(val[v] >= x){
					best = min(best, val[v]); 
				}
			}
		}
		if(best == mod) best = -1;
		cout << "! " << best << endl;
		return 0;
	}
	*/
	int cnt = 0;
	for(int i = 1; i <= n ;i++){
		p[i] = i;
	}
	used[s] = 1;
	random_shuffle(p + 1, p + n + 1);
	for(int i = 1; i <= 999; i++){
		int v = 0;
		for(int j = 1; j <= n; j++){
			if(!used[p[j]]){
				v = p[j];
				break;
			}
		}
		if(v == 0) break;
		random_shuffle(p + 1, p + n + 1);
		cout << "? " << v << endl;
		cin >> val[v] >> next[v];
		used[v] = 1;
		if(val[v] < x){
			if(val[v] > best){
				best = val[v];
				pos = v;
			}
		}
		else{
			if(next[v] != -1){
				used[next[v]] = 1;
			}
		}
	}
	int v = pos;
	best = -1;
	for(int i = 1; i <= 999; i++){
		cout << "? " << v << endl;
		cin >> val[v] >> next[v];
		if(val[v] >= x){
			best = val[v];
			break;
		}
		v = next[v];
		if(v == -1) break;
	}
	cout << "! " << best;
return 0;
}