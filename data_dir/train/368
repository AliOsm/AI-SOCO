//#include "stdc++.h"
#include <bits/stdc++.h>
#include<iostream>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <ll, int> pli;
typedef pair <db, db> pdd;
typedef vector<int> vi;
#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
#define sz(x) (int)(x.size())
#define ff first
#define ss second
#define endl "\n"
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p;}
const ll MOD = 1000000007;
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
#define pi 3.141592653589793238462
#define int  long long
int32_t main()
{
    IOS;
    int n;
    cin>>n;
    int u[n];
    for(int i=0;i<n;i++)
    {
        cin>>u[i];
    }
    int ans=1;int f[100001]={0};int ne[100001]={0};int diff=0,x,z;
    for(int i=0;i<n;i++)
    {
        //st[u[i]]++;
        
        ne[f[u[i]]]-=1;
        f[u[i]]++;
        ne[f[u[i]]]++;
        if(f[u[i]]==1)
        diff++;
        if(diff==1)
        {
            ans=i+1;
        }
        else
        {
           if((i%diff)==0)
           {
               x=i/diff;
               z=ne[x];
               if(ne[x]==diff-1&&ne[x+1]==1)
                   ans=i+1;
           }
        else if(i%(diff-1)==0)
        {
            x=i/(diff-1);
            
            z=ne[x];
            if(x!=1)
            {
            if((ne[x]==(diff-1))&&ne[1]==1)
                ans=i+1;
            }
            else
              if(ne[1]==diff)
                  ans=i+1;
        }
        }
        
    }
    cout<<ans<<endl;
    return 0;
    
}
