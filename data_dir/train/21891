/**/
#include <bits/stdc++.h>
using namespace std;
/***********************************************/
/* Dear online judge:
 * I've read the problem, and tried to solve it.
 * Even if you don't accept my solution, you should respect my effort.
 * I hope my code compiles and gets accepted.
 *  ___  __     _______    _______      
 * |\  \|\  \  |\  ___ \  |\  ___ \     
 * \ \  \/  /|_\ \   __/| \ \   __/|    
 *  \ \   ___  \\ \  \_|/__\ \  \_|/__  
 *   \ \  \\ \  \\ \  \_|\ \\ \  \_|\ \ 
 *    \ \__\\ \__\\ \_______\\ \_______\
 *     \|__| \|__| \|_______| \|_______|
 */
const long long mod = 1000000007;

long long mat[701][701],res4[701][701];

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);

	int N,M,u,v;
	cin>>N>>M;
	for(int i = 0;i < M;i++) {
		cin>>u>>v;
		u--,v--;
		mat[u][v] = mat[v][u] = 1;
	}
	long long out = 0;
	for(int i = 0;i < N;i++) {
		for(int j = 0;j < N;j++) {
			if(i == j)
				continue;
			int sum = 0;
			for(int k = 0;k < N;k++) {
				if(k == j || k == i)
					continue;
				sum += mat[i][k] && mat[j][k];
			}
			for(int k = 0;k < N;k++) {
				if(k == j || k == i)
					continue;
				if(mat[j][k]) {
					res4[i][k] += sum - mat[i][k];
					if(mat[i][j])
						out -= sum - mat[i][k];
				}
			}
		}
	}
	for(int i = 0;i < N;i++) {
		for(int j = i+1;j < N;j++) {
			for(int k = 0;k < N;k++) {
				if(k == j || k == i)
					continue;
				if(mat[i][k] && mat[j][k] && res4[i][j]) {
					out += res4[i][j];
				}
			}
		}
	}
	cout<<out/5<<'\n';
	return 0;
}
/**/

