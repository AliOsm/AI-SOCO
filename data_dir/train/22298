#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <vector>
#include <bitset>

const int kN = 100000 + 5 + 12;
int n, k, q;
std::bitset<1 << 12> bs[kN];
int t[kN], x[kN], y[kN];
int a[12][kN];
int tot;


int main()
{
    scanf("%d%d%d", &n, &k, &q);
    for (int i = 0; i < k; ++ i) {
        for (int j = 0; j < n; ++ j)
            scanf("%d", &a[i][j]);
    }
    for (int i = 0; i < k; ++ i)
        for (int mask = 0; mask < 1 << k; ++ mask)
            bs[i][mask] = mask >> i & 1;
    tot = k;
    for (int i = 0; i < q; ++ i) {
        int t, x, y;
        scanf("%d%d%d", &t, &x, &y); -- x; -- y;
        if (t == 1) {
            bs[tot ++] = bs[x] | bs[y];
        } else if (t == 2) {
            bs[tot ++] = bs[x] & bs[y];
        } else {
            int result = 2e9;
            for (int at = 0; at < k; ++ at) {
                int mask = 0;
                for (int j = 0; j < k; ++ j)
                    mask |= (a[at][y] < a[j][y]) << j;
                if (bs[x][mask] == 0)
                    result = std::min(result, a[at][y]);
            }
            printf("%d\n", result);
        }
    }
}
