#include <bits/stdc++.h>
using namespace std;
map<long long,vector<pair<long long,long long>>> childrens;
map<long long,long long> maxi;
long long n,a,b,c,maximum=0;

long long dfs(long long curr , long long par){
    long long d = maxi[curr];
    maximum = max(maximum,d);
    for(pair<int,int> i : childrens[curr]){
        if(i.first != par){
            long long t = dfs(i.first,curr);
            maximum = max(maximum,t+d-i.second);
            d = max(d,maxi[curr]+t-i.second);
        }
    }
    return d;
}

int main(){
    cin >> n;
    for(int i = 1 ; i <= n ; i += 1){
        cin >> a;
        maxi[i] = a;
    }
    for(int i = 0 ; i < n-1 ; i += 1){
        cin >> a >> b >> c;
        childrens[a].push_back({b,c});
        childrens[b].push_back({a,c});
    }
    dfs(1,0);
    cout << maximum;
}