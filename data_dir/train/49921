#include<bits/stdc++.h>
#include<map>
using namespace std;
#define ll long long
#define mk(a,b) make_pair(a,b)
#define MAX 11000000010
ll n,k;
vector<ll>v;
bool check(ll p) {
	ll sum = 0;
	for (int i = 0; i < n; i++) {
		sum += max(0ll, p - v[i]);
	}
	if (sum <= k)return 1;
	return 0;

}
bool check2(ll p) {
	ll sum = 0;
	for (int i = 0; i < n; i++) {
		sum += max(0ll, v[i] - p);
	}
	if (sum <= k)
		return 1;
	return 0;
}

int main() {
	scanf("%lld %lld",&n,&k);
	v.resize(n);
	ll mn =1e9;
	for (int i = 0; i < n; i++) {
		scanf("%lld", &v[i]);
		mn = min(v[i], mn);
	}
	ll st = 1, en = 1e9;
	
	for (int i = 0; i<100; i++)
	{
		ll mid = (st + en)/2;
		if (mid == st)mid++;
		if (check(mid)) {
			st = mid;
		}
		else en = mid - 1;

	}
	if (st < mn)st = mn;
	int k1 = k;
	for (int i = 0; i < n&&k1; i++) {
		if (v[i] <= st) {
			k1 -= st - v[i];
			v[i] = st;
		}
	}
	int cnt = 0;
	while (k1>0) {
		if (cnt == n)break;
		if (v[cnt] <= st) {
			k1 -= (st+1) - v[cnt];
			v[cnt] = st+1;
		}
		cnt++;
	}
	bool ex = true;
	for (int i = 0; i < n; i++)
	{
		if (v[i] == st) {
			ex = false;
			break;
		}
	}
	if (ex) {
		v[0]--;
	}
	ll st2 = 0, en2 = 1e9;
	for(int i=0;i<100;i++)
	{
		ll mid = (st2 + en2) / 2;
		
		if (check2(mid)) {
			en2 = mid;
		}
		else st2 = mid +1;
	}
	k1 = k;
	for (int i = n-1; i  >=0&&k1; i--) {
		if (v[i] > st2) {
			if (k1 > v[i] - st2) {
				k1 -= v[i] - st2;
				v[i] = st2;
			}
			else v[i] -= k1, k1 = 0;
		}
	}
	cnt = n-1;
	while (k1>0) {
		if (cnt == -1)break;
		if (v[cnt] >= (st2-1)) {
			k1 -=   v[cnt]-(st2-1);
			v[cnt] = st2 - 1;
		}
		cnt--;
	}
	sort(v.begin(), v.end());
	cout << v[n - 1] - v[0];
	return 0;
}