//#include <iostream>
//#include <algorithm>
//#include <map>
//#include <climits>
//#include <bitset>
//#include <set>
//#include <vector>
//#include <queue>
//#include <deque>
//#include <stack>
//#include <string>
//#include <cstring>
//#include <string.h>
//#include <iomanip>
//#include <stdio.h>
//#include <sstream>
//#include <stdlib.h>
//#include <functional>
//#include <locale>
//#include <cmath>
//#include <math.h>
//using namespace std;
//#define ll  long long int
//#define ld long double 
//class IDNumberVerification
//{
//public:
//  string verify(string id, vector<string> regionCodes)
//  {
//      if (id.size() != 18 || (id[14]=='0' && id[15]=='0' && id[16]=='0') )
//          return "Invalid";
//      
//      int day, month, year,gender,sum;
//      map<int, int>DaysOfMonths;
//      DaysOfMonths[1] = DaysOfMonths[3] = DaysOfMonths[5] = DaysOfMonths[7] = DaysOfMonths[8] = DaysOfMonths[10] = DaysOfMonths[12] = 31;
//      DaysOfMonths[2] = 29;
//      DaysOfMonths[4] = DaysOfMonths[6] = DaysOfMonths[9]=DaysOfMonths[11] = 30;
//      string region("");
//      
//      //check sum
//      if (id.back() == 'x')
//          sum = 10;
//      else
//          sum = id.back() - '0';
//      for (ll i = 16, j = 2; i >= 0; i--, j *= 2)
//          sum += (id[i] - '0')*j,sum%=11;
//      if (sum % 11 != 1)
//          return "Invalid";
//      
//      //check region 
//      for (int i = 0; i < 6; i++)
//          region += id[i];
//      
//      for (int i = 0; i < regionCodes.size(); i++)
//          if (region == regionCodes[i])
//              break;
//          else if(i==regionCodes.size())
//              return "Invalid";
//
//      //check date of birth
//      day = (id[12] - '0') * 10 + (id[13] - '0');
//      month= (id[10] - '0') * 10 + (id[11] - '0');
//      year= (id[6] - '0') * 1000 + (id[7] - '0')*100 + (id[8] - '0') * 10 + (id[9] - '0');
//      
//      if (year > 2011 || year < 1900 || month < 1 || month>12 || DaysOfMonths[month] < day)
//          return "Invalid";
//      //check leap year
//      if (month == 2 && day == 29 && !(year % 4 == 0 || (year % 400 == 0)))
//          return "Invalid";
//      gender= ((id[14] - '0') * 100 + (id[15] - '0') * 10 + (id[16] - '0'))%2;
//      if (gender == 1)
//          return "Male";
//      else
//          return "Female";
//  }
//};

#include <iostream>
#include <algorithm>
#include <map>
#include <climits>
#include <bitset>
#include <set>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <cstring>
#include <string.h>
#include <iomanip>
#include <stdio.h>
#include <sstream>
#include <stdlib.h>
#include <functional>
#include <locale>
#include <cmath>
#include <math.h>
using namespace std;
#define ll  long long int
#define ld long double 
int n, m,k;
char arr[500][500];
bool visited[500][500];
void bt(int i,int j)
{
    if (i < 0 || i >= n || j < 0 || j >= m || k == 0 || arr[i][j] == '#' || visited[i][j])
        return;
    visited[i][j] = true;
    bt(i+1, j), bt(i, j+1), bt(i-1, j), bt(i, j-1);
    if(k)
    arr[i][j] = 'X',k--;
}
int main()
{
    bool first = true;
    pair<int, int>point;
    cin >> n >> m >> k;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
        {
            cin >> arr[i][j];
            if (arr[i][j] == '.' && first)
                !first, point = { i,j };
        }
    bt(point.first, point.second);

    for (int i = 0; i < n; i++, cout << endl)
        for (int j = 0; j < m; j++)
            cout << arr[i][j];
    return 0;
}
