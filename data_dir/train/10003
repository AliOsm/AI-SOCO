#include<bits/stdc++.h>
#include<iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>
#include <deque>
#include <map>
#include <stack>
#include<bitset>
#include<list>
#include<cassert>
#include<numeric>

using namespace std;

const int N = 2000 + 5;
long double dp[N][N];
int n, m;
int r[N];
int c[N];
int p, q;

long double solve(int i,int j)
{
    if (i < 0 || j < 0)
    {
        return 0.0;
    }
    else
    { 
    	if (i == 0 && j == 0)
    	{
        	return dp[i][j] = 0.0;
        }
    	else
    	{ 
    		if (dp[i][j] != -1.0)
    		{
        		return dp[i][j];
        	}
        }
    }
    dp[i][j] = n * n;
    long double x = solve(i-1,j);
    x = x * (i * (n - j));
    dp[i][j] += x;
    x = solve(i, j - 1);
    x = x * (j * (n - i));
    dp[i][j] += x;
    x = solve(i - 1, j - 1);
    x = x * i * j;
    dp[i][j] += x;
    dp[i][j] = (long double) dp[i][j] / (i * n + j * n - i * j);
    return dp[i][j];
}
int main()
{
    for(int i = 0; i < N; i++)
    {
        for(int j = 0; j < N; j++)
        {
            dp[i][j]= -1.0;
        }
    }
    cin >> n >> m;

    int u, v;
    for(int i = 0;i < m; i++)
    {
        cin >> u >> v;
        r[u]++;
        c[v]++;
    }
    p = 0;
    q = 0;
    for (int i = 1; i <= n; i++)
    { 
    	if (!r[i])
    	{
            p++;
        }
        if (!c[i])
        {
            q++;
        }
    }
    cout << fixed << setprecision(10);
    cout << solve(p,q) << endl;
}

