#include <bits/stdc++.h>

using namespace std;

#define SZ(x) ((int)(x).size())
#define PB(x) push_back(x)
#define MEMSET(x,v) memset(x,v,sizeof(x))
#define REP(i,n) for(int i=0;(i)<(n);++(i))
#define x first
#define y second
#define INF (0x3f3f3f3f)

typedef long long LL;
typedef pair<int, int> P2;
template<class A, class B> inline bool mina(A &x, B y) {return (x > y)?(x=y,1):0;}
template<class A, class B> inline bool maxa(A &x, B y) {return (x < y)?(x=y,1):0;}

const int MAXN = 2e5+5;
int N, Q;
int in[MAXN];
int QX[MAXN];
int last_seen[MAXN];
int ind[MAXN];

int main() {
    scanf("%d", &N);
    REP(i, N) scanf("%d", &in[i]);
    MEMSET(ind, -1);
    MEMSET(QX, -1);
    scanf("%d", &Q);
    REP(q, Q) {
        int c;
        scanf("%d", &c);
        if (c == 1) {
            int p, x;
            scanf("%d %d", &p, &x);
            last_seen[p - 1] = x;
            ind[p - 1] = q;
        } else {
            int x;
            scanf("%d", &x);
            QX[q] = x;
        }
    }
    for (int i = Q - 2; i >= 0; i--) {
        if (QX[i + 1] == -1) continue;
        else if (QX[i] == -1) QX[i] = QX[i + 1];
        else maxa(QX[i], QX[i + 1]);
    }
    REP(i, N) {
        int money = in[i];
        if (ind[i] != -1) {
            money = max(last_seen[i], QX[ind[i]]);
        } else {
            money = max(money, QX[0]);
        }
        printf("%d ", money);
    }
    return 0;
}
