#include "bits/stdc++.h"
#define FI first.first
#define SE first.second
#define TH second
#define fi first
#define se second
#define th second

using namespace std;

class DebugStream {}LOG;
template <typename T>DebugStream &operator<<(DebugStream &s, const T&) { return s; }
#ifdef DEBUG
#define LOG clog
#endif

typedef long long ll;
typedef pair<ll, ll> ii;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());

const int maxN = 1e5 + 9, maxV = 1e6 + 9, MOD = 1e9 + 7, SQ = 335, lg = 20, bs = 29;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	#ifdef DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif

	int n, p, k;
	cin >> n >> p >> k;
	vector<int> btc(1 << p);
	for(int i = 1; i < (1 << p); i++) btc[i] = btc[i - (i&-i)] + 1;

	vector<ll> stren(n);
	for(int i = 0; i < n; i++) cin >> stren[i];
	vector<int> inds(n);
	iota(inds.begin(), inds.end(), 0);
	sort(inds.begin(), inds.end(), [&](int a, int b) {
		return stren[a] > stren[b];
	});

	ll suma = 0;
	for(int i = 0; i < k; i++) suma += stren[inds[i]];
	vector<ll> prv(1 << p, LLONG_MIN / 3);
	prv[0] = suma;

	LOG << suma << '\n';
	vector<vector<ll>> info(n, vector<ll>(p));
	for(int i = 0; i < n; i++)
		for(int j = 0; j < p; j++) cin >> info[i][j];

	for(int i = 0; i < n; i++) {
		vector<ll> crr(1 << p, LLONG_MIN / 3);
		auto& inff = info[inds[i]];
		crr[0] = prv[0];
		for(int j = 1; j < (1 << p); j++) {
			crr[j] = max(crr[j], prv[j]);
			for(int r = 0; r < p; r++) {
				if(!(1 << r & j)) continue;
				int orig = 1 << r ^ j;
				ll prft = inff[r];
				if(i < k + btc[orig]) prft += stren[inds[k + btc[orig]]] - stren[inds[i]];
				crr[j] = max(crr[j], prv[orig] + prft);
			}
		}
		prv = crr;
	}

	cout << prv[(1 << p) - 1] << '\n';
}
