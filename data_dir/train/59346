#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#define endl "\n"
#define c0 ios_base :: sync_with_stdio(0); cin.tie (0);
#define s second
#define f first
#define ll long long
#define ull unsigned ll
using namespace std;

const int MaxN = 1e5 + 17;
const ll INF = 1e9 + 17;
//const int MOD = 1e9 + 7;

int n, l, r, z;
int Ans = INF;
char c[MaxN];
int u[MaxN], a[MaxN];
map < char, int > q;
inline bool check (int k)
{
    memset (u, 0, sizeof (u));
    int Sum = 0;
    for (int i = 1; i <= k; ++ i)
    {
        u[a[i]] ++;
        if (u[a[i]] == 1)
            ++ Sum;
        if (Sum == z)
            return true;
    }
    for (int i = k + 1; i <= n; ++ i)
    {
        u[a[i - k]] --;
        if (u[a[i - k]] == 0)
            -- Sum;
        u[a[i]] ++;
        if (u[a[i]] == 1)
            ++ Sum;
        if (Sum == z)
            return true;
    }
    return false;
}
int main ()
{
    c0
    // freopen (".in", "r", stdin);
    // freopen (".out", "w", stdout);
    cin >> n;
    for (int i = 1; i <= n; ++ i)
    {
        cin >> c[i];
        if (!q.count (c[i]))
        {
            ++ z;
            q[c[i]] = z;
        }
        a[i] = q[c[i]];
    }
    
    l = 1;
    r = n;
    Ans = n;
    while (l <= r)
    {
        int m = (l + r) >> 1;
        if (check (m))
            Ans = min (Ans, m), r = m - 1;
        else
            l = m + 1;
    }
    cout << Ans;
    return 0;
}
