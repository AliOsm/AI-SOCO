#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

#define ll long long int
#define pb push_back
#define mp make_pair
#define ld long double
#define sz(a) (ll)(a).size()
#define endl "\n"

typedef tree<pair<ll,ll> ,null_type,less<pair<ll,ll> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
//K-th smallest
//cout << k << "kth smallest: " << *A.find_by_order(k-1) << endl;
//NO OF ELEMENTS < X
//cout << "No of elements less than " << X << " are " << A.order_of_key(X) << endl;

const int MAXN = 1e5 + 5;

ll mod = 1e9 + 7;
ll g[MAXN];

ll ge(ll val)
{
	if(val <= 0) return 1;
	return g[val];
}

ll f(ll n, ll m)
{
	ll temp = (2 * ge(m - 1)) % mod;
	for(int i=0;i<n-1;i++) 
		temp = (temp + (2 * ge(n - i - 3)) % mod) % mod;
	return temp;
}

int main()
{
	std::ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

 	ll n, m;
 	cin >> n >> m;
 	g[1] = 2;
 	g[2] = 3;
 	for(int i=3;i<MAXN;i++) g[i] = (g[i - 1] + g[i - 2]) % mod;
    cout << f(n, m) << endl;
    return 0;
}