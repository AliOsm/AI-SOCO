#include <bits/stdc++.h>
#define int long long
using namespace std;

const int N = 200100 + 7, offset = 100000, mod = 1e9 + 7;


int dp[2][N], w[N], x[N];



int32_t main() {
    int a, b, k, t; cin >> a >> b >> k >> t;
    for(int i = 0; i < N; i++) dp[0][i] = i - offset >= a;
    for(int i = 1; i <= t; i++) {
        for(int j = 1; j < N; j++) {
            int l = max(1LL, j - k), r = min(N - 1, j + k);
            dp[i & 1][j] = (dp[(i - 1) & 1][r] - dp[(i - 1) & 1][l - 1] + mod) % mod;
            dp[i & 1][j] += dp[i & 1][j - 1];
            dp[i & 1][j] %= mod;
        }
    }

    for(int i = 1; i < N; i++) w[i] = (dp[t & 1][i] - dp[t & 1][i - 1] + mod) % mod;

    for(int i = 0; i < N; i++) dp[0][i] = i - offset >= b;
    for(int i = 1; i <= t; i++) {
        for(int j = 1; j < N; j++) {
            int l = max(1LL, j - k), r = min(N - 1, j + k);
            dp[i & 1][j] = (dp[(i - 1) & 1][r] - dp[(i - 1) & 1][l - 1] + mod) % mod;
            dp[i & 1][j] += dp[i & 1][j - 1];
            dp[i & 1][j] %= mod;
        }
    }

    for(int i = 1; i < N; i++) x[i] = (dp[t & 1][i] - dp[t & 1][i - 1] + mod + x[i - 1]) % mod;

    int ans = 0;
    for(int i = 1; i < N; i++) {
        ans += (w[i] * x[i - 1]) % mod;
        ans %= mod;
    }

    cout << ans << endl;

}
