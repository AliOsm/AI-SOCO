#include <bits/stdc++.h>

using namespace std;

#define fi first
#define se second
#define pf push_front
#define pb push_back
#define mk make_pair
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)x.size()
#define SWS ios_base::sync_with_stdio(false)
#define rfile freopen("input.txt", "r", stdin)
#define wfile freopen("output.txt", "w", stdout)
#define files rfile; wfile

typedef long long ll;
typedef long double ld;

const int Z = 333;
const int inf = (int)1e9 + 111;
const ll llinf = (ll)1e18 + 5;
const int MOD = (int)1e9 + 7;
const int dx[8] = {0, -1, -1, -1, 0, 1, 1, 1};
const int dy[8] = {-1, -1, 0, 1, 1, 1, 0, -1};

bool a[Z][Z], used[Z][Z][4][8][31];
int t[Z], n;

void dfs (int x, int y, int cnt, int cur, int h) {
    if (used[x][y][cnt][cur][h]) return;
    used[x][y][cnt][cur][h] = 1;
    a[x][y] = 1;
    if (cnt) {
        dfs(x + dx[cur], y + dy[cur], cnt - 1, cur, h);
    } else {
        if (h == n) return;
        int f1 = (cur + 1) % 8;
        int f2 = (cur - 1 + 8) % 8;
        dfs(x + dx[f1], y + dy[f1], t[h + 1], f1, h + 1);
        dfs(x + dx[f2], y + dy[f2], t[h + 1], f2, h + 1);
    }

}

int main () {
	srand(time(0));
	//files;
	SWS;
	cin >> n;
	for (int i = 1; i <= n; ++i) {
        cin >> t[i];
        t[i]--;
	}
	int x = Z / 2, y = Z / 2;
	dfs(x, y, t[1], 0, 1);
	int ans = 0;
	for (int i = 0; i < Z; ++i) {
        for (int j = 0; j < Z; ++j) {
            ans += a[i][j];
        }
	}
	cout << ans;
	return 0;
}
