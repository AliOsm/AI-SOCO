#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
template <class T> int size(const T &x) { return x.size(); }
#define rep(i,a,b) for(int i = (a); i < (b); i++)
#define iter(it,c) for(auto it = (c).begin(); it != (c).end();++it)
#define pb push_back
#define fs first
#define sc second
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

const int INF = ~(1<<31);
const double pi = acos(-1);
const double EPS = 1e-9;

int dx[8] = {-1,-1,1,1,-1,1,0,0};
int dy[8] = {-1,1,-1,1,0,0,-1,1};

bool bad[2000][2000];
bool vis[2000][2000];

int n;
void rec(ii at) {
	if(at.fs < 0 || at.sc < 0 || at.fs >= n || at.sc >= n) return;
	if(bad[at.fs][at.sc]) return;
	if(vis[at.fs][at.sc]) return;
	vis[at.fs][at.sc] = true;
	rep(i,0,8) {
		ii nx = ii(at.fs+dx[i], at.sc+dy[i]);
		rec(nx);
	}
}


int main() {
    cin.sync_with_stdio(false);
	memset(bad,0,sizeof(bad));
	memset(vis,0,sizeof(vis));
	cin >> n;
	int x,y;
	cin >> x >> y;
	x--;y--;
	rep(i,0,8) {
		ii at = ii(x,y);
		bad[at.fs][at.sc] = true;
		while(true) {
			at.fs += dx[i];
			at.sc += dy[i];
			if(0 <= at.fs && at.fs < n && 0 <= at.sc && at.sc < n) {
				bad[at.fs][at.sc] = true;
			} else {
				break;
			}
		}
	}
	ii pos;
	cin >> pos.fs >> pos.sc;
	pos.fs--,pos.sc--;
	rec(pos);
	cin >> pos.fs >> pos.sc;
	pos.fs--;pos.sc--;
	if(vis[pos.fs][pos.sc]) cout << "YES" << endl;
	else cout << "NO" << endl;
    return 0;
}


