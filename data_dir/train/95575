#include <bits/stdc++.h>
using namespace std;
const int N = 100005;
int seg[N * 4];

struct mq
{
    queue<int> q;
    deque<int> dq;

    void add(int x)
    {
        q.push(x);
        while (dq.size() && (dq.back() < x))
        {
            dq.pop_back();
        }
        dq.push_back(x);
    }

    void del()
    {
        if (q.front() == dq[0])
        {
            dq.pop_front();
        }
        q.pop();
    }

    int size()
    {
        return q.size();
    }

    int get()
    {
        return dq[0];
    }
};

void build(int id, int s, int e)
{
    seg[id] = 1e9;
    if (s == e)
        return;
    int mid = s + (e - s) / 2;
    build(id * 2, s, mid);
    build(id * 2 + 1, mid + 1, e);
}

void update(int id, int s, int e, int idx, int v)
{
    if (idx < s || idx > e)
        return;
    seg[id] = min(seg[id], v);
    if (s == e)
        return;
    int mid = s + (e - s) / 2;
    update(id * 2, s, mid, idx, v);
    update(id * 2 + 1, mid + 1, e, idx, v);
}

int query(int id, int s, int e, int f, int t)
{
    if (e < f || s > t)
        return 1e9;
    if (s >= f && e <= t)
        return seg[id];

    int mid = s + (e - s) / 2;
    return min(query(id * 2, s, mid, f, t), query(id * 2 + 1, mid + 1, e, f, t));
}
int arr[N];
int main()
{
   // freopen("in.txt", "rt", stdin);
    int n, d, l;
    scanf("%d %d %d", &n, &d, &l);
    for (int i = 1; i <= n; ++i)
    {
        scanf("%d", arr + i);
    }
    build(1, 0, n);
    update(1, 0, n, 0, 0);
    int i = 1;
    mq mx, mn;

    for (int j = 1; j <= n; ++j)
    {
        mx.add(arr[j]);
        mn.add(-arr[j]);
        while (mx.get() + mn.get() > d)
        {
            mx.del();
            mn.del();
            ++i;
        }
        if (j - i + 1 >= l)
        {
            int v = query(1, 0, n, i - 1, j - l);
            update(1, 0, n, j, v + 1);
        }
    }

    int v = query(1, 0, n, n, n);
    if (v <= n)
        printf("%d", v);
    else
        puts("-1");
}