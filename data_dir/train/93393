#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
using namespace std;

long long gcd(long long a, long long b ) {
    return b == 0 ? a : gcd(b, a % b);
}

long long c;
long long h[2];
long long w[2];

long long solve() {
    long long best = 0;
    long long j;
    long long cur;
    for (long long i = 0, s = 0; s <= c; ++i) {
        j = (c - s) / w[1];
        cur = i * h[0] + j * h[1];
        if (cur > best) best = cur;
        s += w[0];
    }
    return best;
}

int main () {
    cin >> c >> h[0] >> h[1] >> w[0] >> w[1];
    if (w[0] < w[1]) {
        swap(w[0],w[1]);
        swap(h[0],h[1]);
    }
    if (w[0] >= 100LL) {
        cout << solve();
    } else {
        long long g = gcd(w[0], w[1]);
        long long lcm = w[0] / g * w[1];
        long long left = c % lcm;
        long long aa = 0;
        if (c / lcm > 0) aa = 1;
        long long ans = (c / lcm - aa) * max(h[0] * (lcm / w[0]), h[1] * (lcm / w[1]));
        c = left + aa * lcm;
        cout << ans + solve();
    }
        
    return 0;
}