#include <bits/stdc++.h>
 
using namespace std;
 
long long sum[2][4002];
int a[2002][2002], ind[4002][4002][2];
 
int32_t main(){
    ios::sync_with_stdio( 0 );
    int n;
    cin >> n;
    for (int i = 1; i <= n;i++){
        for (int j = 1; j <= n;j++){
            cin >> a[i][j];
        }
    }
    for (int i = 1; i <= n;i++){
        for (int j = 1; j <= n;j++){
 
            sum[1][i + j - 1] += a[i][j];
            sum[0][i - j + n] += a[i][j];
 
            ind[i + j - 1][i - j + n][0] = i;
            ind[i + j - 1][i - j + n][1] = j;
 
        }
    }
    long long ans_1 = -1, ans_2 = -1;
 
    int ans_id[2][2];
 
    for( int i = 1; i <= 2 * n - 1; i++ ){
        for( int j = 1; j <= 2 * n - 1; j++ ){
            int ind_i = ind[i][j][0];
            int ind_j = ind[i][j][1];
            if( ind_i == 0 || ind_j == 0 ) continue;
            if( ( ind_i + ind_j ) % 2 == 0 ){
                    if( ans_1 < sum[0][j] + sum[1][i] - a[ind_i][ind_j] ) {
                        ans_1 = max( ans_1, sum[0][j] + sum[1][i] - a[ind_i][ind_j] );
                        ans_id[0][0] = ind_i;
                        ans_id[0][1] = ind_j;
                    }
            } else {
                    if( ans_2 < sum[0][j] + sum[1][i] - a[ind_i][ind_j] ) {
                        ans_2 = max( ans_2, sum[0][j] + sum[1][i] - a[ind_i][ind_j] );
                        ans_id[1][0] = ind_i;
                        ans_id[1][1] = ind_j;
                    }
            }
        }
    }
    cout << ans_1 + ans_2 << endl;
    cout << ans_id[0][0] << " " << ans_id[0][1] << " " << ans_id[1][0] << " " << ans_id[1][1] << endl;
 
 
 
 
 
 
}