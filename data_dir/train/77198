/** 
 * Dont raise your voice, improve your argument.
 * --Desmond Tutu
 */

#include <bits/stdc++.h>
using namespace std;

#define DEBUG
#ifndef DEBUG
#define endl "\n"
#endif

const double PI=3.1415926535897932384626433;
typedef long long ll;
#define fori(n) for(ll i=0; i<(n); i++)

#define cins(s) string s; cin>>s;
#define cini(i) int i; cin>>i;
#define cinll(l) ll l; cin>>l;
#define cind(d) double d; cin>>d;
#define cinai(a, n) vi a(n); fori(n) { cin>>a[i]; }
#define cinall(a, n) vll a(n); fori(n) { cin>>a[i]; }
#define cinas(s, n) vs s(n); fori(n) { cin>>s[i]; }

typedef pair<int, int> pii;
typedef pair<double,double> pdd;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<string> vs;
typedef vector<ll> vll;

void solve() {
    cini(n);    // # days
    cini(k);    // # TV-Shows
    cini(d);    // lower limit
    cinai(a,n); // a[i]= TV-show shown on day i

/** We need to find a segment of len d with a[i], a[i+1],...,a[i+d-1] with
 * minmum number of distinct values.
 */

    map<int,int> shows;
    size_t ans=1e9;
    for(int i=0; i<n; i++) {
        shows[a[i]]++;

        if(i>=d-1) {
            ans=min(ans, shows.size());
            auto it=shows.find(a[i-(d-1)]);
            if(it->second==1)
                shows.erase(it);
            else
                it->second--;
        }
    }
    cout<<ans<<endl;
}

int main() {
cin.tie(nullptr);
std::ios::sync_with_stdio(false);
    cini(t);
    while(t--)
        solve();

}

