#include <bits/stdc++.h>
#include <ext/hash_map>
#include <ext/numeric>
using namespace std;
using namespace __gnu_cxx;

#define EPS      1e-9
#define F        first
#define S        second
#define pi       acos(-1)
#define ll       long long
#define oo       0x3f3f3f3f
#define sz(x)    (int)x.size()
#define sc(x)    scanf("%d",&x)
#define all(x)   x.begin(),x.end()
#define rall(x)  x.rbegin(),x.rend()

int n;
int arr[200200];
vector<pair<int,int> > adj[200200];
ll dep[200200];
int dad[200200];

void dfs1(int u=1,int p=-1,int e=0){
  if(~p)dep[u]=dep[p]+e,dad[u]=p;
  for(int i=0;i<sz(adj[u]);i++)
    if(adj[u][i].F!=p)
      dfs1(adj[u][i].F,u,adj[u][i].S);
}

vector<int> par;
int out[200200];
int bad[200200];

int bs(int u){
  int l=0,r=sz(par)-1,mid;
  while(l<r){
    mid=l+(r-l)/2;
    if(arr[u]>=dep[u]-dep[par[mid]])r=mid;
    else l=mid+1;
  }
  return par[l];
}

int dfs(int u=1,int p=-1){
  par.push_back(u);
  for(int i=0;i<sz(adj[u]);i++){
    if(adj[u][i].F==p)continue;
    out[u]+=dfs(adj[u][i].F,u);
  }
  int x=bs(u);
  bad[dad[x]]++;
  par.pop_back();
  out[u]-=bad[u];
  return (1+out[u]);
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
//freopen("output.txt", "w", stdout);
#endif
  sc(n);
  for(int i=1;i<=n;i++)
    sc(arr[i]);
  for(int i=1;i<n;i++){
    int u=i+1,v,w;
    sc(v),sc(w);
    adj[u].push_back({v,w});
    adj[v].push_back({u,w});
  }
  dfs1();
  dfs();
  for(int i=1;i<=n;i++)
    printf("%d ",out[i]);
}
