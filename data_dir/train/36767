#include<bits/stdc++.h>
#define REP(i,m) for(int i=0;i<(m);++i)
#define REPN(i,m,in) for(int i=(in);i<(m);++i)
#define ALL(t) (t).begin(),(t).end()
#define CLR(a) memset((a),0,sizeof(a))
#define pb push_back
#define mp make_pair
#define fr first
#define sc second

using namespace std;


#ifndef ONLINE_JUDGE
#define dump(x)  cerr << #x << " = " << (x) << endl
#define prl cerr<<"called:"<< __LINE__<<endl
#define dumpR(x) cerr<<"\x1b[31m"<<#x<<" = " <<(x)<<"\x1b[39m"<<endl
#define dumpY(x) cerr<<"\x1b[33m"<<#x<<" = " <<(x)<<"\x1b[39m"<<endl
#define dumpG(x) cerr<<"\x1b[32m"<<#x<<" = " <<(x)<<"\x1b[39m"<<endl
template<class T> void debug(T a,T b){ for(;a!=b;++a) cerr<<*a<<' ';cerr<<endl;}
#else
#define dump(x) ;
#define dumpR(x) ;
#define dumpY(x) ;
#define dumpG(x) ;
#define prl ;
template<class T> void debug(T a,T b){ ;}
#endif

template<class T> void chmin(T& a,const T& b) { if(a>b) a=b; }
template<class T> void chmax(T& a,const T& b) { if(a<b) a=b; }
typedef long long int lint;
typedef pair<int,int> pi;

namespace std{
  template<class S,class T>
  ostream &operator <<(ostream& out,const pair<S,T>& a){
    out<<'('<<a.fr<<','<<a.sc<<')';
    return out;
  }
}

lint readL(){
  lint res;
#ifdef ONLINE_JUDGE
  scanf("%I64d",&res);
#else
  scanf("%lld",&res);
#endif
  return res;
}
void printL(lint res){
#ifdef ONLINE_JUDGE
  printf("%I64d",res);
#else
  printf("%lld",res);
#endif
}

//const int INF=5e8;
int h,w;
int buf[105][105];
int main(){
  cin>>h>>w;
  int mn=505;
  REP(i,h) REP(j,w){
    cin>>buf[i][j];
    chmin(mn,buf[i][j]);
  }
  vector<pi> res;
  if(h<w){
    REP(i,h) REP(_,mn) res.pb({0,i});
  }else{
    REP(i,w) REP(_,mn) res.pb({1,i});
  }
  int x=-1,y=-1;
  REP(i,h) REP(j,w){
    buf[i][j]-=mn;
    if(buf[i][j]==0) x=j,y=i;
  }
  REP(i,h) REP(j,w) if(buf[i][j]!=buf[y][j]+buf[i][x]){
    puts("-1");
    return 0;
  }
  REP(i,h) REP(_,buf[i][x]) res.pb({0,i});
  REP(i,w) REP(_,buf[y][i]) res.pb({1,i});

  cout<<res.size()<<endl;
  for(auto e:res){
    printf("%s %d\n",e.fr==0?"row":"col",e.sc+1);
  }
  return 0;
}



