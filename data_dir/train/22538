#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
#define pb push_back
#define endl "\n"

int n, a[100100], dp[100100][2], m, d;

vector <int> g[100100];

void dfs1(int v, int p){
    if (a[v] == 1)
        dp[v][0] = 0; else
        dp[v][0] = -1e9;
    for (int i = 0; i < g[v].size(); i++){
        int to = g[v][i];
        if (to == p)
            continue;
        dfs1(to, v);
        if (dp[to][0] >= 0)
            dp[v][0] = max(dp[v][0], dp[to][0] + 1);
    }
}

void dfs2(int v, int p){
    int mx1 = -1e9, mx2 = -1e9;
    for (int i = 0; i < g[v].size(); i++){
        int to = g[v][i];
        if (to == p)
            continue;
        if (dp[to][0] > mx1){
            mx2 = mx1;
            mx1 = dp[to][0];
        } else
            mx2 = max(mx2, dp[to][0]);
    }
    for (int i = 0; i < g[v].size(); i++){
        int to = g[v][i];
        if (to == p)
            continue;
        int dest;
        if (dp[to][0] == mx1)
            dest = mx2; else
            dest = mx1;
        if (dest != -1e9)
            dest += 2;
        dp[to][1] = dest;
        if (dp[v][1] != -1)
            dp[to][1] = max(dp[to][1], dp[v][1] + 1);
        if (a[to] == 1)
            dp[to][1] = max(dp[to][1], 0);
        dfs2(to, v);
    }
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

    cin >> n >> m >> d;
    for (int i = 1; i <= m; i++){
        int x;
        cin >> x;
        a[x] = 1;
    }
    for (int i = 1; i < n; i++){
        int u, v;
        cin >> u >> v;
        g[u].pb(v);
        g[v].pb(u);
    }
    dfs1(1, 0);
    if (a[1] == 1)
        dp[1][1] = 0; else
        dp[1][1] = -1e9;
    dfs2(1, 0);
    int ans = 0;
    for (int i = 1; i <= n; i++){
        //cout << i << ' ' << dp[i][0] << ' ' << dp[i][1] << endl;
        if (dp[i][0] <= d && dp[i][1] <= d)
            ans++;
    }
    cout << ans;

}
