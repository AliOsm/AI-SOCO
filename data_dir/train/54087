//Daniel Grzegorzewski
#include <bits/stdc++.h>
#pragma GCC optimize("O3")

#define MP make_pair
#define PB push_back
#define ST first
#define ND second
#define int long long

using namespace std;

typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VII;
typedef long long LL;

void init_ios() {
     ios_base::sync_with_stdio(0);
     cin.tie(0);
}

const int N = (int)1e6 + 3;

int n, x, res, ind, a[N], mx[N], fi[N], occ[N];

bool ok(int x1, int x2) {
  int last = 0;
  for (int i = 1; i <= n; ++i) {
    if (a[i] >= x1 && a[i] <= x2)
      continue;
    if (a[i] < last)
      return false;
    last = a[i];
  }
  return true;
}

signed main() {
  init_ios();
  cin >> n >> x;
  for (int i = 1; i <= n; ++i) {
    cin >> a[i];
    if (fi[a[i]] == 0)
      fi[a[i]] = i;
    occ[a[i]] = i;
    mx[i] = max(mx[i-1], a[i]);
  }
  int bla = x, najd = 0;
  for (int i = 1; i <= x; ++i) {
    if (fi[i] == 0)
      continue;
    if (fi[i] < najd) {
      bla = i;
      break;
    }
    najd = max(najd, occ[i]);
  }
  int x1 = 1, x2 = x, x3;
  while (x2-x1 > 1) {
    x3 = (x1+x2)/2;
    if (ok(1, x3))
      x2 = x3;
    else
      x1 = x3;
  }
  if (ok(1, x1))
    ind = x1;
  else
    ind = x2;
  res += x+1-ind;
  for (int i = 2; i <= x; ++i) {
    if (i > bla)
      break;
    ind = max(ind, i);
    if (occ[i-1] != 0)
      ind = max(ind, mx[occ[i-1]]);
    res += x+1-ind;
  }
  cout<<res<<"\n";
}