#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<string.h>
#include<set>
#include<map>
#include<bitset>
#include<vector>
#define mod 1000000007
#define inf 1000000000
using namespace std;
int n,m;
int dp[43][(1<<7)][(1<<7)];
int main()
{
    int nn,mm;
    cin>>nn>>mm;
    if(nn*mm==1)
    {
        cout<<"0"<<endl;
        return 0;
    }
    n=min(nn,mm);
    m=max(nn,mm);
    int coun=0;
    int i,j,mask1,mask2,mask3;
    for(i=0;i<m;i++)
        for(mask1=0;mask1<(1<<n);mask1++)
            for(mask2=0;mask2<(1<<n);mask2++)
                dp[i][mask1][mask2]=inf;
    for(mask1=0;mask1<(1<<n);mask1++)
        for(mask2=0;mask2<(1<<n);mask2++)
        {
            coun=0;
            for(j=0;j<n;j++)
            {
                bool ok=false;
                ok|=((mask1>>j)&1);
                ok|=((mask2>>j)&1);
                ok|=((mask1>>(j+1))&1);
                if(j>0)
                    ok|=((mask1>>(j-1))&1);
                if(!ok)
                    break;
                coun+=((mask1>>j)&1);
                coun+=((mask2>>j)&1);
            }
            if(j==n)
                dp[0][mask1][mask2]=coun;
        }
    for(i=1;i<m-1;i++)
        for(mask1=0;mask1<(1<<n);mask1++)
            for(mask2=0;mask2<(1<<n);mask2++)
                for(mask3=0;mask3<(1<<n);mask3++)
                {
                    coun=0;
                    for(j=0;j<n;j++)
                    {
                        bool test=false;
                        test|=((mask1>>j)&1);
                        test|=((mask2>>j)&1);
                        test|=((mask3>>j)&1);
                        test|=((mask2>>(j+1))&1);
                        if(j>0)
                            test|=((mask2>>(j-1))&1);
                        if(!test)
                            break;
                        coun+=((mask3>>j)&1);
                    }
                    if(j==n)
                        dp[i][mask2][mask3]=min(dp[i][mask2][mask3],dp[i-1][mask1][mask2]+coun);
                }
    int rec=inf;
    for(mask1=0;mask1<(1<<n);mask1++)
        for(mask2=0;mask2<(1<<n);mask2++)
        {

            for(j=0;j<n;j++)
            {
                bool test=false;
                test|=((mask1>>j)&1);
                test|=((mask2>>j)&1);
                test|=((mask2>>(j+1))&1);
                if(j>0)
                    test|=((mask2>>(j-1))&1);
                if(!test)
                    break;
            }
            if(j==n)
                rec=min(rec,dp[m-2][mask1][mask2]);
        }
    cout<<n*m-rec<<endl;
    return 0;
}

