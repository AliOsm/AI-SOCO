#include <bits/stdc++.h>
using namespace std;

#define FOR(i,f,t) for(int i=f; i<t; i++)
#define ms(obj, val) memset(obj, val, sizeof(obj))
#define pb push_back
#define ri(x) scanf("%d", &x)
#define rii(x,y) scanf("%d %d", &x, &y)
#define SYNC ios_base::sync_with_stdio(false)

typedef long long ll;

int const MOD = 1e9 +7;

#define MAXN 5003

ll dp[MAXN][MAXN], dpC[MAXN][18];
ll acc[MAXN][MAXN];
char tmp[MAXN];
int a[MAXN], N;



bool compare(int l1, int r1, int l2, int r2){
	
	int d=r1-l1+1;
	if(d>17){
		if(dpC[l1][16] == dpC[l2][16]){
			return compare(l1+17,r1,l2+17,r2);
		}else{
			return dpC[l2][16] > dpC[l1][16];
		}
	}else{
		return dpC[l2][r2-l2] > dpC[l1][r1-l1];
	}
	for(int i=0; i<d; i++){
		if(a[l1+i]>a[l2+i]) return false;
		if(a[l1+i]<a[l2+i]) return true;
	}
}

/*
int f(int l, int r){
	int d=r-l+1;
	int l2 = r+1, r2=r+d;
	if(dp[l][r]!=-1) return dp[l][r];
	if(if(a[l]!=a[l2])){
		return dp[l][r] = a[l]>a[l2];
	}else{
		return 0;
	}
}
*/
/*
int f(int l, int r){
	if(dp[l][r]!=-1) return dp[l][r];
	if(r+1==N)return 1;
	if(a[r+1]==0) return 0;
	int d=r-l+1;
	if(d+r>=N) return 0;
	int ret=0;
	if(compare(l,r,r+1,r+d)){
		ret = (ret+f(r+1,r+d))%MOD;
	}
	for(int nr=r+d+1;nr<N;nr++){
		ret = (ret+f(r+1,nr))%MOD;
	}
	return dp[l][r] = ret;
}
*/

int main(){
	ri(N);
	scanf("%s",tmp);
	FOR(i,0,N) a[i]=tmp[i]-'0';
	
	FOR(l,0,N){
		ll x = 0;
		FOR(r,l,min(l+17,N)){
			x = x*10+a[r];
			dpC[l][r-l] = x;
		}
	}

	int l=N-1;
	while(a[l]==0) l--;
	
	for(; l>-1; l--){
		if(a[l]==0) continue;
		for(int r=N-1; r>=l; r--){
			if(r==N-1) dp[l][r] = 1;
			int d=r-l+1;
			if(r+d>=N) continue;
			if(compare(l,r,r+1,r+d))
				dp[l][r] = dp[r+1][r+d];
			dp[l][r] = (dp[l][r] + acc[r+1][N-1] - acc[r+1][r+d]+MOD)%MOD;
		}
		acc[l][l] = dp[l][l];
		FOR(r,l+1,N){
			acc[l][r] = (acc[l][r-1] + dp[l][r])%MOD;
		}
	}
	
	int ans=0;
	FOR(r,0,N) ans = (ans+dp[0][r])%MOD;
	//FOR(l,0,N) FOR(r,l,N) printf("(%d,%d)=%d\n",l,r,dp[l][r]);
	printf("%d\n", ans);
}

