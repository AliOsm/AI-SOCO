#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
typedef pair<ll,ll> p2;
ll a[1005],ind[1005][1005][8],dp[1005][1005],hell=pow(2,8);
void solve(){
	ll n;
	cin>>n;
	set<ll> s;
	for(ll i=1;i<=n;i++){
		cin>>a[i];
		a[i]--;
		s.insert(a[i]);
	}
	for(ll val=0;val<8;val++){
		vector<ll> v(n+1,0);
		for(ll i=1;i<=n;i++)
		for(ll len=1;len<=n;len++)
		ind[i][len][val]=0;
		for(ll i=n;i>=1;i--)
		if(a[i]==val){
			for(ll j=i;j<=n;j++){
				v[j]++;
				ind[j][v[j]][val]=i;
			}
		}
    }
	ll l=1,r=n,res=ll(s.size());
	while(l<=r){
		ll m=(l+r)/2;
		for(ll i=0;i<hell;i++)
		dp[0][i]=(-1);
		dp[0][0]=0;
		for(ll i=1;i<=n;i++)
		for(ll msk=1;msk<hell;msk++){
			dp[i][msk]=(-1);
		    for(ll j=0;j<8;j++)
		    if(msk&(1<<j)){
				ll k=msk^(1<<j);
				if(ind[i][m][j]==0||dp[ind[i][m][j]-1][k]==(-1))
				continue;
				dp[i][msk]=max(dp[i][msk],dp[ind[i][m][j]-1][k]+m);
				if(ind[i][m+1][j]==0||dp[ind[i][m+1][j]-1][k]==(-1))
				continue;
				dp[i][msk]=max(dp[i][msk],dp[ind[i][m+1][j]-1][k]+m+1);
		    }
	    }
		if(dp[n][hell-1]!=(-1)){
			res=dp[n][hell-1];
			l=m+1;
		}
		else
		r=m-1;
	}
	cout<<res;
}
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	ll qc=1;
	for(ll i=1;i<=qc;i++)
	solve();
}
