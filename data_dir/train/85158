#include <iostream>
#include <string>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <sstream>
#include <cstdio>
#include <cstring>
#include <iomanip>
#include <fstream>
#include <stack>
#include <limits.h>

#define FOR(i,a,b) for(int i=(a);i<(b);i++)
#define REV(i,b,a) for(int i=(a);i>=(b);i--)
#define mp make_pair
#define pb push_back
#define SZ(v) (int)v.size()
#define all(c) (c).begin(),(c).end()
#define rall(c) (c).rbegin(),(c).rend()
using namespace std;
double PI = 3.1415926536;
int dX[] = { 1, -1, 0, 0 };
int dY[] = { 0, 0, 1, -1 };

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    int c0 = 0, cX = 0;
    bool ok1 = 0, ok2 = 0;
    vector<string> v(3);
    FOR(i, 0, 3)
        cin >> v[i];
    FOR(i, 0, 3)
    {
        FOR(j, 0, 3)
        {
            if (v[i][j] == '0')
                c0++;
            else if (v[i][j] == 'X')
                cX++;
        }
    }
    if (c0 > cX || cX - c0 > 1)
        return puts("illegal"), 0;
    FOR(i, 0, 3)
    {
        if ((v[i][0] == v[i][1] && v[i][1] == v[i][2]))
        {
            if (v[i][0] == 'X')
                ok1 = 1;
            else if (v[i][0] == '0')
                ok2 = 1;
        }
        if (v[0][i] == v[1][i] && v[1][i] == v[2][i])
        {
            if (v[0][i] == 'X')
                ok1 = 1;
            else if (v[0][i] == '0')
                ok2 = 1;
        }
    }
    if (v[0][0] == v[1][1] && v[1][1] == v[2][2])
    {
        if (v[0][0] == 'X')
            ok1 = 1;
        else if (v[0][0] == '0')
            ok2 = 1;
    }
    if (v[2][0] == v[1][1] && v[1][1] == v[0][2])
    {
        if (v[2][0] == 'X')
            ok1 = 1;
        else if (v[2][0] == '0')
            ok2 = 1;
    }
    if (ok1 && !ok2)
    {
        if (cX - c0 == 1)
            return puts("the first player won"), 0;
        return puts("illegal"), 0;
    }
    if (!ok1 && ok2)
    {
        if (cX == c0)
            return puts("the second player won"), 0;
        return puts("illegal"), 0;
    }
    if (ok1 && ok2)
        return puts("illegal"), 0;
    if (c0 == cX)
        return puts("first"), 0;
    if (cX + c0 == 9)
        return puts("draw"), 0;
    if (cX - c0 == 1)
        return puts("second"), 0;
    return puts("illegal"), 0;
}