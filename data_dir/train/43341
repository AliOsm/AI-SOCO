# include <bits/stdc++.h>
using namespace std;
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define db long double
# define IOS ios_base :: sync_with_stdio(0)
# define halt(...) {fo << (__VA_ARGS__) << '\n';exit(0);}
# define pp(n) cerr << #n << " = " << n << '\n'
# define ppp(v) for (auto it : v) cerr << it << ' ';cerr << '\n'
int t[1 << 20];
int s[1 << 20];
map < int , int > was;
int v[1 << 20];
int q[1 << 20];
vector < pair < int , int > > Sweep[1 << 20];
int ans[1 << 20];
int main(void)
{
    #ifdef CF
    freopen("input","r",stdin);
    #endif // CF
    srand(time(0));
    fo << fixed << setprecision(7);
    cerr << fixed << setprecision(7);
    int n,m;
    # define sc(x) scanf("%d",&x)
    sc(n);
    for (int i = 1;i <= n;++i) sc(s[i]),v[i] = v[i-1] ^ s[i];
    auto upd = [&](int i,int val)
    {
        for (;i <= n;i += i&(-i))
            t[i] ^= val;
    };
    auto query = [&](int i)
    {
        int ans = 0;
        for (;i;i -= i&(-i))
            ans ^= t[i];
        return ans;
    };
    sc(m);
    for (int i = 1;i <= m;++i)
    {
        int l,r;
        sc(l);sc(r);
        ans[i] = v[r] ^ v[l-1];
        Sweep[r].push_back({l-1,i});
    }
    was.clear();
    for (int i = 1;i <= n;++i)
    {
        if (was.count(s[i]))
            upd(was[s[i]],s[i]);
        upd(i,s[i]);
        was[s[i]] = i;
        for (auto it : Sweep[i])
            ans[it.y] ^= query(n) ^ query(it.x);
    }
    for (int i = 1;i <= m;++i)
        fo << ans[i] << '\n';
    return 0;
}


