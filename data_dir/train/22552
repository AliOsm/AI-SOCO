#include <iostream>
#include <cstring>
#include <algorithm>
#include <cstdio>
#include <ctime>
#include <vector>
#include <fstream>
#include <sstream>
#include <queue>
#include <cmath>
#include <set>
#include <map>
using namespace std;
#define L(s) (int)((s).size())
#define pb push_back
#define pii pair<int, int>
#define mp make_pair
#define x first
#define y second
#define inf 1000000000
#define all(s) (s).begin(), (s).end()
#define ll long long
#define VI vector<int>
#define ull unsigned ll
int a[111111], b[111111], n, m, f[222222], k;
int ord[222222];
VI ops;
inline int solve(int *a, int n, int *b, int m, bool swp) {
	k = 0;
	int pa = 0, pb = 0;
	while(pa < n || pb < m) {
		int who = a[pa];  if (pa == n) who = b[pb];
		while(pa < n && a[pa] == who) {
			f[k++] = who;
			ord[k - 1] = pa + 1;
			if (swp) ord[k - 1] += m;
			pa++;
		}
		while(pb < m && b[pb] == who) {
			f[k++] = who;
			ord[k - 1] = n + pb + 1;
			if (swp) ord[k - 1] -= n;
			pb++;
		}
	}

	ops.clear();
	for(int i = 1; i < k; ++i) {
		if (f[i] != f[i - 1]) {
			ops.pb(i);
		}
	}
	if (f[k - 1] == 1) ops.pb(k);
	return L(ops);
}
int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	scanf("%d", &n); for(int i = 0; i < n; ++i) scanf("%d", &a[i]);
	scanf("%d", &m); for(int i = 0; i < m; ++i) scanf("%d", &b[i]);
	int c1 = solve(a, n, b, m, false);
	int c2 = solve(b, m, a, n, true);
	if (c1 < c2) solve(a, n, b, m, false);
	for(int i = 0; i < n + m; ++i) {
		if (i) printf(" ");
		printf("%d", ord[i]);
	}
	printf("\n");
	printf("%d\n", L(ops));
	for(int i = 0; i < L(ops); ++i) {
		if (i) printf(" ");
		printf("%d", ops[i]);
	}
	printf("\n");
}
