#include<cstdlib>
#include<stdio.h>
#include<vector>

using namespace std;

using ll = long long int;
using ull = unsigned long long int;
using dd = double;
using ldd = long double;
using si = short int;

#define all(x) (x).begin(), (x).end()
#define ff first
#define ss second

//debug defines
#define debug(x) cout << #x << " " << x << endl;
#define debug_v(x) for (auto j : (x)){ cout << j << " ";} cout << endl;
#define PO cout << "Pomelo" << endl;
#define OL cout << "Oliva" << endl;
//end of debug defines

dd arr[(int)4e5];

int main()
{
    //ios_base::sync_with_stdio(0);
    //cin.tie(0);
    //cout.tie(0);

    dd sy = 0, a = 0, b = 0;
    scanf("%lf %lf %lf", &sy, &a, &b);
    //cout << sy << " " << a << " " << b << endl;
    int n = 0;
    scanf("%d", &n);
    vector<dd> pref(2 * n + 1, 0);

    for (int i = 0; i < n; ++i){
        //cin >> arr[i * 2] >> arr[i * 2 + 1];
        scanf("%lf %lf", &arr[i * 2], &arr[i * 2 + 1]);
        pref[i + 1] = pref[i] + arr[i * 2 + 1] - arr[i * 2];
    }

    int q = 0, aa, bb;
    scanf("%d", &q);

    dd x, y;
    x = y = 0;
    dd ans = 0;
    dd cross_a, cross_b;

    for (int i = 0; i < q; ++i)
    {
        ans = 0;
        scanf("%lf %lf", &x, &y);
        cross_a = x + y * (a - x) / (y - sy);
        cross_b = x + y * (b - x) / (y - sy);
        aa = lower_bound(arr, arr + 2 * n, cross_a) - arr;
        bb = lower_bound(arr, arr + 2 * n, cross_b) - arr;
       //cout << aa << " " << bb << endl;
        if (aa % 2)
        {
            ans += max(dd(0), pref[bb / 2] - pref[aa / 2 + 1]);
        }
        else
        {
            ans += pref[bb / 2] - pref[aa / 2];
        }
        if (aa != bb && bb % 2)
        {
            ans += cross_b - arr[bb - 1];
        }
        if (aa % 2 && aa != bb)
        {
            ans -= cross_a - arr[aa];
        }
        if (aa % 2 && aa == bb)
        {
            ans += cross_b - cross_a;
        }
        ans = (ans / y * (y - sy));
         printf("%.10lf\n", ans);
       // cout << ans << endl;
    }

    return 0;
}


