#include "bits/stdc++.h"
using namespace std;
char Array[105][105];
bool IsDone[105][105];
queue<pair<int,int> > Q;
vector<pair<int,int> > V;

int main(){
    int N , i , j;
    scanf( "%d" , &N );

    for( i = 1 ; i <= N ; ++i ){
        for( j = 1 ; j <= N ; ++j ){
            Array[i][j] = 'c';
            V.emplace_back( make_pair( i , j ) );
        }
    }

    Array[1][1] = 'W';
    Q.push( make_pair( 1 , 1 ) );
    int x , y , Count = 0;
    pair<int,int> Num;
    char ch;
    int Cur = 0;

    while( Count < N * N ){
        if( Q.empty() ){
            for( ; Cur < int(V.size()) ; ++Cur ){
                if( IsDone[V[Cur].first][V[Cur].second] == false ){
                    Q.push( make_pair( V[Cur].first , V[Cur].second ) );
                    Array[V[Cur].first][V[Cur].second] = 'W';
                    ++Cur;
                    break;
                }
            }
        }

        Num = Q.front();
        Q.pop();
        x = Num.first;
        y = Num.second;
        if( IsDone[x][y] == true ) continue;
        IsDone[x][y] = true;
        ++Count;
        if( Array[x][y] == 'W' ) ch = 'B';
        else ch = 'W';

        if( x - 2 >= 1 && y - 1 >= 1 && Array[x - 2][y - 1] == 'c' ){ 
            Array[x - 2][y - 1] = ch;
            if( IsDone[x - 2][y - 1] == false ) Q.push( make_pair( x - 2 , y - 1 ) );
        }
        if( x + 2 <= N && y - 1 >= 1 && Array[x + 2][y - 1] == 'c' ){ 
            Array[x + 2][y - 1] = ch;
            if( IsDone[x + 2][y - 1] == false )  Q.push( make_pair( x + 2 , y - 1 ) );
        }
        if( x - 1 >= 1 && y - 2 >= 1 && Array[x - 1][y - 2] == 'c' ){ 
            Array[x - 1][y - 2] = ch;
            if( IsDone[x - 1][y - 2] == false ) Q.push( make_pair( x - 1 , y - 2 ) );
        }
        if( x - 1 >= 1 && y + 2 <= N && Array[x - 1][y + 2] == 'c' ){ 
            Array[x - 1][y + 2] = ch;
            if( IsDone[x - 1][y + 2] == false ) Q.push( make_pair( x - 1 , y + 2 ) );
        }
        if( x - 2 >= 1 && y + 1 <= N && Array[x - 2][y + 1] == 'c' ){ 
            Array[x - 2][y + 1] = ch;
            if( IsDone[x - 2][y + 1] == false ) Q.push( make_pair( x - 2 , y + 1 ) );
        }
        if( x + 2 <= N && y + 1 <= N && Array[x + 2][y + 1] == 'c' ){ 
            Array[x + 2][y + 1] = ch;
            if( IsDone[x + 2][y + 1] == false ) Q.push( make_pair( x + 2 , y + 1 ) );
        }
        if( x + 1 <= N && y + 2 <= N && Array[x + 1][y + 2] == 'c' ){ 
            Array[x + 1][y + 2] = ch;
            if( IsDone[x + 1][y + 2] == false ) Q.push( make_pair( x + 1 , y + 2 ) );
        }
        if( x + 1 <= N && y - 2 >= 1 && Array[x + 1][y - 2] == 'c' ){ 
            Array[x + 1][y - 2] = ch;
            if( IsDone[x + 1][y - 2] == false ) Q.push( make_pair( x + 1 , y - 2 ) );
        }
    }

    for( i = 1 ; i <= N ; ++i ){
        for( j = 1 ; j <= N ; ++j )
            printf( "%c" , Array[i][j] );
        
        puts( "" );
    }

    return 0;
}