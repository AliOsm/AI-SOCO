#include<bits/stdc++.h> 

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;
typedef long double ld;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef vector<ll> vll;
typedef vector<vll> vvl;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,ll> pll;
const ll MOD = 1e9+7;
const ld PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

struct sofa
{
	pii x, y;
};

const int MAXN = 1e5;
int d, n, m, cntl, cntr, cntu, cntd, p, q, r, s, l[MAXN], rt[MAXN], u[MAXN], down[MAXN];
sofa a[MAXN];

int main()
{
	ssync;
	cin >> d >> n >> m;
	for(int i=0; i<d; i++)
	{
		cin >> p >> q >> r >> s;
		l[i] = min(p, r);
		rt[i] = max(p, r);
		u[i] = min(q, s);
		down[i] = max(q, s);
		a[i].x = {p, q};
		a[i].y = {r, s};
	}
	cin >> cntl >> cntr >> cntu >> cntd;
	sort(l, l+d);
	sort(rt, rt+d);
	sort(u, u+d);
	sort(down, down+d);
	for(int i=0; i<d; i++)
	{
		p = max(a[i].x.F, a[i].y.F);
		p = lower_bound(l, l+d, p) - l;
		if(a[i].x.F != a[i].y.F)
			p--;
		if(p != cntl)
			continue;

		p = min(a[i].x.F, a[i].y.F);
		p = upper_bound(rt, rt+d, p) - rt;
		p = d - p;
		if(a[i].x.F != a[i].y.F)
			p--;
		if(p != cntr)
			continue;

		p = max(a[i].x.S, a[i].y.S);
		p = lower_bound(u, u+d, p) - u;
		if(a[i].x.S != a[i].y.S)
			p--;
		if(p != cntu)
			continue;

		p = min(a[i].x.S, a[i].y.S);
		p = upper_bound(down, down+d, p) - down;
		p = d - p;
		if(a[i].x.S != a[i].y.S)
			p--;
		if(p != cntd)
			continue;

		cout << i+1 << "\n";
		return 0;
	}
	cout << "-1\n";
	return 0;
}
