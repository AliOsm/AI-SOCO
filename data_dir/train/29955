#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
using namespace std;
typedef long long ll;
typedef pair <int,int> pii;

#define int ll
const int maxN = 1e5 + 10;
const int base = 727;
const int MOD = 1e9 + 7;
int n,hashh[maxN],pw[maxN];
int res[maxN]; //partial sum

int get(int l, int r) //hash e bazehye [l,r]
{
    int len = r - l + 1;
    int ret = hashh[r] - ( (hashh[l - 1] * pw[len]) % MOD );
    ret += MOD;
    ret %= MOD;
    return ret;
}

bool check(int pos, int x)
{
    if (x == 0)
        return true;
    if (pos + x - 1 <= n)
    {
        int boz = get(pos, pos + x - 1);
        if (boz == hashh[x]) //az i ta x ta berim jolo hamoon prefix be toole x e
            return true;
    }
    return false;
}

int32_t main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
    pw[0] = 1;
    for (int i = 1 ; i < maxN ; i++)
        pw[i] = (pw[i - 1] * base) % MOD;

    string s;
    cin >> s;
    n = s.size();

    for (int i = 0 ; i < n ; i++)
    {
        hashh[i + 1] = hashh[i] * base;
        hashh[i + 1] %= MOD;
        hashh[i + 1] += (s[i] - 'A' + 1);
        hashh[i + 1] %= MOD;
    }

    vector <int> ans;
    ans.pb(0);
    for (int i = 1 ; i <= n ; i++)
        if (hashh[i] == get(n - i + 1, n))
            ans.pb(i);

    for (int i = 1 ; i <= n ; i++)
    {
        //alan mikhaym befahmim i mitoone shorooe chandta az prexix haayi ke suffix ham hastan baashe
        int st = 0, en = ans.size();
        while (en - st > 1)
        {
            int mid = (st + en) >> 1;
            if (check(i, ans[mid]))
                st = mid;
            else
                en = mid; 
        }
        if (st == 0) //i shorooe hich prexic ee nist (chon ans[0] ro 0 gozashte boodim)
            continue;

        /*
        cout << i << ": ";
        for (int j = 0 ; j <= st ; j++)
            cout << ans[j] << " ";
        cout << endl << endl;
        */
        //i shorooe prefix haaye ans[1], ... , ans[st] mitoone baashe
        res[st]++;
    }
    
    for (int i = ans.size() - 1 ; i >= 0 ; i--)
        res[i] += res[i + 1];
        
    cout << ans.size() - 1 << endl;
    for (int i = 1 ; i < ans.size() ; i++)
    {
        cout << ans[i] << " " << res[i] << endl;
    }
    return 0;   
}