#include <bits/stdc++.h>

using namespace std;

#ifdef DGC
#include "debug.h"
#else
#define debug(...)
#endif
typedef long long ll;
typedef long double ld;
typedef complex<ll> point;
#define F first
#define S second



int main()
{
	#ifdef DGC
		//freopen("a.txt", "r", stdin);
		//freopen("b.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(0), cin.tie(0);

	int n, m;
	cin >> n >> m;

	vector<int> deg(n);
	vector<vector<int>> adj(n);
	for (int u, v; m--; )
	{
		cin >> u >> v;
		--u, --v;
		if (u > v) swap(u, v);
		adj[u].push_back(v);
		++deg[u];
		++deg[v];
	}

	ll ans = 0;

	auto update = [&](int u, int sgn = +1)
	{
		ans += (deg[u] - (ll)adj[u].size()) * (ll)adj[u].size() * sgn;
	};

	for (int u = 0; u < n; ++u)
		update(u);

	int q;
	cin >> q;
	cout << ans << "\n";
	for (int u; q--; )
	{
		cin >> u;
		--u;
		update(u, -1);

		for (auto v : adj[u])
		{
			update(v, -1);
			adj[v].push_back(u);
			update(v);
		}

		adj[u].clear();
		update(u);

		cout << ans << "\n";
	}

	return 0;
}
