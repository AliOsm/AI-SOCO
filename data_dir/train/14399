#include <bits/stdc++.h>
using namespace std;
 
int n;
vector<int> G[300000];
int arr[300000];

vector<int> bfs(bool fl)
{
	vector<int> dist(n + 2, -1);
	queue<int> q;
	
	for(int i = 1; i <= n; i++)
	{
		if(fl and arr[i] % 2 == 0) 
		{
			q.push(i);
			dist[i] = 0;
		}
		if(!fl and arr[i] % 2 == 1) 
		{
			q.push(i);
			dist[i] = 0;
		}
	}
	while(!q.empty())
	{
		int u = q.front();
		q.pop();
		for(int &w : G[u])
			if(dist[w] == -1)
			{
				dist[w] = dist[u] + 1;
				q.push(w);
			}
	}
	return dist;	
}

int main()
{
	scanf(" %d", &n);
	for(int i = 1; i <= n; i++)
	{
		scanf(" %d", &arr[i]);
 		int v = i - arr[i];
		int w = i + arr[i];
		if(v >= 1)
			G[v].push_back(i);
		if(w <= n)
			G[w].push_back(i);
 	}
 	vector<int> vpar = bfs(false);
 	vector<int> vimpar = bfs(true);
 	for(int i = 1; i <= n; i++)
 	{
 		if(arr[i] % 2 == 1) cout << vimpar[i] << ' ';
 		else cout << vpar[i] << ' ';
 	}
 	puts("");
 	
	return 0;
}