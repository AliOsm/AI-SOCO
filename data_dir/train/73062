#include <bits/stdc++.h>
using namespace std;

//#define int           long long
#define S             second
#define F             first
#define pb            push_back
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend() 
#define lb            lower_bound
#define si(c)         (int)((c).size())
#define lcm(a, b)      (a * (b / __gcd(a,b)))  
#define inf           (long long)(1e15)
#define endl          '\n'
#define mp            make_pair
#define time(s)       (double(clock()-s)/double(CLOCKS_PER_SEC))
#define debug(args...)    _F(#args, args)
#define vi            std::vector<int>
#define pii           pair<int, int> 
#define vpi           vector<pii>

clock_t start;
mt19937_64 rng(chrono::system_clock::now().time_since_epoch().count());

template<typename T> void _F(const char *name, T arg1){
    cerr << name << " = " << arg1 << endl;
}
template<typename T, typename... Args> void _F(const char *names, T arg1, Args... args){
    const char *name = strchr(names, ',');
    cerr.write(names, name-names) << " = " << arg1 << endl;
    _F(name+2, args...);
}


void solve(){
    int n;
    cin >> n;
    int a[n];
    int t[201] = {0};
    int ans = 0;
    for(int i = 0; i < n; i++){
        cin >> a[i];
        a[i]--;
        t[a[i]]++;
        ans = max(ans, t[a[i]]);
    }
    for(int i = 0; i < 200; i++){
        if(!t[i])continue;
        multiset<int> ms;
        int cnt[200] = {0};
        for(int j = 0; j < 200; j++){
            cnt[j] = t[j];
            if(cnt[j])ms.insert(cnt[j]);
        }
        int s = 0, e = n-1;
        int tot = 1, l = 0, r = 0;
        while(true){
            while(l < tot && s <= e){
                if(a[s] == i)l++;
                ms.erase(ms.find(cnt[a[s]]));
                cnt[a[s]]--;
                if(cnt[a[s]])ms.insert(cnt[a[s]]);
                s++;
            }
            while(r < tot && e >= s){
                if(a[e] == i)r++;
                ms.erase(ms.find(cnt[a[e]]));
                cnt[a[e]]--;
                if(cnt[a[e]])ms.insert(cnt[a[e]]);
                e--;
            }
            if(e+1 <= s)break;
            if(si(ms)){
                auto it = ms.end();
                it--;
                ans = max(ans, 2*tot+*it);
            }else ans = max(ans, 2*tot);
    
            tot++;
        }
    }
    cout << ans << endl;
}

signed main(){

    ios_base::sync_with_stdio(0); 
    cin.tie(0); cout.tie(0);   

    int t = 1;
    start = clock(); 

    cout << fixed << setprecision(12);

    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout);
    freopen("error.txt", "w", stderr);
    #endif

    cin >> t;

    for(int i = 1; i <= t; ++i){
        solve();
        //cout << endl;
    }
    //cerr << time(start);
    return 0;
}