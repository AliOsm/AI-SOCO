#include <bits/stdc++.h>

using namespace std;

typedef unsigned uint;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ldbl;
typedef pair<int, int> pii;
typedef pair<uint, uint> puu;
typedef pair<ll, ll> pll;
typedef pair<ull, ull> pull;
typedef vector<int> vi;
typedef vector<uint> vu;
typedef vector<ll> vll;
typedef vector<ull> vull;
typedef vector<pii> vpii;
typedef vector<puu> vpuu;
typedef vector<pll> vpll;
typedef vector<pull> vpull;
typedef vector<string> vstr;
typedef vector<double> vdbl;
typedef vector<ldbl> vldbl;
#define pb push_back
#define ppb pop_back
#define pfr push_front
#define ppfr pop_front
#define emp emplace
#define empb emplace_back
#define be begin
#define rbe rbegin
#define all(x) (x).be(), (x).end()
#define rall(x) (x).rbe(), (x).rend()
#define fir first
#define sec second
#define mkp make_pair
#define brif(cond) if (cond) break
#define ctif(cond) if (cond) continue
#define retif(cond) if (cond) return
static inline void canhazfast() {ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}
template<typename T> T gcd(T a, T b) {return b ? gcd(b, a%b) : a;}
template<typename T> T extgcd(T a, T b, T &x, T &y)
{
    T x0 = 1, y0 = 0, x1 = 0, y1 = 1;
    while (b) {
        T q = a/b; a %= b; swap(a, b);
        x0 -= q*x1; swap(x0, x1);
        y0 -= q*y1; swap(y0, y1);
    }
    x = x0; y = y0; return a;
}
int ctz(uint x) {return __builtin_ctz(x);}
int ctzll(ull x) {return __builtin_ctzll(x);}
int clz(uint x) {return __builtin_clz(x);}
int clzll(ull x) {return __builtin_clzll(x);}
int popcnt(uint x) {return __builtin_popcount(x);}
int popcntll(ull x) {return __builtin_popcountll(x);}
int bsr(uint x) {return 31^clz(x);}
int bsrll(ull x) {return 63^clzll(x);}

#define MX 100016

int x1[MX], x2[MX];
int y1[MX], y2[MX];
int xp[MX], yp[MX];
int xs[MX], ys[MX];

int main()
{
    canhazfast();

    int n, w, h;
    int cntl, cntr, cntt, cntb;

    cin >> n >> w >> h;
    for (int i = 1; i <= n; ++i) {
        cin >> x1[i] >> y1[i] >> x2[i] >> y2[i];
        if (x1[i] > x2[i]) swap(x1[i], x2[i]);
        if (y1[i] > y2[i]) swap(y1[i], y2[i]);
        ++xp[x1[i]]; ++xs[x2[i]];
        ++yp[y1[i]]; ++ys[y2[i]];
    }
    cin >> cntl >> cntr >> cntt >> cntb;

    for (int i = 1; i <= w; ++i) xp[i] += xp[i-1];
    for (int i = w; i > 0; --i) xs[i] += xs[i+1];
    for (int i = 1; i <= h; ++i) yp[i] += yp[i-1];
    for (int i = h; i > 0; --i) ys[i] += ys[i+1];

    for (int i = 1; i <= n; ++i) {
        int cl = xp[x2[i]-1], cr = xs[x1[i]+1];
        int ct = yp[y2[i]-1], cb = ys[y1[i]+1];
        if (x1[i] != x2[i]) --cl, --cr;
        else --ct, --cb;
        retif(cl == cntl && cr == cntr && ct == cntt && cb == cntb) cout << i, 0;
    }
    cout << "-1";

    return 0;
}
