#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define IN freopen("nocross.in","r",stdin)
#define OUT freopen("nocross.out","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define LOG 19
#define off 2

#define mod 1000000007LL

using namespace __gnu_pbds;
using namespace std ;

typedef tree< i64, null_type, less< i64 >, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define INF 2000000000
#define maxn 100005

char s[maxn] ;

vector <char> vc ;

int main()
{
    int n ;

    scanf("%s",s) ;

    n = strlen(s) ;

    vector <int> pos ;

    int tot = 0 ;

    for(int i=0 ; i<n ; i++)
    {
        if( s[i]=='#' ) pos.pb(i) ;
        if( s[i]=='(' ) tot++ ;
        if( s[i]==')' ) tot-- ;

        if( tot < 0 )
        {
            printf("-1\n") ;
            return 0 ;
        }
    }

    if( tot < pos.size() )
    {
        printf("-1\n") ;
        return 0 ;
    }

    int T = tot ;

    for(int i=0 ; i<n; i++)
    {
        if( s[i]=='#' )
        {
            if( i==pos.back() ) for(int j=1 ; j<= tot-(int)pos.size() + 1 ; j++ ) vc.pb(')') ;
            else vc.pb(')') ;
        }
        else vc.pb(s[i]) ;
    }

    tot = 0 ;
    for(int i=0 ; i<vc.size() ; i++)
    {
        if( vc[i]=='(' ) tot++ ;
        else tot-- ;
        if( tot < 0 )
        {
            printf("-1\n") ;
            return 0 ;
        }
    }

    if( tot!=0 )
    {
        printf("-1\n") ;
        return 0 ;
    }

    for(int i=0 ; i+1 <pos.size() ; i++) printf("1\n") ;
    printf("%d\n" , T- (int)pos.size() + 1 ) ;

    return 0 ;
}
