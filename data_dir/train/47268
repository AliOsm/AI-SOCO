#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef pair<int, int> pii;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define mod(n, m) (((n%m) + m)%m)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'

const int N = 1e7 + 5;

int idx[N][2];

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n;
	cin >> n;
	reset(idx, -1);
	rep(i, 0, n)
	{
		int x;
		cin >> x;
		if (idx[x][0] == -1)
			idx[x][0] = i + 1;
		else if (idx[x][1] == -1)
			idx[x][1] = i + 1;
	}

	ll val = LLONG_MAX;
	int a = 1, b = 2;
	int i, j;
	for (i = 1; i < N; i++)
	{
		int idx1 = -1, idx2 = -1;
		int val1 = -1, val2 = -1;
		for (j = i; j < N; j += i)
		{
			if (idx1 == -1)
			{
				if (idx[j][0] != -1 && idx[j][1] != -1)
					idx1 = idx[j][0], idx2 = idx[j][1], val1 = j, val2 = j;
				else if (idx[j][0] != -1)
					idx1 = idx[j][0], val1 = j;
			}
			else if (idx2 == -1)
			{
				if (idx[j][0] != -1)
					idx2 = idx[j][0], val2 = j;
			}
			if (idx1 > -1 && idx2 > -1)
				break;
		}
		if (idx1 > -1 && idx2 > -1)
		{
			ll curr = (val1 * 1ll * val2) / __gcd(val1, val2);
			if (curr < val)
				val = curr, a = idx1, b = idx2;
		}
	}
	if (a > b)
		swap(a, b);

	cout << a << " " << b << endl;

	return 0;
}
