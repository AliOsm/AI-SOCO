#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>

//using namespace __gnu_pbds;
using namespace std;

//template<typename T>
//using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef vector<int> vi;
typedef long long ll;

#define pb push_back
#define inf 0x3f3f3f3f
#define all(v) (v).begin() , (v).end()
#define ones(n) __builtin_popcount(n)
#define watch(x) cout << (#x) << " is " << (x) << endl

int di[] = {0, 0, 1, -1, 1, 1, -1, -1};
int dj[] = {1, -1, 0, 0, -1, 1, 1, -1};

const int N = 2e5 + 5;
int n , q;
vi adj[N];
int E[N] , in[N] , sz[N] , nxt = 0;

int dfs(int node) {
    in[node] = nxt;
    E[nxt++] = node;
    sz[node] = 1;
    for (int child : adj[node])
        sz[node] += dfs(child);
    return sz[node];
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
#endif
    scanf("%d%d",&n,&q);
    int p;
    for (int i = 2 ;i <= n ;i++) {
        scanf("%d",&p);
        adj[p].pb(i);
    }

    for (int i = 1 ;i <= n ;i++)
        sort(all(adj[i]));

    dfs(1);
    int u , k;
    while(q--) {
        scanf("%d%d",&u,&k);
        if(sz[u] < k)
            puts("-1");
        else
            printf("%d\n" , E[in[u] + k - 1]);
    }
}
