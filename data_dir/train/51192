#include <bits/stdc++.h>

using namespace std;
using namespace __gnu_cxx;


#define f first
#define s second
#define sz size()
#define pb push_back
#define mem(a,b,s) for(int i=0 ; i<=s ; ++i) a[i]=b;
#define mem2(a,r,c,b) for(int i=0 ; i<=r ; ++i)    for(int j=0 ; j<=c ; ++j)    a[i][j]=b;
#define all(a) a.begin(),a.end()
#define mp make_pair
#define in insert
#define sc(a) scanf("%d",&a)
#define sc2(a,b)	scanf("%d%d",&a,&b)
#define rep(x,a,b)	for(int x=a ; x<=b ; ++x)
#define irep(x,a,b)	for(int x=a ; x>=b ; --x)

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<pair<int,int> > vii;
typedef set<int> si;
typedef set<pair<int,int> > sii;
typedef map<int,int>	mii;


const double pi=3.14159265358979323846264338327950288419716939937510582097494459;
const int MAXN=1e5+10;
const ll MOD=1e9+7;
const int oo=2e9;
const ll OO=1e17;


int dx[]={0,1,0,-1,-1,-1,1,1};
int dy[]={1,0,-1,0,-1,1,-1,1};

int n,a[MAXN],sum,f1=-1,f2=-1;
bool dig;
int main()
{
 	ios_base::sync_with_stdio(false);
 	cin.tie(NULL);
 	cout.tie(NULL);
//	freopen("In.txt","r",stdin);
//	freopen("Out.txt","w",stdout);

 	cin >> n;
 	rep(i,0,n-1)	cin >> a[i],sum+=a[i];
 	sort(a,a+n);
 	if(a[0])	return puts("-1");
 	if(sum%3==0)
 	{
 		if(!a[n-1])	return puts("0");
 		irep(i,n-1,0)	cout << a[i];
 		cout << endl;
 		return 0;
 	}
 	if(sum%3==2)
 	{
 		rep(i,0,n-1)
			if(a[i]%3==2 && f2==-1)	f2=i;
 		if(f2==-1)
 		{
 			rep(i,0,n-1)
 				if(a[i]%3==1)
 				{
 					if(f1==-1)	f1=i;
 					else if(f2==-1)	f2=i;
 				}
 		}
 		if(f2==-1)	return puts("-1");
 	}
 	else
 	{
 		rep(i,0,n-1)
			if(a[i]%3==1 && f2==-1)	f2=i;
 		if(f2==-1)
 		{
 			rep(i,0,n-1)
 				if(a[i]%3==2)
 				{
 					if(f1==-1)	f1=i;
 					else if(f2==-1)	f2=i;
 				}
 		}
 		if(f2==-1)	return puts("-1");
 	}
 	irep(i,n-1,0)
 		if(i!=f1 && i!=f2)
 		{
 			if(!dig && !a[i])	return puts("0");
 			dig=1;
 			cout << a[i];
 		}
 	cout << endl;
}
