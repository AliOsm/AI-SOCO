#include <bits/stdc++.h>
using namespace std;
#define ll long long

int P[100001];
int E[100001];

int Find(int x)
{
    return (P[x]==x ? x : P[x]=Find(P[x]));
}

void Union(int u, int v)
{
    if((u=Find(u))==(v=Find(v)))return;
    P[v]=u;
}

int main()
{
    ios::sync_with_stdio(0);
    int n,m,q,type;
    cin>>n>>m>>q;
    string s,a,b;
    unordered_map<string,int>mp;
    for(int i=1; i<=n; i++)
        cin>>s,mp[s]=P[i]=i;

    while(m--)
    {
        cin>>type>>a>>b;
        int x = Find(mp[a]);
        int y = Find(mp[b]);

        if(type&1)
        {
            if(E[x]==y){cout<<"NO\n";continue;}

            if(E[x] && E[y])
                Union(E[x],E[y]),Union(x,y);
            else if(E[x])
                Union(x,y);
            else if(E[y])
                Union(y,x);
            else Union(x,y);
            cout<<"YES\n";
        }
        else
        {
            if(x==y){cout<<"NO\n";continue;}

            if(E[x] && E[y])
                Union(x,E[y]),Union(y,E[x]),E[x]=y,E[y]=x;
            else if(E[x])
                Union(y,E[x]),E[x]=y,E[y]=x;
            else if(E[y])
                Union(x,E[y]),E[x]=y,E[y]=x;
            else E[x]=y,E[y]=x;
            cout<<"YES\n";
        }
    }

    while(q--)
    {
        cin>>a>>b;
        int x = Find(mp[a]);
        int y = Find(mp[b]);

        if(x==y)cout<<"1\n";
        else if(E[x]==y)cout<<"2\n";
        else cout<<"3\n";
    }
}
