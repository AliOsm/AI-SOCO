#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
const int maxn=1000010;
const int mod=998244353;
int fac[maxn],fac_inv[maxn];
int c_n[maxn],pow_3[maxn];
inline int get_mod(int x){
	return x<mod?x:x-mod;
}
inline int qpow(int x,int y){
	int res=1;
	while(y){
		if(y&1) res=(ll)res*x%mod;
		x=(ll)x*x%mod;
		y>>=1;
	}
	return res;
}
inline int get_c(int n,int m){
	return (ll)fac[n]*fac_inv[m]%mod*fac_inv[n-m]%mod;
}
int main(){
	int n;
	scanf("%d",&n);
	fac[0]=fac_inv[0]=1;
	for(int i=1;i<=n;i++){
		fac[i]=(ll)fac[i-1]*i%mod;
		fac_inv[i]=qpow(fac[i],mod-2);
	}
	for(int i=0;i<=n;i++)
		c_n[i]=get_c(n,i);
	pow_3[0]=1;
	for(int i=1;i<=n;i++)
		pow_3[i]=get_mod(get_mod(pow_3[i-1]+pow_3[i-1])+pow_3[i-1]);
	int ans1=0,ans2=0;
	for(int i=1;i<=n;i++){
		int add=(ll)pow_3[i]*qpow(pow_3[n-i],n)%mod;
		add=(ll)add*c_n[i]%mod;
		if(i&1) ans1=get_mod(ans1+add);
		else ans1=get_mod(ans1+mod-add);
	}
	ans1=get_mod(ans1<<1);
	for(int i=0;i<n;i++){
		int t=mod-pow_3[i];
		int add=get_mod(qpow(get_mod(1+t),n)+mod-qpow(t,n));
		add=(ll)add*c_n[i]%mod;
		if(i&1) ans2=get_mod(ans2+add);
		else ans2=get_mod(ans2+mod-add);
	}
	ans2=get_mod(get_mod(ans2+ans2)+ans2);
	printf("%d\n",get_mod(ans1+ans2));
	return 0;
}