/*
“You just can’t beat the person who won’t give up.” ―Babe Ruth
*/

#include <bits/stdc++.h>

using namespace std; 	
typedef long long ll;
typedef unsigned long long ull;
const int N = 1e5+10;
const int oo = 1e9;
const int mod = 1e9+7;

ll t,n;
vector<pair<int,pair<int,int>>> v;
vector<int> ans,ans2;
bool can(int k){
	ans.clear();
	vector<pair<int,int>> tem;
	int md,lo=0,hi=n-1,s=v.size();
	for(int i=0;i<n;i++){
		if(v[i].first>=k){
			tem.push_back({v[i].second.first,v[i].second.second});
		}
	}
	sort(tem.begin(),tem.end());
	int time=0;
	for(int i=0;i<tem.size()&&k;i++){
		if(time+tem[i].first<=t){
			time+=tem[i].first;
			ans.push_back(tem[i].second);
			k--;
		}
	}
	return !k;
}
int main(){
	cin>>n>>t;
	for(int i=1;i<=n;i++){
		int a,p;
		cin>>a>>p;
		v.push_back({a,{p,i}});
	}
	sort(v.begin(),v.end());
	int md,lo=0,hi=n,best = 0;
	while(lo<=hi){
		md = (lo+hi)/2;
		if(can(md)){
			lo = md+1;
			ans2 = ans;
			best = md;
		}else{
			hi = md-1;
		}
	}
	cout << ans2.size() << endl << ans2.size() << endl;
	for(int i=0;i<ans2.size();i++){
		cout << ans2[i] << ' ';
	}
	puts("");
}