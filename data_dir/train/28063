#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <cstdlib>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <set>
#include <list>
#include <map>
#include <time.h>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef unsigned long long llu;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
const ll MOD = 1e9 + 7;
const long double PI = 3.141592653589793238462643383279502884197;

priority_queue<int, vector<int>, greater<int> > pq;
vector<pii> v;

char s[100001];

int main() {
	int n;
	scanf("%d", &n);
	scanf("%s", s);

	// 
	int pre = -1;
	for (int i = 0; i < n; i++) {
		if (s[i] == 'G') {
			if (pre == -1) pre = i;
		}
		else {
			if (pre != -1) v.push_back({ pre, i - 1 });
			pre = -1;
		}
	}
	if (pre != -1) v.push_back({ pre, n - 1 });
	
	if (sz(v) == 1) printf("%d", v[0].second - v[0].first + 1);
	else if (sz(v) == 2) {
		if(v[0].second + 2 == v[1].first) printf("%d", v[1].second - v[0].first);
		else printf("%d", max(v[1].second - v[1].first + 2, v[0].second - v[0].first + 2));
	}
	else {
		int mav = 0;
		for (int i = 0; i < sz(v); i++) {
			mav = max(mav, v[i].second - v[i].first + 2);
			if (i && v[i].first - v[i - 1].second == 2)
				mav = max(mav, v[i].second - v[i - 1].first + 1);
		}
		printf("%d", mav);
	}
}