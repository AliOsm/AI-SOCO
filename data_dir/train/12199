#pragma GCC optimize("O3")

#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES
#include <iostream>
#include <vector>
#include <algorithm>
#include <stack>
#include <string>
#include <assert.h>
#include <queue>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <random>
#include <cmath>
#include <chrono>
#include <bitset>

#define ld long double
#define pb push_back
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()

#define int long long
using namespace std;

const int INF = 2e18;
const int MOD = 998244353;
const int MB = 20;

void solve() {
	int n, k;
	cin >> n >> k;
	vector<int> a(n + 1);
	for (int i = 1; i <= n; i++) {
		for (int j = i * 2; j <= n; j += i) {
			a[j]++;
		}
	}

	int sum = 0;
	for (int i = 1; i <= n; i++) {
		sum += a[i];
	}

	if (sum < k) {
		cout << "No";
		return;
	}

	int m = n;
	while (sum - a[m] >= k) {
		sum -= a[m];
		m--;
	}

	vector<bool> good(m + 1, true);

	vector<pair<int, int>> b;
	for (int i = m / 2 + (m % 2 == 0 ? 1 : 0); i <= m; i++) {
		b.pb({ a[i], i });
	}
	sort(rall(b));
	int count = m;
	for (auto& p : b) {
		if (sum - p.first >= k) {
			sum -= p.first;
			good[p.second] = false;
			count--;
		}
	}

	cout << "Yes\n";
	cout << count << '\n';
	for (int i = 1; i <= m; i++) {
		if (good[i]) cout << i << " ";
	}
}

signed main() {
	/*
	freopen("search.in", "r", stdin);
	freopen("search.out", "w", stdout);
	*/
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	cout.precision(12);
	solve();
}