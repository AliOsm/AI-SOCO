#include <bits/stdc++.h>

using namespace std;

#define all(x) begin(x), end(x)

using ll = long long;
using ld = long double;
using pii = pair<int, int>;
using vi = vector<int>;

void solve() {
    string s, t;
    cin >> s >> t;
    int n = s.size();
    // nxt[i][j] = what is the occ of j >= i?
    vector<vi> nxt(n, vi(26, -1));
    nxt[n - 1][s[n - 1] - 'a'] = n - 1;
    for (int i = n - 2; i >= 0; --i) {
        for (int j = 0; j < 26; ++j) {
            nxt[i][j] = nxt[i + 1][j];
        }
        nxt[i][s[i] - 'a'] = i;
    }

    int m = t.size();
    int p = -1;
    int res = 1;
    for (int i = 0; i < m; ++i) {
        // find the next occ > p
        int q = p == n - 1 ? -1 : nxt[p + 1][t[i] - 'a'];
        if (q == -1) {
            ++res;
            q = nxt[0][t[i] - 'a'];
            if (q == -1) {
                cout << "-1\n";
                return;
            }
        }

        p = q;
    }

    cout << res << '\n';
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);

    int T;
    cin >> T;
    while (T-- > 0) {
        solve();
    }
    
    return 0;
}
