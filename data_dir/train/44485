#include <functional>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <assert.h>
#include <bitset>
#include <string>
#include <cstdio>
#include <math.h>
#include <complex>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <set>
#include <bitset>
#include <map>
using namespace std;

#ifdef _DEBUG
	const int N = 1020;
#else
	const int N = 1020;
#endif

string s1, s2;
char a[N][N], b[N][N];
set <string> st;
int dx[4] = {1, 0, -1, 0};
int dy[4] = {0, 1, 0, -1};

bool check(int x, int y)
{
	return (x >= 0 && x < 2 && y >= 0 && y < 2);
}

void dfs(string s)
{
	if (st.find(s) != st.end()) return;
	st.insert(s);
	char a[2][2];
	a[0][0] = s[0];
	a[0][1] = s[1];
	a[1][0] = s[2];
	a[1][1] = s[3];
	for (int i = 0; i < 2; i++)
		for (int j = 0; j < 2; j++)
			if (a[i][j] == 'X')
			{
				for (int k = 0; k < 4; k++)
				{
					int x = i + dx[k];
					int y = j + dy[k];
					if (check(x, y))
					{
						string t = "";
						for (int i1 = 0; i1 < 2; i1++)
							for (int j1 = 0; j1 < 2; j1++)
							{
								if (i1 == i && j1 == j) t += a[x][y];
								else if (i1 == x && j1 == y) t += a[i][j];
								else t += a[i1][j1];
							}
						dfs(t);
					}
				}
			}
}

int main()
{
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
	for (int i = 0; i < 2; i++)
	{
		for (int j = 0; j < 2; j++) scanf("%c", &a[i][j]);
		scanf("\n");
	}
	s1 = "";
	for (int i = 0; i < 2; i++)
		for (int j = 0; j < 2; j++) s1 += a[i][j];
	for (int i = 0; i < 2; i++)
	{
		for (int j = 0; j < 2; j++) scanf("%c", &b[i][j]);
		scanf("\n");
	}
	s2 = "";
	for (int i = 0; i < 2; i++)
		for (int j = 0; j < 2; j++) s2 += b[i][j];
	dfs(s1);
	if (st.find(s2) != st.end()) cout << "YES";
	else cout << "NO";
    return 0;
}