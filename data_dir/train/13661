#include <bits/stdc++.h>
#define pb(a)           push_back(a)
#define ll              long long int
#define scd(a)          scanf("%d",&a)
#define mp(a,b)         make_pair(a,b)
#define scl(w)          scanf("%I64d",&w)
#define scdd(a,b)       scanf("%d %d",&a,&b)
#define srt(a)          sort(a.begin(),a.end())
#define rsrt(a)         sort(a.rbegin(),a.rend())
#define scll(a,b)       scanf("%I64d %I64d",&a,&b)
///4direction ->        int del_x[]={-1,0,1,0},del_y[]={0,1,0,-1};
#define input(v,n)      for (int i=0;i<n;i++){int a;cin >> a;v.push_back(a);}
#define inputll(v,n)    for (ll i=0;i<n;i++){ll a;cin >> a;v.push_back(a);}
#define vii             vector < int >
#define vll             vector < ll >
#define pii             pair < int , int >
#define mk              make_pair

using namespace std;

int n,k;
int cats[100005],mark[100005];
vector < int > tree[100005];

int dfs(int u, int pre)
{
    //cout << "for " << u << " pre " << pre << endl;
    mark[u]=1;
    pre+=cats[u];
    if (cats[u]==0)pre=0;
    if (pre==k+1){
        return 0;
    }
    //cout << "for " << u << " pre " << pre << endl;

    int tut=0,temp=0;
    for (int i=0;i<tree[u].size();i++){
        int v=tree[u][i];
        if (mark[v]==0){
            tut+=dfs(v,pre);
            temp++;
        }
    }
    if (temp==0){///leaf
        return 1;
    }
    //cout << "tut " << tut << endl;
    return tut;
}

int main()
{
    cin >> n >> k;
    for (int i=1;i<=n;i++)
        cin >> cats[i];
    for (int i=1;i<n;i++){
        int a,b;
        cin >>a >> b;
        tree[a].pb(b);
        tree[b].pb(a);
    }
    cout << dfs(1,0) << endl;

    return 0;
}
/*
2 1
1 1
2 1
*/
