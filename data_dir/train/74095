#pragma GCC optimize("Ofast,fast-math,unroll-loops")
#include <bits/stdc++.h>

typedef long long ll;

using namespace std;

void dout () { cerr << '\n'; }

template<typename Head, typename... Tail>
void dout(Head H, Tail... T) {
	cerr << H << ' ';
	dout(T...);
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0), cout.tie(0);
	int t;
	cin >> t;

	while (t--) {
	 	string s;
	 	cin >> s;
	 	int p1, p2;
	 	p1 = -1;
	 	p2 = -1;
	 	for (int i = 0; i < (int)s.size(); i++) {
	 	 	if (s[i] == '1') {
	 	 	    p1 = i;
	 	 	    break;
	 	 	}	
	 	}

	 	for (int i = (int)s.size() - 1; i >= 0; i--) {
	 	 	if (s[i] == '1') {
	 	 	    p2 = i;
	 	 	    break;
	 	 	}	
	 	}

	 	int ans = 0;
	 	if (p1 != p2) {
	 	 	for (int i = p1; i <= p2; i++) {
	 	 		if (s[i] == '0') ans++;
	 	 	}
	 	}

	 	cout << ans << '\n';
	}
	return 0;
}