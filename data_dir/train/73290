//let's do it
 #include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define inf 1000000000000
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define boost1 ios::sync_with_stdio(false);
#define boost2 cin.tie(0);
#define mem(a,val) memset(a,val,sizeof a)
#define endl "\n"
#define maxn 100001

int prime_cnt,primes[30],counts[30],store[30][maxn],arr[maxn];

int ok(int l,int r)
{
	for(int i=1;i<=prime_cnt;i++)
	{
		int got=store[i][r]-store[i][l-1];
		int req=counts[i];
		if(got<req)
		return 0;
	}
	return 1;
}
int main()
{
	boost1;boost2;
	int i,j,n,k,x,y,val,lo,mid,hi,cnt;
	ll ans=0;
	cin>>n>>k;
	for(i=1;i<=n;i++)
	cin>>arr[i];
	x=k;
	for(i=2;i*i<=k;i++)
	{
		if(x%i)
		continue;
		cnt=0;
		while(x%i==0)
		{
			x/=i;
			cnt++;
		}
		prime_cnt++;
		primes[prime_cnt]=i;
		counts[prime_cnt]=cnt;
	}
	if(x>1)
	{
		prime_cnt++;
		primes[prime_cnt]=x;
		counts[prime_cnt]=1;
	}
	/*for(i=1;i<=prime_cnt;i++)
	cout<<primes[i]<<" "<<counts[i]<<endl;*/
	for(i=1;i<=prime_cnt;i++)
	{
		val=primes[i];
		for(j=1;j<=n;j++)
		{
			x=arr[j];
			cnt=0;
			while(x%val==0)
			{
				x/=val;
				cnt++;
			}
			store[i][j]=cnt;
		}
	}
	for(i=1;i<=prime_cnt;i++)
	{
		for(j=1;j<=n;j++)
		store[i][j]+=store[i][j-1];
	}
	for(i=1;i<=n;i++)
	{
		lo=i-1;
		hi=n;
		if(!ok(i,hi))
		continue;
		while(hi-lo>1)
		{
			mid=(lo+hi)/2;
			if(ok(i,mid))
			hi=mid;
			else
			lo=mid;
		}
		//cout<<i<<" "<<hi<<endl;
		ans+=n-hi+1;
	}
	cout<<ans;
	return 0;
}
