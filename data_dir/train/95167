///FUCKOUT
#pragma GCC optimize ("O3")
#pragma GCC optimize ("unroll-loops")

#include "bits/stdc++.h"
#include <ext/rope> //header with rope
using namespace std;

#define pb push_back
#define F first
#define S second
#define f(i,a,b)  for(int i = a; i < b; i++)
//#define endl '\n'

using namespace __gnu_cxx; //namespace with rope and some additional stuff

using ll = long long;
using db = long double;
using row = vector<int>;
using ii = pair<ll, ll>;

const int N = 3e3+5, M = 1e6 + 5, LG = 17, MOD = 1e9 + 7;
const int BLOCK = 225;
const int BLOCKN = N / BLOCK + 1;
const long double EPS = 1e-7;
using ull = unsigned long long;
#define int ll
int par[N][N];
int sz[N][N];
int dp[N][N];
vector<int> adj[N];
void dfs(int node, int p, int root){
  sz[root][node] = 1;
  par[root][node] = p;

  for(auto v : adj[node]){
    if(v == p)continue;
    dfs(v, node, root);
    sz[root][node] += sz[root][v];
  }

}
int solve(int u,int v){
  if(~dp[u][v])
    return dp[u][v];
  if(par[u][v]==u)
    return dp[u][v] = dp[v][u] = sz[u][v] * sz[v][u];
  return dp[u][v] = dp[v][u] = sz[u][v] * sz[v][u] + max(solve(par[v][u], v), solve(u, par[u][v]));
}
int32_t main(){
#ifdef ONLINE_JUDGE
  ios_base::sync_with_stdio(0);
  cin.tie(0);
#endif // ONLINE_JUDGE
  memset(dp,-1,sizeof dp);
  int n;
  cin >> n;

  f(i,1,n){
    int u, v;
    cin >> u >> v;
    adj[u].pb(v);
    adj[v].pb(u);
  }

  f(i,1,n+1){
    dfs(i,i,i);
  }
  int ans = 0;
  f(i,1,n+1)
    f(j,i+1,n+1)
      ans = max(ans, solve(i, j));

  cout << ans << '\n';

  return 0;
}
