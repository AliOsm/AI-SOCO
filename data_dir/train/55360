#include <bits/stdc++.h>
using namespace std;
const int N = 5200 + 5;

int base[ 256 ];
bitset< N > mtx[ N ];

int main() {
	ios_base::sync_with_stdio( false );
	cin.tie( nullptr );
	iota( base, base + 256, 0 );
	for ( char c = 'A' ; c <= 'F' ; ++ c )
		base[ c ] = c - 'A' + 10;
	int n; cin >> n;
	for ( int i = 0 ; i < n ; ++ i ) {
		string ss; cin >> ss;
		int j = 0;
		for ( auto c : ss ) {
			mtx[ i ][ j ++ ] = base[ c ] & 0b1000;
			mtx[ i ][ j ++ ] = base[ c ] & 0b0100;
			mtx[ i ][ j ++ ] = base[ c ] & 0b0010;
			mtx[ i ][ j ++ ] = base[ c ] & 0b0001;
		}
	}
	int ans = 0;
	for ( int i = 0 ; i < n ; ++ i ) {
		for ( int j = 0 ; j < n ; ) {
			int len;
			for ( len = 0 ; len < n ; len ++ ) {
				if ( j + len == n ) break;
				if ( mtx[ i ][ j ] ^ mtx[ i ][ j + len ] )
					break;
			}
			ans = gcd( ans, len );
			j += len;
		}
	}
	for ( int j = 0 ; j < n ; ++ j ) {
		for ( int i = 0 ; i < n ; ) {
			int len;
			for ( len = 0 ; len < n ; len ++ ) {
				if ( i + len == n ) break;
				if ( mtx[ i ][ j ] ^ mtx[ i + len ][ j ] )
					break;
			}
			ans = gcd( ans, len );
			i += len;
		}
	}
	cout << ans << '\n';
	return 0;
}