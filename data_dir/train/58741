/// In The Name Of God

#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,sse3,sse4,popcnt,abm,mmx")

#include <bits/stdc++.h>

#define f first
#define s second

#define pb push_back
#define pp pop_back
#define mp make_pair

#define sz(x) (int)x.size()
#define sqr(x) ((x) * 1ll * (x))
#define all(x) x.begin(), x.end()

#define Kazakhstan ios_base :: sync_with_stdio(0), cin.tie(0), cout.tie(0);

#define nl '\n'
#define ioi exit(0);

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const int N = (int)1e6 + 7;
const int inf = (int)1e9 + 7;
const int mod = (int)1e9 + 7;
const ll linf = (ll)1e18 + 7;

const int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1};
const int dy[] = {0, 1, 0, -1, 1, -1, 1, -1};

using namespace std;

int n, q;
int a[N];
int d[N];

struct fenwick {
	ll f[N];
	void upd(int p, int x) {
		for (; p < N; p |= p + 1) {
			f[p] += x;
		}
	}
	ll pref(int p) {
		ll res = 0;
		for (; p >= 0; p = (p & (p + 1)) - 1) {
			res += f[p];
		}
		return res;
	}
	ll get(int l, int r) {
		return pref(r) - pref(l - 1);
	}
} t;

int sz;
int del[N];
set <int> st;
void upd(int l, int r) {
	sz = 0;
	for (auto it = st.lower_bound(l); it != st.end() && *it <= r; it++) {
		int nxt = d[a[*it]];
		if (nxt <= 2) del[++sz] = *it;
		t.upd(*it, -a[*it] + nxt);	
		a[*it] = nxt;
	}
	for (int i = 1; i <= sz; i++) {
		st.erase(del[i]);
	}
}
int main() {
	#ifdef IOI2018
		freopen ("in.txt", "r", stdin);
	#endif
	Kazakhstan
	for (int i = 1; i < N; i++) {
		for (int j = i; j < N; j += i) {
			d[j]++;
		}
	}
	cin >> n >> q;
	for (int i = 1; i <= n; i++) {
		cin >> a[i];
		t.upd(i, a[i]);
		if (a[i] > 2) st.insert(i);
	}
	for (int i = 1; i <= q; i++) {
		int type, l ,r;
		cin >> type >> l >> r;
		if (type == 2) cout << t.get(l, r) << nl;
		else upd(l, r);
	}
	ioi
}
