#pragma comment(linker, "/STACK:64000000")
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cassert>
#include <ctime>
#include <deque>

#define forn(i, n) for (int i = 0; i < int(n); i ++)
#define ford(i, n) for (int i = int(n) - 1; i >= 0; i --)
#define mp make_pair
#define pb push_back
#define fs first
#define sc second
#define pi 3.1415926535897932
#define ll long long
#define ld long double

using namespace std;

int n, k;
vector <string> s;
int cnt[4];
const string s1[4] = {"aaaa", "aabb", "abab", "abba"};
const int c[5] = {'a', 'e', 'i', 'o', 'u'};

bool cmp(const string& c1, const string& c2){
    int t1 = -1, t2 = -1;
    int kol = 0;
    ford(i, c1.size()){
        forn(j, 5)
            if (c1[i] == c[j]) kol ++;
        if (kol == k){
            t1 = i;
            break;
        }
    }
    kol = 0;
        ford(i, c2.size()){
        forn(j, 5)
            if (c2[i] == c[j]) kol ++;
        if (kol == k){
            t2 = i;
            break;
        }
    }
    if (t1 < 0 || t2 < 0) return false;
    if (c1.size() - t1 != c2.size() - t2) return false;
    for (int i = 0; i + t1 < c1.size(); i ++){
        if (c1[i + t1] != c2[t2 + i]) return false;
    }
    return true;
}


int main(){
#ifndef ONLINE_JUDGE
    freopen ("input.txt","rt",stdin);
    //freopen ("output.txt","wt",stdout);
#endif
//  int n, k;
    s.resize(4);
    scanf("%d %d\n", &n, &k);
    forn(i, n){
        forn(j, 4)
            getline(cin, s[j]);
        if (cmp(s[0], s[1]) && cmp(s[0], s[2]) && cmp(s[0], s[3])) cnt[0] ++;
        if (cmp(s[0], s[1]) && cmp(s[2], s[3])) cnt[1] ++;
        if (cmp(s[0], s[2]) && cmp(s[1], s[3])) cnt[2] ++;
        if (cmp(s[0], s[3]) && cmp(s[1], s[2])) cnt[3] ++;
    }   
    forn(i, 4){
        if (cnt[i] == n){
            cout << s1[i] << endl;
            return 0;
        }
    }
    cout << "NO";
    return 0;
}