#include<bits/stdc++.h>
typedef long long int ll;
typedef long double ld;
#define MOD 1000000007
#define MOD2 1000000006
#define TEMPMOD1 998244353
#define TEMPMOD2 998244352
#define INF 1000000000000000001
#define NEGINF -1000000000000000007
#define vll vector<ll> 
#define vvll vector<vector<ll>>
#define pll pair<ll,ll>
#define pii pair<int,int>
#define plll pair<pll,ll>
#define vplll vector<plll>
#define vpll vector<pll>
using namespace std;
using namespace std::chrono; 
#define fileIO(name) \
    freopen(name".in", "r", stdin); \
    freopen(name".out", "w", stdout);

set<ll> unvisited;
map<pll,ll> edge;

void DFS(ll start)
{
    ll cur=-1;
    set<ll>::iterator it;
    while(1)
    {
        it=unvisited.upper_bound(cur);
        if(it==unvisited.end())
        {
            break;
        }
        cur=*it;
        if(!edge[{start,cur}])
        {
            unvisited.erase(it);
            DFS(cur);
        }
    }
    return;
}

int main()
{ 
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    ll vertice,non_existent_edge;
    cin>>vertice>>non_existent_edge;
    ll vert1,vert2;
    while(non_existent_edge--)
    {
        cin>>vert1>>vert2;
        edge[{vert1,vert2}]++;
        edge[{vert2,vert1}]++;
    }
    for(ll i=1;i<=vertice;i++)
    {
        unvisited.insert(i);
    }
    ll ans=0;
    set<ll>::iterator it;
    while(!unvisited.empty())
    {
        ans++;
        it=unvisited.begin();
        DFS(*it);
    }
    ans--;
    cout<<ans;
    return 0;
}