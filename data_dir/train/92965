// 11.04.2018
//
// ������������ ����� �� ����� 9, 16

/*

*/


# include <iostream>
# include <cstdio>
# include <cstring>
# include <string>
# include <cstdlib>
# include <cmath>
# include <iomanip>
# include <vector>
//                 insert, append, size
# include <stack>
//                 push, pop, top, empty
# include <queue>
//                 push, pop, front, empty
# include <map>

// map <keytype, valtype> M;
//
// void erase (keytype)
// void insert (keytype)
// void clear ()
// valtype * find (keytype)

# include <list>
//                 push_back, begin, end
# include <set>
//
// void erase (type)
// void insert (type)
// void clear ()
// valtype * find (type)

# include <algorithm>



# define iabs(x) ( (x) < 0 ? (-(x)) : (x) )
# define sqr(x) ( (x) * (x) )


//# define lint long long int
# define lint __int64

# define fi first
# define se second

# define x XX_
# define y YY_


using namespace std;


typedef pair <int, int> Pair;
typedef pair <int, Pair> Trio;
typedef pair <Pair, Pair> Quattro;


const int N = 45000;
const int M = 20;
const int K = 20;
const int INF = 2000000000;
const double eps = 1e-12;


int k, m, n, kmin;
bool ok;
set <int> s, t;
priority_queue <int> q;


int F (int n);


int main ()
{
# ifndef ONLINE_JUDGE
   freopen ("C.TXT", "r", stdin);
   freopen ("C.OUT", "w", stdout);
# endif

   ios_base::sync_with_stdio (0);

   cin >> n;

# ifndef ONLINE_JUDGE
   cout << "*** n = " << n << endl;
# endif

   m = 0;
   for ( int i=1; i < N; i++ )
      s.insert (i*i);

   int nn = n, d = 0;
   for ( d=0; nn > 0; d++ )
      nn /= 10;

# ifndef ONLINE_JUDGE
   cout << "*** n dig = " << d << endl;
   if ( s.find (121) != s.end () )
      cout << "***121 OK" << endl;
   cout << "*** s size = " << s.size () << endl;
   cout << "*** 45*45 = " << 45000*45000 << endl;
# endif

   kmin = INF;
   if ( s.find (n) != s.end () )
   {
      cout << "0";
      return 0;
   }

   ok = false;
   q.push (n);
   for ( int i=1; ! q.empty (); i++ )
   {
//   	  int x = q.front (); q.pop ();
   	  int x = q.top (); q.pop ();
      int dx = F (x);

# ifndef ONLINE_JUDGE
//   cout << "**** " << x << " " << dx << endl;
# endif

      if ( s.find (x) != s.end () )
      {
         k = d - dx;
         ok = true;
         if ( k < kmin )
            kmin = k;

# ifndef ONLINE_JUDGE
   cout << "***** " << x << endl;
# endif
//         break;
      }

   	  if ( x > 9 )
         for ( int j (0), p (1); j < dx; j++, p*=10 )
	     {
	        int kk = x/p/10*p + x%p;

            if ( s.find (kk) != s.end () )
            {
               k = d - F (kk);
               ok = true;
               if ( k < kmin )
                  kmin = k;

# ifndef ONLINE_JUDGE
   cout << "***** " << kk << " " << k << " " << kmin << endl;
# endif
//               break;
            }

# ifndef ONLINE_JUDGE
//   cout << "**** " << kk << endl;
//   cout << kk << endl;
# endif

  	        if ( kk > 0 && t.find (kk) == t.end () )
  	        {
	           q.push (kk);
	           t.insert (kk);
  	        }
	     }
/*
      if ( ok )
	     break;
*/
   }

   if ( kmin == INF )
      kmin = -1;

   cout << kmin;

//   system ("pause");
   return 0;
}

int F (int n)
{
   int nn = n, d = 0;
   for ( d=0; nn > 0; d++ )
      nn /= 10;
   return d;
}

