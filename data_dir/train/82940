#include <bits/stdc++.h>

using namespace std;

typedef unsigned uint;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ldbl;
typedef pair<int, int> pii;
typedef pair<uint, uint> puu;
typedef pair<ll, ll> pll;
typedef pair<ull, ull> pull;
typedef pair<double, double> pdd;
typedef vector<int> vi;
typedef vector<uint> vu;
typedef vector<ll> vll;
typedef vector<ull> vull;
typedef vector<pii> vpii;
typedef vector<puu> vpuu;
typedef vector<pll> vpll;
typedef vector<pull> vpull;
typedef vector<string> vstr;
typedef vector<double> vdbl;
typedef vector<ldbl> vldbl;
#define pb push_back
#define ppb pop_back
#define pfr push_front
#define ppfr pop_front
#define emp emplace
#define empb emplace_back
#define be begin
#define rbe rbegin
#define all(x) (x).be(), (x).end()
#define rall(x) (x).rbe(), (x).rend()
#define fir first
#define sec second
#define mkp make_pair
#define brif(cond) if (cond) break
#define ctif(cond) if (cond) continue
#define retif(cond) if (cond) return
void canhazfast() {ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}
template<typename T> T gcd(T a, T b) {return b ? gcd(b, a%b) : a;}
template<typename T> T extgcd(T a, T b, T &x, T &y)
{
    T x0 = 1, y0 = 0, x1 = 0, y1 = 1;
    while (b) {
        T q = a/b; a %= b; swap(a, b);
        x0 -= q*x1; swap(x0, x1);
        y0 -= q*y1; swap(y0, y1);
    }
    x = x0; y = y0; return a;
}
int ctz(uint x) {return __builtin_ctz(x);}
int ctzll(ull x) {return __builtin_ctzll(x);}
int clz(uint x) {return __builtin_clz(x);}
int clzll(ull x) {return __builtin_clzll(x);}
int popcnt(uint x) {return __builtin_popcount(x);}
int popcntll(ull x) {return __builtin_popcountll(x);}
int bsr(uint x) {return 31^clz(x);}
int bsrll(ull x) {return 63^clzll(x);}

#define MX 300016

int pos[20];
bool ans[MX];
vpii wh[MX];
int a[MX];
int dp[MX][20];

int main()
{
    canhazfast();

    int n, q;

    cin >> n >> q;
    for (int i = 0; i < n; ++i) cin >> a[i];
    for (int i = 0; i < q; ++i) {
        int x, y;
        cin >> x >> y;
        --x; --y;
        wh[x].empb(y, i);
    }
    fill_n(pos, 19, n);
    fill_n(dp[n], 19, n);
    for (int i = n-1; i >= 0; --i) {
        fill_n(dp[i], 19, n);
        for (int j = 0; j < 19; ++j) {
            ctif(!(a[i]&(1<<j)));
            dp[i][j] = i;
            int p = pos[j];
            pos[j] = i;
            for (int k = 0; k < 19; ++k) dp[i][k] = min(dp[i][k], dp[p][k]);
        }
        for (const pii &qq : wh[i]) {
            int y = qq.fir, j = qq.sec;
            bool res = false;
            for (int k = 0; k < 19; ++k) {
                if (a[y]&(1<<k) && y >= dp[i][k]) {
                    res = true;
                    break;
                }
            }
            ans[j] = res;
        }
    }
    for (int i = 0; i < q; ++i) cout << (ans[i] ? "Shi\n" : "Fou\n");
    /*cerr << "dp:\ni\t0\t1\n";
    for (int i = 0; i < n; ++i) {
        cerr << i << '\t' << dp[i][0] << '\t' << dp[i][1] << '\n';
    }*/

    return 0;
}
