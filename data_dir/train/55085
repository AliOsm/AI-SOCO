#include <bits/stdc++.h>

using namespace std;
void macro(){
#define pb push_back
#define cinv(x,n) {for (int i=0;i<n;i++){int t; cin >> t; x.pb(t);}}
#define pii pair<int,int>
#define all(x) x.begin(),x.end()
#define fi first
#define INF (1<<30)
#define MOD (1e9+7)
#define E5 (1e5+5)
#define E6 (1e6+5)
#define PI 3.14159265359
#define bitcnt(x) (__builtin_popcount(x))
#define B ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define sz(x) (int(x.size()))
#define se second
#define reset(x) memset(x,0,sizeof x)
#define gcd(x,y) __gcd(x,y)
#define lcm(x,y) x*y/gcd(x,y)
#define bug(x) cerr << #x << " is " << x << endl
#define veci vector<int>
}
typedef long long lint;
typedef long double LongD;
struct point {
  LongD x, y;
  point(LongD a = 0, LongD b = 0) : x(a), y(b) {}
  void operator=(const point& a) { x = a.x; y = a.y; }
  point operator+(const point& a) const { point p(x + a.x, y + a.y); return p; }
  point operator-(const point& a) const { point p(x - a.x, y - a.y); return p; }
  LongD Norm() const {
    return sqrt(x * x + y * y);
  }
  LongD dis(const point& a) const {
    return (*this - a).Norm();
  }
  LongD Angle() const {
    return atan2(y, x);
  }
};
bool asc(int a,int b){
	return (a>b);
}
string bin(int a){
string s;
while(a)
	s.pb(a%2+'0'),a/=2;
reverse(all(s));
return s;
}
int pw(int a, int n, int K=MOD) {
    return (n? (pw((a * a) % K, n / 2ll, K) * (n & 1ll? a: 1ll)) % K: 1ll);
}
int lowbit(int m){
    for (int i=0;i<100;i++) if ((m & (1 << (i)))) return (1<<i);
    return 0;
}
int debase(int val,int base){
	int p = 0,res=0;
	while(val)
		res+=(val%base)*pw(10,p),p++,val/=base;
	return res;
}

lint ans;
string s;

bool f3(int i){
	return (((s[i]-'0')+(s[i-1]-'0')*10+(s[i-2]-'0')*100)%4==0);
}
bool f2(int i){
	return (((s[i]-'0')+(s[i-1]-'0')*10)%4==0);
}
bool f1(int i){
	return ((s[i]-'0')%4==0);
}
int main(){B
	cin >> s;
	for (int i=0;i<s.size();i++){
		if (f3(i) && (i>1))
			ans+=i-1;
		if (i>0)
			ans+=f2(i);
		ans+=f1(i);
	}
	cout << ans;
}

