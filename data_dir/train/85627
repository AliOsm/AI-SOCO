#include <bits/stdc++.h>
#define ll long long
using namespace std;
ll n, k, x;
const ll N = 2e5 + 5;
ll a[N];
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cin >> n >> k >> x;
	bool neg = 0;
	ll ma = 1e9 + 5, mi = -1e9 - 5;
	ll cnt = 0;
	for (ll i = 0; i < n; i++)
	{
		cin >> a[i];
		if (a[i] < 0)
			neg = !neg;
		if (a[i] == 0)
			cnt++;
		if (a[i] >= 0)
			ma = min(ma, a[i]);
		else
			mi = max(mi, a[i]);
	}
	if (neg)
	{
		for (ll i = 0; i < n && k; i++)
		{
			if (a[i] == 0)
				a[i] += x, k--;
		}
	}
	else
	{

		for (ll i = 0; i < n && k; i++)
		{
			if (a[i] == 0 && !neg)
				a[i] = -x, k--, neg = !neg;
			else if (a[i] == 0)
				a[i] = x, k--;
		}
		if (!neg)
		{
			ll temp = min(-mi, ma);
			if (k * x >= temp)
			{
				neg = 1;
				if (-mi <= ma)
				{
					for (int i = 0; i < n; i++)
					{
						if (a[i] == mi)
						{
							while (k && a[i] <= 0)
								a[i] += x, k--;
							break;
						}
					}
				}
				else
				{
					for (int i = 0; i < n; i++)
					{
						if (a[i] == ma)
						{
							while (k && a[i] >= 0)
								a[i] -= x, k--;
							break;
						}
					}
				}
			}
		}
	}
	priority_queue<pair<ll, int> > pq;
	for (int i = 0; i < n; i++)
	{
		if (a[i] < 0)
			pq.push(make_pair(a[i], i));
		else
			pq.push(make_pair(-a[i], i));
	}
	while (k > 0)
	{
		ll t = -pq.top().first;
		int ind = pq.top().second;
		bool s;
		if (a[ind] < 0)
			s = 1;
		else
			s = 0;
		pq.pop();
		if (neg)
			t += x;
		else
			t -= x;
		pq.push(make_pair(-t, ind));
		k--;
	}
	while (pq.size())
	{
		ll t = -pq.top().first;
		int ind = pq.top().second;
		bool s = 0;
		if (a[ind] < 0)
			s = 1;
		a[ind] = t;
		if (s)
			a[ind] *= -1;
		pq.pop();
	}
	for (ll i = 0; i < n; i++)
		cout << a[i] << " ";
	return 0;

}
