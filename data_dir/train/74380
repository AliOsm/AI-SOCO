/**************************************************************
 Problem: 3224
 User: suda1230705082
 Language: C++
 Result: Runtime_Error
 ****************************************************************/

#include<stdio.h>
#include<string.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<deque>
#include<vector>
#include<set>
//#include<bits/stdc++.h>
//#include<tr1/unordered_map>
using namespace std;
long long MODA = 100000909770901ll;
long long MODB = 100000002135407ll;
const int MAXN = 200050;

inline void print(char pt) {
	printf("%c\n", pt);
}
inline void print(int pt) {
	printf("%d\n", pt);
}
inline void print(long long pt) {
	printf("%I64d\n", pt);
}
inline void print(double pt) {
	printf("%.20f\n", pt);
}
inline void print(char pt[]) {
	printf("%s\n", pt);
}
inline void print() {
	printf("\n");
}

inline void scan(int &pt) {
	scanf("%d", &pt);
}
inline void scan(char &pt) {
	scanf("%c", &pt);
}
inline void scan(long long &pt) {
	scanf("%I64d", &pt);
}
inline void scan(double &pt) {
	scanf("%lf", &pt);
}
inline void scan(char pt[]) {
	scanf("%s", pt);
}

struct str {
	char val[108];
	str() {
		memset(val, 0, sizeof(val));
	}
	friend int operator<(str a, str b) {
		return strcmp(a.val, b.val) < 0;
	}
};

//int gcd(int x, int y) {
//    return y ? gcd(y, x % y) : x;
//}
//int lcm(int x, int y) {
//    return x * (y / gcd(x, y));
//}
long long gcd(long long x, long long y) {
	return y ? gcd(y, x % y) : x;
}
long long lcm(long long x, long long y) {
	return x * (y / gcd(x, y));
}

int bits[50];
void getbits() {
	for (int i = 0; i < 30; i++) {
		bits[i] = 1 << i;
	}
}

long long Q_pow(long long x, long long y) {
	long long res = 1;
	while (y) {
		if (y % 2 == 1) {
			res *= x;
			res %= MODA;
		}
		x = x * x;
		x %= MODA;
//        if(x<=1e-5){
//            return 0;
//        }
		y /= 2;
	}
	return res;
}

struct pii {
	int x;
	int y;
	int i;
	friend int operator<(pii a, pii b) {
		if (a.x != b.x)
			return a.x < b.x;
		return a.y < b.y;
	}
};

int n;
long long v[100008];
long long dp[100008][2];
string s[100008][2];
int main() {
	memset(dp, 127, sizeof(dp));
	scan(n);
	for (int i = 0; i < n; i++) {
		scan(v[i]);
	}
	for (int i = 0; i < n; i++) {
		cin >> s[i][0];
		s[i][1] = string(s[i][0]);
		reverse(s[i][1].begin(), s[i][1].end());
	}
	dp[0][0] = 0;
	dp[0][1] = v[0];
	for (int i = 1; i < n; i++) {
		if (s[i][0] >= s[i - 1][0]) {
			dp[i][0] = min(dp[i][0], dp[i - 1][0]);
		}
		if (s[i][0] >= s[i - 1][1]) {
			dp[i][0] = min(dp[i][0], dp[i - 1][1]);
		}
		if (s[i][1] >= s[i - 1][0]) {
			dp[i][1] = min(dp[i][1], dp[i - 1][0] + v[i]);
		}
		if (s[i][1] >= s[i - 1][1]) {
			dp[i][1] = min(dp[i][1], dp[i - 1][1] + v[i]);
		}
	}

//	for (int i = 0; i < n; i++) {
//		cout << dp[i][0] << "  " << dp[i][1] << endl;
//	}

	long long ansa = min(dp[n - 1][0], dp[n - 1][1]);
	if (ansa > (1ll << 60)) {
		print(-1);
	} else {
		print(ansa);
	}

	return 0;
}
