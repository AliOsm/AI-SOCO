#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <cstdio>
#include <stdio.h>
#include <fstream>
#include <map>
#include <set>
#include <cstdlib>
#include <queue>
#include <math.h>
#include <iterator>
#include <cmath>
#include <cstring>
#include <stdlib.h>
#include <stack>
#include <iomanip>
#define ll long long
#define endl '\n'
#define ull unsigned long long
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pull pair<ull,ull>
#define ff first
#define ss second
#define triple pair< ll, pair<ll,ll> >
#define mt(x,y,z) mp(x,mp(y,z))
#define fir first
#define sec second.first
#define thi second.second
#define quad pair< pii , pii >
#define mq(a,b,c,d) mp(mp(a,b),mp(c,d))
#define firr ff.ff
#define secc ff.ss
#define thir ss.ff
#define forr ss.ss
ll MOD=1000000007;
ll inf=1e18;
using namespace std;
ll POW(ll a,ll b,ll c){
    long long x=1,y=a; // long long is taken to avoid overflow of intermediate results
    while(b > 0){
        if(b%2 == 1){
            x=(x*y)%c;
        }
        y = (y*y)%c; // squaring the base
        b /= 2;
    }
    return x%c;
}
ll cnt[10];
ll num[10];
string L[100001];
ll Ten[1000001];
string s,h;
int main()
{
    ios::sync_with_stdio(0);
	Ten[0]=1;
	ll i,n,d,x,c,e,t,f;
	getline(cin,h);
	cin>>n;
	getline(cin,s);
	for(i=0;i<n;i++)
	{
		getline(cin,s);
		L[i]=s;
	}
	for(i=0;i<10;i++){num[i]=i;cnt[i]=1;}
	ll u,j;
	for(i=n-1;i>=0;i--)
	{
		s=L[i];
		d=s[0]-'0';
		x=0;
		c=0;
		u=1;
		for(j=s.size()-1;j>=3;j--)
		{
			x+=(num[s[j]-'0']*u)%MOD;x%=MOD;
			u*=POW(10,cnt[s[j]-'0'],MOD);u%=MOD;
			c+=cnt[s[j]-'0'];c%=MOD-1;
		}
		num[d]=x;
		cnt[d]=c;
	}
	ll ans=0;u=1;c=0;
	for(j=h.size()-1;j>=0;j--)
	{
		ans+=num[h[j]-'0']*u;ans%=MOD;
		u*=POW(10,cnt[h[j]-'0'],MOD);u%=MOD;
		c+=cnt[h[j]-'0'];c%=MOD-1;
	}
	cout<<ans;
	
	
   
    return 0;
}