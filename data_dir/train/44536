#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
#include <tuple>
using namespace std;

#define PB push_back
#define MP make_pair

#define rep(i,n) for(int i=0;i<(n);++i)
#define REP(i,n) for(int i=1;i<=(n);++i)
#define FOR(i,l,h) for(int i=(l);i<=(h);++i)
#define FORD(i,h,l) for(int i=(h);i>=(l);--i)
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl
#define tr(it,c) for(auto it=(c).begin(); it!=(c).end(); ++it)

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long ll;
typedef pair<int, int> pii;

int n;

int pa(int *a) {
    if (all_of(a+1, a+10, [](int c) {return c==0;})) return puts("0"), 0;
    FORD(i, 9, 0) while (a[i]--) cout << i;
    cout << endl;
    return 0;
}

int main(void) {
    int a[10]={};
    cin >> n;

    rep(i, n) {
        char c;
        cin >> c;
        a[c - '0']++;
    }
    if (n == 1) return puts(a[0] == 1 ? "0" : "-1"), 0;
    if (!a[0]) return puts("-1"), 0;
    int sum = 0;
    rep(i, 10) sum += i * a[i];
    sum %= 3;
    if (sum == 1) {
        for (int i :{1, 4, 7}) {
            if (a[i]) return --a[i], pa(a);
        }
        for (int i :{2, 5, 8}) {
            if (a[i] >= 2) return a[i] -= 2, pa(a);
        }
        if (a[2] && a[5]) return --a[2],--a[5], pa(a);
        if (a[2] && a[8]) return --a[2],--a[8], pa(a);
        if (a[5] && a[8]) return --a[5],--a[8], pa(a);

        return puts("0"), 0;
    }
    if (sum == 2) {
        for (int i :{2, 5, 8}) {
            if (a[i]) return --a[i], pa(a);
        }
        for (int i :{1, 4, 7}) {
            if (a[i] >= 2) return a[i] -= 2, pa(a);
        }
        if (a[1] && a[4]) return --a[1], --a[4], pa(a);
        if (a[1] && a[7]) return --a[1], --a[7], pa(a);
        if (a[4] && a[7]) return --a[4], --a[7], pa(a);

        return puts("0"), 0;
    }
    return pa(a);
}
