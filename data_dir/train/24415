#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <iterator>

using namespace std;

int main()
{
	int n, m;
	vector<string> v;
	cin >> n >> m;

	copy_n (istream_iterator<string>(cin), n, back_inserter(v));

	vector<string>::iterator it;
	int cnt = 0;

	while ((it = is_sorted_until (v.begin(), v.end())) != v.end()) {

		pair<string::iterator, string::iterator> p;
		p = mismatch ((it - 1)->begin(), (it - 1)->end(), it->begin());

		size_t pos = distance (it->begin(), p.second);	
		for_each (v.begin(), v.end(), [pos](string &s) { s.erase (pos, 1); }); 

		cnt++;
	}

	ostream_iterator<int>(cout, "") = cnt;
}
