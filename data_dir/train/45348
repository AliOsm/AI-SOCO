#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
using namespace std;
#define F first
#define S second
#define pb push_back
#define MP make_pair
#define ALL(x) begin(x), end(x)
#define SZ(x) (int)(x).size()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define rep1(i, a, b) for(int i = a; i < b; ++i)
#define per1(i, a, b) for(int i = a; i >= b; --i)
#define IOS ios_base::sync_with_stdio(0); cin.tie(0)
typedef long long LL;
typedef long double LDB;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
//////////////////////
const long double eps = 1e-13;
const long double PI = acos(-1);
const int INF = (int)1e9;
const LL  INFF = (LL)1e18;
const int mod = (int)1e9 + 7;
const int MXN = (int)1e5 + 7;
int n;
string s[MXN];
map<int, int>mp[MXN];
int cntp;
int ans = 0;
int go(int l, int r, int dep){
	bool gg = 0;
	int cur = ++cntp;
	if(l == r && dep >= 1){
		ans -= s[l].length() - dep;
		mp[cur][dep]++;
		return cur;
	}
	if(s[l].length() == dep){
		l++; gg = 1;
		mp[cur][dep]++;
	}
	if(l > r) return cur;
	rep1(i, l, r+1){
			int ll = i + 1, rr = r, ok = i;
			while(ll <= rr){
				int mid = (ll + rr) >> 1;
				if(s[i].length() == dep - 1) rr = mid - 1;
				else if(s[i][dep] == s[mid][dep]) ll = mid + 1, ok = mid;
				else rr = mid - 1;
			}
			int p = go(i, ok, dep + 1);
			if(SZ(mp[cur]) < SZ(mp[p])) swap(p, cur);
			for(auto it : mp[p])
				mp[cur][it.F] += it.S;
			i = ok;
	}
	if(gg || !dep) return cur;
	auto it = --mp[cur].end();
	ans -= it->F - dep;
	if(!(--mp[cur][it->F])) mp[cur].erase(it->F);
	mp[cur][dep]++;
	return cur;
}
int main(void){
	IOS;
	cin >> n;
	rep1(i, 1, n+1) cin >> s[i];
	rep1(i, 1, n+1) ans += s[i].length();
	sort(s + 1, s + n + 1);
	go(1, n, 0);
	cout << ans << endl;
	return 0;
}
