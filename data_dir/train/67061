#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
using namespace std;

#define ENGZ ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define sfl(x) scanf("%I64d" , &x)
#define sfl2(x, y) scanf("%I64d%I64d" , &x,&y)
#define sfi(x) scanf("%d" , &x)
#define sfi2(x, y) scanf("%d%d" , &x,&y)
#define sfd(x) scanf("%lf", &x)
#define sfd2(x, y) scanf("%lf", &x, &y)
#define sfc(x) scanf("%c", &x)
#define mod 998244353
#define pi (2*acos(0))
typedef long long ll;
#define endl '\n'
//freopen("cubes.in", "r", stdin);

int n, a[100005], b[100005];
bool dp[100006][5];
vector<int> ve, v;

void solve(int i)
{
	if (i == n - 1)
	{
		v = ve;
		return;
	}
	for (int k = 0; k < 4 && v.empty(); k++)
	{
		if (!dp[i][k] && (k & ve[ve.size() - 1]) == b[i] && (k | ve[ve.size() - 1]) == a[i])
			dp[i][k] = true, ve.push_back(k), solve(i + 1), ve.pop_back();
	}
}

int main()
{
	cin >> n;
	bool ans = false;
	int tr;
	for (int i = 0; i < n - 1; i++)
		cin >> a[i];
	for (int i = 0; i < n - 1; i++)
		cin >> b[i];
	for (int i = 0; i < 4 && v.empty(); i++)
	{
		ve.clear();
		ve.push_back(i);
		solve(0);
	}
	if (v.empty())
		return cout << "NO", 0;
	cout << "YES\n";
	for (int i = 0; i < v.size(); i++)
		cout << v[i] << ' ';
	return 0;
}

