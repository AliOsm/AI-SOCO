#include <bits/stdc++.h>
using namespace std;

struct req
{
	int x, y, t;
};

int n, m, k, q;
vector<req> arr;
vector<vector<int> > dp;

bool cmp(const req &a, const req &b)
{
	return a.t < b.t;
}

int get(int a, int b, int c, int d)
{
	int ans = dp[a][b];
	if(c > 0)
	{
		ans -= dp[c - 1][b];
	}
	if(d > 0)
	{
		ans -= dp[a][d - 1];
	}
	if(c > 0 && d > 0)
	{
		ans += dp[c - 1][d - 1];
	}

	return ans;
}

bool check(int num)
{
	dp.resize(n);
	for(int i = 0; i < n; ++i)
	{
		dp[i].assign(m, 0);
	}
	for(int i = 0; i <= num; ++i)
	{
		dp[arr[i].x][arr[i].y]++;
	}
	for(int i = 0; i < n; ++i)
	{
		for(int j = 0; j < m; ++j)
		{
			if(i > 0)
			{
				dp[i][j] += dp[i - 1][j];
			}
			if(j > 0)
			{
				dp[i][j] += dp[i][j - 1];
			}
			if(i > 0 && j > 0)
			{
				dp[i][j] -= dp[i - 1][j - 1];
			}
		}
	}
	for(int i = 0; i + k - 1 < n; ++i)
	{
		for(int j = 0; j + k - 1 < m; ++j)
		{
			if(get(i + k - 1, j + k - 1, i, j) == k * k)
			{
				return true;
			}
		}
	}

	return false;
}

int main (int argc, char *argv[])
{
	//FILE *in = freopen("input.txt", "r", stdin);

	scanf("%d%d%d%d", &n, &m, &k, &q);
	arr.resize(q);
	for(int i = 0; i < q; ++i)	
	{
		scanf("%d%d%d", &arr[i].x, &arr[i].y, &arr[i].t);
		--arr[i].x; --arr[i].y;
	}
	sort(arr.begin(), arr.end(), cmp);
	int l = 0,
		r = q;
	while(l != r)
	{
		int mid = (l + r) / 2;
		if(check(mid))
		{
			r = mid;
		} else
		{
			l = mid + 1;
		}
	}
	if(l == q)
	{
		printf("-1");
	} else
	{
		printf("%d", arr[l].t);
	}

	return 0;
}

