#include <iostream>
#include <algorithm>
#include <string>
#include <ctype.h>
#include<queue>
#include <vector>
#include <set>
#include<cmath>
//#include<bits/stdc++.h>
#include<unordered_map>
#include <map>
#include<stack>
#include<list>
#include<iomanip>
using namespace std;
#define ll long long
#define MAX 100000+5
#define MOD 100000000
#define INF 100000000000000000
ll n, x, y;
int dx[] = { 1, 0, -1, 0, 1, -1, -1, 1 };
int dy[] = { 0, 1, 0, -1, 1, 1, -1, -1 };
int valid(int i, int j){
	if (i >= 1 && i <= 8 && j >= 1 && j <= 8)return 1;
	else return 0;
}
void swp(int i, int j, string &s){
	for ( i; i <= j; i++){
		if (s[i] == 'a')s[i] = 'z';
		else s[i]--;
	}
}
int main()
{
	ll a, b, c, d;
	cin >> a >> b >> c >> d;
	deque<char>de;
	ll z = 0, o = 0, a1 = a, a2 = d;
	for (int i = 1; i <= 1000000; i++){
		if (a1 >= i)a1 -= i, z++;
		if (a2 >= i)a2 -= i, o++;
	}
	o++;
	z++;
	if (a1||a2)cout << "Impossible";
	else if (!a&&!b&&!c&&!d)cout << 1;
	else if (!b&&!c&&o > 1 && z > 1)cout << "Impossible";
	else if (z + o > 1000000)cout << "Impossible";
	else  if (b + c > z*o)	cout << "Impossible";
	else if ((z&&((b + c)%z != 0 ))||(o &&((b + c)%o != 0)))cout << "Impossible";
	else {
		if (c == 0 && b == 0 && a == 0)z = 0;
		if (c == 0 && b == c&&d == 0)o = 0;
		for (int i = 0; i < z; i++)de.push_back('0');
		for (int i = 0; i < o; i++)de.push_back('1');
		ll _01 = z*o;
		ll _10 = 0;
		while (_01>b){
			if (_01 - o >= b){
				de.pop_front();
				de.push_back('0');
				_01 -= o;
			}
			else {
				int cnt = _01 - b;
				deque<char>::iterator it = de.begin();
				for (int i = 0; i < de.size(); i++){
					if (de[i] == '1'){
						cnt--;
					}
					it++;
					if (cnt == 0){
						c = i;
						break;
					}
				}
				de.insert(it, '0');
				de.pop_front();
				break;
			}
		}

		for (int i = 0; i < de.size(); i++)
			cout << de[i];
	}
	
	//system ("pause");
	//return 0;
}