#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cmath>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <iomanip>
#include <algorithm>
#include <stack>
using namespace std;

typedef long long ll;
#define double long double

int L[100001];
int R[100001];
int data[100001];

ll tot;
double cnt;
int n;
void calc(int k)
{
    if(k==0)
    {
        int temp = 0;
        for(int j=0;j<n;++j)
        {
            for(int p=j+1;p<n;++p)
            {
                if(data[p]<data[j])
                    ++temp;
            }
        }

        cnt += temp;
        ++tot;
        return;
    }
    for(int i=0;i<n;++i)
    {
        for(int j=i;j<n;++j)
        {
            for(int p=0;p<(j-i+1)/2;++p)
            {
                swap(data[i+p],data[j-p]);
            }

            calc(k-1);
            
            for(int p=0;p<(j-i+1)/2;++p)
            {
                swap(data[i+p],data[j-p]);
            }
        }
    }
}

int main()
{
    int k;
    cin >> n >> k;
    for(int i=0;i<n;++i)
    {
        cin >> data[i];
    }

    calc(k);

    cout << fixed << setprecision(12) << cnt/tot;
    return 0;
}


/*

    int n;

    cin >> n;

    for(int i=0;i<n;++i)
    {
        cin >> L[i] >> R[i];
        for(int j=L[i];j<=R[i];++j)
        {
            ++data[j];
        }
    }
    double ans = 0;
    ll tot = 0;
    for(int i=0;i<n;++i)
    {
        for(int j=L[i];j<=R[i];++j)
        {
            bool bad = false;
            
            int gL = 0;

            for(int k=0;k<n;++k)
            {
                if(i==k)continue;
                gL = max(gL,L[k]);
            }
            if(gL>j)
                continue;

            double temp = 0;
            int cnt = 0;

            for(int k=0;k<n;++k)
            {
                if(i==k)continue;

                int left = max(gL,L[k]);
                int right= min(j,R[k]);

                int T = left-1;
                int D = right-left+1;
                temp += D*(D+1)/2 + D*T;
                cnt += D;
                
                cout << left << ' ' << right <<' ' <<  
                    k << ' ' << temp << ' ' << cnt << endl;
            }
            
            ans += temp/cnt;
            ++ tot;
        }
    }
    cout << fixed << setprecision(12) << ans/tot;///cnt;
    */