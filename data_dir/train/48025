#include <bits/stdc++.h>

using namespace std;

#define fr first
#define sc second
#define pb push_back
#define ins insert
#define input freopen("input.txt","r",stdin)
#define output freopen("output.txt","w",stdout)
#define mp make_pair
#define fast_io ios_base::sync_with_stdio(0);
#define form(i,a,n) for (int i=(a);i<(n);i++)
#define forn(i,a,n) for (int i=(a);i<(n);i++)
//iterator , unsigned, begin, end, count, continue
// fixed setprecision

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<int> vi;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

string itosm(ll x){
    if(x == 0)
        return "0";
    string ans = "";
    while(x > 0){
        ans +=((x%10) + '0');
        x/=10;
    }
    reverse(ans.begin(), ans.end());
    return ans;
}

ll stoim(string str){
    ll ans = 0;
    ll k = 1;
    for(int i = str.length()-1; i >= 0; i--){
        ans+=(str[i]-'0')*k;
        k*=10;
    }
    return ans;
}

const ll infll = 1e18 + 3;
const int inf = 1009000999;
const double eps = 1e-7;
const int maxn = 1e6 + 777;
const int baseint = 1000200013;
const ll basell = 1e18 + 3;
const ld PI = acos(-1.0);
const ll mod = 1e9 + 7;

int a[1000][1000];
int b[1000][1000];
int sum[1000][1000];
int n, m, k, q;

bool check(int t){
    for(int i = 0; i < n; i++)
        for(int j = 0; j < m; j++)
            b[i][j] = (a[i][j] <= t);

    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++)
            sum[i + 1][j + 1] = sum[i + 1][j] + sum[i][j + 1] - sum[i][j] + b[i][j];

    }
    for(int i = 0; i + k <= n; i++){
        for(int j = 0; j + k <= m; j++){
            if(sum[i + k][j + k] + sum[i][j] - sum[i + k][j] - sum[i][j + k] == k * k)
                return 1;
        }
    }
    return 0;
}

void solve(){
    cin >> n >> m >> k >> q;
    for(int i = 0; i < n; i++)
        for(int j = 0; j < m; j++)
            a[i][j] = inf + 6;
    while(q--){
        int x, y, t;
        cin >> x >> y >> t;
        x--;
        y--;
        a[x][y] = t;
    }
    int l = 0, r = inf, mid;
    while(l < r){
        mid = (l + r)/2;
        if(check(mid))
            r = mid;
        else
            l = mid + 1;
    }
    if(l == inf)
        l = -1;
    cout << l;
}

int main(){
//    srand(228);
    srand(time(0));
    fast_io;
//    freopen("words.in", "r", stdin);
//    freopen("words.out", "w", stdout);
    // int t;
    // cin >> t;
//    scanf("%d", &t);
//    int cnt = 1;
    // while(t--){
//        printf("Case %d: ", cnt);
        solve();
        // cout << "\n";
//        puts("");
//        cnt++;
    // }
    return 0;
}
