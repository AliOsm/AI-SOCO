#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>

#define oo 1e9
#define pi 3.1415926536
#define all(x) x.begin(),x.end()
#define sorta(x) sort(all(x))
#define sortam(x,comp) sort(all(x),comp)
#define sortd(x) sort(x.rbegin(),x.rend())
#define sf(x) scanf("%d", &x);
#define sf2(x, y) scanf("%d %d", &x, &y);
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z);
#define sfll(x) scanf("%I64d", &x);
#define sfll2(x, y) scanf("%I64d %I64d", &x, &y);
#define sfll3(x, y, z) scanf("%I64d %I64d %I64d", &x, &y, &z);
#define sfd(x) scanf("%f", &x);
#define pr(x) printf("%d ", x);

typedef long long ll;
using namespace std;
int n, m;
string s;
int dp[2][100010][2];

int main() {
	int n, m;
	sf2(n, m);
	char s[100010];
	scanf("%s", s);

	int cntS = 0, mn = oo;
	for(int i = 0; i < m; i++) {
		if(s[i] == '(') cntS++;
		else cntS--;

		mn = min(mn, cntS);
	}

	int mod = 1e9 + 7;
	memset(dp, 0, sizeof dp);
	dp[0][0][0] = 1;
	for(int i = 0; i <= n - m; i++) {
		for(int j = 0; j <= n; j++) {
			if(j >= -mn && j + cntS >= 0 && j + cntS < 100010) dp[i % 2][j + cntS][1] = (dp[i % 2][j + cntS][1] + dp[i % 2][j][0]) % mod;
			dp[!(i % 2)][j][0] = dp[!(i % 2)][j][1] = 0;
		}

		for(int j = 0; j <= n; j++) {
			if(j + 1 >= 0) dp[!(i % 2)][j + 1][0] = (dp[!(i % 2)][j + 1][0] + dp[i % 2][j][0]) % mod;
			if(j - 1 >= 0) dp[!(i % 2)][j - 1][0] = (dp[!(i % 2)][j - 1][0] + dp[i % 2][j][0]) % mod;
			if(j + 1 >= 0) dp[!(i % 2)][j + 1][1] = (dp[!(i % 2)][j + 1][1] + dp[i % 2][j][1]) % mod;
			if(j - 1 >= 0) dp[!(i % 2)][j - 1][1] = (dp[!(i % 2)][j - 1][1] + dp[i % 2][j][1]) % mod;
		}
	}

	cout << dp[(n - m) % 2][0][1] % mod << endl;
	return 0;
}