#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define MAX ((int)(1e9 + 5))
#define MAXL ((ll)(1e18 + 5))
#define MAX_X ((int)(1e6 + 2))
#define pi (2.0*acos(0))
#define M ((int)(1e9 + 7))
#define NN ((ll)(305))
#define N ((int)(1e6 + 5))
#define eps (0)
#define fastio ios_base::sync_with_stdio(false),cin.tie(NULL)
#define logn 29
#define endl "\n"

//#define int ll


using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef unsigned long long ull;

/*fast io
ios_base::sync_with_stdio(false);
cin.tie(NULL);
*/


typedef tree < int ,  null_type,  less < int >,  rb_tree_tag,  tree_order_statistics_node_update > o_set;
/// o_set s;
/// s.order_of_key(k) : Number of items strictly smaller than k .
/// *(s.find_by_order(k)) : K-th element in a set (counting from zero).

int mxx[N], sum[N];

bool vis[N];

int main()
{
    fastio;
    int n;
    cin>>n;
    ll ans = 0;
    int cnt = 0;
    for(int i = 1; i<=n; i++){
        int mnn = MAX;
        mxx[i] = 0;
        int a;
        cin>>a;
        int last = MAX;
        bool flag = 0;
        while(a--){
            int b;
            cin>>b;
            if(b>last) flag = 1;
            last = b;
            mnn = min(mnn,b);
            mxx[i] = max(mxx[i],b);
        }
        if(flag){
            cnt++;
            vis[i] = 1;
        }
        else sum[mnn]++;
    }
    for(int i = 1; i<N; i++){
        sum[i] += sum[i-1];
    }
    //cout<<ans<<endl;
    ans += (ll)cnt*(4*n - 2 - 2*(cnt-1))/2;
    for(int i = 1; i<=n; i++){
        if(vis[i]) continue;
        int a = mxx[i];
        if(a>0) ans += sum[a-1];
    }
    cout<<ans<<endl;
    return 0;
}
