#include <bits/stdc++.h>
using namespace std;

const int MAX = 3e5 + 5;
int q, n, k, t[3][3][MAX], ans;
char a[MAX];

int getId(char c) {
	if(c == 'R')
		return 0;

	if(c == 'G')
		return 1;

	return 2;
}

int get(int i, int j, int x, int y) {
	if(i == 0)
		return t[x][y][j];

	return t[x][y][j] - t[x][y][i - 1];
}

int calc(int k, int r) {
	r++;

	if(k < r)
		return 0;

	return (k - r) / 3 + 1;
}

void doit(int i, int j, int a, int b, int c) {
	int T1 = calc(k, 0);
	int T2 = calc(k, 1);
	int T3 = calc(k, 2);

	int c1 = get(i, j, a, i % 3);
	int c2 = get(i, j, b, ((i % 3) + 1) % 3);
	int c3 = get(i, j, c, ((i % 3) + 2) % 3);

	// printf("i = %d, j = %d, a = %d, b = %d, c = %d\n", i, j, a, b, c);
	// printf("T1 = %d, c1 = %d\n", T1, c1);
	// printf("T2 = %d, c2 = %d\n", T2, c2);
	// printf("T3 = %d, c3 = %d\n", T3, c3);

	assert(c1 <= T1);
	assert(c2 <= T2);
	assert(c3 <= T3);

	int bad = T1 - c1 + T2 - c2 + T3 - c3;

	ans = min(ans, bad);
}

int main() {
	scanf("%d", &q);

	while(q--) {
		scanf("%d%d", &n, &k);
		scanf("%s", a);

		for(int i = 0; i < n; i++) {
			int id = getId(a[i]);

			for(int x = 0; x < 3; x++)
				for(int y = 0; y < 3; y++)
					t[x][y][i] = t[x][y][i - 1];

			t[id][i % 3][i]++;
		}

		ans = 1e9;
		for(int i = 0; i < n; i++) {
			if(i + k - 1 >= n)
				break;

			doit(i, i + k - 1, 0, 1, 2);
			doit(i, i + k - 1, 1, 2, 0);
			doit(i, i + k - 1, 2, 0, 1);
		}

		printf("%d\n", ans);

		for(int i = 0; i < n; i++) {
			for(int x = 0; x < 3; x++) {
				for(int y = 0; y < 3; y++) {
					t[x][y][i] = 0;
				}
			}
		}
	}

	return 0;
}