#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;
long long a[100005];
int n;
int clr[100005];
int lst[100005];
long long dp[100005];
long long solve(long long v1, long long v2){
    long long best=0;
    long long best2=0;
    int t1=0,t2=0;
    memset(lst,0,sizeof(lst));
    dp[0]=0;
    for(int i=1;i<=n;++i)
    {
        long long b=best;
        if(clr[i]==t1)b=best2;
        if(lst[clr[i]]!=0)dp[i]=max(a[i]*v1 + dp[lst[clr[i]]],a[i]*v2 + b);
        else dp[i]=a[i]*v2 + b;
        if( dp[lst[clr[i]]] < dp[i] || lst[clr[i]]==0)
            lst[clr[i]]=i;
        if(clr[i]==t1)
        {
            if(best<dp[i])best=dp[i];
        }
        else {
            if(best2<dp[i])best2=dp[i],t2=clr[i];
        }
        if(best<best2)swap(best,best2),swap(t1,t2);
    }
    return best;
}
int main(){
int q;
    scanf("%d%d",&n,&q);
    for(int i=1;i<=n;++i)
        scanf("%I64d",&a[i]);
    for(int i=1;i<=n;++i)
        scanf("%d",&clr[i]);
    while(q--){
        int v1,v2;
        scanf("%d%d",&v1,&v2);
        printf("%I64d\n",solve(v1,v2));
    }
   // system("pause");
}