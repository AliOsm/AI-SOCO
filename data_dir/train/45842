#include<bits/stdc++.h>
using namespace std;
#define ll long long  int
#define mod 1000000007
#define INF 1000000000000
#define pi pair<ll,double>
#define pb push_back
#define mp make_pair
#define s second
#define f first
#define yup ios_base::sync_with_stdio(0)
#define yo cout<<"yo\n"
ll lps[100011]={0};
ll f[100011]={0};
ll dp[100011]={0};
ll dp1[100011]={0};
ll sum[100011]={0};
void compute_lps(string &t){
    lps[0]=0;
    ll i=1;
    ll len=0;
    while(i<t.length()){
    if(t[i]==t[len]){
        len++;
        lps[i]=len;
        i++;
    }
    else{
        if(len){
        len=lps[len-1];
        }
        else{
        lps[i]=0;
        i++;
        }
    }

    }
}
void kmp(string &s,string &t){
    ll i=0;
    ll j=0;
    while(i<s.length()){
    if(s[i]==t[j]){
        i++;
        j++;
    }
    if(j==t.length()){
       f[i-j]++;
       j=lps[j-1];
    }
    else if(i<s.length()&& t[j]!=s[i]){
        if(j)
        j=lps[j-1];
        else
        i++;
    }
    }
}
int main(){
    string s,t;
    cin>>s>>t;
    compute_lps(t);
    kmp(s,t);
    ll len=t.length();
    ll ans=0;
    for(int i=0;i<s.length();i++){
      if( i-len+1 >= 0 && f[ i - len + 1 ]!=0 ){
            dp[i]=i-len+2;
            if(i-len>=0) dp[i]+=sum[i-len];
      }
      else{
            if(i!=0) dp[i]=dp[i-1];
      }
      dp[i]%=mod;
      if(i!=0) dp1[i]=dp1[i-1]+dp[i];
      else dp1[i]=dp[i];
      dp1[i]%=mod;
      if(i!=0) sum[i]+=dp1[i]+sum[i-1];
      else sum[i]+=dp1[i];
      sum[i]%=mod;

    }
    cout<<dp1[(ll)s.length()-1];
}
