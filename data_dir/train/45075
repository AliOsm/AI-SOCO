// In the name of god
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iomanip>
#include <ctime>
#include <queue>
#include <set>
#include <map>
#include <vector>
#include <list>
#include <bitset>
#define sqr(a) ((a)*(a))
#define all(a) (a).begin(), (a).end()
using namespace std;
 
template <typename T>
T next_int() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if(ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return p * x;
}
 
string next_token() {
    char ch;
    string ans = "";
    do { ch = getchar(); } while(ch <= ' ');
    while(ch > ' ') {
        ans += ch;
        ch = getchar();
    }
    return ans;
}
 
const long long INF = (long long)1e18;
const int INFINT = (int)1e9 + 227 + 1;
const int MAXN = (int)1e6 + 227 + 1;    
const int MOD = (int)1e9 + 7;
const long double EPS = 1e-9;

long long bin_pow(long long a, long long b) {
    if(!b) return 1;
    long long ans = bin_pow(a, b / 2);
    ans = ans * ans % MOD;
    if(b % 2) ans = ans * a % MOD;
    return ans;
}

struct heh {
    long long a; 
    long long b;

    heh(long long a, long long b) {
        this -> a = a;
        this -> b = b;
    } ;

    heh() {
        this -> a = 0;
        this -> b = 0;
    } ;

    bool operator<(const heh& a) const {
        return (this -> a * a.b) < (a.a * this -> b);
    }
    bool operator<=(const heh& a) const {
        return (this -> a * a.b) <= (a.a * this -> b);
    }
    bool operator>(const heh& a) const {
        return (this -> a * a.b) > (a.a * this -> b);
    }
    bool operator==(const heh& a) const {
        return (this -> a * a.b) == (a.a * this -> b);
    }
} ;

vector<pair<heh, heh> > q;
const int score[6] = {500, 1000, 1500, 2000, 2500, 3000};

int check_score(heh a) {
    for(int i = 0; i < 5; i++)
        if(a > q[i].first && a <= q[i].second)
            return i;
    return 5;
}

heh b[MAXN];
int a[MAXN][5];

int n, m;

int kek[5];

bool checki(heh b, int num, int t, int i) {
    int l = 0;
    int r = num;

    if(a[0][i] == -1)
        r = 0;

    while(r - l > 1) {
        int c = (l + r) / 2;

        b.a += c;
        if(check_score(b) > t)
            l = c;
        else
            r = c;

        b.a -= c;
    }   

    b.a += l;
    if(check_score(b) == t)
        return 1;
    b.a -= l;

    b.a += r;
    if(check_score(b) == t)
        return 1;
    b.a -= r;

    return 0;
}

bool ansi;

void go(int p, int num) {
    if(ansi) return;

    if(p == 5) {
        long long ans[2] = {0, 0};
        for(int i = 0; i < 5; i++) {
            for(int j = 0; j < 2; j++) {
                long long mx = (kek[i] + 1) * 500;
                if(a[j][i] != -1) ans[j] += mx - (a[j][i] * mx / 250);
            }
        }

        if(ans[0] > ans[1])
            ansi = 1;

        return;
    }

    int start = check_score(b[p]);

    for(int i = start; i >= 0; i--)
        if(checki(b[p], num, i, p)) {
            kek[p] = i;

            go(p + 1, num);
        }
}

bool check(int num) {
    for(int i = 0; i < 5; i++)
        b[i].b = n + num;

    ansi = 0;

    go(0, num);

    return ansi;
}

int main() {
    // freopen(".in", "r", stdin);

    q.push_back(make_pair(heh(1, 2), heh(1, 1)));
    q.push_back(make_pair(heh(1, 4), heh(1, 2)));
    q.push_back(make_pair(heh(1, 8), heh(1, 4)));
    q.push_back(make_pair(heh(1, 16), heh(1, 8)));
    q.push_back(make_pair(heh(1, 32), heh(1, 16)));

    cin >> n;
    m = 5;

    for(int i = 0; i < m; i++) {
        b[i].b = n;
    }

    for(int i = 0; i < n; i++)
        for(int j = 0; j < m; j++) {
            cin >> a[i][j];

            b[j].a += (a[i][j] != -1);
        }

    for(int num = 0; num <= 1000; num++) {
        if(check(num)) {
            cout << num << "\n";
            return 0;
        }
    }

    long long l = 1001;
    long long r = MOD;
    while(r - l > 1) {
        long long c = (l + r) / 2;

        if(check(c))
            r = c;
        else
            l = c;
    }

    if(check(l))
        cout << l << "\n";
    else
    if(check(r))
        cout << r << "\n";
    else
        puts("-1");
}