//And isn't that a minor miracle?
//The state of the world today and the level of conflict and misunderstanding,
//that two men could stand on a lonely road in winter
//and talk calmly
//and rationally...
//while all around them,
//people are losing their mind.
#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <queue>
#include <set>
#include <map>
#include <stack>
#include <cmath>
#include <ctime>
#include <string>
#include <cstdlib>
#include <algorithm>
using namespace std;
#define read            freopen("C:\\Users\\USER\\Desktop\\in.txt", "r", stdin)
#define write           freopen("C:\\Users\\USER\\Desktop\\in.txt", "a", stdout)
#define pii             pair<int, int>
#define pll             pair<int, int>
#define inf             1<<30
#define in(a)           scanf("%I64d", &a)
#define ins(a)          scanf("%s", a)
#define in2(a, b)       scanf("%I64d%I64d", &a, &b)
#define in3(a, b, c)    scanf("%I64d%I64d%I64d", &a, &b, &c)
#define pn              printf("\n");
#define pr(a)           printf("%I64d\n", a)
#define prs(a)          printf("%I64d ", a)
#define pr2(a, b)       printf("%I64d %I64d\n", a, b)
#define pr3(a, b ,c)    printf("%I64d %I64d %I64d\n", a, b, c)
#define MP              make_pair
#define OP(a, b)        make_pair(MIN(a, b), MAX(a, b))
#define vi              vector<int>
#define vll             vector<int>
#define _ceil(n, a)     ((n)%(a)==0?((n)/(a)):((n)/(a)+1))
#define cl              clear()
#define sz              size()
#define pb              push_back
#define MEM(a, b)       memset((a), (b), sizeof(a))
#define MAX(A,B)        (((A)>(B))?(A):(B))
#define MIN(A,B)        (((A)<(B))?(A):(B))
#define all(X)          (X).begin(), (X).end ()
#define iter(it, X)     for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
#define ext(a)          {printf("%s\n", a); return 0;}
#define oka(x, y)       ((x)>=0&&(x)<row&&(y)>=0&&(y)<col)
typedef long long LL;
//LL  dx[]={1,0,-1,0};LL dy[]={0,1,0,-1}; //4 Direction
//LL  dx[]={1,1,0,-1,-1,-1,0,1};LL dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//LL  dx[]={2,1,-1,-2,-2,-1,1,2};LL dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//bool check(LL n, LL pos) {return (n & (1<<pos))>>pos;} //typecast 1 in case of int
//LL  on(LL n, LL pos) {return n | (1<<pos);} //typecast 1 in case of int
//LL  off(LL n, LL pos) {return n & ~(1<<pos);} //typecast 1 in case of int
//bool operator < (const data &d) const{return cost<d.cost;} //reverse in priority queue

/* ***************************************************************************************
   *************************************************************************************** */
const LL M=100000;
LL p[50][12];
int main()
{
#ifndef ONLINE_JUDGE
    read;
#endif
    LL a, d, A[100];
    LL i, j, k, awsum=0, bwsum=0;

    for (i=2; i<41; i++)
    {
        p[i][0]=1;
        for (j=1; j<12; j++) p[i][j]=i*p[i][j-1];
    }

    in2(d, a);
    for (i=0; i<d; i++) in(A[i]);

    for (i=d-1, j=0; i>=0; i--, j++) awsum+= A[i]*p[a][j];

    in2(d, a);
    for (i=0; i<d; i++) in(A[i]);

    for (i=d-1, j=0; i>=0; i--, j++) bwsum+= A[i]*p[a][j];


    if (awsum>bwsum) printf(">\n");
    if (awsum<bwsum) printf("<\n");
    if (awsum==bwsum) printf("=\n");

return 0;
}
