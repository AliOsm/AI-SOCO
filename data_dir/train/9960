#include<bits/stdc++.h>
#define pb push_back
using namespace std;
const int N = 500005, SGM = 26;
int n, q, sz[N], H[N], R[N], C[N][SGM];
char A[N];
vector < int > Adj[N], Q[N];
void PRE(int v)
{
    int rc = 0;
    sz[v] = 1;
    for (int &u : Adj[v])
    {
        PRE(u); sz[v] += sz[u];
        if (sz[u] > sz[rc])
            rc = u;
    }
    for (int i = 0; i < Adj[v].size(); i++)
        if (Adj[v][i] == rc)
            swap(Adj[v][i], Adj[v].back());
}
void Add(int v, int h, int val)
{
    C[h][A[v]] += val;
    for (int &u : Adj[v])
        Add(u, h + 1, val);
}
void DFS(int v, int h)
{
    for (int &u : Adj[v])
        if (u != Adj[v].back())
            DFS(u, h + 1), Add(u, h + 1, -1);
    if (Adj[v].size())
        DFS(Adj[v].back(), h + 1);
    for (int &u : Adj[v])
        if (u != Adj[v].back())
            Add(u, h + 1, 1);
    C[h][A[v]] ++;
    for (int &id : Q[v])
    {
        int c = 0;
        for (int i = 0; i < SGM; i++)
            c += C[H[id]][i] & 1;
        if (c < 2) R[id] = 1;
    }
}
int main()
{
    scanf("%d%d", &n, &q);
    for (int i = 2, p; i <= n; i++)
        scanf("%d", &p), Adj[p].pb(i);
    scanf("%s", &A[1]);
    for (int i = 1; i <= n; i++)
        A[i] -= 'a';
    for (int i = 1, v; i <= q; i++)
        scanf("%d%d", &v, &H[i]), Q[v].pb(i);
    PRE(1); DFS(1, 1);
    for (int i = 1; i <= q; i++)
        puts(R[i] ? "Yes" : "No");
    return (0);
}
