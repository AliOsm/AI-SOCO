#define _CRT_SECURE_NO_DEPRECATE
#define _CRT_SECURE_NO_WARINGS
#define _USE_MATH_DEFINES

#include <bits/stdc++.h>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
typedef pair<int64, int64> pll;

const int INF = (int)(1e9 + 1337);
const int64 LINF = (int64)(4e18);
const double EPS = (double)(1e-11);
#define sq(x) ((x)*(x))
#define FAIL() ((*(int*)(0))++)

struct dot
{
    double x, y;
    dot() {}
    dot(double x, double y) : x(x), y(y) {}
};

dot operator+(const dot &a, const dot &b)
{
    return dot(a.x + b.x, a.y + b.y);
}

dot operator-(const dot &a, const dot &b)
{
    return dot(a.x - b.x, a.y - b.y);
}

int n;
dot a[1010];

double dist(const dot &p, const dot &a, const dot &b)
{
    double A = a.y - b.y;
    double B = b.x - a.x;
    double C = A * a.x + B * a.y;
    return fabs(A * p.x + B * p.y - C) / sqrt(sq(A) + sq(B));
}

void solve()
{
    cin >> n;
    double ans = 1e18;
    for(int i = 0; i < n; i++)
        cin >> a[i].x >> a[i].y;

    for(int i = 0; i < n; i++)
    {
        int ni = i + 1;
        if(ni == n)
            ni = 0;
        int pi = i - 1;
        if(pi < 0)
            pi += n;
        ans = min(ans, dist(a[i], a[pi], a[ni]));
    }
    cout.precision(10);
    cout << fixed << ans / 2.0;
}

int main()
{
	ios_base::sync_with_stdio(false); cin.tie(0);
    solve();
}

