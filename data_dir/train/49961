#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_Node_update>
#define ll long long int
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
const ll M=1e5+5;
#define pii pair<ll,ll> 
ll n,k;
std::vector<ll> vtr[M];
ll level[M];
bool vis[M];
void solve()
{
	queue<ll> q;
	ll i,j;
	for(i=1;i<=n;i++)
	{
		if(vtr[i].size()==1)
		{
			q.push(i);
			level[i]=0;
		}
	}
	while(!q.empty())
	{
		ll u=q.front();
		q.pop();
		if(vis[u])
			continue;
		vis[u]=1;
		for(i=0;i<vtr[u].size();i++)
		{
			if(!vis[vtr[u][i]])
			{
				level[vtr[u][i]]=level[u]+1;
				q.push(vtr[u][i]);
			}
		}
	}
	bool mx=0;
	for(i=1;i<=n;i++)
	{
		ll eq=0,gt=0,lt=0;
		for(j=0;j<vtr[i].size();j++)
		{
			if(level[vtr[i][j]]==level[i]+1)
				gt++;
			else if(level[vtr[i][j]]+1==level[i])
				lt++;
			else
				eq++;
		}
		// cout<<eq<<" "<<lt<<" "<<gt<<endl;
		if(eq)
		{
			cout<<"No\n";
			return ;
		}
		if(gt>1)
		{
			cout<<"No\n";
			return ;
		}
		if(level[i]==0)
		{
			if(lt)
			{
				cout<<"No\n";
				return ;
			}
			continue;
		}
		if(lt<3)
		{
			cout<<"No\n";
			return ;
		}
		if(level[i]==k)
		{
			mx=1;
			if(gt)
			{
				cout<<"No\n";
				return;
			}
			continue;
		}
		if(gt==0)
		{
			cout<<"No\n";
			return;
			continue;
		}
	}
	if(mx==0)
	{
		cout<<"No\n";
		return;
	}
	cout<<"Yes\n";
	return;
}
int main()
{
	ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll u,v,i;
	cin>>n>>k;
	for(i=1;i<n;i++)
	{
		cin>>u>>v;
		vtr[u].pb(v);
		vtr[v].pb(u);
	}
	solve();
	return 0;
}