/*
  ------------------------- Hachiikung ---------------------------------
  ---------------------- Worrachate Bosri ------------------------------
  ------ Faculty of Computer Engineering Chulalongkorn University ------
*/
#include<cstdio>
/*#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<stack>
#include<list>
#include<set>
#include<map>
#include<string>
#include<utility>
using namespace std;*/
#define REP(i,FN) for(int i=0;i<FN;i++)
#define FOR(i,ST,FN) for(int i=ST;i<=FN;i++)
#define FORD(i,FN,ST) for(int i=FN;i>=ST;i--)
#define FORX(i,c) for(typeof(c.begin())i=c.begin();i!=c.end();i++)
#define pause system("pause")
#define S scanf
#define P printf
#define X first
#define Y second
#define pb push_back
#define PII pair<int,int>
#define mp make_pair
#define sz size()
#define eps 1e-8

#define min(X,Y) ((X) < (Y) ? (X) : (Y))
#define max(X,Y) ((X) > (Y) ? (X) : (Y))

const int MOD(1000000007);
const int INF((1<<30)-1);
const int MAXN(1005);

int n, m, a[MAXN][MAXN], u[MAXN][MAXN], d[MAXN][MAXN], l[MAXN][MAXN], r[MAXN][MAXN];

void fu(int j){

    FOR(i,1,n)
    {
        if(a[i][j])
        {
            if(i==1 || a[i-1][j]==0) u[i][j] = i;
            else u[i][j] = u[i-1][j];
        }
        else
        {
            u[i][j] = -1;
        }
    }
}

void fd(int j){

    FORD(i,n,1)
    {
        if(a[i][j])
        {
            if(i==n || a[i+1][j]==0) d[i][j] = i;
            else d[i][j] = d[i+1][j];
        }
        else
        {
            d[i][j] = -1;
        }
    }
}

void fl(int i){

    FOR(j,1,m)
    {
        if(a[i][j])
        {
            if(j==1 || a[i][j-1]==0) l[i][j] = j;
            else l[i][j] = l[i][j-1];
        }
        else
        {
            l[i][j] = -1;
        }
    }
}

void fr(int i){

    FORD(j,m,1)
    {
        if(a[i][j])
        {
            if(j==m || a[i][j+1]==0) r[i][j] = j;
            else r[i][j] = r[i][j+1];
        }
        else
        {
            r[i][j] = -1;
        }
    }
}

void preprocess(){

    FOR(j,1,m)
    {
        fu(j);
        fd(j);
    }

    FOR(i,1,n)
    {
        fl(i);
        fr(i);
    }
}

int main(){

    int q;
    S("%d%d%d",&n,&m,&q);
    FOR(i,1,n)
        FOR(j,1,m)
            S("%d",&a[i][j]);

    preprocess();

    while(q--)
    {
        int t,x,y;
        S("%d%d%d",&t,&x,&y);

        if(t==1)
        {
            a[x][y] ^= 1;
            fu(y);
            fd(y);
            fl(x);
            fr(x);
        }

        else
        {
            if(a[x][y] == 0)
            {
                P("0\n");
                continue;
            }

            int ans = 0, s1 = -INF, s2 = INF;

            FOR(j,y,m)
            {
                if(a[x][j] == 0) break;
                s1 = max(s1, u[x][j]);
                s2 = min(s2, d[x][j]);
                ans = max(ans, (s2-s1+1)*(j-y+1));
            }

            s1 = -INF, s2 = INF;
            FORD(j,y,1)
            {
                if(a[x][j] == 0) break;
                s1 = max(s1, u[x][j]);
                s2 = min(s2, d[x][j]);
                ans = max(ans, (s2-s1+1)*(y-j+1));
            }

            s1 = -INF, s2 = INF;
            FOR(i,x,n)
            {
                if(a[i][y] == 0) break;
                s1 = max(s1, l[i][y]);
                s2 = min(s2, r[i][y]);
                ans = max(ans, (s2-s1+1)*(i-x+1));
            }

            s1 = -INF, s2 = INF;
            FORD(i,x,1)
            {
                if(a[i][y] == 0) break;
                s1 = max(s1, l[i][y]);
                s2 = min(s2, r[i][y]);
                ans = max(ans, (s2-s1+1)*(x-i+1));
            }

            P("%d\n",ans);
        }
    }

}
