#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>

#define oo 1e9
#define pi 3.1415926536
#define all(x) x.begin(),x.end()
#define sorta(x) sort(all(x))
#define sortam(x,comp) sort(all(x),comp)
#define sortd(x) sort(x.rbegin(),x.rend())
#define sf(x) scanf("%d", &x);
#define sf2(x, y) scanf("%d %d", &x, &y);
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z);
#define sfll(x) scanf("%I64d", &x);
#define sfll2(x, y) scanf("%I64d %I64d", &x, &y);
#define sfll3(x, y, z) scanf("%I64d %I64d %I64d", &x, &y, &z);
#define sfd(x) scanf("%f", &x);
#define pr(x) printf("%d ", x);

typedef long long ll;
using namespace std;

int main() {
    int n, k;
    while(cin >> n >> k) {
        map<int, pair<int,int> >a;
        for(int i = 0; i < n; i++) {
            int l, r;
            sf2(l, r);
            a[l].first++;
            a[r].second++;
        }

        int tmp = 0, op, cl;
        vector<pair<int, int> >res;
        for(map<int, pair<int,int> >::iterator it = a.begin(); it != a.end(); it++) {
            if(tmp < k && tmp + it->second.first >= k) op = it->first;
            tmp += it->second.first;

            if(tmp >= k && tmp - it->second.second < k) {
                cl = it->first;
                res.push_back({op, cl});
            }
            tmp -= it->second.second;
        }

        sorta(res);
        printf("%d\n", int(res.size()));
        for(int i = 0; i < res.size(); i++) printf("%d %d\n", res[i].first, res[i].second);
    }
    return 0;
}
