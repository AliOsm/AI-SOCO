//void __(){
//    _(int,n);
//    _(int,k);
//    _(string,s);
//    sort(all(s));
//    string ans(1,s[0]);
//    int w = s[0]-'a'+1;
//    for(char c : s){
//        if(sz(ans)>=k)
//            break;
//        if(c >= ans.back()+2){
//            ans.pb(c);
//            w += c-'a'+1;
//        }
//    }
//    print ans.size()>=k?w:-1;
//}
//
#include <iomanip>
#include <algorithm>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define pb push_back
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
struct _print {
    string sep,end;
    bool space;
    ostream &stream;
    _print(string _sep=" ",string _end="\n",
            ostream &_stream = cout)
        : sep(_sep),end(_end),space(false),
            stream(_stream) {}
    ~_print() { stream << end; }
    template <typename T>
        _print &operator , (const T &t) {
            if (space) stream << sep;
            space = true;
            stream << t;
            return *this;
        }
};
#define print _print(),
#define INPUT_WITHOUT_INIT(type,name) type name; cin >> name
#define GET_INPUT_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME
#define _(...) GET_INPUT_MACRO(__VA_ARGS__,_IWI,_IWI,_IWI,_IWI,_IWI,_IWI,INPUT_WITHOUT_INIT)(__VA_ARGS__)
void __(){
    _(int,n);
    _(int,k);
    _(string,s);
    sort(all(s));
    string ans(1,s[0]);
    int w = s[0]-'a'+1;
    for(char c : s){
        if(sz(ans)>=k)
            break;
        if(c >= ans.back()+2){
            ans.pb(c);
            w += c-'a'+1;
        }
    }
    print ans.size()>=k?w:-1;
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        __();
}
