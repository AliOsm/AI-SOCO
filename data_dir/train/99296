#define _USE_MATH_DEFINES
#define _CRT_SECURE_NO_DEPRECATE

#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#include <cmath>
#include <sstream>
#include <utility>
#include <ctime>
#include <memory.h>
#include <cctype>
#include <cstdlib>

using namespace std;

#pragma comment (linker, "/STACK:64000000")

#define y0 qwe
#define y1 asd
#define sz size()
#define pb push_back
#define fors(w,s) for(set <string> :: iterator w = s.begin(); w != s.end(); w++)
#define pii pair<int, int>
#define pll pair<ll, ll>
#define ull unsigned long long
#define vi vector <int>
#define vvi vector <vi>
#define inf 2000000000
#define mod 1000000007
#define ll long long
#define maxint 2139062143 //2147483647
#define maxll 9223372036854775807
#define fi first
#define se second
#define eps 1e-9
#define doubleinf 1000000000000000.0

int q, l, r, h, g, j, i, y, tp, tu, td, m, n, x, d, a[26], b[26];
char c[200];
string s, t;
bool mas = true, fail = false;

inline void solve()
{
    scanf ("%s", &c);
    s = c;
    for (j = 0; j < s.size(); j++)
    {
        a[s[j] - 'a']++;
    }
    scanf ("%s", &c);
    t = c;
    for (j = 0; j < t.size(); j++)
    {
        b[t[j] - 'a']++;
    }
    for (j = 0; j < 26; j++)
    {
        if (a[j] != b[j])
        {
            mas = false;
        }
        if (a[j] < b[j])
        {
            fail = true;
        }
    }
    if (fail)
    {
        printf ("need tree\n");
        return;
    }
    if (mas)
    {
        printf ("array\n");
        return;
    }
    q = 0;
    for (j = 0; ; )
    {
        if (s[q] == t[j])
        {
            j++;
            q++;
            if (j == t.size())
            {
                printf ("automaton\n");
                return;
            }
            if (q == s.size())
            {
                printf ("both\n");
                return;
            }
        }
        else
        {
            q++;
            if (q == s.size())
            {
                printf ("both\n");
                return;
            }
        }
    }
}

inline void init()
{
    
}

inline void answer()
{
    
}

int main()
{
    //freopen ("input.txt","r",stdin); freopen ("output.txt","w",stdout);
    //freopen ("olympiad.in","r",stdin); freopen ("olympiad.out","w",stdout);
    init();
    solve();
    answer();
    return 0;
}