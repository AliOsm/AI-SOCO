#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll N = 110, C = 30, inF = 1e12 + 100;

ll n, k, ans, a[N], cnt[N], dp[N][N];
string s;

void get_dp() {
	dp[0][0] = 1;
	cnt[0] = 1;
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= i; j++) {
			for (int last = i - 1; ~last && (last == i - 1 || a[last + 1] != a[i]); last--)
				dp[i][j] += dp[last][j - 1];
			dp[i][j] = min(dp[i][j], inF);
			cnt[j] += dp[i][j];
			cnt[j] = min(cnt[j], inF);
		}
}

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	cin >> n >> k >> s;
	for (int i = 0; i < n; i++)
		a[i + 1] = s[i] - 'a';
	get_dp();
	ans = n * k;
	for (int len = n; ~len; len--) {
		ll help = cnt[len];
		if(help < k) {
			k -= help;
			ans -= help * len;
			continue;
		}
		cout << ans - k * len;
		return 0;
	}
	cout << -1;
	return 0;
}
