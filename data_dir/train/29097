#include <iostream>
#include <string>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <queue>
using namespace std;


/*
int main()
{
	int t;
	cin>>t;
	while (t--)
	{
		string s;
		cin>>s;
		vector<pair<int,int> > r;
		for (int i = 1; i < 13; i++)
		{
			if (12%i==0)
			{
				bool ok = false;
				for (int j = 0; j < 12/i; j++)
				{
					ok = true;
					for (int k = 0; k < i; k++)
					{
						if (s[j+(12/i)*k] == 'O') ok = false;
					}
					if (ok)
					{
						r.push_back(make_pair(i,12/i));
						break;
					}
				}

			}
		}
		cout<<r.size();
		for (int i = 0; i < r.size(); i++)
		{
			cout<<" "<<r[i].first<<'x'<<r[i].second;
		}
		cout<<endl;
	}
}


int main()
{
	int n,m;
	cin>>n>>m;
	vector<string> a(n);
	for (int i = 0; i < n; i++) cin>>a[i];
	set<int> t;
	for (int i = 0; i < n; i++)
	{
		int c=0,d = 0;
		for (int j = 0; j < m; j++) if (a[i][j] == 'G') c = j; else if (a[i][j] == 'S') d = j;

		int k = d-c;
		if (k < 0)
		{
			cout<<-1<<endl;
			return 0;
		}
		else t.insert(k);
	}
	cout<<t.size()<<endl;
}


int main()
{
	int N,M;
	cin>>N>>M;
	int x,y,z;
	cin>>x>>y>>z;
	int p;
	cin>>p;
	x%=4;
	y%=2;
	z%=4;
	if (z==1) z = 3;
	else if (z == 3) z = 1;
	for (int i =0; i < p; i++)
	{
		int a,b;
		cin>>a>>b;
		int n = N, m=M;
		if (x > 0)
		{
			swap(a,b);
			b = n-b+1;
			swap(n,m);
		}
		if (x > 1)
		{
			swap(a,b);
			b = n-b+1;
			swap(n,m);
		}
		if (x > 2)
		{
			swap(a,b);
			b = n-b+1;
			swap(n,m);
		}
		if(y)
		{
			b = m-b+1;
		}
		
		if (z > 0)
		{
			swap(a,b);
			b = n-b+1;
			swap(n,m);
		}
		if (z > 1)
		{
			swap(a,b);
			b = n-b+1;
			swap(n,m);
		}
		if (z > 2)
		{
			swap(a,b);
			b = n-b+1;
			swap(n,m);
		}
		cout<<a<<" "<<b<<endl;
	}

}


vector<int> p;
int f(int i)
{
	if (p[i] != i) return p[i] = f(p[i]);
	return p[i];
}

bool con(int i, int j)
{
	return (f(i) == f(j));
}

void un(int i, int j)
{
	int a = f(i);
	int b = f(j);
	p[a] = b;
}


int main()
{
	int n,m,k;
	cin>>n>>m>>k;
	vector<int>c (k);
	for (int i = 0; i < k; i++)
	{
		cin>>c[i];
		if (i) c[i]+=c[i-1];
	}
	p=vector<int>(n);
	for (int i =0; i < n; i++) p[i] = i;
	vector<vector<int> > d(k,vector<int>(k,1000000000));
	for (int i = 0; i < m; i++)
	{
		int a,b,x;
		cin>>a>>b>>x;
		if (x==0) un(a-1,b-1);
		int u = lower_bound(c.begin(), c.end(),a)-c.begin();
		int v = lower_bound(c.begin(), c.end(),b)-c.begin();
		d[u][v] = min(d[u][v],x);
		d[v][u] = min(d[v][u],x);
	}
	for (int i = 0;i<k; i++) d[i][i] = 0;
	for (int x = 0; x < k; x++)
	{
		for (int i = 0; i < k; i++)
		{
			for (int j = 0; j < k; j++)
			{
				d[i][j] = min(d[i][j], d[i][x]+d[x][j]);
			}
		}
	}
	bool ok = true;
	for (int i = 0; i < k; i++)
	{
		if (i)
		{
			bool cn = true;
			for (int j = c[i-1]+1; j < c[i]; j++)
			{
				if (!con(j-1,j)) cn = false;
			}
			if (!cn) ok = false;
		}
		else
		{
			bool cn = true;
			for (int j = 1; j < c[i]; j++)
			{
				if (!con(j-1,j)) cn = false;
			}
			if (!cn) ok = false;
		}
	}

	if (ok)
	{
		cout<<"Yes"<<endl;
		for (int i = 0; i < k; i++)
		{
			for (int j = 0; j < k; j++)
			{
				if (d[i][j] == 1000000000) cout<<"-1 ";
				else cout<<d[i][j]<<' ';
			}
			cout<<endl;
		}
	}
	else
		cout<<"No"<<endl;
	//system("pause");
}


int main()
{
	int n;
	cin>>n;
	vector<string> a(n);
	for (int i = 0; i < n; i++)
	{
		cin>>a[i];
	}
	if (n==1)
		cout<<"YES"<<endl;
	else
	{
		char d = a[0][0];
		char nd = a[0][1];
		if (d==nd)
		{
			cout<<"NO"<<endl;
			return 0;
		}
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				if (i-j==0 || i+j ==n-1)
				{
					if (a[i][j] != d)
					{
						cout<<"NO"<<endl;
						return 0;
					}
				}
				else
				{
					if (a[i][j] != nd)
					{
						cout<<"NO"<<endl;
						return 0;
					}
				}
			}
		}
		cout<<"YES"<<endl;
	}
}


int main()
{
	ios_base::sync_with_stdio(false);
	double a,d;
	cin>>a>>d;
	int n;
	cin>>n;
	double x,y;
	x = y = 0;
	int s = 0;
	double ps,rem;
	for (int i=0; i < n; i++)
	{

		if (s==0)
		{
			ps = x;
			int ns = (ps+d)/a;
			rem = (ps+d) - ns*a;
			s+=ns;
			s%=4;
		}
		else if (s==1)
		{
			ps = y;
			int ns = (ps+d)/a;
			rem = (ps+d) - ns*a;
			s+=ns;
			s%=4;
		}
		else if (s==2)
		{
			ps = a-x;
			int ns = (ps+d)/a;
			rem = (ps+d) - ns*a;
			s+=ns;
			s%=4;
		}
		else
		{
			ps = a-y;
			int ns = (ps+d)/a;
			rem = (ps+d) - ns*a;
			s+=ns;
			s%=4;
		}
		if (s==0)
		{
			x = y = 0;
			x+=rem;
			cout<<x<<" "<<y<<endl;
		}
		else if (s==1)
		{
			x=a;
			y = 0;
			y+=rem;
			cout<<x<<" "<<y<<endl;
		}
		else if (s==2)
		{
			x=a;
			y = a;
			x-=rem;
			cout<<x<<" "<<y<<endl;
		}
		else
		{
			x=0;
			y = a;
			y-=rem;
			cout<<x<<" "<<y<<endl;
		}
	}
//	system("pause");
}


int main()
{
	int n;
	cin>>n;
	vector<int> a(n);
	for (int i = 0; i < n; i++)
		cin>>a[i];
	sort(a.begin(), a.end());
	
	for (int i = 0; i < a.size(); i++) cout<<a[i]<<" ";

//	system("pause");
}


int main()
{
	int n;
	cin>>n;
	string s;
	cin>>s;
	vector<int> l(n);
	vector<int> r(n);
	vector<int> l2(n);
	vector<int> r2(n);
	int c = 1000000;
	for (int i = 0; i < n; i++)
	{
		if (s[i]=='R')
		{
			c=0;
		}
		r[i] = c;
		c++;
	}
	c = 1000000;
	for (int i = n-1; i >=0; i--)
	{
		if (s[i]=='L')
		{
			c=0;
		}
		l[i] = c;
		c++;
	}

	c = 1000000;
	for (int i = 0; i < n; i++)
	{
		if (s[i]=='L')
		{
			c=0;
		}
		l2[i] = c;
		c++;
	}
	c = 1000000;
	for (int i = n-1; i >=0; i--)
	{
		if (s[i]=='R')
		{
			c=0;
		}
		r2[i] = c;
		c++;
	}
	int res = 0;
	for (int i = 0; i < n; i++)
	{
		if (l[i] > 10000) l[i] = 10000;
		if (r[i] > 10000) r[i] = 10000;
		if (l[i] > r2[i]) l[i] = 10000;
		if (r[i] > l2[i]) r[i] = 10000;
		if (l[i] == r[i]) res++;
	}
	cout<<res<<endl;
//	system("pause");
}


	int main()
{
	int n;
	scanf("%d",&n);
	int v;
	int res = 0;
	for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) {
		scanf("%d",&v);
		if (i==j) res+=v;
	}
	res%=2;
	int q;
	scanf("%d",&q);
	int c,in;
	for (int i = 0; i < q; i++)
	{
		scanf("%d",&c);
		if (c==3)
			printf("%d",res);
		else
		{
			cin>>in;
			res = 1-res;
		}
	}
//	system("pause");
}


int main()
{
	int n;
	cin>>n;
	bool a[1000001] = {false};
	int b;
	for (int i=0; i < n; i++)
	{
		cin>>b;
		a[b] = true;
	}
	vector<int> ntk;
	for (int i=1; i <= 1000000/2; i++)
	{
		if (!a[i] && !a[1000000-i+1])
			ntk.push_back(i);
	}
	int cur=0;
	cout<<n<<endl;
	for (int i=0; i < 1000001; i++)
	{
		if (a[i] && a[1000001-i])
		{
			cout<<ntk[cur]<<" "<<1000001-ntk[cur]<<" ";
			a[1000001-i] = false;
			cur++;
		}
		else if (a[i])
		{
			cout<<1000001-i<<" ";
		}
	}
//	system("pause");
}
*/

int main()
{
	int n;
	cin>>n;
	long long lo, hi;
	lo = -2000000000;
	hi = 2000000000;
	for (int i = 0; i < n; i++)
	{
		string q;
		cin>>q;
		long long x;
		cin>>x;
		char ans;
		cin>>ans;
		if (q == ">=")
		{
			if (ans == 'Y')
			{
				lo = max(lo, x);
			}
			else
			{
				hi = min(hi, x-1);			
			}
		}
		else if (q == "<=")
		{
			if (ans == 'Y')
			{
				hi = min(hi, x);
			}
			else
			{
				lo = max(lo, x+1);			
			}
		}
		else if (q == "<")
		{
			if (ans == 'Y')
			{
				hi = min(hi, x-1);
			}
			else
			{
				lo = max(lo, x);			
			}
		}
		else
		{
			if (ans == 'Y')
			{
				lo = max(lo, x+1);
			}
			else
			{
				hi = min(hi, x);			
			}
		}
	}
	if (lo <= hi)
	{
		cout<<lo<<endl;
	}
	else
	{
		cout<<"Impossible"<<endl;
	}
//	system("pause");
}