#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
int x[3],y[3],nx[3],ny[3];
const int dx[4]={0,1,0,-1};
const int dy[4]={1,0,-1,0};
struct Node{
	int x,y;
	Node(int _x=0,int _y=0):x(_x),y(_y){}
};
inline int dot(Node o,Node v1,Node v2){
	return (v1.x-o.x)*(v2.x-o.x)+(v1.y-o.y)*(v2.y-o.y);
}
inline double calc_dist(int x,int y,int x2,int y2){
	return sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y));
}
double dis[3];
inline bool check(){
	dis[0]=calc_dist(nx[0],ny[0],nx[1],ny[1]);
	dis[1]=calc_dist(nx[1],ny[1],nx[2],ny[2]);
	dis[2]=calc_dist(nx[2],ny[2],nx[0],ny[0]);
	sort(dis,dis+3);
	if(dis[0]+dis[1]<=dis[2]) return false;
	return dot(Node(nx[0],ny[0]),Node(nx[1],ny[1]),Node(nx[2],ny[2]))==0 || dot(Node(nx[1],ny[1]),Node(nx[0],ny[0]),Node(nx[2],ny[2]))==0 || dot(Node(nx[2],ny[2]),Node(nx[1],ny[1]),Node(nx[0],ny[0]))==0;
}
int main(){
	for(int i=0;i<3;i++){
		scanf("%d%d",x+i,y+i);
		nx[i]=x[i],ny[i]=y[i];
	}
	if(check()) puts("RIGHT");
	else{
		bool chk=false;
		for(int i=0;i<3;i++){
			for(int j=0;j<3;j++)
				nx[j]=x[j],ny[j]=y[j];
			for(int j=0;j<4;j++){
				nx[i]=x[i]+dx[j],ny[i]=y[i]+dy[j];
				if(check()) chk=true;
			}
		}
		if(!chk) puts("NEITHER");
		else puts("ALMOST");
	}
	return 0;
}