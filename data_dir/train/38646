//besmellah
#include <bits/stdc++.h>
using namespace std;

#define int long long

const int maxn = 2e5 + 10, SQ = sqrt(2e5 + 10), maxa = 1e6 + 10;
tuple <int, int, int> Q[maxn];
int a[maxn];
int k[maxa];
long long ans;
int ansq[maxn];

bool cmp(tuple <int, int, int> x, tuple <int, int, int> y){
	pair <int, int> A = {get<0>(x), get<1>(x)}, B = {get<0>(y), get<1>(y)};
	if (A.second / SQ != B.second / SQ){
		return A.second / SQ < B.second / SQ;
	}
	if ((A.second / SQ) % 2){
		return A.first < B.first;
	}
	return B.first < A.first;
}

void add(int i){
	ans -= k[a[i]] * k[a[i]] * a[i];
	k[a[i]] ++;
	ans += k[a[i]] * k[a[i]] * a[i];
}

void del(int i){
	ans -= k[a[i]] * k[a[i]] * a[i];
	k[a[i]] --;
	ans += k[a[i]] * k[a[i]] * a[i];
}

int32_t main(){
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n, t;
	cin >> n >> t;
	for (int i = 0; i < n; i++){
		cin >> a[i];
	}
	for (int i = 0; i < t; i++){
		cin >> get<0>(Q[i]) >> get<1>(Q[i]);
		get<0>(Q[i]) --;
		get<1>(Q[i]) --;
		get<2>(Q[i]) = i;
	}
	sort(Q, Q + t, cmp);
	int ptr1 = 0, ptr2 = 0;
	ans = a[0];
	k[a[0]] ++;
	for (int i = 0; i < t; i++){
		auto q = Q[i];
		int l = get<0>(q), r = get<1>(q);
		if (l <= ptr1){
			if (r <= ptr2){
				for (int i = ptr1 - 1; i >= l; i--){
					add(i);
				}
				for (int i = ptr2; i > r; i--){
					del(i);
				}
			}
			else{
				for (int i = ptr1 - 1; i >= l; i--){
					add(i);
				}
				for (int i = ptr2 + 1; i <= r; i++){
					add(i);
				}
			}
		}
		else{
			if (r <= ptr2){
				for (int i = ptr1; i < l; i++)
					del(i);
				for (int i = ptr2; i > r; i--)
					del(i);
			}
			else{
				for (int i = ptr2 + 1; i <= r; i++)
					add(i);
				for (int i = ptr1; i < l; i++)
					del(i);
			}
		}
		ptr1 = l;
		ptr2 = r;
		ansq[get<2>(q)] = ans;
	}
	for (int i = 0; i < t; i++){
		cout << ansq[i] << '\n';
	}
}
