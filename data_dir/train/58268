#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define ll long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;
typedef  tree< ll , null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const ll N = 35;
int a[N], ans = 1e9;
char s[5][1000000];
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt","w", stdout);
    int s12, s13, s14, s23, s24, s34;
    cin >> s12 >> s13 >> s14 >> s23 >> s24 >> s34;
    for (int i = 0; i <= 1e5; i++){
        int t12 = s12 - i;
        int t13 = s13 - i;
        int t14 = s14 - i;
        int t34 = s34;
        int t23 = s23;
        int t24 = s24;
        int v1 = i;
        if ((t12 + t13 - t23) % 2) continue;
        if ((t12 + t14 - t24) % 2) continue;
        if ((-t13 - t14 + t23 + t24) % 2) continue;
        if ((t13 + t14 - t34) % 2) continue;
        if ((-t12 - t14 + t23 + t34) % 2) continue;
        if ((-t12 - t13 + t24 + t34) % 2) continue;
        int v2 = (t12 + t13 - t23) / 2;
        int v3 = (t12 + t14 - t24) / 2;
        int v4 = (-t13 - t14 + t23 + t24) / 2;
        int v5 = (t13 + t14 - t34) / 2;
        int v6 = (-t12 - t14 + t23 + t34) / 2;
        int v7 = (-t12 - t13 + t24 + t34) / 2;
        if (v1 < 0 || v2 < 0 || v3 < 0 || v4 < 0 || v5 < 0 || v6 < 0 || v7 < 0) continue;
        if (ans > v1 + v2 + v3 + v4 + v5 + v6 + v7){
            a[1] = v1;
            a[2] = v2;
            a[3] = v3;
            a[4] = v4;
            a[5] = v5;
            a[6] = v6;
            a[7] = v7;
            ans = v1 + v2 + v3 + v4 + v5 + v6 + v7;
        }
    }
    if (ans == 1e9){
        cout << -1;
        return 0;
    }
    cout << ans << endl;
    int v1 = a[1];
    int v2 = a[2];
    int v3 = a[3];
    int v4 = a[4];
    int v5 = a[5];
    int v6 = a[6];
    int v7 = a[7];
    for (int i = 0; i < ans; i++) s[0][i] = 'a';
    int l = 0;
    for (int i = l; i < l + v1; i++){
        s[1][i] = 'b';
        s[2][i] = 'b';
        s[3][i] = 'b';
    }
    l += v1;
    for (int i = l; i < l + v2; i++){
        s[1][i] = 'b';
        s[2][i] = 'b';
        s[3][i] = 'a';
    }
    l += v2;
    for (int i = l; i < l + v3; i++){
        s[1][i] = 'b';
        s[2][i] = 'a';
        s[3][i] = 'b';
    }
    l += v3;
    for (int i = l; i < l + v4; i++){
        s[1][i] = 'b';
        s[2][i] = 'a';
        s[3][i] = 'a';
    }
    l += v4;
    for (int i = l; i < l + v5; i++){
        s[1][i] = 'a';
        s[2][i] = 'b';
        s[3][i] = 'b';
    }
    l += v5;
    for (int i = l; i < l + v6; i++){
        s[1][i] = 'a';
        s[2][i] = 'b';
        s[3][i] = 'a';
    }
    l += v6;
    for (int i = l; i < l + v7; i++){
        s[1][i] = 'a';
        s[2][i] = 'a';
        s[3][i] = 'b';
    }
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < ans; j++) cout << s[i][j];
        cout << endl;
    }
}
