#include <bits/stdc++.h>
#define int long long
#define pb push_back
#define mk make_pair
using namespace std;
const int N = 1123456;
const int mod = 1e9 + 7;
const int inf = 1e9 + 7;
inline long long read () {
    char c = getchar();
    long long t = 0, f = 1;
    while (!isdigit(c)) f = (c == '-') ? -1 : 1, c = getchar();
    while (isdigit(c)) t = t * 10 + c - 48, c = getchar();
    return t * f;
}
int a[N];
void solve() {
    int n, m, i, j, k;
    cin >> n >> m >> k;
    if(4 * n * m - 2 * n - 2 * m < k) {
        puts("NO");
        return ;
    }
    vector <pair <int, string> > v;
    for(i = 1; i <= n; i ++) {
        if(i == 1) {
            if(m != 1)
                v.pb(mk(m - 1, "R"));
        }
        else {
            if(m != 1)
                v.pb(mk(m - 1, "RUD"));
        }
        if(m != 1)
            v.pb(mk(m - 1, "L"));
        if(i < n) {
            v.pb(mk(1, "D"));
        }
    }
    if(n > 1) {
        v.pb(mk(n - 1, "U"));
    }
    puts("YES");
    vector <pair <int, string> > ans;
    for(i = 0; i < v.size(); i ++) {
        if(k > v[i].first * v[i].second.size()) {
            ans.pb(v[i]);
            k -= v[i].first * v[i].second.size();
        }
        else {
            int sz = v[i].second.size();
            int t = k / sz;
            if(t != 0)
                ans.pb(mk(t, v[i].second));
            if(k % sz != 0)
            ans.pb(mk(1, v[i].second.substr(0, k % sz)));
            break;
        }
    }
    cout << ans.size() << endl;
    for(i = 0; i < ans.size(); i ++) {
        cout << ans[i].first << " " << ans[i].second << endl;
    }
}
main()
{
    int t = 1;
    while(t -- > 0) {
        solve();
    }
}



