#include <cstdio>
#include <iostream>
#include <string>
#include <algorithm>
#include <cmath>
#include <vector>
#include <queue>
#include <list>
#include <map>
#include <set>
#include <stdlib.h>
#include <sstream>
#include <assert.h>
#include <memory.h>
#include <string.h>
#include <time.h>
using namespace std;
#pragma comment(linker, "/STACK:100000000")

#define mp make_pair
#define pb push_back 
#define ll long long
#define sz(x) (int)(x).size()

int matrix[101][101];
bool vis[101][101];

int dx[4] = {0, 1, 0, -1};
int dy[4] = {1, 0, -1, 0};

bool ok = false;

void go(int i, int j, int cur, int lstx, int lsty) {
    if(vis[i][j]) {
        ok = true; 
        return;
    }
    vis[i][j] = true;
    for(int x = 0; x < 4; x++) {
        if(matrix[i+dx[x]][j+dy[x]] == cur && (i+dx[x] != lstx || j +dy[x] != lsty)) go(i+dx[x], j+dy[x], cur, i, j);
    }
}

int main()
{
    //freopen("input.txt","rt",stdin);
    //freopen("output.txt","wt",stdout);
    //freopen("a.in","rt",stdin);
    //freopen("a.out","wt",stdout);

    int n, m;
    scanf("%d %d", &n, &m);
    for(int i = 1; i <= n; i++) {
        scanf("\n");
        for(int j = 1; j <= m; j++) {
            char sym;
            scanf("%c", &sym);
            matrix[i][j] = sym - 'A' + 1;
        }
    }
    for(int i = 1; i <= n; i++) {
        for(int j = 1; j <= m; j++) {
            if(!vis[i][j]) {
                go(i, j, matrix[i][j], -1, -1);
            }
        }
    }
    if(ok) printf("Yes\n");
    else printf("No\n");

    return 0;
}