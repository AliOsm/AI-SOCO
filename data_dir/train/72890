#include <bits/stdc++.h>
using namespace std;


class Solution {
  const int MOD = 1e9 + 7;
  int n, m;
  int powM(int a, int p) {
    int ans = 1;
    p = (p + MOD - 1) % (MOD - 1);
    for (int cur = a; p; p >>= 1, cur = 1ll * cur * cur % MOD) {
      if (p&1) ans = 1ll * ans * cur % MOD;
    }
    return ans;
  }
  inline int inv(int a) { return powM(a, MOD - 2); }
public:
  void run() {
    cin >> n >> m;
    int ans = 0;
    int multi = 1;
    int P = 1;
    for (int l = 1; l < n; ++l) {
      (ans += 1ll * multi * P % MOD * powM(m, n - l - 1) % MOD
      * powM(n, n - l - 1) % MOD * (l + 1) % MOD * inv(n) % MOD) %= MOD;
      P = 1ll * P * (n - l - 1) % MOD;
      multi = 1ll * multi * (m - l) % MOD;
      multi = 1ll * multi * inv(l) % MOD;
    }
    cout << ans << '\n';
  }
};
int main() {
  ios_base::sync_with_stdio(false); cin.tie(0);
  Solution().run();
  return 0;
}

