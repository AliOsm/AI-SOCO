#include<iostream>

using namespace std;

const int MAXN = 20;
int a[MAXN][MAXN], b[MAXN];
long long dp[MAXN][(1 << MAXN)];

int main()
{
	int n, m;
	cin >> n >> m;
	for(int i = 0; i < m; i++)
	{
		int x, y;
		cin >> x >> y;
		x--, y--;
		a[x][y] = a[y][x] = 1;
		dp[max(x, y)][(1 << x) + (1 << y)] = 1;
	}
	long long ans = 0;
	for(int i = 0; i < (1 << n); i++)
	{
		int in = 0;
		for(int j = 0; j < n; j++)
			if((i >> j) & 1)
				b[in++] = j;
		if(in <= 2)
			continue;
		for(int j = 1; j < in; j++)
			for(int k = 1; k < in; k++)
				if(a[b[j]][b[k]])
					dp[b[j]][i] += dp[b[k]][i - (1 << b[j])];
		for(int j = 1; j < in; j++)
			if(a[b[j]][b[0]])
				ans += dp[b[j]][i];
	}
	cout << ans / 2 << endl;
	return 0;
}
