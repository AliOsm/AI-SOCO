/*
  ------------------------- Hachiikung ---------------------------------
  ---------------------- Worrachate Bosri ------------------------------
  ------ Faculty of Computer Engineering Chulalongkorn University ------
*/
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<stack>
#include<list>
#include<set>
#include<map>
#include<string>
#include<utility>
using namespace std;
#define REP(i,FN) for(int i=0;i<FN;i++)
#define FOR(i,ST,FN) for(int i=ST;i<=FN;i++)
#define FORD(i,FN,ST) for(int i=FN;i>=ST;i--)
#define FORX(i,c) for(typeof(c.begin())i=c.begin();i!=c.end();i++)
#define pause system("pause")
#define S scanf
#define P printf
#define X first
#define Y second
#define pb push_back
#define PII pair<int,int>
#define mp make_pair
#define sz size()
#define eps 1e-8

const int MOD(1000000007);
const int INF((1<<30)-1);
const int MAXN(55);

string a[MAXN];

bool visited[MAXN][MAXN];

int n, m, d[4][2] = {1,0,-1,0,0,1,0,-1};

void dfs(int x,int y,int px,int py){

    visited[x][y] = 1;

    REP(k,4)
    {
        int tx = x + d[k][0];
        int ty = y + d[k][1];

        if(tx < 0 || tx >= n || ty < 0 || ty >= m) continue;
        if(a[tx][ty] != a[x][y]) continue;

        if(!visited[tx][ty])
            dfs(tx, ty, x, y);
        else if(tx != px || ty != py)
        {
            P("Yes");
            exit(0);
        }
    }

}

int main(){

    S("%d%d",&n,&m);
    REP(i,n)
        cin >> a[i];

    REP(i,n)
        REP(j,m)
            if(!visited[i][j])
                dfs(i, j, -1, -1);

    P("No");
}
