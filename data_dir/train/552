#include <bits/stdc++.h>

using namespace std;

#define x first
#define y second
typedef long long ll;
const int N = 300001;
const int mod = 998244353;
const int oo = 1e9;
const int base = 27;
typedef pair<int,int> pii;

ll dp[N][3];
int u,v,n;

vector<int> g[N];

ll mul(ll a , ll b){
  return (a*b)%mod;
}
ll adl(ll a , ll b){
  return (a+b)%mod;
}
ll calc(int u ,int parent, int st){
  ll &ret = dp[u][st];
  if(ret != -1)return ret;
  for(int i = 0 ; i < g[u].size();++i)
    if(g[u][i]==parent){
      swap(g[u][i],g[u].back());
      g[u].pop_back();
      break;
    }
  if(g[u].size() == 0){
    dp[u][st] = (st == 0 || st == 2);
    return ret;
  }
  vector<ll> suf,pre;
  suf.resize(g[u].size()),pre.resize(g[u].size());
  for (int i = 0; i < g[u].size(); ++i){
    pre[i] = calc(g[u][i],u,2)+calc(g[u][i],u,1);
    if(i)pre[i] = mul(pre[i],pre[i-1]);
  }
  for(int i = g[u].size()-1 ; i >= 0;--i){
    suf[i] = calc(g[u][i],u,2)+calc(g[u][i],u,1);
    if(i != g[u].size()-1)suf[i] = mul(suf[i],suf[i+1]);
  }
  ret = 0;
  if(st == 0)ret = adl(ret,pre.back());
  if(st == 2 || st == 1){
    for(int i = 0 ; i < g[u].size();++i){
      int p1 = (i?pre[i-1]:1);
      int p2 = (i!=g[u].size()-1?suf[i+1]:1);
      int pf = mul(p1,p2);
      ret = adl(ret,mul(pf,calc(g[u][i],u,0)));
    }
  }
  if(st == 2){
    ll pf = 1;
    for(int i = 0 ; i < g[u].size();++i)pf = mul(pf,calc(g[u][i],u,2));
    ret = adl(ret,pf);
  }
  return ret;
}
int main() {
  memset(dp,-1,sizeof dp);
  cin >> n;
  for (int i = 0; i < n-1; ++i){
    scanf("%d%d",&u,&v);
    g[u].push_back(v);
    g[v].push_back(u);
  }
  cout << calc(1,0,2) << endl;
  return 0;
}