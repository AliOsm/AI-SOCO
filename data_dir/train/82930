#include<bits/stdc++.h>
#define GO ios::sync_with_stdio(0), cin.tie(0), cout.tie(0)
using namespace std;
typedef long long ll;
typedef vector<int> vec;
const int N = 2e5 + 5;
const int M = 1e6 + 5;
const int Mod = 1 << 31;

int n, a[N];
int dp[N];
vec G[N];

void Try(int u, int p)
{
	for (auto v : G[u])
	{
		if (v == p)
			continue;
		Try(v, u);
		if (dp[v] > 0)
			dp[u] += dp[v];
	}
	dp[u] += a[u];
}

void DFS(int u, int p)
{
	for (auto v : G[u])
	{
		if (v == p)
			continue;
		ll k = dp[u];
		if (dp[v] > 0)
			k -= dp[v];
		if (k > 0)
			dp[v] += k;
		DFS(v, u);
	}
}

int main()
{
	GO;
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> a[i], a[i] = (a[i] ? 1 : -1);
	for (int i = 1; i < n; i++)
	{
		int u, v;
		cin >> u >> v;
		G[u].push_back(v);
		G[v].push_back(u);
	}
	Try(1, 1);
	DFS(1, 1);
	for (int i = 1; i <= n; i++)
		cout << dp[i] << ' ';
	cout << '\n';
	return 0;
}