#include <iostream>
#include <algorithm>
#include <vector>
#include <string.h>
#include <cmath>
#include <math.h>
#include <ctime>
#include <cstring>
#include <sstream>
#include <array>
#include <tuple>
#include <set>
#include <iterator>
#include <cstdio>
#include <string>
#include <valarray>
#include <utility>
#include <iomanip>
#include <list>
#include <numeric>
#include <regex>
#include <map>
#include <queue>
#include <deque>
#include <unordered_map>

using namespace std;

#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define ll long long
#define PI 3.1415926535
#define pb push_back
#define ins insert
#define mp make_pair
#define lb(v,x) lower_bound(all(v),x)
#define ub(v,x) upper_bound(all(v),x)
#define ff first
#define Ln length
#define ss second
#define endl "\n"
#define Max(x,y,z) max(x,max(y,z))
#define Min(x,y,z) min(x,min(y,z))
#define sz(a) (ll)a.size()
#define fill(x,y) memset(x,y,sizeof(x))
#define all(x) (x).begin(), (x).end()
#define mod 998244353
#define unique_sort(c) (sort(all(c)), c.resize(distance(c.begin(),unique(c.begin(),c.end()))))
#define forn(i, a, b) for(ll int i = (a); i <= (b); ++i)
const ll N = 2e5 + 7;
ll power(ll x,ll y){ll res=1;x=x;while(y>0){if(y&1)res=(res*x);y=y>>1;x=(x*x);}return res;}
template<typename T> T gcd(T a,T b){ if(a==0) return b; return gcd(b%a,a); }
template<typename T> T powm(T a,T b, ll m){T ans=1; while(b>0){ if(b%2==1) ans=(ans*a)%m; b/=2; a=(a*a)%m; }return ans%m;}
//ll ncr(ll n,ll r){ll res=1;if(r>n)return 0;if(r>n-r)r=n-r;for(ll i=0;i<r;i++){res*=(n-i);res/=(i+1);}return res;}
// always use 1ll*ans2 to avoid signed integer overflow;
// in max,min fxs they have to be of same type like ll,ll or int,int
int x[10][1000002];
int f(int y){
    if(y<10) return y;
    int pro = 1;
    while(y)
    {
        if(y%10) 
           pro *= y%10;
        y /= 10;    
    }
    return f(pro); 
}
void solve()
{
    for(int i=1;i<=1000000;i++){
        x[f(i)][i]++;
    }
    for(int i=1;i<10;i++){
        for(int j=1;j<=1000000;j++){
            x[i][j]+=x[i][j-1];
        }
    }
    int Q;
    cin>>Q;
    while(Q--){
        int l,r,k;
        cin>>l>>r>>k;
        cout<<x[k][r]-x[k][l-1]<<endl;
    }
}
int main()
{
    IOS;
    int t;
    t=1;
    //cin >> t;
    while(t--)
        solve();
    return 0; 
}
