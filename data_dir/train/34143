#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end())
#define cpresent(s,x) (find(all(s),x) != s.end())
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;
typedef long double ld;
typedef vector<vector<ll> > mat;

ll dp[2][2005][2005],cnt[2005][2005],m=1e9+7;

int n;

bool poss(int h,int pre)
{

	if(pre<0)
	return false;
	int rem=2*n-h;
	if(pre<=rem)
	return true;
	return false;
}

void dfs(int h,int pre)
{
	if(!poss(h,pre))
	{
		dp[0][h][pre]=0;
		dp[1][h][pre]=0;
		return;
	}
	if(h==2*n)
	{
		dp[0][h][pre]=0;
		dp[1][h][pre]=0;
		return;
	}
	if(dp[0][h][pre]!=-1)return;
	dfs(h+1,pre+1);

	dfs(h+1,pre-1);

	
	ll k1=0;
	ll k2=0;
	if(pre-1>=0)
	{
		k1=dp[0][h+1][pre-1];
		k2=dp[1][h+1][pre-1];
	}
	dp[1][h][pre]=0;
	dp[0][h][pre]=max(dp[1][h+1][pre+1],dp[0][h+1][pre+1])+max(k1,k2);
	if(poss(h+1,pre+1))
	dp[1][h][pre]=max(dp[1][h][pre],1+dp[0][h+1][pre+1]+k2);
	if(poss(h+1,pre-1))
	dp[1][h][pre]=max(dp[1][h][pre],1+dp[1][h+1][pre+1]+k1);
	dp[0][h][pre]%=m;
	dp[1][h][pre]%=m;
	//dp[1][h][pre]=max(1+dp[0][h+1][pre+1]+k2,1+dp[1][h+1][pre+1]+k1);
	//o2(h,pre);os;o2(dp[0][h][pre],dp[1][h][pre]);on;
//	o2(dp[0][h+1][pre+1],dp[1][h+1][pre+1]);on;
}

int main()
{ios_base::sync_with_stdio(false);

cin>>n;

rep(i,0,1)rep(j,0,2004)rep(k,0,2004)dp[i][j][k]=-1;


cnt[0][0]=1;

//rep(i,1,2*n)
//{
//	rep(j,0,i)
//	{
//		ll kk=cnt[i-1][j+1];
//		if(j)kk=(kk+cnt[i-1][j-1])%m;
//		cnt[i][j]=kk;
//	}
//}

dfs(0,0);

ol(max(dp[0][0][0],dp[1][0][0]));

return 0;
}


