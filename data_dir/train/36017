#include <bits/stdc++.h>
using namespace std;
using LL = long long;
using PII = pair<int, int>;
using VI = vector<int>;

multiset<string> query(int l, int r) {
  printf("? %d %d\n", l, r);
  fflush(stdout);
  int len = r - l + 1;
  int num = (len * (len + 1)) / 2;
  multiset<string> res;
  for (int i = 0; i < num; i++) {
    string s; cin >> s;
    sort(s.begin(), s.end());
    res.insert(s);
  }
  return res;
}

void answer(const string& s) {
  cout << "! " << s << endl;
  cout.flush();
  exit(0);
}

int main() {
#ifdef LOCAL_EXEC
//	freopen("sample.in", "r", stdin);
//	freopen("sample.out", "w", stdout);
#else
//  ios_base::sync_with_stdio(false); cin.tie(NULL);
#endif

  int n; cin >> n;

  auto all = query(1, n);
  if (n == 1) {
    answer(*all.begin());
  }
  auto all_but_one = query(2, n);
  for (auto& s: all_but_one) {
    all.erase(all.find(s));
  }
  vector<string> allv(all.begin(), all.end());
  sort(allv.begin(), allv.end(), [](const string& a, const string& b) {
    return a.size() < b.size();
  });

  string ans;
  for (auto& s: allv) {
    for (char ch: ans) {
      for (char& chh: s) {
        if (ch == chh) {
          chh = '$';
          break;
        }
      }
    }
    for (char ch: s) {
      if (ch != '$') {
        ans.push_back(ch);
        break;
      }
    }
  }

  answer(ans);

  return 0;
}
