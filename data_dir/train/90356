#include<bits/stdc++.h>

using namespace std;

const int Maxn = 1000 + 10;
int n, prm[12] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37};
long long dp[12][Maxn], pw[12][70];

int main()
{
	for(int i = 0; i < 12; i ++)
	{
		pw[i][0] = 1;
		pw[i][1] = prm[i];
		for(int j = 2; j < 64; j ++)
		{
			if(pw[i][j - 1] <= LLONG_MAX / pw[i][1])
				pw[i][j] = pw[i][j - 1] * pw[i][1];
			else
				pw[i][j] = LLONG_MAX;
		}
	}
	cin >> n;
	for(int i = 0; i < 12; i ++)
		dp[i][1] = 1;
	for(int i = 2; i < 64; i ++)
		dp[0][i] = pw[0][i - 1];
	for(int i = 64; i <= n; i ++)
		dp[0][i] = LLONG_MAX;
	for(int i = 1; i < 12; i ++)
		for(int j = 2; j <= n; j ++)
		{
			dp[i][j] = LLONG_MAX;
			for(int l = 0; l < 64; l ++)
				if(j % (l + 1) == 0)
					if(dp[i - 1][j / (l + 1)] != LLONG_MAX && pw[i][l] != LLONG_MAX)
					{
						long long a = dp[i - 1][j / (l + 1)], b = pw[i][l];
						if(a <= LLONG_MAX / b)
							dp[i][j] = min(dp[i][j], a * b);
					}
		}
	long long ans = LLONG_MAX;
	for(int i = 0; i < 12; i ++)
		ans = min(ans, dp[i][n]);
	cout << ans << endl;
	return 0;
}