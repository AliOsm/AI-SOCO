#include <cstdio>
#include <cmath>
#include <string>
#include <algorithm>
#include <iostream>
#include <numeric>
#include <vector>

using namespace std;

typedef long long LL;

int w, b;

double dp[1 << 10][1 << 10][2];

double go(int w, int b, int t)
{
	if (w < 0 || b < 0)
		return 0;
	if (w == 0 && b == 0)
		return 0;
	double & res = dp[w][b][t];
	if (res != -1.0)
		return res;
	res = 0;
	if (t)
	{
		if (b > 0)
		{
			double p = b / (0.0 + w + b);
			double pb = w + b == 1 ? 0 : (b - 1) / (0.0 + w + b - 1);
			double pw = w + b == 1 ? 0 : w / (0.0 + w + b - 1);
			res = p * (pb * go(w, b - 2, t ^ 1) + pw * go(w - 1, b - 1, t ^ 1));
		}
	}
	else
	{
		double p = b / (0.0 + w + b);

		res = w / (0.0 + w + b) + p * go(w, b - 1, t ^ 1);
	}
	return res;
}

int main()
{
	for(int i = 0; i < 1 << 10; ++i)
		for(int j = 0; j < 1 << 10; ++j)
			for(int k = 0; k < 2; ++k)
				dp[i][j][k] = -1.0;
	cin >> w >> b;
	if (w == 0)
	{
		cout << 0 << endl;
		return 0;
	}
	cout.precision(15);
	cout << fixed << go(w, b, 0) << endl;
	return 0;
}