// Author - Rahil Malhotra
#include <bits/stdc++.h>
using namespace std;
 
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'
#define int long long
#define double long double

//edtrl
string s,t;
int mul=41,mod=2016007997;
int mod1=1e9+7;
int tree[100005];
int sum(int i)
{
    int sum = 0; 
    while(i>0)
    {
        sum+=tree[i];
        i-=i&(-i);
    }
    return sum;
}

void update(int i, int val)
{
    while(i<100005)
    {
       tree[i]+=val;
       i+=i&(-i);
    }
}
int32_t main()
{
    IOS;
    cin>>s>>t;
    int n=s.length(),m=t.length();
    int hash=0;
    for(int i=0;i<m;i++)
    {
        hash=hash*mul+t[i];
        hash%=mod;
    }
    int mark[n+1]={};
    int mulpow=1;
    int h=0;
    for(int i=0;i<m-1;i++)
    {
        mulpow*=mul;
        mulpow%=mod;
        h=h*mul+s[i];
        h%=mod;
    }
    for(int i=m-1;i<n;i++)
    {
        h=h*mul+s[i];
        h%=mod;
        if(h==hash && s[i]==t[m-1])
            mark[i+1]=1;
        h-=(s[i-m+1]*mulpow)%mod;
        h+=mod;h%=mod;
    }
    int dp[n+2]={};
    int ans=0;
    for(int i=1;i<=n;i++)
    {
        if(!mark[i])
            dp[i]=dp[i-1];
        else
            dp[i]+=i-m+1+sum(i-m);
        dp[i]%=mod1;
        ans+=dp[i];
        ans%=mod1;
        update(i,ans);
    }
    cout<<ans<<endl;
}   