#include <bits/stdc++.h>
#define ll long long
#define upperlimit 1000100
#define INF 1e18
#define eps 1e-8
// #define endl '\n'
#define pcc pair<char,char>
#define pii pair<int,int>
#define pll pair<ll,ll>
#define tr(container,it) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define MOD 1000000007LL
#define slld(t) scanf("%lld",&t)
#define sd(t) scanf("%d",&t)
#define pd(t) printf("%d\n",t)
#define plld(t) printf("%lld\n",t)
#define mp(a,b) make_pair(a,b)
#define FF first
#define SS second
#define pb(x) push_back(x)
#define vi vector<int>
#define vll vector<ll>
#define clr(a) memset(a,0,sizeof(a))
#define debug(a) printf("check%d\n",a)
#define csl ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
using namespace std;
 
ll gcd(ll n1,ll n2){
    if(n2==0)
        return n1;
    if(n1%n2==0)return n2;
    return gcd(n2,n1%n2);
}
ll powmod(ll base,ll exponent)
{
    if(exponent<0) exponent+=MOD-1;
    ll ans=1;
    while(exponent){
        if(exponent&1)ans=(ans*base)%MOD;
        base=(base*base)%MOD;
        exponent/=2;
    }
    return ans;
}
#define MAX 100
queue<int> q;
int dx[10]={1,0,-1,0};
int dy[10]={0,1,0,-1};
bool there[MAX];
bool vis[MAX];
int par[MAX];
string s[MAX];
vector<int> v;
vector<pii> ans;
int to;
bool omg;
int go(int a,int b)
{
    return 8*a+b;
}
void mkc(int i)
{
    int a=i/8;
    int b=i%8;
    cout<<char('a'+b)<<a+1;
}
void haha(int i)
{
    if(i==to)
        omg=true;
    // cout<<i<<" "<<there[i]<<endl;
    if(there[i])
    {
        haha(par[i]);
        there[i]=0;
        there[par[i]]=1;
        ans.pb(mp(i,par[i]));
    }
}
int main()
{
    // csl;
    int n;
    cin>>n;
    for(int i=0;i<n;i++)
    {
        cin>>s[i];
        int lol=(s[i][0]-'a')+(s[i][1]-'0'-1)*8;
        // cout<<lol<<endl;
        // if(i==62)
            // v.pb(63);
        // else
            // v.pb(i);
        v.pb(lol);
    }
    sort(v.begin(), v.end());
    for(int i=0;i<n;i++)
    {
        there[v[i]]=true;
    }
    // cout<<there[40]<<endl;
    while(true)
    {
        to=-1;
        for(int i=0;i<n;i++)
        {
            if(!there[i])
            {
                to=i;
                break;
            }
        }
        if(to==-1)
            break;
        while(q.size())
            q.pop();
        clr(par);
        clr(vis);
        q.push(to);
        int from=-1;
        while(q.size())
        {
            int x=q.front();
            q.pop();
            vis[x]=true;
            // cout<<x<<" "<<to<<endl;
            if(there[x])
            {
                if(x>to)
                {
                    from=x;
                    break;
                }
                // cout<<"mil gaya"<<endl;
            }
            int a=x/8;
            int b=x%8;
            for(int i=0;i<4;i++)
            {
                for(int j=0;j<4;j++)
                {
                    if(i!=j&&dx[i]!=-1*dx[j])
                    {
                        int lolx=a+2*dx[i]+dx[j];
                        int loly=b+2*dy[i]+dy[j];
                        // cout<<lolx<<" "<<loly<<endl;
                        if(lolx>7||lolx<0||loly>7||loly<0)
                            continue;
                        int lol=go(lolx,loly);
                        if(!vis[lol])
                        {
                            vis[lol]=true;
                            par[lol]=x;
                            q.push(lol);
                        }
                    }
                }
            }
        }
        // cout<<there[62]<<endl;
        // cout<<from<<" "<<to<<endl;
        omg=false;
        while(from!=to)
        {
            haha(par[from]);
            // cout<<from<<endl;
            there[from]=0;
            there[par[from]]=1;
            ans.pb(mp(from,par[from]));
            from=par[from];
            if(omg)
                break;
        }
    }
    cout<<ans.size()<<endl;
    for(auto i:ans)
    {
        mkc(i.FF);
        cout<<"-";
        mkc(i.SS);
        cout<<endl;
    }
}