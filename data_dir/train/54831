#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;
#define ll long long
#define pb push_back
#define pf push_front
#define F first
#define S second
#define lp(i, a, b) for (int i=a;i<=(int)b;++i)
#define lp2(i, a, b) for (int i=a;i>=b;--i)
#define f(x) return cout<<x<<"\n",0
#define pii pair<int,int>
#define pll pair<ll,ll>
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
#define pr(x) cout<<#x<<" = { "<<x<<" } \n"
#define vi vector<int>
#define vl vector<ll>
#define vii vector<pii>
#define vll vector<pll>
#define FAST ios::sync_with_stdio(0),ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)
#define clr(c, x) memset(c,x,sizeof(c));
template<class T> using OS = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
const int dx[] = {0, 1, 0, -1, 1, -1, 1, -1};
const int dy[] = {1, 0, -1, 0, 1, -1, -1, 1};
const int N = (int) 1e6 + 5;
const ll mod = 998244353;
set<ll> vis;

int main() {
    FAST;
    int t;
    cin >> t;
    while (t--) {
        vis.clear();
        int n;
        ll lcm;
        cin >> n;
        n--;
        cin >> lcm;
        vis.insert(lcm);
        while (n--) {
            ll x;
            cin >> x;
            lcm = (lcm * x) / __gcd(lcm, x);
            vis.insert(x);
        }
        for (auto u:vis) {
            for (ll j = 2; j * j <= u; ++j) {
                if (u % j == 0) {
                    if (!vis.count(u / j) || !vis.count(j)) {
                        lcm = -1;
                    }
                }
            }
        }
        if (vis.count(lcm)) lcm *= (*vis.begin());
        for (auto u:vis) {
            if (!vis.count(lcm / u))
                lcm = -1;
        }
        cout << lcm << "\n";
    }
    return 0;
}