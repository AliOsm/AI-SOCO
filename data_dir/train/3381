#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <string>
#include <cstring>
#include <stdio.h>
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
// Stack, Bitmask, Dsu 
using namespace std;

int n, m;
const int MAXN = 200005;
pair<int, int> p[MAXN], s[MAXN];
int a[MAXN], b[MAXN];

int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> m;

	for(int i = 1; i <= n; i++)
	{
		cin >> p[i].first;
		p[i].second = i;
	}
	for(int i = 1; i <= m; i++)
	{
		cin >> s[i].first;
		s[i].second = i;
	}

	sort(p + 1, p + n + 1);
	sort(s + 1, s + m + 1);
	for(int t = 0; t < 32; t++)
	{
		int idx = 1;
		for(int i = 1; i <= n; i++)
		{
			if(p[i].first == -1)
				continue;
			while(idx <= m && (s[idx].first == -1 || p[i].first > s[idx].first))
				idx++;
			if(idx <= m && p[i].first == s[idx].first)
			{
				p[i].first = -1, s[idx].first = -1;
				a[s[idx].second] = t;
				b[p[i].second] = s[idx].second; 
			}
		}
		for(int i = 1; i <= m; i++)
		{
			if(s[i].first == -1)
				continue;
			s[i].first = (s[i].first + 1) / 2;
		}
	}

	int total = 0, adap = 0;
	for(int i = 1; i <= m; i++)
		adap += a[i];
	for(int i = 1; i <= n; i++)
		if(b[i] != 0)
			total++;

	cout << total << " " << adap << "\n";
	for(int i = 1; i <= m; i++)
		cout << a[i] << " ";
	cout << "\n";
	for(int i = 1; i <= n; i++)
		cout << b[i] << " ";
	cout << "\n"; 

	return 0;
}
