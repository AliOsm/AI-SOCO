#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define x first
#define y second
#define fastread ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define PI (atan(1)*4)
#define mp make_pair
using namespace std;

//prime builder
const int maxprime = 2e6 + 10, up = sqrt(maxprime);
int prime[maxprime];
inline void sieve()
{
	for (int i = 0; i < maxprime; i++)
		prime[i] = i;
	for (int i = 2; i < maxprime; i += 2)
		prime[i] = 2;
	for (int i = 3; i <= up; i += 2)
	{
		if (prime[i] != i)
			continue;
		int lim = i * i;
		int add = 2 * i;
		for (int j = lim; j < maxprime; j += add)
		{
			if (prime[j] == j)
				prime[j] = i;
		}
	}
}

int main()
{
	fastread;
	sieve();
	int n;
	cin >> n;
	ll arr[n];
	for (int i = 0; i < n; i++) {
		cin >> arr[i];
	}
	sort(arr, arr + n);
	int ptr = 0;
	while (ptr < n && arr[ptr] == 1)
		ptr++;
	if (ptr > 0) {
		for (int i = ptr; i < n; i++) {
			if (prime[arr[i] + 1] == (arr[i] + 1)) {
				cout << ptr + 1 << '\n';
				for (int j = 0; j < ptr; j++)
					cout << 1 << ' ';
				cout << arr[i];
				return 0;
			}
		}
		if (ptr > 1) {
			cout << ptr << '\n';
			for (int i = 0; i < ptr; i++)
				cout << 1 << ' ';
			return 0;
		}
	}
	for (int i = 0; i < n; i++) {
		for (int j = i + 1; j < n; j++) {
			if (prime[arr[i] + arr[j]] == (arr[i] + arr[j])) {
				cout << 2 << '\n';
				cout << arr[i] << ' ' << arr[j];
				return 0;
			}
		}
	}
	cout << 1 << '\n';
	cout << arr[0];
	return 0;
}