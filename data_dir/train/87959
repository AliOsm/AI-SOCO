#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define ll long long
#define F first
#define S second
#define FOR(rem, msk, k) for (int rem = msk; rem < (int)k; rem++)

int n;
string s;
int mod = (int)1e9 + 7;
int mem[200][201][201];
int kmp[200];

int dp(int i, int j, int k)
{
    if (i == n)
    {
        return (k == s.length() && j == 0) ? 1 : 0;
    }
    if (mem[i][j][k] != -1)
        return mem[i][j][k];
    int ans = 0;
    if (k == s.length())
    {
        ans += dp(i + 1, j + 1, k);
        ans %= mod;
        if (j > 0)
        {
            ans += dp(i + 1, j - 1, k);
            ans %= mod;
        }
    }
    else
    {
        int k2 = k;
        while (k2 > 0 && s[k2] != '(')
            k2 = kmp[k2 - 1];
        if (s[k2] == '(')
            k2++;
        ans += dp(i + 1, j + 1, k2);
        ans %= mod;
        if (j > 0)
        {
            k2 = k;
            while (k2 > 0 && s[k2] != ')')
                k2 = kmp[k2 - 1];
            if (s[k2] == ')')
                k2++;
            ans += dp(i + 1, j - 1, k2);
            ans %= mod;
        }
    }
    return mem[i][j][k] = ans;
}

main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin >> n;
    n *= 2;
    cin >> s;
    memset(mem, -1, sizeof mem);
    kmp[0] = 0;
    for (int i = 1; i < s.length(); i++)
    {
        int j = kmp[i - 1];
        while (j > 0 && s[j] != s[i])
            j = kmp[j - 1];
        if (s[j] == s[i])
            j++;
        kmp[i] = j;
    }
    cout << dp(0, 0, 0);
}