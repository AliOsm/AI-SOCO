#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <algorithm>
#include <map>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <iomanip>
#include <queue>
#include <stack>
#include <cassert>
#include <unordered_map>
#include <unordered_set>

using namespace std;

typedef long long ll;

const int N = 2e5 + 5;

int n, m;
vector<int> g[N];
bool was[N];
int mn, mx;

void dfs(int v) {
    was[v] = 1;
    mn = min(mn, v);
    mx = max(mx, v);
    for(int to : g[v]) {
        if(!was[to]) {
            dfs(to);
        }
    }
}

int main() {
    cin >> n >> m;
    for(int i = 1; i <= m; ++i) {
        int u, v;
        cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
    vector< pair<int,int> > a;
    for(int i = 1; i <= n; ++i) {
        if(!was[i]) {
            mn = numeric_limits<int>::max();
            mx = numeric_limits<int>::min();
            dfs(i);
            a.push_back({mn, mx});
        }
    }
    sort(a.begin(), a.end());
    
    int ans = 0;
    int R = 0;
    for(int i = 0; i < a.size(); ++i) {
        int l = a[i].first, r = a[i].second;
        if(l <= R) {
            ans++;
        }
        R = max(R, r);
    }
    cout << ans << endl;
}
