#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define sc3(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define scs(a) scanf("%s", a)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl
#define dbs(x) cerr << x << endl
#define imprime(x, Y)                              \
  for (int X = 0; X < Y; X++) cerr << x[X] << " "; \
  cerr << endl;
typedef long long int ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vector<ii> > vvii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
ll n, m, k, x, y;
int main()
{
  cin >> n >> m >> k >> x >> y;
  if (n > 1) {
    ll den = (2 * n - 2);
    ll nvoltas = k / (den * m);
    ll maximo = 2 * nvoltas;
    if (n == 2) maximo = maximo / 2;
    ll minimo = nvoltas;
    ll xablau = k % (den * m);
    if ((xablau + m - 1) / m > n) maximo++;
    if (xablau / m >= n) minimo++;
    if (n==2 and ((k % (den * m)) + m - 1) / m >= 1) maximo++;
    if (n>2 and ((k % (den * m)) + m - 1) / m > 1) maximo++;
    maximo=max(1ll,maximo);
    cout << maximo << " " << minimo << " ";
    ll serg = 0;
    if (x == 1 or x == n) {
      serg = nvoltas;
      ll linhaqueeuto = (k % (den * m)) / m + 1;
      if (linhaqueeuto > x)
        serg++;
      else if (linhaqueeuto == x and (((k % (den * m)) % m) >= y))
        serg++;
    }
    else {
      serg = 2 * nvoltas;
      ll linhaqueeuto = (k % (den * m)) / m + 1;
      if (linhaqueeuto > n) {
        serg++;
        ll linhareal = 2 * n - linhaqueeuto;
        if (x > linhareal)
          serg++;
        else if (x == linhareal and ((k % (den * m)) % m >= y))
          serg++;
      }
      else {
        if (x < linhaqueeuto)
          serg++;
        else if (x == linhaqueeuto and ((k % (den * m)) % m >= y))
          serg++;
      }
    }
    cout << serg << endl;
  }
  else {
    ll minimo = k / m;
    ll maximo = (k + m - 1) / m;
    ll serg = k / m;
    if (y <= k % m) serg++;
    cout << maximo << " " << minimo << " " << serg << endl;
  }
  return 0;
}
