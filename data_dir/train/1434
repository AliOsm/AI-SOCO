#include <bits/stdc++.h>

#define all(v) (v).begin(), (v).end()
#define upmax(a, b) a = ((b > a) ? b : a)

using ll = long long;
using ld = long double;
using ull = unsigned long long;

using namespace std;

const int N = 200005;
const ll mod = 998244353;

ll dp[N], fc[N], szcomp[N];
vector <int> g[N];

ll mul(ll a, ll b) {
    return (a * b) % mod;
}

void add(ll &a, ll b) {
    a += b;
    a %= mod;
}

void dfs(int u, int p) {
    szcomp[u] = 1;
    ll k = 0;
    ll T = 1;
    for (int v : g[u]) {
        if (v != p) {
            dfs(v, u);
            szcomp[u] += szcomp[v];
            T = mul(T, dp[v]);
            k++;
        }
    }
    dp[u] = mul(fc[k + (u != 1)], T);
}

int main() {
    ios::sync_with_stdio(false); cin.tie(0);
    fc[0] = 1;
    for (ll i = 1; i < N; ++i)
        fc[i] = mul(fc[i - 1], i);
    int n;
    cin >> n;
    for (int i = 0; i < n - 1; ++i) {
        int u, v;
        cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
    dfs(1, -1);
    cout << mul(dp[1], n) << "\n";
    return 0;
}