#include <iostream>
#include<memory.h>
#include <map>
#include <string>
#include <iomanip>
#include <fstream>
#include <vector>
#include <algorithm>
#include <stack>
#include <queue>
#include <cmath>
#include <set>
using namespace std;

/*
*/

int main()
{
	int n;
	cin>>n;
	vector<int> a(n+1, 100000000);
	vector<int> b(n+1, 100000000);
	vector<int> at(n+1, 0);
	vector<int> bt(n+1, 0);
	int A, B;
	A = B = 0;
	for (int i = 0; i < n; i++)
	{
		int x;
		cin>>x;
		if (x == 1)
		{
			A++;
			a[A] = i;
		}
		else
		{
			B++;
			b[B] = i;
		}
		at[i] = A;
		bt[i] = B;
	}
	vector<pair<int, int> > r;
	for (int i = 1; i <= n; i++)
	{
		int j = -1;
		int A, B;
		A = B = 0;
		int As, Bs;
		As = Bs = 0;
		while (j < n-1)
		{
			if (A+i > n && B+i > n)
			{
				break;
			}
			
			if (B+i > n || (A+i <= n && a[A+i] < b[B+i]))
			{
				A = A+i;
				As++;
				j = a[A];
				if (j >= n) break;
				B = bt[j];
			}
			else if (A+i > n || b[B+i] < a[A+i])
			{
				B = B+i;
				Bs++;
				j = b[B];
				if (j >= n) break;
				A = at[j];
			}
			else
				break;
		}
		if (j != n-1 || As == Bs) continue;
		if (As > Bs)
		{
			if (at[n-1] != A) continue;
			else if (a[A] != n-1) continue;
			else r.push_back(make_pair(max(As, Bs), i));
		}
		else
		{
			if (bt[n-1] != B) continue;
			else if (b[B] != n-1) continue;
			else r.push_back(make_pair(max(As, Bs), i));
		}
	}
	sort(r.begin(), r.end());
	cout<<r.size()<<endl;
	for (int i = 0; i < r.size(); i++) cout<<r[i].first<<" "<<r[i].second<<endl;
}