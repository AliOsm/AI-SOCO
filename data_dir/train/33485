#include <bits/stdc++.h>
using namespace std;

int A[200005];
long long B[200005];

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(NULL), cout.tie(NULL);

    int N, K;
    cin >> N >> K;
    
    for(int i=1; i<=N; i++)
        cin >> A[i];
    
    sort(A+1, A+1+N);
    
    for(int i=1; i<=N; i++)
        B[i] = B[i-1] + A[i];
    
    long long ans = 0;
    int currHt = A[N], prevPtr = N - 1;
    
    while(currHt != A[1])
    {
        int currBreakPt = -1, currPtr = -1;
        int left = A[1], right = currHt - 1;
        
        while(left <= right)
        {
            int mid = (left + right)/2;
            int ptr = upper_bound(A+1, A+1+N, mid) - A;
            
            long long sum = (B[prevPtr] - B[ptr-1]) - (long long) mid * (prevPtr - ptr + 1);
            sum += (long long) (N - prevPtr) * (currHt - mid);
            
            if(sum <= K)
                currBreakPt = mid, currPtr = ptr - 1, right = mid - 1;
            else
                left = mid + 1;
        }
        
        ans++;
        prevPtr = currPtr;
        currHt = currBreakPt;
    }
    
    cout << ans << "\n";
    return 0;
}
