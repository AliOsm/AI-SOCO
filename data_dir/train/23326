#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define N 300100

int n;
ll a[N];
multiset<pair<ll, pair<ll, ll> > > have;

int main(){
//	freopen("in.in", "r", stdin);
//	freopen("out.out", "w", stdout);
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	srand(time(NULL));

	cin >> n;
	a[n + 1] = 1e18;
	a[0] = 1e18;
	for (int i = 1; i <= n; i++) cin >> a[i], have.insert(make_pair(a[i], make_pair(i, i)));
	while (have.size() > 1){
		ll h = have.begin()->first, from = have.begin()->second.first, to = have.begin()->second.second;
		have.erase(have.begin());
		while (!have.empty()){
			ll nxtH = have.begin()->first, nxtFrom = have.begin()->second.first, nxtTo = have.begin()->second.second;
			if (nxtH == h && to + 1 == nxtFrom){
				to = nxtTo;
				have.erase(have.begin());
			}
			else{
				if (to - from + 1 == n) return cout << "YES" << endl, 0;
				ll goal = min(a[from - 1], a[to + 1]);
				if ((to - from + 1) % 2 != 0) return cout << "NO" << endl, 0;
				a[from] = goal;
				a[to] = goal;
				have.insert(make_pair(goal, make_pair(from, to)));
				break;
			}
		}
	}
	cout << "YES" << endl;

	return 0;
}