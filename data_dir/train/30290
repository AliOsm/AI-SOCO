#include "bits/stdc++.h"
using namespace std;

long long ClockWiseSteps( int N , int k , long long First , long long Second ){
    long long limit , g , l;
    limit = N * 1LL * k;
    if( Second >= First ) l = Second - First;
    else l = limit - ( First - Second );
    g = __gcd( limit , l );
    return ( limit / g ) ; 
}

long long CounterClockWiseSteps( int N , int k , long long First , long long Second ){
    long long limit , g , l;
    limit = N * 1LL * k;
    if( Second < First ) l = First - Second;
    else l = limit - ( Second - First );
    g = __gcd( limit , l );
    return ( limit / g );
}

pair<long long, long long> FindStepCount( int N , int k , int a , int b , long long First ){
    long long Min = 1000000000000000000LL;
    long long Steps , Pos , Second , Max = 0LL;
    
    for( int i = 0 ; i < N ; ++i ){
        Pos = k * 1LL * i + 1;
        Second = Pos + b;
        Steps = ClockWiseSteps( N , k , First , Second );
        Min = min( Min , Steps );
        Max = max( Max , Steps );
        Steps = CounterClockWiseSteps( N , k , First , Second );
        Min = min( Min , Steps );
        Max = max( Max , Steps );
        if( i == 0 && b > 0 ) Second = ( N * 1LL * k ) - ( b - 1 );
        else Second = Pos - b;
        Steps = ClockWiseSteps( N , k , First , Second );
        Min = min( Min , Steps );
        Max = max( Max , Steps );
        Steps = CounterClockWiseSteps( N , k , First , Second );
        Min = min( Min , Steps );
        Max = max( Max , Steps );
    }

    return {Min , Max};
}

int main(){
    int N , k , a , b;
    scanf( "%d%d%d%d" , &N , &k , &a , &b );
    long long Min = 1000000000000000000LL , Max = 0LL;
    pair<long long, long long> P;
    P = FindStepCount( N , k , a , b , 1 + a );
    Min = min( Min , P.first );
    Max = max( Max , P.second );
    if( b >= 1 ) P = FindStepCount( N , k , a , b , ( N * 1LL * k ) - ( a - 1 ) );
    Min = min( Min , P.first );
    Max = max( Max , P.second );
    printf( "%lld %lld\n" , Min , Max );
    return 0;
}