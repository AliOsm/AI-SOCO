#include <bits/stdc++.h>

using namespace std;

int n, m[1000], z[1000], j, Z;
char a[1000][1000];
bool used[1000];
bool f;


void dfs(int v)
{
    if (used[v])
        return ;
    used[v] = true;
    if (m[v] > Z)
        j = min(j, v);
    for (int i = 0; i < n; ++i)
        if (a[i][v] == '1')
            dfs(i);
}

void dfs1(int v)
{
    if (used[v])
        return ;
    used[v] = true;
    if (v == j)
    {
        f = true;
        return ;
    }
    for (int i = 0; i < n; ++i)
        if (a[i][v] == '1')
        {
            swap(m[v], m[i]);
            z[m[v]-1] = v;
            z[m[i]-1] = i;
            dfs1(i);
            if (f)
            {
                if (m[v] < m[i])
                {
                    swap(m[v], m[i]);
                    z[m[v]-1] = v;
                    z[m[i]-1] = i;
                }
                return ;
            }
            swap(m[v], m[i]);
            z[m[v]-1] = v;
            z[m[i]-1] = i;
        }
}

int main()
{
    cin >> n;
    for (int i = 0; i < n; ++i)
    {
        cin >> m[i];
        z[m[i] - 1] = i;
    }
    for (int i = 0; i < n; ++i)
        for (int j = 0; j < n; ++j)
            cin >> a[i][j];
    for (int i = 0; i < n; ++i)
    {
        Z = i + 1;
        memset(used,false,sizeof(used));
        j = z[i];
        dfs(z[i]);
        f = false;
        memset(used,false,sizeof(used));
        dfs1(z[i]);
    }
    for (int i = 0; i < n; ++i)
        cout << m[i] << " ";
	return 0;
}
