#include <bits/stdc++.h>
using namespace std;

template<typename T>
void out(T x) { cout << x << endl; exit(0); }
#define watch(x) cout << (#x) << " is " << (x) << endl




typedef long long ll;
const ll mod = 1e9+7;
const int maxn = 1010;


void relax(ll& x,ll y) {
    if (y>x) x=y;
}

int n, m;
ll g[maxn][maxn];
ll dp[maxn][maxn][4];

int main() {
    ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);
    cin>>n>>m;
    for (int i=0; i<n; i++) {
	for (int j=0; j<m; j++) {
	    cin>>g[i][j];
	}
    }

    
    // for (int i=0; i<n; i++) {
    // 	for (int j=0; j<m; j++) {
    // 	    for (int k=0; k<4; k++) {
    // 		dp[i][j][k]+=g[i][j];
    // 	    }
    // 	}
    // }

    //1
    for (int i=0; i<n; i++) {
	for (int j=0; j<m; j++) {
	    if (i) relax(dp[i][j][1],dp[i-1][j][1]);
	    if (j) relax(dp[i][j][1],dp[i][j-1][1]);
	    dp[i][j][1]+=g[i][j];
	}
    }


    //0
    for (int i=0; i<n; i++) {
	for (int j=m-1; j>=0; j--) {
	    if (i) relax(dp[i][j][0],dp[i-1][j][0]);
	    if (j+1<m) relax(dp[i][j][0],dp[i][j+1][0]);
	    dp[i][j][0]+=g[i][j];
	}
    }

    //2
    for (int i=n-1; i>=0; i--) {
	for (int j=0; j<m; j++) {
	    if (i+1<n) relax(dp[i][j][2], dp[i+1][j][2]);
	    if (j) relax(dp[i][j][2], dp[i][j-1][2]);
	    dp[i][j][2]+=g[i][j];
	}
    }


    //3
    for (int i=n-1; i>=0; i--) {
	for (int j=m-1; j>=0; j--) {
	    if (i+1<n) relax(dp[i][j][3], dp[i+1][j][3]);
	    if (j+1<m) relax(dp[i][j][3],dp[i][j+1][3]);
	    dp[i][j][3]+=g[i][j];
	}
    }







    ll ans = 0;

    for (int i=1; i+1<n; i++) {
	for (int j=1; j+1<m; j++) {
	    ans=max(ans, dp[i][j-1][1]+dp[i][j+1][3]+dp[i-1][j][0]+dp[i+1][j][2]);
	    
	    ans=max(ans, dp[i-1][j][1]+dp[i+1][j][3]+dp[i][j+1][0]+dp[i][j-1][2]);
	}
    }

    cout<<ans<<endl;
    return 0;
}
