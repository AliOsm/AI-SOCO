#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
#include <unordered_map>
#include <unordered_set>

using namespace std;
void Emsawy(){
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
}
#define V vector
#define MP make_pair
#define all(v)  ((v).begin()), ((v).end())
#define allr(v) ((v).rbegin()), ((v).rend())
#define clr(v, d) memset(v, d, sizeof(v))
#define sf(x) scanf("%d", &x)
#define sf2(x, y) scanf("%d %d", &x, &y)
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define sfll(x) scanf("%I64d", &x)
#define sfll2(x, y) scanf("%I64d %I64d", &x, &y)
#define sfll3(x, y, z) scanf("%I64d %I64d %I64d", &x, &y, &z)
typedef long long ll;
int dx[]{1, -1, 0, 0, 1, -1, 1, -1};
int dy[]{0, 0, 1, -1, 1, -1, -1, 1};
ll suf(ll x) { return (x * (x + 1)) / 2; }
V<V<pair<int, int> > > adj;
const ll mod = 1e9 + 7, oo = 1e9 , M = 100005;
int n, m, a, b;
V<int>odd, even;
map<int, bool>used;
int go(int &ev, int &od  , int me , bool tk){
	if (ev > od){
		if (me % 2 == 1){
			if (odd.size() == 0) return -1;
			if (tk) return me;
			me = odd.back();
			odd.pop_back();
			return me;
		}
		else{
			if (odd.size() == 0) return -1;
			me = odd.back();
			odd.pop_back();
			ev--, od++;
			return me;
		}
	}
	else if (ev < od){
		if (me % 2 == 1){
			if (even.size() == 0) return -1;
			me = even.back();
			even.pop_back();
			ev++, od--;
			return me;
		}
		else{
			if (even.size() == 0) return -1;
			if (tk) return me;
			me = even.back();
			even.pop_back();
			return me;
		}
	}
	else {
		if (tk) return me;
		if (me % 2 == 1){
			if (odd.size() == 0) return -1;
			me = odd.back();
			odd.pop_back();
			return me;
		}
		else{
			if (even.size() == 0) return -1;
			me = even.back();
			even.pop_back();
			return me;
		}
	}
}
int main()
{
	Emsawy();
	while (cin >> n >> m){
		odd.clear(), even.clear();
		used.clear();
		int Ao = 0, Ae = 0;
		map<int, V<int> > mp;
		V<int>in(n);
		for (int i = 0; i < n; i++){
			sf(in[i]);
			if (in[i] % 2 == 0) Ae++;
			else Ao++;
			mp[in[i]].push_back(i);
			used[in[i]] = 1;
		}

		int mn = min(n, m);
		for (int i = 1; i + 1 <= mn; i += 2){
			if(used[i] == 0) odd.push_back(i);
			if(used[i+1] == 0) even.push_back(i + 1);
		}
		if (mn % 2 == 1 && used[mn] == 0) odd.push_back(mn);

		bool ok = 1;
		int cnt = 0;
		for (auto it : mp){
			for (int i = 1; i < it.second.size(); i++){
				int ret = go(Ae, Ao, in[it.second[i]] , 0);
				if (ret == -1){
					ok = 0;
					break;
				}
				in[it.second[i]] = ret;
				cnt++;
			}
		}
		for (int i = 0; i < n; i++){
			int ret = go(Ae, Ao, in[i], 1);
			if (ret == -1){
				ok = 0;
				break;
			}
			if (ret == in[i]) continue;
			if (in[i] % 2 == 0) even.push_back(in[i]);
			else odd.push_back(in[i]);
			in[i] = ret;
			cnt++;
		}
		if (ok == 0 || Ae != Ao) cout << -1 << endl;
		else {
			cout << cnt << endl;
			for (int i = 0; i < n; i++)
				cout << in[i] << " \n"[i == n - 1];
		}
 	}
	return 0;
}