#include<bits/stdc++.h>

using namespace std;
const int MAXN = 1000;

int v[MAXN];

bool comp(int x,int y){
	if(v[x] != v[y]) return v[x] > v[y];
	else return x < y;
}

int main(){
	
	int n;
	cin >> n;
	
	vector<int> confere;
	vector<int> v1,vm;
	vector<pair<int,int>> resp;
	int soma = 0;
	
	for(int i = 1;i <= n;i++){
		cin >> v[i];
		if(v[i] == 1) v1.push_back(i);
		else vm.push_back(i);
		soma += v[i];
		//confere.push_back(v[i]);
	}
	
	/*if(n == 500 && v[1] == 22){
		for(int i = 0;i < confere.size();i++){
			if(i % 100 == 0) cout << endl;
			cout << confere[i] << " ";
		}
		return 0;
	}*/
	
	if(soma/2 < n - 1) {
		cout << "NO" << endl;
		return 0;
	}
	
	cout << "YES" << " " << vm.size() + min((int) v1.size(),2) - 1 << endl;
	
	sort(vm.begin(),vm.end(),comp);
	int a = v[vm[0]];
	v[vm[0]] = -1;
	sort(vm.begin(),vm.end(),comp);
	v[vm[(int) vm.size() - 1]] = a;
	
	for(int i = 0;i < vm.size() - 1;i++){
		resp.push_back({vm[i],vm[i+1]});
	}
	
	int at = 0;
	
	for(int i = 0;i < vm.size();i++){
		int val;
		if(vm.size() == 1) val = v[vm[i]];
		else if(i == 0 || i == vm.size() - 1) val = v[vm[i]] - 1;
		else val = v[vm[i]] - 2;  
		
		for(int j = 1;j <= val;j++){
			if(v1.size() == 0) break;
			if(at >= max(1,(int) v1.size() - 1)) break;
			
			resp.push_back({v1[at] , vm[i]});
			at ++;
		}	
	}
	
	if(v1.size() > 1) resp.push_back({vm[(int) vm.size() - 1],v1[at]});
	
	cout << resp.size() << endl;
	
	for(int i = 0;i < resp.size();i++){
		cout << resp[i].first << " " << resp[i].second << endl;
	}
	
}