#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <map>
#include <list>
#include <set>
#include <algorithm>
#include <cmath>
#include <queue>
#include <iterator>
#include <functional>
#include <numeric>
#include <cmath>
#include <stack>
#include <limits>

using namespace std;

#define ll long long
#define f0(i,n)for(ll i=0;i<n;i++)
#define f0r(i,n)for(ll i=n-1;i>=0;i--)
#define fc(i,c,n,s)for(ll i=c;i<=n;i+=s)
#define fcr(i,c,n,s)for(ll i=n;i>=c;i-=s)
#define sc(n) static_cast<ll>(n)
#define IO ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

typedef list<ll> LST;
typedef vector<ll> VEC;
typedef map<ll, ll> MAP;

int main() {
	IO;
	//ifstream cin("In.txt");
	ll n,k,nextIdx;
	cin >> n >> k;
	string st;
	cin >> st;
	VEC idx(n+7),dp(n+7);
	idx[n+1] = 1000007;
	fcr(i,1,n,1) {
		idx[i] = st[i-1] == '1' ? i : idx[i+1];
	}
	fc(i,1,n,1) {
		dp[i] = dp[i - 1] + i;
		nextIdx = idx[max(sc(1), i - k)];
		if (nextIdx <= i + k) {
			dp[i] = min(dp[i], dp[max(sc(1), nextIdx - k) - 1] + nextIdx);
		}
	}
	cout << dp[n] << endl;
	return 0;
}