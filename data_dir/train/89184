// There is nothing in a caterpillar that tells you its going to be a butterfly --------------------- !
#include<bits/stdc++.h>
using namespace std;
#define rep(i,n) for(int i=0;i<n;i++)
#define ll long long int
#define pi pair<ll,ll>
#define pii pair<pi,ll>
#define f first
#define mp make_pair
#define mod 1000000007
#define s second
#define pb push_back
#define ios ios_base::sync_with_stdio(0);cin.tie(0);

int sz[1000011];
int pa[1000011];
bool flag[1000011];
int f(int i){
    if(i==pa[i]) return i;
    return pa[i]=f(pa[i]);
}
void join(int i,int j){
    i=f(i);
    j=f(j);
    if(i!=j){
        if(sz[i]<sz[j]) swap(i,j);
        sz[i]+=sz[j];
        pa[j]=i;
    }
}
vector<int>g[1000011];
int r[1000011];
int c[1000011];
int main(){
    ios;
    int n,m;
    cin >> n >> m;
    rep(i,n) r[i]=-1;
    rep(j,m) c[j]=-1;
    vector<vector<int> >a(n,vector<int>(m));
    vector<vector<int> >x(n,vector<int>(m));

    rep(i,n){
        rep(j,m){
            cin >> a[i][j];
        }
    }
    rep(i,n*m+1){
        sz[i]=1;
        pa[i]=i;
    }
    rep(i,n){
        vector<pi>v;
        rep(j,m){
            v.pb({a[i][j],j});
        }
        sort(v.begin(),v.end());
        for(int j=1;j<v.size();j++){
            if(v[j].f==v[j-1].f){
                join(i*m+v[j].s,i*m+v[j-1].s);
            }
        }
    }
    rep(j,m){
        vector<pi>v;
        rep(i,n){
            v.pb({a[i][j],i});
        }
        sort(v.begin(),v.end());
        for(int i=1;i<v.size();i++){
            if(v[i].f==v[i-1].f){
                join(v[i].s*m+j,v[i-1].s*m+j);
            }
        }
    }
    vector<pi>s;
    rep(i,n){
        rep(j,m){
            g[f(i*m+j)].pb(i*m+j);
            s.pb({a[i][j],i*m+j});
        }
    }
    sort(s.begin(),s.end());
    for(auto p:s){
        if(flag[f(p.s)]) continue;
        flag[f(p.s)]=1;
        int cur=f(p.s);
        int cnt=1;
        for(auto w:g[cur]){
            int i=w/m;
            int j=w%m;
            if(r[i]!=-1){
                cnt=max(cnt,x[i][r[i]]+1);
            }
            if(c[j]!=-1){
                cnt=max(cnt,x[c[j]][j]+1);
            }
        }
        for(auto w:g[cur]){
            int i=w/m;
            int j=w%m;
            x[i][j]=cnt;
            r[i]=j;
            c[j]=i;
        }
    }
    rep(i,n){
        rep(j,m){
            cout<<x[i][j]<<" ";
        }
        cout<<"\n";
    }
}
