#include <functional>
#include <algorithm>
#include <iostream>
#include <fstream>
#include <cstdlib>
#include <numeric>
#include <iomanip>
#include <cstring>
#include <cassert>
#include <memory>
#include <chrono>
#include <cstdio>
#include <bitset>
#include <vector>
#include <math.h>
#include <queue>
#include <stack>
#include <ctime>
#include <set>
#include <map>

using namespace std;

#define rep(i,a,n) for (int i=(a);i<(n);i++)
#define per(i,n,a) for (int i=(n)-1;i>=(a);i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;

template <typename T>
T nextInt() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if (ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return x * p;
}

const int maxn=(int)2e5+10;
const int inf=(int)1e9+5;
const int mod=(int)1e6+3;
const ll llinf=(ll)1e18+5;
const ld pi=acos(-1.0);

#define int long long

int mul(int x,int y){
    return (1LL*x*y)%mod;
}

int binpow(int x,int y,int mod=(int)1e6+3){
    int ret=1;
    while(y>0){
        if(y&1)ret=mul(ret,x);
        x=mul(x,x);
        y/=2;
    }
    return ret;
}

int calc(int n,int k){
    int frst=binpow(2,n)-k+1;
    frst=(frst%mod+mod)%mod;
    int ret=1;
    rep(i,0,mod){
        ret=mul(ret,frst+i);
    }
    ret=binpow(ret,k/mod);
    rep(i,0,k%mod){
        ret=mul(ret,frst+i);
    }
    return ret;
}
ll getfact(ll x){
    ll ret=0;
    while(x){
        x/=2;
        ret+=x;
    }
    return ret;
}

int get(int n,int k){
    if(k%2==1){
        return get(n,k+1);
    }
    k=k/2-1;
    int md=mod-1;
    ll ret=n;
    ret+=getfact(k)+k;
    ret=(ret%md+md)%md;
    return ret;
}

bool bad(int n,int k){
    ll x=1;
    while(n--){
        x=min(x*2,k);
        if(x==k)return false;
    }
    return true;
}

int q(int n,int k){
    ll val=(1LL<<n)-k;
    ll ret=0;
    while(n){n--;ret+=(1LL<<n);}
    while(val){
        val/=2;
        ret-=val;
    }
    return ret;
}

main() {

   // freopen("input.txt", "r", stdin);
   // freopen("output.txt", "w", stdout);

    ll n,k;
    cin>>n>>k;

    if(bad(n,k))return cout<<1<<' '<<1<<endl,0;
    ll b=binpow(binpow(2,n),k);
    ll a=calc(n,k);
    /*cout<<a<<endl;
    cout<<b<<endl;

    cout<<get(n,k)<<endl;
    cout<<q(n,k)<<endl;*/
    ll c=binpow(2,get(n,k));


    a=mul(a,binpow(c,mod-2));
    b=mul(b,binpow(c,mod-2));
    cout<<(b-a+mod)%mod<<' '<<b<<endl;
    return 0;
}
