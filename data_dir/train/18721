//{{{By oToToT
#include <iostream>
#include <iomanip>
#include <string>
#include <algorithm>
#include <vector>
#include <queue>
#include <bitset>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <random>
#include <utility>
#include <stack>
#include <sstream>
#include <functional>
#include <deque>
#include <cassert>
using namespace std;
/* include everything for Kotori~ <3 */

using lld = int64_t;
using llu = uint64_t;
using llf = long double;
using PII = pair<int,int>;
using PIL = pair<int,lld>;
using PLI = pair<lld,int>;
using PLL = pair<lld,lld>;
template<typename T>
using maxHeap = priority_queue<T,vector<T>,less<T>>;
template<typename T>
using minHeap = priority_queue<T,vector<T>,greater<T>>;
/* define some types for Ruby! */

#define FF first
#define SS second
#define SZ(x) (int)((x).size())
#define ALL(x) begin(x), end(x)
#define PB push_back
#define WC(x) while(x--)
/* make code shorter for Di~a~ */

template<typename Iter>
ostream& _out(ostream &s, Iter b, Iter e) {
	s<<"[";
	for ( auto it=b; it!=e; it++ ) s<<(it==b?"":" ")<<*it;
	s<<"]";
	return s;
}
template<typename A, typename B>
ostream& operator <<( ostream &s, const pair<A,B> &p ) { return s<<"("<<p.FF<<","<<p.SS<<")"; }
template<typename T>
ostream& operator <<( ostream &s, const vector<T> &c ) { return _out(s,ALL(c)); }
/* make output easier for Ainyan~n~ */

bool debug = 0;
#define DUMP(x) if(debug) cerr<<__PRETTY_FUNCTION__<<":"<<__LINE__<<" - "<<(#x)<<"="<<(x)<<'\n'
template<typename T>
void DEBUG(const T& x){if(debug) cerr<<x;}
template<typename T, typename... Args>
void DEBUG(const T& head,const Args& ...tail){
	if(debug){cerr<<head; DEBUG(tail...);}
}
/* Let's debug with Nico~Nico~Ni */
//}}}

map<int,int> saved;

int f(int x){
	int mx = 0;
	for(int i=1;i<x;i++)
		mx = max(mx, gcd(i^x, i&x));
	return mx;
}

int main(int argc, char* argv[]){
	if(argc>1 and string(argv[1])=="-D") debug=1;
	if(!debug){ios_base::sync_with_stdio(0);cin.tie(0);}
	saved[3]=1;
saved[7]=1;
saved[15]=5;
saved[31]=1;
saved[63]=21;
saved[127]=1;
saved[255]=85;
saved[511]=73;
saved[1023]=341;
saved[2047]=89;
saved[4095]=1365;
saved[8191]=1;
saved[16383]=5461;
saved[32767]=4681;
saved[65535]=21845;
saved[131071]=1;
saved[262143]=87381;
saved[524287]=1;
saved[1048575]=349525;
saved[2097151]=299593;
saved[4194303]=1398101;
saved[8388607]=178481;
saved[16777215]=5592405;
saved[33554431]=1082401;
	int t; cin >> t;
	WC(t){
		int x, ans = 0; cin >> x;
		if(saved.find(x)!=saved.end()){
			cout << saved[x] << '\n';
			continue;
		}
		for(int i=1;i<=x;i<<=1){
			if((x&i)==0 and (ans|i)<x)
				ans |= i;
		}
		if(ans==0){
			assert(false);
		}else cout << gcd(ans^x, ans&x) << '\n';
	}
	return 0;
}