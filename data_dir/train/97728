#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
void sprint(string s) {for (int i = 0; i < s.size(); ++i)	printf("%c",s[i]); printf("\n");}
ll c[100001],dp[100001][2];
string s[100001],t[100001];
string h(string s){
	string ans=s;
	int n=s.size();
	for (int i = 0; i < s.size(); ++i)
	{
		ans[i]=s[n-1-i];
	}
	return ans;
}
void f(int id){
	dp[id][0]=1e18;
	dp[id][1]=1e18;
	if(dp[id-1][0]!=-1){
		if(s[id]>=s[id-1]) dp[id][0]=dp[id-1][0];
		if(t[id]>=s[id-1]) dp[id][1]=dp[id-1][0]+c[id];
	}
	if(dp[id-1][1]!=-1){
		if(s[id]>=t[id-1]) dp[id][0]=min(dp[id][0],dp[id-1][1]);
		if(t[id]>=t[id-1]) dp[id][1]=min(dp[id][1],dp[id-1][1]+c[id]);
	}
	bool ans=0;
	for (int i = 0; i < 2; ++i)
	{
		if(dp[id][i]==1e18) dp[id][i]=-1;
		else ans=1;
	}
	if(!ans) {
		cout<<-1<<endl;
		exit(0);
	}
}
int main(){
	ios_base::sync_with_stdio(0);
	int n;
	cin>>n;
	for (int i = 0; i < n; ++i)
	{
		cin>>c[i];
	}
	vector<char>v[n];
	for (int i = 0; i < n; ++i)
	{
		cin>>s[i];
		t[i]=h(s[i]);
	}
	dp[0][1]=c[0];
	for (int i = 1; i < n; ++i)
	{
		f(i);
	}
	ll ans=1e18;
	for (int i = 0; i < 2; ++i)
	{
		if(dp[n-1][i]!=-1) ans=min(ans,dp[n-1][i]);
	}
	cout<<ans<<endl;
	return 0;
}