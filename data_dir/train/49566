#include <bits/stdc++.h>

using namespace std;

#include<bits/stdc++.h>

using namespace std;

using ll = unsigned long long;
using ii = pair<int, int>;
using iii = pair<ii, int>;
#define ff first
#define ss second
#define rk1 ff.ff
#define rk2 ff.ss
#define pb push_back

const int N = 1000006;

char sc[N];
int t, pf[N];

void pfunc(){
	memset(pf,0, sizeof pf);
	int L = 0, R = 0;
	for(int i = 1; i < t; i++){
		if(i <= R)
			pf[i] = min(pf[i - L], R - i + 1);
		while(pf[i] + i < t && sc[pf[i] + i] == sc[pf[i]]) 
            pf[i]++;
        if(R < i + pf[i] - 1)
            L = i, R = i + pf[i] - 1;
	}
}

bool solve(int result[], int t, int m, int n, int k, int x = 0){
	vector<int> venise[N];
	for(int i = 0; i <= m; i++)
		result[i] = N;
	
	for(int i = m+1; i < t; i++){
		int id = i - (m + 1);
		int l = pf[i];
		l = min(l, k);
		if(l >= m && (n - id >= k || id >= k) && x == 0){
			printf("Yes\n");
			if(id + k <= n)
				printf("%d %d\n",max(0,id - k) + 1, max(0,id - k) + k + 1 );
			else
				printf("%d %d\n",1, n-k+1 );
			return 1;
		}
		// if(n == 166723 && m == 52350 && l >= 52349){
		// 	printf("%d %d %d\n",id,l,x );
		// }
		if(id + l - 1 >= k-1)
			venise[l].pb(id + l - 1);
	}

	set<int> se;
	int acc = -1;
	for(int i = m; i >= 0; i--){
		acc++;
		for(int j : venise[i])
			se.insert(j + acc);
		while(se.size() && *se.begin() - acc < k-1)
			se.erase(se.begin());
		if(se.size())
			result[i] = *se.begin() - acc;
	}
	return 0;
}

int main(){
	int n, m, k;
	char s[500005];
	char c[500005];
	scanf("%d %d %d",&n, &m, &k);
	scanf("%s %s",s, c);
	t = n + m + 1;
	strcat(sc,c);
	strcat(sc,"$");
	strcat(sc,s);
	pfunc();
	int ini[N];
	if(solve(ini, t, m, n, k))
		return 0;
	ini[0] = k-1;
	reverse(s, s + n);
	reverse(c, c + m);
	sc[0] = 0;
	strcat(sc,c);
	strcat(sc,"$");
	strcat(sc,s);
	pfunc();

	int fim[N];
	if(solve(fim, t, m, n, k, 1))
		return 0;
	for(int i = m; i >= 0; i--)
		fim[i] = n - fim[i] - 1;
	for(int i = 0; i <= m; i++){
		if(fim[m - i] > ini[i]){
			printf("Yes\n");
			printf("%d %d\n",ini[i] - k + 2, fim[m-i]+ 1 );
			return 0;
		}
	}
	printf("No\n");
}