#include <iostream>
#include <vector>
#include <algorithm>
#include <memory>
#include <map>
#include <unordered_map>
#include <set>
#include <queue>
#include <unordered_set>
#include <functional>
#include <climits>
#include <cstring>
#include <cmath>
#include <numeric>
#include <random>
#include <tuple>
#include <chrono>

using namespace std;
using ll = long long;
using ull = unsigned long long;
const int oo = numeric_limits<int>::max() / 2;
mt19937 rnd(std::chrono::steady_clock::now().time_since_epoch().count());

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);


  auto solve = []() {
    ll n, k;
    cin >> n >> k;
    ll lo = 0, hi = n * k + k;
    while(hi - lo > 1) {
      ll m = lo + (hi - lo) / 2;
      ll amount = m - m / n;
      if (amount < k) {
        lo = m;
      } else {
        hi = m;
      }
    }
    cout << hi << endl;
  };

  int T;
  cin >> T;
  for(int i = 0; i < T; ++i) {
    solve();
  }
  
  return 0;
}
