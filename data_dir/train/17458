//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")


#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define vi vector<int>

const int maxn=(int)(2e5+5);
const ll mod=(ll)(998244353);
int a[maxn],lg[maxn];
const int LN=19;
int st[LN][maxn];
int pos[maxn];

static int query(int l,int r)
{
    int val=lg[r-l];

    int x=st[val][l],y=st[val][r-(1<<val)+1];

    return (a[x]>=a[y]?x:y);
}

ll solve(int l,int r)
{
    if(l>r)
    {
        return 0;
    }

    else
    {
        int idx=query(l,r);ll ret=0;

      //  cout<<a[idx]<<" "<<l<<" "<<r<<endl;

        if(idx-l<=r-idx)
        {
            for(int i=l;i<=idx;i++)
            {
                int now=a[idx]-a[i];

                if(now>=1 && pos[now]>=idx && pos[now]<=r)
                {
                    ret++;
                }
            }
        }

        else
        {
            for(int i=idx;i<=r;i++)
            {
                int now=a[idx]-a[i];

                if(now>=1 && pos[now]>=l && pos[now]<=idx)
                {
                    ret++;
                }
            }
        }

        return ret+solve(l,idx-1)+solve(idx+1,r);
    }
}

int main()
{
    ios_base::sync_with_stdio(0);

    int n;cin>>n;

    for(int i=0;i<n;i++)
    {
        cin>>a[i];

        pos[a[i]]=i;
    }

    for(int i=2;i<maxn;i++)
    {
        lg[i]=lg[i/2]+1;
    }

    for(int i=0;i<n;i++)
    {
        st[0][i]=i;
    }

    for(int i=1;i<LN;i++)
    {
        for(int j=0;(1<<i)+j<=n;j++)
        {
            int x=st[i-1][j],y=st[i-1][j+(1<<(i-1))];

            st[i][j]=(a[x]>=a[y])?x:y;
        }
    }

    ll res=solve(0,n-1);

    cout<<res<<endl;

    return 0;
}
