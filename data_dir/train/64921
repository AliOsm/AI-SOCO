#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define fs first
#define se second
#define pi 2*acos(0)
#define PI 3.14159265358979323846264338

typedef long long ll;
typedef unsigned long long ull;
typedef pair < int , int > pii;
typedef pair < ll , ll > pll;

const int N = 100010;
const int MX = 123456;
const int mod = (int)1e9 + 7;
const int base = 1023456789;
const ull BS1 = 10000019ULL;
const int INF = (1 << 29);

template < class T > inline void fastScan(T &x){
    register char c = getchar();
    int neg = 0; x = 0;
    for(   ; (c < 48 || c > 57) && (c != '-'); c = getchar());
    if(c == '-') { neg = 1; c = getchar(); }
    for(   ; c > 47 && c < 58; c = getchar()){
        x = (x << 1) + (x << 3) + c - 48;
    }
    if(neg) x = -x;
}

vector < int > p, q;

int Ok(int mid, int a, int b){
    p.clear(); q.clear();
    int seen[N] = {0};
    for(int i = mid; i >= 1; i--){
        if(i <= a){
            a -= i;
            seen[i] = 1;
            p.pb(i);
        }
    }
    for(int i = mid; i >= 1; i--){
        if(seen[i] == 0){
            if(i > b) return 0;
            b -= i;
            q.pb(i);
            seen[i] = 1;
        }
    }
    return 1;
}

int main(){
    int a, b;
    fastScan(a);
    fastScan(b);
    int low = 0, high = N, ans = 0;
    while(low <= high){
        int mid = (low + high) >> 1;
        if(Ok(mid, a, b)){
            ans = mid;
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    Ok(ans, a, b);
    printf("%d\n", (int)p.size());
    for(int i = 0; i < (int)p.size(); i++){
        printf("%d ", p[i]);
    }
    puts("");
    printf("%d\n", (int)q.size());
    for(int i = 0; i < (int)q.size(); i++){
        printf("%d ", q[i]);
    }
    puts("");
}
