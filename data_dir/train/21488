#include<bits/stdc++.h>
using namespace std;
#define int long long
vector<int> adj[200010];
int par[200010][21],pw[200010][21],a[200010],p[200010],w[200010],val[200010];
void dfs(int loc)
{
    par[loc][0] = p[loc];
    pw[loc][0] = w[loc];
    for(int i=1;i<=20;i++)
    {
        par[loc][i] = par[par[loc][i-1]][i-1];
        pw[loc][i] = pw[loc][i-1] + pw[par[loc][i-1]][i-1];
    }
    for(auto &i:adj[loc])
        dfs(i);
}
void dfs2(int loc)
{
    for(auto &i:adj[loc])
    {
        dfs2(i);
        val[loc] += val[i];
    }
}
int getidx(int loc, int val)
{
    for(int i=20;i>=0;i--)
    {
        if((pw[loc][i])<=val)
        {
            val -= pw[loc][i];
            loc = par[loc][i];
        }
    }
    return loc;
}
int32_t main()
{
    ios::sync_with_stdio(false);cin.tie(0);
    int n;
    cin>>n;
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
    }
    p[1] = 0;
    w[1] = 1e10;
    for(int i=2;i<=n;i++)
    {
        cin>>p[i]>>w[i];
        adj[p[i]].emplace_back(i);
    }
    dfs(1);
    for(int i=1;i<=n;i++)
    {
        val[p[i]]++;
        val[p[getidx(i,a[i])]]--;
    }
    dfs2(1);
    for(int i=1;i<=n;i++) cout<<val[i]<<" ";
}