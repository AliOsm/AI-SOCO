
#include<bits/stdc++.h>
#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define mod 1000000007
#define deb(x) cout<<#x<<" : "<<x<<endl;
#define deb2(x,y) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<endl;
#define deb3(x,y,z) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<"\t"<<#z<<" : "<<z<<endl;
 
#define FIO ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define endl '\n'
typedef long long ll;

 
using namespace std;
 
 
long long modulo(long long base,long long exponent,long long modulus);
long long choose(ll n,ll k);
ll inverse(ll a,ll m);
void build();
ll ncr(ll n,ll r);
 
const int nax=1e6+10;
const int LG=log2(nax)+1;
vector<ll> fact(nax);

#define inf 1000000000000000000

ll p[nax][LG],dp[nax][LG],w[nax]; 
 
int32_t main() {
 
    FIO
    //build();

    for(int i=0;i<nax;i++)
    {
    	for(int j=0;j<LG;j++)
    		dp[i][j]=inf;
    }

    ll q;
    cin>>q;

    ll cur=1;
    ll last =0;
    w[0]=inf;
    while(q--)
    {
    	ll t;
    	cin>>t;

    	
    	if(t==1)
    	{
    		ll r,ww;
    		cin>>r>>ww;

    		r^=last;
    		ww^=last;
    		cur++;
    		
    		w[cur]=ww;
    		if(w[r]>=w[cur])
    		{
    			p[cur][0] = r;
    		}
    		else
    		{
    			ll x=r;
    			for(int i=LG-1;i>=0;i--)
    			{
    				if(w[p[x][i]]<w[cur])
    				{
    					x = p[x][i];
    				}
    			}
    			p[cur][0]=p[x][0];
    		}

    		dp[cur][0] = (!p[cur][0])? inf : w[p[cur][0]];
    		for(int i=1;i<LG;i++)
    		{
    			p[cur][i] = p[p[cur][i-1]][i-1];
    			dp[cur][i] = (!p[cur][i]) ? inf : (dp[cur][i-1]+dp[p[cur][i-1]][i-1]);
    		}
    	}
    	else
    	{
    		ll r,x;
    		cin>>r>>x;

    		r^=last;
    		x^=last;

    		ll ans=1;
    		if(w[r]>x)
    		{
    			ans=0;
    		}
    		else
    		{
    		x-=w[r];
    		ans=1;
    		for(ll i=LG-1;i>=0;i--)
    		{
    			if(dp[r][i]<=x)
    			{
    				x-=dp[r][i];
    				r=p[r][i];
    				ans+=1LL<<i;
    			}
    		}
    		}
    		last=ans;

    		cout<<ans<<endl;
    	}
    }


 
    return 0;
}
 
ll ncr(ll n,ll r)
{
    if(r>n || r<0 || n<0)
        return 0;
    ll ans=fact[n];
    ll temp=(fact[n-r]*fact[r])%mod;
    ans=(ans*inverse(temp,mod))%mod;
    return ans;
}
 
void build()
{
    fact[0]=1;
    for(ll i=1;i<nax;i++)
        fact[i]=(fact[i-1]*i)%mod;
 
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
}
 
long long modulo(long long base,long long exponent,long long modulus)
{
    if(modulus ==1)
        return 0;
 
    long long result=1;
    base=base % modulus;
    while(exponent>0)
    {
        if(exponent%2==1)
        {
            result=(result*base) % modulus;
 
        }
        exponent=exponent>>1;
        base = (base*base) % modulus;
    }
    return result;
}
 
long long choose(ll n,ll k)
{
    if(k==0)  return 1;
    return (n* choose(n-1,k-1))/k;
}
 
void EE(ll a,ll b,ll &co1,ll &co2)
{
    if(a%b==0)
    {
        co1=0;
        co2=1;
        return;
    }
    EE(b,a%b,co1,co2);
    ll temp=co1;
    co1=co2;
    co2=temp-co2*(a/b);
}
 
ll inverse(ll a,ll m)
{
    ll x,y;
    EE(a,m,x,y);
    if(x<0) x+=m;
    return x;
}