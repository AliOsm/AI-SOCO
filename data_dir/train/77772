
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
using namespace std;
#define rep(i, n) for (int (i) = 0, j123 = n; (i) < j123; (i) ++)
#define rep1(i, n) for (int (i) = 1, j123 = n; (i) <= j123; (i) ++)
#define db(x) {cout << #x << " = " << (x) << endl;}
#define dba(a, x, y) {cout << #a << " :";for(int i123=(x);i123<=(y);i123++) cout<<setw(4)<<(a)[i123];cout<<endl;}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define sz(x) int(x.size())
#define endl '\n'
typedef long long ll;
typedef long double ld;
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const ld pi = acos(-1);
// const int MOD = ;

int bad[30][30];
string s;
int N, K;
int main()
{
  ios_base::sync_with_stdio(0); cout.precision(15); cout << fixed; cout.tie(0); cin.tie(0);
  cin >> s;
  N = sz(s);
  s = " " + s;
  cin >> K;
  rep1(haha,K)
  {
    char c1, c2;
    cin >> c1 >> c2;
    bad[c1-'a'][c2-'a']=1;
    bad[c2-'a'][c1-'a']=1;
  }
  int ans = 0;
  for (int i = 1; i <= N;)
  {
    int j = i;
    int cnt0 = 1;
    int cnt1 = 0;
    while (j + 1 <= N && (s[j+1]==s[i] || bad[s[j+1]-'a'][s[i]-'a']))
    {
      if (s[i] == s[j+1])
        cnt0++;
      else
        cnt1++;
      j++;
    }
    ans += min(cnt0,cnt1);
    i = j + 1;
  }
  cout << ans << endl;
}
