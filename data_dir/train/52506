#include<stdio.h>
#include<iostream>
#include<string.h>
#include<ctype.h>
#include<math.h>
#include<map>
#include<set>
#include<vector>
#include<queue>
#include<string>
#include<algorithm>
#include<time.h>
#include<bitset>
using namespace std;
void fre(){freopen("c://test//input.in","r",stdin);freopen("c://test//output.out","w",stdout);}
#define MS(x,y) memset(x,y,sizeof(x))
#define MC(x,y) memcpy(x,y,sizeof(x))
#define ls o<<1
#define rs o<<1|1
typedef long long LL;
typedef unsigned long long UL;
typedef unsigned int UI;
typedef pair<int,int>PII;
template <class T> inline void gmax(T &a,T b){if(b>a)a=b;}
template <class T> inline void gmin(T &a,T b){if(b<a)a=b;}
const int N=105,M=0,Z=1e9+7,maxint=2147483647,ms31=522133279,ms63=1061109567,ms127=2139062143;const double eps=1e-8,PI=acos(-1.0);//.0
int n;
int a[N];
int main()
{
	while(~scanf("%d",&n))
	{
		for(int i=1;i<=n;i++)scanf("%d",&a[i]);
		int st=0;
		for(int i=1;i<=n;i++)if(a[i]){st=i;break;}
		int ans=0;
		for(int i=1;i<=n;i++)if(a[i])
		{
			ans++;
			if(i-st-1==1)ans++;
			st=i;
		}
		printf("%d\n",ans);
	}
	return 0;
}
/*
【trick&&吐槽】
有的时候，有的名称故意给你复杂化。
比如这里，非要把两节课分开称呼，且名字叫做pair。
一定要学会读题，高效解题。

【题意】
在学校上课。一共有n节课的时间，有课数字为1，没课数字为0。
如果有连续两节课没课，我们会回家，否则就算没课我们也会呆在学校。
并且第一节课之间，最后一节课之后我们人在家。
让你判定，我们有多少节课待在学校里。

【类型】
模拟

【分析】
每次跳1，对于先后的两个1，我们看中间的空课数量，
只有恰好为1的时候我们会多待一节课的时间。
这样处理到最后就是答案

【时间复杂度&&优化】
O(n)

【数据】
Input
5
0 1 0 1 1
Output
4

Input
7
1 0 1 0 0 1 0
Output
4

Input
1
0
Output
0

*/