#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define Endl endl
#define pb push_back
#define mkp make_pair
#define scl(n) scanf("%lld",&n)
#define pfl(n) printf("%lld ",n)
#define sc(n) scanf("%d",&n)
#define pf(n) printf("%d ",n)
// struct gg{
//   ll first;
//   ll sec;
// };
// gg ap[100011];

// bool fun(gg x, gg y){
//   return x.first<y.first;
// }
vector<ll>factor;
vector<ll>sec[10000];
ll k,n;
ll ans = 0;
bool dfs(ll indx,ll level){
  if(level == k || factor[indx]==1){
    ans++;
    cout<<factor[indx]<<" ";
    if(ans==100000){
      return true;
    }else{
      return false;
    }
  }

  for(ll i=0;i<sec[indx].size();i++){
    // cout<<factor[sec[indx][i]]<<" ";
    if(dfs(sec[indx][i],level+1)){
      return true;
    }
  }

  return false;

}
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t,i,j,l,r,q,kk,x,y,c,m,p;
    cin>>n>>k;
    for(i=1;i<=sqrt(n);i++){
      if((n%i)==0){
        factor.push_back(i);
        if((n/i)!=i){
          factor.push_back(n/i);
        }
      }
    }
    sort(factor.begin(),factor.end());
    if(n==1){
      cout<<1;
      return 0;
    }
    if(k==1){
      for(i=0;i<factor.size();i++){
        cout<<factor[i]<<" ";
      }
      return 0;
    }
    for(i=0;i<factor.size();i++){
      for(j=0;j<=i;j++){
        if(factor[i]%factor[j] == 0){
          sec[i].push_back(j);
        }
      }
    }

    dfs(factor.size()-1,0);

return 0;
}