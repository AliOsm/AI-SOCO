#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <hash_map>
#include <map>
#include <hash_set>
#include <unordered_map>
#include <set>
#include <stack>
#include <algorithm>
#include <sstream>
#include <queue>

using namespace std;
typedef long long LL;
#define mems(arr, val) memset(arr, val, sizeof(arr));
#define iterat(A) A.begin(), A.end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define INF 2000000000
#define SIZE 1000009
#define mp(a, b) make_pair(a, b)
int counter = 0;
int gcd(int a, int b)
{
	if (a < b) swap(a, b);
	int ans = 0;
	while(b != 0)
	{
		ans += a / b;
		a %= b;
		if (a < b) swap(a, b);
	}
	return ans;
}

int main()
{
	//freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
	int n, m;
	cin>>n>>m;
	vector<int> a(n);
	bool A[105][150];
	mems(A, false);
	forn(i, 0, n)
	{
		cin>>a[i];
	}
	forn(i, 0, m)
	{
		int a,b;
		cin>>a>>b;
		a--;
		b--;
		A[a][b] = A[b][a] = true;
	}
	int mini = INF;
	forn(i, 0, n)
	{
		forn(j, 0, n)
		{
			if (i == j) continue;
			if (A[i][j])
			{
				int tmp = a[i] + a[j];
				forn(k, 0, n)
				{
					if (k == i || k == j) continue;
					if (A[i][k] && A[j][k]) mini = min(tmp + a[k], mini);
				}
			}
		}
	}
	if (mini == 2000000000
) mini = -1;
	cout<<mini;

	return 0;
}