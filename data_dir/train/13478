#include<bits/stdc++.h>
#define rep(i,start,lim) for(lld i=start;i<lim;i++)
#define repd(i,start,lim) for(lld i=start;i>=lim;i--)
#define scan(x) scanf("%lld",&x)
#define print(x) printf("%lld ",x)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define br printf("\n")
#define sz(a) lld((a).size())
#define YES printf("YES\n")
#define NO printf("NO\n")
#define all(c) (c).begin(),(c).end()
#define INF         1011111111
#define LLINF       1000111000111000111LL
#define EPS         (double)1e-10
#define MOD         1000000007
#define PI          3.14159265358979323
using namespace std;
typedef long double ldb;
typedef long long lld;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
lld ctl(char x,char an='a') {return (lld)(x-an);}
char ltc(lld x,char an='a') {return (char)(x+an);}
#define bit(x,j) ((x>>j)&1)
typedef vector<lld> vlld;
typedef pair<lld,lld> plld;
typedef map<lld,lld> mlld;
typedef set<lld> slld;
#define sync ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define mxm(a,b) a = max(a,b)
#define mnm(a,b) a = min(a,b)
#define endl '\n'
#define fre freopen("1.in","r",stdin); freopen("1.out","w",stdout);
#define N 55
lld ans[55][55],vis[N][N],tot[4];
const lld dirx[4] = {1,-1,0,0};
const lld diry[4] = {0,0,1,-1};
/*void dfs(lld x,lld y) {
    if(x<1) return ;
    if(x>50) return ;
    if(y<1) return ;
    if(y>50) return ;
    vis[x][y] = 1;
    rep(i,0,4) {
        lld nx = x+dirx[i];
        lld ny = y+diry[i];
        if(!vis[nx][ny] and ans[nx][ny]==ans[x][y]) dfs(nx,ny);
    }
}*/
int main()
{
    //sync;
    lld a,b,c,d;
    cin>>a>>b>>c>>d;
    lld currx = 2, curry = 1;
    while(b--) {
        ans[currx][curry] = 1;
        currx += 2;
        if(currx > 50) currx = 2, curry+=2; 
    }
    while(c--) {
        ans[currx][curry] = 2;
        currx += 2;
        if(currx > 50) currx = 2, curry+=2; 
    }
    while(d--) {
        ans[currx][curry] = 3;
        currx += 2;
        if(currx > 50) currx = 2, curry+=2; 
    }
    lld lefta = a - 1;
    if(lefta > 0) {
        ans[2][1] = 0; // I took a B
        lld cx = 1, cy = 49; 
        while(lefta) {
            ans[cx][cy] = 1;
            ans[cx+1][cy] = 1;
            ans[cx+1][cy+1] = 1;
            if(cx + 3 > 50) {
                cx = 1;
                cy -= 2;
            }
            else {
                cx += 2;
            }
            --lefta;
        }
    }
    // rep(i,1,51) rep(j,1,51) if(!vis[i][j]) dfs(i,j),tot[ans[i][j]]++,cout<<i<<" "<<j<<endl;
    // rep(i,0,4) cout<<tot[i]<<" ";
    cout<<"50 50\n";
    rep(i,1,51) rep(j,1,51) {
        cout<<ltc(ans[i][j],'A');
        if(j==50) cout<<endl;
    }
    return 0;
}