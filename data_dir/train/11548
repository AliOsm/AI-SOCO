#define _USE_MATH_DEFINES
#include <iostream>
#include <vector>
#include <algorithm>
#include <stack>
#include <string>
#include <assert.h>
#include <queue>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <random>
#include <cmath>

//#define ll long long
#define ld long double
//#define mp make_pair
#define pb push_back
#define eb emplace_back
#define int long long
using namespace std;

const int INF = 2e9;
const int MOD = 1e9 + 7;

void go() {
	int n;
	cin >> n;
	vector<vector<int>> c(n);
	for (int i = 0; i < n; i++) {
		int m, p;
		cin >> m >> p;
		c[m].pb(p);
	}

	vector<int> pref(n);
	for (int i = 1; i < n; i++) {
		pref[i] = pref[i - 1] + c[i - 1].size();
	}

	int cnt = 0;
	int ans = 0;
	multiset<int> st;

	for (int i = n - 1; i >= 0; i--) {
		for (int j : c[i]) st.insert(j);

		while (i > pref[i] + cnt && !st.empty()) {
			int x = *st.begin();
			st.erase(st.find(x));
			cnt++;
			ans += x;
		}
	}

	cout << ans << '\n';
}

void solve() {
	int t;
	cin >> t;
	for (int i = 0; i < t; i++) {
		go();
	}
}


signed main() {
	/*
	freopen("cyclic.in", "r", stdin);
	freopen("cyclic.out", "w", stdout);
	*/
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	cout.precision(12);
	solve();
}