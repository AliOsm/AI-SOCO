#include <bits/stdc++.h>

using namespace std;

#define eps 1e-9
#define mod 1000000007
#define pi 3.141592653589793
typedef long long ll;
typedef long double ld;

int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int n, m, q;
    cin >> n >> m >> q;
    string s, t;
    cin >> s >> t;
    vector<int> vec;
    for(int i = 0; i < n; i++)
    {
        string temp = "";
        for(int j = i; j < n; j++)
        {
            temp += s[j];
            if(temp.size() == t.size())
                break;
        }
        if(temp == t)
            vec.push_back(i);
    }
    while(q--)
    {
        int l, r;
        cin >> l >> r;
        l--, r--;
        int have1 = -1, have2 = -1, st = 0, en = (int)vec.size() - 1, mid;
        while(st <= en)
        {
            mid = (st + en) / 2;
            int index = vec[mid];
            if(index < l)
            {
                st = mid + 1;
            }
            else if(index > r)
            {
                en = mid - 1;
            }
            else
            {
                if(index + (int)t.size() - 1 <= r)
                {
                    have1 = mid;
                }
                en = mid - 1;
            }
        }
        st = 0, en = (int)vec.size() - 1, mid;
        while(st <= en)
        {
            mid = (st + en) / 2;
            int index = vec[mid];
            if(index < l)
            {
                st = mid + 1;
            }
            else if(index > r)
            {
                en = mid - 1;
            }
            else
            {
                if(index + (int)t.size() - 1 <= r)
                {
                    have2 = mid;
                    st = mid + 1;
                }
                else{
                en = mid - 1;
                }
            }
        }
        if(have1 != -1)
            cout << have2 - have1 + 1;
        else
            cout << 0;
        cout << '\n';
    }
    return 0;
}
