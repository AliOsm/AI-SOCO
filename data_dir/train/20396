#include <bits/stdc++.h>
using namespace std;

#define int long long
typedef pair <int, int> pii;
typedef long double ld;

const int N = 2e2 + 10;
int n, m, k, mn[N], ans[N];
ld dp[N][N]; // 0:unfixed  1:(  2:)
vector <pii> vec;

void solve(int indx) {
	memset(dp, 0, sizeof dp);
	ans[indx] = 1;
	
	dp[0][1] = 1;
	for (int i = 1; i < n; i++) 
		for (int j = 0; j <= i + 1; j++) {
			if (ans[i] == 1)
				dp[i][j] = dp[i - 1][j - 1];
			else if (ans[i] == 2)
				dp[i][j] = dp[i - 1][j + 1];
			else {
				if (j)
					dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j + 1];
				else
					dp[i][j] = dp[i - 1][j + 1];
			}
		}
	
	if (dp[n - 1][0] < k)
		k -= dp[n - 1][0], ans[indx] = 2;
}

int32_t main() {
	memset(mn, 127, sizeof mn);
	
	cin >> n >> m >> k;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++) {
			int x;
			cin >> x;
			mn[i + j] = min(mn[i + j], x);
		}
	
	n += m - 1;
	for (int i = 0; i < n; i++)
		vec.push_back({mn[i], i});
	sort(vec.begin(), vec.end());
	
	for (pii p : vec)
		solve(p.second);
	
	n -= m - 1;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++)
			if (ans[i + j] == 1)
				cout << '(';
			else
				cout << ')';
		cout << '\n';
	}
}
