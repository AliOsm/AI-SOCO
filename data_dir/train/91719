#include<bits/stdc++.h>
#define MAX 1000007
#define MIN -1000007
#define PB push_back
#define MP make_pair
using namespace std;
typedef long long int ll;
typedef long double ld;
list<ll> g[3005];
ll visited[3005];
set<ll> s;

void dfs(ll x,ll p)
{
	visited[x]=1;
	//cout<<x<<" ";
	for(list<ll>::iterator it=g[x].begin();it!=g[x].end();++it)
	{
		if(!visited[*it])
		    dfs(*it,x);
		else if(*it!=p)
			s.insert(*it);
	}

}
ll dist[3005];
void bfs(ll x)
{   
	memset(visited,0,sizeof(visited));

	queue<ll>q;
	q.push(x);
	visited[x]=1;
	while(!q.empty())
	{
		x=q.front();
		q.pop();
		for(list<ll>::iterator it=g[x].begin();it!=g[x].end();++it)
		{
			if(!visited[*it]){
				visited[*it]=1;
				dist[*it]=min(dist[x]+1,dist[*it]);
				q.push(*it);
			}
		}
	}
	
	
	
	
	
}
int main()
{
 ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
 ll n,m,i,j,l,x,y;
 vector<ll> vp;
cin>>n;
for(i=0;i<n;i++)
{
	cin>>x>>y;
	g[x].push_back(y);
	g[y].push_back(x);
}

for(i=1;i<=n;i++)
{
	memset(visited,0,sizeof(visited));
	dfs(i,-1);
		
}
	memset(dist,MAX,sizeof(dist));
for(set<ll>::iterator it=s.begin();it!=s.end();++it)
{
	//cout<<*it<<" ";
	dist[*it]=0;
	bfs(*it);
}
 for(i=1;i<=n;i++)
 {
 	cout<<dist[i]<<" ";
 }
return 0;
}

