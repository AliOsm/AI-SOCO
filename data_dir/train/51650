#include <iostream>
#include <cstdio>
#include <algorithm>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <cmath>
#include <vector>
#include <queue>
#include <stack>
#include <cstring>
#include <fstream>
#include <memory.h>
#include <iomanip>
#include <bitset>
#include <fstream>
#include <string>
#include <list>
#include <unordered_map>

using namespace std;

#define right asfdsg
#define left asfdsvs
#define pb emplace_back
#define F first
#define S second
#define mp make_pair
#define x1 _xxx1
#define y1 _yyy1

#define forn(i, n) for(int i = 0 ; (i) < (n) ; ++i)

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef std::pair < int, int > pii;
typedef std::pair < ll, ll > pll;
typedef std::vector < std::vector < ld > > vld;

const int INF = (int) 2e9 + 7;
const ld EPS = (ld) 1e-5;
const int BASE = (int) 1e9 + 7;
const int MAXN = 300500;
const ll INFLL = (ll) 1e18;

int n, k, t;

template<typename T>
T  sqr(T x) {
    return x * x;
}

ll GetRast(ll x1, ll y1, ll x2, ll y2) {
    return sqr(x1 - x2) + sqr(y1 - y2);
}

ll triangle_area_2 (ll x1, ll y1, ll x2, ll y2, ll x3, ll y3) {
    return (x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1);
}

int main() {
#ifdef DEBUG
    freopen("input", "r", stdin);
#endif
    ll ax, ay, bx, by, cx, cy;
    cin >> ax >> ay >> bx >> by >> cx >> cy;
    cerr << GetRast(ax, ay, bx, by) << "\n";
    cerr << GetRast(bx, by, cx, cy) << "\n";
    if (GetRast(ax, ay, bx, by) == GetRast(bx, by, cx, cy) && triangle_area_2(ax, ay, bx, by, cx, cy) != 0)
        cout << "Yes";
    else cout << "No";
    return 0;
}