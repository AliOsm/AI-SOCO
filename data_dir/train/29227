#include <bits/stdc++.h>

const int N = 100000 + 5;
int A[N];
int n;
bool vis[N];
std::vector<std::vector<int>> group[N];

bool work() {
	for (int i = 0; i < n; ++ i) {
		if (vis[i]) continue;
		std::vector<int> t;
		for (int u = i; !vis[u]; u = A[u]) {
			t.push_back(u);
			vis[u] = true;
		}
		group[t.size()].push_back(t);
	}
	if (!group[1].empty()) {
		puts("YES");
		int s = group[1][0][0];
		for (int i = 0; i < n; ++ i) {
			if (s != i) {
				printf("%d %d\n",s + 1,i + 1);
			}
		}
		return true;
	}
	if (group[2].empty()) {
		return false;
	}
	std::vector<std::pair<int,int>> answer;
	int a[2] = {group[2].back()[0],group[2].back()[1]};
	group[2].pop_back();
	answer.push_back({a[0],a[1]});
	for (int i = 2; i <= n; ++ i) {
		if (group[i].empty()) continue;
		if (i & 1) return false;
		for (auto &vec : group[i]) {
			for (int j = 0; j < vec.size(); ++ j) {
				answer.push_back({a[j & 1],vec[j]});
			}
		}
	}
	puts("YES");
	for (int i = 0; i < answer.size(); ++ i) {
		printf("%d %d\n",answer[i].first + 1,answer[i].second + 1);
	}
	return true;
}

int main() {
	scanf("%d",&n);
	for (int i = 0; i < n; ++ i) {
		scanf("%d",A + i); A[i] --;
	}
	if (!work()) {
		puts("NO");
	}
}
