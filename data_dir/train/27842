#include <bits/stdc++.h>

using namespace std;

#define mx 300005
#define int long long
#define pii pair <int, int>
#define piii pair <int, pii>
#define fi first
#define se second
#define mod 1000000007
#define inf 1e18+19
#define pb push_back
#define mem(ara, x) memset(ara, x, sizeof ara)
#define read() freopen("in.txt", "r", stdin)
#define write() freopen("out.txt", "w", stdout)
#define fst ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

int ara[mx], ans;
vector <int> bi[70], g[mx];
map <int, int> mp[130];

int Set(int N,int pos){return N=N | (1LL<<pos);}
int reset(int N,int pos){return N= N & ~(1LL<<pos);}
bool check(int N,int pos){return (bool)(N & (1LL<<pos));}


void dfs(int u, int b, int l, int p){
    if(l>124) return;
    if(u==b && l){
        ans = min(ans, l);
        return;
    }
    if(mp[l][u]) return;
    mp[l][u] = 1;
    for(auto v: g[u]){
        if(v!=p) {
            //cout << b << " " << u << " " << u << endl;
            dfs(v, b, l+1, u);
        }
    }
}

map <pii, bool> vis;

int32_t main(){
    //read();
    fst;
    int n;
    cin >> n;
    for(int i=1;i<=n;i++){
        cin >> ara[i];
        for(int j=0;j<=62;j++){
            if(check(ara[i], j)) bi[j].push_back(i);
        }
    }
    for(int j=0;j<=62;j++){
        if(((int) (bi[j].size())) > 2){
            cout << 3 << endl;
            return 0;
        }
        for(auto l:bi[j]){
            for(auto k:bi[j]){
                if(l==k) continue;
                if(vis[{l, k}]) continue;
                if(vis[{k, l}]) continue;
                g[l].push_back(k);
                g[k].push_back(l);
                vis[{l, k}] = 1;
            }
        }
    }
    ans = inf;
    for(int i=1;i<=n;i++){
        dfs(i, i, 0, -1);
        for(int j=0;j<=120;j++) mp[j].clear();
    }
    if(ans == inf) ans = -1;
    cout << ans << endl;
	return 0;
}
