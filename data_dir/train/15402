#include <bits/stdc++.h>
using namespace std;

#define VIC ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define sfi(x) scanf("%d" , &x)
#define sfi2(x, y) scanf("%d%d" , &x,&y)
#define sfl2(x, y) scanf("%I64d%I64d" , &x,&y)
#define sfl(x) scanf("%I64d" , &x)
#define sfl3(x, y, z) scanf("%I64d%I64d%I64d", &x, &y, &z)
#define sfd(x) scanf("%lf", &x)
#define sfd2(x, y) scanf("%lf", &x, &y)
#define sfs(x) scanf("%s", &x)
#define wtf(s) freopen((s), "w", stdout)
#define rff(s) freopen((s), "r", stdin)
#define mod 1000000007
#define pi (2 * acos(0))
typedef long double ld;
typedef long long ll;

int n, x;
ll a[100005], ans;
vector<int> v[100005];

int main()
{
	VIC
	cin >> n;
	for (int i = 2; i <= n; i++)
		cin >> x, v[x].push_back(i);
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	queue<pair<pair<int, int>, ll>> q;
	q.push({{1, 1}, a[1]});
	while (!q.empty())
	{
		int node = q.front().first.first, height = q.front().first.second;
		ll maxi = q.front().second;
		q.pop();
		if ((height % 2 && a[node] == -1) || (height % 2 == 0 && a[node] != -1) || (maxi > a[node] && a[node] != -1))
			return cout << -1, 0;
		if (a[node] == -1)
		{
			a[node] = 1e10;
			if (v[node].empty())
				a[node] = maxi;
			for (auto it: v[node])
				a[node] = min(a[node], a[it]);
		}
		maxi = a[node];
		for (auto it: v[node])
			q.push({{it, height + 1}, maxi});
	}
	queue<pair<int, ll>> q1;
	q1.push({1, 0});
	while (!q1.empty())
	{
		int node = q1.front().first;
		ll cost = q1.front().second;
		ans += a[node] - cost;
		if (a[node] - cost < 0)
			return cout << -1, 0;
		q1.pop();
		for (auto it: v[node])
			q1.push({it, a[node]});
	}
	cout << ans;
    return 0;
}
