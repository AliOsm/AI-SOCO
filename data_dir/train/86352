#include<bits/stdc++.h>
#define ll long long
#define f first
#define s second
#define pb push_back
using namespace std;
ll n,k,a[200005],ls[2000050],ans[200005],l,r,p,pown = 1,anss,indx;
map<ll,ll>mp;
vector<ll>v,an;
pair<ll,ll>t[4000006];
void upd(ll x){
    if(!x)return;
    t[x] = max(t[2 * x] , t[2 * x + 1]);
    upd(x / 2);
}
pair<ll,ll> cnt(ll x,ll L,ll R){
    if(L > r || R < l)return make_pair(0,0);
    if(L >= l && R <= r)return t[x];
    pair<ll,ll> k1 = cnt(2 * x,L,(L + R) / 2);
    pair<ll,ll> k2 = cnt(2 * x + 1,(L + R) / 2 + 1, R);
    return max(k1 , k2);
}
int main(){
    ios::sync_with_stdio(false);
    cin >> n >> k;
    
    while(pown <= 3 * n)
        pown *= 2;
    
    for(int i=1; i<=n; i++){
        cin >> a[i];
        v.pb(a[i]);
        v.pb(a[i] - k);
        v.pb(a[i] + k);
    }
    
    sort(v.begin() , v.end());
    
    for(int i=0; i<v.size(); i++){
        if(!i || v[i] != v[i - 1])p++;
        mp[v[i]] = p;
    }
    
    for(int i=1; i<=n; i++){
        l = 1;
        r = mp[a[i] - k];
        pair<ll,ll> p1 = cnt(1 , 1 , pown);
        l = mp[a[i] + k];
        r = 3 * n;
        pair<ll,ll> p2 = cnt(1 , 1 , pown);
        p1 = max(p1 , p2);
        ans[i] = p1.f + 1;
        ls[i] = p1.s;
        t[pown + mp[a[i]] - 1] = make_pair(ans[i] , (ll)i);
        upd((pown + mp[a[i]] - 1) / 2);
        if(ans[i] > anss){
            anss = ans[i];
            indx = i;
        }
    }
    
    while(indx){
        an.pb(indx);
        indx = ls[indx];
    }
    cout << an.size() << '\n';
    reverse(an.begin() , an.end());
    
    for(int i=0; i<an.size(); i++){
        cout << an[i] << " ";
    }
    
    
    
    
    return 0;
}
