#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;
typedef long long LL;
#define INF 0x3f3f3f3f
#define eps 1e-8

const int gox[4] = {0, 0, 1, -1};
const int goy[4] = {1, -1, 0, 0};

int n, m, k, x, y, cnt, f[1010][1010], g[100010];
char mp[1010][1010];

void Dfs(int x, int y) {
	f[x][y] = cnt;
	for (int i = 0; i < 4; i++) {
		int xx = x + gox[i];
		int yy = y + goy[i];
		if (mp[xx][yy] == '*') g[cnt]++;
		else if (f[xx][yy] == 0) Dfs(xx, yy);
	}
}

int main() {
	memset(f, 0, sizeof(f));
	memset(g, 0, sizeof(g));
	scanf("%d%d%d", &n, &m, &k);
	for (int i = 0; i < n; i++)
		scanf("%s", mp[i]);
	cnt = 0;
	for (int i = 0; i < k; i++) {
		scanf("%d%d", &x, &y);
		x--; y--;
		if (f[x][y] == 0) {
			cnt++;
			Dfs(x, y);
		}
		printf("%d\n", g[f[x][y]]);
	}
	return 0;
}
