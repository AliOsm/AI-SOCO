#pragma comment(linker, "/STACK:64000000")
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cassert>
#include <ctime>
#include <deque>

#define forn(i, n) for (int i = 0; i < n; i ++)
#define ford(i, n) for (int i = n - 1; i >= 0; i --)
#define mp make_pair
#define pb push_back
#define pi 3.1415926535897932
#define ll long long
#define ld long double
#define y1 botva

using namespace std;

int n, m;
int y1[100100], y2[100100];
multiset <int> ans[100100];

int main(){
#ifndef ONLINE_JUDGE
    freopen ("input.txt","rt",stdin);
    freopen ("output.txt","wt",stdout);
#endif
    int y3, y4;
    scanf("%d %d %d %d", &n, &m, &y3, &y4);
    if (m == 0){
        cout << n << endl;
        return 0;
    }
    forn(i, n)
        scanf("%d", &y1[i]);
    forn(i, m)
        scanf("%d", &y2[i]);
    forn(i, n){
        int t1 = lower_bound(y2, y2 + m, y1[i]) - y2, t2 = t1 - 1;
        //cout << t1 << ' '  << t2 << endl;
        if (t2 < 0){
            ans[t1].insert(abs(y1[i] - y2[t1]));
            continue;
        }
        if (t1 >= m || y1[i] - y2[t2] < y2[t1] - y1[i]){
            ans[t2].insert(abs(y1[i] - y2[t2]));
            continue;
        }
        if (y1[i] - y2[t2] > y2[t1] - y1[i]){
            ans[t1].insert(abs(y1[i] - y2[t1]));
            continue;
        }
        if (ans[t2].empty() || (*ans[t2].begin() == abs(y1[i] - y2[t2])))
            ans[t2].insert(abs(y1[i] - y2[t2]));
         else 
            ans[t1].insert(abs(y1[i] - y2[t1]));
    }
    int ans1 = 0;
    /*forn(i, m){
        for (set<int>::iterator it = ans[i].begin(); it != ans[i].end(); it ++)
            cout << *it << ' ';
        cout << endl;
    }*/
    forn(i, m){
        int ans2 = 0;
        for (multiset<int>::iterator it = ans[i].begin(); it != ans[i].end() && (*it == *ans[i].begin()); it ++) ans2 ++;
        ans1 += ans[i].size() - ans2;
    }
    cout << ans1 << endl;
    return 0;
}