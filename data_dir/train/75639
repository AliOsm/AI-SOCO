//#include "stdc++.h"
#include<bits/stdc++.h>
#include<iostream>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
using namespace std;
//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//typedef tuple<int, int, int> t3;
typedef long long ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <ll, int> pli;
typedef pair <db, db> pdd;
typedef vector<int> vi;
#define m1 make_pair
#define pb push_back
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0) return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p; }
#define flush fflush(stdout)
const ll MOD =998244353;
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
int main()
{
    IOS;
    int n;
    cin>>n;
    pair<int,string> p[2*n-2];
    int r=2*n-3;
    string st[2*n-2];
    multimap<string,char>mp;string s,s1,s2,s3,str="",pre,suff;
    multimap<string,char>::iterator it;int z=0;char ans[2*n+2];
    ans[2*n+1]='\0';
    for(int i=0;i<(2*n-2);i++)
    {
        cin>>s;
        st[i]=s;
        p[i].first=s.length();
        p[i].second=s;
    }
    sort(p,p+2*n-2);
    s1=p[r].second;
    s2=p[r-1].second;
        pre=s1;
        suff=p[r-1].second;
        str=str+pre[0];
        mp.insert(m1(str,'P'));
        //cout<<"ok"<<endl;
        for(int i=1;i<pre.length();i++)
        {
            str=str+pre[i];
            mp.insert(m1(str,'P'));
        }
        //cout<<"ok"<<endl;
        str="";
        str=str+suff[suff.length()-1];
        mp.insert(m1(str,'S'));
        for(int i=suff.length()-2;i>=0;i--)
        {
            str=suff[i]+str;
            mp.insert(m1(str,'S'));
        }
    for(int i=0;i<(2*n-2);i++)
    {
        it=mp.find(st[i]);
        // cout<<"ok"<<endl;
        if(it!=mp.end())
        {
            ans[i]=it->second;
            mp.erase(it);
        }
        else
        {
            z=1;
            break;
        }
    }
    if(z)
    {
        //cout<<"ok"<<endl;
        while(!mp.empty())
            mp.erase(mp.begin());
        pre=p[r-1].second;
        suff=p[r].second;
        str="";
        str=str+pre[0];
        mp.insert(m1(str,'P'));
        //cout<<"ok"<<endl;
        for(int i=1;i<pre.length();i++)
        {
            str=str+pre[i];
            mp.insert(m1(str,'P'));
        }
        //cout<<"ok"<<endl;
        str="";
        str=str+suff[suff.length()-1];
        mp.insert(m1(str,'S'));
        for(int i=suff.length()-2;i>=0;i--)
        {
            str=suff[i]+str;
            mp.insert(m1(str,'S'));
        }
        //cout<<"ok"<<endl;
    
    for(int i=0;i<(2*n-2);i++)
    {
        it=mp.find(st[i]);
        // cout<<"ok"<<endl;
        if(it!=mp.end())
        {
            ans[i]=it->second;
        mp.erase(it);
        }
        else
            ans[i]='0';
    }
}
    for(int i=0;i<(2*n-2);i++)
        cout<<ans[i];
    cout<<endl;
    return 0;
}
