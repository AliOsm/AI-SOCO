#include <bits/stdc++.h>
#define int long long 
using namespace std;
//1 
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);
    long long powmod(long long a,long long b,long long mod) {
        if (b==0 || a==1)  {if (mod==1) return 0; else return 1; }
       
        if (b%2==0) { long long k=powmod(a,b/2,mod); return (k*k)%mod; }
        else {long long k=powmod(a,b/2,mod); return ( (k*k) %mod *a)% mod; }
    }
    long long gcd(long long a, long long b) {
        if (a==0) return b;
        if (b==0) return a;
        if (a>b) return gcd(a%b,b); else return gcd(b%a,a);
    }
      int prime(int p) { // 1 - простое
        for (int i=2;i*i<=p;i++) {
            if (p%i==0 && i<p) return i;  
        }
        return 1;
    }
    
     int inv(int a, int mod) {
        return powmod(a,mod-2,mod); 
    }
  int random_modul() {
      // 1e9 - 1e10 за 0.5 мс 
       // 1e10 - 1e11 за 1.5 мс 
    uniform_int_distribution <int> u1(1e10, 1e11);
    int pepega=u1(rnd); 
    while (prime(pepega)!=1) pepega=u1(rnd); 
    return pepega; 
}
    void solve () {
       
       
         /* --------- */
         
         
        int a,k;
        cin>>a>>k;
        char m[a][k]; 
        for (int i=0;i<a;i++) {
            for (int j=0;j<k;j++) {
                cin>>m[i][j]; 
                
            }
        }
        int ans=0;
        int mod=random_modul();
        map <int,int> hashes; 
        for (int i=0;i<a;i++) {
            int cur=0;
            for (int j=0;j<k;j++) { cur*=5; 
                if (m[i][j]=='E') cur+=1; 
                if (m[i][j]=='S') cur+=2; 
                if (m[i][j]=='T') cur+=3; cur%=mod; 
            }
            hashes[cur]++; 
        }
        for (int i=0;i<a;i++) {
            for (int j=0;j<a;j++) if (i!=j) {
                
                int need=0;
                for (int j1=0;j1<k;j1++) {
                    need*=5; 
                    char q; 
                    if (m[j][j1]!=m[i][j1]) {q='S'+'E'+'T'-m[i][j1]-m[j][j1]; }
                    else q=m[i][j1]; 
                    
                     if (q=='E') need+=1; 
                if (q=='S') need+=2; 
                if (q=='T') need+=3; need%=mod;
                }
                int ans1=hashes[need];
                
                ans+=ans1; 
            }
            }
        
        
        cout<<ans/6; 
         
         
         /* --------- */  
            return;
    }
     
     
     
    signed main() {
       
       
       //  cout<<fixed<<setprecision(10); 
       
          int tututu;
          tututu=1;
          
        //cin>>tututu; // если нет запросов, то закоментить
        
          for (int qwerty=0;qwerty<tututu;qwerty++) solve();
      
       
        return 0;
    }