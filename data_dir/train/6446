#include <bits/stdc++.h>

#define rep(i, n) for (int i = 0; i < (n); i++)
#define repr(i, n) for (int i = (n) - 1; i >= 0; i--)
#define range(a) a.begin(), a.end()

using namespace std;
using ll = long long;

int mx[200000];
int sz[200000];
int par[200000];

int find(int x) {
  if (x == par[x]) return x;
  return par[x] = find(par[x]);
}

void unite(int x, int y) {
  x = find(x);
  y = find(y);
  if (x == y) return;
  sz[x] += sz[y];
  mx[x] = max(mx[x], mx[y]);
  par[y] = x;
}

int get_size(int x) { return sz[find(x)]; }
int get_max(int x) { return mx[find(x)]; }

int main() {
  cin.tie(nullptr);
  ios::sync_with_stdio(false);
  int N, Q; cin >> N >> Q;
  rep(i, N) {
    par[i] = i;
    mx[i] = i;
    sz[i] = 1;
  }
  map<int, vector<int>> mp;
  vector<int> A(N);
  rep(i, N) {
    cin >> A[i];
    mp[A[i]].push_back(i);
  }
  for (auto kv : mp) {
    vector<int> v = kv.second;
    for (int x : v) {
      unite(x, v[0]);
    }
  }
  rep(i, N-1) {
    if (find(i) != find(i + 1) && get_max(i) > i + 1) {
      unite(i, i + 1);
    }
  }
  int ans = N;
  vector<int> val(N);
  rep(i, N) {
    val[find(i)] = max<int>(val[find(i)], mp[A[i]].size());
  }
  rep(i, N) {
    ans -= val[i];
  }
  cout << ans << endl;
}
