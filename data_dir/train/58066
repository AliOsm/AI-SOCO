#include <cstdio>
#include <utility>
#include <vector>
#include <algorithm>
using namespace std;
int a[200010], b[200010];
vector<pair<int, int> > p;
int w[200010], ok[200010];
int check(int i, int j, int k) {
	long long ai = p[i].first, bi = p[i].second;
	long long aj = p[j].first, bj = p[j].second;
	long long ak = p[k].first, bk = p[k].second;
	return (ai - aj) * (bi - bk) * ak * bj > (bi - bj) * (ai - ak) * bk * aj;
}
int mx[10010];
int main() {
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%d%d", &a[i], &b[i]);
		mx[a[i]] = max(mx[a[i]], b[i]);
	}
	if (n == 1) {
		printf("1\n");
		return 0;
	}
	int my = 0;
	for (int i = 10000; i > 0; i--) {
		if (mx[i] > my) {
			p.push_back(make_pair(i, mx[i]));
			my = mx[i];
		}
	}
	reverse(p.begin(), p.end());
	int s = 0;
	w[0] = 0;
	for (int i = 1; i < p.size(); i++) {
		while (s >= 1 && check(w[s-1], w[s], i)) {
			--s;
		}
		w[s+1] = i;
		s++;
	}
	vector<pair<int, int> > v;
	for (int i = 0; i <= s; i++) {
		v.push_back(p[w[i]]);
	}
	sort(v.begin(), v.end());
	for (int i = 0; i < n; i++) {
		if (binary_search(v.begin(), v.end(), make_pair(a[i], b[i]))) {
			printf("%d ", i + 1);
		}
	}
	return 0;
}
