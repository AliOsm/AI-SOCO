/********************************************************
 *    #####   #    #    ##     ####    #   #    ##      *
 *    #    #  #    #   #  #   #    #    # #    #  #     *
 *    #####   ######  #    #  #          #    #    #    *
 *    #    #  #    #  ######  #  ###     #    ######    *
 *    #    #  #    #  #    #  #    #     #    #    #    *
 *    #####   #    #  #    #   ####      #    #    #    *
 ********************************************************/

#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define	endl		'\n'
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
using namespace std;

#define N  1005

char maze[N][N];
ll int vis[N][N];
pii parent[N][N];
map<pii,ll int> ma;

ll int dfs(ll int i,ll int j,ll int pi,ll int pj)
{
	vis[i][j]=1;
	parent[i][j]={pi,pj};
	ll int ret=(maze[i+1][j]=='*')+(maze[i-1][j]=='*')+(maze[i][j+1]=='*')+(maze[i][j-1]=='*');
	if(!vis[i+1][j]) ret+=dfs(i+1,j,pi,pj);
	if(!vis[i-1][j]) ret+=dfs(i-1,j,pi,pj);
	if(!vis[i][j+1]) ret+=dfs(i,j+1,pi,pj);
	if(!vis[i][j-1]) ret+=dfs(i,j-1,pi,pj);
	return ret;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		ll int n,m,k;
		cin>>n>>m>>k;
		memset(vis,1,sizeof(vis));
		memset(maze,'$',sizeof(maze));
		for(ll int i=1;i<=n;i++)
		{
			for(ll int j=1;j<=m;j++)
			{
				cin>>maze[i][j];
				if(maze[i][j]=='.')
				vis[i][j]=0;
			}
		}
		for(ll int i=1;i<=n;i++)
		{
			for(ll int j=1;j<=m;j++)
			{
				if(!vis[i][j] && maze[i][j]=='.')
				{
					ma[{i,j}]=dfs(i,j,i,j);
				}
			}
		}
		while(k--)
		{
			ll int x,y;
			cin>>x>>y;
			cout<<ma[parent[x][y]]<<endl;
		}
	}
	return 0;
}