#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
using namespace std;    
const int N = int(3e5), mod = int(1e9)  + 7; 

int dp[202][202][1002];

int n,k,a[N];

void add(int &a,int b){
	a += b;
	if(a >= mod) a -= mod;
}

int main () {
	scanf("%d%d", &n, &k);
	for(int i = 1; i <= n; i++){
		scanf("%d", &a[i]);
	}
	sort(a + 1, a + n + 1);
	dp[0][0][0] = 1;
	for(int i = 1; i <= n; i++){
		for(int j = 0; j < i; j++){
			for(int k1 = 0; k1 <= k; k1++){
				int k2 = k1 + (a[i] - a[i - 1]) * j;
				if(k2 > k) break;
				int val = dp[i - 1][j][k1];
				if(j > 0){
					add(dp[i][j - 1][k2], 1ll * j * val % mod);
				}
				add(dp[i][j + 1][k2], val);
				add(dp[i][j][k2], val);
				add(dp[i][j][k2], 1ll * val * j % mod);
			}
		}
	}
	int ans = 0;
	for(int k1 = 0; k1 <= k; k1++){
		add(ans, dp[n][0][k1]);
	}
	printf("%d", ans);

return 0;
}