/*
 * test.cpp
 *
 *
 *      Author: Fireworks
 */

#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<iomanip>
#include<fstream>
#include<bitset>
#include<cstring>
#include<cstdlib>
#include<complex>
#include<list>
#include<sstream>

using namespace std;

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
long long mod = 1000000007LL;
long long base = 37;
long long large = 1000000000000000000LL;



int n;
vector<vector<int> > seg;
vector<int> p;

void build(int o,int l,int r){
	if(l==r){
		seg[o].push_back(p[l]);
	}else{
		int m = (l+r)/2;
		build(o*2,l,m);
		build(o*2+1,m+1,r);
		seg[o].assign(seg[o*2].size()+seg[o*2+1].size(),0);
		merge(seg[o*2].begin(),seg[o*2].end(),seg[o*2+1].begin(),seg[o*2+1].end(),seg[o].begin());
	}
}

int ql,qr;
int v,re;
void query(int o,int l,int r){
	//cout<<l<<" "<<r<<" "<<ql<<" "<<qr<<endl;
	if(qr<ql) return;
	if(ql<=l&&qr>=r){
		re+=upper_bound(seg[o].begin(),seg[o].end(),v-1)-seg[o].begin();
	}else{
		int m = (l+r)/2;
		if(ql<=m) query(o*2,l,m);
		if(qr>m) query(o*2+1,m+1,r);
	}
}

int main(){


	int q;
	cin>>n>>q;
	p.assign(n,0);
	for(int i=0;i<n;i++){
		scanf("%d",&p[i]);
		p[i]--;
	}
	seg.assign(4*n+10,vector<int>(0,0));
	build(1,0,n-1);
	long long tot = 1LL*n*(n-1)/2;
	while(q--){
		int l,d,r,u;
		scanf("%d%d%d%d",&l,&d,&r,&u);
		l--;r--;d--;u--;
		long long ans = 0;
		ans+=1LL*l*(l-1)/2;
		ans+=1LL*(n-r-1)*(n-r-2)/2;
		ans+=1LL*d*(d-1)/2;
		ans+=1LL*(n-u-1)*(n-u-2)/2;

		ql = 0;
		qr = l-1;
		v = d;
		re = 0;
		query(1,0,n-1);
		ans-=1LL*re*(re-1)/2;
		//cout<<"!"<<endl;

		ql = r+1;
		qr = n-1;
		v = d;
		re = 0;
		query(1,0,n-1);
		ans-=1LL*re*(re-1)/2;
		//cout<<"!"<<endl;


		ql = 0;
		qr = l-1;
		v = u+1;
		re = 0;
		query(1,0,n-1);
		re = l-re;
		ans-=1LL*re*(re-1)/2;
		//cout<<"!"<<endl;


		ql = r+1;
		qr = n-1;
		v = u+1;
		re = 0;
		query(1,0,n-1);
		re = n-r-1 - re;
		ans-=1LL*re*(re-1)/2;
		//cout<<"!"<<endl;


		printf("%I64d\n",tot-ans);
	}


/*
	int totalcase;
	int testcase=0;
	cin>>totalcase;
	ofstream out;
	out.open("result.txt");

	while(totalcase--){
		testcase++;
		out<<"Case #"<<testcase<<": ";
		cout<<testcase<<": "<<endl;

		//GOGOGO




		//END
	}
	out.close();
*/

	return 0;
}
