#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;

typedef long long            ll;
typedef unsigned long long   ull;
typedef vector<int>          vi;
typedef vector<ll>           vl;
typedef pair<int, int>       pi;
typedef pair<ll, ll>         pl;
typedef vector<pi>           vpi;
typedef vector<pl>           vpl;
typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define read        freopen("in.c", "r", stdin)
#define write       freopen("out.c", "w", stdout)
#define all(a)      a.begin(), a.end()
#define bye         exit(0)
#define mp          make_pair
#define ff          first
#define ss          second
#define L(x)        ((x) << 1)
#define R(x)        ((x) << 1 | 1)
#define bit(x)      (1LL << (x))
#define SZ(a)       (ll)(a).size()
#define pb          push_back
#define eb          emplace_back
#define pp          pop_back
#define eps         1e-9
#define inf         (1000000000)
#define infl        (1000000000000000000LL)
#define cs(p)       printf("Case %d:", (p)++)
#define ptc(c)      putchar(c)
#define gtc()       getchar()
#define nl          puts("")
#define sp          printf(" ")
#define out(a)      printf("%lld", (ll)(a))
#define ots(s)      printf("%s", s)
#define SET(a)      memset((a), -1, sizeof(a))
#define CLR(a)      memset((a), 0, sizeof(a))
#define dbg(x)      cout << "--- " << #x << " = " << x << '\n'

ll bgm(ll a, ll b, ll m) {
    a %= m;
    ll rem = 1;
    while(b != 0) {
        if(b&1)
            rem = (rem * a) % m;
        a = (a * a)%m;
        b >>= 1;
    }
    return rem;
}

ll inv(ll a, ll mod) {
    return bgm(a, mod - 2, mod);
}

ll in() {
    ll a;
    assert(scanf("%lld", &a) != EOF);
    return a;
}

double dl() {
    double a;
    assert(scanf("%lf", &a) != EOF);
    return a;
}

const int MAX = 10000 + 5;
const int LEN = 50;
const ll MOD = 1000000007;

double ttm;

int n;
char str[MAX][10];
int len;

int q;
char s[10];

string now;

map<string, int> ms;
map<string, int> mi;

set<string> st;

int main() {
    #ifndef ONLINE_JUDGE
        read, write;
        ttm = clock();
    #endif

    n = in();
    for(int i = 0; i < n; i++) {
        scanf(" %s", str[i]);
        len = strlen(str[i]);
        st.clear();
        for(int j = 0; j < len; j++) {
            now = "";
            for(int k = j; k < len; k++) {
                now += (char)str[i][k];
                st.insert(now);
            }
        }
        for(auto x : st) {
            ++ms[x];
            mi[x] = i;
        }
    }
    q = in();
    while(q--) {
        scanf(" %s", s);
        if(mi.find(s) == mi.end())
            out(0), sp, ptc('-'), nl;
        else
            out(ms[s]), sp, puts(str[mi[s]]);
    }

    #ifndef ONLINE_JUDGE
        printf("Runtime = %lf seconds\n", (clock() - ttm)/1000.0);
    #endif

    return 0;
}
