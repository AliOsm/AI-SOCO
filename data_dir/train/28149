#include <bits/stdc++.h>
using namespace std;
const int M = 1e9 + 7;
string s;
vector<vector<int>>g;
int dp[1001][1001][2];
int add(int &a,int b){
	a+=b;
	if(a>=M)a-=M;
}
int calc(int at,int rem,bool is){
	if(rem < 0)return 0;
	if(at == s.size())return !rem;
	int &ref = dp[at][rem][is];
	if(ref != -1)return ref;
	ref = 0;
	int st = is ? 1 : s[at] - '0';
	while(st + 1)add(ref,calc(at + 1,rem - st,is || st < s[at] - '0')),st--;
	return ref;
}
int dfs(int u,int rem){
	int ret = 0;
	if(!rem)return dp[0][u][0];
	for(auto i : g[u])add(ret,dfs(i,rem - 1));
	return ret;
}
int main(){
// 	freopen("readin.txt","r",stdin);
	g.resize(1001);
	for(int i = 2;i <= 1000;i++)g[__builtin_popcount(i)].push_back(i);
	cin >> s;
	memset(dp,-1,sizeof dp);
	for(int i = 1000;i;i--)calc(0,i,0),calc(0,i,1);
	int k;
	dp[0][1][0]--;
	scanf("%d",&k);
	if(!k)return puts("1"),0;
	printf("%d\n",dfs(1,k - 1));
}