#include<bits/stdc++.h>
using namespace std;

typedef long double                 ld;
typedef long long                   ll;
typedef pair<int,int>               pii;
typedef pair<ll,ll>                 pll;
typedef pair<string , string>       pss;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define F                           first
#define S                           second
#define sep                         ' '
#define endl                        '\n'
#define file_io                     freopen("input.txt" , "r+" , stdin) ; freopen("output.txt" , "w+" , stdout);
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define error(x)                    cerr << "$$$ " << x << '\n';
#define error2(x,y)                 cerr << "#F : " << x << "      #S : " << y << '\n';
#define kill(x)                     return cout << x << endl , 0;
#define pb                          push_back

const ll MXN = 1e3 + 10;
const ll MXM = 5e2 + 10;
const ll MX5 = 1e5 + 10;
const ll MX6 = 1e6 + 10;
const ll INF = 8e18;
const ld eps = 1e-9;
const ll MOD = 1e9 + 7; //998244353;

ll power(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * power(a * a % md, b / 2, md) % md : power(a * a % md, b / 2, md) % md));
}
ll bmm(ll a,ll b){
    return (a%b==0 ? b : bmm(b,a%b));
}
string base2(ll n){
    string a="";while(n>=2){a+=(char)(n%2+'0');n/=2;}a+=(char)(n+'0');reverse(all(a));return a;
}

string base3(ll n){
    string a="";while(n>=3){a+=(char)(n%3+'0');n/=3;}a+=(char)(n+'0');/*reverse(all(a))*/;return a;
}

ll n, m, dis[5][MXN][MXN];
bool vis[MXN][MXN], Fvis[MXN][MXN];
int IS[MXN][MXN];
queue<pll> q;
pll S1, S2, S3;
ll mini;
void init(){
    for(int i = 0; i < MXN; i ++){
        for(int j = 0; j < MXN; j ++){
            dis[0][i][j] = INF;
            dis[1][i][j] = INF;
            dis[2][i][j] = INF;
            dis[3][i][j] = INF;
            dis[4][i][j] = INF;
        }
    }
    return;
}

void Clear(){
    for(int i = 0; i < MXN; i ++){
        for(int j = 0; j < MXN; j++){
            vis[i][j] = Fvis[i][j];
        }
    }
    return;
}

bool check(ll x, ll y){
    if(0 <= x && x < n && 0 <= y && y < m){
        return (vis[x][y] == 0);
    }
    return 0;
}

void DFS2(ll x, ll y, ll id, ll from){
    vis[x][y] = 1;
    mini = min(mini, dis[from][x][y]);
    if(check(x - 1, y) && IS[x - 1][y] == id){
        DFS2(x - 1, y, id, from);
    }
    if(check(x + 1, y) && IS[x + 1][y] == id){
        DFS2(x + 1, y, id, from);
    }
    if(check(x, y - 1) && IS[x][y - 1] == id){
        DFS2(x, y - 1, id, from);
    }
    if(check(x, y + 1) && IS[x][y + 1] == id){
        DFS2(x, y + 1, id, from);
    }
    return;
}

void DFS(ll x, ll y, ll id){
    vis[x][y] = 1;
    dis[id][x][y] = 0;
    q.push({x, y});
    if(check(x - 1, y) && IS[x - 1][y] == id){
        DFS(x - 1, y, id);
    }
    if(check(x + 1, y) && IS[x + 1][y] == id){
        DFS(x + 1, y, id);
    }
    if(check(x, y - 1) && IS[x][y - 1] == id){
        DFS(x, y - 1, id);
    }
    if(check(x, y + 1) && IS[x][y + 1] == id){
        DFS(x, y + 1, id);
    }
    return;
}

void BFS(ll id){
    Clear();
    ll xr, yr;
    if(id == 1){
        xr = S1.F; yr = S1.S;
    }
    else if(id == 2){
        xr = S2.F; yr = S2.S;
    }
    else{
        xr = S3.F; yr = S3.S;
    }

    DFS(xr, yr, id);

    while(!q.empty()){
        ll x = q.front().F, y = q.front().S;
        vis[x][y] = 1;

        if(check(x - 1, y)){
            vis[x - 1][y] = 1;
            dis[id][x - 1][y] = dis[id][x][y] + 1;
            q.push({x - 1, y});
        }
        if(check(x + 1, y)){
            vis[x + 1][y] = 1;
            dis[id][x + 1][y] = dis[id][x][y] + 1;
            q.push({x + 1, y});
        }
        if(check(x, y + 1)){
            vis[x][y + 1] = 1;
            dis[id][x][y + 1] = dis[id][x][y] + 1;
            q.push({x, y + 1});
        }
        if(check(x, y - 1)){
            vis[x][y - 1] = 1;
            dis[id][x][y - 1] = dis[id][x][y] + 1;
            q.push({x, y - 1});
        }
        q.pop();
    }

    return;
}

int main(){
    fast_io
    //file_io
    init();
    cin >> n >> m;
    for(int i = 0; i < n; i ++){
        string Str;
        cin >> Str;
        for(int j = 0; j < m; j ++){
            if(Str[j] == '#'){
                Fvis[i][j] = 1;
            }
            else if(Str[j] == '1'){
                S1 = {i, j};
                IS[i][j] = 1;
            }
            else if(Str[j] == '2'){
                S2 = {i, j};
                IS[i][j] = 2;
            }
            else if(Str[j] == '3'){
                S3 = {i, j};
                IS[i][j] = 3;
            }
        }
    }

    BFS(1);
    BFS(2);
    BFS(3);

    ll ans = INF;

    Clear();
    mini = INF;
    DFS2(S1.F, S1.S, 1, 2);
    ll D_1_2 = mini;

    Clear();
    mini = INF;
    DFS2(S1.F, S1.S, 1, 3);
    ll D_1_3 = mini;

    Clear();
    mini = INF;
    DFS2(S2.F, S2.S, 2, 3);
    ll D_2_3 = mini;

    if(D_1_2 == INF || D_2_3 == INF || D_1_3 == INF) kill(-1);

    ans = min({D_2_3 + D_1_3 - 2, D_1_3 + D_1_2 - 2, D_2_3 + D_1_2 - 2});

    for(int i = 0; i < n; i ++){
        for(int j = 0; j < m; j ++){
            if(dis[1][i][j] == INF || dis[2][i][j] == INF || dis[3][i][j] == INF){
                continue;
            }
            ans = min(ans, dis[1][i][j] + dis[2][i][j] + dis[3][i][j] - 2);
        }
    }

    cout << ans;

    return 0;
}
//! N.N 7
