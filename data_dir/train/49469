//~In The Name Of Allah~//
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <iomanip>
#include <math.h>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <string.h>
#include <sstream>
#include <fstream>
#include <functional>
#include <stack>
#include <utility> 
#include <set>
#include <list>
#include <queue>
#include <bitset>
#include <time.h>
#include <unordered_set>
#include <unordered_map>

using namespace std;

#define read freopen("in.txt", "r", stdin)
#define write freopen("out.txt", "w", stdout)
#define all(_) _.begin(), _.end()
#define rall(_) _.rbegin(), _.rend()
#define rep(i, j) for (int i = 0; i < j; i++)
#define Rep(i, j, k) for (int i = j; i < k; i++)
#define siz(_) (int)_.size()
#define ll long long
#define endl '\n'

const double PI = 2.0 * acos(0.0);
const int MOD = 1e9 + 7;
const int oo = MOD;

typedef pair<int, int> pii;

ll gcd(ll x, ll y) { return !y ? x : gcd(y, x%y); }

int main() {
	int n;
	cin >> n;
	vector<ll> in(n), ori;
	rep(i, n)
		scanf("%lld", &in[i]);
	ori = in;
	sort(all(in));
	ll x = 0, opt;
	x = (in.back() - in[0]) / 2;
	opt = (in.back() + in[0]) / 2;
	rep(i, n) if (in[i] < opt)
		in[i] += x;
	else if (in[i] > opt)
		in[i] -= x;
	sort(all(in));
	bool good = 0;
	if (in[0] == in[n - 1])
		good = 1;
	else {
		in = ori;
		x = in.back() - in[0];
		opt = in.back();
		rep(i, n) if (in[i] < opt)
			in[i] += x;
		else if (in[i] > opt)
			in[i] -= x;
		sort(all(in));
		if (in[0] == in[n - 1])
			good = 1;
	}
	if (good)
		puts("YES");
	else
		puts("NO");
	return 0;
}