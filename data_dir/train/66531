#include<bits/stdc++.h>
#define int long long int
#define getFaster ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define rev(i,n,init) for(int i=n;i>=init;i--)
#define MAXN 200005
#define MOD2 998244353
#define MOD1 1e9+7
#define f first
#define s second
#define endl '\n'
#define pii pair<int,int>
#define precise(i) cout<<fixed<<setprecision(i)
using namespace std;
const double PI = atan(1.0)*4;
const int64_t INF=100000000000000003;
const int32_t LOG=21;
const int MOD=MOD1;
vector<int> v[100005];
int suff[100005];
vector<pii>v1;
map<int,int> m;
set<pii> s;
int hash1(int x,int y)
{
	return (1000001)*(min(x,y))+max(x,y);
}
int32_t main()
{
	getFaster;
    int n;
    cin>>n;
    rep(i,0,n)
    {
    	 int l;
    	 cin>>l;
    	 rep(j,0,l)
    	 {
    	 	int x;
    	 	cin>>x;
    	 	v[i].push_back(x);
    	 }
    	 bool g=true;
    	 rep(j,1,l)
    	 {
               if(v[i][j]>v[i][j-1])
               {
               	  g=false;
               	  break;
               }	
    	 }
    	 if(g)
    	 {
    	 	 int a=v[i][0],b=v[i][l-1];
    	 	 if(m.find(hash1(b,a))==m.end())
    	 	 {m[hash1(b,a)]=1;v1.push_back({b,a});}
    	 	 else
    	 	 m[hash1(b,a)]++;	
    	 }	
    }
    if(v1.size()==0)
    {
    	int ans1=n*n;
    	cout<<ans1<<endl;
    	return 0;
    }	
    int tot=0;
    sort(v1.begin(),v1.end());
    suff[v1.size()]=0;
    rev(i,v1.size()-1,0)
    {
    	suff[i]=suff[i+1]+m[hash1(v1[i].f,v1[i].s)];
    }
    rep(i,0,v1.size())
    {
    	 int curl=v1[i].f,curr=v1[i].s;
    	 int l=i+1,r=v1.size()-1;
    	 int ans=v1.size();
    	 while(l<=r)
    	 {
    	 	int mid=(l+r)/2;
            if(v1[mid].f>=curr)
            {
            	ans=min(ans,mid);
            	r=mid-1;
            }
            else
            l=mid+1;	
    	 }
    	 tot+=suff[ans]*(suff[i]-suff[i+1]);
    }
    rep(i,0,v1.size())
    {
    	int x=v1[i].f,y=v1[i].s;
    	if(x==y)
    	{
            tot+=((suff[i]-suff[i+1])*(suff[i]-suff[i+1]));
    	}	
    }
    int sol=n*n-tot;
    cout<<sol<<endl; 
    return 0;
}