/****** BISMILLAH HIR RAHMANIR RAHIM ******/

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>

using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;

typedef long long ll;
typedef pair <int, int> pii;
/* Special functions:

        find_by_order(k) --> returns iterator to the kth largest element counting from 0
        order_of_key(val) --> returns the number of items in a set that are strictly smaller than our item
*/

typedef tree<
int,
null_type,
less<int>,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;


#define EPS 1e-9
#define NL cout<<endl;
#define MP make_pair
#define ALL(a) a.begin(), a.end()
#define DBG(a) cout<< #a <<" --> "<<(a)<<endl;
#define FastIO ios::sync_with_stdio(false); cin.tie(0);cout.tie(0)
#define IN freopen("input.txt","r+",stdin)
#define OUT freopen("output.txt","w+",stdout)

template < class T1,class T2>
ostream &operator <<(ostream &os,const pair < T1,T2 > &p)
{
    os<<"{"<<p.first<<","<<p.second<<"}";
    return os;
}
template < class T1,class T2>
pair <T1 ,T2> operator + ( const  pair < T1,T2 > &p1,const pair < T1,T2 > &p2)
{
    return make_pair(p1.first+p2.first,p1.second+p2.second);
}
/****** END OF HEADER ******/
int n,m;
int a[100][100];
int b[100][100];

int ispos()
{
    for(int i=0;i<n;i++)
    {
        for(int j=1;j<m;j++)
        {
            if(a[i][j] <= a[i][j-1]) return 0;
            if(b[i][j] <= b[i][j-1]) return 0;
        }
    }
    return 1;
}
int ispos1()
{
    for(int i=0;i<m;i++)
    {
        for(int j=1;j<n;j++)
        {
            if(b[j][i] <=b[j-1][i]) return 0;
            if(a[j][i] <=a[j-1][i]) return 0;
        }
    }
    return 1;
}
int calc()
{
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(a[i][j]>b[i][j]) swap(a[i][j],b[i][j]);
        }
    }
}
int main()
{
        cin>>n>>m;
        for(int i=0;i<n;i++) for(int j=0;j<m;j++) cin>>a[i][j];
        for(int i=0;i<n;i++) for(int j=0;j<m;j++) cin>>b[i][j];
        calc();
        cout<<(ispos()&&ispos1() ? "Possible\n":"Impossible\n");
}
