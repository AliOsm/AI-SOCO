#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>
#include <unordered_set>
#include <unordered_map>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.1415926535897
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

int dp[110][1110];
int was[110][1110];
int v1, v2, t, d;
int r(int t, int v)
{
	if (t == 0)
	{
		if (v==v2)
			return v2;
		return -1000000000;
	}
	if (was[t][v])
		return dp[t][v];
	was[t][v] = 1;
	int res = -1000000000;
	FOR(nv, v - d, v + d + 1)
	{
		if (nv < 0)
			continue;
		int nres = r(t - 1, nv);
		if (nres != -1000000000)
			res = max(res, v + nres);
	}
	return dp[t][v] = res;
}

int main()
{
#ifdef Fcdkbear
	freopen("in.txt", "r", stdin);
	//freopen("in.txt", "w", stdout);
	double beg = clock();
#endif

	cin >> v1 >> v2 >> t >> d;
	cout << r(t - 1, v1) << endl;

#ifdef Fcdkbear
	double end = clock();
	fprintf(stderr, "*** Total time = %.3lf ***\n", (end - beg) / CLOCKS_PER_SEC);
#endif
	return 0;
}