#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define PB push_back
#define MP make_pair

#define rep(i,n) for(int i=0;i<(n);++i)
#define REP(i,n) for(int i=1;i<=(n);++i)
#define FOR(i,l,h) for(int i=(l);i<=(h);++i)
#define FORD(i,h,l) for(int i=(h);i>=(l);--i)
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl
#define tr(it,c) for(VI::iterator it=(c).begin(); it!=(c).end(); ++it)

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long int64;
typedef pair<int,int> pii;

const int maxn=2500;
string s;
bool dp[maxn][maxn]={};
int64 A[maxn]={}, B[maxn]={};

int main(void)
{
	cin>>s;
	int n=s.size();
	rep(i,n) dp[i][i]=true;
	rep(i,n-1) dp[i][i+1]=(s[i]==s[i+1]);
	FOR(l,2,n-1)
		rep(i,n)
		{
			int j=i+l;
			if(j<n) dp[i][j] = dp[i+1][j-1] && (s[i]==s[j]);
		}
	rep(i,n) rep(j,n) if(dp[i][j]) ++A[j], ++B[i];
	int64 ans=0;
	rep(i,n) rep(j,n) if(i<j) ans += A[i]*B[j];
	cout<<ans<<endl;
	return 0;
}