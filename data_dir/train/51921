#include <string>
#include <sstream>
#include <cstring>
#include <sstream>
#include <vector>
#include <algorithm>
#include <iostream>
#include <stdio.h>
#include <fstream>
#include <ctime>
#include <cmath>
#include <math.h>
#include <set>
#include <map>
#include <list>
#include <iomanip>
#include <cstdio>
#include <algorithm>
using namespace std;

#define pp system("pause");
#define ct double ttme = clock()
#define p_ct cout << (clock() - ttme) / CLOCKS_PER_SEC << endl
#define all(c) (c).begin(),(c).end()
#define fft ifstream fin("input.txt"); ofstream fout("output.txt")
#define fft_c FILE *fin, *fout
#define fft_c_open fin = fopen("input.txt","r"); fout = fopen("output.txt","w")
#define fft_c_cl fclose(fin); fclose(fout)
#define pii pair<int,int>
#define mp(a,b) make_pair((a),(b))
#define pff pair<float,float>
#define piii pair<int,pair<int,int>>
#define M_PI 3.14159265358979323846
#define mem0(m) memset((m), 0, sizeof(m));
#define memb(m) memset((m), false, sizeof(m));
#define memi(m) memset((m), 0, sizeof(m));
#define rep(i,n) for(i = 0; i < (int)(n); i++)
#define repi(a, n) for(int i = a; i < (int)(n); i++)
#define repp(i, a, n) for(int (i) = a; (i) < (int)(n); (i)++)
typedef unsigned long long ull;
typedef signed long long ll;
const int INF = 1e8;
const int DEL = 687134561;
const long long MODULO = 1e9 + 7;
const int MAX = 1e7;
const int des = 10000;




int main()
{
    int mass[26][26];
    memset(mass, false, sizeof(mass));

    int n;
    cin >> n;

    string str[105];

    for(int i = 0; i < n; i++) {
        cin >> str[i];
    }

    for(int i = 0; i < n - 1; i++) {
        int j = 0;
        for(j = 0; j < min(str[i].size(), str[i + 1].size()); j++) {
            if(str[i][j] != str[i + 1][j]) {
                break;
            }
        }
        if(j >= str[i].size()) continue;
        if(j >= str[i + 1].size()) {
            cout << "Impossible";
            return 0;
        }

        mass[(int)(str[i][j] - 'a')][(int)(str[i + 1][j] - 'a')] = true;
    }


    for(int k = 0; k < 26; k++)
    for(int a = 0; a < 26; a++)
    for(int b = 0; b < 26; b++) {
        if(mass[a][k] && mass[k][b]) {
            mass[a][b] = true;
        }
    }

    for(int i = 0; i < 26; i++)
        if(mass[i][i]) {
            cout << "Impossible";
            return 0;
        }

    int perm[26];
    mem0(perm);
    for(int i = 0; i < 26; i++) {
        for(int j = 0; j < 26; j++) if(mass[j][i]) perm[i]++;
        perm[i] = perm[i] * 26 + i;
    }

    sort(perm, perm + 26);

    for(int i = 0; i < 26; i++) {
        cout << (char)(perm[i] % 26 + 'a');
    }
}
