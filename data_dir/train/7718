#include<bits/stdc++.h>
#define MOD 1000000007
#define ll long long
#define mp make_pair
#define pb push_back 
#define N 400010
using namespace std;
int suf[N], pref[N], A[N];
int main(){
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	int n, i;
	cin >> n >> i;
	for(int i = 0; i < n; i++)
		cin >> A[i];
	sort(A, A + n);
	double elements = pow(2, (8 * i / n));
	int dist;
	if(elements > 1e9){
		cout << 0 << '\n';
	}
	else{
		dist =  (elements + 0.5);
		map<int, int> ct;
		for(int i = 0; i < n; i++)
			ct[A[i]]++;
		if(dist >= ct.size()){
			cout << 0 << '\n';
		}
		else{
			//cerr << dist << '\n';
			vector<int> df;
			for(auto it = ct.begin(); it != ct.end(); it++){
				df.pb(it->first);
			}
			suf[df.size() - 1] = ct[df.back()];
			for(int i = df.size() - 2; i >= 0; i--){
				suf[i] = suf[i + 1] + ct[df[i]];
			}
			pref[0] = ct[df[0]];
			for(int i = 1; i < df.size(); i++){
				pref[i] = pref[i - 1] + ct[df[i]];
			}
			//for(int i = 0; i < df.size(); i++)
			//	cout << pref[i] << " ";
			//cout << '\n';
			int mini = 1e9;
			for(int i = 0; i < df.size(); i++){
				int st = i;
				int ed = min((int)df.size() - 1, st + dist - 1);
				mini = min(mini, (st == 0 ? 0 : pref[st - 1]) + (ed == df.size() - 1 ? 0 : suf[ed + 1])); 
			}
			cout << mini << '\n';
		}
	}


}