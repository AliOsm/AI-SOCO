
/*
ID: ruben.a2
PROG: friday
LANG: C++11
*/
#include <iostream>
#include <math.h>
#include <queue>
#include <set>
#include <algorithm>
#include <cmath>
#include <climits>
#include <algorithm>
#include <bitset>
#include <stack>
#include <sstream>
#include <vector>
#include <string>
#include <list>
#include <map>
#include <complex>
#include <stdio.h>
#include <stdlib.h>

#define vi vector<int>
#define vvi vector<vi>
#define mp make_pair
#define pb push_back
#define pii pair<int, int>
#define ull unsigned long long
#define ll  long long
#define loop(xxx,n) for(int xxx = 0; xxx < n; xxx++)
#define loop1(xxx,n) for(int xxx = 1; xxx <= n; xxx++)
#define MLN 1000000
#define HTS 100000
#define DEBUG

#ifdef DEBUGNO
#define printf(fmt, ...) (0)
#endif
using namespace std; 

ll n, l, r;
ll a[HTS + 4], b[HTS + 4], c[HTS + 4], comp_c[HTS + 4];

ll index_of[HTS + 4];
int main() {
	cin >> n >> l >> r;
	loop(i, n) cin >> a[i];
	loop(i, n) {
		cin >> comp_c[i];
		index_of[comp_c[i]] = i;
	}



	//first max set
	b[index_of[n]] = r;
	ll last_c = r - a[index_of[n]];
	c[index_of[n]] = last_c;
	set<ll> st;
	st.insert(last_c);
	//printf("first seted %d\n", (int)r);
	for (int i = n - 1; i >= 1; i--) {
		ll index = index_of[i];
		//printf("hertakan index = %d\n", (int)index);
		ll x; // x - a[index] < last_c
		x = a[index] + last_c - 1;
		//printf("x = %d\n", (int)x);
		if (x > r)x = r - 1;
		while (st.find(x - a[index]) != st.end() || x > r) x--;

		//If no solution
		//if (x < l || x > r) {
		//	cout << -1 << endl;
		//	exit(0);
		//}

		b[index] = x;
		last_c = b[index] - a[index];
		c[index] = last_c;
		st.insert(last_c);

	}

	bool ok = true;
	for (int i = n; i > 1; i--) {
		if (c[index_of[i]] < c[index_of[i - 1]])
			ok = false;
	}
	for (int i = 0; i < n; i++) {
		if (b[i] > r || b[i] < l)
			ok = false;
	}

	//printf("printing b\n");
	//loop(i, n)
	//	cout << b[i] << ' ';
	//cout << endl;

	if (!ok) {
		cout << "-1\n";
		exit(0);
	}

	loop(i, n)
		cout << b[i] << ' ';
	cout << endl;
	return 0;
}
/*

4 1 40
4 6 4 2
3 1 2 4
*/
