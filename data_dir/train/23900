#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>


#define LL long long
#define uLL unsigned long long
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define vI vector<int>
#define vvI vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
#define forI(tmp) for(auto(it)=(tmp).begin();(it)!=(tmp).end();(it)++)
#define PI 3.14159265356
#define sc(a) scanf("%d", &(a))
const LL mod = 1000000007;
const LL Inf = 1e9;
using namespace std;

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	int n, m;
	cin >> n >> m;
	vvI a(n, vI(m)), tmp(n,vI(m,0));
	forn(i, 0, n)
		forn(j, 0, m) cin >> a[i][j];
	forn(i, 0, n) {
		bool flag = false;
		forn(j, 0, m) {
			if (flag) tmp[i][j] += 1;
			if (a[i][j] == 1) flag = true;
		}
		flag = false;
		for (int j = m - 1; j >= 0; j--) {
			if (flag) tmp[i][j]+= 1;
			if (a[i][j] == 1) flag = true;
		}
	}
	forn(i, 0, m) {
		bool flag = false;
		forn(j, 0, n) {
			if (flag) tmp[j][i] += 1;
			if (a[j][i] == 1) flag = true;
		}
		 flag = false;
		for (int j = n - 1; j >= 0; j--) {
			if (flag) tmp[j][i] += 1;
			if (a[j][i] == 1) flag = true;
		}
	}
	int ans = 0;
	forn(i, 0, n)
		forn(j, 0, m)
		if (a[i][j] == 0)
			ans += tmp[i][j];
	cout << ans;
	return 0;
}