#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

#define FTB(i,a,b) for(LL i=a;i<=b;i++)
#define FT(i,a,b) for(LL i=a;i<b;i++)
#define FGB(i,a,b) for(LL i=a;i>=b;i--)
#define FG(i,a,b) for(LL i=a;i>b;i--)
#define endl "\n"
#define PB push_back
#define mp make_pair
#define fi first
#define se second
#define debug cout<<"VL\n";
#define PI 3.1415926535897
#define lbnd(dau,cuoi,giatri) lower_bound(dau,cuoi,giatri)
#define ubnd(dau,cuoi,giatri) upper_bound(dau,cuoi,giatri)
typedef double DB;
typedef long long LL;
typedef unsigned long long UL;
typedef long double LD;
typedef pair<LL,LL> II;
typedef vector<LL> VI;
typedef vector<bool> VB;


LL n,x[1000006],y[1000006],dem1[1000006],dem2[1000006],F[1000006],tmp,res;
II a[1000006];

LL get(LL t){
	LL sum=0;
	while(t>0){
		sum+=F[t];
		t-=(t&-t);
	}
	return sum;
}

void update(LL t){
	while(t<=1e6+1){
		F[t]++;
		t+=(t&-t);
	}
}

int main(){
    ios::sync_with_stdio(false);cin.tie(0);
	cin>>n;
	FTB(i,1,n){
		a[i].second=i;
		cin>>a[i].first;
	}
	if(n==1){
		cout<<"0";
		return 0;
	}
	sort(a,a+n+1);
	tmp=1;
	LL luu=a[1].fi;
	a[1].first=1;
	swap(a[1].first,a[1].second);
	FTB(i,2,n){
		if(a[i].fi==luu) a[i].fi=tmp;
		else{
			tmp++;
			luu=a[i].fi;
			a[i].fi=tmp;
		}
		swap(a[i].first,a[i].se);
	}
	sort(a+1,a+n+1);
	FTB(i,1,n){
		dem1[a[i].se]++;
		x[i]=dem1[a[i].se];
	}
	FGB(i,n,1){
		dem2[a[i].se]++;
		y[i]=dem2[a[i].se];
	}
	FGB(i,n,1){
		res+=get(x[i]-1);
		update(y[i]);
	}
	cout<<res;
	return 0;
}


