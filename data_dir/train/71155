#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define mkp make_pair
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
#define all(x) x.begin(),x.end()
typedef long long ll;
typedef long double ld;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<62);
const int inf=(1<<30);
const int nmax=1e3+50;
const ll mod=1e9+7;
using namespace std;
int dx[]={-1,1,0,0},dy[]={0,0,-1,1},n,m,qr,i,j,t,x,y,nx,ny;
bool viz[nmax][nmax],a[nmax][nmax];
ll p,d[nmax][nmax];
queue<pair<int,int> >q;
char c;
bool ok(int x,int y,bool v)
{
	if(x>=1 && x<=n && y>=1 && y<=m && a[x][y]==v)return 1;
	return 0;
}
int main()
{
	//freopen("sol.in","r",stdin);
	//freopen("sol.out","w",stdout);
	//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
	ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
	cin>>n>>m>>qr;
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=m;j++)
		{
			cin>>c;
			a[i][j]=c-'0';
			d[i][j]=llinf;
		}
	}
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=m;j++)
		{
			for(t=0;t<4;t++)
			{
				if(ok(i+dx[t],j+dy[t],a[i][j]))
				{
					q.push(mkp(i,j));
					viz[i][j]=1;
					d[i][j]=0;
					break;
				}
			}
		}
	}
	while(!q.empty())
	{
		x=q.front().fr,y=q.front().sc;
		q.pop();
		for(i=0;i<4;i++)
		{
			nx=x+dx[i],ny=y+dy[i];
			if(ok(nx,ny,a[x][y]^1) && !viz[nx][ny])
			{
				viz[nx][ny]=1;
				q.push(mkp(nx,ny));
				d[nx][ny]=d[x][y]+1;
			}
		}
	}
	while(qr--)
	{
		cin>>i>>j>>p;
		if(d[i][j]>=p)cout<<a[i][j]<<'\n';
		else if((p-d[i][j])&1LL)cout<<!a[i][j]<<'\n';
		else cout<<a[i][j]<<'\n';
	}
	return 0;
}
