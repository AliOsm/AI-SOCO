/*
 _____ _             _              _           _ 
|_   _| |__   ___   / \   _ __  ___| |__  _   _| |
  | | | '_ \ / _ \ / _ \ | '_ \/ __| '_ \| | | | |
  | | | | | |  __// ___ \| | | \__ \ | | | |_| | |
  |_| |_| |_|\___/_/   \_\_| |_|___/_| |_|\__,_|_|                                                
 */
#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define ppb         pop_back
#define endl  '\n'
#define mii         map<ll int,ll int>
#define msi         map<string,ll int>
#define mis         map<ll int, string>
#define rep(i,a,b)    for(ll int i=a;i<b;i++)
#define mpi         map<pair<ll int,ll int>,ll int>
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define vii         vector<pair<ll int, ll int>>
#define vs          vector<string>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define what_is(x)  cerr << #x << " is " << x << endl;
#define time        cerr << "\nTime elapsed: " << 1000 * clock() / CLOCKS_PER_SEC << "ms\n";
using namespace std;
#define N  100005
 void solve()
{
 ll n;
 cin>>n;
 map<ll,ll>mp;
 rep(i,0,n)
 {
  ll x;
  cin>>x;
  mp[x]++;
 }
 ll f=0,ps;
 for(auto i:mp)
 {
  if(i.S==2)
  {
   f++;
   ps=i.F;
  }
  else if(i.S>2)
  {
   cout<<"cslnb\n";
   return;
  }
 }
 if(f>1)
 {
  cout<<"cslnb\n";
  return;
 }
 ll cnt=0;
 if(f==1)
 {
  if(ps==0 || mp[ps-1]>0)
  {
   cout<<"cslnb\n";
   return;
  }
  mp[ps]--;
  mp[ps-1]++;
  cnt++;
 }
 ll vps=0;
 for(auto i:mp)
 {
  cnt+=i.F-vps;
  vps++;
 }
 if(cnt&1)
 {
  cout<<"sjfnb\n";
 }
 else
 {
  cout<<"cslnb\n";
 }
 return;
}
int main()
{
 ios_base::sync_with_stdio(false);
 cin.tie(0);
 cout.tie(0);
 int TESTS=1;
// cin>>TESTS;
 while(TESTS--)
 {
  solve();
 }
 time
 return 0;
}