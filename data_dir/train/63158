/*  
 * Author: Youssef Elghareeb
 */

#include <bits/stdc++.h>
using namespace std;

#define loop(i,n) for(int i = 0; i < n; i++)
#define pii pair<int, int>
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define vi vector<int>
#define pb push_back

typedef long long LL;

const LL INF = 1e18 + 5;
const int mod = 1e9 + 7;

#define vpii vector<pii>

const int N = 5005;

int dp[N][N];

void uMax(int& f, int s) {
    f = max(f, s);
}

int main() {
#ifdef DEBUG
    freopen("in.txt", "r", stdin);
#endif
    ios_base::sync_with_stdio(false);    
    int n, k, a[N], pre[N];
    cin >> n >> k;
    loop(i, n) cin >> a[i + 1];
    sort(a + 1, a + n + 1);
    loop(i, n) {
        loop(j, i + 1) {
            if (a[i + 1] - a[j + 1] <= 5) {
                pre[i + 1] = j + 1;
                break;
            }
        }
    }
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= k; j++) {
            uMax(dp[i][j], 1 + dp[i - 1][j - 1]); // Make a new team
            uMax(dp[i][j], i - pre[i] + 1 + dp[pre[i] - 1][j - 1]); // Go as much as possible
            uMax(dp[i][j], dp[i - 1][j]); // no join
        }
    }
    cout << dp[n][k] << endl;
    return 0;
}