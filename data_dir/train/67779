/*
__________________________68888.__________________,
 _______________________.8888888881________________,
______________________8888888888888_______________,
_____________________.88888888888888_.____________,
_____________________88888888888888885____________,
_____________________888888888888888888.__________,
____________________8888888888888888888888._______,
____________________8888888888888888888_.88588____,
________________888888888888888888888888._________,
_______________6888888888888888888888858._________,
_______________88888888888888888888888868_________,
______________8888888888888888888888888.__________,
___________._888888888888888888888888885__________,
____________8888888888888888888888888588._________,
____________88888888888888888888888886881_________,
___________68888_88888888888888888885___._________,
__________.8888..8888888888888888888______________,
__________.8888__8888888888888888888______________,
___________88888_6888888888888888888______________,
___________.8888._888888888888888888______________,
____________:8888.8888888888888888888…__________,
_____________688856888888888888888888886__________,
______________6888888888888888888888888888________,
_______________888888888888888888888888888________,
________________8888888888888888888888888_________,
______________..8888888888888888888888885_________,
_______________88888888888888888888888888_________,
______________688888888888888888888888888_________,
______________88.88888888888___8888888881_________,
________________88888888888_.__.88888888._________,
_______________18888888888______68888888__________,
______________.8888888888..______8888888__________,
______________8888888888.________8888888._________,
_____________.888888888__________.8888886_________,
_____________.88888888____________8888888_________,
_____________68888888____________.8888888_________,
_____________8888888.____________._888888:________,
____________8888888._______________8888888._______,
___________.8888888________________:888888________,
___________6888888__________________6888886_______,
__________.888888.___________________888888_______,
__________6888888____________________888888.______,
__________8888885____________________.888886______,
__________888888______________________888888______,
__________888888______________________888888______,
_________588888________________________88888______,
_________88888_._______________________88888______,
_________88885__________________________8888______,
_________8888___________________________8888______,
________.888.___________________________6888______,


______..8888____________________________88888.____,
_______.6888____________________________8888_.____,
______._88888.__________________________8888:.____,
________8888.__________________________88888______,
________8888__________________________588888______,
________88888________________________888888.______,

░░░░░███████ ]▄▄▄▄▄▄▄
▂▄▅████Т-34████▅▄▃
Il███████████████████]
◥⊙▲⊙▲⊙▲⊙▲⊙▲⊙▲⊙◤..

Красота - страшная сила!!
*/

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
int inf_int=2e9;
ll inf_ll=2e18;
typedef pair<int,int> pii;
#define pb push_back
const double pi=3.1415926535898;
#define dout if(debug) cout
#define fi first
#define se second
#define sp setprecision
template<typename T>
void prin(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i]<<" ";
    }
}
template<typename T>
void prin_new_line(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i]<<"\n";
    }
}

int sum_vec(vector<int>& a)
{
    int s=0;
    for(int i=0;i<a.size();i++)
    {
        s+=a[i];
    }
    return s;
}
template<typename T>
T max(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=max(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=min(ans,a[i]);
    }
    return ans;
}
int min(int a,int b,int c)
{
    return min(a,min(b,c));
}
ll min(ll a,ll b,ll c)
{
    return min(a,min(b,c));
}
int max(int a,int b,int c)
{
    return max(a,max(b,c));
}
ll max(ll a,ll b,ll c)
{
    return max(a,max(b,c));
}
#define debug 0
double s_triangle(double x1,double y1,double x2,double y2,double x3,double y3)
{
    return (((x2-x1)*(y3-y1)-(x3-x1)*(y2-y1))/2);
}
ll a[20];
ll mod=2e9;
void solve()
{
    int n,m;
    cin >> n >> m;
    for(int i=0;i<n;i++)
    {
        int x;
        cin >> x;
        a[x]++;
    }
    ll ans=0;
    for(int i=1;i<m;i++)
    {
        ll x=0;
        for(int e=i+1;e<=m;e++)
        {
            x+=(a[i]*a[e]);
        }
        ans+=x;
        ans=ans;
    }
    cout << ans;


}
#define FILE "planetwars"
int main()
{

     //   freopen("input.txt","r",stdin);
      //  freopen("output.txt","w",stdout);

  //   freopen(FILE".in","r",stdin);
   //  freopen(FILE".out","w",stdout);
       if(!debug)
       {
           ios_base::sync_with_stdio(0);
            cin.tie(0);
            cout.tie(0);
       }

        int t=1;
        while(t--)
            solve();
}