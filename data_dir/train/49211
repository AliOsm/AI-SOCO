#include<bits/stdc++.h>
#define MOD 1000000007
#define MOD2 1000000006
#define TEMPMOD1 998244353
#define TEMPMOD2 998244352
#define INF 1000000000000000007
#define NEGINF -1000000000000000007
#define vll vector<ll> 
#define vvll vector<vector<ll>>
#define pll pair<ll,ll>
#define pii pair<int,int>
#define plll pair<ll,pll>
#define vpll vector<pll>
using namespace std;
typedef long long int ll;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0); 
    
    ll n;
    cin>>n;
    pll interval[n];
    set<ll>first,second;
    map<ll,ll>freqfirst,freqsecond;
    map<pll,ll>freqpair;
    for(ll i=0;i<n;i++)
    {
        cin>>interval[i].first>>interval[i].second;
        freqpair[interval[i]]++;
        freqfirst[interval[i].first]++;
        freqsecond[interval[i].second]++;
        first.insert(interval[i].first);
        second.insert(interval[i].second);
    }
    sort(interval,interval+n);
    bool check1=true;
    for(ll i=1;i<n;i++)
    {
        if(interval[i-1].second>interval[i].second)
        {
            check1=false;
            break;
        }
    }
    ll ans=0;
    ll store;
    ll factorial[300010];
    factorial[0]=1;
    for(ll i=1;i<300010;i++)
    {
        factorial[i]=(factorial[i-1]*i)%TEMPMOD1;
    }
    store=1;
    for(auto it:first)
    {
        store=(store*factorial[freqfirst[it]])%TEMPMOD1;
    }
    ans=(ans+store)%TEMPMOD1;
    store=1;
    for(auto it:second)
    {
        store=(store*factorial[freqsecond[it]])%TEMPMOD1;
    }
    ans=(ans+store)%TEMPMOD1;
    if(check1)
    {
        store=1;
        for(auto it:freqpair)
        {
            store=(store*factorial[it.second])%TEMPMOD1;
        }
        ans=(ans-store+TEMPMOD1)%TEMPMOD1;
    }
    ans=(factorial[n]-ans+TEMPMOD1)%TEMPMOD1;
    cout<<ans;
    return 0;
}