#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
vector <ll> adj  [100005];
ll a[100005];
ll incc [100005];
ll decc[100005];
void dfs(ll node , ll prev){
    for(ll i :adj[node]){
        if(i==prev)continue;
        dfs(i,node),
        decc[node] = max(decc[node],decc[i]),
        incc[node] = max(incc[node],incc[i]);
    }
    ll val = a[node] +  incc[node] - decc[node];
    if(val>0)decc[node] += val;
    else incc[node] -= val;
}
int main()
{
	ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
	ll n;
	cin >> n;
    for(ll i = 0 ; i < n - 1 ; i ++){
        ll u,v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    for(ll i = 1 ; i <= n ; i ++)cin>>a[i];
    dfs(1,-1);
    cout<<incc[1]+decc[1];


	return 0;
}
