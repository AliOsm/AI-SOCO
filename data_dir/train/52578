#include <bits/stdc++.h>
using namespace std;

#define MOD 998244353

int A[100005];
int dp[100005][202][2], fp[100005][202][2];

int main() {

    ios::sync_with_stdio(0);
    cin.tie(NULL), cout.tie(NULL);

    int N;
    cin >> N;
    
    for(int i=1; i<=N; i++)
        cin >> A[i];

    long long ans = 0;
    
    for(int j=1; j<=200; j++)
    {
        if(A[1] == -1 || A[1] == j)
            dp[1][j][0] = 1;
    }
    
    for(int j=1; j<=200; j++)
        for(int k=0; k<2; k++)
        {
            fp[1][j][k] = (fp[1][j-1][k] + dp[1][j][k]);

            if(fp[1][j][k] >= MOD)
                fp[1][j][k] -= MOD;
        }
    
    for(int i=2; i<=N; i++)
    {
        for(int j=1; j<=200; j++)
        {
            if(A[i] != -1 && A[i] != j)
                continue;
            
            for(int k=0; k<2; k++)
            {
                if(k == 0)
                {
                    dp[i][j][k] += fp[i-1][j][0];
                    
                    if(dp[i][j][k] >= MOD)
                        dp[i][j][k] -= MOD;
                    
                    dp[i][j][k] += fp[i-1][200][1];
                    
                    if(dp[i][j][k] >= MOD)
                        dp[i][j][k] -= MOD;
                    
                    dp[i][j][k] -= fp[i-1][j][1];
                    
                    if(dp[i][j][k] < 0)
                        dp[i][j][k] += MOD;
                }
                else
                {
                    dp[i][j][k] += dp[i-1][j][0];
                    
                    if(dp[i][j][k] >= MOD)
                        dp[i][j][k] -= MOD;
                    
                    dp[i][j][k] += fp[i-1][200][1];
                    
                    if(dp[i][j][k] >= MOD)
                        dp[i][j][k] -= MOD;
                    
                    dp[i][j][k] -= fp[i-1][j][1];
                    
                    if(dp[i][j][k] < 0)
                        dp[i][j][k] += MOD;
                }
            }
        }
        
        for(int j=1; j<=200; j++)
            for(int k=0; k<2; k++)
            {
                fp[i][j][k] = (fp[i][j-1][k] + dp[i][j][k]);
                
                if(fp[i][j][k] >= MOD)
                    fp[i][j][k] -= MOD;
            }
    }
    
    cout << fp[N][200][1] << "\n";
    return 0;
}
