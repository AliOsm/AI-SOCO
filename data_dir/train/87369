#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define rs resize
#define mp make_pair
#define pi 3.1415926535897932384626433832795
#define sz(a) (int)(a).size()
#define Sort(a) sort((a).begin(), (a).end())
#define Reverse(a) reverse((a).begin(), (a).end())
#define sf scanf
#define pf printf
#define ms(a, x) memset((a), (x), sizeof(a))
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef vector <vvi> vvvi;
typedef vector <vvvi> vvvvi;
typedef vector <bool> vb;
typedef vector <vb> vvb;
typedef vector <vvb> vvvb;
typedef vector <vvvb> vvvvb;
typedef long long ll;
typedef vector <ll> vl;
typedef vector <vl> vvl;
typedef vector <vvl> vvvl;
typedef vector <vvvl> vvvvl;
typedef pair <int, int> ii;
typedef vector <ii> vii;
typedef vector <vii> vvii;
typedef pair <int, ll> il;
typedef vector <il> vil;
typedef vector <vil> vvil;
typedef pair <ll, int> li;
typedef vector <li> vli;
typedef vector <vli> vvli;
typedef set <int> si;
typedef set <li> sli;
typedef set <il> sil;
typedef vector <string> vs;
typedef vector <vs> vvs;
typedef vector <vvs> vvvs;
typedef map <char, int> mci;
typedef pair <ll, ll> pll;
const int inf = (int)1e9;

int main() {
#ifdef URUSANT
    freopen("input.txt", "r", stdin);
#endif
    string s;
    cin >> s;
    int n = sz(s);
    int k;
    cin >> k;
    map <char, char> a;
    for (int i = 0; i < k; ++i) {
        string s;
        cin >> s;
        a[s[0]] = s[1];
        a[s[1]] = s[0];
    }
    int x = -1;
    vi pr(n);
    int last[26];
    ms(last, -1);
    vi dp(n, 0);
    for (int i = 0; i < n; ++i) {
        dp[i] = 1;
        if (i == 0) {
            last[s[i] - 'a'] = 1;
            continue;
        }
        char x = a[s[i]];
        int y = -1;
        for (int j = 0; j < 26; ++j) {
            if (j != x - 'a') {
                y = max(y, last[j]);
            }
        }
        if (y == -1) {
            last[s[i] - 'a'] = max(last[s[i] - 'a'], 1);
            continue;
        }
        dp[i] = max(dp[i], y + 1);
        last[s[i] - 'a'] = max(dp[i], last[s[i] - 'a']);
    }
    int ans = 0;
    for (int i = 0 ;i < n; ++i) {
        ans = max(ans, dp[i]);
    }
    cout << n - ans;
    return 0;
}