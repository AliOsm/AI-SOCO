#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
typedef pair<ll,ll> p2;
ll t[1200005],lazy[1200005];
void push(ll v){
  t[2*v]+=lazy[v];
  t[2*v+1]+=lazy[v];
  lazy[2*v]+=lazy[v];
  lazy[2*v+1]+=lazy[v];
  lazy[v]=0;
}
void update(ll v,ll tl,ll tr,ll l,ll r,ll val){
  if(l>r)
    return;
  if(l==tl&&r==tr){
    t[v]+=val;
    lazy[v]+=val;
    return;
  }
  push(v);
  ll tm=(tl+tr)/2;
  update(2*v,tl,tm,l,min(r,tm),val);
  update(2*v+1,tm+1,tr,max(l,tm+1),r,val);
  t[v]=max(t[2*v],t[2*v+1]);
}
ll query(ll v,ll tl,ll tr,ll l,ll r){
  if(l>r)
    return -1;
  if(l<=tl&&tr<=r)
    return t[v];
  push(v);
  ll tm=(tl+tr)/2;
  return max(query(2*v,tl,tm,l,min(r,tm)),query(2*v+1,tm+1,tr,max(l,tm+1),r));
}
void solve(){
  ll n;
  cin>>n;
  ll p[n+1],q[n+1];
  for(ll i=1;i<=n;i++){
    ll x;
    cin>>x;
    p[x]=i;
  }
  for(ll i=1;i<=n;i++)
    cin>>q[i];
  ll val=n+1;
  for(ll i=1;i<=n;i++){
    while(query(1,1,n,1,n)<=0){
      val--;
      update(1,1,n,1,p[val],1);
    }
    cout<<val<<" ";
    update(1,1,n,1,q[i],-1);
  }
}
int main(){
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  ll q=1;
  for(ll i=0;i<q;i++)
    solve();
}