#include<bits/stdc++.h>
#define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define Alhamdulillah return 0;
#define pb push_back
#define mp make_pair
#define lb lower_bound
#define ub upper_bound
#define ins insert
#define fi first
#define se second
#define pi pair<int,int>
#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v) ((ll)((v).size()))
#define reset(v,val) memset(v,val,sizeof(v));
#define rep(i, x, n) for ( i = x; i<=(ll)(n); i++)
#define irep(i, x, n) for( i = x; i<(ll)(n); i++)
#define _rep(i, x, n) for ( i =x; i>=(ll)(n); i--)
#define _irep(i, x, n) for( i =x; i>(ll)(n); i--)
using namespace std;
typedef   long long   int  ll;
const long long  mod=1e9+7;
const ll MOD = 1e9 + 7;
ll n,m,k,res=0,ans=0,sm=0,vis[500005],edge=-1;
ll a[500050],red[500050];
multiset< pair<ll,ll> >st,st1,st2;
set<ll>stres;
string s,s1,s2;
vector<ll>v[5005],vnode,vans,v1,v3;
vector< pi >vv,vv1,adj[500005];
vector< pair< ll,pi> > vvv;
priority_queue <ll> q;
multiset< pair<ll,ll> > ::iterator it,it1,it2;
int voyel(char c){
	if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u'||c=='y')return 1;
	return 0;
}


int main(){
In_the_name_of_allah_the_merciful
	ll i=0,j=0,x,y,z=0,mx=0,nb0=0,nb=0,nbmax=0,nbinf=0,nb2=0,mm=5e9,idx=0,ok=0,l,r,negatif=0,positif=0,q,w,d;
	char c;
   // freopen("a.in","r",stdin);
    cin>>n>>k;
    for(i=1;i<=n;i++){
        cin>>a[i];
    }
    idx=1;
    m=0;
    nb=0;
    ll flag=0;
    while(1){
            if(nb==2)break;
        flag=0;
        while(st.size()<k&&idx<=n){
            st.insert({1,idx});
            idx++;
        }
       vv.clear();
       vv1.clear();
       if(!st.size())nb++;
        for(it=st.begin();it!=st.end();it++){
                d=-1;
            ll test=(*it).first;
            j=(*it).second;
            vv.pb({test,j});

                   d=(ll)((100*(double)m/(double)n )+(double)0.5000000);
                  if(d==test)stres.insert(j);

               test++;
            if(test<=a[j]){
               vv1.pb({test,j});
            }
            else flag++;
        }
        m+=flag;
        for(x=0;x<vv.size();x++){
            ll test=vv[x].first;
            j=vv[x].second;
            st.erase(st.find({test,j}));
        }
        for(x=0;x<vv1.size();x++){
            ll test=vv1[x].first;
            j=vv1[x].second;
            st.insert({test,j});
        }
    }
    res=stres.size();
  cout<<res;
Alhamdulillah
 }
