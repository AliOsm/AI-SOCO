#include <vector>
#include <stdio.h>
#include <string.h>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
typedef long long ll;
using namespace std;
vector<vector<ll> > ed(100005);
vector<vector<ll> > ed3ks(100005);
stack <ll> st;
bool vis[100005];
void dfs1(ll x)
{
    vis[x]=1;
    for(int i =0;i<ed[x].size();i++)
    {
        if(!vis[ed[x][i]])
        {
            dfs1(ed[x][i]);
        }
    }
    st.push(x);
}
vector<ll> v;
pair<ll,ll> y;
void dfs2(ll x)
{
    vis[x]=1;
    for(int i =0;i<ed3ks[x].size();i++)
    {
        if(!vis[ed3ks[x][i]])
        {
            dfs2(ed3ks[x][i]);
        }
    }
    if(v[x]<y.first)
    {
        y.first=v[x];
        y.second=1;
    }
    else if(v[x]==y.first)
        y.second++;
}
int main()
{
    std::cin.tie(0);
    std::ios::sync_with_stdio(false);
    //freopen("read.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    ll n,m,x,z;
    cin >> n;
    for(int i=0; i<n; i++)
    {
        cin >> x;
        v.push_back(x);
    }
    cin >> m;
    for(int i=0; i<m; i++)
    {
        cin >>x>>z;
        x--;
        z--;
        ed[x].push_back(z);
        ed3ks[z].push_back(x);
    }
    memset(vis,0,sizeof vis);
    for(int i =0;i<n;i++)
    {
        if(!vis[i])
        {
            dfs1(i);
        }
    }
    memset(vis,0,sizeof vis);
    ll out=0,counter=1;
    while(st.size())
    {
        x=st.top();
        st.pop();
        if(!vis[x])
        {
            y.first=y.second=1e11;
            dfs2(x);
            out+=y.first;
            counter*=y.second;
            counter%=1000000007;
        }
    }
    cout << out << " " << counter << endl;
    return 0;
}
