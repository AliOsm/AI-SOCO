/*
   Salim Shebli
   Russian,Syrian
   Faculty Of Information Technology
   University of Damascus
   Game Developer
 */
#include <bits/stdc++.h>
#define ll long long
#define mp make_pair
#define pb push_back
#define fi first
#define se second
using namespace std;
ll stcol[2010],strow[2010];
ll encol[2010],enrow[2010];
char a[2010][2010];
ll dpcol[2010][2010];
ll dprow[2010][2010];
ll dp[2010][2010];
int main() {
    ios::sync_with_stdio(false);
    ll n,k;
    cin>>n>>k;
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=n;j++)
        {
            cin>>a[i][j];
            if(a[i][j]=='B')
            {
                if(stcol[j]==0)
                    stcol[j]=i;
                encol[j]=i;
                if(strow[i]==0)
                    strow[i]=j;
                enrow[i]=j;
            }
        }
    }
    ll sol=0;
    for(int i=1;i<=n;i++)
    {
        if(strow[i]==0)
            sol++;
        if(stcol[i]==0)
            sol++;
    }
    for(int j=1;j<=n;j++)
    {
        for(int i=1;i<=n;i++)
        {
            if(stcol[j]!=0)
            {
                if(i+k-1>=encol[j]&&i<=stcol[j])
                {
                    dpcol[i][j]=1;
                   // cout<<i<<" "<<j<<" "<<dpcol[i][j]<<endl;
                }
            }
        }
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=n;j++)
        {
            if(strow[i]!=0)
            {
                if(j+k-1>=enrow[i]&&j<=strow[i])
                {
                    dprow[i][j]=1;
                   // cout<<i<<" "<<j<<endl;
                }
            }
        }
    }
     ll mmax=0;
    for(int i=1;i<=n;i++)
    {
        ll d=n;
        ll tot=0;
        for(int j=n;j>=1;j--)
        {
            tot+=dpcol[i][j];
            if(d-j+1>k)
            {
                tot-=dpcol[i][d];
                d--;
                dp[i][j]+=tot;
                mmax=max(mmax,dp[i][j]);
            }
            else if(d-j+1==k)
            {
                dp[i][j]+=tot;
                mmax=max(mmax,dp[i][j]);
            }
        }
    }

    for(int j=1;j<=n;j++)
    {
        ll d=n;
        ll tot=0;
        for(int i=n;i>=1;i--)
        {
            tot+=dprow[i][j];
            if(d-i+1>k)
            {
                tot-=dprow[d][j];
                d--;
                dp[i][j]+=tot;
                mmax=max(mmax,dp[i][j]);
            }
            else if(d-i+1==k)
            {
                dp[i][j]+=tot;
                mmax=max(mmax,dp[i][j]);
            }
        }
    }
   // cout<<mmax<<endl;
    cout<<sol+mmax<<endl;
    return 0;
}
