#include <bits/stdc++.h>
using namespace std;

class Solution {
  int n, k;
  vector<int> important;
  vector<vector<int>> rg;
  vector<bool> vis, inst;
  vector<int> study;
  int dfs(int u) {
    if (inst[u]) {
      cout << -1 << '\n';
      exit(0);
    }
    if (vis[u]) return 0;
    inst[u] = true;
    vis[u] = true;
    int ans = 1;
    for (int v : rg[u]) {
      ans += dfs(v);
    }
    inst[u] = false;
    study.push_back(u + 1);
    return ans;
  }
public:
  void run() {
    cin >> n >> k;
    vis.assign(n, false);
    inst = vis;
    rg.assign(n, vector<int>(0));
    for (int i = 0; i < k; ++i) {
      int a; cin >> a;
      important.push_back(a - 1);
    }
    for (int i = 0; i < n; ++i) {
      int t; cin >> t;
      while (t--) {
        int a; cin >> a;
        rg[i].push_back(a - 1);
      }
    }
    int ans = 0;
    while (important.size()) ans += dfs(important.back()), important.pop_back();
    cout << ans << '\n';
    cerr << study.size() << '\n';
    for (int i = 0; i < ans; ++i) cout << study[i] << " \n"[i == ans - 1];
  }
};
int main() {
  ios_base::sync_with_stdio(false); cin.tie(0);
  Solution().run();
  return 0;
}
