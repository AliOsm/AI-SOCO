/*
ID: hepic
PROG: sprime
LANG: C++11
*/
#include<bits/stdc++.h>

#define FOR(i,a,b) for(auto i=a; i!=b+1-2*(a>b); i+=1-2*(a>b))
#define REP(i,a,b) for(auto i=a-(a>b); i!=b-(a>b); i+=1-2*(a>b))
#define ALL(v) v.begin(),v.end()
#define what_is(x) cout<<#x<<" is "<<x<<endl;
#define min3(a,b,c) min(min(a,b),c)
#define max3(a,b,c) max(max(a,b),c)
#define SIZE 100010
#define MAXN 1000000007
#define PI 3.141592653589793
#define open_read1 freopen("C:\\Users\\Hepic\\Desktop\\a.txt","r",stdin)
#define open_write1 freopen("C:\\Users\\Hepic\\Desktop\\b.txt","w",stdout)
#define open_read freopen("painting.in","r",stdin)
#define open_write freopen("painting.out","w",stdout)

using namespace std;


typedef long long LL;
typedef pair<int,int> PII;


LL N;
LL max_area;
LL sticks_len[SIZE];
vector<LL> side;


int main()
{
    scanf("%I64d",&N);

    REP(i,0,N)
        scanf("%I64d",sticks_len+i);



    if(N<4)
    {
        printf("0\n");
        return 0;
    }


    sort(sticks_len,sticks_len+N);

    for(int i=N-1; i>=1; i--)
    {
        if(sticks_len[i] == sticks_len[i-1])
        {
            side.push_back(sticks_len[i-1]);
            --i;
        }

        else if(sticks_len[i]-1 == sticks_len[i-1])
        {
            side.push_back(sticks_len[i-1]);
            --i;
        }

        if(side.size() == 2)
        {
            max_area += (side[0]*side[1]);
            side.clear();
        }
    }


    printf("%I64d\n",max_area);

    return 0;
}
