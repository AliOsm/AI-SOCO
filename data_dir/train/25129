#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<ll, ll> pii;

typedef complex<double> point;

#define X real()
#define Y imag()

#define MOD 1000000007
#define MAX 500005

int R, C;
int ar, ac;
int br, bc;
int cr, cc;

int vis[1005][1005];
int ok(int r, int c) {
    return r >= 1 && c >= 1 && r <= R && c <= C;
}

int dr[] = { 0,0,1,-1,1,1,-1,-1};
int dc[] = { 1,-1,0,0,1,-1,1,-1 };

void dfs(int r, int c) {
    vis[r][c] = 2;

    for (int i = 0; i < 8; i++) {
        int nr = r + dr[i];
        int nc = c + dc[i];

        if (ok(nr,nc) && !vis[nr][nc])
            dfs(nr, nc);
    }
}



int main() {
#ifdef  Adel_SaadEddin_PC
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif //  Adel_SaadEddin_PC

    ios_base::sync_with_stdio(false);

    cin >> R;  C = R;

    cin >> ar >> ac;
    cin >> br >> bc;
    cin >> cr >> cc;



    for (int i = -1e4; i < 1e4; i++) {
        int nr = ar + i;
        int nc = ac + i;

        if (ok(nr, nc)) {
            vis[nr][nc] = true;
        }
    }

    for (int i = -1e4; i < 1e4; i++) {
        int nr = ar + i;
        int nc = ac - i;

        if (ok(nr, nc)) {
            vis[nr][nc] = true;
        }
    }

    for (int i = -1e4; i < 1e4; i++) {
        int nr = ar + i;
        int nc = ac + 0;

        if (ok(nr, nc)) {
            vis[nr][nc] = true;
        }
    }

    for (int i = -1e4; i < 1e4; i++) {
        int nr = ar + 0;
        int nc = ac + i;

        if (ok(nr, nc)) {
            vis[nr][nc] = true;
        }
    }

    dfs(br, bc);
    //for (int i = R; i > 0; i--, cout << "\n")
    //    for (int j = 1; j <= R; j++)
    //        cout << vis[i][j];
    //


    if (vis[cr][cc] == 2)
        cout << "YES\n";
    else
        cout << "NO\n";



    return 0;
}
