#include <bits/stdc++.h>
using namespace std;

const int N = 1e6 + 100, MOD = 1000 * 1000 * 1000 + 7;

int a, b, n, ans, fac[N];

int sum(int a, int b) {
	a += b;
	if(a < 0)
		a += MOD;
	else if(a >= MOD)
		a -= MOD;
	return a;
}

int mul(int a, int b) {
	return 1LL * a * b % MOD;
}

int power(int a, int b) {
	int res = 1;
	while(b) {
		if(b & 1)
			res = mul(res, a);
		a = mul(a, a);
		b >>= 1;
	}
	return res;
}

int f(int a) {
	return power(a, MOD - 2);
}

int choose(int a, int b) {
	return mul(fac[b], mul(f(fac[a]), f(fac[b - a])));
}

bool ok(int x) {
	while(x) {
		if(x % 10 != a && x % 10 != b)
			return false;
		x /= 10;
	}
	return true;
}

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	fac[0] = 1;
	for (int i = 1; i < N; i++)
		fac[i] = mul(fac[i - 1], i);
	
	cin >> a >> b >> n;
	for (int i = 0; i <= n; i++)
		if(ok(i * a + (n - i) * b))
			ans = sum(ans, choose(i, n));
	cout << ans;
	return 0;
}
