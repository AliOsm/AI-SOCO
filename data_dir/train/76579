#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
#define pb push_back
#define mp make_pair
const int M=2e5+2;
std::vector<int> vtr[M];
int val[M];
map<int,ll> m[M];
ll ans[M];
void DFS(int x,int pt)
{
	// if(m[x].find(val[x])==m[x].end())
	// 	m[x].insert(mp(val[x],1));
	// else
	// 	m[x][val[x]]++;
	// ans[val[x]]++;
	int i,u,p,q,r;
	ll l,n;
	for(i=0;i<vtr[x].size();i++)
	{
		u=vtr[x][i];
		if(u!=pt)
		{
			DFS(u,x);	
			for(auto it=m[x].begin();it!=m[x].end();it++)
			{
				p=it->first;
				l=it->second;
				for(auto it1=m[u].begin();it1!=m[u].end();it1++)
				{
					q=it1->first;
					n=it1->second;
					r=__gcd(p,q);
					ans[r]+=l*n;
				}
			}
			for(auto it=m[u].begin();it!=m[u].end();it++)
			{
				p=it->first;
				l=it->second;
				q=__gcd(p,val[x]);
				ans[q]+=l;
				m[x][q]+=l;
			}
			m[u].clear();
		}
	}
	m[x][val[x]]++;
	ans[val[x]]++;
}
int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);cout.tie(0);
	int n,u,v,i;
	cin>>n;
	for(i=1;i<=n;i++)
		cin>>val[i];
	for(i=1;i<n;i++)
	{
		cin>>u>>v;
		vtr[u].pb(v);
		vtr[v].pb(u);
	}
	DFS(1,0);
	for(i=1;i<=200000;i++)
		if(ans[i])
			cout<<i<<" "<<ans[i]<<"\n";
	return 0;
}