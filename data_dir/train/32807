#include <bits/stdc++.h>
using namespace std;

int powmax, powact, reg;
vector <pair <int, int>> spells;
int frc[10010];


int main()
{
    int n, hmax(0), nr(0);

    cin >> n;

    while (n--) {
        int x;
        cin >> x;
        frc[x]++;
        if (frc[x] == 1)
            nr++;
        hmax = max(hmax, frc[x]);
    }

    cout << hmax << ' ' << nr << '\n';
    return 0;
}/*
    int n;
    cin >> n >> powmax >> reg;
    powact = powmax;

    spells.resize(n);

    for (int i(0); i < n; i++)
        cin >> spells[i].first >> spells[i].second;

    vector <pair <int, int>> ans;
    int i;
    for (i = 0; i <= 2000 && powact > 0; i++) {
        int best(-1);
        for (int j(0); j < n; j++)
            if (powact <= 0.01 * powmax * spells[j].first && (spells[j].second > spells[best].second || best == -1))
                best = j;
        if (best != -1) {
            spells[best].first = -1e9;
            ans.push_back({ i, best + 1 });
            reg -= spells[best].second;
        }
        powact += reg;
        if (powact <= 0)
            break;
        if (powact > powmax)
            powact = powmax;
    }

    if (powact > 0) {
        cout << "NO\n";
        return 0;
    }
    cout << "YES\n";
    cout << i + 1 << ' ' << ans.size() << '\n';

    for (auto i : ans)
        cout << i.first << ' ' << i.second << '\n';


    return 0;
}*/
