#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse2")
#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#include <ext/pb_ds/detail/standard_policies.hpp>
#define int long long
#define all(x) x.begin(), x.end()
#define boost() ios_base :: sync_with_stdio(0); cin.tie(); cout.tie(); cout << fixed; cout << setprecision(15); srand(time(NULL))
using namespace std;
using namespace __gnu_pbds;
typedef tree<pair <int, int>, null_type, less<pair <int, int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

int n, k;
int dp[55][55];
int a[55];

int sol (int id, int cur, int bit) {
  if (id == n + 1) {
    if (cur == 0) return 1;
    return 0;
  }
  if (dp[id][cur] != -1) return dp[id][cur];
  int res = 0;
  int sum = 0;
  for (int i = id; i <= n; i++) {
    sum += a[i];
    if ((sum & bit) == bit) {
    res |= sol (i + 1, cur - 1, bit);
}  
}
  return dp[id][cur] = res;
}

signed main () {
  boost ();
  memset (dp, -1, sizeof dp);
  cin >> n >> k;
  for (int i = 1; i <= n; i++) cin >> a[i];
int res = 0;  
for (int i = 60; i >= 0; i--) {
res += (1LL << i);
memset (dp, -1, sizeof dp);
 if (!sol (1, k, res)) res -= (1LL << i);
}
cout << res << endl;
return 0;
}