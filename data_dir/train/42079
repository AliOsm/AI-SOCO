
//#include "stdc++.h"
#include <bits/stdc++.h>
#include<iostream>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <ll, int> pli;
typedef pair <db, db> pdd;
typedef vector<int> vi;
#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
#define sz(x) (int)(x.size())
#define ff first
#define ss second
#define endl "\n"
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p;}
const ll MOD = 1000000007;
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
#define ll unsigned long long
ll sum(ll l)
{
    ll cnt=1,p=1,tl=0,cnt1=0,cnt2=0,s1=1,s2=2,sm=0,ans=0;
    if(l==0)
        return 0;
    while((tl+p)<=l)
    {
     if(cnt%2)
     {
         //cnt1+=p;
         sm=p%MOD;
         sm=(sm%MOD*(s1%MOD+p%MOD-1)%MOD)%MOD;
         //cout<<sm<<endl;
         ans=(ans%MOD+sm%MOD)%MOD;
         s1=(s1%MOD+((p)%MOD*2)%MOD)%MOD;
         //sum1=sum1%MOD+(p*(s3+s1))
     }
        else
        {
            sm=p%MOD;
            sm=(sm%MOD*(s2%MOD+p%MOD-1)%MOD)%MOD;
            //cout<<sm<<endl;
            ans=(ans%MOD+sm%MOD)%MOD;
            s2=(s2%MOD+((p)%MOD*2)%MOD)%MOD;
        }
        cnt++;
        tl+=p;
        p=p*2;
        
    }
    if((tl+p)>l)
    {
        if(cnt%2)
        {
            p=l-tl;
            sm=p%MOD;
            sm=(sm%MOD*(s1%MOD+p%MOD-1)%MOD)%MOD;
            ans=(ans%MOD+sm%MOD)%MOD;
        }
        else
        {
            p=l-tl;
            sm=p%MOD;
            sm=(sm%MOD*(s2%MOD+p%MOD-1)%MOD)%MOD;
            ans=(ans%MOD+sm%MOD)%MOD;
        }
    }
   // ll sum1=(cnt1%MOD*cnt1%MOD)%MOD;
    //ll sum2=(cnt2%MOD*(cnt2+1)%MOD)%MOD;
    return ans;
}
int32_t main()
{
    IOS;
    ll l,r;
    cin>>l>>r;
    ll ans=(sum(r)%MOD-sum(l-1)%MOD+MOD)%MOD;
    cout<<ans<<endl;
    return 0;
}

