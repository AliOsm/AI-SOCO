#include <bits/stdc++.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;

const int MOD = 1e9 + 7;
const int MAX = 1e6 + 5;
int bit[MAX], best[MAX];

inline int add(int a, int b) {
	a += b;
	if(a >= MOD) {
		a -= MOD;
	}
	return a;
}

inline int subtract(int a, int b) {
	a -= b;
	if(0 > a) {
		a += MOD;
	}
	return a;
}

inline int mult(int a, int b) {
	return (1LL * a * b) % MOD;
}

void update(int idx, int val) {
	while(idx < MAX) {
		bit[idx] = add(bit[idx], val);
		idx += idx & -idx;
	}
}

int query(int idx) {
	int sum = 0;
	while(idx) {
		sum = add(sum, bit[idx]);
		idx -= idx & -idx;
	}
	return sum;
}

int roll(const vector<int> &v) {
	int n = v.size();
	int total = 0;
	fori(i, 0, n) {
		int q = mult(v[i], query(v[i]) + 1);
		update(v[i], subtract(q, best[v[i]]));
		best[v[i]] = q;
	}
	fori(i, 0, MAX) {
		total = add(total, best[i]);
	}
	return total;
}

int main() {
	int n;
	scanf("%d", &n);
	vector<int> v(n);
	fori(i, 0, n) {
		scanf("%d", &v[i]);
	}
	printf("%d\n", roll(v));

	return 0;
}

