#include<bits/stdc++.h>
using namespace std;
#define int long long
#define pii pair<int,int>
#define ld long double
const int mod=998244353;

vector<int>g[500005];
vector<int>vis(500005);
vector<int>cnt(500005);
map<pii,int>m;
vector<int>leaf;
int l;

void dfs(int x)
{
	
	cnt[x]=1;
	for(auto i : g[x])
	{
		if(!vis[i])
		{
			vis[i]=x;
			dfs(i);
			cnt[x]+=cnt[i];

		}
	}
if(cnt[x]==1 && x!=1)
   l++;
}



void dfs1(int x,int b,bool &t,vector<int>&v)
{
    
    if(x==b)
    {
        t=true; return ; 
    }
    
    for(auto i : g[x])
    {
        if(!vis[i])
        {
            vis[i]=1;
            
            dfs1(i,b,t,v);
            if(t)
            {
                v.push_back(i); return;
            }
            
        }
    }
}

int32_t main()
{
    ios::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  
  int n;
  cin>>n;

  for(int i=1;i<n;i++)
  {
  		int x,y,z; cin>>x>>y;
  		g[x].push_back(y);
  		g[y].push_back(x);
  	

  }
vis[1]=1;
dfs(1);

for(int i=0;i<=n;i++)vis[i]=0;

vector<int>leaf(l);

for(int i=0;i<leaf.size();i++)
cin>>leaf[i];


vector<int>ans;
ans.push_back(1);
 int a,b;
 a=1,b=leaf[0];
  vector<int>path;
        bool t=0;
        vis[a]=1;
        dfs1(a,b,t,path);
        reverse(path.begin(),path.end());
        for(auto i : path)
        ans.push_back(i);
       
   
 
for(int i=0;i<leaf.size();i++)
 { 
     vis.clear(); vis.resize(n+1);
     
     int a,b;
    
 if(i!=leaf.size()-1)
     a=leaf[i],b=leaf[i+1];
     
     else
     {
         a=leaf[i]; b=1;
     }
     
        vector<int>path;
        bool t=0;
        vis[a]=1;
        dfs1(a,b,t,path);
        reverse(path.begin(),path.end());
        for(auto i : path)
        ans.push_back(i);


}

for(int i=0;i<ans.size()-1;i++)
{
    m[{ans[i],ans[i+1]}]++;
    m[{ans[i+1],ans[i]}]++;
    
    if(  m[{ans[i],ans[i+1]}]>2)
    {
        cout<<-1; return 0;
    }
}

for(auto i : ans)
{
    cout<<i<<" ";
}



      
}