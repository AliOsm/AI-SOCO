#include <bits/stdc++.h>

using namespace std;

const int N = 5e3 + 5;
int priority[N] , par[N] , cap[N];
vector<array<int , 2> > adj[N];

void dfs(int node , int p = 1) {
    par[node] = p;
    for (auto &c : adj[node]) {
        if (c[0] != p) {
            dfs(c[0] , node);
            cap[c[0]] = c[1];
        }
    }
}

int cnt[N][2 * N];
int go (int node , int day) {
    if (node == 1)
        return day;

    cnt[node][day]++;
    if (cap[node] >= cnt[node][day])
        return go(par[node] , day + 1);

    return go(node , day + 1);
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.in" , "r" , stdin);
#endif
    int n;
    cin >> n;

    for (int i = 1 ;i <= n ;i++)
        cin >> priority[i];

    for (int i = 0 ;i < n - 1 ;i++) {
        int u , v , c;
        cin >> u >> v >> c;
        adj[u].push_back({v , c});
        adj[v].push_back({u , c});
    }

    dfs(1);

    vector<int> v(n);
    iota(v.begin() , v.end() , 1);
    sort(v.begin() , v.end() , [&] (int i , int j) {
        return priority[i] < priority[j];
    });


    vector<int> ans(n + 1);
    for (int i = 0 ;i < n ;i++)
        ans[v[i]] = go(v[i] , 0);

    for (int i = 1 ;i <= n ;i++)
        cout << ans[i] << ' ';
}