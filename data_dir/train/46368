#include<bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef long double ld;
typedef pair<int,int> pi;
typedef pair<ll,ll> pll;

#define endl '\n'
#define ff first
#define ss second
#define int long long
#define pb push_back
#define f(i,l,r) for(ll i=l;i<=r;i++)
#define rf(i,r,l) for(ll i=r;i>=l;i--)
#define Max 2000001
#define inf 2147483647
#define llinf 9223372036854775807
#define all(v) v.begin(),v.end()
#define bp(n) __builtin_popcountll(n)
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)

#define d0(a) cout<<a<<' ';
#define d1(a) cout<<a<<endl;
#define d2(a,b) cout<<a<<' '<<b<<endl;
#define d3(a,b,c) cout<<a<<' '<<b<<' '<<c<<endl;
#define d4(a,b,c,d) cout<<a<<' '<<b<<' '<<c<<' '<<d<<endl;
#define d5(a,b,c,d,e) cout<<a<<' '<<b<<' '<<c<<' '<<d<<' '<<e<<endl;

const ll N=3e6+5,mod=1e9+7,bit=61;

bool isprime[Max];
vector<ll> prime;
void sieve()
{
	int i,j;
	for(i=0;i<Max;i++)
	{
		isprime[i]=true;
	}
	isprime[0]=isprime[1]=false;
	for(i=2;i*i<Max;i++)
	{
		if(isprime[i])
		{
			for(j=i*i;j<Max;j+=i)
			{
				isprime[j]=false;
			}
		}
	}
	for(i=2;i<Max;i++)
	{
		if(isprime[i])
		{
			//prime.push_back(i);
		}
	}
}

signed main()
{
    fast;

    sieve();
    ll t=1;
    //cin>>t;
    while(t--)
    {
        ll n;
        cin>>n;
        ll a[n],one=0,two=0;
        ll x=0;
        f(i,0,n-1)
        {
            cin>>a[i];
            one+=(a[i]==1);
            if(a[i]>1 and isprime[a[i]+1])
            {
                x=a[i];
            }
        }
        if(one and x)
        {
            cout<<one+1<<endl;
            while(one--)
            {
                cout<<1<<' ';
            }
            cout<<x<<' ';
            cout<<endl;
        }
        else if(one>1)
        {
            cout<<one<<endl;
            while(one--)
            {
                cout<<1<<' ';
            }
            cout<<endl;
        }
        else
        {
            f(i,0,n-1)
            {
                f(j,i+1,n-1)
                {
                    if(isprime[a[i]+a[j]])
                    {
                        cout<<2<<endl;
                        cout<<a[i]<<' '<<a[j]<<endl;
                        return 0;
                    }
                }
            }
            cout<<1<<endl;
            cout<<a[0]<<endl;
        }
    }
    return 0;
}
















