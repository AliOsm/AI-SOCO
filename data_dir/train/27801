
// In the name of God
// Code by: mrMaster

#include <bits/stdc++.h>

using namespace std;

inline int in() {int x; scanf("%d",&x); return x;}
#define debug(x) cerr << #x << '=' << (x) << endl
#define FOR(i,j,k) for(int i=j;i<k;++i)
#define bpc __builtin_popcount
#define blz __builtin_clz
#define btz __builtin_ctz
#define Size(x) ((int)(x).size())
//#define endl '\n'
#define boost ios_base :: sync_with_stdio(false) , cin.tie(0) , cout.tie(0)
#define pb push_back

typedef long long ll;
typedef long double ld;
typedef pair<int,int>pii;

const int INF = 1e9 + 10;
const ll LINF = 1000ll*1000*1000*1000*1000*1000 + 100;
const int MN = 7e2 + 10;
const int MOD = 1e9 + 7;

string s;
int sz = 1;
vector<int>adj[MN];
int par[MN];
ll t1[4][MN][MN] , t2[4][MN][MN];
ll dp[4][MN];

void input()
{
	cin >> s;
	int cur = 0;
	par[cur] = -1;
	for(int i=0;i<Size(s);++i){
		if(s[i] == '('){
			adj[cur].pb(sz);
			par[sz] = cur;
			cur = sz++;
		}else{
			cur = par[cur];
		}
	}
}

void dfs(int s)
{
	if(!Size(adj[s])){
		dp[0][s] = dp[1][s] = dp[2][s] = dp[3][s] = 1;
		return;
	}
	for(int i=0;i<Size(adj[s]);++i)
		dfs(adj[s][i]);
	for(int i=0;i<4;++i)
		t1[i][s][0] = dp[i][adj[s][0]];
	for(int i=1;i<Size(adj[s]);++i){
		ll tmp = t1[0][s][i-1] + t1[1][s][i-1] + t1[2][s][i-1] + t1[3][s][i-1]; 
		tmp %= MOD;
		t1[0][s][i] = (tmp+MOD-t1[1][s][i-1])%MOD;
		t1[0][s][i] = (t1[0][s][i]*dp[0][adj[s][i]])%MOD;
		t1[1][s][i] = tmp;
		t1[1][s][i] = (t1[1][s][i]*dp[1][adj[s][i]])%MOD;
		t1[2][s][i] = (tmp+MOD-t1[3][s][i-1])%MOD;
		t1[2][s][i] = (t1[2][s][i]*dp[2][adj[s][i]])%MOD;
		t1[3][s][i] = tmp;
		t1[3][s][i] = (t1[3][s][i]*dp[3][adj[s][i]])%MOD;
	}
	for(int i=0;i<4;++i)
		t2[i][s][Size(adj[s])-1] = dp[i][adj[s][Size(adj[s])-1]];
	for(int i=Size(adj[s])-2;i>=0;--i){
		ll tmp = t2[0][s][i+1] + t2[1][s][i+1] + t2[2][s][i+1] + t2[3][s][i+1];
//		cout << s << ' ' << i << ' ' << tmp << endl;
		tmp %= MOD;
		t2[0][s][i] = tmp;
		t2[0][s][i] = (t2[0][s][i]*dp[0][adj[s][i]])%MOD;
		t2[1][s][i] = (tmp+MOD-t2[0][s][i+1])%MOD;
		t2[1][s][i] = (t2[1][s][i]*dp[1][adj[s][i]])%MOD;
		t2[2][s][i] = tmp;
		t2[2][s][i] = (t2[2][s][i]*dp[2][adj[s][i]])%MOD;
		t2[3][s][i] = (tmp+MOD-t2[2][s][i+1])%MOD;
		t2[3][s][i] = (t2[3][s][i]*dp[3][adj[s][i]])%MOD;
	}
	ll tmp = t2[0][s][0] + t2[1][s][0] + t2[2][s][0] + t2[3][s][0]; tmp %= MOD;
//	cout << s << ' ' <<tmp << endl;
	dp[0][s] = (tmp+MOD-t2[0][s][0])%MOD;
	dp[2][s] = (tmp+MOD-t2[2][s][0])%MOD;
	tmp = t1[0][s][Size(adj[s])-1] + t1[1][s][Size(adj[s])-1] + t1[2][s][Size(adj[s])-1] + t1[3][s][Size(adj[s])-1]; tmp %= MOD;
	dp[1][s] = (tmp+MOD-t1[1][s][Size(adj[s])-1])%MOD;
	dp[3][s] = (tmp+MOD-t1[3][s][Size(adj[s])-1])%MOD;
//	cout << s << '*' << dp[0][s] << ' '<< endl;
}

int main()
{
	boost;
	input();
/*	for(int i=0;i<sz;++i){
		cout << i << " : ";
		for(int j=0;j<Size(adj[i]);++j)
			cout << adj[i][j] << ' ';
		cout << endl;
	}
*/	//return 0;
	dfs(0);
	cout << (t2[0][0][0] + t2[1][0][0] + t2[2][0][0] + t2[3][0][0])%MOD << endl;
	return 0;
}


