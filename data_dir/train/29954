#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define PB push_back
#define MP make_pair

#define rep(i,n) for(int i=0;i<(n);++i)
#define REP(i,n) for(int i=1;i<=(n);++i)
#define FOR(i,l,h) for(int i=(l);i<=(h);++i)
#define FORD(i,h,l) for(int i=(h);i>=(l);--i)
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl
#define tr(it,c) for(VI::iterator it=(c).begin(); it!=(c).end(); ++it)

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long int64;
typedef pair<int,int> pii;

const int maxn=205;
double dp[maxn][maxn][2*maxn]={};
double p[maxn];
int a[maxn];
int n,l,kk;

double Dp(int i,int j,int k)
{
	if(i<0 || j<0 || i<j) return 0;
	if(k<-201) return Dp(i,j,-201);
	if(k>201) return Dp(i,j,201);
	double &res=dp[i][j][k+203];
	if(res<1e15) return res;
	if(i==0)
	{
		if(k>kk) return res=0.;
		else return res=1.;
	}
	
	if(a[i]==-1)res=p[i]*Dp(i-1,j-1,k+1) + (1.-p[i]) * Dp(i-1,j,k);
	else res=p[i]*max(Dp(i-1,j-1,k+1),Dp(i-1,j-1,k-a[i])) + (1.-p[i]) * Dp(i-1,j,k);
	return res;
}

int main(void)
{
	cin>>n>>l>>kk;
	REP(i,n) cin>>p[i], p[i]/=100;
	REP(i,n) cin>>a[i];
	rep(i,maxn) rep(j,maxn) rep(k,2*maxn) dp[i][j][k]=1e20;
	double ans=0;
	FOR(j,l,n) ans+=Dp(n,j,0);
	printf("%.20lf\n",ans);
}