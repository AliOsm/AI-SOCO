#pragma optimize("Ofast")

#include <bits/stdc++.h>

using namespace std;

using ll = long long int;
using ull = unsigned long long int;
using dd = double;
using ldd = long double;
using si = short int;
using pii = pair<int, int>;
using pll = pair<ll, ll>;

#define all(x) (x).begin(), (x).end()
#define ff first
#define ss second

// debug defines
#ifdef HOME
    int jjj;
    #define PO cout << "Pomelo" << endl;
    #define OL cout << "Oliva" << endl;
    #define debug(x) cout << #x << " " << x << endl;
    #define debug_v(x) cout << #x << " "; for (auto ii : x) cout << ii << " "; cout << endl;
    #define debug_vp(x) cout << #x << " "; for (auto ii : x) cout << '[' << ii.ff << " " << ii.ss << ']'; cout << endl;
    #define wait() cin >> jjj;
#else
    #define PO 0
    #define OL 0
    #define debug(x) 0
    #define debug_v(x) 0
    #define debug_vp(x) 0
    #define wait() 0
#endif // HOME
// end of debug defines

vector<vector<int>> gr;
vector<vector<pair<int, int>>> question;
vector<bool> ans;
vector<int> letter;
vector<int> ind;
vector<vector<int>> arr;

void dfs(int v, int h = 1)
{

    int big = v;
    for (int i : gr[v]){
        dfs(i, h + 1);
        if (arr[ind[i]].size() > arr[ind[big]].size())
            big = i;
    }
    debug(v);
    debug(big);
    ind[v] = ind[big];
    debug_v(arr[ind[v]]);
    int s = arr[ind[v]].size();
    for (int i : gr[v])
    {
        if (i == big)
            continue;
        debug(i);
        debug_v(arr[ind[i]]);
        for (int j = 0; j < arr[ind[i]].size(); ++j)
        {
            arr[ind[v]][s - 1 - j] ^= arr[ind[i]][arr[ind[i]].size() - 1 -  j];
        }
        debug_v(arr[ind[v]]);
    }
    debug_v(arr[ind[v]]);
    arr[ind[v]].push_back(letter[v]);
    debug_v(arr[ind[v]]);
    debug_vp(question[v]);
    for (int i = 0; i < question[v].size(); ++i)
    {
        int _h = question[v][i].ff - h;
        debug(i);
        debug(_h);
        if (_h >= arr[ind[v]].size() || _h < 0)
        {
            ans[question[v][i].ss] = 1;
            continue;
        }

        bool g = (__builtin_popcount(arr[ind[v]][s - _h]) < 2);
        ans[question[v][i].ss] = g;
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cout.tie(0);
    cin.tie(0);

    int n;
    int m;
    cin >> n >> m;
    gr.resize(n);
    question.resize(n);
    ans.resize(m);
    letter.resize(n);
    ind.resize(n);
    arr.resize(n);
    for (int i = 0; i < n - 1; ++i)
    {
        int x;
        cin >> x;
        gr[x - 1].push_back(i + 1);
        ind[i + 1] = i + 1;
    }
    string in;
    cin >> in;

    for (int i = 0; i < n; ++i)
        letter[i] = (1 << (in[i] - 'a'));
    int a, b;
    for (int i = 0; i < m; ++i)
    {
        cin >> a >> b;
        --a;
        //--b;
        question[a].push_back({b, i});
    }
    dfs(0);
    for (int i = 0; i < m; ++i)
        cout << (ans[i] ? "Yes" : "No") << '\n';
}

