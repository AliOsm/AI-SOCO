// KALAM

#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
const int MAXN = 1000005;
int n,x,y;
ll F,S;
int place[MAXN];
bool Mark[MAXN];
vector< vector< int > > a;


void dfs(int v,int part){
	if(Mark[v])return;
	Mark[v] = true;
	for(int i = 0;i < a[v].size();i++){
		if(Mark[a[v][i]])continue;
		if(part == 1){
			dfs(a[v][i],2);
			S++;
		}
		else{
			dfs(a[v][i],1);
			F++;
		}
	}
}

int main(){
	cin >> n;
	for(int i = 0;i <= n;i++){
		vector< int > rr;
		a.push_back(rr);
	}
	for(int i = 0;i < n - 1;i++){
		cin >> x >> y;
		a[x].push_back(y);
		a[y].push_back(x);
	}
	F++;
	dfs(1,1);
	cout << F * S - n + 1;
	
	
	
	return 0;
}
