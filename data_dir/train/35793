#include <bits/stdc++.h>
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define F first
#define S second
#define ll long long
#define FILE "series"
#define ld long double
#define endl '\n'
//#define int long long
#define pii pair <int, int>

//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

using namespace std;
using namespace __gnu_pbds;

typedef tree <int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

const int N = 1e6 + 5;
const int rx[4] = {1, -1, 0, 0};
const int ry[4] = {0, 0, 1, -1};

int cnt[N];

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
    //   freopen("input.txt", "r", stdin);
    // freopen("output.txt", "w", stdout);
#endif // LOCAL
    int q;
    cin >> q;
    while (q--) {
        char c;
        ll x;
        cin >> c >> x;
        vector <int> dig;
        while (x) {
            dig.pb((x % 10) % 2);
            x /= 10;
        }
        int mask = 0;
        for (int i = 0; i < dig.size(); i++) {
            if (dig[i]) mask += (1 << i);
        }
        if (c == '+') cnt[mask]++;
        if (c == '-') cnt[mask]--;
        if (c == '?') cout << cnt[mask] << endl;
    }
    return 0;
}
