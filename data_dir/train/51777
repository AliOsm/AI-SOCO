#include <bits/stdc++.h>
#define int long long
using namespace std;
    long long powmod(long long a,long long b,long long mod) {
        if (b==0 || a==1)  {if (mod==1) return 0; else return 1; }
       
        if (b%2==0) { long long k=powmod(a,b/2,mod); return (k*k)%mod; }
        else {long long k=powmod(a,b/2,mod); return ( (k*k) %mod *a)% mod; }
    }
    long long gcd(long long a, long long b) {
        if (a==0) return b;
        if (b==0) return a;
        if (a>b) return gcd(a%b,b); else return gcd(b%a,a);
    }
    int prime(int p) { // 1 - простое
        for (int i=2;i*i<=p;i++) {
            if (p%i==0 && i<p) return i;  
        }
        return 1;
    }
    int inv(int a, int mod) {
        return powmod(a,mod-2,mod); 
    }
    int mod=1000000007;
    int facs[50000];
    int inv_facs[50000];
 int c(int a, int b) {
    b--; 
     if (a==0) return 1; 
     if (a==1) return b; 
     return (((inv_facs[a]*inv_facs[b-a])%mod)*facs[b])%mod;
 }
    void solve (int ppppppppp=1) {
       
       
         /* --------- */
    int a;
    cin>>a;
    int m[a];
    facs[1]=1;
    
    for (int i=2;i<50000;i++) facs[i]=(facs[i-1]*i)%mod;
    for (int i=1;i<50000;i++) inv_facs[i]=inv(facs[i],mod); 
   // cout<<c(2,4)<<" "; 
    for (int i=0;i<a;i++) cin>>m[i];
    map <int,int> mem; 
    for (int i=0;i<a;i++) {
        int x=m[i];
        for (int j=2;j*j<=x;j++) {
            while (x%j==0) {x/=j; mem[j]++; }
        } 
        if (x!=1) mem[x]++;
    }
    int ans=1; 
   // cout<<c(2,4); 
        for (pair<int,int> i:mem) {
            //cout<<i.first<<" "<<i.second<<"\n"; 
        ans*=c(a-1,i.second+a);
        ans%=mod; 
    }
    cout<<ans; 
        /* --------- */
          return;
    }
     
     
     
    signed main() {
       
         ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
       
         
          int tututu;
          tututu=1;
       // cin>>tututu; // если нет запросов, то закоментить
          for (int qwerty=0;qwerty<tututu;qwerty++) solve();
      
       
        return 0;
    }