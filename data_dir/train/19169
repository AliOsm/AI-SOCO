#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=4e5+5;
ll cs[M];
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n;
	cin>>n;
	map<ll,ll> H;
	for(ll i=1;i<=n;i++)
	{
		ll x;
		cin>>x;
		H[x]++;
	}
	std::vector<pair<ll,ll> > vt;
	for(auto u:H)
		vt.pb({u.ss,u.ff});
	vt.pb({M+1,-1});
	sort(all(vt));
	reverse(all(vt));
	for(ll i=1;i<sz(vt);i++)
		cs[i]=cs[i-1]+vt[i].ff;
	ll mx=0,row,col;
	for(ll i=1;i<=n;i++)
	{
		if(i*i>n)
			break;
		ll l=0,r=sz(vt)-1,m,p=-1;
		while(l<r)
		{
			m=(l+r)/2;
			if(m==p)
				m++;
			p=m;
			if(vt[m].ff<i)
				r=m-1;
			else
				l=m;
		}
		l=min(l,sz(vt)-1);
		ll tot=l*i+cs[sz(vt)-1]-cs[l];
		ll j=tot/i;
		if(i*j>mx && j>=i)
		{
			row=i;
			col=j;
			mx=i*j;
		}
	}
	std::vector<ll> AN;
	for(ll i=1;i<sz(vt);i++)
	{
		for(ll j=0;j<min(vt[i].ff,row);j++)
		{
			if(sz(AN)==mx)
				break;
			AN.pb(vt[i].ss);
		}	
	}
	ll ans[row][col];
	ll curr=0;
	for(ll i=0;i<col;i++)
	{
		for(ll j=0;j<row;j++)
		{
			ans[j][(i+j)%col]=AN[curr++];
		}		
	}
	cout<<mx<<"\n";
	cout<<row<<" "<<col<<"\n";
	for(ll i=0;i<row;i++)
	{
		for(ll j=0;j<col;j++)
			cout<<ans[i][j]<<" ";
		cout<<"\n";
	}
	return 0;
}