#include <bits/stdc++.h>
using namespace std;
using ll = long long;

int main() 
{
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    int t; cin >> t;
    while (t--) {
        string s; cin >> s;
        int n = s.size();
        vector<int> d(s.size());
        vector<vector<int>> pos(3);
        for (int i = 0; i < n; i++) {
            d[i] = s[i]-'1';
            pos[d[i]].push_back(i);
            //cout << i << ": " << d[i] << endl;
        }
        if (pos[0].empty() || pos[1].empty() || pos[2].empty()) {
            cout << 0 << '\n';
            continue;
        }
        int ans = n;
        /*
        for (int i = 0; i < 3; i++) {
            cout << i << ": ";
            for (int j: pos[i]) {
                cout << j << ' ';
            }
            cout << '\n';
        }
        */
        vector<int> pt(3,0);
        for (int i = 0; i < n; i++) {
            vector<int> v;
            for (int j = 0; j < 3; j++) if (j != d[i]) {
                v.push_back(j);
            }
            int a = v[0], b = v[1];
            //cout << d[i] << ' ' << a << ' ' << b << endl;
            auto it1 = lower_bound(pos[a].begin(),pos[a].end(),i);
            auto it2 = lower_bound(pos[b].begin(),pos[b].end(),i);
            if (it1 != pos[a].end() && it2 != pos[b].begin()) {
                ans = min(ans,*it1-*prev(it2)+1);
            }
            if (it2 != pos[b].end() && it1 != pos[a].begin()) {
                ans = min(ans,*it2-*prev(it1)+1);
            }
        }
        cout << ans << '\n';
    }
}
