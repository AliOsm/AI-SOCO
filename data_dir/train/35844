#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
 
using namespace std;
using namespace __gnu_pbds;
 
#define debug(s) cout << #s << " = " << s << endl
#define all(v) (v).begin(), (v).end()
#define mem(a,val) memset(a, val, sizeof a)
 
#define maxn 100010
#define INF 1e15
#define ff first
#define ss second
#define endl '\n'
typedef long long ll;
 
//typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

int n;
pair<string, int> arr[5111];

bool cmp(pair<string, int> A, pair<string, int> B) {
  if (A.ff != B.ff) return A.ff < B.ff;
  return A.ss < B.ss;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int tc;
  cin >> tc;
  while (tc--) {
    cin >> n;
    string s;
    cin >> s;
    arr[1] = {s, 1};
    for (int i = 2; i <= n; ++i) {
      string tmp = s.substr(i - 1, n - i + 1);
      string x = s.substr(0, i - 1);
      if ((n - i + 1) & 1) reverse(all(x));
      tmp += x;
      arr[i] = {tmp, i};
    }
    sort(arr + 1, arr + 1 + n, cmp);
    cout << arr[1].ff << endl;
    cout << arr[1].ss << endl;
  }
}



