#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int oo=2e9;
struct cube{
  int a,b,c,i;
  cube(int x,int y,int z,int idx){
    if(x>y)swap(x,y);
    a=x,b=y,c=z,i=idx;
  }
  bool operator <(cube e)const{
    if(a!=e.a)return a<e.a;
    if(b!=e.b)return b<e.b;
    if(c!=e.c)return c<e.c;
    return i<e.i;
  }
};
vector<cube> d;
int main(){
  int n;
  scanf("%d",&n);
  for(int i=0;i<n;i++){
    int a,b,c;
    scanf("%d %d %d",&a,&b,&c);
    d.push_back(cube(a,b,c,i+1)); 
    d.push_back(cube(a,c,b,i+1)); 
    d.push_back(cube(b,c,a,i+1)); 
  }
  sort(d.begin(),d.end());
  int a=-1,b=-1;
  uli best2=-1;
  for(cube x:d){
    int idx=upper_bound(d.begin(),d.end(),cube(x.a,x.b,oo,oo))-d.begin();
    idx--;
    if(d[idx].i!=x.i){
      uli bet=min(min(x.a,x.b),x.c+d[idx].c);
      if(a==-1 || bet>best2){
        best2=bet;
        a=x.i;
        b=d[idx].i;
      }
    }
  }
  int c=-1;
  uli best1=-1;
  for(cube x:d){
    uli bet=min(min(x.a,x.b),x.c);
    if(c==-1 || bet>best1){
      best1=bet;
      c=x.i;
    }
  }
  if(best1>best2){
    puts("1");
    printf("%d\n",c);
  }
  else{
    puts("2");
    printf("%d %d\n",a,b);
  }
  return 0;
}
