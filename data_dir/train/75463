#include <bits/stdc++.h>
using namespace std;

#define fr(i,n) _back
#define pb	push_back
#define eb	emplace_back
#define mk	make_pair
#define fi	first
#define se	second
#define endl	'\n'

typedef long long ll;
typedef pair<int,int> ii;
typedef vector<ii> vii;
const int INF = 0x3f3f3f3f;
const double PI = acos(-1.0);

const int T = 1e6 + 5;
vector<string> ans[T];
vector<string> s;
int best = 0;

vector<string> split(string v) {
    string x;
    vector<string> z;

    for(int i = 0; i < v.size(); i++) {
        if(v[i] == ',') z.pb(x), x = "";
        else x += v[i];
    }

    z.pb(x);
    return z;
}

int solve(int at, int nv, int left) {
    if(at >= s.size()) return INF;
    if(left == 0) return at;

    //eh string
    //fim desse nivel
    best = max(best,nv);
    ans[nv].pb(s[at]);

    if(s[at+1] == "0") {
        //raiz
        if(nv == 1) return at+2;
        //n raiz
        else return solve(at+2, nv, left-1);
    } else {
        //desce o nivel
        int last = solve(at+2,nv+1,stoi(s[at+1]));
        //continua explorando nivel
        return solve(last, nv, left-1);
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    string ss; cin >> ss;
    s = split(ss);

    int at = 0;
    while(at < s.size()) at = solve(at,1,1);

    cout << best << endl;
    for(int i = 1; i <= best; i++) {
        for(auto z : ans[i]) cout << z << " ";
        cout << endl;
    }

    return 0;
}

