#include <bits/stdc++.h>
using namespace std;

const int md = 998244353;
inline void add(int &a, int b) {
	a += b;
	if (a >= md) a -= md;
}
inline void sub(int &a, int b) {
	a -= b;
	if (a < 0) a += md;
}
inline int mul(int a, int b) {
	return (int) ((long long) a * b % md);
}
inline int power(int a, long long b) {
	int res = 1;
	while (b > 0) {
		if (b & 1) {
			res = mul(res, a);
		}
		a = mul(a, a);
		b >>= 1;
	}
	return res;
}
inline int inver(int a) {
	a %= md;
	if (a < 0) a += md;
	int b = md, u = 0, v = 1;
	while (a) {
		int t = b / a;
		b -= t * a; swap(a, b);
		u -= t * v; swap(u, v);
	}
	assert(b == 1);
	if (u < 0) u += md;
	return u;
}
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	int n;
	cin >> n;
	vector<int> fact(n + 1);
	fact[0] = 1;
	for (int i = 1; i <= n; i++) {
		fact[i] = mul(fact[i - 1], i);
	}
	vector< pair<int, int> > s(n);
	for (auto &[a, b] : s) {
		cin >> a >> b;
		a--; b--;
	}
	vector<int> cnta(n), cntb(n);
	for (auto &[a, b] : s) {
		cnta[a]++;
		cntb[b]++;
	}
	int ans = fact[n], resa = 1, resb = 1;
	for (int i = 0; i < n; i++) {
		resa = mul(resa, fact[cnta[i]]);
		resb = mul(resb, fact[cntb[i]]);
	}
	if (resa == ans || resb == ans) {
		cout << "0\n";
		return 0;
	}
	sub(ans, resa);
	sub(ans, resb);
	sort(s.begin(), s.end());
	vector<int> b(n);
	for (int i = 0; i < n; i++) {
		b[i] = s[i].second;
	}
	if (is_sorted(b.begin(), b.end())) {
		map< pair<int, int>, int> ump;
		for (auto &p : s) {
			ump[p]++;
		}
		int resab = 1;
		for (auto &p : ump) {
			resab = mul(resab, fact[p.second]);
		}
		add(ans, resab);
	}
	cout << ans << '\n';
	return 0;
}
