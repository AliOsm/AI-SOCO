#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <sstream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define pii pair < int, int >
#define pll pair < long long, long long>
#define ull unsigned long long
#define y1 stupid_cmath
#define left stupid_left
#define right stupid_right
#define vi vector <int>
#define sz(a) (int)a.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x) * (x))

const int inf = (int)1e9;
const int mod = inf + 7;
const double eps = 1e-9;
const double pi = acos(-1.0);

int n, m, a[100100], pos[100100], f[100100], b[100100], cnt[100100];

int main(){
    
    scanf("%d%d", &n, &m);
    for (int i = 1; i <= n; i++) {
        scanf("%d", f + i);
        cnt[f[i]]++;
        pos[f[i]] = i;
    }
    for (int i = 1; i <= m; i++) {
        scanf("%d", b + i);
    }
    
    for (int i = 1; i <= m; i++) {
        if (cnt[b[i]] == 0) {
            cout << "Impossible" << endl;
            return 0;
        }
        a[i] = pos[b[i]];
    }
    for (int i = 1; i <= m; i++) {
        if (cnt[b[i]] > 1) {
            cout << "Ambiguity" << endl;
            return 0;
        }
        a[i] = pos[b[i]];
    }
    
    printf("Possible\n");
    for (int i = 1; i <= m; i++) {
        if (i > 1) printf(" ");
        printf("%d", a[i]);
    }
    printf("\n");
        
    return 0;
}
