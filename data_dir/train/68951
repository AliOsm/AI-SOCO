#include <bits/stdc++.h>

using namespace std;

#define sz(a) int(a.size())

vector <int> P, R;
int find (int x) {return x == P[x] ? x : P[x] = find(P[x]);}

bool unionS(int x, int y) {
	x = find(x), y = find(y);
	if (x == y) return 0;
	if (R[y] > R[x]) swap(x, y);
	R[x] += R[y];
	P[y] = x;
	return 1;
}

int main() {
	int n, m;
	scanf("%d%d", &n, &m);
	P.resize(n), R.resize(n);
	for (int i = 0; i < n; i++) P[i] = i, R[i] = 1;

	for (int i = 0; i < m; i++) {
		int k;
		scanf("%d", &k);
		if (!k) continue;
		int r, t;
		scanf("%d", &r);
		r--;
		for (int j = 1; j < k; j++) {
			scanf("%d", &t);
			unionS(r, --t);
		}
	}

	for (int i = 0; i < n; i++) {
		printf("%d ", R[find(i)]);
	}
	cout << endl;
}
