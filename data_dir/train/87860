//In The Name of Allah
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair < ll , ll > pll;

const int N = 1e3 + 10;
const ll inf = 1e18 + 10;

ll n, m, x, y, t[N], c[N], dis[N];
vector < pll > adj[N], g[N];

void dij(ll v){
    fill(dis, dis + N, inf);
    priority_queue < pll , vector < pll > , greater < pll > > pq;
    dis[v] = 0;
    pq.push({0, v});
    while (!pq.empty()){
        ll d = pq.top().first, u = pq.top().second;
        pq.pop();
        if (d != dis[u])
            continue;
        for (auto e : adj[u]){
            ll p = e.first, w = e.second;
            if (d + w < dis[p]){
                dis[p] = d + w;
                pq.push({d + w, p});
            }
        }
    }
    for (int i = 1; i <= n; i ++)
        if (dis[i] <= t[v])
            g[v].push_back({i, c[v]});
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    cin >> n >> m >> x >> y;
    for (int i = 0; i < m; i ++){
        ll u, v, w;
        cin >> u >> v >> w;
        adj[u].push_back({v, w});
        adj[v].push_back({u, w});
    }
    for (int i = 1; i <= n; i ++)
        cin >> t[i] >> c[i];
    for (int i = 1; i <= n; i ++)
        dij(i);
    fill(dis, dis + N, inf);
    priority_queue < pll , vector < pll > , greater < pll > > pq;
    dis[x] = 0;
    pq.push({0, x});
    while (!pq.empty()){
        ll d = pq.top().first, u = pq.top().second;
        pq.pop();
        if (d != dis[u])
            continue;
        for (auto e : g[u]){
            ll p = e.first, w = e.second;
            if (d + w < dis[p]){
                dis[p] = d + w;
                pq.push({d + w, p});
            }
        }
    }
    cout << (dis[y] == inf ? -1 : dis[y]);
    return 0;
}
