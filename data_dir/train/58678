//Pham Huu Canh
//A. Ciel and Dancing
//Algorithm:
//Complexity:
//AC:

#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define max64 9223372036854775807LL
#define max32 2147483647
#define maxty 1001001001
#define max16 32767
#define EPS 1e-8
#define ll long long
#define ull unsigned long long
#define pb push_back
#define MP make_pair
#define PQ priority_queue
#define LB lower_bound
#define UB upper_bound
#define timmax(x, y)    ((x) > (y) ? (x) : (y))
#define timmin(x, y)    ((x) < (y) ? (x) : (y))
#define fori(i, n)      for((i) = 0; (i) < (n); (i)++)
#define ford(i, n)      for((i) = (n-1); (i) >= 0; (i)--)
#define repi(i, a, b)   for((i) = (a); (i) <= (b); (i)++)
#define repd(i, a, b)   for((i) = (a); (i) >= (b); (i)--)
#define _all(tmpv)      tmpv.begin(), tmpv.end()

#define fi "a.inp"
#define fo "a.out"

using namespace std;

bool db[105], dg[105];
pair<int, int> p[10005];

void input()
{
    int n, nb, ng, i, j;
    
    scanf("%d %d", &nb, &ng);
    n = 0;
    repi(i, 1, nb)
        repi(j, 1, ng)
            if (!db[i] || !dg[j])
                p[n++] = MP(i, j), db[i] = true, dg[j] = true;
    printf("%d\n", n);
    fori(i, n)  printf("%d %d\n", p[i].first, p[i].second);
}

int main()
{
    //reopen(fi,"r",stdin);
    //freopen(fo,"w",stdout);

    input();

    return 0;
}
