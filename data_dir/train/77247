#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <functional>
#include <algorithm>
#include <cassert>
#include <cstring>
#include <queue>
#include <cstdio>
#include <cmath>
#include <sstream>
#include <bitset>
 
using namespace std;
 
typedef long long Long;
typedef vector<int> VI;
typedef vector<VI> VVI;

#define MAX 10000
#define MOD 1000000007
int WAYS[MAX+2];
int POS[MAX+2];

int main(int argc, char *argv[]) {
	
	int N, Q;
	cin >> N >> Q;
	vector<vector<int>> ADD(N);
	for (int i = 0; i < Q; ++i) {
		int u, v, x;
		cin >> u >> v >> x;
//		u = rand() % N + 1;
//		v = rand() % N + 1;
//		x = rand() % 3 + 1;
//		if (u > v) swap(u, v);
		u--;v--;
		ADD[u].push_back(x);
		if (v + 1 < N) {
			ADD[v+1].push_back(-x);
		}
	}
	WAYS[0] = 1;
	for (int i = 0; i < N; ++i) {
		sort(ADD[i].begin(), ADD[i].end());
		for (int x : ADD[i]) {
			if (x < 0) {
				x = -x;
				for (int j = 0; j <= N-x; ++j) {
					WAYS[j+x] -= WAYS[j];
					if (WAYS[j+x] < 0) {
						WAYS[j+x] += MOD;
					}
				}
			} else {
				for (int j = N-x; j >= 0; --j) {
					WAYS[j+x] += WAYS[j];
					if (WAYS[j+x] >= MOD) {
						WAYS[j+x] -= MOD;
					}
				}
			}
		}
		for (int i = 1; i <= N; ++i) {
			if (WAYS[i]) {
				POS[i] = 1;
			}
		}
	}
	int c = 0;
	for (int i = 1; i <= N; ++i) {
		c += POS[i];
	}
	cout << c << endl;
	for (int i = 1; i <= N; ++i) {
		if (POS[i]) {
			cout << i << " ";
		}
	}
	
}
 
/*
 
 
7 4
abacaba
1 1 1
1 4 2
2 1 3
2 4 3
 
 */
