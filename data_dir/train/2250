#include <bits/stdc++.h>

#define fore(i, l, r) for(int i = int(l); i < int(r); i++)
#define forn(i, n) fore(i, 0, n)

#define all(a) (a).begin(), (a).end()
#define sqr(a) ((a) * (a))
#define sz(a) int(a.size())
#define mp make_pair
#define pb push_back

#define x first
#define y second

using namespace std;

template<class A, class B> ostream& operator << (ostream &out, const pair<A, B> &p) {
	return out << "(" << p.first << ", " << p.second << ")";
}

template<class A> ostream& operator << (ostream &out, const vector<A> &v) {
	out << "[";
	forn(i, sz(v)) {
		if(i > 0)
			out << ", ";
		out << v[i];
	}
	return out << "]";
}

typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;
typedef pair<li, li> ptl;

inline int gett() {
	return clock() * 1000 / CLOCKS_PER_SEC;
}

const ld EPS = 1e-9;
const int INF = int(1e9);
const li INF64 = li(INF) * INF;
const ld PI = 3.1415926535897932384626433832795;

const int N = 55;

int n, k;
string s[N];

inline bool read() {
	if(!(cin >> n >> k))
		return false;
	forn(i, n - k + 1)
		cin >> s[i];
	return true;
}

string nm[N];

int ans[N];

inline void solve() {
	forn(i, N) {
		nm[i] = "Aa";
		nm[i][0] += i / 26;
		nm[i][1] += i % 26;
	}
	
	forn(i, k - 1)
		ans[i] = i;
		
	fore(i, k - 1, n) {
		if(s[i - k + 1] == "NO") {
			ans[i] = ans[i - k + 1];
		} else {
			vector<int> used(N, 0);
			fore(j, i - k + 1, i)
				used[ans[j]] = 1;
			forn(j, N)
				if(!used[j]) {
					ans[i] = j;
					break;
				}
		}
	}
	
	forn(i, n)
		cout << nm[ans[i]] << " ";
	puts("");
}

int main(){
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int t = gett();
#endif

	srand(time(NULL));
	cout << fixed << setprecision(10);

	while(read()) {
		solve();	
		
#ifdef _DEBUG
		cerr << "TIME = " << gett() - t << endl;
		t = gett();
#endif
	}
	return 0;
}