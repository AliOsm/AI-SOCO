///****In the name of Allah, most Gracious, most Compassionate****//

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair <int, int> pii;

#define ALL(a) a.begin(), a.end()
#define FastIO ios::sync_with_stdio(false); cin.tie(nullptr);cout.tie(nullptr)
#define IN freopen("input.txt","r+",stdin)
#define OUT freopen("output.txt","w+",stdout)

#define DBG(a) cout<< #a <<" --> "<<(a)<<endl
#define NL cout<<"\n"

template < class T1,class T2>
ostream &operator <<(ostream &os,const pair < T1,T2 > &p)
{
    os<<"{"<<p.first<<","<<p.second<<"}";
    return os;
}

const int N=1e5+5;

int c[N];
int variable[N];
int start[N];
int stop[N];
int sz[N];

vector<int > g[N];
int cnt[N];
ll ans[N];
ll sumcnt[N];
int maxcnt = 0;



void add(int color)
{
    sumcnt[cnt[color]]-=color;
    cnt[color]++;
    sumcnt[cnt[color]]+=color;
    maxcnt = max(maxcnt, cnt[color]);
}

void remove(int color)
{
    sumcnt[cnt[color]]-=color;
    cnt[color]--;
    sumcnt[cnt[color]]+=color;
    if(sumcnt[maxcnt]==0)
        maxcnt--;
}


int dfs1(int u,int p=-1)
{
    static int now = 1;
    start[u]= now;
    variable[now++] =u;

    sz[u]=1;
    for(int v:g[u])
        if(v!=p)
        {
            sz[u]+=dfs1(v,u);
        }
    stop[u]= now;
    return sz[u];
}


int dfs2(int u,int p=-1,int keep = 0)
{
    int mxsize = -1, bigchild = -1;
    for(int v: g[u])
        if(v!=p and sz[v] > mxsize)
            mxsize = sz[v], bigchild = v;
    for(int v:g[u])
        if(v!=p and v!=bigchild)
            dfs2(v,u,0);
    if(bigchild!=-1)
        dfs2(bigchild,u,1);
    for(int v:g[u])
        if(v!=p and v!=bigchild)
            for(int t = start[v] ; t< stop[v] ; t++)
                add(c[variable[t]]);
    add(c[u]);

    ans[u]= sumcnt[maxcnt];

    if(keep==0)
        for(int t = start[u] ; t< stop[u] ; t++)
            remove(c[variable[t]]);
}


int32_t main()
{
    int n;
    cin>>n;
    for(int i=1; i<=n; i++)
    {
        cin>>c[i];
    }
    for(int i=1; i<n; i++)
    {
        int u,v;
        cin>>u>>v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
    dfs1(1);
    dfs2(1);
    for(int i=1; i<=n; i++)
        cout<<ans[i]<<" ";

}
