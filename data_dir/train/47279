#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <string>
#include <cstring>
// DON'T DIVIDE
// Try different approaches
using namespace std;

int n;
const int MAXN = 300005;
long long countpos[MAXN], countneg[MAXN];

int main()
{
	ios::sync_with_stdio(0);
	cin >> n;

	for(int i = 0; i < n; i++)
	{
		string s;
		cin >> s;
		long long net = 0, m = 0;
		for(int j = 0; j < s.size(); j++)
		{
			if(s[j] == '(')
				net++;
			else 
				net--;
			m = min(net, m);
		}
		if(m == 0)
		{
			if(net == 0)
			{
				countpos[0]++;
				countneg[0]++;
			}
			else
				countpos[net]++;
		}
		else if(m == net)
			countneg[-net]++;
	}	

	long long ans = 0;
	for(int i = 0; i < MAXN; i++)
			ans += countpos[i] * countneg[i];
	cout << ans << "\n";
	return 0;
}