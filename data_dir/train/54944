#include<bits/stdc++.h>
using namespace std;

#define pb      push_back
#define all(v)  v.begin(),v.end()
#define endl    "\n"
#define FAST    ios_base::sync_with_stdio(0);cin.tie(0);

typedef long long     ll;
typedef long double   ld;
typedef pair<int,int> ii;

const int    inf = 2e9;
const ll     INF = 4e17;
const int    mod = 1e9+7;
const double eps = 1e-9;

int maxn, lim[20], cnt[10];
string soln;

bool valid(int pos) {
	if(pos >= maxn) return true;

	ll c = 0, x = 0;
	for(int i = pos; i < maxn; i++) {
		c = (c*10ll + lim[i]);
	}
	
	if(pos == 0) {
		int zap = cnt[1];
		while(zap > 0) x = (x*10ll + 1), zap--;
		zap = cnt[0];
		while(zap > 0) x = (x*10ll), zap--;
		for(int i = 2; i < 10; i++) {
			zap = cnt[i];
			while(zap > 0) x = (x*10ll + i), zap--;
		}
	}
	else {
		for(int i = 0; i < 10; i++) {
			int zap = cnt[i];
			while(zap > 0) x = (x*10ll + i), zap--;
		}
	}
	return c >= x;
}

void get(int pos, int tight) {
	if(pos >= maxn) return;
	
	if(tight) {
		for(int i = lim[pos]; i >= 0; i--) {
			if(cnt[i] > 0) {
				cnt[i]--;
				if(i != lim[pos] || valid(pos + 1)) {
					soln = soln + (char)(i+'0');
					get(pos + 1, (i == lim[pos]));
					return;
				}
				cnt[i]++;
			}
		}
	}
	else {
		for(int i = 9; i >= 0; i--) {
			if(cnt[i] > 0) {
				cnt[i]--;
				soln = soln + (char)(i+'0');
				get(pos + 1, 0);
				return;
			}
		}
	}
	return;
}

int main() {
	FAST
	string a, b;
	cin >> a >> b;
	int n = a.size();
	maxn = n;
	if(n < b.size()) {
		sort(all(a), greater<char>());
		cout << a;
		return 0;
	}

	while(b.size() < n) b = "0" + b;

	for(int i = 0; i < n; i++) {
		lim[i] = b[i] - '0';
		cnt[a[i] - '0']++;
	}
	get(0,1);
	stringstream ss; ss << soln;
	ll res; ss >> res;
	cout << res;
	return 0;
}

