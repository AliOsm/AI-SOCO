#include <bits/stdc++.h>
#include <string> 
using namespace std;
  
template<class T> void ckmin(T &a, T b) { a = min(a, b); }
template<class T> void ckmax(T &a, T b) { a = max(a, b); }
  
#define pb push_back
#define mp make_pair
#define cotu cout
#define itn int
#define Red ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define F first
#define S second
#define sz(x) (int)x.size()
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define repst(i, n) for(auto it = n.begin(); it != n.end(); ++it)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
  
#define ordered_set tree<int , null_type,less<int >, rb_tree_tag,tree_order_statistics_node_update> 
  
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
typedef long long ll;

void solve()
{
	ll n;
	cin >> n;
	if(n % 2 == 0) {
		cout << n / 2;
	}
	else{
		for(ll i = 3; i <= sqrt(n); ++i){
			if(n % i == 0){
				cout << 1 + (n - i) / 2;
				return;
			}
		}
		cout << 1 << endl;
	}
	return;
}	
 
int main()
{
    Red;
    // freopen("input.txt", "r", stdin);
    // freopen("output.txt", "w", stdout);
 
    solve();
    return 0;
}