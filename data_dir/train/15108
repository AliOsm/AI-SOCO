#include <iostream>
#include <vector>
#include <cmath>
#include <vector>
#include <queue>
#include <stack>
#include <algorithm>
#include <cstring>
#include <cassert>
#include <ctime>
#include <set>
#include <functional>

using namespace std;


using namespace std;

typedef long long Long;



int main() {
	
	int N, A, B;
	cin >> N >> A >> B;
	vector<pair<int,int>> V(N);
	for (int i = 0; i < N; ++i) {
		V[i].second = i;
		cin >> V[i].first;
	}
	sort(V.begin(), V.end());
	for (int k = 0; k < N; ++k) {
		// serverk used by A
		{
			int an = (A + V[k].first - 1) / V[k].first; 
			if (k+an < V.size()) {
				int bn = (B + V[k+an].first - 1) / V[an+k].first;
				if (an + bn + k <= V.size()) {
					cout << "Yes" << endl;
					cout << an << " " << bn << endl;
					for (int i = k; i < an+k; ++i) {
						cout << V[i].second+1 << " ";
					}
					cout << endl;
					for (int i = an + k; i < an+bn+k; ++i) {
						cout << V[i].second+1 << " ";
					}
					cout << endl;
					return 0;
				}
			}
		}
		// serverk used by B
		{
			int an = (B + V[k].first - 1) / V[k].first; 
			if (k+an < V.size()) {
				int bn = (A + V[k+an].first - 1) / V[an+k].first;
				if (an + bn + k <= V.size()) {
					cout << "Yes" << endl;
					cout << bn << " " << an << endl;
					for (int i = an + k; i < an+bn+k; ++i) {
						cout << V[i].second+1 << " ";
					}
					cout << endl;
					for (int i = k; i < an+k; ++i) {
						cout << V[i].second+1 << " ";
					}
					cout << endl;
					return 0;
				}
			}
		}
	}
	cout << "No" << endl;
	
	
}
/*
5 6 1 1 3
2
5
3
1 1 5 6
1 3 5 4
3 3 5 3

5 6 1 0 3
2
3
1 1 5 6
1 3 5 4
3 3 5 3

 */
