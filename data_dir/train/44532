#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int N = 85;
typedef double db;
int n, m, l[N], r[N], w[N * 2];
db f[N][N], ans[N];

void work(int p, int L, int R) {
  memset(f, 0, sizeof(f));
  f[0][0] = db(R - L) / (r[p] - l[p]);
  int t = 0, bg = 0;
  for (int i = 1; i <= n; i++)
    if (i != p) {
      if (r[i] <= L) {
        bg++;
        continue;
      }
      if (l[i] >= R) continue;
      t++;
      db x = db(L - l[i]) / (r[i] - l[i]), y = db(R - L) / (r[i] - l[i]);
      for (int j = t; j >= 0; j--)
        for (int k = t - j; k >= 0; k--) {
          f[j][k] *= 1 - x - y;
          if (j) f[j][k] += f[j - 1][k] * x;
          if (k) f[j][k] += f[j][k - 1] * y;
        }
    }
  for (int i = 0; i + bg <= n; i++)
    for (int j = 0; i + bg + j <= n; j++) {
      db tmp = f[i][j] / (j + 1);
      ans[i + bg + 1] += tmp;
      ans[i + bg + j + 2] -= tmp;
    }
}

int main() {
  scanf("%d", &n);
  for (int i = 1; i <= n; i++) {
    scanf("%d%d", &l[i], &r[i]);
    w[++m] = l[i];
    w[++m] = r[i];
  }
  sort(w + 1, w + m + 1);
  m = unique(w + 1, w + m + 1) - (w + 1);
  for (int i = 1; i <= n; i++) {
    memset(ans, 0, sizeof(ans));
    for (int j = 1; j <= m; j++)
      if (l[i] <= w[j - 1] && w[j] <= r[i]) work(i, w[j - 1], w[j]);
    for (int j = 1; j <= n; j++) printf("%.12lf ", ans[j] += ans[j - 1]);
    puts("");
  }
}
