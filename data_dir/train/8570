#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll int
#define ld long double
#define pp pair<ll,ll>
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define present(c,x) ((c).find(x) != (c).end())
#define mp make_pair
#define hell 1000000007
#define F first
#define S second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree<pp , null_type , less<pp> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t=1;
ll dp[5005][5005] ;
void solve()
{
    memset(dp,0,sizeof(dp));
    string s ;
    cin >> s ;
    ll n = sz(s) ;
    rep( i , 0 , n )
        dp[i][i]=1;
    for( ll i = 0 ; i + 1 < n ; i++ ){
        if(s[i]==s[i+1])
            dp[i][i+1]=2;
    }
    for( ll l = 2 ; l < n ; l++ )
    {
        for( ll i = 0 ; i + l < n ; i++ )
        {
            ll l1 = i , r = i+l , m ;
            //cout << "l1 = " << l1 << " m = " << l1+(l/2)-1 << "\n";
            if( s[l1]!=s[r] || dp[l1+1][r-1] == 0 )
                dp[l1][r]=0;
            else
            {
                dp[l1][r]=1+dp[l1][l1+((l+1)/2)-1];
                //cout << "l1 = "<<l1<<" m = " << l1+((l+1)/2)-1 << "\n";
            }
        }
    }
    //cout << dp[0][0+1]<<"\n";
    //rep( i , 0 , n ){
    //    rep( j , 0 , n )
    //        cout << dp[i][j] << " ";cout<<"\n";
    //}
    map<ll,ll> cnt ;
    vector<ll> ans ;
    rep( i , 0 , n )rep( j , 0 , n )cnt[dp[i][j]]++;
    for( ll i = n ; i >= 1 ; i-- )
    {
        ans.pb(cnt[i]+cnt[i+1]);
        cnt[i]+=cnt[i+1];
    }
    reverse(all(ans));
    for(auto i : ans )
        cout << i << " " ;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
