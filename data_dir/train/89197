#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/rope>

using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;

typedef long long ll;
typedef tree<
int,
null_type,
less < int >,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;

const int maxn = (int)2e5 + 1;
const int mod = (int) 1e9 + 7;
const double pi = acos(-1);
const ll inf = (ll)1e16;

int n;
int a[maxn], ans;
vector < int > all;
int main(){
    cin >> n;
    for(int i = 1; i <= n; i++){
        cin >> a[i];
        all.push_back(a[i]);
    }
    sort(all.begin(), all.end());
    for(int i = 0; i < all.size(); i++){
        int r = upper_bound(all.begin(), all.end(), all[i] + 5) - all.begin();
        ans = max(ans, r - i);
    }
    cout << ans;
}
