//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >

const int maxn=(int)(105);
const ll mod=(ll)(1e9+7);
int a[maxn];
vector<int> pos[maxn];
char res[maxn];
int dp[maxn][maxn][maxn];

void assign(int idx,char ch)
{
    for(int x:pos[idx])
    {
        res[x]=ch;
    }
}

void assign2(int idx,char c1,char c2)
{
    int now=pos[idx][0];

    res[now]=c1;

    for(int i=1;i<pos[idx].size();i++)
    {
        res[pos[idx][i]]=c2;
    }
}

int solve(int idx,int left,int right,int n)
{
    if(idx>=n)
    {
        return (left==right)?1:0;
    }

    if(dp[idx][left][right]!=-1)
    {
        return dp[idx][left][right];
    }

    else
    {
        int ret=0;

        if(pos[idx].size()==0)
        {
            ret=solve(idx+1,left,right,n);
        }

        else if(pos[idx].size()==1)
        {
            if(solve(idx+1,left+1,right,n)==1)
            {
                assign(idx,'A');

                ret=1;
            }

            else if(solve(idx+1,left,right+1,n)==1)
            {
                assign(idx,'B');

                ret=1;
            }
        }

        else if(pos[idx].size()==2)
        {
            if(solve(idx+1,left+1,right+1,n)==1)
            {
                assign2(idx,'A','B');

                ret=1;
            }

            else if(solve(idx+1,left,right,n)==1)
            {
                assign(idx,'A');

                ret=1;
            }
        }

        else
        {
            if(solve(idx+1,left+1,right,n)==1)
            {
                assign2(idx,'A','B');

                ret=1;
            }

            else if(solve(idx+1,left,right+1,n)==1)
            {
                assign2(idx,'B','A');

                ret=1;
            }

            else if(solve(idx+1,left,right,n)==1)
            {
                assign(idx,'A');

                ret=1;
            }
        }

        dp[idx][left][right]=ret;

        return ret;
    }
}

int main()
{
    ios_base::sync_with_stdio(0);

    int n;cin>>n;

    for(int i=0;i<n;i++)
    {
        cin>>a[i];

        pos[a[i]].pb(i);
    }

    for(int i=0;i<maxn;i++)
    {
        for(int j=0;j<maxn;j++)
        {
            for(int k=0;k<maxn;k++)
            {
                dp[i][j][k]=-1;
            }
        }
    }

    if(solve(1,0,0,maxn)==1)
    {
        cout<<"YES"<<endl;

        for(int i=0;i<n;i++)
        {
            cout<<(res[i]);
        }

        cout<<endl;
    }

    else
    {
        cout<<"NO"<<endl;
    }


    return 0;
}
