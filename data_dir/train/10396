#include "bits/stdc++.h"
using namespace std;
const int N = 5005;
const int mod = 998244353;

long long f[N] , invf[N];

long long add(long long a , long long b) {
	a += b;
	if(a >= mod) {
		a -= mod;
	}
	return a;
}

long long mul(long long a , long long b) {
	return (a % mod * b % mod) % mod;
}

long long ncr(int n , int r) {
	return mul(f[n] , mul(invf[r] , invf[n - r]));
}

long long power(long long a, long long b) {
	long long rekt = 1;
	while(b) {
		if(b & 1)
			rekt = mul(rekt , a);
		a = mul(a , a);
		b /= 2;
	}
	return rekt;
}


long long invmd(long long x) {
	return power(x , mod - 2LL);
}


long long solve(int a , int b) {
	int to = min(a , b);
	long long ret = 0;
	for(int i = 0; i <= to; ++i) {
		long long cur = mul(f[i] , mul(ncr(a , i) , ncr(b , i) ));
		ret = add(ret , cur);
	}
	return ret;
}


int main() {
	f[0] = f[1] = 1;
	invf[0] = invf[1] = 1;
	for(int i = 2; i < N; ++i) {
		f[i] = mul(f[i - 1] , 1LL * i);
		invf[i] = invmd(f[i]);
	}
	int a , b , c;
	scanf("%d %d %d", &a, &b, &c);
	long long ans = mul(solve(a , c) , mul(solve(a , b) , solve(b , c)));
	printf("%lld\n" , ans);
	return 0;
}