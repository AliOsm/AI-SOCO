#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

typedef vector<int> vi;

vi m, c;
vector<vi> v;

int main() {
    int n, k, vid = 0, ans = 1;
    
    ios::sync_with_stdio(0);
    cin.tie(0);
    
    cin >> n >> k;
    m.resize(n);
    for (int i = 0; i < n; i++)
        cin >> m[i];
    c.resize(k);
    for (int i = 0; i < k; i++)
        cin >> c[i];
    
    sort(m.begin(), m.end(), greater<int>());
    int pval = -1;
    vi first_test;
    v.push_back(first_test);
    for (int i = 0; i < n; i++) {
        int val = m[i];
        if (val != pval)
            pval = val;
        if (v[vid].size() < c[val-1]) {
            v[vid].push_back(val);
        }
        else if (vid+1 < ans && v[vid+1].size() < c[val-1]) {
            vid++;
            v[vid].push_back(val);
        }
        else if (v[0].size() < c[val-1]) {
            vid = 0;
            v[0].push_back(val);
        }
        else {
            vi new_test;
            v.push_back(new_test);
            vid = ans++;
            v[vid].push_back(val);
        }
    }
    
    cout << ans << endl;
    for (int i = 0; i < ans; i++) {
        cout << v[i].size();
        for (int j = 0; j < v[i].size(); j++)
            cout << " " << v[i][j];
        cout << endl;
    }
    
    return 0;
}
