/// I won’t run away anymore…
/// I won’t go back on my word…
/// That is my ninja way!

#include<bits/stdc++.h>
using namespace std ;
const int N = 5e5+5 ;
int n ,k ,d ,arr[N] ,frm[N] ;
bool seg[1<<20] ,ok[N] ;
void update(int i,int v,int ni=0,int ns=1,int ne=n){
    if(ns>i || ne<i || ns>ne) return ;
    if(ns==ne){
        if(ns==i) seg[ni] += v;
        return ;
    }
    int l = ni*2+1 ,r = l+1 ,mid = (ns+ne)/2 ;
    update(i,v,l,ns,mid);
    update(i,v,r,mid+1,ne);
    seg[ni] = seg[l] | seg[r] ;
}
bool query(int qs,int qe,int ni=0,int ns=1,int ne=n){
    if(ne<qs || ns>qe || ns>ne) return 0;
    if(ns>=qs && ne<=qe) return seg[ni] ;
    int l = ni*2+1 ,r = l+1 ,mid = (ns+ne)/2 ;
    return query(qs,qe,l,ns,mid) | query(qs,qe,r,mid+1,ne) ;
}
int main(){
    scanf("%d%d%d",&n,&k,&d);
    for(int i=1;i<=n;++i) scanf("%d",arr+i);
    if(k>n) return cout << "NO",0;
    if(n==1)return cout << "YES" ,0;
    sort(arr+1,arr+n+1);
    for(int i=1;i<=n;++i){
        int st=1 ,en=i ;
        while(st<en){
            int mid = (st+en)/2 ;
            if(arr[i]-arr[mid]<=d) en = mid ;
            else st = mid+1 ;
        }
        frm[i] = st ;
    }
    update(1,1);
    ok[1] = 1 ;
    for(int i=k;i<=n;++i){
        if(i-k+1 < frm[i]) continue ;
        ok[i+1] = query(frm[i] ,i-k+1) ;
        update(i+1,ok[i+1]) ;
    }
    puts(ok[n+1]?"YES":"NO");
    return 0;
}
