/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<double, double> pdd;
typedef pair<ld, ld> pld;
typedef pair<string, string> pss;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define Mp                          make_pair
#define tab                         '\t'
#define sep                         ' '
#define endl                        '\n'
#define debug(x)                    cerr << #x << " = " << x << endl
#define SZ(x)                       ll(x.size())
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define file_io                     freopen("in.txt" , "r+" , stdin) ; freopen("out.txt" , "w+" , stdout);
#define set_random                  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());

inline ll input() {
    ll n;
    cin >> n;
    return n;
}

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

ll Sqrt(ll x, ll y) {
    ll t = pow(x, 1. / y);
    for (ll i = max(0LL, t - 10); i <= t + 10; i++) {
        if (poww(i, y, ll(8e18)) == x) return i;
    }
    return -1;
}

set_random;

const ll MAXN = 2e5 + 10;
const ll INF = 8e18;
const ll MOD1 = 998244353;
const ll MOD2 = 1e9 + 7;
const ll MOD3 = 1e9 + 9;

ll n , x , ans = 1;
string s;
set<ll> A , B , C;

ll first()
{
    return *B.begin();
}

ll last()
{
    set<ll>::iterator it = A.end();
    it--;
    return *it;
}

int main() {
    fast_io;

    cin >> n;

    for(ll i = 0 ; i < n ; i++)
    {
        cin >> s >> x;
        if(s == "ADD")
        {
            if(A.size() != 0 && x <= last())    A.insert(x);
            else if(B.size() != 0 && first() <= x)   B.insert(x);
            else                                C.insert(x);
        }
        if(s == "ACCEPT")
        {
            if(A.find(x) != A.end())
            {
                if(last() != x) return cout << 0 << endl , 0;
                A.erase(x);
            }
            if(B.find(x) != B.end())
            {
                if(first() != x)    return cout << 0 << endl , 0;
                B.erase(x);
            }
            if(C.find(x) != C.end())
            {
                ans = ans * 2 % MOD2;
            }
            for(auto &i : C)
            {
                if(i < x)   A.insert(i);
                if(i > x)   B.insert(i);
            }
            C = {};
        }
    }
    cout << ans * (C.size() + 1) % MOD2;

    return 0;
}
/*
todo :
    1- set constants
    2- check TimeLimit and MemoryLimit
    3- check special test cases
    4- don't forget BS can help you that is good idea(use for loop for floats)
    5- don't forget printf and scanf can help you in your code speed
*/
