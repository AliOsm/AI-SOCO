#include <iostream>
#include <cmath>
#include <vector>

using namespace std;

const long long INF = 100000000000000;

int ar[200000];
vector<long long> answer;

bool is_sqrt(long long num) {
    long double k = (int)sqrt(num);

    while (k * k < num)
        ++k;

    while (k * k > num)
        --k;

    return k * k == num;
}

bool check(long long num, int index) {
    return is_sqrt(num * num + ar[index]);
}

int main() {
    int n;
    cin >> n;

    for (int i = 0; i < n / 2; ++i) {
        cin >> ar[i];
    }


    long long cur = 1, sum = 0;
    for (int i = 0; i < n / 2; ++i) {
        while (cur * cur <= sum)
            ++cur;

        while (cur * cur < INF && !check(cur, i))
            ++cur;


        long long cur_ans = cur * cur;
        if (!check(cur, i)) {
            cout << "No";
            exit(0);
        }

        answer.push_back(cur_ans - sum);
        answer.push_back(ar[i]);

        ++cur;

        sum = cur_ans + ar[i];
    }

    cout << "Yes\n";

    for (int i = 0; i < answer.size(); ++i) {
        cout << answer[i] << " ";
    }
}