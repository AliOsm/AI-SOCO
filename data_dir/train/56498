#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

#define ll long long int
#define pb push_back
#define mp make_pair
#define ld long double
#define sz(a) (ll)(a).size()
#define endl "\n"

typedef tree<pair<ll,ll> ,null_type,less<pair<ll,ll> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
//K-th smallest
//cout << k << "kth smallest: " << *A.find_by_order(k-1) << endl;
//NO OF ELEMENTS < X
//cout << "No of elements less than " << X << " are " << A.order_of_key(X) << endl;

int main()
{
	std::ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

 	ll n, k, m, t, l;
 	cin >> n >> k >> m >> t;
 	l = n;
 	for(int i=0;i<t;i++)
 	{
 		ll type, ind;
 		cin >> type >> ind;
 		if(type == 0)
 		{
 			if(ind >= k) l = ind;
 			else
 			{
 				l -= ind;
 				k -= ind;
 			}
 		}
 		else
 		{
 			l++;
 			if(ind <= k) k++;
 		}
 		cout << l << " " << k << endl;
 	}
    return 0;
}