//  Copyright Â© 2020 Diego Garcia Rodriguez del Campo. All rights reserved.
#include<bits/stdc++.h>
#define MAX 505
#define optimiza_io cin.tie(0); ios_base::sync_with_stdio(0);
using namespace std;
typedef long long i64;

int N, a[MAX];
bool can[MAX][MAX];
int dp[MAX];

int main()
{
    optimiza_io
    cin >> N;
    for( int i = 1; i <= N; i ++ )
        cin >> a[i];
    
    for( int l = 1; l <= N; l ++ ) {
        stack < int > s;
        s.push( a[l] );
        can[l][l] = 1;
        for( int r = l + 1; r <= N; r ++ ) {
            s.push( a[r] );
            while( s.size() >= 2 ) {
                int a = s.top(); s.pop();
                if( a != s.top() ) {
                    s.push( a );
                    break;
                }
                s.pop();
                s.push( a + 1 );
            }
            if( s.size() == 1 )
                can[l][r] = 1;
        }
    }
    
    for( int l = N; l >= 1; l -- ) {
        dp[l] = dp[l + 1] + 1;
        for( int r = l + 1; r <= N; r ++ )
            if( can[l][r] )
                dp[l] = min( dp[l] , 1 + dp[r + 1] );
    }
    cout << dp[1] << "\n";
    return 0;
}

// CHECAR LIMITES 