#include <stdio.h>
#include <set>

using namespace std;

const int mod = 998244353;

struct mint {
    int n;
    mint(int n_ = 0) : n(n_) {}
};

mint operator+(mint a, mint b) {
    a.n += b.n;
    if (a.n >= mod) a.n -= mod;
    return a.n;
}

mint operator-(mint a, mint b) {
    a.n -= b.n;
    if (a.n < 0) a.n += mod;
    return a.n;
}

mint operator*(mint a, mint b) {
    return (long long)a.n * b.n % mod;
}

mint &operator+=(mint &a, mint b) {
    return a = a + b;
}

mint &operator-=(mint &a, mint b) {
    return a = a - b;
}

mint &operator*=(mint &a, mint b) {
    return a = a * b;
}

int N;
mint F[2020202];
mint IF[2020202];
mint INV[2020202];

mint C(int n, int r) {
    return F[n] * IF[n - r] * IF[r];
}
    
int main() {
    INV[1] = 1;
    for (int i = 2; i < 2020202; i++) {
        INV[i] = INV[mod % i] * (mod - mod / i);
    }
    F[0] = 1;
    IF[0] = 1;
    for (int i = 1; i < 2020202; i++) {
        F[i] = i * F[i - 1];
        IF[i] = INV[i] * IF[i - 1];
    }
    scanf("%d", &N);
    mint ans = 1;
    for (int i = 1; i <= N; i++) {
        ans += F[N];
        ans -= C(N, i) * F[N - i];
    }
    printf("%d\n", ans.n);
}
