#include <bits/stdc++.h>

using namespace std;

#define BIT 30
#define DIM 300009

struct bit{
    long long kilk,num,p;
    long long a[4];
};

long long what_bit[BIT+9];

long long timer;

bit T[DIM*BIT];

void add(long long v,long long pos,long long num){
    long long b=what_bit[pos];

    T[v].kilk++;
    if(pos>BIT){
        T[v].p++;
        T[v].num=num;
     //   cout<<endl<<T[v].num<<endl;
        return;
    }
    if(T[v].a[b]==0)T[v].a[b]=++timer;
    //cout<<b;
    add(T[v].a[b],pos+1,num);
}

long long findset(long long v,long long pos){
    long long b=what_bit[pos];
    T[v].kilk--;
    if(T[v].p>0 || pos>BIT){
        T[v].p--;
     //   cout<<T[v].num<<endl;
        return T[v].num;

    }
    if(T[v].a[b]!=0 && T[T[v].a[b]].kilk>0)return findset(T[v].a[b],pos+1);
    else return findset(T[v].a[1-b],pos+1);
}

long long i,j,k,l,n,m;

long long a[DIM];

int main()
{
    cin>>n;
    for(i=1;i<=n;i++)cin>>a[i];
    for(i=1;i<=n;i++){
        cin>>l;
        k=l;
        for(j=BIT;j>0;j--){
            what_bit[j]=l%2;
            l/=2;
        }
        add(0,1,k);
      //  cout<<endl;
    }
//cout<<1<<endl;
    for(i=1;i<=n;i++){
        l=a[i];
        for(j=BIT;j>=1;j--){
            what_bit[j]=l%2;
            l/=2;
        }
        //cout<<a[i]<<' '<<k<<endl;
        k=findset(0,1);
        k^=a[i];
        cout<<k<<' ';
    }

    cout<<endl;
    return 0;
}
