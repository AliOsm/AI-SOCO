#include <cstdio>
#include <cstring>
#include <queue>
#include <utility>
#include <algorithm>

const int N = 100000;

int n, a[N], d[N];

int main() {
    scanf("%d", &n);
    for (int i = 0; i < n; ++ i) {
        scanf("%d", a + i);
    }
    for (int i = 0; i < n; ++ i) {
        d[i] = a[i];
    }
    d[0] = d[n - 1] = 1;
    std::priority_queue<std::pair<int, int>> q;
    for (int i = 0; i < n; ++ i) {
        q.push({-d[i], i});
    }
    while (!q.empty()) {
        auto ret = q.top();
        q.pop();
        int u = ret.second;
        if (d[u] == -ret.first) {
            if (u > 0 && d[u] + 1 < d[u - 1]) {
                d[u - 1] = d[u] + 1;
                q.push({-d[u - 1], u - 1});
            }
            if (u + 1 < n && d[u] + 1 < d[u + 1]) {
                d[u + 1] = d[u] + 1;
                q.push({-d[u + 1], u + 1});
            }
        }
    }
    printf("%d\n", *std::max_element(d, d + n));
    return 0;
}
