#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define se second
#define fi first
#define pb push_back
const int N=1e5 + 5;
int v[N],freq[4];
map<int, int> mp;
int n;
int get(int am,int x){
	return -am + 3 * n - 3 * x;
}

int main(){

//	freopen("in.txt","r",stdin);

	scanf("%d",&n);
	set<int> mp;
	vector<int> dd;
	for(int i=0;i < n;i++){
		scanf("%d",&v[i]);
		mp.insert(v[i]);
		dd.pb(v[i]);
	}
	sort(dd.begin(),dd.end());
	dd.resize(unique(dd.begin(),dd.end()) - dd.begin());
	if(dd.size() == 2){
		if(abs(dd[0] - dd[1]) == 2) dd.pb(max(dd[0],dd[1]) - 1);
	}
	sort(dd.begin(),dd.end());
	if(dd.size() <= 2){
		cout << n << endl;
		for(int i=0;i < n;i++){
			printf("%d ",v[i]);
		}
		return 0;
	}
	for(int i=0;i < n;i++){
		int x=lower_bound(dd.begin(),dd.end(),v[i]) - dd.begin() + 1;
		freq[x]++;
	}
	int temp=0;
	temp=1 * freq[1] + 2 * freq[2] + 3 * freq[3];
	int ans=0,a=freq[1],b=freq[2],c=freq[3];
	for(int i=0;i <= n;i++){
		int x=0,left=temp - i;
		if(i >= freq[1]) x+=i - freq[1];
		if(left < 0) break;
		int q2=get(left,i),q3=n - i - q2;
		if(q2 >= freq[2]) x+=q2 - freq[2];
		if(q3 >= freq[3]) x+=q3 - freq[3];
		if(x > ans && q2 >= 0 && q3 >= 0){
			ans=x;
			a=i, b=q2, c=q3;
		}
	}
	cout << n - ans << endl;
	while(a)
		printf("%d ",dd[0]), a--;
	while(b)
		printf("%d ",dd[1]), b--;
	while(c)
		printf("%d ",dd[2]), c--;

}
