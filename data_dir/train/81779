#include <bits/stdc++.h>
using namespace std;
#define F first
#define S second
#define R cin>>
#define Z class
#define ll long long
#define ln cout<<'\n'
#define in(a) insert(a)
#define pb(a) push_back(a)
#define pd(a) printf("%.10f\n",a)
#define mem(a) memset(a,0,sizeof(a))
#define all(c) (c).begin(),(c).end()
#define iter(c) __typeof((c).begin())
#define rrep(i,n) for(ll i=(ll)(n)-1;i>=0;i--)
#define REP(i,m,n) for(ll i=(ll)(m);i<(ll)(n);i++)
#define rep(i,n) REP(i,0,n)
#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)
template<Z A>void pr(A a){cout<<a;ln;}
template<Z A,Z B>void pr(A a,B b){cout<<a<<' ';pr(b);}
template<Z A,Z B,Z C>void pr(A a,B b,C c){cout<<a<<' ';pr(b,c);}
template<Z A,Z B,Z C,Z D>void pr(A a,B b,C c,D d){cout<<a<<' ';pr(b,c,d);}
template<Z A>void PR(A a,ll n){rep(i,n){if(i)cout<<' ';cout<<a[i];}ln;}
ll check(ll n,ll m,ll x,ll y){return x>=0&&x<n&&y>=0&&y<m;}
const ll MAX=1e9+7,MAXL=1LL<<61,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};
typedef pair<ll,ll> P;

void Main() {
  ll e[555555];
  mem(e);
  for(ll i=1; i<555555; i++) {
    for(ll j=i; j<555555; j+=i) {
      ll k=j/i;
      e[j]=max(e[j],min(i,k));
    }
  }
  ll n;
  cin >> n;
  ll a[n];
  rep(i,n) cin >> a[i];
  map<ll,ll> m;
  rep(i,n) m[a[i]]++;
  priority_queue<P> que;
  tr(it,m) que.push(P(it->S,it->F));
  ll ans=0,k=0,nn=n,n1,m1;
  while(!que.empty()) {
    ll t=que.top().F;
    ll d=0,n2,m2;
    ll i=e[n];
    ll j=n/e[n];
    if(i>=t&&j>=t) {
      if(d<i*j) {
        d=i*j;
        n2=i;
        m2=j;
      }
    }
    if(d>ans) {
      ans=d;
      k=n;
      n1=n2;
      m1=m2;
    }
    P p=que.top();que.pop();
    m[p.S]--;
    p.F--;
    if(p.F) que.push(p);
    n--;
  }
  m.clear();
  rep(i,nn) m[a[i]]++;
  tr(it,m) que.push(P(it->S,it->F));
  while(!que.empty()&&nn>k) {
    P p=que.top();que.pop();
    m[p.S]--;
    p.F--;
    if(p.F) que.push(p);
    nn--;
  }
  vector<ll> v;
  vector<P> g;
  tr(it,m) g.pb(P(it->S,it->F));
  sort(all(g),greater<P>());
  rep(i,g.size()) {
    rep(j,g[i].F) v.pb(g[i].S);
  }
  ll d[n1][m1];
  mem(d);
  int x=0,y=0;
  rep(i,v.size()) {
    d[x][y]=v[i];
    x++,y++;
    x%=n1;
    y%=m1;
    if(d[x][y]) {
      y++;
      y%=m1;
    }
  }
  pr(ans);
  pr(n1,m1);
  rep(i,n1) PR(d[i],m1);
}

int main(){ios::sync_with_stdio(0);cin.tie(0);Main();return 0;}
