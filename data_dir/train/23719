#include<bits/stdc++.h>
using namespace std;

# define C continue;
# define R return

# define D double
# define I insert
# define ll long long
# define ld long double

# define ull unsigned long long
# define ui unsigned int

# define pb push_back
# define pf push_front

# define vi vector < int >
# define vc vector < char >
# define vs vector < string >
# define vb vector < bool >
# define vd vector < D >
# define vll vector < ll >
# define vull vector < ull >
# define vld vector < ld >
# define PQ priority_queue

# define vvi vector < vector < int > >
# define vvb vector < vector < bool > >
# define vvc vector < vector < char > >
# define vvs vector < vs >
# define vvll vector < vector < ll > >
# define vvd vector < vector < D > >
# define vvld vector < vector < ld > >

# define all(v) (v).begin() , (v).end()
# define allrev(v) (v).rbegin() , (v).rend()
# define allcomp(v) v.begin() , v.end() , comp
# define allrevcomp(v) v.rbegin() , v.rend() , comp

# define pii pair < int , int >
# define pll pair < ll , ll >
# define pld pair < ld , ld >
# define pDD pair < D , D >

# define vpld vector < pld >
# define vpii vector < pii >
# define vpll vector < pll >
# define vpDD vector < pDD >

# define vvpii vector < vector < pii > >
# define F first
# define S second
# define mp make_pair

# define dist(a,b,p,q) sqrt((p-a)*(p-a) + (q-b)*(q-b))

# define pp(n) printf("%.10Lf",n);
# define line cout<<"\n";
# define fast ios_base::sync_with_stdio(false) ; cin.tie(0) ; cout.tie(0);

string vow = "aeiou";
int month[] = {-1, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

const int dxhorse[] = {-2, -2, -1, -1, 1, 1, 2, 2};
const int dyhorse[] = {1, -1, 2, -2, 2, -2, 1, -1};

const int dx[] = { -1 , 0 , 1 , 0 } ;
const int dy[] = { 0 , 1 , 0 , -1 } ;

const ld pie = 3.1415926535897932384626 ;
const ll mod = 1e9 + 7 ;

/// Tip : If a and b are positive integers ; we may say - ceil (a/b) = 1 + floor ( (a-1)/b ) .

int n , h , l , r ;

const int N = 2e3 + 10 ;
int dp[N][N] ;

vi v ;

# define time woejdowkeodkwmeod

void FILL()
{
    for ( int i=0 ; i < N ; i ++ )
    {
        for ( int j = 0 ; j < N ; j ++ )
            dp[i][j] = -1 ;
    }
}

int f ( int indx , int time )
{
    if ( indx == n )
        return 0 ;

    if ( dp[indx][time] != -1 )
        return dp[indx][time] ;

    int tt = time + v[indx] ;
    tt %= h ;

    int val1 = f ( indx + 1 , tt ) ;
    if ( tt >= l && tt <= r ) val1 ++ ;

    tt -- ;
    if ( tt < 0 ) tt += h ;

    int val2 = f ( indx + 1 , tt ) ;
    if ( tt >= l && tt <= r ) val2 ++ ;

    int val = max ( val1 , val2 ) ;

    dp[indx][time] = val ;
    return val ;
}

void solve ( int test_case )
{
    cin >> n >> h >> l >> r ;

    v.resize ( n ) ;
    for ( int i=0 ; i < n ; i ++ )
        cin >> v[i] ;

    FILL () ;
    f ( 0 , 0 ) ;

    int ans = dp[0][0] ;

    cout << ans ;
    line ;
}

int main()
{fast
    int t = 1;
    // cin >> t;

    for ( int i=1 ; i <= t ; i ++ ) solve ( i ) ;
    return 0;
}
