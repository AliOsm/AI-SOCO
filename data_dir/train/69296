#include <iomanip>
#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <ctime>
#include <cstdio>
#include <cmath>
#include <queue>
#include <bitset>
#include <string>
 
#define ll long long
#define mp make_pair
#define pb push_back
 
using namespace std;
 
const int MOD = 1e9+7;

const int N = 100010;
const int L = 20;

pair<int, int> dp[N][L];
int getlog[N];
int n, q;
int a[N];

pair <int, int> merge(pair <int, int> p1, pair<int, int> p2) {
    pair <int, int> res;
    res.first = p1.first + p2.first + (p1.second + p2.second >= 10 ? 1 : 0);
    res.second = (p1.second + p2.second) % 10;
    return res;
}

void precalc() {
    for (int k = 0; (1 << k) <= n; k++) {
        int len = (1 << k);
        getlog[len] = k;
        int len1 = (k > 0 ? (1 << (k - 1)) : 0);
        for (int i = 1; i + len - 1 <= n; i++) {
            if (k == 0) dp[i][k] = mp(0, a[i]);
            else dp[i][k] = merge(dp[i][k - 1], dp[i + len1][k - 1]);
            //cout << i << " " << k << " " << dp[i][k].first << " " << dp[i][k].second << endl;
        }
    }
}

int query(int l, int r) {
    return dp[l][getlog[r - l + 1]].first;
}

int main() {
    scanf("%d", &n);
    for (int i = 1; i <= n; i++) scanf("%d", &a[i]);
    precalc();
    scanf("%d", &q);
    for (int i = 1; i <= q; i++) {
        int l, r;
        scanf("%d%d", &l, &r);
        printf("%d\n", query(l, r));
    }
    return 0;
}