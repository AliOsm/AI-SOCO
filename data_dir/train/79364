#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
#include <bits/stdc++.h>
#define all(c) c.begin(),c.end()
#define ll long long
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define mod 1000000007
#define PI 3.1415926536
#define pll pair<ll, ll>
using namespace std;

bool is_prime(ll n) {
    for (ll i = 2; i * i <= n; ++i) {
            if (n % i == 0) {
                  return false;
            }
    }
    return true;
}

inline ll getPow(ll a,ll b) {
    ll res = 1ll, tp = a;
    while (b){
       if (b&1ll) {
           res *= tp;
       }
       tp *= tp;
       tp %= mod;
       res %= mod;
       b >>= 1ll;
    }
    return res;
}

ll vec_mult(ll x1, ll y1, ll x2, ll y2, ll x3, ll y3) {
   return abs((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1));
}

void ok() {
   puts("YES");
   exit(0);
}

void no() {
   puts("NO");
   exit(0);
}

inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}

const ll N = 2e5 + 10;
ll xx[] = {0, 0, 1, -1};
ll yy[] = {1, -1, 0, 0};

// please, accepted!

int main(){

    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    ll n = nxt();
    string s;
    cin >> s;
    vector<ll> pref(n, 0);
    for(int i = 0; i < n; i++) {
        if(i) pref[i] = pref[i - 1];
        if(s[i] == ')') pref[i]--;
        else pref[i]++;
    }
    vector<ll> mn(n);
    reverse(all(pref));
    mn[0] = pref[0];
    for(int i = 1; i < n; i++) {
        mn[i] = min(pref[i], mn[i - 1]);
    }
    reverse(all(pref));
    reverse(all(mn));
    ll ans = 0;
    for(int i = 0; i < n; i += 1) {
        ll cur = 0;
        if(s[i] == ')') cur = 2;
        else cur = -2;
        if(mn[i] + cur >= 0 && cur + pref[n - 1] == 0) ans++;
        if(pref[i] < 0) break;
    }
   /* for(auto x : pref) {
        cout << x << " ";
    }
    cout << endl;
    for(auto x : mn) {
        cout << x << " ";
    }
    cout << endl;*/
    cout << ans;
    return 0;
}
