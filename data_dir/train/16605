#include <bits/stdc++.h>

using namespace std;

#define ll long long
vector<ll> V;

void gen()
{
    for(ll i=0; i<=1000000; i++) V.push_back(i*i);
}

int main()
{
    gen();
    ll n;
    scanf("%lld", &n);
    ll arr[n];
    ll req[n];
    ll req2[n];
    memset(req2, 0, sizeof req2);
    memset(req, 0, sizeof req);
    ll sq = 0;
    for(ll i=0; i<n; i++){
        scanf("%lld", &arr[i]);
        if(binary_search(V.begin(), V.end(), arr[i])){
            sq++;
            if(arr[i] == 0) req2[i] = 2;
            else req2[i] = 1;
        }
        else {
            ll it = upper_bound(V.begin(), V.end(), arr[i]) - V.begin();
            ll diff1 = V[it] - arr[i];
            it--;
            ll diff2 = arr[i] - V[it];
            ll mins = min(diff1, diff2);
            req[i] = mins;
        }
    }
    if(sq == n/2) cout << 0;
    else if(sq > n/2){
        ll need = sq - n/2;
        sort(req2, req2+n);
        ll it = 0;
        for(ll i=0; i<n; i++){
            if(req2[i] != 0){
                it = i;
                break;
            }
        }
        ll sum = 0;
        for(ll i=it; i<it+need; i++){
            sum += req2[i];
        }
        cout << sum;
    }
    else {
        ll need = (n-sq)-n/2;
        sort(req, req+n);
        ll it = 0;
        for(ll i=0; i<n; i++){
            if(req[i] != 0){
                it = i;
                break;
            }
        }
        ll sum = 0;
        for(ll i=it; i<it+need; i++){
            sum += req[i];
        }
        cout << sum;
    }
}
