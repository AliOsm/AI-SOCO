#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define fr(i,j,k) for(int i=j;i<k;i++)
#define f(n) fr(i,0,n)
#define f1(n) fr(i,1,n+1)
#define pb push_back
#define F first
#define S second
#define all(x) x.begin(), x.end()
using namespace std;
const int maxn = 200005;
const int mod = 998244353;
vector<string>v{"1110111", "0010010", "1011101", "1011011", "0111010", "1101011", "1101111", "1010010", "1111111", "1111011"};

int trans(string s1, int k) {
    int ret = 0;
    for (int i = 0 ; i < 7 ; i++) {
        if (s1[i] == '1' && v[k][i] == '0')return -1;
        if (s1[i] == '0' && v[k][i] == '1')ret++;
    }
    return ret;
}
bool dp[2005][2005][10] = {};
int fro[2005][2005][10] = {};
int main(){
    memset(dp,0,sizeof(dp));
    memset(fro,0,sizeof(dp));
    ios_base::sync_with_stdio(0);
    cin.tie(0);
        int n, k;
    cin >> n >> k;
    
    dp[0][0][0] = 1;
    vector<string>v(n);
    f(n) {
        cin >> v[i];
    }
    reverse(all(v));
    for (int i = 0 ; i < n ; i++) {
        string s;
        s = v[i];
        for (int j = 0 ; j < 10 ; j++) {
            int x = trans(s,j);
            if (x == -1)continue;
            for (int z = 0 ; z < 10 ; z++) {
                for (int l = 0 ; l <= k - x ; l++) {
                    if (!dp[i][l][z])continue;
                    dp[i+1][l+x][j] = 1;
                    fro[i+1][l+x][j] = max(fro[i+1][l+x][j], z);
                }
            }
        }
    }
    for (int i = 9 ; i >= 0 ; i--) {
        if (dp[n][k][i]) {
            int pos = i;
            int left = k;
            for (int j = n ; j >= 1 ; j--) {
                cout << pos;
                int mi = trans(v[j-1],pos);
                pos = fro[j][left][pos];
                left -= mi;
            }
            cout << '\n';
            exit(0);
        }
    }
    cout << "-1" << '\n';
}