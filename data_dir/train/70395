#include <stdio.h>

#define N	500000

int oo[1 + (N - 1) * 2], oj[1 + (N - 1) * 2];

int link(int o, int j) {
	static int _ = 1;

	oo[_] = o, oj[_] = j;
	return _++;
}

int ae[N], sz[N], cc[N], ll[N], rr[N];

void dfs(int p, int i) {
	int o;

	sz[i] = 1, cc[i] = 0;
	for (o = ae[i]; o; o = oo[o]) {
		int j = oj[o];

		if (j != p) {
			dfs(i, j);
			sz[i] += sz[j], cc[i]++;
		}
	}
}

void dfs_(int p, int i, int l_, int l, int r) {
	int o;

	ll[i] = l_;
	rr[i] = l + cc[i];
	l_ = l;
	for (o = ae[i]; o; o = oo[o]) {
		int j = oj[o];

		if (j != p) {
			dfs_(i, j, l_++, r - (sz[j] * 2 - 1) + 1, r);
			r -= sz[j] * 2 - 1;
		}
	}
}

int main() {
	int n, h, i, j;

	scanf("%d", &n);
	for (h = 0; h < n - 1; h++) {
		scanf("%d%d", &i, &j), i--, j--;
		ae[i] = link(ae[i], j);
		ae[j] = link(ae[j], i);
	}
	dfs(-1, 0);
	dfs_(-1, 0, 1, 2, n * 2);
	for (i = 0; i < n; i++)
		printf("%d %d\n", ll[i], rr[i]);
	return 0;
}
