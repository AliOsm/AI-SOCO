#pragma GCC optimize "03"
#include <bits/stdc++.h>
using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;

 
#define int long long int
#define ld long double
#define pi pair<int, int>
#define pb push_back
#define fi first
#define se second
#define all(x) x.begin(), x.end()
#define fr(i, a, b) for(int i = a; i <= b; i++)
#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0)
#ifndef LOCAL
#define endl '\n'
#endif

const int mod = 998244353;

const int N = 2e5 + 5;
int a[N];
vector<int> v;
bool b[N];
int pwr(int a,int b){
	int ans = 1;
	while(b){
		if(b & 1)
			ans = (ans * a) % mod;
		a = (a * a) % mod;
		b >>= 1;
	}
	return ans;
}
pbds s;
signed main() {
	#ifdef LOCAL
		freopen("input.txt","r",stdin);
	#endif
	IOS;
	int n;
	cin >> n;
	int c = 0;
	fr(i, 1, n){
		cin >> a[i];
		b[a[i]] = 1;
		c += (a[i] == -1);
	}
	fr(i, 1, n){
		if(!b[i]) v.pb(i);
	}
	int ans = (c * (c - 1)) % mod;
	ans = (ans * pwr(4, mod - 2)) % mod;
	int tot = c;
	fr(i, 1, n){
		if(a[i] == -1) c--;
		else{
			ans += (s.size() - s.order_of_key(a[i]));
			ans %= mod;
			s.insert(a[i]);
			int l = upper_bound(all(v), a[i]) - v.begin();
			int val = (l * c) % mod;
			val = (val * pwr(tot, mod - 2)) % mod;
			ans += val;
			ans %= mod;
		}
	}
	c = tot;
	for(int i = n; i >= 1; i--){
		if(a[i] == -1) c--;
		else{
			int l = v.end() - upper_bound(all(v), a[i]);
			int val = (l * c) % mod;
			val = (val * pwr(tot, mod - 2)) % mod;
			ans += val;
			ans %= mod;
		}
	}
	ans %= mod;
	cout << ans;
	return 0;
}