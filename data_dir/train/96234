#include <bits/stdc++.h>

using namespace std;

typedef long long int LL;

const int maxn = 5000;
LL val[maxn][maxn];
int num[maxn];
char ope[maxn];

LL get(LL A, char x, LL B, char y = '+', LL C = 0) {
    if (x == '+' && y == '+')
        return A + B + C;
    if (x == '+' && y == '*')
        return A + B * C;
    if (x == '*' && y == '+')
        return A * B + C;
    if (x == '*' && y == '*')
        return A * B * C;
}

int main() {
    string s;
    cin >> s;
    int n = 0;
    for (int i = 0; i < s.size(); i += 2)
        num[n++] = s[i] - '0';
    for (int i = 1; i < n; i++)
        ope[i - 1] = s[2 * i - 1];


    for (int st = 0; st < n; st++) {
        int fi = st;
        LL sum = 0, prod = 1;
        while (fi < n) {
            prod *= num[fi];
            val[st][fi] = sum + prod;

            if (ope[fi] == '+')
                sum += prod, prod = 1;
            fi++;
        }
    }

    LL ans = val[0][n - 1];
    for (int i = 0; i < n; i++)
        for (int j = i; j < n; j++) {
            int st = i, fi = j;
            LL ret = val[st][fi];
            while (st - 1 >= 0 && ope[st - 1] == '*')
                ret *= num[st - 1], st--;
            while (fi + 1 < n && ope[fi] == '*')
                ret *= num[fi + 1], fi++;
            //cout << "@" << i << ' ' << j << ' ' << st << ' ' << fi << ' ' << ret << endl;
            if (st - 1 >= 0)
                ret += val[0][st - 1];
            if (fi + 1 <= n - 1)
                ret += val[fi + 1][n - 1];
            ans = max(ans, ret);
        }

    cout << ans << endl;
    return 0;
}
