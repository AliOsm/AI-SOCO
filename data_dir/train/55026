#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <cmath>
#include <cassert>
#include <complex>
//#include <cinttypes>
#include <cstddef>
#include <cstdint>
#include <algorithm>
#include <array>
#include <vector>
#include <string>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
#include <utility>
#include <functional>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#include <memory>
#include <climits>
#include <limits>
#include <list>
#include <forward_list>

#include <iostream>
#include <iomanip>

 

typedef long long ll;
typedef std::vector<int> vi;
typedef std::pair<int,int> pii;
typedef std::pair<ll,ll> pll;
typedef std::vector<pll> vll;

#define all(x)  (x).begin(), (x).end()
#define fi  first
#define se  second
#define forn(i,n) for(int i= 0; i < int(n); ++i)
#define fore(i,a,b) for(int i =(a); i < int(b); ++i)

static const int MOD = 1000000007;
 /*************************************************/
 
static ll gcd(ll x, ll y){ return (!y) ? x : gcd(y, x % y ) ; } 
      
ll sqr(ll x){ return x*x; }
static const int dx[] = {-1,+1,0,0};
static const int dy[] = {0,0,-1,+1};

bool check(ll x, ll y, ll n2)
{
    ll d = x * x + y * y ;
    return d <= n2 ;
}
bool check2(ll x, ll y, ll n2)
{
    if (!check(x,y,n2)) return false;
    
    for(int k = 0; k < 4; ++k){
       if (!check(x+dx[k], y + dy[k], n2 ) ) 
           return true;
    }
    return false;
}

int solve(int n )
{
    int ans = 0;
    ll n2 = n*1ll*n; 
    
    int x = n, y = 0;
    while(x > 0 ) {
        //++ans;
        bool ok = check2(x,y,n2);
        if (ok)++ans;
        // x-1,y  or x,y+1
        bool ok_1 = check(x-1, y, n2);
        bool ok_2 = check(x, y + 1, n2);
        if (ok_1 && !ok_2){
            --x;
        } else if (!ok_1 && ok_2 ) {
            y++;
        } else if (ok_1 && ok_2 ) {
            ++y;
        } else {
           // printf("x = %d y = %d\n", x, y);
           // exit(0);
             assert(false);
            
        }
    }
    return ans;
     
}
int solve()
{   
    int n ; scanf("%d",&n);
    if (n < 4 ) {
        static const int ans[] = {1, 4, 8, 16 } ;
        printf("%d\n", ans[n]);
    } else {
        printf("%d\n", 4 * solve(n));
    }
    //for(int n = 0; n <= 100; ++n)solve(n);
    
    return 0;   
}

int main(int argc, char * argv[] ) 
{
    
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif 
    ::std::ios::sync_with_stdio(false); ::std::cin.tie(0);  ::std::cout.tie(0);
    int test_count = 1;
    //scanf("%d",&test_count);
    while( test_count -- )
        solve();
    
    return 0;
}