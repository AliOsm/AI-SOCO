#include<bits/stdc++.h>
#define ALL(c) (c).begin(), (c).end()
using namespace std;
using ll = long long;
using ld = long double;

const int N = 1e6+6;

int sum(int a, int b){return a+b;}

template<class T>
struct segt{
	vector<T> t;
	int d;
	T nelem;
	function<T (T,T)> merge;
	segt(int sz, function<T (T,T)> f, T x) : merge(f), nelem(x) {
		for(d=2; d<sz; d<<=1);
		t.assign(d*2, nelem);
	}
	T operator()(int i, int j){
		T l = nelem, r = nelem;
		for(i+=d,j+=d; i<=j; ++i>>=1, --j>>=1){
			assert(0<=i && i<t.size());
			if(i&1) l = merge(l, t[i]);
			if(~j&1) r = merge(t[j], r);
		}
		return merge(l,r);
	}
	void setValue(int i, T x){
		t[i+=d] = x;
		for(i>>=1;i;i>>=1) t[i] = merge(t[i*2], t[i*2+1]);
	}
	void updateValue(int i, T x){
		i+=d;
		t[i] = merge(t[i], x);
		for(i>>=1;i;i>>=1) t[i] = merge(t[i*2], t[i*2+1]);
	}
};

int main(){
	//freopen("input.txt","r",stdin);// freopen("output.txt","w",stdout);
	ios::sync_with_stdio(0);cin.tie(0);//cout.precision(12);cout<<fixed;
	
	int n, m;
	
	cin>>n>>m;

	if(m*2>n) m = n-m;
	
	segt<int> t(n+1, sum, 0);
	
	ll ans = 1;
	for(int x=1, i=1;i<=n;++i){
		int y = x+m;
		if(y>n) y-=n;
		ll add = 0;
		if(x<=y) add = t(x+1,y-1);
		else add = t(x+1, n) + t(1, y-1);
		ans+=add+1;
		cout<<ans<<' ';
		t.updateValue(x, +1);
		t.updateValue(y, +1);
		x = y;
	}
	
	
	return 0;
}
