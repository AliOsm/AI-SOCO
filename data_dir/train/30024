#include <bits/stdc++.h>
//For ordered_set
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define MOD 1000000007
#define test int t; cin>>t; while(t--)
#define init(arr,val) memset(arr,val,sizeof(arr))
#define loop(i,a,b) for(int i=a;i<b;i++)
#define loopr(i,a,b) for(int i=a;i>=b;i--)
#define loops(i,a,b,step) for(int i=a;i<b;i+=step)
#define looprs(i,a,b,step) for(int i=a;i>=b;i-=step)
#define ull unsigned long long int
#define ll long long int
#define P pair
#define PLL pair<long long, long long>
#define PII pair<int, int>
#define PUU pair<unsigned long long int, unsigned long long int>
#define L list
#define V vector
#define D deque
#define ST set
#define MS multiset
#define M map
#define UM unordered_map
#define mp make_pair
#define pb push_back
#define pf push_front
#define MM multimap
#define F first
#define S second
#define IT iterator
#define RIT reverse_iterator
#define FAST ios_base::sync_with_stdio(false);cin.tie();cout.tie();
#define FILE_READ_IN freopen("input.txt","r",stdin);
#define FILE_READ_OUT freopen("output.txt","w",stdout);
#define all(a) a.begin(),a.end()
#define ld long double
using namespace std;
// For ordered_set
using namespace __gnu_pbds;
template <typename T>
using ord_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;
const ll maxn = 1e5;
const ll inf = 1e9;
const double pi = acos(-1);
int n;
PII s,e;
string arr[55];
V<V<bool>> vis;
bool match = false;
bool valid(int i, int j){
    if(i >= n || i < 0 || j < 0 || j >= n)return false;
    if(arr[i][j] == '1')return false;
    if(vis[i][j])return false;
    return true;
}

void dfs(int i, int j, V<PII> &a, bool first = false){
    // cout << i << " " << j << "\n";
    if(match)return;
    if(!valid(i,j))return;
    if(i == e.F && j == e.S && first){
        match = true;
        return;
    }
    a.pb(mp(i,j));
    vis[i][j] = true;
    dfs(i+1,j,a,first);
    dfs(i-1,j,a,first);
    dfs(i,j+1,a,first);
    dfs(i,j-1,a,first);
}

ll dist(PII a, PII b){
    return (a.F - b.F  + 0LL)*(a.F - b.F  + 0LL) + (a.S - b.S  + 0LL)*(a.S - b.S  + 0LL);
}

int main(){
    FAST
    cin >> n >> s.F >> s.S >> e.F >> e.S;
    s.F --;
    s.S --;
    e.F --;
    e.S --;
    vis = V<V<bool>> (n,V<bool>(n,false));
    loop(i,0,n){
        cin >> arr[i];
    }
    V<PII> a,b;
    dfs(s.F,s.S,a,true);
    // for(auto i: a){
    //     cout << i.F << " " << i.S << "\n";
    // }
    if(match){
        cout << 0;
        return 0;
    }
    dfs(e.F,e.S,b,false);
    ll ans = LLONG_MAX;
    for(int i = 0; i < a.size(); ++i){
        for(int j = 0; j < b.size(); ++j){
            ans = min(ans,dist(a[i],b[j]));
        }
    }
    cout << ans;
   return 0;
}