#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define fs first
#define se second
#define pi 2*acos(0)
#define PI 3.14159265358979323846264338

typedef long long ll;
typedef unsigned long long ull;
typedef pair < int , int > pii;
typedef pair < ll , ll > pll;

const int N = 100010;
const int MX = 123456;
const int mod = (int)1e9 + 7;
const int base = 1023456789;
const ull BS1 = 10000019ULL;
const int INF = (1 << 29);

template < class T > inline void fastScan(T &x){
    register char c = getchar();
    int neg = 0; x = 0;
    for(   ; (c < 48 || c > 57) && (c != '-'); c = getchar());
    if(c == '-') { neg = 1; c = getchar(); }
    for(   ; c > 47 && c < 58; c = getchar()){
        x = (x << 1) + (x << 3) + c - 48;
    }
    if(neg) x = -x;
}

int n;
ll dp[1234][8];

struct info {
    ll val;
    char str[5];
} inp[N];

bool Check(int nn, int pos){
    return (bool)(nn & (1 << pos));
}

int Set(int nn, int pos){
    return (nn | (1 << pos));
}

int go(int pos, int mask){
    if(mask == 7) return 0;
    if(pos > n){
        if(mask == 7) return 0;
        return 1e9;
    }
    if(dp[pos][mask] != -1) return dp[pos][mask];
    int ret = go(pos + 1, mask);
    int flag = 0;
    for(int i = 0; inp[pos].str[i] != '\0'; i++){
        int bit = inp[pos].str[i] - 'A';
        if(Check(mask, bit) == 0){
            flag = 1;
            break;
        }
    }
    if(flag){
        int mm = mask;
        int tmp = 0;
        for(int i = 0; inp[pos].str[i] != '\0'; i++){
            int bit = inp[pos].str[i] - 'A';
            mm = Set(mm, bit);
        }
        tmp = inp[pos].val + go(pos + 1, mm);
        ret = min(ret, tmp);
    }
    return dp[pos][mask] = ret;
}

int main(){
    fastScan(n);
    for(int i = 1; i <= n; i++){
        fastScan(inp[i].val);
        scanf("%s", inp[i].str);
    }
    memset(dp, -1, sizeof dp);
    ll ans = go(1, 0);
    if(ans >= 1e9) ans = -1;
    printf("%lld\n", ans);
}
