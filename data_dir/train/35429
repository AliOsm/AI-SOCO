#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <cmath>
#include <iomanip>
#include <fstream>
#include <stack>
#include <queue>
#include <deque>
#include <set>
#include <map>
//#include <unordered_map>
//#include <unordered_set>
#include <stdio.h>
#include <stdlib.h>
#include <cstdio>
#include <cstdlib>
#include <csignal>
#include <bitset>
#include <functional>
#include <ctime>
//#include <tuple>
#include <cassert>
#include <cstring>
#include <list>
//#include <array>
#include <iterator>
//#include <type_traits>
#include <numeric>
#include <cstdio>

#define PI 3.1415926535897932384626433832795

using namespace std;


int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    // freopen("input.txt","r", stdin);
    // freopen("output.txt","w",stdout);
    int n;
	cin >> n;
	vector<int> a(n);
	vector<int> ch(n);
	int cnta = 0;
	int cntd = 0;
	for (int i = 0; i < n; i++)
	{
		cin >> a[i];
		if (a[i] < 0)
			cnta++;
		if (a[i] > 0)
			cntd++;
	}
	vector<int> s1;
	vector<int> s2;
	vector<int> s3;
	for (int i = 0; i < n; i++)
	{
		if (a[i] == 0)
			s3.push_back(a[i]);
	}
    for (int i = 0; i < n; i++)
	{
		if (cnta%2 == 0 && a[i] < 0) {
			s3.push_back(a[i]);
            ch[i] = 1;
            break;
        }
	}
	for (int i = 0; i < n; i++)
	{
		if (a[i] > 0)
			s2.push_back(a[i]);
	}
	if (s2.size() == 0)
	{
		int dem = 0;
		for (int i = 0; i < n; i++)
		{
			if (a[i] < 0&& !ch[i])
			{
				s2.push_back(a[i]);
				dem++;
				ch[i] = 1;
			}
			if (dem == 2)
				break;
		}
	}
	for (int i = 0; i < n; i++)
	{
		if (a[i] < 0 && !ch[i])
			s1.push_back(a[i]);
	}
	cout << s1.size() << " ";
	for (int i = 0; i < s1.size(); i++)
	{
		cout << s1[i] << " ";
	}
	cout << "\n";
	cout << s2.size() << " ";
	for (int i = 0; i < s2.size(); i++)
	{
		cout << s2[i] << " ";
	}
	cout << "\n";
	cout << s3.size() << " ";
	for (int i = 0; i < s3.size(); i++)
	{
		cout << s3[i] << " ";
	}

    return 0;
}