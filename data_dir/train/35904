#include <bits/stdc++.h>
using namespace std;

#ifdef LOCAL_CHECK
#define trace(x) cerr << #x << ": " << x << " ";
#define trnl cerr << "\n";
#else
#define trace(x) {}
#define trnl {}
#endif
typedef long long lolo;
typedef unsigned long long ulolo;
typedef pair<int, int> pii;
#define F(i,a,b) for(int i=(a);i<(b);++i)
#define R(i,n) F(i,0,n) 
#define FD(i,n) for(int i=(n-1);i>=0;--i)
#define SZ(x) ((int)(x).size())
#define ALL(x) (x).begin(),(x).end()
#define fi first
#define se second
#define M_PI           3.14159265358979323846

const int INF = 1e9 + 23;
const int MOD = 1e9 + 7;
const int N = 200 + 10;
const int M = 1e5 + 100;

void add(int & a, int b) {
  a += b;
  if (a >= MOD) a -= MOD;
  if (a < 0) a += MOD;
}

pair<int, int> b[M];
set<int> vs;
map<int, int> mp;

vector<int> e[M+M];
int sum[M+M];

int main()
{
  ios_base::sync_with_stdio(0);
  int n, m;
  cin >> n >> m;
  for (int i = 0; i < m; ++i) {
    cin >> b[i].fi >> b[i].se;
  }

  vs.insert(0);
  vs.insert(n);
  for (int i = 0; i < m; ++i) {
    vs.insert(b[i].fi);
    vs.insert(b[i].se);
  }
  int k = 0;
  for (auto v : vs) {
    mp[v] = k++;
  }

  n = mp[n];
  for (int i = 0; i < m; ++i) {
    int snow = mp[b[i].fi];
    int enow = mp[b[i].se];
    e[enow].emplace_back(snow);
  }

  sum[0] = 1;
  for (int i = 1; i <= n; ++i) {
    add(sum[i], sum[i-1]);
    for (auto s : e[i]) {
       add(sum[i], sum[i-1]);
       if (s > 0) add(sum[i], -sum[s-1]);
    }
  }

  int ans = sum[n];
  add(ans, -sum[n-1]);
  cout << ans << "\n";
}
// g++ -W -Wall -Wextra -pedantic -std=c++0x -o p main.cpp
