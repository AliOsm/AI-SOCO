#include <bits/stdc++.h>

using namespace std;

const int N = 1e6 + 7;

vector < int > g[N];

int us[N];

int have, t = -1;

pair < int, int > ans = {-1, -1};

int sum[N];

int in[N], out[N], T = 0;

void dfsZero(int v){
    in[v] = T++;
    for(int to : g[v]){
        dfsZero(to);
    }
    out[v] = T++;
}

bool is(int x, int y){ // x is ancestor y
    return (in[x] <= in[y]) && (out[x] >= out[y]);
}

void dfs(int v, int type = -1){
    for(int i = 0; i < g[v].size(); ++i){
        int to = g[v][i];
        if(type == -1){
            dfs(to, i);
        }
        else{
            dfs(to, type);
        }
        sum[v] += sum[to];
    }
    if(type != -1){
        if(sum[v] == have){
            if(us[type] > 0){
                if(!is(v, us[type] - 1) && !is(us[type] - 1, v)){
                    cout << us[type] << ' ' << v + 1;
                    exit(0);
                }
            }
            us[type] = v + 1;
        }
        else{
            if(sum[v] == have * 2){
                if(us[type] > 0 && is(v, us[type] - 1)){
                    ans = {us[type], v + 1};
                }
            }
        }
    }
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n;
    cin >> n;

    int root, sch = 0;
    for(int i = 0; i < n; ++i){
        int a, b; cin >> a >> b;
        --a; sch += b;
        sum[i] = b;
        if(a == -1){
            root = i;
            continue;
        }
        g[a].push_back(i);
    }

    if(sch % 3 != 0){
        cout << -1;
        return 0;
    }

    have = sch / 3;

    dfsZero(root);
    dfs(root);

    if(ans.first == -1){
        for(int i = 0; i < N; ++i){
            if(us[i] > 0){
                if(ans.first == -1){
                    ans.first = us[i];
                }
                else{
                    cout << ans.first << ' ' << us[i];
                    return 0;
                }
            }
        }
        cout << -1;
    }
    else{
        cout << ans.first << ' ' << ans.second;
    }
}
