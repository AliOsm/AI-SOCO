#include <bits/stdc++.h>//coded by Nurstan ^_^

#define ll long long
#define pb push_back

#define mp make_pair
#define lb lower_bound
#define ub upper_bound

#define all(x) x.begin(), x.end()
#define F first
#define S second

// fixed << setprecision
// next_permutation(a, a + n)
// set <int> :: iterator it = x.begin(); it != x.end(); it ++

using namespace std;

inline void boost(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
}
vector < pair <int, int> > x;
bool used[11][11];
int main(){
	boost();
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	int n, m;
	cin >> n >> m;
	char a[n][m];
	for(int i = 1;  i <= n; i ++) {
		for(int j = 1; j <= m; j ++) {
			cin >> a[i][j];
			if(a[i][j] == 'W') {
				x.push_back(make_pair(i, j));
			}
		}
	}
	int sum = 0;
	   
	   
	   
	   
	for(int i = 0; i < x.size(); i++) {
		int f = x[i].F, s = x[i].S;
		if(f + 1 <= n && a[f + 1][s] == 'P' && used[f + 1][s] == 0) {
			sum ++;
			used[f + 1][s] = 1;
		}
		else if(f - 1 >= 1 && a[f - 1][s] == 'P' && used[f - 1][s] == 0) {
			used[f - 1][s] = 1;
			sum ++;
		}
		else if(s + 1 <= m && a[f][s + 1] == 'P' && used[f][s + 1] == 0) {
			used[f][s + 1] = 1;
			sum ++;
		}
		else if(s - 1 >= 1 && a[f][s - 1] == 'P' && used[f][s - 1] == 0) {
			used[f][s - 1] = 1;
			sum ++;
		}
	}
	cout << sum;
	exit(0);
}