# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) (x&1)
typedef long long ll;
typedef long double ld;
const ll oo = /*2 * 1000 * 1000 * 1000*/0x3f3f3f3f;
const int _cnt = 1000 * 1000;
const int _p = 1000 * 1000 * 1000 + 7;
ll o(ll x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
//ll gcd(ll a, ll b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }
using namespace std;

void file_put() {
	freopen("filename.in", "r", stdin);
	freopen("filename.out", "w", stdout);
}

int n, t, p = 0;
string st1, st2, ans = "";

char _get(int k) {
	for (int i = 'a'; i <= 'z'; i++)
		if (i != st1[k] && i != st2[k])
			return i;
}

int main() {
	//file_put();

	scanf("%d%d", &n, &t);
	cin.ignore();
	cin >> st1;
	cin.ignore();
	cin >> st2;
	for (int i = 0; i < st1.length(); i++) p += (st1[i] != st2[i]);
	if (p > 2 * t) {
		cout << -1 << endl;
		return 0;
	}
	if (p <= t) {
		int k = t - p;
		for (int i = 0; i < st1.length(); i++) {
			if (st1[i] == st2[i] && k) {
				k--;
				ans += _get(i);
				continue;
			}
			if (st1[i] != st2[i]) {
				ans+=_get(i);
				continue;
			}
			ans += st1[i];
		}
	}
	if (t < p && p <= 2 * t) {
		int a = p - t, b = p - t;
		for (int i = 0; i < st1.length(); i++) {
			if (st1[i] == st2[i]) {
				ans += st1[i];
				continue;
			}
			if (a) {
				a--;
				ans += st1[i];
				continue;
			}
			if (b) {
				b--;
				ans += st2[i];
				continue;
			}
			ans += _get(i);
		}
	}
	cout << ans << endl;

	return 0;
}
