#include<bits/stdc++.h>
#define ll long long
#define fr first
#define sc second
#define pii pair<int,int>
#define pll pair<ll,ll>
#define f(i, x, n) for(int i = x; i < (int)n; ++i)

using namespace std;

int const N = 110, M = 200000, INF = 2e9;
int E, Pa[N], SR, TR, DS[N];
vector<int> G[N];

struct ED{
	int v, cp, cs;
	ED(){}
	ED(int a, int b, int c):v(a), cp(b), cs(c) {}
}Ed[M];

bool path(){
	f(i, 0, N)DS[i] = INF;
	DS[SR] = 0;
	f(i, 0, N)f(j, 0, E){
		int u = Ed[j ^ 1].v, v = Ed[j].v;
		if (DS[u] + Ed[j].cs < DS[v] && DS[u] != INF && Ed[j].cp)DS[v] = DS[u] + Ed[j].cs, Pa[v] = j;
	}
	return DS[TR] != INF;
}

pair<int, int> fix(){
	pair<int, int> an(2e9, 0);
	int v = TR;
	while (v != SR){
		int e = Pa[v];
		an.first = min(an.first, Ed[e].cp);
		an.second += Ed[e].cs;
		v = Ed[e ^ 1].v;
	}
	v = TR;
	while (v != SR){
		int e = Pa[v];
		Ed[e].cp -= an.first;
		Ed[e ^ 1].cp += an.first;
		v = Ed[e ^ 1].v;
	}
	an.second *= an.first;
	return an;
}

inline pair<int, int> MF(int a, int b){
	SR = a, TR = b;
	pair<int, int> an(0, 0);
	while (path()) { pair<int, int> t = fix(); an.first += t.first, an.second += t.second; }
	return an;
}

inline void aded(int a, int b, int w1 = 1, int cst = 0, int w2 = 0){
	Ed[E] = ED(b, w1, cst);
	Ed[E + 1] = ED(a, w2, -cst);
	G[a].push_back(E++);
	G[b].push_back(E++);
}

inline void CL(){
	E = 0;
	f(i, 0, N)G[i].clear();
}

int ty,l,r,x;

int mn[100100];
int mx[100100];

int rep[100100];

int main(){
    int q,n;
    cin>>n>>q;
    for(int i=1 ;i <=n ; i++){
        mn[i] = 1;
        mx[i] = n;
    }
    for(int i=0 ;i <q ;i ++){
        scanf("%d%d%d%d",&ty,&l,&r,&x);
        if(ty ==  1){
            for(int j=l ; j<=r; j++){
                mn[j] = max(mn[j],x);
            }
        }
        else{
            for(int j=l ; j<=r; j++){
                mx[j] = min(mx[j],x);
            }
        }
    }
    int st = 103,en=104;

    for(int i=1 ; i<=n ;i++){
        if(mx[i] < mn[i]){
            cout<<-1;
            return 0;
        }

        for(int j=mn[i] ; j<=mx[i] ;j++){
            aded(j,i+n,1,0);
        }

    }

    for(int i=1;i <=n; i++){
        for(int j=1 ;j<=n; j++){
            aded(st,i,1,j*j-(j-1)*(j-1));
        }
    }

    for(int i=1;i<=n;i++){
        aded(i+n,en,1,0);
    }

    cout<<MF(st,en).sc<<endl;

    return 0;
}
