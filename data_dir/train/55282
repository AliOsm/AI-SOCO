/*
Nahid Hossain
Jahangirnagar University
Roll:54
*/
#include<bits/stdc++.h>
#define ll          long long int
#define db          double
#define pf          printf
#define sf          scanf
#define ff          first
#define ss          second
#define clr         clear()
#define sz          size()
#define pb          push_back
#define mk          make_pair
#define pi          acos(-1)
#define inf         2000000000000000000
#define mod         1000000007
#define ull         unsigned long long int
#define f(i,k,n)    for(i=k;i<n;i++)
#define fr(i,n,k)   for(i=n;i>=k;i--)
#define ent(a)      scanf("%lld",&a)
#define ent2(a,b)   scanf("%lld%lld",&a,&b)
#define ent3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define mem(a)      memset(a,0,sizeof(a))
#define vec(v,s)    vector<ll>v[s]
#define arr(a,s)    ll a[s];
#define bitone(x)   __builtin_popcount(x)
//#define check(n,pos) (n&(1<<pos))
//#define set(n,pos)  (n|(1<<pos))
//knight and king//
int dr[]= {2,2,-2,-2,1,-1,1,-1};
int dc[]= {1,-1,1,-1,2,2,-2,-2};
int dr1[]= {0,0,1,1,1,-1,-1,-1};
int dc1[]= {1,-1,1,0,-1,0,1,-1};
int dr2[]= {0,0,1,-1};
int dc2[]= {1,-1,0,0};
////////////////////////////
using namespace std;
#define ma 2005


#define ma 505


struct edge{
 ll a,b,f,c,cost;

};


vector<ll>adj[ma];
vector<edge>e;
ll s,t,flow,cost;
ll a[ma],p[ma],d[ma],inq[ma];

void add_edge(ll a,ll b,ll cap,ll cost)
{
 edge e1={a,b,0,cap,cost};
 adj[a].pb(e.sz);
 e.pb(e1);
 e1={b,a,0,0,-cost};
 adj[b].pb(e.sz);
 e.pb(e1);

}


bool spfa( )
{
 ll i;

 for(i=0;i<=t;i++)d[i]=inf,inq[i]=0;
 queue<ll>q;
 q.push(s);
 inq[s]=1,d[s]=0,p[s]=0,a[s]=inf;
 while(q.sz>0)
 {
  ll u=q.front();
  q.pop();

  inq[u]=0;
  for(i=0;i<adj[u].sz;i++)
  {
   ll id=adj[u][i];
   ll v=e[id].b;
   if(d[v]>d[u]+e[id].cost&&e[id].f<e[id].c)
   {
    d[v]=d[u]+e[id].cost;
    p[v]=adj[u][i];
    a[v]=min(a[u],e[id].c-e[id].f);
    if(inq[v]==0)
    {
     inq[v]=1;
     q.push(v);
    }
   }

  }

 }







 if(d[t]==inf)return 0;
 flow+=a[t];
 cost+=d[t];
  ll u=t;
 while(u!=s)
 {
  ll r=p[u];
  e[r].f+=a[t];
  e[r^1].f-=a[t];
  u=e[r].a;
 }


 return 1;
}




ll mincost()
{
 while(spfa());
 return cost;
}

string t2[ma];

ll fr[30];


int main()
{
    ll n,i,j,k;
    string t1;
    while(cin>>t1)
    {
        cin>>n;
        for(i=1;i<=n;i++)
        {
            cin>>t2[i]>>a[i];
        }
        s=0,t=n+26+1;

        for(i=0;i<t1.sz;i++)fr[t1[i]-'a'+1]++;

        for(i=1;i<=26;i++)add_edge(s,i,fr[i],0);

        for(i=1;i<=n;i++)add_edge(i+26,t,a[i],0);

        for(i=1;i<=n;i++)
        {
            mem(fr);
            for(j=0;j<t2[i].sz;j++)
            {
                ll x=t2[i][j]-'a'+1;
                fr[x]++;
            }

            for(j=1;j<=26;j++)
            {
                for(k=1;k<=fr[j];k++)add_edge(j,i+26,1,i);
            }
        }

        ll ans=mincost();
        if(flow!=t1.sz)cout<<"-1"<<endl;
        else cout<<cost<<endl;

    }
    return 0;
}
