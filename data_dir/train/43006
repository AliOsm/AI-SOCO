#include <bits/stdc++.h>

#define llong long long

#define pb push_back
#define mp make_pair

using namespace std;

const int MAXN = (int) 2e6 + 7;
const int INF = (int) 1e9 + 7;

int n, m;
int a[MAXN], nxt[MAXN];

long long b[MAXN], sum[MAXN];

int main() {
  #ifdef LOCAL
  freopen("in", "r", stdin);
  #endif

  ios_base::sync_with_stdio(0);

  cin >> n >> m;
  for (int i = 1; i <= n; i++) {
    cin >> a[i];
    a[n + i] = a[i];
  }
  for (int i = 1; i <= n + n; i++)
    sum[i] = sum[i - 1] + a[i];

  for (int i = 1; i <= m; i++) {
    cin >> b[i];
  }

  for (int q = 1; q <= m; q++) {
    int pos = 1;
    for (int i = 1; i <= n + n; i++) {
      while (pos <= n + n && sum[pos] - sum[i - 1] <= b[q])
        pos++;

      nxt[i] = pos;
    }
    int minLen = INF, st = 0;
    for (int i = 1; i <= n; i++) {
      if (nxt[i] - i < minLen) {
        minLen = nxt[i] - i;
        st = i;
      }
    }
    int ans = INF;
    for (int pref = st; pref <= min(n, st + minLen); pref++) {
      int to = pref + n - 1;
      int where = pref;
      int cur = 0;
      while (where <= to) {
        where = nxt[where];
        ++cur;
      }
      ans = min(ans, cur);
    }
    cout << ans << "\n";
  }
  return 0;
}