#include <bits/stdc++.h>
#define M_PI    3.14159265358979323846  /* pi */
#define ff(i,s,n) for(int i=(s);i<(n);i++)
#define fr(i,s,n) for(int i=(n-1);i>=(s);i--)
#define FF(i,s,n) for(int i=(s);i<=(n);i++)
#define Fr(i,s,n) for(int i=(n);i>=(s);i--)
#define FR(i,s,n) for(int i=(n);i>=(s);i--)
#define all(a) a.begin(),a.end()
#define endl '\n'
#define tnm typename
#define invd inline void
#define templ1 template<tnm T>
#define btempl templ1 invd
#define ln prln()
#define sp prsp()
using namespace std;typedef int64_t ll;typedef unsigned int uint;
invd scan(int&i){scanf("%d",&i);}invd scan(double&i){scanf("%lf",&i);}invd scan(ll&i){scanf("%" PRId64 ,&i);}invd pr(string&s){cout<<s;}
invd pr(int i){printf("%d",i);}invd pr(bool b){pr((int)b);}invd pr(double d){printf("%.9lf",d);}invd prln(){putchar('\n');}invd prsp(){putchar(' ');}invd pr(ll i){printf("%" PRId64 ,i);}
invd pr(size_t i){pr((ll)i);}btempl scan(vector<T>&v){for(T&t:v)scan(t);}btempl scan(T*a,int n){while(n--)scan(*a++);}
template<class A, class B> invd pr(pair<A,B> a){pr(a.first),sp,pr(a.second);}
btempl prsp(vector<T>&v){for(T&t:v)pr(t),sp;}btempl prsp(T*a,int n){while(n--)pr(*a++),sp;}btempl prln(vector<T>&v){for(T&t:v)pr(t),ln;}
btempl prln(T*a,int n){while(n--)pr(*a++),ln;}btempl prln(vector<vector<T> >&v){for(vector<T>&t:v)prsp(t),ln;}
invd scan(string&s){int c;while((c=getchar())=='\n'||c==' '||c=='\r');do{switch(c){case'\n':case'\r':case' ':return;default:s+=c;}}while((c=getchar())!=EOF);};
btempl scan(char*s){int c;while((c=getchar())){switch(c){case'\n':case'\r':case' ':break;default:*s++=c;}}*s=0;};
template<typename T, typename... Args>invd scan(T&first, Args (&... args)) {scan(first),scan(args...);}
template<typename T, typename... Args>invd pr(T first, Args... args) {pr(first),sp,pr(args...);}
templ1 vector<T>& operator+=(vector<T>& v,T x) {v.push_back(x);return v;}
templ1 vector<T>& operator--(vector<T>& v) {v.pop_back();return v;}templ1 vector<T>& operator--(vector<T>& v,int) {v.pop_back();return v;}
templ1 bool operator!(stack<T>&q) {return !q.empty();}templ1 stack<T>& operator+=(stack<T>& v,T x) {v.push(x);return v;}
templ1 T operator--(stack<T>& v) {v.pop();return v.top();}templ1 T operator--(stack<T>& v,int) {T t=v.top();v.pop();return t;}
templ1 bool operator!(queue<T>&q) {return !q.empty();}templ1 queue<T>& operator+=(queue<T>& v,T x) {v.push(x);return v;}
templ1 T operator--(queue<T>& v) {v.pop();return v.front();}templ1 T operator--(queue<T>& v,int) {T t=v.front();v.pop();return t;}
template<tnm T,tnm U>invd smax(T&a,U b){if(b>a)a=b;}template<tnm T,tnm U>invd smin(T&a,U b){if(b<a)a=b;}
template<tnm T,tnm U>inline T gcd(T a, U b){return __gcd(a,b);}typedef vector<int> vi;typedef vector<vi > vvi;typedef pair<int, int> pii;
typedef vector<pii > vpii;invd init();
const ll MOD = 1E9+7;
const int INF=MOD;

double ex=0;
stack<pii> q;

double dd(pii a, pii b){
  return sqrt((a.first-b.first)*(a.first-b.first)+(a.second-b.second)*(a.second-b.second));
}

void adstr(pii a, pii b, pii c, pii d){
  stack<pii> p;
  double t=0;
  p+=a;
  t+=dd(p.top(),b);
  p+=b;
  t+=dd(p.top(),c);
  p+=c;
  t+=dd(p.top(),d);
  p+=d;
  if(t>ex)q.swap(p),ex=t;
}

vpii acts;



int main(){
  int n, m;
  scan(n,m);
  acts+={0,0};
  if(n>0)acts+={1,0};
  if(m>0)acts+={0,1};
  acts+={n,0};
  if(n>0)acts+={n-1,0};
  if(m>0)acts+={n,1};
  acts+={n,m};
  if(n>0)acts+={n-1,m};
  if(m>0)acts+={n,m-1};
  acts+={0,m};
  if(n>0)acts+={1,m};
  if(m>0)acts+={0,m-1};
  for(pii a:acts){
    for(pii b:acts){
      if(b==a)continue;
      for(pii c:acts){
        if(c==b||c==a)continue;
        for(pii d:acts){
          if(d==c||d==b||d==a)continue;
          adstr(a,b,c,d);
        }
      }
    }
  }
  while(!q)pr(q.top().first,q.top().second),ln,--q;
}

invd init(){
#ifndef ONLINE_JUDGE
    freopen("xx/3.txt","r",stdin);
#endif
}
