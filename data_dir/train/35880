#include <iostream>
#include <vector>
#include <string>
#include <set>
//#include <unordered_set>
#include <fstream>
#include <map>
#include <sstream>
//#include <unordered_map>
//#include <random>
#include <stack>
//#include <stdio.h>
#include <algorithm>
#include <cmath>

//#include <ctime>

using namespace std;
#define ll long long
#define MOD 1000000007
#define mp(a, b) make_pair(a, b)
#define PI 3.1415926535
#define EPS 0.00000001
#define pii pair<int, int>
const ll INF = 1000000002ll * 1000000002ll;
#define DEBUG 41

#ifndef DEBUG

ifstream in("history.in");
ofstream out("history.out");

#define cin in
#define cout out

#endif
int co = 1;
int a[1234];
int n, m;

int al(int x)
{
	for(int i = 0; i < m; ++i)
	{
		if(a[i] == -1)
		{
			int c = 1;
			for(int j = i; j < m; ++j)
			{
				if(a[j+1] == -1)
					++c;
				else
					break;
			}
			if(c >= x)
			{
				for(int j = 0; j < x; ++j)
					a[j+i] = co;
				return co++;
			}
			else
				i += c-1;
		}
	}
	return -1;
}

bool er(int b)
{
	for(int i = 0; i < m; ++i)
	{
		if(a[i] == b)
		{
			while(a[i] == b)
			{
				a[i] = -1;
				++i;
			}
			return true;
		}
	}
	return false;
}

void de()
{
	vector<int> b;
	for(int i = 0; i < m; ++i)
		if(a[i] != -1)
			b.push_back(a[i]);
	for(int i = 0; i < b.size(); ++i)
		a[i] = b[i];
	for(int i = b.size(); i < m; ++i)
		a[i] = -1;
}


int main()
{
    ios_base::sync_with_stdio(0);
	cin.tie(0);
	cin >> n >> m;
	for(int i = 0; i < m; ++i)
		a[i] = -1;
	for(int i = 0; i < n; ++i)
	{
		string s;
		cin >> s;
		if(s == "alloc")
		{
			int b;
			cin >> b;
			int ans = al(b);
			if(ans == -1)
				cout << "NULL\n";
			else
				cout << ans << "\n";
		}
		if(s == "erase")
		{
			int b;
			cin >> b;
			if(b <= 0)
			{
				cout << "ILLEGAL_ERASE_ARGUMENT\n";
				continue;
			}
			bool ans = er(b);
			if(!ans)
			cout << "ILLEGAL_ERASE_ARGUMENT\n";
		}
		if(s == "defragment")
			de();
	}
}

/*

*/