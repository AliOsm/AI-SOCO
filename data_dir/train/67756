#include<bits/stdc++.h>

#define FOR(i,a,b) for(auto i=a; i!=b+1-2*(a>b); i+=1-2*(a>b))
#define REP(i,a,b) for(auto i=a-(a>b); i!=b-(a>b); i+=1-2*(a>b))
#define ALL(v) v.begin(),v.end()
#define what_is(x) cout<<#x<<" is "<<x<<endl;
#define min3(a,b,c) min(min(a,b),c)
#define max3(a,b,c) max(max(a,b),c)
#define SIZE 200010
#define MAXN 1000000007
#define NUM 1000000
#define PI 3.141592653589793
#define open_read1 freopen("C:\\Users\\Hepic\\Desktop\\a.txt","r",stdin)
#define open_write1 freopen("C:\\Users\\Hepic\\Desktop\\b.txt","w",stdout)
#define open_read freopen("hamming.in","r",stdin)
#define open_write freopen("hamming.out","w",stdout)

using namespace std;


typedef long long LL;
typedef pair<int,int> PII;


LL N, W, lessBoy, lessGirl;
LL capacities[SIZE];
double Tbeg, Tend, Tmid;


bool check(double X)
{
    double canGirls = lessGirl*N;
    double canBoys = lessBoy*N;

    double takeBoys = (2*X) / 3;
    double takeGirls = takeBoys / 2;

    if(takeBoys <= canBoys  &&  takeGirls <= canGirls)
        return true;

    return false;
}



int main()
{
    //open_read1;
    scanf("%I64d%I64d", &N, &W);

    REP(i, 0, 2*N)
        scanf("%I64d", capacities+i);


    sort(capacities, capacities+(2*N));


    lessGirl = capacities[0];
    lessBoy = capacities[N];

    Tbeg = 0, Tend = W;


    while(Tend-Tbeg > 0.000001)
    {
        Tmid = (Tbeg+Tend) / 2;

        if(check(Tmid))
            Tbeg = Tmid;
        else
            Tend = Tmid;
    }


    printf("%.10f\n", Tbeg);

    return 0;
}
