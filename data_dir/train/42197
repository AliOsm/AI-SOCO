#include <bits/stdc++.h>

using namespace std;

#define mem(a,b) memset(a,b,sizeof(a))
#define FOR(i,j,k) for(int i=j;i<=k;i++)
#define REV(i,j,k) for(int i=j;i>=k;i--)
#define FORR(i,j,k,l) for(int i=j;i<=k;i+=l)
#define inf         freopen("in.txt", "r", stdin)
#define outf        freopen("out.txt", "w", stdout)
#define pf          printf
#define sf(n)       scanf("%d", &n)
#define sff(a,b)    scanf("%d %d", &a, &b)
#define sfff(a,b,c)    scanf("%d %d %d", &a, &b, &c)
#define clean(mat,n)   FOR(i,0,n) mat[i].clear()
#define minn          (long long)-1000000000000000000
#define maxx          (long long) 1000000000000000000
#define mod          1000000007
#define M_PI           3.14159265358979323846  /* pi */
#define LL           long long
#define NL '\n'
#define cnd tree[idx]
#define lnd (idx<<1)
#define rnd ((idx<<1)+1)
#define PB push_back
#define F first
#define S second
#define MAX 200010
#define MP make_pair
#define valid(nx,ny)  ((nx >= 0) && (nx < row) && (ny >= 0) && (ny < col))
typedef pair<int,int> pr;

int ar[MAX], w, l, br[MAX], cr[MAX];

int chk(int val)
{
    mem(cr, 0);
    FOR(i,2,w + 1) br[i] = ar[i];

    cr[1] = val;
    int use = 1;

    FOR(i,2,w+1)
    {
        while(cr[use] == 0 && use <= i)
        {
            use++;
        }
        ///cout << i <<  ' ' << use << endl;
        int cnt = 0;

        while(br[i] && use < i)
        {
            while(cr[use] == 0 && use < i)
            {
                use++;
            }
            if(use == i) break;

            if(i - use <= l && use < i)
            {
                if(cr[use] <= br[i])
                {
                    ///cout << i << ' ' << use << ' ' << cr[use] << endl;
                    cnt += cr[use];
                    br[i] -= cr[use];
                    cr[use] = 0;
                }
                else
                {
                    ///cout << i << ' ' << use << ' ' << cr[use] << "ok" << endl;
                    cr[use] = cr[use] - br[i];
                    cnt += br[i];
                    br[i] = 0;
                }
            }
            else break;
        }

        if(cnt) cr[i] += cnt;
    }

    if(cr[w + 1] == val) return 1;
    return 0;
}

int main()
{
    ios::sync_with_stdio(false);
    ///inf;
    //outf;

    int low = 0, high = 0, mid, v = 0, a;

    cin >> w >> l;

    FOR(i,2,w) cin >> ar[i], high += ar[i];
    ar[w + 1] = high;

    ////cout << chk( 3 ) << endl;


    while(low <= high)
    {
        mid = (low + high)>>1;

        a = chk(mid);
        ///c/out << mid << ' ' << a << endl;
        if(a == 1) low = mid + 1, v = max(v, mid);
        else high = mid - 1;
       /// cout << low << ' ' << high << endl;
    }

    cout << v << endl;

    return 0;
}