#include <cstdio>
#include <algorithm>
using namespace std;
int a[8][3];
int b[36][3] = {
{0,1,2},
{0,1,3},
{0,2,3},
{1,2,3},
{0,1,4},
{0,2,4},
{1,2,4},
{0,3,4},
{1,3,4},
{2,3,4},
{0,1,5},
{0,2,5},
{1,2,5},
{0,3,5},
{1,3,5},
{2,3,5},
{0,4,5},
{1,4,5},
{2,4,5},
{3,4,5},
{0,1,6},
{0,2,6},
{1,2,6},
{0,3,6},
{1,3,6},
{2,3,6},
{0,4,6},
{1,4,6},
{2,4,6},
{3,4,6},
{0,5,6},
{1,5,6},
{2,5,6},
{3,5,6},
{4,5,6},
};
int p[3];
inline long long sq(long long x) { return x * x; }
long long dot(int pp[3], int qq[3]) {
	long long res = 0;
	for (int i = 0; i < 3; i++) {
		res += (long long)pp[i] * qq[i];
	}
	return res;
}
long long d[3] = {};
int dd[3][3] = {};
inline int issame(int pp[3], int qq[3]) {
	for (int i = 0; i < 3; i++) {
		if (pp[i] != qq[i]) return 0;
	}
	return 1;
}
int v[8];
int ismatch(int pp[3]) {
	int qq[3] = {pp[0], pp[1], pp[2]};
	sort(pp, pp+3);
	for (int j = 0; j < 7; j++) {
		if (v[j]) continue;
		if (issame(pp, a[j])) {
			v[j] = 1;
			for (int i = 0; i < 3; i++) {
				a[j][i] = qq[i];
			}
			return j;
		}
	}
	return -1;
}
int go2(int i, int st) {
	int pp[3], qq[3];
	if (i == 3) {
		for (int k = 0; k < 3; k++) {
			pp[k] = a[7][k] + dd[0][k] + dd[1][k] + dd[2][k];
		}
		qq[0] = ismatch(pp);
		if (qq[0] != -1) {
			return 1;
		}
		return 0;
	}
	for (int j = st; j < 5+i; j++) {
	
	if (v[j]) continue;
	p[i] = j;
	v[j] = 1;
	sort(a[j], a[j]+3);
	do {
		int f = 1;
		d[i] = 0;
		f &= !issame(a[p[i]], a[7]);
		for (int l = 0; l < 3; l++) {
			dd[i][l] = a[p[i]][l] - a[7][l];
			d[i] += sq(dd[i][l]);
		}
		for (int k = 0; k < i; k++) {
			f &= d[i] == d[k];
			f &= dot(dd[i], dd[k]) == 0ll;
			f &= !issame(a[p[i]], a[p[k]]);
		}
		for (int k = 0; k < i; k++) {
			for (int l = 0; l < 3; l++) {
				pp[l] = a[7][l] + dd[k][l] + dd[i][l];
			}
			qq[k] = ismatch(pp);
			if (qq[k] == -1) f = 0;
		}
		if (f && go2(i+1, j+1)) {
			return 1;
		}
		for (int k = 0; k < i; k++) {
			if (qq[k] != -1) {
				v[qq[k]] = 0;
				sort(a[qq[k]], a[qq[k]]+3);
			}
		}
	} while (next_permutation(a[p[i]], a[p[i]]+3));
	v[j] = 0;
	
	}
	return 0;
}
int go() {
	sort(a[7], a[7]+3);
	do {
		if (go2(0, 0)) {
			return 1;
		}
	} while (next_permutation(a[7], a[7]+3));
	return 0;
}
int main() {
	for (int i = 0; i < 8; i++) {
		for (int j = 0; j < 3; j++) {
			scanf("%d", &a[i][j]);
		}
	}
	int f;
	printf("%s\n", (f = go()) ? "YES" : "NO");
	if (f) {
		for (int i = 0; i < 8; i++) {
			for (int j = 0; j < 3; j++) {
				printf("%d ", a[i][j]);
			}
			printf("\n");
		}
	}
	return 0;
}
