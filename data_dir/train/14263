/*
 * test.cpp
 *
 *  Created on: Sep 26, 2016
 *      Author: SCE15-0683
 */

#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<iomanip>
#include<fstream>
#include<bitset>
#include<cstring>
#include<cstdlib>
#include<complex>
#include<list>
#include<sstream>

using namespace std;

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<int,ii> iii;
typedef pair<int,il> iil;
typedef pair<li,ii> liii;
long long mod = 1000000007LL;
long long base = 37;
long long large = 1000000000000000000LL;

int n,m;

int d;
long long dd,x,y;
long long di;
//|x|+|y| is the minimum value
void gcdE(long long a,long long b,long long& d,long long& x,long long& y){
	if(!b){
		d=a;
		x=1;
		y=0;
	}else{
		gcdE(b,a%b,d,y,x);
		y-=x*(a/b);
	}
}

int gcd(int x,int y){
	if(y==0) return x;
	return gcd(y,x%y);
}


long long check(int a,int b){
	if(abs(b-a)%d!=0) return large;
	int t = (b-a)/d;
	long long temp = x*t;
	temp%=di;
	temp+=di;
	temp%=di;
	return temp*2*n+a;
}

int main(){
	int k;
	cin>>n>>m>>k;
	d=gcd(2*n,2*m);
	gcdE(2*n,2*m,dd,x,y);
	di=2*m/d;
	while(k--){
		int x,y;
		scanf("%d%d",&x,&y);
		long long ans = large;
		ans=min(ans,check(x,y));
		ans=min(ans,check(2*n-x,y));
		ans=min(ans,check(x,2*m-y));
		ans=min(ans,check(2*n-x,2*m-y));
		if(ans==large){
			printf("-1\n");
		}else{
			printf("%I64d\n",ans);
		}
	}
	return 0;

}

