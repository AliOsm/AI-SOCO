#include <bits/stdc++.h>

using namespace std;
typedef long long intt;
#define pb push_back
#define mk make_pair
#define sc second
#define fr first
int bsp(int hd,int z,int s)
{
    intt st=0,en=1e9;
    while(st<=en)
    {
        intt mid=(st+en)/2;
        intt f=s+(z*mid);
        if(f>hd)
        {
            en=mid-1;
        }
       else if(f<hd)
        {
            st=mid+1;
        }
        else
        {
            return mid;
        }
    }
    return -1;
}
int bsn(int hd,int z,int s)
{
    intt st=0,en=1e9;
    while(st<=en)
    {
        intt mid=(st+en)/2;
        intt f=s-(z*mid);
        if(f>hd)
        {
            st=mid+1;
        }
        else if(f<hd)
        {
            en=mid-1;
        }
        else
        {
            return mid;
        }
    }
    return -1;
}
int bns1(int z,int s)
{
    intt st=0,en=1e9;
    intt minn=1e12;
    while(st<=en)
    {
        intt mid=(st+en)/2;
        intt f=s-(z*mid);
        if(f<=1)
        {
            minn=min(minn,mid);
            en=mid-1;
        }
        else
        {
            st=mid+1;
        }
    }
    return minn;
}
int bnsn(int z,int s,int n)
{
    intt st=0,en=1e9;
    intt minn=1e12;
    while(st<=en)
    {
        intt mid=(st+en)/2;
        intt f=s+(z*mid);
        if(f>=n)
        {
            minn=min(minn,mid);
            en=mid-1;
        }
        else
        {
            st=mid+1;
        }
    }
    return minn;
}

int main()
{
    intt t;
    cin>>t;
    while(t--)
    {
        intt n,x,y,d;
        cin>>n>>x>>y>>d;
        if(x%d==y%d)
        {
            intt res1=bsp(y,d,x);
            intt res2=bsn(y,d,x);
            if(res1!=-1)
            {
                cout<<res1<<endl;
            }
            else
            {
                cout<<res2<<endl;
            }
        }
        else
        {
            intt res1=1e12,res2=1e12;
            if(1%d==y%d)
            {
                res1=bsp(y,d,1)+bns1(d,x);

            }
            if(n%d==y%d)
            {
                res2=bsn(y,d,n)+bnsn(d,x,n);
            }
            if(min(res1,res2)==1e12)
            {
                cout<<"-1"<<endl;
            }
            else
            {
                cout<<min(res1,res2)<<endl;
            }

        }

    }
    return 0;
}

