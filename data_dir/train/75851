// Charan Sriramula

#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll logx=30;
const ll N=1e6+5;
const ll INF=1e18+5;
const ll mod=1e9+7;
const double PI = 3.14159265358979323846;

#define ints(n) scanf("%d",&n)
#define intp(n) printf("%d\n",n)
#define longs(n) scanf("%intd",&n)
#define longp(n) printf("%intd\n",n)

inline ll mul(ll a, ll b, ll p){ return (a * 1ll * b) % p; }
inline ll sub(ll a, ll b, ll p){ ll c = a - b; if(c < 0) c += p; return c; }
inline ll add(ll a, ll b, ll p){ ll c = a + b; if(c > p) c -= p; return c; }

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcountll(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define ms(dp,val) memset(dp,val,sizeof(dp))
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1ll;x=(x*x)%m;}return ans%m;}

#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl

int n,a[N],dp[701][701][2],gcx[701][701];

bool F(int idx,int root,int f)
{
  int l,r;
  bool ans=false;
  if(f){l=root+1;r=idx;}
  else{l=idx;r=root-1;}
  if(l>r){return true;}
  if(l==r){return gcx[root][l];}
  if(dp[idx][root][f]!=-1){return dp[idx][root][f];}
  for(int i=l;i<=r;i++)
  {
    //int gcx=__gcd(a[root],a[i]);
    if(gcx[root][i]==0){continue;}
    ans|=(F(l,i,0)&F(r,i,1));
    if(ans){break;}
  }
  return dp[idx][root][f]=ans;
}

int main()
{
  fast;
  cin>>n;
  ms(dp,-1);
  bool ans=false;
  for(int i=1;i<=n;i++){cin>>a[i];}
  for(int i=1;i<=n;i++)
  {
    for(int j=1;j<=n;j++)
    {
      if(__gcd(a[i],a[j])==1){continue;}
      gcx[i][j]=1;
      gcx[j][i]=1;
    }
  }
  for(int root=1;root<=n;root++)
  {
    ans|=(F(1,root,0)&F(n,root,1));
    if(ans){cout<<"Yes"<<endl;exit(0);}
  }
  cout<<"No"<<endl;
}