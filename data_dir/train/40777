#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define int long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;
typedef  tree< int , null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N = 2111;
string s[N];
int ans[N][N];
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt","w", stdout);
    int h, w, k;
    cin >> h >> w >> k;
    int n = 0;
    int e = 0;
    for (int i = 1; i < h + h; i++){
        cin >> s[i];
        n += s[i].length();
        for (int j = 0; j < s[i].length(); j++) if (s[i][j] == 'E') e++;
    }
    if (k == 1){
        if (3 * n > 4 * e){
            cout << "NO";
        } else{
            cout << "YES" << endl;
            for (int i = 1; i <= h; i++, cout << endl){
                for (int j = 1; j <= w; j++){
                    cout << ans[i][j] + 1 << " ";
                }
            }
        }
        return 0;
    }
    if ((h - 1) * w > (w - 1) * h){
        for (int i = 1; i <= w; i++){
            ans[1][i] = 1;
        }
        for (int i = 2; i < h + h; i += 2){
            int x = i / 2;
            for (int j = 1; j <= w; j++){
                if (s[i][j - 1] == 'E'){
                    ans[x + 1][j] = ans[x][j];
                } else{
                    ans[x + 1][j] = ans[x][j] ^ 1;
                }
            }
        }
        for (int i = 1; i < w; i++){
            int c = 0;
            for (int j = 1; j <= h; j++){
                if (ans[j][i] == ans[j][i + 1] && s[j + j - 1][i - 1] == 'E') c++; else
                if (ans[j][i] != ans[j][i + 1] && s[j + j - 1][i - 1] == 'N') c++;
            }
            if (c + c < h){
                for (int j = 1; j <= h; j++){
                    ans[j][i + 1] ^= 1;
                }
            }
        }
        cout << "YES" << endl;
        for (int i = 1; i <= h; i++, cout << endl){
            for (int j = 1; j <= w; j++){
                cout << ans[i][j] + 1 << " ";
            }
        }
    } else{
        for (int i = 1; i <= h; i++){
            ans[i][1] = 1;
        }
        for (int i = 1; i < w; i++){
            int x = (i + 1) / 2;
            for (int j = 1; j <= h; j++){
                if (s[j + j - 1][i - 1] == 'E'){
                    ans[j][i + 1] = ans[j][i];
                } else{
                    ans[j][i + 1] = ans[j][i] ^ 1;
                }
            }
        }
        for (int i = 1; i < h; i++){
            int c = 0;
            for (int j = 1; j <= w; j++){
                if (ans[i][j] == ans[i + 1][j] && s[i + i][j - 1] == 'E') c++; else
                if (ans[i][j] != ans[i + 1][j] && s[i + i][j - 1] == 'N') c++;
            }
            if (c + c < w){
                for (int j = 1; j <= w; j++){
                    ans[i + 1][j] ^= 1;
                }
            }
        }
        cout << "YES" << endl;
        for (int i = 1; i <= h; i++, cout << endl){
            for (int j = 1; j <= w; j++){
                cout << ans[i][j] + 1 << " ";
            }
        }
    }
}
