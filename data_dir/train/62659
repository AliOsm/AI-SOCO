#include <iostream>
#include <cstdio>
#include <cstring>
#include <queue>
#include <vector>
#include <map>
#include <algorithm>
#define lowbit(x) ((x) & (-(x)))
using namespace std;
typedef long long LL;
const int N = 105;
const int LIM = 110005;
int cost[N] , val[N] , n , k , a[N] , b[N];
int dp[LIM * 2] , id[N];
bool cmp (int i , int j) {
    return a[i] > a[j];
}
int main () {
    #ifndef ONLINE_JUDGE
        freopen ("input.txt" , "r" , stdin);
    #endif
    cin >> n >> k;
    for (int i = 0 ; i < n ; i ++)
        cin >> a[i];
    for (int i = 0 ; i < n ; i ++)
        cin >> b[i];
    for (int i = 0 ; i < n ; i ++) {
        id[i] = i;
    }
    sort (id , id + n , cmp);
    for (int i = 0 ; i < n ; i ++) {
        cost[i] = a[id[i]] - b[id[i]] * k;
        val[i] = a[id[i]];
    }
    memset (dp , -1 , sizeof(dp));
    dp[LIM] = 0;
    for (int i = 0 ; i < n ; i ++) {
        if (cost[i] >= 0) {
            for (int j = 2 * LIM - 1 ; j >= cost[i] ; j --) {
                if (dp[j - cost[i]] == -1) continue;
                dp[j] = max (dp[j] , dp[j - cost[i]] + val[i]);
            }
        }
        else {
            for (int j = 0 ; j - cost[i] < 2 * LIM ; j ++) {
                if (dp[j - cost[i]] == -1) continue;
                dp[j] = max (dp[j] , dp[j - cost[i]] + val[i]);
            }
        }
    }
    if (dp[LIM] <= 0) puts ("-1");
    else cout << dp[LIM] << endl;
    return 0;  
}