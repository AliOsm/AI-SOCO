//Be Name Khoda
//no comment...
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
template <typename T> using ordered_multiset =  tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;
typedef long long ll;
typedef long double ld;
const int MOD = (int)1e9 + 7;
const int MAXN = (int)1e5 + 7;
const int infint = (int)1e9;
const ll inf = (ll)1e18;
ll dp[MAXN][2], a[MAXN];
vector<ll> G[MAXN];
void dfs(ll u, ll par)
{
	for (auto v : G[u])
		if(v != par)
		{
			dfs(v, u);
			dp[u][0] = max(dp[u][0], dp[v][0]);
			dp[u][1] = max(dp[u][1], dp[v][1]);
		}
	a[u] -= dp[u][0] - dp[u][1];
	if(a[u] > 0)
		dp[u][0] += a[u];
	else
		dp[u][1] += -a[u];
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	ll n;
	cin >> n;
	for (int i = 0; i < n - 1; i++)
	{
		int u, v;
		cin >> u >> v;
		G[u].push_back(v);
		G[v].push_back(u);
	}
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	dfs(1, -1);
	cout << dp[1][0] + dp[1][1];
}
