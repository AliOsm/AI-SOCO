#include <bits/stdc++.h>

using namespace std;
using i64 = long long;


int main() {
    std::ios::sync_with_stdio(false); 
    cin.tie(nullptr);
    
    int x1, y1, x2, y2, n;
    string s;
    cin >> x1 >> y1 >> x2 >> y2 >> n >> s;

    constexpr i64 INF = 1'000'000'000'000'000;
    i64 low = 1, high = INF, ans = high;
    while (low <= high) {
        i64 mid = (low + high) / 2;
        i64 full_it = mid / n;
        int steps_left = mid % n;
        i64 cur_x = x1, cur_y = y1;
        for (int i = 0; i < n; ++i) {
            cur_x += full_it * ((s[i] == 'R') - (s[i] == 'L'));
            cur_y += full_it * ((s[i] == 'U') - (s[i] == 'D'));
        }
        for (int i = 0; i < steps_left; ++i) {
            cur_x += ((s[i] == 'R') - (s[i] == 'L'));
            cur_y += ((s[i] == 'U') - (s[i] == 'D'));
        }

        i64 dist = abs(x2 - cur_x) + abs(y2 - cur_y);
        if (dist <= mid) {
            high = mid - 1;
            ans = mid;
        } else {
            low = mid + 1;
        }
    }

    cout << (ans == INF ? -1 : ans) << "\n";

    return 0;
}