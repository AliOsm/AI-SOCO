

#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES
#include <iostream>
#include <vector>
#include <algorithm>
#include <stack>
#include <string>
#include <assert.h>
#include <queue>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <random>
#include <cmath>
#include <chrono>
#include <bitset>

#define ld long double
#define pb push_back
#define eb emplace_back
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()

#define int long long
using namespace std;

const int INF = 2e15;
const int MOD = 1e9 + 7;
const int MB = 20;

vector<pair<int, int>> b;
vector<pair<int, int>> a;

void rec(int l, int r, int h) {
	if (l + 1 == r) return;
	int m = (r + l) >> 1;
	rec(l, m, h - 1);
	rec(m, r, h - 1);

	sort(a.begin() + l, a.begin() + r);


	int one = 0;
	int two = 0;

	for (int i = l; i < r;) {
		int left = 0, right = 0;
		int rr = i;
		if (a[i].second < m) left++;
		else right++;
		while (rr < r - 1 && a[rr + 1].first == a[rr].first)  {
			rr++;
			if (a[rr].second < m) left++;
			else right++;
		}
		b[h].first += left * two;
		one += left;
		two += right;
		b[h].second += (m - l - two) * left;
		i = rr + 1;
	}
}

void solve() {
	int n;
	cin >> n;
	a.resize(1 << n);
	for (int i = 0; i < (1 << n); i++) {
		cin >> a[i].first;
		a[i].second = i;
	}

	b.resize(n + 1);
	rec(0, 1 << n, n);


	int q;
	cin >> q;
	for (int i = 0; i < q; i++) {
		int p;
		cin >> p;
		int sum = 0;
		for (int bit = 0; bit <= n; bit++) {
			if (bit <= p) swap(b[bit].first, b[bit].second);
			sum += b[bit].first;
		}
		cout << sum << '\n';
	}
}

signed main() {
	/*
	freopen("search.in", "r", stdin);
	freopen("search.out", "w", stdout);
	*/
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	cout.precision(12);
	solve();
}