//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,avx,avx2")
#include <bits/stdc++.h>
 
using namespace std;
 
#define PB push_back
#define MP make_pair
#define EB emplace_back
#define f first
#define s second
#define FOR(i,a,b) for (int i = a; i < (b); ++i)
#define RFOR(i, b, a) for (int i = b-1; i>=a; --i)
#define FILL(a, b) memset(a, b, sizeof a)
#define ALL(a) a.begin(), a.end()
#define SZ(a) ((int)a.size())
#define bitc(n) __builtin_popcount(n)
#define MAGIC0 mt19937 rnd(time(0)); //rnd()
 
typedef long long LL;
typedef unsigned long long ULL;
typedef vector<int> VI;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
 
const int INF = 1000 * 1000 * 1000 + 7;
const LL LINF = 1LL * INF*INF;
const int MAX = 1e6 + 7;
const double PI = acos(-1.);
const double EPS = 1e-7;
const int MAXN = 3 * 100007;

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); 

LL dp[MAXN][3];

void solve()
{
	int n;
	cin >> n;
	vector<LL> a(n), b(n);
	FOR(i, 0, n)
	{
		dp[i][0] = dp[i][1] = dp[i][2] = LINF;
		cin >> a[i] >> b[i];
	}
	
	FOR(i, 0, n)
	{
		FOR(j, 0, 3)
		{
			if (i == 0)
			{
				dp[i][j] = j * b[i];
				continue;
			}
			FOR(k, 0, 3)
			{
				if (a[i - 1] + k != a[i] + j)
				{
					dp[i][j] = min(dp[i][j], dp[i - 1][k] + b[i] * j);
				}
			}
		}
	}

	cout << min({dp[n-1][0], dp[n-1][1], dp[n-1][2]}) << "\n";
}

int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	int q;
	cin >> q;
	
	while(q--)
	{
		solve();
	}
	
	return 0;
}
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

