// In the name of god
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iomanip>
#include <ctime>
#include <queue>
#include <set>
#include <map>
#include <vector>
#include <list>
#include <bitset>
#define sqr(a) ((a)*(a))
#define all(a) (a).begin(), (a).end()
using namespace std;
 
template <typename T>
T next_int() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if(ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return p * x;
}
 
string next_token() {
    char ch;
    string ans = "";
    do { ch = getchar(); } while(ch <= ' ');
    while(ch > ' ') {
        ans += ch;
        ch = getchar();
    }
    return ans;
}
 
const long long INF = (long long)1e18;
const int INFINT = (int)1e9 + 227 + 1;
const int MAXN = (int)1e6 + 227 + 1;    
const int MOD = (int)1e9 + 7;
const long double EPS = 1e-9;

long long bin_pow(long long a, long long b) {
    if(!b) return 1;
    long long ans = bin_pow(a, b / 2);
    ans = ans * ans;
    if(b % 2) ans = ans * a;
    return ans;
}

int main() {
    // freopen(".in", "r", stdin);

    long long x, y, l, r; cin >> x >> y >> l >> r;

    vector<long long> q;
    for(int st_x = 0; st_x <= 70; st_x++) {
        if(log10(x) * st_x - EPS > 18) break;
        for(int st_y = 0; st_y <= 70; st_y++) {
            if(log10(y) * st_y - EPS > 18) break;

            long long heh = bin_pow(x, st_x) + bin_pow(y, st_y);

            if(heh >= l && heh <= r) 
                q.push_back(heh);
        }
    }
    q.push_back(l - 1);
    q.push_back(r + 1);

    sort(all(q));

    long long ans = 0;
    for(int i = 1; i < q.size(); i++)
        ans = max(ans, q[i] - q[i - 1] - 1);

    cout << ans << "\n";
}
