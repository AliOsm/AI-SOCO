#include <bits/stdc++.h>
typedef long long ll ;
using namespace std;

map < string , bool > exsit ;

map < string , int > ms ;
map < int , string > mi ;

vector < vector < int > > ve(100500);

string ans ;
bool vis[100500];
void dfs(int node)
{
       vis[node] = true ;

       ans = mi[node] ;

       for(auto child : ve[node])
               if(!vis[child])
                     dfs(child);
}

int main()
{
    ios::sync_with_stdio(false);

    int n ; cin >> n ;

    int cur = 0 ;
    for(int i = 0 ; i < n ; i++){
            string old , new_ ;
            cin >> old >> new_ ;
            if(exsit[new_]) continue ;

            if(!ms[old]) {
                 ms[old] = cur ;
                 mi[cur] = old ;
                 cur++ ;
            }
            if(!ms[new_]){
                   ms[new_] = cur ;
                   mi[cur] = new_ ;
                   cur++ ;
            }

            ve[ms[old]].push_back(ms[new_]);

            exsit[new_] = true;
            exsit[old] = false ;
    }

    vector < pair < string , string > > res ;
    for(int i = 0 ; i < cur ; i++){
           if(!vis[i]){
                   dfs(i);
                   res.push_back({mi[i] , ans});
           }
    }
    cout << res.size() << endl ;
    for(auto x : res) {
          cout << x.first << " " << x.second << endl ;
    }


    return 0;
}
