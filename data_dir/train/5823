#include<bits/stdc++.h>
using namespace std;
typedef int ll;
typedef long double ld;
typedef pair<ll,ll> p2;
ll spf[1000005],cnt[1000005],sum,f,hell=pow(10,6);
vector<vector<ll>> g(1000005);
vector<ll> pr,c;
vector<ll> res;
void func(ll i,ll val){
	if(i==ll(pr.size())){
		sum+=cnt[val];
		if(f){
			for(ll j=0;j<ll(g[val].size());j++)
			res.push_back(g[val][j]);
		}
		return;
	}
	ll p=1;
	for(ll j=0;j<=c[i];j++){
		func(i+1,val*p);
		p*=pr[i];
	}
}
void solve(){
	ll n,m,tr=1,hi=0;
	cin>>n>>m;
	for(ll i=0;i<n;i++){
		ll x;
		cin>>x;
		if(x<=hell){
			cnt[x]++;
			g[x].push_back(i);
		}
	}
	for(ll i=1;i<=m;i++){
		ll x=i,prev=1;
		pr.push_back(1),c.push_back(0);
		while(x>1){
			if(spf[x]!=prev){
				prev=spf[x];
				pr.push_back(spf[x]);
				c.push_back(0);
			}
			c.back()++;
			x/=spf[x];
		}
		func(0,1);
		if(sum>hi){
			hi=sum;
			tr=i;
		}
		pr.clear();
		c.clear();
		sum=0;
	}
	cout<<tr<<" "<<hi<<"\n";
	ll prev=1;
	pr.push_back(1),c.push_back(0);
	while(tr>1){
		if(spf[tr]!=prev){
			prev=spf[tr];
			pr.push_back(spf[tr]);
			c.push_back(0);
		}
		c.back()++;
		tr/=spf[tr];
	}
	f=1;
	func(0,1);
	sort(res.begin(),res.end());
	for(ll i=0;i<hi;i++)
	cout<<res[i]+1<<" ";
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    for(ll i=2;i*i<=hell;i++)
    if(!spf[i]){
		for(ll j=i*i;j<=hell;j+=i)
		if(!spf[j])
		spf[j]=i;
	}
	for(ll i=1;i<=hell;i++)
	if(!spf[i])
	spf[i]=i;
    ll qc=1;
    for(ll i=1;i<=qc;i++)
    solve();
}