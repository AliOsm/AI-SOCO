#include <bits/stdc++.h>

#define clr(x) memset((x), 0, sizeof((x)))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp std::make_pair
#define itn int
#define x first
#define y second

typedef std::pair<int, int> PII;
typedef int64_t ll;
typedef std::pair<ll, ll> PLL;
typedef long double ld;
typedef std::pair<ld, ld> PLD;
typedef std::pair<double, double> PDD;
template <typename T, typename U>
inline std::ostream & operator << (std::ostream &os, const std::pair<T, U> &r) {os << "(" << r.x << "," << r.y << ")";return os;}
template <typename T>
inline std::pair<T, T> operator + (const std::pair<T, T> &l, const std::pair<T, T> &r) {return mp(l.x + r.x, l.y + r.y);}
template <typename T>
inline std::pair<T, T> operator - (const std::pair<T, T> &l, const std::pair<T, T> &r) {return mp(l.x - r.x, l.y - r.y);}
template <typename T, typename U>
inline std::pair<T, T> operator * (const std::pair<T, T> &l, const U &r) {return mp(T(l.x * r), T(l.y * r));}
template <typename T>
inline T cross(const std::pair<T, T> &l, const std::pair<T, T> &r) {return l.x * r.y - l.y * r.x;}
template <typename T>
inline T dot(const std::pair<T, T> &l, const std::pair<T, T> &r) {return l.x * r.x + l.y * r.y;}
template <typename T>
inline T sq_len(const std::pair<T, T> &l) {return l.x * l.x + l.y * l.y;}
template <typename T>
inline ld len(const std::pair<T, T> &l) {return sqrtl(sq_len(l));}
inline int nxt() {int x;scanf("%d", &x);return x;}
inline ll gcd(ll a, ll b) {a = std::abs(a); b = std::abs(b); while (b) {a %= b;std::swap(a, b);}return a;}
typedef PII pt_int;typedef PLL pt_ll;typedef PLD pt_ld;typedef PDD pt_d;

using namespace std;



void solve() {
    ll A, B, C, D;
    A = nxt();
    B = nxt();
    C = nxt();
    D = nxt();
    ll u = abs(A + B + C + D);
    ll v = abs(A - B + C - D);
    ll w = abs(A - B - C + D);
    ll x = abs(A + B - C - D);
    ll d = abs(A * D - B * C);
    double k = max(max(u, v), max(w, x));

    cout << fixed << setprecision(10);
    cout << (d ? d / k : 0.0) << '\n';
}

int main() {
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
#endif
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t = 1;//nxt();
    for (int i = 0; i < t; ++i) {
        solve();
    }

    return 0;
}
