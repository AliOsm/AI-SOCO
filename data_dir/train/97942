#include<bits/stdc++.h>
#define ll long long 
#define hell 1000000007 
#define F first
#define re 15000000
#define S second
#define pb push_back
#define all(a)  (a).begin(),(a).end()
#define rep(i,a,b) for(ll int i = a;i<b;i++)
#define pi 3.1415926536
//char a[2000][2000];
using namespace std;
map<int,int> m;
void primeFactors(int n) 
{ 
    // Print the number of 2s that divide n 
    while (n%2 == 0) 
    { 
        m[2]++; 
        n = n/2; 
    } 
  
    // n must be odd at this point.  So we can skip  
    // one element (Note i = i +2) 
    for (int i = 3; i <= sqrt(n); i = i+2) 
    { 
        // While i divides n, print i and divide n 
        while (n%i == 0) 
        { 
            m[i]++; 
            n = n/i; 
        } 
    } 
  
    // This condition is to handle the case when n  
    // is a prime number greater than 2 
    if (n > 2) 
        m[n]++; 
} 
ll gcd(ll a,ll b)
{
    if (a%b==0)
        return b;
    else
        return gcd(b,a%b);
}

int sum (ll a)
{
    int sum =0;
    while(a>0)
    {
        sum = sum + (a%10);
        a=a/10;
    }
    return sum;
}
int count_digit(ll n)
{
   int  count =0;
    while(n>0)
    {
        if(n%10==9){
            count++;
            n=n/10;
            continue;
        }
        else{
            return count;
        n = n/10;
    }
        //count++;
    }
   // return count;
}
int binarySearch(int x,int y ,ll z ,ll v[])
{
    int low = x;
    int high = y;
    int mid = x+(y-x)/2;
    while(low<=high)
    {
        if(v[mid]==z)
            return mid;
        if(v[mid]<z)
            return binarySearch(mid+1,high,z,v);
        if(v[mid]>z)
            return binarySearch(low,mid-1,z,v);
    }
    return -1;
}
ll modularExponentiation(ll x,ll n,ll M)
{
    if(n==0)
        return 1;
    else if(n%2 == 0)        //n is even
        return modularExponentiation((x*x)%M,n/2,M);
    else                             //n is odd
        return (x*modularExponentiation((x*x)%M,(n-1)/2,M))%M;

} 
ll binaryExponentiation(ll x,ll n)
{
    if(n==0)
        return 1;
    else if(n%2 == 0)        //n is even
        return binaryExponentiation(x*x,n/2);
    else                             //n is odd
        return x*binaryExponentiation(x*x,(n-1)/2);
}

int binary(int n)
{
    int c =0;
    while(n>0){
        if(n%2==1)
        {
            return pow(2,c);
        }
        n=n/2;
        c++;}
}
ll ceil1(ll x ,ll y)
{

    if(x%y==0)
        return x/y;
    else
        return x/y+1;
}
int main()
{   
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int tests=1;
  //  cin>>tests;   
     while(tests--)
    {
        int n,count0=0;
        vector<int> v;
        cin>>n;
        ll sum =0;
        int a[n];
        map<int,int> m;
        for(int i =0; i<n;i++){
        cin>>a[i];
        sum = sum +a[i];
        m[a[i]]++;
        if(a[i]==0)
            count0++;
    }
    sort(a,a+n);
    reverse(a,a+n);
    if(count0 == 0)
    {
        cout<<-1;
        exit(0);
    }
    if(count0==n)
    {
        cout<<0;
        exit(0);
    }
    else
    {
        if(sum%3==0)
        {
            rep(i,0,n)
            cout<<a[i];
            exit(0);
        }
        if(sum%3==1)
        {
            for(int i = n-1;i>=0;i--){
                if(a[i]%3==1)
                {
                    for(int j =0;j<n;j++)
                    {
                        if(j!=i)
                            v.pb(a[j]);
                        //cout<<"Hi";

                    }
                    int count0 =0;
                   for(int j =0;j<v.size();j++)
                   {
                    if(v[j]==0)
                        count0++;
                   }
                   if(count0==v.size())
                   {
                    cout<<0;
                    exit(0);
                   }
                   rep(i,0,v.size())
                   cout<<v[i];

                    exit(0);
                }
            }
            for(int i = n-1;i>=0;i--)
            {
                for(int j = 1;j<10;j++)
                {
                    int c =0;
                    if((a[i]+j)%3==1)
                    {
                        if(a[i]==j && m[j]>=2)
                        {
                            for(int k=0;k<n;k++)
                            {
                                if(a[k]!=j)
                                    v.pb(a[k]);
                                else if(a[k]==j)
                                {
                                    if(c<2){
                                        c++;
                                        continue;
                                    }
                                    else
                                        v.pb(a[k]);

                                }
                            }
                               int count0 =0;
                   for(int j =0;j<v.size();j++)
                   {
                    if(v[j]==0)
                        count0++;
                   }
                   if(count0==v.size())
                   {
                    cout<<0;
                    exit(0);
                   }
                   rep(i,0,v.size())
                   cout<<v[i];

                    exit(0);
                            //exit(0);
                        }
                        else if(a[i]!=j && m[j]!=0)
                        {
                            for(int k  =0; k<n;k++)
                            {
                                if(k!=i)
                                {
                                    if(a[k]!=j)
                                        v.pb(a[k]);
                                    if(a[k]==j)
                                    {
                                        if(c==0)
                                        {
                                            c++;
                                            continue;
                                        }
                                        else
                                            v.pb(a[k]);
                                    }
                                }
                            }
                               int count0 =0;
                   for(int j =0;j<v.size();j++)
                   {
                    if(v[j]==0)
                        count0++;
                   }
                   if(count0==v.size())
                   {
                    cout<<0;
                    exit(0);
                   }
                   rep(i,0,v.size())
                   cout<<v[i];

                    exit(0);
                            //exit(0);
                        }

                        
                    }
    
                }
            }

        }
        if(sum%3==2)
        {
            for(int i  = n-1;i>=0;i--)
            {
                if(a[i]%3==2)
                {
                    for(int k =0;k<n;k++)
                    {
                        if(i!=k)
                            v.pb(a[k]);
                    }
                       int count0 =0;
                   for(int j =0;j<v.size();j++)
                   {
                    if(v[j]==0)
                        count0++;
                   }
                   if(count0==v.size())
                   {
                    cout<<0;
                    exit(0);
                   }
                   rep(i,0,v.size())
                   cout<<v[i];

                    exit(0);
                   // exit(0);
                }
            }
            for(int i = n-1;i>=0;i--)
            {
                for(int j =1;j<10;j++)
                { int c =0;
                    if((a[i]+j)%3==2)
                    {
                        if(a[i]==j && m[j]>=2)
                        {
                            for(int k=0;k<n;k++)
                            {
                                if(a[k]!=j)
                                    v.pb(a[k]);
                                else if(a[k]==j)
                                {
                                    if(c<2){
                                        c++;
                                        continue;
                                    }
                                    else
                                        v.pb(a[k]);

                                }
                            }
                               int count0 =0;
                   for(int j =0;j<v.size();j++)
                   {
                    if(v[j]==0)
                        count0++;
                   }
                   if(count0==v.size())
                   {
                    cout<<0;
                    exit(0);
                   }
                   rep(i,0,v.size())
                   cout<<v[i];

                    exit(0);

                            //exit(0);
                        }
                        else if(a[i]!=j && m[j]!=0)
                        {
                            for(int k  =0; k<n;k++)
                            {
                                if(k!=i)
                                {
                                    if(a[k]!=j)
                                        v.pb(a[k]);
                                    if(a[k]==j)
                                    {
                                        if(c==0)
                                        {
                                            c++;
                                            continue;
                                        }
                                        else
                                            v.pb(a[k]);
                                    }
                                }
                            }
                               int count0 =0;
                   for(int j =0;j<v.size();j++)
                   {
                    if(v[j]==0)
                        count0++;
                   }
                   if(count0==v.size())
                   {
                    cout<<0;
                    exit(0);
                   }
                   rep(i,0,v.size())
                   cout<<v[i];

                    exit(0);
                            //exit(0);
                        }
                    }
                }
            }

        }
    }

    }
}

