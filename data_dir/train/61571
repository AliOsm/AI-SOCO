/////////////////////////////
//Just Smile, My Friend ^_^//
//By PloadyFree//////////////
//PloadyFree@gmail.com///////
/////////////////////////////

#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <iterator>
#include <set>
#include <cmath>
#include <ctime>
#include <stack>
#include <fstream>
#include <array>
#include <map>

using namespace std;

#define all(a)      begin(a), end(a)
#define rall(a)     rbegin(a), rend(a)
#define pb(a)       push_back(a)
#define mp(a, b)    make_pair(a, b)

void prepare(string s = "") {
#ifdef _DEBUG
    if (s.size() != 0) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
#else
    if (s.size() != 0) {
        freopen((s + ".in").c_str(), "r", stdin);
        freopen((s + ".out").c_str(), "w", stdout);
    }
#endif // _DEBUG
}

void pause()
{
#ifdef _DEBUG
    cout << "\n\n"; system("pause");
#endif // _DEBUG
}

void solve()
{
    int n, m;
    cin >> n >> m;
    map<string, pair<int, int> > lenghWords;
    map<string, pair<string, string> > words;

    vector<pair<string, string> > wordNames(m);

    string l, r;
    for (int i = 0; i < m; i++) {
        cin >> wordNames[i].first >> wordNames[i].second;

        words[wordNames[i].first].first = wordNames[i].first;
        words[wordNames[i].first].second = wordNames[i].second;

        lenghWords[wordNames[i].first].first = wordNames[i].first.size();
        lenghWords[wordNames[i].first].second = wordNames[i].second.size();
    }

    string res, word;

    for (int i = 0; i < n; i++) {
        cin >> word;
        if (lenghWords[word].first <= lenghWords[word].second)
            res += words[word].first;
        else
            res += words[word].second;
        res += '\n';
    }

    cout << res;
}

int main()
{
    prepare();
    solve();
    pause();
    return 0;
}