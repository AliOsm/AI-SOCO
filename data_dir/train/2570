#include <bits/stdc++.h> 
using namespace std;
#define fl(i,a,b) for(int i=a;i<b;i++)
#define ll long long
#define endl '\n'
#define pb push_back
#define ff first
#define ss second
#define mod 1000000007 
#define inf 1e9
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
#define mx 1000005
main()
{
    fast;
    string s;
    cin >> s;
    bool flag = 0;
    // Atlease one dot
    fl(i,0,s.size())
    {
        if(s[i] == '.')
            flag = 1;
    }
    if(!flag)
    {
        s += ".";
    }
    // remove leading zeroes
    reverse(s.begin(), s.end());
    while(s.back() == '0')
        s.pop_back();
    reverse(s.begin(), s.end());
    // remove trailing zeroes
     while(s.back() == '0')
        s.pop_back();
    /*
        Now it
        starts with dot or > 0 and ends with . or > 0
    */
    int pos = 0;
    fl(i,0,s.size())
    {
        if(s[i] == '.')
            pos = i;
    }
    int cnt = 0;
    if(pos > 0)
    {
        cnt = pos - 1;
        cout<<s[0];
        int f = 0;
        fl(i,1,s.size())
        {
            if(s[i] >= '1' && s[i] <='9')
                f = i;
        }
        if(f)
            cout<<".";
        fl(i,1,s.size())
        {
            if(s[i] !='.' && f >= i)
                cout<<s[i];
        }
        if(cnt > 0)
        {
            cout<<"E"<<cnt;
        }
        return 0;
    }
    if(s.size() == 1)
    {
        cout<<0;
        return 0;
    }
    cnt = 1;
    fl(i,1,s.size())
    {
        if(s[i] == '0')
            cnt++;
        else
        {
            cout<<s[i];
            bool f = 0;
            fl(j,i+1,s.size())
            {
                if(s[j] >= '1' && s[j] <='9')
                f = 1;
            }
            if(f)
            cout<<".";
            fl(j,i+1,s.size())
            {
                if(s[j] !='.' && f)
                    cout<<s[j];
            }   
            cout<<"E";
            cout<<-cnt;
            return 0;
            
        }
    }
 
 
}
