#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define all(x) x.begin(), x.end()
#define boost() ios_base :: sync_with_stdio(0); cin.tie(); cout.tie(); cout << fixed; cout << setprecision(15); srand(time(NULL))
#define endl '\n'
const int _N = 1e5 + 5;
const long long INF = 1e18;
const long long MOD = 1e9 + 7;

int n, m, q, arr[105][105];
vector <pair <pair <int, int>, pair <int, int>>> turn;
int t, r, c, x;

void shiftRight(int row) { //size M
	vector <int> lcl;
	for (int i = 0; i < m; i++) lcl.pb(arr[row][(i-1+m)%m]);
	for (int i = 0; i < m; i++) arr[row][i] = lcl[i];
}

void shiftDown(int col) { //size N
	vector <int> lcl;
	for (int i = 0; i < n; i++) lcl.pb(arr[(i-1+n)%n][col]);
	for (int i = 0; i < n; i++) arr[i][col] = lcl[i];
}

int main() { 
	boost();
	cin >> n >> m >> q;
	for (int i = 0; i < q; i++) {
		cin >> t;
		if (t < 3) cin >> x; 
		else cin >> r >> c >> x;
		turn.pb(mp(mp(t, x), mp(r, c)));
	}
	reverse(all(turn));
	for (int i = 0; i < q; i++) {
		t = turn[i].first.first;
		x = turn[i].first.second;
		r = turn[i].second.first;
		c = turn[i].second.second;
		if (t == 1) shiftRight(x-1);
		else if (t == 2) shiftDown(x-1);
		else arr[r-1][c-1] = x;
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cout << arr[i][j] << " ";
		} cout << endl;
	}
	return 0;
}
