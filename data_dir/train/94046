//In the name of GOd

#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
using namespace std;
const int MAXN=100100;
int dp1[MAXN],dp2[MAXN];
long long a[MAXN];
int main()
{
  int n;
  cin>>n;
  for(int i=1;i<=n;i++)
    {
      cin>>a[i];
    }
  dp1[n]=1;
  for(int i=n-1;i>=1;i--)
    {
      if(a[i]<a[i+1])
	dp1[i]=dp1[i+1]+1;
      else
	dp1[i]=1;
      cerr<<dp1[i]<<" ";
    }
  cerr<<endl;
  dp2[1]=1;
  for(int i=2;i<=n;i++)
    {
      if(a[i]>a[i-1])
	dp2[i]=dp2[i-1]+1;
      else
	dp2[i]=1;
      cerr<<dp2[i]<<" ";
    }
  cerr<<endl;
  int ans=1;
  for(int i=1;i<n;i++)
    {
      int s,e;
      s=i-dp2[i]+1;
      e=i;
      if(e<=n-2 && a[e+2]>=a[e]+2)
	ans=max(ans,dp2[i]+dp1[e+2]+1);
      
    }
  for(int i=1;i<=n;i++)
    if(dp2[i]<n)
      ans=max(ans,dp2[i]+1);
  if(n==2)
    {
      cout<<2<<endl;
      return 0;
    }
  cout<<ans<<endl;
  return 0;
}
