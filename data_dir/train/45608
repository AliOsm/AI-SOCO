#include <iostream>
#include <stdio.h>
#include <math.h>

using namespace std;
const int N = 300000;

int n, k, f[N], a[N];
char t[N];

bool check(int d) {
    for(int i = 0; i < n; i++) {
        if(a[i] == 0) {
            int l = max(0, i - d);
            int r = min(n - 1, i + d);
//            if(d == 1) {
//                cout << l << " " << r << "  = " << (f[r] - (l == 0 ? 0 : f[l - 1])) << "\n";
//            }
            if((f[r] - (l == 0 ? 0 : f[l - 1])) >= k + 1)
                return true;
        }
    }
    return false;
}
int main() {
    scanf("%d%d\n", &n, &k);
    gets(t);
    for(int i = 0; i < n; i++) {
        a[i] = t[i] - '0';
        f[i] = (1 - a[i]) + (i != 0 ? f[i - 1] : 0);
    }
    int l = 1, r = n;
    while(l < r) {
        int c = (l + r) / 2;
        if(check(c))
            r = c;
        else
            l = c + 1;
    }
    printf("%d\n", l);
    return 0;
}
