//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >

const int maxn=(int)(1e5+5);
const ll mod=(ll)(1e9+7);
int a[11][maxn],pos[11][maxn];
int dp[maxn],last[maxn];

ll get(ll n)
{
    return (n*(n+1))/2;
}

int main()
{
    //ios_base::sync_with_stdio(0);cin.tie(0);

    int n,m;scanf("%d %d",&n,&m);

    for(int i=1;i<=m;i++)
    {
        fill(pos[i],pos[i]+n+5,-1);

        for(int j=1;j<=n;j++)
        {
            scanf("%d",&a[i][j]);

            pos[i][a[i][j]]=j;
        }
    }

    dp[a[1][n]]=1;

    for(int i=1;i<=m;i++)
    {
        last[i]=pos[i][a[1][n]];
    }

    for(int i=n-1;i>=1;i--)
    {
        int next=a[1][i+1];

        bool curr=true;

        for(int j=1;j<=m;j++)
        {
            if(last[j]-1<=0 || a[j][last[j]-1]!=a[1][i])
            {
                curr=false;break;
            }
        }

        if(curr)
        {
            dp[a[1][i]]=dp[next]+1;
        }

        else
        {
            dp[a[1][i]]=1;
        }

        for(int j=1;j<=m;j++)
        {
            last[j]=pos[j][a[1][i]];
        }
    }

    ll res=0;

    for(int i=1;i<=n;i++)
    {
        res+=dp[i];
    }

    cout<<res<<endl;

    return 0;
}
