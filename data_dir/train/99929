// Author: πα

#include <bits/stdc++.h>
using namespace std;

#define FastIO ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define long int64_t

struct Gauss
{
    int bits;
    vector<int> table;

    Gauss(int n)
    {
        bits = n;
        table.resize(n);
    }

    int size()
    {
        int ans = 0;
        for(auto it : table)
            ans += bool(it);
        return ans;
    }

    bool can(int x)
    {
        for(auto it : table)
            x = min(x, x ^ it);
        return x == 0;
    }

    void add(int x)
    {
        for(auto &it : table)
        {
            if(x == 0)
                return;
            if(it == 0)
                it = x, x = 0;
            else
                x = min(x, x ^ it);
        }
    }

    int get_best()
    {
        int x = 0;
        for(auto it : table)
            x = max(x, x ^ it);
        return x;
    }
};

int main()
{
    FastIO;
    Gauss g(30);
    int n, i, x = 0, v;
    cin >> n;
    for(i = 0; i < n; ++i)
    {
        cin >> v;
        x ^= v;
        g.add(x);
    }
    cout << (x ? g.size() : -1);
    return 0;
}
