#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pi pair<int, int>
#define F first
#define S second
#define pb push_back
#define PI acos(-1.0)
using namespace std;
int const N = 100100;

int n, m, Root, t, a, b, NumberOfBucket;
int Next[N], Arr[N], Last[N], Sz[N];

int Bucket(int i){
    if (i >= n)
        return NumberOfBucket;
    return i / Root;
}

void Update(int i)
{
    if (Bucket(i) != Bucket(i + Arr[i])){
        Next[i] = min(n, i + Arr[i]);
        Sz[i] = 1;
        Last[i] = i;
    }else{
        Next[i] = Next[i + Arr[i]];
        Sz[i] = 1 + Sz[i + Arr[i]];
        Last[i] = Last[i + Arr[i]];
    }
}

int main()
{
    // ios::sync_with_stdio(0);
    // cin.tie(0); cout.tie(0);
    // freopen("in.in", "r", stdin);
    // freopen("out.out", "w", stdout);

    scanf("%d%d", &n, &m);
    for (int i = 0; i < n; i++)
        scanf("%d", &Arr[i]);

    Root = sqrt(n);
    NumberOfBucket = (n + Root - 1) / Root;

    for (int i = n - 1; i >= 0; i--)
        Update(i);

    while(m--){
        scanf("%d", &t);

        if (t == 1){
            scanf("%d", &a);
            a--;

            int Jumps = 0, idx = 0;
            for (int i = a; i < n; i = Next[i]){
                Jumps += Sz[i];
                idx = Last[i];
            }

            printf("%d %d\n", idx + 1, Jumps);
        }else{
            scanf("%d%d", &a, &b);

            Arr[--a] = b;
            for (int i = a; i%Root; i--)
                Update(i);
            Update(a / Root * Root);
        }
    }
    return 0;
}
