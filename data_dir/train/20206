#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <cstring>
#include <string>
#include <algorithm>
#include <vector>
#include <set>
#include <queue>
#include <map>
#include <stack>
#include <complex>
#include <random>
#include <bitset>
using namespace std;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

int N;
vector<int> adj[1005];

bool dfs(int cur)
{
    if (adj[cur].size() == 0)
        return true;
    int ret = 0;
    for (int i = 0; i < adj[cur].size(); i++)
    {
        int next = adj[cur][i];
        ret += (adj[next].size() == 0);
        if (!dfs(next))
            return false;
    }
    return ret >= 3;
}

int main()
{
    ios::sync_with_stdio(0);

    cin >> N;
    for (int i = 2, p; i <= N; i++)
    {
        cin >> p;
        adj[p].push_back(i);
    }

    if (dfs(1))
        cout << "Yes\n";
    else
        cout << "No\n";

    return 0;
}
