#include <bits/stdc++.h>

using namespace std;

const int NMAX = 1e5 + 5;

int a[NMAX];
long long dp[NMAX], b[NMAX];
int n, c;
multiset<int> s;
long long sum = 0;

int main()
{

	cin >> n >> c;
	for (int i = 1; i <= n; i++) {
		cin >> a[i];
		s.insert(a[i]);
		sum += a[i];
		if (i > c) {
			s.erase(s.find(a[i - c]));
			sum -= a[i - c];
		}
		if (i >= c) {
			b[i] = sum - *s.begin();
		}
	}
	for (int i = 1; i <= n; ++ i) {
		dp[i] = dp[i - 1] + a[i];
		if (i >= c) {
			dp[i] = min(dp[i], dp[i - c] + b[i]);
		}
	}
	cout << dp[n];
	return 0;
}
