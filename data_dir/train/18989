#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;
#define F first
#define S second
#define ii pair <int,int>
#define ever (;;)

const int N = 200100;

int q,n,k,ans[N],mn=1e9;
char A[N];
string s,r,g,b;

int main()
{
    for(int i = 0;i<200100;i++)
    {
        if(i%3==0)
        {
            r+="R";
            g+="G";
            b+="B";
        }
        if(i%3==1)
        {
            r+="G";
            g+="B";
            b+="R";
        }
        if(i%3==2)
        {
            r+="B";
            g+="R";
            b+="G";
        }
    }

    scanf("%d",&q);
    while(q--)
    {
        scanf("%d%d%s",&n,&k,&A);
        s = A;
        s = '#' + s;

        for(int i=1;i<=k;i++)
        {
            ans[i] = ans[i-1];
            if(s[i]!=r[i])
                ans[i]++;
            if(i==k)
                mn = min(ans[i],mn);
        }
        for(int i=k+1;i<=n;i++)
        {
            ans[i]=ans[i-1];
            if(s[i]!=r[i])
                ans[i]++;
            mn = min(mn,ans[i]-ans[i-k]);
        }

        for(int i=1;i<=k;i++)
        {
            ans[i] = ans[i-1];
            if(s[i]!=b[i])
                ans[i]++;
            if(i==k)
                mn = min(ans[i],mn);
        }
        for(int i=k+1;i<=n;i++)
        {
            ans[i]=ans[i-1];
            if(s[i]!=b[i])
                ans[i]++;
            mn = min(mn,ans[i]-ans[i-k]);
        }

        for(int i=1;i<=k;i++)
        {
            ans[i] = ans[i-1];
            if(s[i]!=g[i])
                ans[i]++;
            if(i==k)
                mn = min(ans[i],mn);
        }
        for(int i=k+1;i<=n;i++)
        {
            ans[i]=ans[i-1];
            if(s[i]!=g[i])
                ans[i]++;
            mn = min(mn,ans[i]-ans[i-k]);
        }

        printf("%d\n",mn);
        mn = 1e9;
    }
}
