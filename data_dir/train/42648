#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <unordered_map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
#include <random>
#include <cassert>
#include <sstream>
using namespace std;
#define F first
#define S second
#define pb push_back
#define MP make_pair
#define ALL(x) begin(x), end(x)
#define SZ(x) (int)(x).size()
#define IOS ios_base::sync_with_stdio(0); cin.tie(0)
#define ln(i, n) " \n"[i == n]
typedef long long LL;
typedef long double LDB;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
//////////////////////
const long double eps = 1e-13;
const long double PI = acos(-1);
const int INF = (int)1e9 + 7;
const LL  INFF = (LL)1e18;
const int mod = (int)1e9 + 7;
const int MXN = (int)1e4 + 7;
char s[MXN], s1[MXN], s2[MXN];
int pos[MXN];
int ha[3] = {1, 26, 26*26};
int main() {
	scanf("%s", s + 1);
	int n = strlen(s + 1);
	for (int i = 0; i < 3; i++) {
		for (int j = 1; j <= n; j++) {
			s1[j] = 'a' + (j / ha[i]) % 26;
		}
		printf("? %s\n", s1 + 1);
		fflush(stdout);
		scanf("%s", s2 + 1);
		for (int j = 1; j <= n; j++) {
			pos[j] += (s2[j] - 'a')*ha[i];
		}
	}
	for (int i = 1; i <= n; i++)
		s1[ pos[i] ] = s[i];
	printf("! %s\n", s1 + 1);
	fflush(stdout);
	return 0;
}
