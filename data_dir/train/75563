#include <iostream>
#include <iomanip>
#include <set>
#include <algorithm>
#include <unordered_map>
#include <assert.h>
#include <cstring>
#include <vector>
#include <cmath>
#include <queue>
#include <functional>
#include <map>

#define N 400005
#define K 300005
#define lgN 18
#define MOD 100000007
#define LL long long int
#define INF MOD
using namespace std;

vector<int> g[N];
int p[N],many[N],sub[N];
vector<int> subs;
void dfs(int node) {
  if (g[node].size()==0) sub[node]=1;
  for (auto it:g[node]) {
    dfs(it);
    sub[node]+=sub[it];
  }
  subs.push_back(sub[node]);
}
int main() {
  ios::sync_with_stdio(false);
  cin.tie(NULL);cout.tie(NULL);
  int n,i,j;
  cin >> n;
  p[1]=0;
  for (i=2;i<=n;i++) {
    cin >> p[i];
    g[p[i]].push_back(i);
  }
  dfs(1);
  sort(subs.begin(),subs.end());
  for (i=1;i<=n;i++) cout << subs[i-1] << " \n"[i==n];
  return 0;
}
