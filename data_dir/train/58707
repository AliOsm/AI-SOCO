/**
 * Dont raise your voice, improve your argument.
 * --Desmond Tutu
 */

#include <bits/stdc++.h>
using namespace std;

#define DEBUG
#ifndef DEBUG
#define endl "\n"
#define log(args...)
#else
#define log(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); logf(_it, args); cout<<endl; }
void logf(istream_iterator<string> it) {
}
template<typename T, typename ... Args>
void logf(istream_iterator<string> it, T a, Args ... args) {
    cout << *it << "=" << a << " ";
    logf(++it, args...);
}
#endif

const double PI = acos(-1);
typedef long long ll;
#define fori(n) for(int i=0; i<int(n); i++)

#define cins(s) string s; cin>>s;
#define cini(i) int i; cin>>i;
#define cinll(l) ll l; cin>>l;
#define cind(d) double d; cin>>d;
#define cinai(a, n) vi a(n); fori(n) { cin>>a[i]; }
#define cinall(a, n) vll a(n); fori(n) { cin>>a[i]; }
#define cinas(s, n) vs s(n); fori(n) { cin>>s[i]; }
#define cinad(a, n) vd a(n); fori(n) { cin>>a[i]; }

typedef pair<int, int> pii;
typedef pair<double, double> pdd;
typedef vector<double> vd;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<string> vs;
typedef vector<ll> vll;

/* to change the result by swapping two bits in a, it must be true that
 * at least one of the bits is set before and not set afterwards, or
 * vice versa.
 * a1 a2
 * b1 b2
 *
 * a1!=a2 && (a1 && !b1 || a2 && !b2)
 *
 * a1=1, b1=1 -> a2=0, b2=0
 * a1=1, b1=0 -> a2=0, b2=0|1
 *
 * a1=0, b1=0 -> a2=1, b2=0|1
 * a1=0, b1=1 -> a2=1, b2=0
 *
 */
void solve() {
    cini(n);
    cins(a);
    cins(b);
    vvvi dp(n, vvi(2, vi(2)));
    dp[n-1][a[n-1]=='1'][b[n-1]=='1']=1;
    for(int i=n-2; i>=0; i--) {
        for(int j=0; j<2; j++)
            for(int k=0; k<2; k++) 
                dp[i][j][k]=dp[i+1][j][k];
        dp[i][a[i]=='1'][b[i]=='1']++;
    }

    ll ans=0;
    for(int i=0; i<n-1; i++) {
        if(a[i]=='1') {
            if(b[i]=='1') {
                ans+=dp[i+1][0][0];
            } else {
                ans+=dp[i+1][0][0];
                ans+=dp[i+1][0][1];
            }
        } else {
            if(b[i]=='1') {
                ans+=dp[i+1][1][0];
            } else {
                ans+=dp[i+1][1][0];
                ans+=dp[i+1][1][1];
            }
        }
    }
    cout<<ans<<endl;
}

int main() {
    cin.tie(nullptr);
    std::ios::sync_with_stdio(false);
        solve();
}

