#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define ll long long  int
#define rep(i,n) for(int i=0;i<n;i++)
int freq[100011];
int d[100011];
vector<int>g[100011];
int BIT[100011];
int ans[100011];
int col[100011];
int pos[100011];
vector<int>o;
void dfs(int v,int p){
	o.pb(v);
	for(auto x:g[v]){
		if(x!=p){
			dfs(x,v);
			d[v]+=d[x];
		}
	}
	d[v]++;
}
struct st{
	int l,r,k,ind;
	st(){}
	st(int _l,int _r,int _k,int _ind){
		l=_l;
		r=_r;
		k=_k;
		ind=_ind;
	}
};
int sz,c;
bool func(st a,st b){
	return mp(a.l/sz,a.r)<mp(b.l/sz,b.r);
}
void del(int x){
	c=col[x];
	BIT[freq[c]]--;
	freq[c]--;
}
void add(int x){
	c=col[x];
	freq[c]++;
	BIT[freq[c]]++;
}
int main(){
	int n,m,k;
	cin>>n>>m;
	int u,v;
	sz=sqrt(n);
	rep(i,n)
		cin>>col[i+1];
	rep(i,n-1){
		cin>>u>>v;
		g[u].pb(v);
		g[v].pb(u);
	}
	dfs(1,-1);
	vector<st>q;
	rep(i,n){
		pos[o[i]]=i+1;
	}
	rep(i,m){
		cin>>v>>k;
		q.pb(st(pos[v],pos[v]+d[v]-1,k,i+1));
	}
	sort(q.begin(),q.end(),func);
	int cl=1;
	int cr=1;
	add(o[0]);
	for(auto x:q){
		while(cl<x.l){
			del(o[cl-1]);
			cl++;
		}
		while(cl>x.l){
			cl--;
			add(o[cl-1]);
		}
		while(cr<x.r){
			cr++;
			add(o[cr-1]);
		}
		while(cr>x.r){
			del(o[cr-1]);
			cr--;
		}
		ans[x.ind]=BIT[x.k];
	}
	rep(i,m){
		cout<<ans[i+1]<<"\n";
	}
}
