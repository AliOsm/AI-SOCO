#include <iostream>
#include <vector>
#include <algorithm>
#include <memory>
#include <map>
#include <unordered_map>
#include <set>
#include <queue>
#include <unordered_set>
#include <functional>
#include <climits>
#include <cstring>
#include <cmath>
#include <numeric>
#include <random>
#include <tuple>
#include <chrono>

using namespace std;
using ll = long long;
using ull = unsigned long long;
const int oo = numeric_limits<int>::max() / 2;
mt19937 rnd(std::chrono::steady_clock::now().time_since_epoch().count());

inline void solve() {
  int n, x, y, d;
  cin >> n >> x >> y >> d;
  --x; --y; --n;
  int diff = abs(x - y);
  if (diff % d == 0) {
    cout << diff / d << endl;
    return;
  }
  int d1 = oo;
  if (y % d == 0) {
    d1 = (x + d - 1) / d + y / d;
  }
  int d2 = oo;
  if ((n - y) % d == 0) {
    d2 = (n - x + d - 1) / d + (n - y) / d;
  }
  int ret = min(d1, d2);
  if (ret == oo) {
    cout << -1 << endl;
  } else {
    cout << ret << endl;
  }
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
  int t;
  cin >> t;
  for(int i = 0; i < t; ++i) {
    solve();
  }
	return 0;
}
