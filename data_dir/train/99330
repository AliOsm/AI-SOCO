#include<bits/stdc++.h>
using namespace std;
#define C            1000000007
#define MOD          998244353
#define int          long long 
#define D            double
#define S            second
#define F            first
#define pb           push_back
#define ff           fflush(stdout)
#define ppb          pop_back()
#define B(c)         (c).begin()
#define E(c)         (c).end()
#define all(c)       (c).begin(),(c).end()
#define rall(c)      (c).rbegin(),(c).rend()
#define SORT(v)       sort(ALL(v))  
#define DB            cerr<<"move"<<endl;
#define DV(x)         cerr<<x<<endl;
#define inputarr(a,n)  for(int i=0;i<n;++i) cin>>a[i]
#define printarr(a,n)  for(int i=0;i<n;++i) cout<<a[i]<<" "
#define lb           lower_bound
#define ub           upper_bound
#define si(c)        (int)((c).size())
#define gcd(a,b)      __gcd(a,b)
#define lcm(a,b)     (a*(b/gcd(a,b)))
#define sqr(a)       ((a) * (a))
#define optimize()   ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define accuracy     cout << fixed << setprecision(18);
typedef pair<int,int>                         pii;
typedef pair<int,pii>                         pipii;
typedef vector<vector<int> >                  vvi;
typedef map<int,int>                          mp;
typedef map<string,int>                       msi;
typedef priority_queue<int, vector<int>, greater<int> > pq;
typedef vector<int>::iterator                  vit;
typedef set<int>::iterator                     sit;
typedef map<int,int>::iterator                 mit;
inline  bool checkBit(int n, int i) { return n&((int)1<<i); }
inline  int setBit(int n, int i) { return n|((int)1<<i);; }
inline  int resetBit(int n, int i) { return n&(~((int)1<<i)); }
inline  bool EQ(double a, double b) { return fabs(a-b) < 1e-9; }
inline  bool isLeapYear(int year) { return (year%400==0) || (year%4==0 && year%100!=0); }
inline  void normal(int &a) { a = (a+MOD)%MOD; }
inline  int modMul(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); return (a*b)%MOD; }
inline  int modAdd(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); return (a+b)%MOD; }
inline  int modSub(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); a -= b; normal(a); return a; }
inline  int modPow(int b, int p) { int r = 1; while(p) { if(p&1) r = modMul(r, b); b = modMul(b, b); p >>= 1; } return r; }
inline  int modInverse(int a) { return modPow(a, MOD-2); }
inline  int modDiv(int a,int b) { return modMul(a, modInverse(b)); }
const int N=5e5+1;
void solve(){
	string s,t,p;
	cin>>s>>t>>p;
	int a[26]={0},j=0;
	bool flag=1;
	for(int i=0;i<si(s);i++){
		flag=0;
		for(;j<si(t);j++){
			if(s[i]==t[j]){
				j++;
				flag=1;
				break;
			}
			else a[t[j]-'a']++;
		}
		if(flag==0){
			cout<<"NO"<<endl;
			return;
		}
	}
	for(;j<si(t);j++){
		a[t[j]-'a']++;
	}
	for(int i=0;i<si(p);i++){
		a[p[i]-'a']--;
	}
	for(int i=0;i<26;i++){
		if(a[i]>0){
			cout<<"NO"<<endl;
			return;
		}
	}
	cout<<"YES"<<endl;
}
signed main(){   
    optimize();
	int t=1;
	cin>>t;
	while(t--){
		solve();
	}
}