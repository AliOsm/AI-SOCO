#include <bits/stdc++.h>
using namespace std;

#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define long long long 

vector<long int> primes;

void sieve(){
  vector<bool> isPrime(10000,true);
  isPrime[0] = isPrime[1] = false;

  for(long int i = 2; i < isPrime.size(); i++){
    if(isPrime[i]){
      for(long int j = i*i; j < isPrime.size(); j+=i)
        isPrime[j] = false;
    }
  }

  for(long int i = 0; i < isPrime.size(); i++){
    if(isPrime[i])
      primes.push_back(i);
  }
}

int main(){
   IOS;

   sieve();

   long int n;
   cin>>n;

   long int edges = *lower_bound(primes.begin(),primes.end(),n);
   cout<<edges<<endl;

   for(long int i = 0; i < n - 1; i++)
      cout<<i+1<<" "<<i+2<<endl;

  cout<<n<<" "<<1<<endl;

  edges -= n;

  long int i = 0;
  while(edges){
    if(i & 1){
      cout<<i+1<<" "<<i+3<<endl;
      i += 3;
      edges--;
    }
    else{
      cout<<i+1<<" "<<i+3<<endl;
      i++;
      edges--;
    }
  }

   return 0;
}