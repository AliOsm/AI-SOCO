/*
	Positive Turbulence
*/
#include <bits/stdc++.h> 
using namespace std;
#define fl(i,a,b) for(int i=a;i<b;i++)
#define ll long long
#define endl '\n'
#define pb push_back
#define ff first
#define ss second
#define mod 998244353  
#define inf 1e9
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
#define mx 2005
int dp[mx][mx];
int arr[mx];
main()
{
	fast;
	int n,h,l,r;
	cin >> n >> h >> l >> r;
	fl(i,1,n+1)
	{
		cin >> arr[i];
		arr[i] += arr[i-1];
		arr[i]%=h;
	}
	fl(i,1,n+1)
	{
		dp[0][i] = 0;
	}
	int ans = 0;
	fl(i,1,n+1)
	{
		dp[i][0] = dp[i-1][0] + (arr[i] >= l && arr[i] <=r);
		ans = max(ans,dp[i][0]);
	//	cout<<dp[i][0]<<" ";
		fl(j,1,i+1)
		{
			int x = arr[i];
			x = (x - j)%h;
			x = (x + h)%h;
			// -_- x<=h
			dp[i][j] = max(dp[i-1][j-1] ,dp[i-1][j]) + (x >=l && x <= r);	
		//	cout<<dp[i][j]<<" ";
			ans = max(ans,dp[i][j]);
		}
	//	cout<<endl;
	}
	cout<<ans;


}