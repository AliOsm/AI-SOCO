#define _USE_MATH_DEFINES 
#define _CRT_SECURE_NO_DEPRECATE 
#include <iostream> 
#include <cstdio> 
#include <cstdlib> 
#include <vector> 
#include <sstream> 
#include <string> 
#include <map> 
#include <set> 
#include <algorithm> 
#include <cmath> 
#include <cstring> 
#include <queue>
using namespace std; 
#pragma comment(linker, "/STACK:256000000") 
#define mp make_pair 
#define pb push_back 
#define all(C) (C).begin(), (C).end() 
#define sz(C) (int)(C).size() 
#define PRIME 1103 
#define PRIME1 31415 
typedef long long int64; 
typedef unsigned long long uint64; 
typedef pair<int, int> pii; 
typedef vector<int> vi; 
typedef vector<vector<int> > vvi; 
//------------------------------------------------------------ 
const int N = 1000;
int n, m, k;
map <int, int> id;
map <int, int> name;
map <int, int> :: iterator it; 
int find(int x)
{
    if (id.find(x) == id.end())
    {
        int s = id.size();
        id[x] = s;
        name[s] = x;
    }
    return id[x];
}
int mas[N][N];
vvi ans;
int main()
{
#ifdef WIN32
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    scanf("%d %d", &m, &k);
    for(int i = 0; i < m; ++i)
    {
        int a, b;
        scanf("%d %d", &a, &b);
        a = find(a);
        b = find(b);
        mas[a][b] = 1;
        mas[b][a] = 1;
    }
    n = id.size();
    ans.resize(n);
    for(int i = 0; i < n; ++i)
    {
        int x = 0;
        for(int j = 0; j < n; ++j)
            x += mas[i][j];
        for(int j = 0; j < n; ++j)
        {
            if (i == j)
                continue;
            if (mas[i][j])
                continue;
            int t = 0;
            for(int r = 0; r < n; ++r)
            {
                if (i == r || j == r)
                    continue;
                if (mas[i][r] && mas[j][r])
                    t++;
            }
            if (t * 100 >= k * x)
                ans[i].push_back(j);
        }
    }
    for(int i = 0; i < n; ++i)
    {
        for(int j = 0; j < ans[i].size(); ++j)
            ans[i][j] = name[ans[i][j]];
        sort(ans[i].begin(), ans[i].end());
    }
    for(it = id.begin(); it != id.end(); ++it)
    {
        int r = (*it).first;
        int o = (*it).second;
        printf("%d: %d ", r, ans[o].size());
        for(int j = 0; j < ans[o].size(); ++j)
            printf("%d ", ans[o][j]);
        printf("\n");
    }
} 