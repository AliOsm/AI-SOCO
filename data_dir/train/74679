#include <bits/stdc++.h>
using namespace std;

#define ENGZ ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define sfi(x) scanf("%d" , &x)
#define sfi2(x, y) scanf("%d%d" , &x,&y)
#define sfl2(x, y) scanf("%I64d%I64d" , &x,&y)
#define sfl(x) scanf("%I64d" , &x)
#define sfl3(x, y, z) scanf("%I64d%I64d%I64d", &x, &y, &z)
#define sfd(x) scanf("%lf", &x)
#define sfd2(x, y) scanf("%lf", &x, &y)
#define sfc(x) scanf("%c", &x)
#define testv(x) cerr << x << ' '
#define wtf(s) freopen((s), "w", stdout)
#define rff(s) freopen((s), "r", stdin)
#define test cerr << "here"
#define mod 1000000007
#define pi (2*acos(0))
typedef long double ld;
typedef long long ll;

int n, v, dp[102][102];

int solve(int j, int l)
{
    if (j == n)
        return 0;
    if (dp[j][l] != -1)
        return dp[j][l];
    int c = INT_MAX;
    for (int i = 1; l == 0 && i + l <= v; i++)
        c = min(c, solve(j + 1, l + i - 1) + j * i);
    for (int i = 0; l > 0 && i + l <= v; i++)
        c = min(c, solve(j + 1, l + i - 1) + j * i);
    return dp[j][l] = c;
}

int main()
{
    memset(dp, -1, sizeof dp);
    cin >> n >> v;
    cout << solve(1, 1) + 1;
    return 0;
}