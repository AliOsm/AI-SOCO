#include <bits/stdc++.h>

using namespace std;

#ifdef DGC
#include "debug.h"
#else
#define debug(...) 9715
#endif
typedef long long ll;
typedef long double ld;
typedef complex<double> point;
#define F first
#define S second



int main()
{
	#ifdef DGC
		//freopen("a.in", "r", stdin);
		//freopen("b.out", "w", stdout);
	#endif

	ios_base::sync_with_stdio(0), cin.tie(0);

	int t;
	cin >> t;
	while (t--)
	{
		ll a, m;
		cin >> a >> m;

		ll g = __gcd(a, m);
		a /= g;
		m /= g;

		ll M = m;
		vector<ll> p;
		for (ll i = 2; i * i <= M; ++i)
			if (M % i == 0)
			{
				p.push_back(i);
				while (M % i == 0) M /= i;
			}
		if (M > 1) p.push_back(M);

		ll ans = 0;
		for (int i = 0, sz = p.size(); i < 1<<sz; ++i)
		{
			int sg = +1; ll x = 1;
			for (int j = 0; j < sz; ++j)
				if (i>>j&1)
				{
					sg *= -1;
					x *= p[j];
				}

			ans += sg * ((a+m-1) / x - (a-1) / x);
		}
		cout << ans << "\n";
	}

	return 0;
}
