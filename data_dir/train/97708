#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define rep(i,a,b) for(int i = (a); i < (b); i++)
#define iter(it,c) for(auto it = (c).begin(); it != (c).end();++it)
#define pb push_back
#define fs first
#define sc second
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vii> vvii;

const int INF = ~(1<<31);
const double pi = acos(-1);
const double EPS = 1e-9;
typedef unsigned long long ull;

template <class T> T smod(T a, T b) {
  return (a % b + b) % b; }

vi EDG[200'050];
int C[200'050];

int main() {
    cin.sync_with_stdio(false);
    int q;
    cin >> q;
    rep(test,0,q) {
        int n,m;
        cin >> n >> m;
        rep(i,0,n) EDG[i].clear();
        rep(i,0,m) {
            int u,v;
            cin >> u >> v;
            u--;v--;
            EDG[u].pb(v);
            EDG[v].pb(u);
        }
        rep(i,0,n) C[i] = 0;
        rep(i,0,n) {
            int cnt = 0;
            iter(it,EDG[i]) cnt += C[*it];
            if(cnt == 0) {
                C[i] = 1;
            }
        }
        int tts = 0;
        rep(i,0,n) {
            if(C[i] == 1) {
                tts++;
            }
        }
        int want = 0;
        if(tts <= n/2) {
            want = 1;
        }
        vi A;
        rep(i,0,n) if(C[i] == want) A.pb(i);
        cout << size(A) << endl;
        iter(it,A) cout << *it+1 << " ";
        cout << endl;

    }
    return 0;
}


