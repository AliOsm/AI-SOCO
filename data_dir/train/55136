#include <bits/stdc++.h>

using namespace std;

#define long long long
#define INF (long) 1e9
#define MOD ((long) 1e9 + 7)
#define mll map<long, long>
#define pll pair<long, long>
#define pb push_back
#define FOR(i, a, b) \
  for (long i = a; i < (long) b; i++)
#define SORT(v, atr) \
  sort(v.begin(), v.end(), \
    [](auto &a, auto &b) { return a.atr < b.atr; });
#define UNSORT(v, atr) \
  sort(v.begin(), v.end(), \
    [](auto &a, auto &b) { return a.atr > b.atr; });
#define PRINTV(v) \
  FOR (_i, 0, v.size()) \
    printf("%lld ", v[_i]); \
  printf("\n");

set<long> gera_primos(long n)
{
  set<long> primos;
  vector<bool> crivo(n);
  primos.insert(2);
  for (long i = 3; i <= n; i += 2) {
    if (crivo[i]) continue;
    primos.insert(i);
    for (long j = i; j <= n; j += i) {
      crivo[j] = true;
    }
  }
  return primos;
}

struct Link
{
  long from, to, cost;
};

struct Node
{
  bool visitado = false;
  vector<Link> in, out;
};

struct Exam
{
  long a, b;
};

int main()
{
  //ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

  long n, m;
  cin >> n >> m;

  long cont = 0;
  long x = 0;
  if (n == 0) {
    puts("0");
    return 0;
  }
  if (n > 0 and n % 2 == 1) {
    cont++;
    x++;
  }
  while (true) {
    long y = (n - x) / 2;
    if ((cont + y) % m == 0) {
      cont += (n - x) / 2;
      break;
    }
    cont += 2;
    x += 2;
    if (x > n) {
      puts("-1");
      return 0;
    }
  }
  printf("%lld\n", cont);
}
