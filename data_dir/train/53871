#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 200000 + 20;
const int M = 1000000007;
const double PI = acos(-1);
const int oo = 1000000000;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
#define pb push_back 
#define all(c) (c).begin(),(c).end()
int n,m,v[N],seg[4*N][2],lazy[4*N],l,r,T,st[N],ed[N],rev[N];
vi g[N];

void fix(int u, int s, int e){
	lazy[u]%=2;
	if(s!=e){
		lazy[u*2]+=lazy[u];
		lazy[u*2+1]+=lazy[u];
	}
	if(lazy[u])
		swap(seg[u][0],seg[u][1]);
	lazy[u]=0;
}
void update(int u, int s, int e){
	fix(u,s,e);
	if(s>=l && e<=r){
		++lazy[u];
		fix(u,s,e);
		return;
	}
	if(s>r || e<l)
		return;
	update(u*2,s,(s+e)/2);
	update(u*2+1,(s+e)/2+1,e);
	for(int i=0; i<2; ++i)
		seg[u][i]=seg[u*2][i]+seg[u*2+1][i];
}
void build(int u, int s, int e){
	fix(u,s,e);
	if(s==e){
		seg[u][v[rev[s]]]++;
		return;
	}
	build(u*2,s,(s+e)/2);
	build(u*2+1,(s+e)/2+1,e);
	for(int i=0; i<2; ++i)
		seg[u][i]=seg[u*2][i]+seg[u*2+1][i];
}
int get(int u, int s, int e){
	fix(u,s,e);
	if(s>r || e<l)
		return 0;
	if(s>=l && e<=r)
		return seg[u][1];
	return get(u*2,s,(s+e)/2)+get(u*2+1,(s+e)/2+1,e);
}
void dfs(int u){
	st[u]=++T;
	rev[T]=u;
	for(int i=0; i<g[u].size(); ++i)
		dfs(g[u][i]);
	ed[u]=T;
}
int main(){
	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
	#endif
	cin>>n;
	for(int x,i=1; i<n; ++i){
		scanf("%d",&x);
		g[x-1].pb(i);
	}
	for(int i=0; i<n; ++i)
		scanf("%d",&v[i]);
	dfs(0);
	build(1,1,n);
	cin>>m;
	for(int x,i=0; i<m; ++i){
		char cmd[4];
		scanf("%s%d",cmd,&x);
		l=st[x-1];
		r=ed[x-1];
		if(cmd[0]=='g')
			printf("%d\n", get(1,1,n));
		else
			update(1,1,n);
	}
}