#include<bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define ff first
#define ss second
#define pb push_back
#define mk make_pair
#define ld long double
#define y1 asdfghjkl
#define ufo ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
using namespace std;

mt19937_64 mt_rnd_64(chrono::steady_clock::now().time_since_epoch().count());
long long rnd(long long l, long long r){
    return (mt_rnd_64() % (r-l+1)) + l;
}

int q,n,k,ans = INT_MAX,c1,c2,c3;
string s,t,A,B,C;

main()
{
    ufo;
    cin>>q;
    for(int Q = 0;Q < q;Q++){
        cin>>n>>k;
        cin>>s;
        ans = INT_MAX;
        A = "";
        B = "";
        C = "";
        A += 'R';
        B += 'G';
        C += 'B';
        for(int i = 1;i < k;i++){
            if(A[i-1] == 'R')A += 'G';
            else if(A[i-1] == 'G')A += 'B';
            else if(A[i-1] == 'B')A += 'R';

            if(B[i-1] == 'G')B += 'B';
            else if(B[i-1] == 'R')B += 'G';
            else if(B[i-1] == 'B')B += 'R';

            if(C[i-1] == 'B')C += 'R';
            else if(C[i-1] == 'R')C += 'G';
            else if(C[i-1] == 'G')C += 'B';

        }
        for(int i = 0;i <= s.size()-k;i++){
            c1 = 0;
            c2 = 0;
            c3 = 0;
            t = s.substr(i,k);
            for(int j = 0;j < t.size();j++){
                if(t[j] != A[j])c1++;
                if(t[j] != B[j])c2++;
                if(t[j] != C[j])c3++;
            }
            ans = min(ans,c1);
            ans = min(ans,c2);
            ans = min(ans,c3);
        }
        cout<<ans<<'\n';
    }
}
