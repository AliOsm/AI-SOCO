///*** One Last Try ***///
#include<bits/stdc++.h>
using namespace std;
#pragma comment(linker, "/stack:200000000")
#define inf ( int )( 1e9 )
#define mxs (int)( 1e6 + 10 )
#define ll long long int
#define md  int mid = ( l + r )>>1;
//int dx[]={+1,-1,+0,+0};///Four Directions
//int dy[]={+0,+0,+1,-1};///Four directions
//int dx [] = {+1,-1,+0,+0,-1,-1,+1,+1};///Eight Directions
//int dy [] = {+0,+0,+1,-1,+1,-1,-1,+1};///Eight Directions
ll t, n, m, j, ans, k, l,a, b, c, d, e,f ,sum , i ,lo , hi , mid;
string s, s2, s3, s4;
int ar [ mxs ] , ar2 [ 2 ][ mxs ];
void brainfuck();
int main()
{
    ios_base::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    brainfuck();
    return 0;
}
void brainfuck()
{
    vector < pair < ll , ll > > v;
    cin>>n;
    for ( i = 1 ; i <= n+n; i++ )
    {
        cin>>a;
        v.push_back( { a , i } );
    }
    sort( v.begin() , v.end() );
    for ( i = 0 ; i < n + n; i += 2 )
    {
        if ( !i )
        {
            a = abs(v [ i ].second - 1);
            a += abs( v [ i + 1 ].second - 1 );
        }
        else a = min( ( abs( v [ i - 1 ].second - v [ i ].second ) + abs( v [ i - 2 ].second - v [ i + 1 ].second ) ), ( abs( v [ i - 1 ].second  - v [ i + 1 ].second ) + abs( v [ i - 2 ].second - v [ i ].second ) )  );
        ans += a;
    }
    cout<<ans;
}
