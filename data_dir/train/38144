uccess isn't permanent, failure isn't fatal,
                                      it's the courage to continue that counts"*/
#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
//using namespace __gnu_pbds;
using namespace std;
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
#define ll long long 
#define scn(n) scanf("%d",&n)
#define lscn(n) scanf("%lld",&n)
#define lpri(n) printf("%lld",n)
#define pri(n) printf("%d",n)
#define pln() printf("\n")
#define priln(n) printf("%d\n",n)
#define lpriln(n) printf("%lld\n",n)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define pb push_back     
#define mp make_pair
#define F first
#define S second
#define gcd __gcd
#define inf INT_MAX
#define ninf INT_MIN
const ll mod=1e9+7;         
const int N=2e5+4;

int main()
{
    string s[10];
    
    rep(i,0,10)
    cin>>s[i];
    
    int a[10][10];
    
    rep(i,0,10)
    {
        rep(j,0,10)
        {
            if(s[i].at(j)=='X')
            a[i][j]=1;
            else if(s[i].at(j)=='O')
            a[i][j]=-1;
            else
            a[i][j]=0;
        }
    }
    
    int flag=0;
    
    rep(i,0,6)
    {
        rep(j,0,10)
        {
            int here=0;
            
            rep(k,0,5)
            here+=a[i+k][j];
            
            if(here==4)
            flag=1;
        }
    }
    
    rep(i,0,6)
    {
        rep(j,0,10)
        {
            int here=0;
            
            rep(k,0,5)
            here+=a[j][i+k];
            
            if(here==4)
            flag=1;
        }
    }
    
    rep(i,0,6)
    {
        rep(j,0,6)
        {
            int here=0;
            
            rep(k,0,5)
            here+=a[i+k][j+k];
            
            if(here==4)
            flag=1;
        }
    }
    
    rep(i,0,6)
    {
        rep(j,4,10)
        {
            int here=0;
            
            rep(k,0,5)
            here+=a[i+k][j-k];
            
            if(here==4)
            flag=1;
        }
    }
    
    if(flag)
    cout<<"YES";
    else
    cout<<"NO";
    
    return 0;
}