//Ansh Khanna
#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define fi first
#define se second
using namespace std;
#define sd(x) scanf("%d",&x)
#define pd(x) printf("%d",x)
#define sl(x) scanf("%lld",&x)
#define pl(x) printf("%lld",x)
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
#define N (int)(1e5+15)
int isc[N],vis[N],szv[N],sze[N];
vector<int> G[N];
void dfs(int x,int C){
    vis[x]=C;
    szv[C]++;
    for(int i=0;i<G[x].size();i++){
        int to=G[x][i];
        if(!vis[to])dfs(to,C);
    }
}
vector<pii> edges;
void solve(){
    int n,m,k;
    sd(n);sd(m);sd(k);
    for(int i=1;i<=k;i++){
        int x;
        sd(x);
        isc[x]=1;
    }
    for(int i=1;i<=m;i++){
        int x,y;
        sd(x);sd(y);
        G[x].pb(y);
        G[y].pb(x);
        edges.pb(mp(x,y));
    }
    for(int i=1;i<=n;i++){
        if(isc[i])
            dfs(i,i);
    }
    for(int i=1;i<=n;i++){
        if(!vis[i])
            dfs(i,i);
    }
    for(int i=0;i<m;i++){
        pii temp=edges[i];
        int u=temp.fi;
        int v=temp.se;
        sze[vis[u]]++;
    }
    ll totv=0,tote=0;
    for(int i=1;i<=n;i++){
        if(!isc[i]){
            totv+=szv[i];
            tote+=sze[i];
        }
    }
    ll sum=0;
    for(int i=1;i<=n;i++){
        if(isc[i]){
            ll tv=szv[i],te=sze[i];
            sum+=(tv*(tv-1))/2-te;
        }
    }
    ll ans=0;
    for(int i=1;i<=n;i++){
        if(isc[i]){
            ll tv=szv[i]+totv;
            ll te=sze[i]+tote;
            ll tv1=szv[i],te1=sze[i];
            ll sum1=sum-(tv1*(tv1-1))/2+te1;
            ans=max(ans,sum1+(tv*(tv-1))/2-te);
        }
    }
    pl(ans);
}
int main(){
   //freopen("input.IN","r",stdin);
   //freopen("out.txt","w",stdout);
   int t=1;
   //sd(t);
   //ios_base::sync_with_stdio(false);
   for(int i=1;i<=t;i++){
       //printf("Case #%d: ",i);
       solve();
   }
   return 0;
}
