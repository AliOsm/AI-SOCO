///Bismillahir Rahmanir Rahim
#include<bits/stdc++.h>

#define                           int                         long long
#define                           fi                          first
#define                           si                          second
#define                           mp                          make_pair
#define                           pb                          push_back
#define                           meme(x)                     memset(x,0,sizeof(x));
#define                           pi                          pair<int,int>
#define                           f(i,l,r)                    for(int i=l;i<=r;i++)
#define                           rf(i,r,l)                   for(int i=r;i>=l;i--)
#define                           done(i)                     cout<<"done = "<<i<<endl;
#define                           fast                        ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);




using namespace std;

const int inf=1e18;
const int mod=998244353;
const int M=300009;
inline int bigmod(int B,int P){int R=1;while(P>0){if(P&1){R=(R*B)%mod;}P>>=1;B=(B*B)%mod;}return R;}

int fact[M+8],infact[M+8];

void init()
{
   fact[0]=1;
   f(i,1,M)fact[i]=(fact[i-1]*i)%mod;
   infact[M]=bigmod(fact[M],mod-2);
   rf(i,M-1,0)infact[i]=(infact[i+1]*(i+1))%mod;
}

int magic(int x,int p)
{
    int ret=0;
    while(x%p==0)x=x/p,ret++;
    return ret;
}

 main()

{
    fast

    init();
    int d;
    cin>>d;
    vector<int>p;
    for(int i=2;i*i<=d;i++)
    {
            if(d%i)continue;
            while(d%i==0)d=d/i;
            p.pb(i);

    }
    if(d>1)p.pb(d);
    int q;
    cin>>q;
    while(q--)
    {
        int u,v,c1=0,ses=1,c2=0;
        cin>>u>>v;
        int gcd=__gcd(u,v);
        for(auto x:p)
        {
            int cu=magic(u,x);
            int cgcd=magic(gcd,x);
            int cv=magic(v,x);
            cu-=cgcd;
            cv-=cgcd;
            ses=(ses*infact[cu])%mod;
            ses=(ses*infact[cv])%mod;
            c1+=cu;c2+=cv;
        }

       ses=(ses*fact[c1])%mod;
       ses=(ses*fact[c2])%mod;
       cout<<ses<<endl;
    }


  return 0;

}


