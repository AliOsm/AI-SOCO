#include <vector>
#include <iostream>
#include <string>
#include <algorithm>
#include <iterator>
#include <queue>
#include <set>
#include <stdio.h>
#include <climits>
#include <map>
#include <time.h>
#include <random>
//#include "rubo.h"
//#include "rubo.h"

#define dbl double
#define pb push_back
#define SQ(x) (x)*(x)
#define ll long long
#define ull unsigned long long
#define vc vector
#define F first
#define S second
//#define in ll
#define pll pair<ll,ll>
#define pii pair<int,int>
#define all(x) x.begin(), x.end()
#define loop(xxx, yyy) for(int xxx = 0; xxx < yyy; xxx++)
//#define printf(fmt...) (0)
//#define puts(fmt...) (0)

using namespace std;

const int N = 200 * 1000 + 123;
const int M = 1000 * 1000 + 123;

int n;
vector<string> v;

map<int, int> mp;

vector<int> f(string s) {
	int l = s.length();
	vector<int> p(l, 0);


	if (s[0] == ')') {
		p[0] = -1;
	}
	else {
		p[0] = 1;
	}
	for (int i = 1; i < l; i++) {
		p[i] = p[i - 1];
		if (s[i] == ')') {
			p[i] -= 1;
		}
		else {
			p[i] += 1;
		}
	}
	return p;
}

int main() {
	cin >> n;
	loop(i, n) {
		string s;
		cin >> s;
		v.push_back(s);
	}

	loop(i, n) {
		string s = v[i];
		auto p = f(s);

		int mn = *min_element(all(p));
		int last = p.back();
		if (last <= 0 && mn == last) {
			mp[last]++;
		}
	}

	ll res = 0;
	loop(i, n) {
		string s = v[i];
		auto p = f(s);
		int mn = *min_element(all(p));
		int last = p.back();

		if (mn >= 0) {
			res += mp[-last];
		}
	}
	cout << res << endl;


    return 0;
}
