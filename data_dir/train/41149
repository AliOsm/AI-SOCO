/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

const ld PI = 3.14159265358979323846;

#define f(i,n) for(int i=0;i<n;i++)
#define rep(i,a,b) for(int i=a;i<=b;i++)

template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

class BOrderBook {
public:
	void solve(std::istream& in, std::ostream& out) {
		int n, s; in>>n>>s;
		map<int, int> buy, sell;
		f(i, n){
			char c; int p, v; in>>c>>p>>v;
			if(c=='B'){
				buy[-p] += v;
			}
			else sell[p] += v;
		}
		int cnt = 0;
		vector<pii> res;
		for(auto w: sell){
			res.emplace_back(w.first, w.second);
			++cnt;
			if(cnt==s) break;
		}
		reverse(res.begin(), res.end());
		for(auto w: res){
			out<<"S "<<(w.first)<<' '<<w.second<<'\n';
		}
		cnt = 0;
		for(auto w: buy){
			out<<"B "<<(-w.first)<<' '<<w.second<<'\n';
			++cnt;
			if(cnt==s) break;
		}
	}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	BOrderBook solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
