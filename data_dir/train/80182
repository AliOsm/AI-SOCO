#include<bits/stdc++.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#define endl '\n'
#define int long long
int n,m;
vector<int> v(2000000);
int seg[2000000];
int po(int a,int b)
{
    int res=1;
    while(b)
    {
        if(b%2!=0)
            res*=a;
        a*=a;
        b/=2;
    }
    return res;
}
void build(int node,int tl,int tr,int par)
{
    if(tl==tr)
        seg[node]=v[tl];
    else
    {
        int mid=(tl+tr)/2;
        build(node*2,tl,mid,par^1);
        build(node*2+1,mid+1,tr,par^1);
        if(par)
            seg[node]=seg[node*2]|seg[node*2+1];
        else
            seg[node]=seg[node*2]^seg[node*2+1];
    }
}
void update(int node,int tl,int tr,int pos,int val,int par)
{
    //trace3(node,tl,tr);
    if(tl==tr)
        seg[node]=val;
    else
    {
        int mid=(tl+tr)/2;
        if(pos<=mid)
            update(node*2,tl,mid,pos,val,par^1);
        else
            update(node*2+1,mid+1,tr,pos,val,par^1);
        if(par)
            seg[node]=seg[node*2]|seg[node*2+1];
        else
            seg[node]=seg[node*2]^seg[node*2+1];
    }
}
int32_t  main()
{
    IOS;
    cin>>n>>m;
    int x=n;
    n=po(2,n);
    for(int i=0;i<n;i++)
        cin>>v[i];
    build(1,0,n-1,x&1);
    //cout<<seg[1]<<endl;
    for(int i=0;i<m;i++)
    {
        int p,b;
        cin>>p>>b;
        update(1,0,n-1,p-1,b,x&1);
        cout<<seg[1]<<endl;
    }
}