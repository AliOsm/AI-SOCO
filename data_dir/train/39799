//In the name of God

#include <iostream>
#include <vector>
#include <cstdlib>
#include <algorithm>
#include <set>
using namespace std;
#define mp make_pair
#define X first
#define Y second
#define lol long long
const int MAXN=1e5+10;
vector <int> g[MAXN];
bool mark[MAXN];
int c[MAXN];
lol h[3];
bool dfs(int v,int col=1)
{
  mark[v]=true;
  c[v]=col;
  h[col]++;
  for(int i=0;i<g[v].size();i++)
    {
      int u=g[v][i];
      if(c[u]==col)
	return false;
      else if (!mark[u] and !dfs(u,3-col))
	return false;
    }
  return true;
}

int main()
{
  lol n,m;
  cin>>n>>m;
  for(int i=1;i<=m;i++)
    {
      int v,u;
      cin>>v>>u;
      g[v].push_back(u);
      g[u].push_back(v);
    }
  bool dob=true;
  lol ways=0;
  for(int i=1;i<=n;i++)
    {
      if(mark[i]==false)
	{
	  if(!dfs(i))
	    dob=false;
	  else
	    {
	      ways+=h[1]*(h[1]-1)/2;
	      ways+=h[2]*(h[2]-1)/2;
	      h[1]=h[2]=0;
	    }
	}
    }
  if(!dob)
    {
      cout<<0<<" "<<1<<endl;
      return 0;
    }
  int ans=10;
  for(int i=1;i<=n;i++)
    if(g[i].size()>1)
      ans=1;
  if(ans==1)
    {
      cout<<1<<" "<<ways<<endl;
      return 0;
    }
  for(int i=1;i<=n;i++)
    {
      if(g[i].size()>=1)
	ans=2;
    }
  if(ans==2)
    {
      cout<<2<<" "<<(n-2)*m<<endl;
      return 0;
    }
  lol x=n;
  cout<<3<<" "<<x*(x-1)*(x-2)/6<<endl;
  return 0;
}
