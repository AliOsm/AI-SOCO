/*bismillah ->                                                                                                         << Suirkhanov Meyirlan >>
  GL HF


                                                                                                                      42

    bless my code =)
                                                                                                            NEVER FOLLOW YOUR RULES :D HAHAHAHA
*/


///scanf ("%d%d", &x, &y);
///printf("%d", &a)

#include <bits/stdc++.h>

#define fast ios_base::sync_with_stdio();   cin.tie(0);   cout.tie(0);
#define randoperation srand(time(0));
#define pii pair < int , int >
#define pll pair < ll, ll >
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define fast ios_base::sync_with_stdio();   cin.tie(0);   cout.tie(0);
#define randoperation srand(time(0));

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const ll N = 200001;
const ld pi = 3.14159265359;
const int INF = 1e9 + 7;
const double eps = 1e-9;

const int xi[4] = {-1, 0, +1, 0};
const int yj[4] = {0, +1, 0, -1};
const int xxi[4] = {+1, 0, -1, 0};
const int yyj[4] = {0, -1, 0, +1};

int n, m, a[N], b[N], c[N], ans[4];

vector < pair < int, int > > v[4];

bool u[N];

int main(){

  //freopen("inevit.in", "r", stdin);
  //freopen("inevit.out", "w", stdout);

  fast
  randoperation;

  ///           ||
  ///start here \/

  cin >> n;

  for(int i = 1; i <= n; i++){
    cin >> c[i];
  }

  for(int i = 1; i <= n; i++){
    int x;
    cin >> x;
    v[x].pb({c[i], i});
  }

  for(int i = 1; i <= n; i++){
    int x;
    cin >> x;
    v[x].pb({c[i], i});
  }

  sort(v[1].begin(), v[1].end());
  sort(v[2].begin(), v[2].end());
  sort(v[3].begin(), v[3].end());

  cin >> m;

  for(int i = 1; i <= m; i++){

    int y;
    cin >> y;

    for(int i = ans[y]; i < v[y].size(); i++){
      if(!u[v[y][i].se]){
        u[v[y][i].se] = 1;
        cout << v[y][i].fi << ' ';
        ans[y] = i;
        break;
      }
      if(i + 1 == v[y].size()){
        ans[y] = i + 1;
      }
    }

    if(ans[y] == v[y].size()){
      cout << -1 << ' ';
    }
  }

  /*
  for(int i = 1; i <= n; i++){
    cout << p[i].fi << "->";
    for(auto j : v[p[i].fi]){
      cout << j << ' ';
    }
    cout << '\n';
  }
  */
}
