#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define INF 2000000000
#define MOD 1000000007
#define ll long long
#define vi vector<int>
#define pb push_back
#define ii pair<int,int>
#define vii vector<ii>
#define si set<int>
#define msi map<string,int>
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define TRvi(c,it) for(vi::iterator it=(c).begin();it!=(c).end();it++)
#define TRvii(c,it) for(vii::iterator it=(c).begin();it!=(c).end();it++)
#define TRmsi(c,it) for(msi::iterator it=(c).begin();it!=(c).end();it++)
 
 
using namespace std;


ll gcd(ll a, ll b)
{
    if (a == 0)
        return b;
    return gcd(b%a, a);
}
 
ll powerwithoutfact(ll x,ll y)
{
	if(y==0)
		return 1;
	ll p=powerwithoutfact(x,y/2);
	p*=p;
	if(y%2)
		p*=x;
	return p;
}
ll power(ll x, unsigned ll y, unsigned ll m)
{
    if (y == 0)
        return 1;
    ll p = power(x, y/2, m) % m;
    p = (p * p) % m;
 
    return (y%2 == 0)? p : (x * p) % m;
}
 
 
ll modInverse(ll a, ll m)
{
   	return power(a, m-2, m);
}

ll dp[200001][2];
int n;
ll arr[200001];
vector<int>adj[200001][2];

multiset<pair<ll,ll>>q;

ll dfs(int node,int type)
{
	if(node==1)
		return -2;
	if(q.find(make_pair(node,type))!=q.end())
	{
		dp[node][type]=-2;
		return dp[node][type];
	}
	if(dp[node][type]!=-1)
		return dp[node][type];
	q.insert(make_pair(node,type));
	dp[node][type]=arr[node];
	if(!adj[node][type].empty())
	{
		int temp=type;
		if(temp)
			temp=0;
		else
			temp=1;
		ll val=dfs(adj[node][type][0],temp);
		if(val==-2)
			dp[node][type]=-2;
		else
			dp[node][type]=arr[node]+val;
	}
	q.erase(make_pair(node,type));
	return dp[node][type];
}

int main()
{
    IOS;
    #ifndef ONLINE_JUDGE
        // for getting input from input.txt
        freopen("input.txt", "r", stdin);
        // for writing output to output.txt
        freopen("output.txt", "w", stdout);
    #endif
	cin >> n;
	REP(i,2,n)
		cin >> arr[i];
	REP(i,1,n)
	{
		dp[i][0]=-1;
		dp[i][1]=-1;
	}    
	REP(i,1,n)
	{
		ll val=arr[i]+i;
		if(val<=n)
			adj[i][0].pb(val);
		val=i-arr[i];
		if(val>0)
			adj[i][1].pb(val);
	}
	REP(i,1,n-1)
	{
		ll res=dfs(1+i,1);
		if(res==-2)
			cout << -1 << "\n";
		else
			cout << i+res << "\n";
	}
}