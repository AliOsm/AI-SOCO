/**/
#define _USE_MATH_DEFINES
#include<bits/stdc++.h>
using namespace std;

#define pb push_back
#define For(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += ((begin) > (end)?-1:1))
#define all( v ) (v).begin(),(v).end()
template<typename T> using V = vector<T>;
typedef long long int ll;
typedef unsigned long long int ull;
/***********************************************/
/*      ____________
 *     /            \
 *    /  /\      /\  \
 *   /  /  \    /  \  \
 *   \                /
 *    \     \___/    /-
 *     \____________/
 */
const ll mod = 1000000007;
bool is_lucky(size_t x){
	bool res = true;
	size_t t = 0;
	while(x){
		t = x%10;
		res &= t == 4 || t == 7;
		x /= 10;
	}
	return res;
}
size_t N,K,W;
ull pow_mod(ull base,ull power){
	ull res = 1;
	while(power){
		if(power&1)
			res = (res * base)%mod;
		base = (base * base)%mod;
		power>>=1;
	}
	return res;
}
ull fact[100010],inv[100000];
map<size_t,ll> cnt;
ll ncr(size_t N,size_t r){
	if(N == 0 && r == 0)return 1;
	if(r > N)return 0;
	return (((fact[N] * inv[r])%mod)*inv[N-r])%mod;
}
ll dp[2001][2001];
V<ll> c;
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);

	cin>>N>>K;
	size_t x;
	fact[0] = fact[1] = inv[0] = inv[1] = 1;
	For(i,0,N){
		cin>>x;
		if(is_lucky(x))
			cnt[x]++;
		else
			W++;
	}
	For(i,2,N+1)fact[i] = (fact[i-1] * i)%mod,inv[i] = pow_mod(fact[i],mod-2);
	for(auto&i:cnt)c.pb(i.second);
	dp[0][0] = 1;
	For(i,0,c.size()){
		For(j,0,c.size()){
			if(dp[i][j] == 0)continue;
			dp[i+1][j] = (dp[i+1][j] + dp[i][j])%mod;
			dp[i+1][j+1] = (dp[i+1][j+1] + c[i] * dp[i][j])%mod;
		}
	}
	size_t mx = min(K+1,(size_t)1999);
	ull res = 0;
	For(i,0,mx){
		res = (res + dp[c.size()][i] * ncr(W,K-i))%mod;
	}
	cout<<res<<endl;
	return 0;
}
/**/
