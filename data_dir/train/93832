#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
//#define int                 long long
#define ll                  long long
#define ld                  long double
#define rep(i,n)            for(int i=0;i<n;i++)
#define hell                1000000007LL
#define inf                 (ll)1e15
#define vi                  vector<int>
#define vii                 vector< vi >
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define pii                 pair<int,int>
#define all(c)              c.begin(),c.end()
#define sz(c)               (int)c.size()
#define hash1               105727LL
#define hash2               hell
#define eps                 1e-10
//#define pi                  3.141592653589793238462643383279502884197
typedef tree<pair<int,int>,null_type,less<pair<int,int> >,
rb_tree_tag,tree_order_statistics_node_update> statisticsTree;
ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll power(ll x, ll y,ll p)
{
	ll res=1;
	x=x%p;
	while(y>0)
	{
		if(y&1)
			res=((res%p)*(x%p))%p;
		y=y>>1;
		x=((x%p)*(x%p))%p;
	}
	return res;
}
ll raichu(ll x,ll y)
{
	ll res=1;
	while(y>0)
	{
		if(y&1)
			res=((res)*(x));
		y=y>>1;
		x=((x)*(x));
	}
	return res;
}
bool isprime(ll n)
{
	if(n<2) return false;
	else if(n==2) return true;
	else if(n%2==0) return false;
	else
	{
		ll z=sqrt(n);
		rep(i,z-1) if(n%(i+2)==0) return false;
		return true;
	}
}
int32_t main()
{
	//freopen("B-large.in","r",stdin);
	//freopen("out4.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int tests=1,Tests;
	//cin>>tests;
	Tests=tests;
	while(tests--)
	{
		int n,m,h,t;
		cin>>n>>m>>h>>t;
		vector<vector<int> > g(n);
		vector<set<int> > s(n);
		vector<pair<int,int> > e(m);
		rep(i,m)
		{
			int a,b;
			cin>>a>>b;
			a--;
			b--;
			g[a].pb(b);
			g[b].pb(a);
			s[a].insert(b);
			s[b].insert(a);
			e[i]=mp(a,b);
		}
		rep(i,m)
		{
			int a=e[i].fi,b=e[i].se;
			//cout<<sz(g[a])<<" "<<sz(g[b])<<endl;
			if(sz(g[a])>=h+1 && sz(g[b])>=t+1)
			{
				if(sz(g[a])<=sz(g[b]))
				{
					int c1=sz(g[a]),c2=sz(g[b]),common=0;
					for(int j=0;j<sz(g[a]);j++)
					{
						//g[a][j]
						if(s[b].find(g[a][j])!=s[b].end())
						{
							c2--,c1--;
							common++;
						}
					}
					//cout<<c1<<" "<<c2<<endl;
					c1--;
					c2--;
					if(c1+c2+common>=h+t)
					{
						cout<<"YES"<<endl;
						cout<<a+1<<" "<<b+1<<endl;
						c1=h;
						c2=t;
						set<int> tmp;
						for(int j=0;j<sz(g[a]);j++)
						{
							if(c1==0) break;
							if(g[a][j]!=b && s[b].find(g[a][j])==s[b].end())
							{
								cout<<g[a][j]+1<<" ";
								tmp.insert(g[a][j]);
								c1--;
							}
						}
						for(int j=0;j<sz(g[a]);j++)
						{
							if(c1==0) break;
							if(g[a][j]!=b && s[b].find(g[a][j])!=s[b].end())
							{
								cout<<g[a][j]+1<<" ";
								tmp.insert(g[a][j]);
								c1--;
							}
						}
						cout<<endl;
						for(int j=0;j<sz(g[b]);j++)
						{
							if(c2==0) break;
							if(g[b][j]!=a && tmp.find(g[b][j])==tmp.end())
							{
								cout<<g[b][j]+1<<" ";
								c2--;
							}
						}
						cout<<endl;
						assert(c1==0 && c2==0);
						return 0;
					}
				}
				else
				{
					int c1=sz(g[a]),c2=sz(g[b]),common=0;
					for(int j=0;j<sz(g[b]);j++)
					{
						//g[a][j]
						if(s[a].find(g[b][j])!=s[a].end())
						{
							c2--,c1--;
							common++;
						}
					}
					c1--;
					c2--;
					if(c1+c2+common>=h+t)
					{
						cout<<"YES"<<endl;
						cout<<a+1<<" "<<b+1<<endl;
						c1=h;
						c2=t;
						set<int> tmp;
						for(int j=0;j<sz(g[a]);j++)
						{
							if(c1==0) break;
							if(g[a][j]!=b && s[b].find(g[a][j])==s[b].end())
							{
								cout<<g[a][j]+1<<" ";
								tmp.insert(g[a][j]);
								c1--;
							}
						}
						for(int j=0;j<sz(g[a]);j++)
						{
							if(c1==0) break;
							if(g[a][j]!=b && s[b].find(g[a][j])!=s[b].end())
							{
								cout<<g[a][j]+1<<" ";
								tmp.insert(g[a][j]);
								c1--;
							}
						}
						cout<<endl;
						for(int j=0;j<sz(g[b]);j++)
						{
							if(c2==0) break;
							if(g[b][j]!=a && tmp.find(g[b][j])==tmp.end())
							{
								cout<<g[b][j]+1<<" ";
								c2--;
							}
						}
						cout<<endl;
						assert(c1==0 && c2==0);
						return 0;
					}
				}
			}
			swap(a,b);
			if(sz(g[a])>=h+1 && sz(g[b])>=t+1)
			{
				if(sz(g[a])<=sz(g[b]))
				{
					int c1=sz(g[a]),c2=sz(g[b]),common=0;
					for(int j=0;j<sz(g[a]);j++)
					{
						//g[a][j]
						if(s[b].find(g[a][j])!=s[b].end())
						{
							c2--,c1--;
							common++;
						}
					}
					//cout<<c1<<" "<<c2<<endl;
					c1--;
					c2--;
					if(c1+c2+common>=h+t)
					{
						cout<<"YES"<<endl;
						cout<<a+1<<" "<<b+1<<endl;
						c1=h;
						c2=t;
						set<int> tmp;
						for(int j=0;j<sz(g[a]);j++)
						{
							if(c1==0) break;
							if(g[a][j]!=b && s[b].find(g[a][j])==s[b].end())
							{
								cout<<g[a][j]+1<<" ";
								tmp.insert(g[a][j]);
								c1--;
							}
						}
						for(int j=0;j<sz(g[a]);j++)
						{
							if(c1==0) break;
							if(g[a][j]!=b && s[b].find(g[a][j])!=s[b].end())
							{
								cout<<g[a][j]+1<<" ";
								tmp.insert(g[a][j]);
								c1--;
							}
						}
						cout<<endl;
						for(int j=0;j<sz(g[b]);j++)
						{
							if(c2==0) break;
							if(g[b][j]!=a && tmp.find(g[b][j])==tmp.end())
							{
								cout<<g[b][j]+1<<" ";
								c2--;
							}
						}
						cout<<endl;
						assert(c1==0 && c2==0);
						return 0;
					}
				}
				else
				{
					int c1=sz(g[a]),c2=sz(g[b]),common=0;
					for(int j=0;j<sz(g[b]);j++)
					{
						//g[a][j]
						if(s[a].find(g[b][j])!=s[a].end())
						{
							c2--,c1--;
							common++;
						}
					}
					c1--;
					c2--;
					if(c1+c2+common>=h+t)
					{
						cout<<"YES"<<endl;
						cout<<a+1<<" "<<b+1<<endl;
						c1=h;
						c2=t;
						set<int> tmp;
						for(int j=0;j<sz(g[a]);j++)
						{
							if(c1==0) break;
							if(g[a][j]!=b && s[b].find(g[a][j])==s[b].end())
							{
								cout<<g[a][j]+1<<" ";
								tmp.insert(g[a][j]);
								c1--;
							}
						}
						for(int j=0;j<sz(g[a]);j++)
						{
							if(c1==0) break;
							if(g[a][j]!=b && s[b].find(g[a][j])!=s[b].end())
							{
								cout<<g[a][j]+1<<" ";
								tmp.insert(g[a][j]);
								c1--;
							}
						}
						cout<<endl;
						for(int j=0;j<sz(g[b]);j++)
						{
							if(c2==0) break;
							if(g[b][j]!=a && tmp.find(g[b][j])==tmp.end())
							{
								cout<<g[b][j]+1<<" ";
								c2--;
							}
						}
						cout<<endl;
						assert(c1==0 && c2==0);
						return 0;
					}
				}
			}
		}
		cout<<"NO";
	}
	return 0;
}