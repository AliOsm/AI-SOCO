#include<bits/stdc++.h>

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define all(c) (c).begin(),(c).end()
#define mp make_pair
#define pb push_back
#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define dbg(x) cerr<<__LINE__<<": "<<#x<<" = "<<(x)<<endl

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
const int inf = (int)1e9;
const double INF = 1e12, EPS = 1e-9;

int n, l[100001];
char buf[100001][9];

inline bool dfs(char *a, char *b, int p, int l, int big){
	if(p == l) return big;
	if(b[p] != '?'){
		if(!big && a[p] > b[p]) return 0;
		return dfs(a, b, p + 1, l, big || a[p] < b[p]);
	}
	rep(i, 10) if(big || a[p] - '0' <= i){
		if(p == 0 && i == 0) continue;
		b[p] = '0' + i;
		if(dfs(a, b, p + 1, l, big || a[p] - '0' < i)) return 1;
	}
	b[p] = '?';
	return 0;
}

int main(){
	scanf("%d", &n);
	buf[0][0] = '0';
	l[0] = 1;
	
	rep(i, n){
		scanf("%s", buf[i + 1]);
		l[i + 1] = strlen(buf[i + 1]);
	}
	
	for(int i = 1; i <= n; i++){
		if(l[i] < l[i - 1] || buf[i][0] == '0'){
			cout << "NO" << endl;
			return 0;
		}
		if(l[i] > l[i - 1]){
			for(int j = 0; buf[i][j]; j++) if(buf[i][j] == '?'){
				
				buf[i][j] = j == 0 ? '1' : '0';
			}
			continue;
		}
		if(!dfs(buf[i - 1], buf[i], 0, l[i], 0)){
			cout << "NO" << endl;
			return 0;
		}
	}
	puts("YES");
	rep(i, n) puts(buf[i + 1]);
	
	return 0;
}
