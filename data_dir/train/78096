#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <string>
#include <iostream>
using namespace std;

#define snuke(it,x) for (__typeof((x).begin()) it = (x).begin(); it != (x).end(); ++ it)
#define pb push_back
#define mp make_pair

typedef long long lld;

const int N = 5050;
int n,a[N],mark[N];
int dp[N][N];

void toMin(int &a,int b) {
        if (a>b)
                a = b;
}

int work() {
        for (int i = 0; i <= n; ++ i)
                for (int j = 0; j <= n; ++ j)
                        dp[i][j] = n;
        dp[0][0] = 0;
        for (int i = 1; i <= n; ++ i) {
                if (a[i]>n) {
                        a[i] = n;
                        mark[i] = 1;
                }
        }
        int ret = n;
        for (int i = 0; i < n; ++ i) {
                for (int j = a[i]-1; j >= 0; -- j)
                        toMin(dp[i][j],dp[i][j+1]);
                for (int j = 0; j<=a[i]; ++ j) if (dp[i][j]<n) {
                        toMin(dp[i+1][min(j,a[i+1])],dp[i][j]+1);
                        if (j>a[i+1])
                                toMin(dp[i+1][a[i+1]],dp[i][j]+mark[i+1]);
                        toMin(dp[i+1][a[i+1]],dp[i][j]+max(a[i+1]-j,0)+mark[i+1]);
                }
        }
        for (int i = 0; i <= n; ++ i) {
                ret = min(ret,dp[n][i]);
        }
        return ret;
}

int main() {
        scanf("%d",&n);
        for (int i = 1; i <= n; ++ i) {
                scanf("%d",a+i);
        }
        printf("%d\n",work());
        return 0;
}
