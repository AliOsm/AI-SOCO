/* Author haleyk10198 */
/* �@��:  haleyk10198 */
/* CF handle: haleyk100198*/
/* FOR ACM-ICPC WF*/
#include <bits/stdc++.h>

using namespace std;
using vi = vector<int>;
using vvi = vector<vi>;
using pii = pair<int, int>;
using ll = long long;

template<typename T1, typename T2>
constexpr auto mp = make_pair<T1, T2>;
template<typename T>
constexpr auto pb = mem_fn(&vector<T>::push_back);

constexpr auto MOD = 1000000007LL;
constexpr auto LINF = (1LL<<60);
constexpr auto INF = 2147483647LL;
constexpr auto PI = 3.1415926535897932384626433;
constexpr auto EPS = 1E-9;

template<typename T1, typename T2>
ostream& operator<<(ostream& out, const pair<T1, T2> p){
	out << p.first << ' ' << p.second << endl;
	return out;
}

template <typename T1, typename T2>
istream& operator>>(istream& in, pair<T1, T2> p){
	in >> p.first >> p.second;
	return in;
}

int main(){
	#ifdef LOCAL
		freopen("input.txt","r",stdin);
//		freopen("output.txt","w",stdout);
	#endif
//	ios_base::sync_with_stdio(false);

	int n; scanf("%d", &n);
	ll psum = 0, mx = 0, sz = 0;
	
	deque<int> q;
	for(int i = 0, op; i < n; i++){
		scanf("%d", &op);
		if(op == 1){
			scanf("%d", &mx);
			q.push_back(mx);
			
			while(q.size() > 1){
				if((psum+mx)*(sz+2) >= (psum+q.front()+mx)*(sz+1)){
					psum += q.front();
					q.pop_front();
					sz++;
				}
				else
					break;
			}
		}
		else if(op == 2){
			printf("%.6lf\n", mx-1.0*(psum+mx)/(sz+1));
		}
		else
			assert(false);
	}

	return 0;
}



