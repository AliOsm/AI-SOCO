#include <bits/stdc++.h>

using namespace std;


const int N = 4e6, MOD = 1e9 + 7;
const long double EPS = 0.000000001;

#define int long long

int a[N];

signed main() {

	ios::sync_with_stdio(false);
	cin.tie(0);
	multiset <int> s1;
	int n, m;
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		s1.insert(a[i]);
	}
	set <pair <int, int>> s;
	for (int i = 0; i < m; i++) {
		int t, r;
		cin >> t >> r;
		r--;
		while (!s.empty()) {
			auto to = *s.begin();
			if (to.first > r) {
				break;
			}
			s.erase(to);
		}
		s.insert({r, t});
	}
	int tek = -1;
	vector <int> ans;
	for (int i = n - 1; i >= 0; i--) {
		if (s.find({i, 1}) != s.end()) {
			tek = 1; // vos
		}
		else {
			if (s.find({i, 2}) != s.end()) tek = 2;
		}
		if (tek == -1) ans.push_back(a[i]), s1.erase(s1.find(a[i]));
		else {
			if(tek == 2) {
				ans.push_back(*s1.begin());
				s1.erase(s1.find(*s1.begin()));
			}
			else {
				//cout << *s1.rbegin() << endl << endl;
				ans.push_back(*s1.rbegin());
				s1.erase(s1.find(*s1.rbegin()));
			}
		}
	}
	reverse(ans.begin(), ans.end());
	for (auto to : ans) cout << to << ' ';

}
