#include <bits/stdc++.h>

using namespace std;

const int MaxN = 1e5 + 15;

int n, m, q;

int a[MaxN], b[MaxN];

long long c1[MaxN], c2[MaxN];

long long cur;

set<long long> s;

int get2(int x)
{
    return x / 2;
}

int get2(int l, int r)
{
    return get2(r) - get2(l - 1);
}

int get1(int x)
{
    return x - x / 2;
}

int get1(int l, int r)
{
    return get1(r) - get1(l - 1);
}

long long get(long long x)
{
    long long res = 1e9 * 1ll * 1e9;
    set<long long> :: iterator it = s.lower_bound(x);
    if(it != s.end())
        res = min(res, abs(x - (*it)));
    if(it != s.begin())
    {
        --it;
        res = min(res, abs(x - (*it)));
    }
    return res;
}

int main()
{
//    freopen("input.txt", "r", stdin);
    ios_base :: sync_with_stdio(false);
    cin.tie(NULL);
    cin >> n >> m >> q;

    for(int i = 1; i <= n; ++i)
    {
        cin >> a[i];
        if(i & 1)
            cur += a[i];
        else
            cur -= a[i];
    }

    for(int i = 1; i <= m; ++i)
    {
        cin >> b[i];
        c1[i] = c1[i - 1];
        c2[i] = c2[i - 1];
        if(i & 1)
        {
            c1[i] += b[i];
            c2[i] -= b[i];
        }else
        {
            c1[i] -= b[i];
            c2[i] += b[i];
        }
        if(i >= n)
        {
            int l = i - n + 1;
            long long k;
            if(l & 1)
                k = c2[i] - c2[l - 1];
            else
                k = c1[i] - c1[l - 1];

            s.insert(-k);
        }
    }

    cout << get(cur) << '\n';

    for(int i = 1; i <= q; ++i)
    {
        int l, r, x;
        cin >> l >> r >> x;
        cur += get1(l, r) * 1ll * x;
        cur -= get2(l, r) * 1ll * x;
        cout << get(cur) << '\n';
    }
}
