#define _CRT_SECURE_NO_DEPRECATE
#define _USE_MATH_DEFINES
#include <iostream>
#include <cmath>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <memory.h>
#include <set>
#include <ctime>
#include <map>
#include <cstring>
#include <iterator>
 
using namespace std;
 
#define ll long long
#define ld long double
#define pb push_back
#define pii pair<int, int>
#define pll pair<long long, long long>
#define pdd pair<double, double>
#define pldld pair<ld, ld>
#define mp make_pair
#define ull unsigned long long
#define pss pair<string, string>
#pragma comment(linker, "/STACK:64000000")
 
const int infi = 1e9 + 7;
const ll infl = 1e18;
const long double eps = 1e-7;
const long double eps1 = 1e-10;
const int mod = (1e9 + 7);
const ll mod1 = 1e9 + 7;
const ll mod2 = 1e9 + 9;
const ll p1 = 29;
const ll p2 = 31;
const int ver1 = (62 * 62);



void next1(int &x, int &y, int &n, int &k) {
    y += (1 << k);
    if (y > (1 << n)) {
        y = 1;
        x += (1 << k);
    }
    if (x > (1 << n)) {
        --k;
        x = 1, y = 1;
    }
    return;
}
int ar[2000500];
int ans[2050][2050];
ll ans1;
void rec(int l, int r, int u, int d) {
    int m = 0;
    for (int i = l; i <= r; ++i) {
        for (int j = u; j <= d; ++j) {
            m = max(m, ans[i][j]);
        }
    }
    ans1 += (ll)m;
    if (l == r) {
        return;
    }
    int m1 = (l + r) >>1;
    int m2 = (u + d) >> 1;
    rec(l, m1, u, m2);
    rec(l, m1, m2 + 1, d);
    rec(m1 + 1, r, u, m2);
    rec(m1 + 1, r, m2 + 1, d);
    return;
}


int main() {
   // freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
    //freopen("vase.in", "r", stdin); freopen("vase.out", "w", stdout);
    int n;
    cin >> n;
    int q = 0;
    while ((1 << q) <= n) {
        ++q;
    }
    --q;
    q /= 2;
    swap(n, q);
    for (int i = 0; i < q; ++i) {
        scanf("%d", &ar[i]);
    }
    sort(ar, ar + q);
    reverse(ar, ar + q);
    int x = 1, y = 1;
    int k = n;
    for (int i = 0; i < q; ++i) {
        while (ans[x][y]) {
            next1(x, y, n, k);
        }
        ans[x][y] = ar[i];
    }
    rec(1, 1 << n, 1, 1 << n);
    cout << ans1;

    return 0;
}