#include <bits/stdc++.h>

using namespace std;

int t, n, m, cnt[3005];
long long bb[3005], ww[3005];
vector<int> v[3005];
pair<int, long long> dp[3005][3005];

#define ADD(a, b) {(a).first + (b).first, (a).second + (b).second}

void dfs(int a, int b) {
	cnt[a] = 0;
	dp[a][0] = {0, ww[a]};
	for (int i : v[a])
		if (i != b) {
			dfs(i, a);
			for (int j = cnt[a] + 1; j <= cnt[a] + cnt[i]; j++)
				dp[a][j].first = -1;
			for (int j = cnt[a] + cnt[i]; j >= 0; j--) {
				pair<int, long long> tmp = {-1, -1};
				for (int k = max(0, j - cnt[a]); k <= min(cnt[i], j); k++)
				// for (int k = 0; k <= cnt[i]; k++)
					// if (j - k >= 0 && j - k <= cnt[a])
						tmp = max(tmp, ADD(dp[a][j - k], dp[i][k]));
				dp[a][j] = tmp;
			}
			cnt[a] += cnt[i];
		}
	// printf("%d[%d]: ", a, b); for (int i = 0; i <= cnt[a]; i++) printf("%d,%3lld ", dp[a][i].first, dp[a][i].second); puts("");
	if (b == 0)
		return;
	dp[a][cnt[a] + 1].first = -1;
	for (int i = cnt[a]; i >= 0; i--)
		dp[a][i + 1] = max(dp[a][i + 1], {dp[a][i].first + (dp[a][i].second > 0), 0L});
	cnt[a]++;
	// printf("%d[%d]: ", a, b); for (int i = 0; i <= cnt[a]; i++) printf("%d,%3lld ", dp[a][i].first, dp[a][i].second); puts("");
}

int main() {
	scanf("%d", &t);
	while (t--) {
		scanf("%d%d", &n, &m);
		for (int i = 1; i <= n; i++)
			scanf("%lld", bb + i);
		for (int i = 1; i <= n; i++) {
			scanf("%lld", ww + i);
			ww[i] -= bb[i];
		}
		for (int i = 1; i < n; i++) {
			int ta, tb;
			scanf("%d%d", &ta, &tb);
			v[ta].push_back(tb);
			v[tb].push_back(ta);
		}
		dfs(1, 0);
		printf("%d\n", dp[1][m - 1].first + (dp[1][m - 1].second > 0));
		for (int i = 1; i <= n; i++)
			vector<int>().swap(v[i]);
	}
}
