#include <bits/stdc++.h>
using namespace std;

ifstream fi("616C.INP");
ofstream fo("616C.OUT");

int X[]={0,0,-1,1};
int Y[]={-1,1,0,0};
int m,n,dem,Count=0,Pre[1000005],a[1005][1005];
bool Free[1005][1005]={false};
char s[1005][1005];

void DFS(int u,int v)
{
    Free[u][v]=true;
    dem++;
    a[u][v]=Count;
    for(int i=0;i<=3;i++)
    {
        int uu=u+X[i];
        int vv=v+Y[i];
        if(Free[uu][vv]==false)
            DFS(uu,vv);
    }
}

void Enter()
{
    cin>>m>>n;
    for(int i=1;i<=m;i++)
        for(int j=1;j<=n;j++)
        {
            cin>>s[i][j];
            Free[i][j]=(s[i][j]=='*');
        }
    for(int i=1;i<=m;i++)
    {
        Free[i][0]=true;
        Free[i][n+1]=true;
    }
    for(int i=1;i<=n;i++)
    {
        Free[0][i]=true;
        Free[m+1][i]=true;
    }
}

void Process()
{
    for(int i=1;i<=m;i++)
        for(int j=1;j<=n;j++)
            if(Free[i][j]==false)
            {
                dem=0;
                Count++;
                DFS(i,j);
                Pre[Count]=dem;
            }
    for(int i=1;i<=m;i++)
    {
        for(int j=1;j<=n;j++)
            if(s[i][j]=='.')
                cout<<s[i][j];
            else
            {
                int l1=-1,l2=-1,l3=-1,res=0;
                for(int k=0;k<=3;k++)
                {
                    int u=i+X[k];
                    int v=j+Y[k];
                    if(u>0&&u<=m&&v>0&&v<=n&&a[u][v]!=l1&&a[u][v]!=l2&&a[u][v]!=l3)
                    {
                        if(l1==-1)
                            l1=a[u][v];
                        else
                        if(l2==-1)
                            l2=a[u][v];
                        else
                        if(l3==-1)
                            l3=a[u][v];
                        res+=Pre[a[u][v]];
                    }
                }
                cout<<(res+1)%10;
            }
        cout<<endl;
    }
}

int main()
{
    Enter();
    Process();
}
