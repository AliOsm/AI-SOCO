#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define INF 2000000000
#define MOD 1000000007
#define ll long long
#define vi vector<int>
#define pb push_back
#define ii pair<int,int>
#define vii vector<ii>
#define si set<int>
#define msi map<string,int>
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define TRvi(c,it) for(vi::iterator it=(c).begin();it!=(c).end();it++)
#define TRvii(c,it) for(vii::iterator it=(c).begin();it!=(c).end();it++)
#define TRmsi(c,it) for(msi::iterator it=(c).begin();it!=(c).end();it++)
 
 
using namespace std;

ll power(ll a,ll b)
{
	if(b==0)
		return 1;
	ll p=power(a,b/2);
	p*=p;
	if(b%2)
		p*=a;
	return p;
}

int main()
{
    IOS;
    #ifndef ONLINE_JUDGE
        // for getting input from input.txt
        freopen("input.txt", "r", stdin);
        // for writing output to output.txt
        freopen("output.txt", "w", stdout);
    #endif
    ll n,s;
    cin >> n >> s;
    int ind=0;
    if(n<=s)
    {
    	cout << 0;
    	return 0;
    }
   	ll arr[19];
   	ll temp=n;
    while(ind<=18)
    {
    	arr[ind]=temp%10;
    	temp/=10;
    	ind++;
    }
    ll pre[19];
    ll no[19];
    pre[0]=0;
    ll prev=0;
   	temp=s;
   	int flag=0;
    REP(i,1,17)
    {
    	prev*=10;
    	prev+=9;
    	no[i]=prev;
    	if(flag==1)
    		pre[i]=pre[i-1];
    	else if(prev*9+pre[i-1]>1000000000000000000)
    	{
    		pre[i]=pre[i-1]+prev*9;
    		flag=1;
    	}
    	else	
    		pre[i]=prev*9+pre[i-1];
    }
    no[18]=prev*10+9;
    ll sum=0;
    for(int i=18;i>=0;i--)
    {
    	if(i>0)
    	{
    		char ch='n';
	    	REP(j,0,9)
	    	{
	    		if(temp-j*no[i]<=pre[i-1])
	    		{
	    			sum+=j*power(10,i);
	    			temp-=j*no[i];
	    			ch='y';
	    			break;
	    		}
	    	}
	    	if(ch=='n')
	    	{
	    		cout << 0;
	    		return 0;
	    	}
	    }
	    else
	    {
	    	if(temp>0)
	    	{
	    		cout << 0;
	    		return 0;
	    	}
	    }
    }
   	cout << max(0,n-sum+1);
}