#include <bits/stdc++.h>
using namespace std;
int n,deg[1<<17],s[1<<17];
vector<vector<int> >edges(1<<17);
vector<pair<int,int>  >v,tmp,ans;
void solve(int node){
    if(deg[node] == 1){
        edges[node].push_back(s[node]);
        deg[s[node]]--,s[s[node]] ^= node;
        deg[node] = 0;
        solve(s[node]);
    }
}
void build(){
    sort(v.begin(),v.end());
    for(int i=0; i<v.size(); i++){
        int node = v[i].second;
        solve(node);
        if(deg[node] > 1)
            tmp.push_back({deg[node],node});
    }
}
int main()
{
    ios::sync_with_stdio(0);
    cin>>n;
    for(int i=0; i<n; i++){
        cin>>deg[i]>>s[i];
        v.push_back({deg[i],i});
    }
    build();
    for(int i=0; i<n; i++)
        for(auto j : edges[i])
            ans.push_back({i,j});
    cout<<ans.size()<<endl;
    for(auto i : ans)
        cout<<i.first<<" "<<i.second<<endl;
    return 0;
}
