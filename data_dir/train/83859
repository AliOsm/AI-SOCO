///****In the name of Allah, most Gracious, most Compassionate****//

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair <int, int> pii;

#define ALL(a) a.begin(), a.end()
#define FastIO ios::sync_with_stdio(false); cin.tie(nullptr);cout.tie(nullptr)
#define IN freopen("input.txt","r+",stdin)
#define OUT freopen("output.txt","w+",stdout)

#define DBG(a) cout<< #a <<" --> "<<(a)<<endl
#define NL cout<<"\n"

template < class T1,class T2>
ostream &operator <<(ostream &os,const pair < T1,T2 > &p)
{
    os<<"{"<<p.first<<","<<p.second<<"}";
    return os;
}

const int N=3e3+5;
const int oo=1e9+7;
int dp1[N][N];
int dp2[N][N];
string s;
string pr1(int i,int j)
{
    if(i>=j) return "";
    if(s[i] == s[j])
    {
        return s[i] + pr1(i+1, j-1) ;
    }
    else
    {
        if(dp1[i][j] == dp1[i+1][j])
            return pr1(i+1, j);
        else return pr1(i,j-1);
    }
}
string pr2(int i,int j)
{
    if(i>j) return "";
    if(i==j) return string(1,s[i]);
    if(s[i]==s[j])
    {
        return s[i]+pr2(i+1, j-1)+s[j];
    }
    else
    {
        if(dp2[i][j] == dp2[i+1][j])
            return pr2(i+1, j);
        else return pr2(i,j-1);
    }
}
int32_t main()
{
    FastIO;

    vector<int > cnt(26);
    cin>>s;
    int n= s.size();

    for(char c: s)
        cnt[c-'a']++;
    for(int i=0; i<26; i++)
    {
        if(cnt[i]>=100)
        {
            cout<<string(100, 'a'+i)<<"\n";
            return 0;
        }
    }
    for(int len = 2; len<=n; len++)
    {
        for(int i=0; i<n; i++)
        {
            int j= i+len-1;
            if(j>=n) break;
            dp1[i][j] =max(dp1[i+1][j], dp1[i][j-1]);
            if(s[i]==s[j])
                dp1[i][j] = 2+ dp1[i+1][j-1] ;
        }
    }
    for(int i=0; i<n; i++)
    {
        dp2[i][i]=1;
    }
    for(int len = 2; len<=n; len++)
    {
        for(int i=0; i<n; i++)
        {
            int j= i+len-1;
            if(j>=n) break;
            dp2[i][j] =max(dp2[i+1][j], dp2[i][j-1]);
            if(s[i]==s[j])
                dp2[i][j] = 2+ dp2[i+1][j-1] ;
        }
    }

    if(dp1[0][n-1]>=100)
    {
        string ans = pr1(0,n-1);
        reverse(ALL(ans));
        ans.erase(ans.begin()+ 50 , ans.end());
        string ans2  =ans;
        reverse(ALL(ans));
        cout<<ans<<ans2<<"\n";
    }
    else
    {
        if(dp1[0][n-1]>=dp2[0][n-1])
        {
            string ans = pr1(0,n-1);
            string ans2  =ans;
            reverse(ALL(ans2));
            cout<<ans<<ans2<<"\n";
        }
        else
        {
            string ans = pr2(0,n-1);
            cout<<ans<<"\n";
        }
    }

}
