#include <bits/stdc++.h>
#include<stdio.h>
#include <map>
#include<unordered_map>
using namespace std;
#define sf(a) scanf("%d",&a)
#define sf2(a,b) scanf("%d %d",&a,&b)
#define sf3(a,b,c) scanf("%d %d %d",&a,&b,&c)
#define pf(a) printf("%d",a)
#define pf2(a,b) printf("%d %d",a,b)
#define pf3(a,b,c) printf("%d %d %d",a,b,c)
#define sfl(a) scanf("%lld",&a)
#define sfl2(a,b) scanf("%lld %lld",&a,&b)
#define sfl3(a,b,c) scanf("%lld %lld %lld",&a,&b,&c)
#define pfl(a) printf("%lld",a)
#define pfl2(a,b) printf("%lld %lld",a,b)
#define pfl3(a,b,c) printf("%lld %lld %lld",a,b,c)
#define nl printf("\n")
#define ll long long
#define se second
#define fi first
#define mk(a, b) make_pair(a, b)
#define pb push_back
#define vi vector<int>
#define vvi vector<vector<int>>
#define pii pair<int, int>
#define vvpi vector<vector<pii>>
#define pli pair<ll, int>
#define INF 1e9
#define MAX (int)1e6 + 5
#define FI freopen("input.txt", "r", stdin);
#define FO freopen("o.txt", "w", stdout);
#define in ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define edge pair<ll, pair<int, int>>
#define CYA  exit(0);
/*int dx[] = { 0, 1, 0, -1 };
int dy[] = { 1, 0, -1, 0 }; // 4 Direction*/
/*int dx[]={1,1,0,-1,-1,-1,0,1};
int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction*/
int dx[] = { 2,1,-1,-2,-2,-1,1,2 };
int dy[] = { 1,2,2,1,-1,-2,-2,-1 };//Knight Direction*/
const int MOD = 1e9 + 7;
const int N = 1e6 + 5;
ll n, m, k;
vi v;
int arr[N];
int e=0;
bool ok(int mid){
    memset(arr,0,sizeof arr);
    if(mid>n)return 0;
    int cnt=0;
    for(int i=1;i<=mid;i++){
        arr[v[i]]++;
        if(arr[v[i]]==1){
            cnt++;
        }
    }
        if(cnt<=k){
         e=mid;
                return 1;
        }
    for(int i=mid+1;i<=n;i++){
        arr[v[i]]++;
        if(arr[v[i]]==1)cnt++;
        arr[v[i-mid]]--;
        if(arr[v[i-mid]]==0)cnt--;
        if(cnt<=k){
            e=i;
                return 1;
    }
    }
    return 0;
}
int main()
{
	in;
    cin>>n>>k;
    v.resize(n+1);
    for(int i=1 ;i<=n;i++)
        cin>>v[i];
    int l=0,r=n+1,ans=0;
    while(l<r){
        int mid=(l+r)/2;
        if(ok(mid)){
                l=mid+1;
                ans=mid;
        }
        else {
            r=mid-1;
        }
    }
    while(ok(ans))ans++;
   //     cout<<"D"<<endl;
    ans--;
    //cout<<ans<<endl;
    ok(ans);
    cout<<e-ans+1<<" "<<e<<endl;
}
