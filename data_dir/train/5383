#include <bits/stdc++.h>

using namespace std;

#define SZ(x) ((int)(x).size())
#define PB(x) push_back(x)
#define MEMSET(x,v) memset(x,v,sizeof(x))
#define REP(i,n) for(int (i)=0;(i)<(n);++(i))
#define x first
#define y second
#define INF (0x3f3f3f3f)

typedef long long LL;
typedef pair<int, int> P2;
template<class A, class B> inline bool mina(A &x, B y) {return (x > y)?(x=y,1):0;}
template<class A, class B> inline bool maxa(A &x, B y) {return (x < y)?(x=y,1):0;}

const int MAXE = 60;

int p2[MAXE];
int u2[MAXE];
int remaining2[MAXE];
int main() {
    int N;
    cin >> N;
    vector<LL> in;
    LL a;
    REP(i, N) {
        cin >> a;
        if ((a & (a - 1)) == 0) {
            p2[__builtin_ctzll(a)]++;
        } else {
            in.PB(a);
        }
    }
    int maxx = p2[0];
    int left = 1, right = maxx;
    bsearch_start:
    while (left <= right) {
        int mid = (left + right) / 2;
        u2[0] = mid;
        for (int i = 1; i < MAXE; i++) {
            u2[i] = min(u2[i - 1], p2[i]);
        }
        REP(i, MAXE) remaining2[i] = p2[i] - u2[i];
        int total_tails = 0;
        int cur = SZ(in) - 1;
        for (int i = MAXE - 1; i >= 0; i--) {
            while (cur >= 0 && in[cur] >= (1LL<<i)) {
                total_tails++;
                cur--;
            }
            total_tails += remaining2[i];
            if (total_tails > u2[i]) {
                left = mid + 1;
                goto bsearch_start;
            }
        }
        right = mid - 1;
    }
    if (left == maxx + 1) {
        printf("-1\n");
    } else {
        for (int i = left; i <= maxx; i++) {
            printf("%d ", i);
        }
        printf("\n");
    }
    return 0;
}
