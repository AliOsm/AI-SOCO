#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define mod 1000000007LL
#define maxn 200005
#define IN freopen("C.in","r",stdin)
#define OUT freopen("output.txt","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define INF 1000000000000000000LL
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 10002
#define sq(x) ((x)*(x))

using namespace __gnu_pbds;
using namespace std ;

typedef tree< i64, null_type, less<i64>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef pair<i64, i64> pii;

vector <i64> v ;

i64 a[100005] ;

int main()
{
    i64 i , j , k , l , m , n ;

    scanf("%lld %lld %lld",&n,&k,&l) ;

    m = n*k ;

    for(i=1 ; i<=m ; i++) scanf("%lld",&a[i]) ;

    sort( a+1, a+m+1 ) ;

    v.pb(a[1]) ;
    for(i=2 ; i <=m ; i++)
    {
        if( a[i]-a[1] >l ) break ;
        v.pb(a[i] ) ;
    }

    if( v.size() < n )
    {
        printf("0\n") ;
        return 0 ;
    }

    i64 sz = (i64)v.size() ;

    i64 ans = 0LL ;

    for(i=0 ; i<sz ; i+=k)
    {
        ans += v[i] ;
        v[i] = -1 ;
        n-- ;
    }
    i = sz-1 ;
    while(n!=0)
    {
        if( v[i]==-1 )
        {
            i-- ;
            continue ;
        }
        ans+= v[i] ;
        n-- ;
        i-- ;
    }

    printf("%lld\n",ans) ;

    return 0 ;
}
