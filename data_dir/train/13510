#include <bits/stdc++.h>
using namespace std;

#define mp make_pair
#define pb push_back

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 200100;

int n, t;
string s;
int nxt[MAXN];

int main() {
#ifdef LOCAL
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cin >> n >> t >> s;
  for (int i = n - 1; i > -1; --i) {
    if (s[i] == '4') {
      nxt[i] = i == n - 1 ? n : nxt[i + 1];
    } else {
      nxt[i] = i;
    }
  }
  for (int i = 0; i < n; ++i) {
    if (s[i] == '.') {
      for (int j = i + 1; j < n; ++j) {
        if (s[j] > '4') {
          if (j == i + 1) {
            int pos = i - 1;
            s = s.substr(0, i);
            while (pos >= 0) {
              ++s[pos];
              if (s[pos] > '9') {
                s[pos] = '0';
              } else break;
              --pos;
            }
            if (pos == -1) {
              s = "1" + s;
            }
            cout << s << '\n';
            return 0;
          } else {
            s = s.substr(0, j);
            ++s.back();
            cout << s << '\n';
            return 0;
          }
        } else if (s[j] == '4') {
          if (nxt[j] < n && s[nxt[j]] > '4') {
            if (nxt[j] - j + 1 <= t) {
              if (j == i + 1) {
                int pos = i - 1;
                s = s.substr(0, i);
                while (pos >= 0) {
                  ++s[pos];
                  if (s[pos] > '9') {
                    s[pos] = '0';
                  } else break;
                  --pos;
                }
                if (pos == -1) {
                  s = "1" + s;
                }
                cout << s << '\n';
                return 0;
              }
              ++s[j - 1];
              s = s.substr(0, j);
              cout << s << '\n';
              return 0;
            }
            if (nxt[j] - j <= t) {
              s[j] = '5';
              s = s.substr(0, j + 1);
              cout << s << '\n';
              return 0;
            }
          }
        }
      }
      cout << s << endl;
      return 0;
    }
  }
  return 0;
}