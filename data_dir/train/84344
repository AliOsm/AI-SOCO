#include <cstdio>
#include <set>
using namespace std;
int a[100010];
int n;
int f(int mid) {
	if (a[0] - a[1] > mid || a[1] - a[0] > mid) return 0;
	set<int> s;
	set<int>::iterator it;
	s.insert(a[0]);
	for (int i = 2; i < n + 2; i++) {
		if (a[i] - a[i-1] > mid || a[i-1] - a[i] > mid) {
			while (s.size() && (*s.begin() - a[i] > mid || a[i] - *s.begin() > mid)) {
				s.erase(s.begin());
			}
			while (s.size() && (it = s.end(), --it, *it - a[i] > mid || a[i] - *it > mid)) {
				s.erase(it);
			}
			if (!s.size()) return 0;
		} else {
			while (s.size() && (*s.begin() - a[i] > mid || a[i] - *s.begin() > mid)) {
				s.erase(s.begin());
			}
			while (s.size() && (it = s.end(), --it, *it - a[i] > mid || a[i] - *it > mid)) {
				s.erase(it);
			}
			s.insert(a[i-1]);
		}
	}
	return 1;
}
int main() {
	scanf("%d%d%d", &n, &a[0], &a[1]);
	for (int i = 2; i < n + 2; i++) {
		scanf("%d", &a[i]);
	}
	int lo = 0, hi = 1001001001;
	while (lo + 1 < hi) {
		int mid = lo + (hi - lo) / 2;
		if (f(mid)) {
			hi = mid;
		} else {
			lo = mid;
		}
	}
	printf("%d\n", hi);
	return 0;
}
