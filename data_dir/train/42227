#include <bits/stdc++.h>
using namespace std;

const int MAXN = 10;
int n, m, mx, ar[MAXN][MAXN], ans[MAXN][MAXN];
int dx[4][4] = {
	{0, 0, -1, 1},
	{0, 0, 1, 2},
	{0, 0, 1, -1},
	{-1, -2, 0, 0}
};

int dy[4][4] = {
	{-1, -2, 0, 0},
	{1, -1, 0, 0},
	{1, 2, 0, 0},
	{0, 0, 1, -1}
};

//dx[0] = {0, 0, -1, 1};
//dx[1] = {0, 0, 1, 2};
//dx[2] = {0, 0, 1, -1};
//dx[3] = {-1, -2, 0, 0};
//dy[0] = {-1, -2, 0, 0};
//dy[1] = {1, -1, 0, 0};
//dy[2] = {1, 2, 0, 0};
//dy[3] = {0, 0, 1, -1};
inline bool check1(int r, int c) {
	for (int i = 0; i < 4; i++) {
		int x = r + dx[0][i], y = c + dy[0][i];
		if (!(x >= 0 && x < n && y >= 0 && y < m && !ar[x][y]))
			return 0;
	}
	return !ar[r][c];
}

inline bool check2(int r, int c) {
	for (int i = 0; i < 4; i++) {
		int x = r + dx[1][i], y = c + dy[1][i];
		if (!(x >= 0 && x < n && y >= 0 && y < m && !ar[x][y]))
			return 0;
	}
	return !ar[r][c];
}

inline bool check3(int r, int c) {
	for (int i = 0; i < 4; i++) {
		int x = r + dx[2][i], y = c + dy[2][i];
		if (!(x >= 0 && x < n && y >= 0 && y < m && !ar[x][y]))
			return 0;
	}
	return !ar[r][c];
}

inline bool check4(int r, int c) {
	for (int i = 0; i < 4; i++) {
		int x = r + dx[3][i], y = c + dy[3][i];
		if (!(x >= 0 && x < n && y >= 0 && y < m && !ar[x][y]))
			return 0;
	}
	return !ar[r][c];
}

void BT(int row, int col, int prev) {
	if (row == n) {
		int tmp = 0;
		for (int i = 0; i < n; i++)
			for (int j = 0; j < m; j++)
				tmp = max(tmp, ar[i][j]);
		if (tmp > mx) {
			mx = tmp;
			for (int i = 0; i < n; i++)
				for (int j = 0; j < m; j++)
					ans[i][j] = ar[i][j];
		}
		return;
	}
	int seen = (row - 1) * m + row + 1;
	if ((m * n - seen) / 6 + prev < mx)
		return;
	int nrow = row, ncol = col;
	ncol++;
	if (ncol == m) {
		ncol = 0;
		nrow++;
	}
	BT(nrow, ncol, prev);
	if (ar[row][col])
		return;
	if (check1(row, col)) {
		for (int i = 0; i < 4; i++) {
			int x = row + dx[0][i], y = col + dy[0][i];
			ar[x][y] = prev + 1;
		}
		ar[row][col] = prev + 1;
		BT(nrow, ncol, prev + 1);
		for (int i = 0; i < 4; i++) {
			int x = row + dx[0][i], y = col + dy[0][i];
			ar[x][y] = 0;
		}
		ar[row][col] = 0;
	}
	if (check2(row, col)) {
		for (int i = 0; i < 4; i++) {
			int x = row + dx[1][i], y = col + dy[1][i];
			ar[x][y] = prev + 1;
		}
		ar[row][col] = prev + 1;
		BT(nrow, ncol, prev + 1);
		for (int i = 0; i < 4; i++) {
			int x = row + dx[1][i], y = col + dy[1][i];
			ar[x][y] = 0;
		}
		ar[row][col] = 0;
	}
	if (check3(row, col)) {
		for (int i = 0; i < 4; i++) {
			int x = row + dx[2][i], y = col + dy[2][i];
			ar[x][y] = prev + 1;
		}
		ar[row][col] = prev + 1;
		BT(nrow, ncol, prev + 1);
		for (int i = 0; i < 4; i++) {
			int x = row + dx[2][i], y = col + dy[2][i];
			ar[x][y] = 0;
		}
		ar[row][col] = 0;
	}
	if (check4(row, col)) {
		for (int i = 0; i < 4; i++) {
			int x = row + dx[3][i], y = col + dy[3][i];
			ar[x][y] = prev + 1;
		}
		ar[row][col] = prev + 1;
		BT(nrow, ncol, prev + 1);
		for (int i = 0; i < 4; i++) {
			int x = row + dx[3][i], y = col + dy[3][i];
			ar[x][y] = 0;
		}
		ar[row][col] = 0;
	}
}

int main() {
	cin >> n >> m;
//	n = 9;
//	m = 9;
	BT(0, 0, 0);
	cout << mx << endl;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (ans[i][j])
				cout << (char)(ans[i][j] + 'A' - 1);
			else
				cout << '.';
		}
		cout << endl;
	}
//	cout << clock();
}
