#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;

const uli mod=1e9;
const int mx=2e5+10;
const int mxt=(mx<<2);
uli fib[mx];
uli sum[mx];
pair<uli,uli>st[mxt];
uli lp[mxt];
uli d[mx];

uli shift(uli s0,uli s1,int k){
   k++;
   return (fib[k-1]*s0+fib[k]*s1)%mod;
}

void go(int u,int l,int r,uli v){
   //f0 f1 f2 ... fn-1
   st[u].first=(st[u].first+v*sum[r-l])%mod;   
   st[u].second=(st[u].second+v*sum[r-l+1])%mod;   
   lp[u]+=v;
   if(lp[u]>=mod)lp[u]-=mod;
}
void clr(int u,int l,int r){
   if(l==r)return;
   int mid=(l+r)>>1;
   go(u+u+1,l,mid,lp[u]); 
   go(u+u+2,mid+1,r,lp[u]);
   lp[u]=0;
}
pair<uli,uli>join(pair<uli,uli>a,pair<uli,uli>b,int len){
   pair<uli,uli>ans;
   uli x=b.first;
   uli y=b.second;
   uli w=y-x+mod;
   if(w>=mod)w-=mod;
   ans.first=a.first+shift(w,x,len);
   ans.second=a.second+shift(x,y,len);
   if(ans.first>=mod)ans.first-=mod;
   if(ans.second>=mod)ans.second-=mod;
   return ans;
}
void init(int u,int l,int r){
   if(l==r)st[u]=pair<uli,uli>(0ll,d[l]);   
   else{
      int mid=(l+r)>>1;
      init(u+u+1,l,mid);
      init(u+u+2,mid+1,r);
      st[u]=join(st[u+u+1],st[u+u+2],mid-l+1);
   }
}
pair<uli,uli>qry(int u,int l,int r, int f,int t){
   if(r<f || t<l)return pair<uli,uli>(0ll,0ll);
   if(f<=l && r<=t)return st[u];
   if(lp[u]!=0)clr(u,l,r);
   int mid=(l+r)>>1;
   pair<uli,uli>x=qry(u+u+1,l,mid,f,t);
   pair<uli,uli>y=qry(u+u+2,mid+1,r,f,t);
   if(f>mid)return y;
   if(t<=mid)return x;
   pair<uli,uli>ans=join(x,y,mid-max(l,f)+1);
   // cout<<l<<";"<<r<<" ans="<<ans.second<<" ft="<<f<<";"<<t<<endl;
   return ans;
}
void upd(int u,int l,int r,int f,int t,uli v){
   if(r<f || t<l)return;
   if(lp[u]!=0)clr(u,l,r);
   if(f<=l && r<=t) go(u,l,r,v);   
   else{
      int mid=(l+r)>>1;
      upd(u+u+1,l,mid,f,t,v);
      upd(u+u+2,mid+1,r,f,t,v);
      st[u]=join(st[u+u+1],st[u+u+2],mid-l+1);
   }
}
int main(){
   fib[0]=0,fib[1]=1;
   sum[0]=fib[0],sum[1]=fib[0]+fib[1];
   for(int i=2;i<mx;i++){
      fib[i]=(fib[i-1]+fib[i-2])%mod;
      sum[i]=(sum[i-1]+fib[i])%mod;
   }
   int n,m,op,xi,l,r;
   uli v;
   scanf("%d %d",&n,&m);
   for(int i=0;i<n;i++)scanf("%lld",d+i);
   init(0,0,n-1);
   //   cout<<qry(0,0,n-1,1,3).second<<endl;
   while(m--){
      scanf("%d",&op);
      if(op==1){
         scanf("%d %lld",&xi,&v);
         --xi;
         pair<uli,uli>cur=qry(0,0,n-1,xi,xi); 
         uli inc=(-cur.second+v)%mod;
         inc=(inc+mod)%mod;
         upd(0,0,n-1,xi,xi,inc);
      }
      else if(op==2){
         scanf("%d %d",&l,&r);
         --l,--r;
         pair<uli,uli> ans=qry(0,0,n-1,l,r);
         printf("%lld\n",ans.second);
      }
      else if(op==3){
         scanf("%d %d %lld",&l,&r,&v);
         --l,--r;
         upd(0,0,n-1,l,r,v);
      }
   }
   return 0;
}

