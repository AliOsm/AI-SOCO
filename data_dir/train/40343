#pragma comment(linker, "/STACK:256000000")

#define _CRT_SECURE_NO_DEPRECATE
#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <assert.h>
#include <time.h>
#include <memory.h>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <utility>
#include <algorithm>
#include <functional>
#include <random>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
typedef pair<int64, int64> pll;
const int INF = (int)(1e9 + 1337);
const int64 LINF = (int64)(4e18);
const double EPS = 1e-11;
#define sq(x) ((x)*(x))
#define FAIL() ((*(int*)(0))++)

const int MAXN = 1000;

int n, m;
pii cur[MAXN];

int check(int l, int r, int id)
{
	for (int i = 0; i < id; ++i)
	{
		if (r < cur[i].first || l > cur[i].second)
		{
			continue;
		}
		return 0;
	}
	return 1;
}

void solve()
{
	cin >> n;
	for (int i = 0; i < n; ++i)
	{
		int l, r;
		cin >> l >> r;
		int d = r;
		r = l + r - 1;
		if (check(l, r, i))
		{
			cur[i] = pii(l, r);
		}
		else
		{
			pii ans((int)2e9, (int)2e9);
			if (check(1, d, i))
				ans = min(ans, pii(1, d));
			for (int j = 0; j < i; ++j)
			{
				if (check(cur[j].second + 1, cur[j].second + d, i))
					ans = min(ans, pii(cur[j].second + 1, cur[j].second + d));
			}
			cur[i] = ans;
		}
	}

	for (int i = 0; i < n; ++i)
	{
		cout << cur[i].first << ' ' << cur[i].second << '\n';
	}
}

int main()
{
#ifdef _MY_DEBUG
	freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
#endif
	srand(88);

	solve();

	return 0;
}