/* ****revpro**** */
// #pragma GCC target ("avx2")
// #pragma GCC optimization ("O3")
// #pragma GCC optimization ("unroll-loops")
#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define endl	   '\n'
#define pii         pair<ll,ll>
#define vi          vector<ll>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll)x.size()
#define hell        1000000007
#define rep(i,a,b)  for(ll i=a;i<b;i++)
#define repr(i,a,b) for(ll i=b-1;i>=a;i--)    
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mii	    map<ll,ll>
using namespace std;

#define N  100005
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;  
#define ordered_set tree<double, null_type,less<double>, rb_tree_tag,tree_order_statistics_node_update> 
bool isprime[N]={0};
ll prime[N],ww;
void seive()
{
	ll cnt=0;
	for(ll i=2;i*i<N;i++)
	{
		if(!isprime[i])
		{
		    prime[cnt]=i;
		    cnt++;
			for(int j=i*i;j<N;j+=i)
			isprime[j]=1;
		}
	}
	ww=cnt;
}
ll f(ll x,ll y){
	vi p;
	rep(i,2,N){
		if(!isprime[i]){
			if((y%i)==0){
				p.pb(i);
				while((y%i)==0) y/=i;
			}
		}
	}
	if(y!=1) p.pb(y);
	// for(auto i:p) cout<<i<<endl;
	ll ans=0;
	rep(i,0,1<<(sz(p))){
		ll cur=1;
		ll cnt=0;
		rep(j,0,sz(p))
		{
			if(i&(1<<j)){
				cur*=p[j];
				cnt++;
			}
		}
		if(cnt%2){
			ans-=x/cur;
		}
		else ans+=x/cur;
	}
	return ans;
}
signed main()
{
 #ifndef ONLINE_JUDGE
      // for getting input from input.txt
     freopen("input.txt", "r", stdin);
//     // for writing output to output.txt
//     freopen("output1.txt", "w", stdout);
 #endif
	// ios_base::sync_with_stdio(false);
	// cin.tie(0);
	// cout.tie(0);
	int TESTS=1;
	cin>>TESTS;
	seive();
	while(TESTS--)
	{
		ll x,y;
		cin>>x>>y;
		ll g=__gcd(x,y);
		ll st=x/g,end=(x+y-1)/g;
		cout<<f(end,y/g)-f(st-1,y/g)<<endl;			
	}
	return 0;
}