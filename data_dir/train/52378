#include <iostream>
#include <stdio.h>
#include <string>
#include <memory.h>
#include <set>
#include <map>
#include <vector>
#include <queue>
#include <time.h>
#include <assert.h>
#include <cmath>
#include <stack>
#include <string.h>
#include <sstream>
#include <functional>
#include <algorithm>
#include <list>
using namespace std;
typedef long long ll;
int n;
vector<int> v;
vector<vector<int> > g;
int all[3] = {};
int res;
vector<int> DFS(int u, int p) {
	vector<int> f(3);
	++f[v[u]];
	for (auto &v : g[u]) {
		if (v == p)
			continue;
		auto cur = DFS(v, u);
		if ((cur[1] == all[1] && cur[2] == 0) || (cur[2] == all[2] && cur[1] == 0))
			++res;
		for (int j = 0; j < 3; ++j)
			f[j] += cur[j];
	}
	return f;
}
int main() {
	scanf("%d", &n);
	v.resize(n);
	g.resize(n);
	for (auto &x : v) {
		scanf("%d", &x);
		++all[x];
	}
	for (int i = 1, a, b; i < n; ++i) {
		scanf("%d%d", &a, &b);
		--a; --b;
		g[a].push_back(b);
		g[b].push_back(a);
	}
	DFS(0, -1);
	printf("%d\n", res);
	return 0;
}