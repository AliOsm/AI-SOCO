/*
ye mera template hai
apna khud likho bc =_=
*/

/*
Author : Sarvagya Agarwal
*/

#include<bits/stdc++.h>
using namespace std;

//defines
#define openin freopen("input.txt","r",stdin)
#define openout freopen("output.txt","w",stdout)
#define fast ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define ll long long
#define int long long
#define mod 1000000007
#define rep(i,a,n) for(__typeof(n) i=a;i<=n;++i)
#define all(c) (c).begin(),(c).end()
#define ff first
#define ss second
#define pb push_back
#define mp make_pair

//gcd
int gcd(int a,int b)
{
    return __gcd(a,b);
}
//lcm
int lcm(int a,int b)
{
    int g = gcd(a,b);
    return a*(b/g);
}
//power 
int power(int a,int b)
{
    int ans = 1;
    while(b)
    {
        if(b&1)
        {
            ans = (ans*a)%mod;
        }
        a=(a*a)%mod;
        b/=2;
    }
    return ans ;
}

//debug
#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
		cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
		const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

// DOBARA OVERFLOW KI GALTI HUI TO TU CHUTIYA HAI BC
// update : TU CHUTIYA HAI BC

map<int,int>A;
int sf,alsf;
vector<pair<int,pair<int,int> > > v;
int ans;
int lang[300000],audio[300000],sub[300000];
int32_t main()
{
    fast;
    int n;
    cin>>n;
    rep(i,1,n)cin>>lang[i];
    rep(i,1,n)A[lang[i]]++;
    int m;
    cin>>m;
    rep(i,1,m)cin>>audio[i];
    rep(i,1,m)cin>>sub[i];
    sf=alsf=ans=0;
    rep(i,1,m){
        int temp_satisfied = A[audio[i]];
        int almost = A[sub[i]];
        v.pb({temp_satisfied,{almost,i}});
       /*if(temp_satisfied > sf){
           sf = temp_satisfied ;
           alsf = almost ;
           ans = i;
       }
       else if(temp_satisfied==sf){
           if(almost > alsf){
               alsf = almost;
               ans = i;
           }
       }*/
    }
    sort(all(v));
    //for(auto it:v)trace(it.ff,it.ss.ff,it.ss.ss);
    cout<<v[m-1].ss.ss ;
    return 0;
}