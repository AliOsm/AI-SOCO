#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define inf 0x3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl
#define rand() (rand() << 15 | rand())
using namespace std;
using namespace __gnu_pbds;

template<typename T>
using ordered_set =
tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef long long  ll;
#define EPS 1e-9
#define PI acos(-1.0)
const int N = 2e5 + 4;
int n;
ll s;
pair<int , int> a[N];

bool valid(int mid){
   vector<pair<int , int>> bf , af , between;
   for(int i = 0 ; i < n ; ++i){
      if(a[i].first <= mid && a[i].second >= mid){
         between.push_back(a[i]);
      }
      else if(a[i].first < mid){
         bf.push_back(a[i]);
      }
      else{
         af.push_back(a[i]);
      }
   }
   if(bf.size() > n / 2 || af.size() > n / 2)
      return false;
   sort(all(between));
   reverse(all(between));
   while(bf.size() <= n / 2 && between.size()){
      bf.push_back(between.back());
      between.pop_back();
   }
   for(auto e : between) {
      af.push_back(e);

   }
   ll sum = 0;
   for(auto e : bf)
      sum += e.first;
   if(bf.size() == n / 2 + 1)sum += (mid - bf.back().first);
   for(auto e : af)
      sum += max(e.first , mid);
   return sum <= s;
}
int main() {
#ifndef ONLINE_JUDGE
   freopen("input.txt", "r", stdin);
#endif
   ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
   int t;
   cin >> t;
   while(t--){
      cin >> n >> s;
      for(int i = 0 ; i < n ; ++i){
         cin >> a[i].first >> a[i].second;
      }
      sort(a , a + n);

//      for(int i = a[n / 2].first ; i <= 100 ; ++i)
//         cout << valid(i);
//      cout << "\n";
      int l = a[n / 2].first , r = 1e9 , ans = -1;
      while(l <= r){
         int mid = (l + r) / 2;
         if(valid(mid))ans = mid , l = mid + 1;
         else r = mid - 1;
      }
      cout << ans << "\n";
   }
}