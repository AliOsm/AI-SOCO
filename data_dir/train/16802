
// In the name of God

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define Size(x) ((int)(x).size())
typedef long long ll;
typedef pair<int ,int>pii;
typedef long double ld;
const int INF = 1e9 + 10 , MN = 2e5 + 10;

int n , m;
vector<pii>adj[MN] , ans;
bool seen[MN] , mk[MN];
int es[MN] , ee[MN] , h[MN];

int dfs(int s,int pr){
	seen[s] = true;
	if(~pr) h[s] = h[pr]+1;
	
	vector<int>vec;
	
	for(auto x:adj[s]){
		int v = x.first , e = x.second;
		if(v == pr) continue;
		if(seen[v]){
			if(h[v] > h[s]) vec.pb(e);
		}else{
			int T = dfs(v , s);
			if(T == -1) vec.pb(e);
			else ans.pb({T , e});			
		}
	}
	for(int i=0;i<Size(vec)/2;++i){
		int a = vec[i*2] , b = vec[i*2+1];
		ans.pb({a , b});
	}
	if(Size(vec)&1) return vec.back();
	return -1;
}

int main(){
	ios_base :: sync_with_stdio(false) , cin.tie(0) , cout.tie(0);
	cin >> n >> m;
	for(int i=0;i<m;++i){
		int a,b;cin>>a>>b;--a,--b;
		adj[a].pb({b , i}) , adj[b].pb({a , i});
		es[i] = a , ee[i] = b;
	}
	
	for(int i=0;i<n;++i)
		if(!seen[i]) dfs(i , -1);
	
	cout << Size(ans) << '\n';	
	for(auto x:ans){
		int a = x.first , b = x.second;
		if(es[a] == es[b]) cout << ee[a]+1 << ' ' << es[a]+1 << ' ' << ee[b]+1 << '\n';
		else if(es[a] == ee[b]) cout << ee[a]+1 << ' ' << es[a]+1 << ' ' << es[b]+1 << '\n';
		else if(ee[a] == es[b]) cout << es[a]+1 << ' ' << ee[a]+1 << ' ' << ee[b]+1 << '\n';
		else cout << es[a]+1 << ' ' << ee[a]+1 << ' ' << es[b]+1 << '\n';
	}		
	return 0;
}
