#include <bits/stdc++.h>
#define FOR(x,n) for(int x = 0; x < n; x++)
#define ll long long
using namespace std;

vector< pair<char,ll> > T, P;
int N, M;
pair<char,ll> tmpP[2] = {};
int B[200002] = {};
ll ans = 0;
void input(int L, vector< pair<char,ll> > & A){
    FOR(x,L){
        string tmp; cin >> tmp;
        char c = tmp[(int)tmp.size()-1];
        int l = 0;
        for(int y = 0; y < tmp.size(); y++)
            if(tmp[y] != '-')
                l = l * 10 + (tmp[y] - '0');
            else break;
        if(!A.empty() && A[(int)A.size()-1].first == c) A[(int)A.size()-1].second += l;
        else A.push_back({c,l});
    }
}

void process() {
    int i = 0, j = -1; B[0] = -1;
    while(i < M) {
        while(j >= 0 && P[i] != P[j]) j = B[j];
        i++; j++;
        B[i] = j;
    }
}

void solve(){
    process();
    int i = 0, j = 0;
    while(i < N){
        while(j >= 0 && T[i] != P[j]) j = B[j];
        i++; j++;
        if(j == M){
            if(i-j-1 >= 0 && T[i-j-1].first == tmpP[0].first && T[i-j-1].second >= tmpP[0].second &&
                T[i].first == tmpP[1].first && T[i].second >= tmpP[1].second)
                    ans++;
            j = B[j];
        }
    }
}

int main(){
    cin >> N >> M;
    input(N, T);
    input(M, P); N = T.size(); M = P.size();

    if(M == 1){
        FOR(x,N){
            if(T[x].first == P[0].first && T[x].second >= P[0].second)
                ans += (T[x].second - P[0].second + 1LL);
        }
    }else if(M == 2){
        FOR(x,N-1){
            if(T[x].first == P[0].first && T[x].second >= P[0].second && 
               T[x+1].first == P[1].first && T[x+1].second >= P[1].second)
                ans++;
        }
    }else{
        tmpP[0] = P[0]; tmpP[1] = P[(int)P.size()-1]; 
        P.pop_back(); P.erase(P.begin()); M -= 2;
        solve();
    }

    cout << ans << '\n';
}