/*jai mata di*/
#include<bits/stdc++.h>
using namespace std;
vector<int>veca,vecb,vec;
int h[40];
void dfs(int idx,int f)
{
    if(idx==vecb.size())
    {
        for(int i=0;i<vec.size();i++)
            printf("%d",vec[i]);
        exit(0);
    }
    int i;
    if(idx==0)
    {
        for(i=0;i<veca.size();i++)
        {
           if(veca[i]==vecb[idx])
            {
                h[i]=1;
                vec.push_back(veca[i]);
                dfs(idx+1,1);
                vec.pop_back();
                h[i]=0;
                break;
            }
        }
        int val=0;
        int id=-1;
        for(i=0;i<veca.size();i++)
        {
            if(veca[i]<vecb[idx])
            {
                if(val<=veca[i])
                {
                    val=veca[i];
                    id=i;
                }
            }
        }
        if(id!=-1)
        {
            h[id]=1;
            vec.push_back(veca[id]);
            dfs(idx+1,0);
            vec.pop_back();
            h[id]=0;
        }
        return ;
    }
    if(f)
    {
        for(i=0;i<veca.size();i++)
        {
            if(!h[i])
            {
                if(veca[i]==vecb[idx])
                {
                    h[i]=1;
                    vec.push_back(veca[i]);
                    dfs(idx+1,f);
                    vec.pop_back();
                    h[i]=0;
                    break;
                }
            }
        }
        int val=0;
        int id=-1;
        for(i=0;i<veca.size();i++)
        {
           if(!h[i])
           {
              if(veca[i]<vecb[idx])
               {
                  if(val<=veca[i])
                  {
                      id=i;
                      val=veca[i];
                  }
               }
           }
        }
        if(id!=-1)
        {
            h[id]=1;
            vec.push_back(veca[id]);
            dfs(idx+1,0);
            vec.pop_back();
            h[id]=0;
        }
        return ;
    }
    else
    {
        for(i=0;i<vec.size();i++)
            printf("%d",vec[i]);
        vector<int>vec1;
        for(i=0;i<veca.size();i++)
        {
            if(!h[i])
                vec1.push_back(veca[i]);
        }
        sort(vec1.begin(),vec1.end());
        reverse(vec1.begin(),vec1.end());
        for(i=0;i<vec1.size();i++)
            printf("%d",vec1[i]);
        exit(0);
    }
    return ;
}
int main()
{
    long long a,b;
    scanf("%I64d %I64d",&a,&b);
    long long val=a;
    while(val>0)
    {
        int r=val%10;
        veca.push_back(r);
        val=val/10;
    }
    val=b;
    while(val>0)
    {
        int r=val%10;
        vecb.push_back(r);
        val=val/10;
    }
    int i;
    reverse(vecb.begin(),vecb.end());
    if(veca.size()<vecb.size())
    {
        sort(veca.begin(),veca.end());
        reverse(veca.begin(),veca.end());
        for(i=0;i<veca.size();i++)
            printf("%d",veca[i]);
        return 0;
    }
    else
    {
       dfs(0,0);
    }

}