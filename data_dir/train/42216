#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)   for(long long i=a;i<=b;i++)
#define fr(i,a)     for(long long i=0;i<a;i++)
#define fd(i,a,b)   for(long long i=b;i>=a;i--)
#define clr(x)      memset(x,0,sizeof(x))
#define cln(x)      memset(x,-1,sizeof(x))
#define __          printf(" ")
#define _           printf("\n")
#define stree       long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define inff        (long long)1e17

long long p[500],t;
long long x[1000100];
long long mem[1000100][3];
long long n,a,b;


void check(long long x){
   long long i=2;
   while(i*i<=x){
      if(x%i==0){
        bool ch=true;
        fr(j,t) if(p[j]==i) {
           ch=false;
           break;
        }
        if(ch) p[t++]=i;
      }
      while(x%i==0) x/=i;
      i++;
   }

   if(x>1){
        bool ch=true;
        fr(j,t) if(p[j]==x) {
           ch=false;
           break;
        }
        if(ch) p[t++]=x;
   }

   return;
}

long long P;
long long dp(long long cur,long long con){
    if(cur>n) return 0;
    long long &ret=mem[cur][con];
    if(ret!=-1) return ret;
    ret=inff;
    long long cur_con= con ? 2 : 0 ;
    if(x[cur]%P==0) ret=min(ret,dp(cur+1,cur_con));
    else if((x[cur]+1)%P==0 || (x[cur]-1)%P==0) ret=min(ret,b+dp(cur+1,cur_con));
    if(con!=2) ret=min(ret,a+dp(cur+1,1));
    return ret;
}


long long dp2(long long cur,long long con){
    if(cur>n) return con==2? 0 : inff;
    long long &ret=mem[cur][con];
    if(ret!=-1) return ret;
    ret=inff;
    if(x[cur]%P==0) ret=min(ret,dp2(cur+1,2));
    else if((x[cur]+1)%P==0 || (x[cur]-1)%P==0) ret=min(ret,b+dp2(cur+1,2));
    if(con!=2) ret=min(ret,a+dp2(cur+1,1));
    return ret;
}


main(){
    scanf("%lld %lld %lld",&n,&a,&b);
    fi(i,1,n) scanf("%lld",x+i);t=0;
    check(x[1]+1),check(x[1]),check(x[1]-1);
    check(x[n]+1),check(x[n]),check(x[n]-1);
    long long ans=inff;
    fr(i,t){
        P=p[i];
        if(x[1]%P==0) cln(mem),ans=min(ans,dp(2,0));
        else if((x[1]+1)%P==0||(x[1]-1)%P==0) cln(mem),ans=min(ans,b+dp(2,0));
        if(n!=1) cln(mem),ans=min(ans,a+dp2(2,1));
    }
    printf("%lld\n",ans);
    return 0;
}
