/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class TaskC {
public:
    void solve(istream& in, ostream& out) {
        string s;
        cin >> s;
        int n = s.size();
        int res = 0;
        for (int l = 0; l < n; ++l) {
            int a = 0, b = 0, c = 0, close = 0;
            for (int r = l; r < n; ++r) {
                if (s[r] == '(') {
                    ++a;
                    ++close;
                } else if (s[r] == ')') {
                    ++c;
                    if (close) --close;
                } else {
                    ++b;
                    if (close) --close;
                }
                if (c > a + b) {
                    break;
                } else if (close == 0 && (b - (a + c)) % 2 == 0) {
                    ++res;
                }
            }
        }
        cout << res << "\n";
    }
};


int main() {
	std::ios::sync_with_stdio(false); cin.tie(nullptr);
	TaskC solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
