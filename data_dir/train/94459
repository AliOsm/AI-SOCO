#include <bits/stdc++.h>
using namespace std;

const int N = 3002;
int dis[N][N];
int par[N][N];
set<pair<int,int> > forb[N];
vector<int> adj[N];
int n , m , k;

int main()
{
    scanf("%d%d%d",&n,&m,&k);
    int a , b , c;
    for(int i = 0 ; i < m ; i++){
        scanf("%d%d",&a,&b);
        adj[a].push_back(b);
        adj[b].push_back(a);
    }

    for(int i = 0 ; i < k ; i++){
        scanf("%d%d%d",&a,&b,&c);
        forb[a].insert(make_pair(b,c));
    }

    memset(dis,-1,sizeof dis);
    memset(par,-1,sizeof dis);
    queue<pair<int,int> > q;
    q.push(make_pair(0,1));
    dis[0][1] = 0;
    while(!q.empty()){
        a = q.front().first;
        b= q.front().second;
        q.pop();
        for(int c : adj[b]){
            if(dis[b][c] != -1 || forb[a].find(make_pair(b,c)) != forb[a].end())continue;
            dis[b][c] = dis[a][b] + 1;
            par[b][c] = a;
            q.push(make_pair(b,c));
        }
    }

    int ans = INT_MAX;
    for(int i = 1 ; i <= n ; i++){
        if(dis[i][n] != -1 && ans > dis[i][n]){
            ans = dis[i][n];
            b = i;
        }
    }

    if(ans == INT_MAX)puts("-1");
    else{
        vector<int> v;
        v.push_back(n);
        v.push_back(b);
        c = n;
        for(a = par[b][c] ; a; c = b , b = a , a = par[b][c]){
            v.push_back(a);
        }

        reverse(v.begin(),v.end());
        printf("%d\n",int(v.size()) - 1);
        for(int a : v)
            printf("%d ",a);
        puts("");
    }

    return 0;
}
