
// In the name of God

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define Size(x) ((int)(x).size())
#define int long long
typedef long long ll;
typedef long double ld;
typedef pair<int , int>pii;
const int INF = 1e9 + 10 , MN = 2018;

int n , m , x;
int prv[MN] , head[MN] , from[MN] , to[MN] , sv[MN] , cap[MN];
bool mk[MN];

int dfs(int st,int en,int cur=INF){
	if(st == en) return cur;
	
	mk[st] = true;
	for(int e=head[st];~e;e=prv[e]) if(cap[e] && !mk[to[e]]){
		int t = dfs(to[e] , en , min(cur , cap[e]));
		if(t == 0) continue;
		cap[e] -= t;
		cap[e^1] += t;
		return t;
	}
	return 0;
}
int max_flow(int st,int en){
	memset(mk , 0 , sizeof mk);
	int ret = dfs(st , en , INF);
	if(ret == 0) return ret;
	return ret + max_flow(st , en);
}

int32_t main(){
	ios_base :: sync_with_stdio(false) , cin.tie(0) , cout.tie(0);
	cin >> n >> m >> x;
	memset(prv , -1 , sizeof prv);
	memset(head , -1 , sizeof head);
	for(int i=0;i<m+m;i+=2){
		int a , b , c;
		cin >> a >> b >> c;
		--a,--b;
		from[i] = a , to[i] = b , sv[i] = c;
		prv[i] = head[a] , head[a] = i;
		
		from[i+1] = b , to[i+1] = a , sv[i+1] = 0;
		prv[i+1] = head[b] , head[b] = i+1;
	}
	m+=m;
	ld L = 0 , R = 1e6 + 5;
	for(int rp=0;rp<333;++rp){
		ld mid = (L+R)/2;
		for(int i=0;i<m;i++)
			cap[i] = (ld)sv[i] / mid;
		if(max_flow(0 , n-1) >= x) L = mid;
		else R = mid;
	}
	cout << setprecision(12) << fixed << L * x << '\n';
	return 0;
}

