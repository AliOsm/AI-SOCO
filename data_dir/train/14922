////////////////////////////////////////////    _LeMur_
#pragma GCC optimize("Ofast,no-stack-protector")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native")
#define _CRT_SECURE_NO_WARNINGS
#include <unordered_map>
#include <unordered_set>
#include <functional>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <chrono>
#include <random>
#include <bitset>
#include <cstdio>
#include <vector>
#include <string>
#include <ctime>
#include <stack>
#include <queue>
#include <cmath>
#include <list>
#include <map>
#include <set>

using namespace std;

const int N = 50005;
const int inf = 1000 * 1000 * 1000;
const int mod = 1000 * 1000 * 1000 + 7;

int t;
int n , m;

int r[N] , c[N];
vector < vector<char> > a;

int main(){
	mt19937 myrand(chrono::steady_clock::now().time_since_epoch().count());
    cin >> t;
    while(t--){
        scanf("%d%d",&n,&m);
        for(int i=0;i<n;i++){
            r[i] = 0;
        }
        for(int i=0;i<m;i++){
            c[i] = 0;
        }
        a.resize(n);
        for(int i=0;i<n;i++){
            a[i].resize(m);
            for(int j=0;j<m;j++){
                scanf(" %c",&a[i][j]);
                if(a[i][j] == '*'){
                    r[i]++;
                    c[j]++;
                }
            }
        }
        int mn = inf;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                int rem = n + m - r[i] - c[j];
                if(a[i][j] == '.') rem--;
                mn = min(mn , rem);
            }
        }
        printf("%d\n",mn);
    }
	return 0;
}
