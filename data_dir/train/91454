#include <bits/stdc++.h>
using namespace std;

#define eps (long double)1e-10

long double getTime(int x1, int x2, int v)
{
    return (long double)(x2-x1)/v;
}

int main()
{
    int N;
    scanf("%d", &N);

    int x1, y1, x2, y2;
    scanf("%d %d %d %d", &x1, &y1, &x2, &y2);

    if(x1==x2 || y1==y2)
    {
        printf("-1\n");
        return 0;
    }

    long double inf = (long double)1e12;

    long double tIn = 0;
    long double tOut = inf;

    while(N--)
    {
        int rx, ry, vx, vy;
        scanf("%d %d %d %d", &rx, &ry, &vx, &vy);

        long double tInx, tOutx;
        long double tIny, tOuty;

        if(vx==0)
        {
            if(rx<=x1 || rx>=x2)
            {
                printf("-1\n");
                return 0;
            }

            tInx = -inf;
            tOutx = inf;
        }
        else
        {
            if(rx<x1 || rx>x2)
            {
                tInx = getTime(rx, x1, vx);
                tOutx = getTime(rx, x2, vx);

                if(tInx>tOutx)
                    swap(tInx, tOutx);
            }
            else
            {
                tInx = 0;
                tOutx = max(getTime(rx, x1, vx), getTime(rx, x2, vx));

                if(tOutx<eps)
                {
                    cout << -1 << endl;
                    return 0;
                }
            }
        }

        if(vy==0)
        {
            if(ry<=y1 || ry>=y2)
            {
                printf("-1\n");
                return 0;
            }

            tIny = -inf;
            tOuty = inf;
        }
        else
        {
            if(ry<y1 || ry>y2)
            {
                tIny = getTime(ry, y1, vy);
                tOuty = getTime(ry, y2, vy);

                if(tIny>tOuty)
                    swap(tIny, tOuty);
            }
            else
            {
                tIny = 0;
                tOuty = max(getTime(ry, y1, vy), getTime(ry, y2, vy));

                if(tOuty<eps)
                {
                    cout << -1 << endl;
                    return 0;
                }
            }
        }

        tIn = max(tIn, max(tInx, tIny));
        tOut = min(tOut, min(tOutx, tOuty));
    }

    if(tIn+eps>tOut)
        printf("-1\n");
    else
        cout << fixed << setprecision(12) << tIn << "\n";

    return 0;
}