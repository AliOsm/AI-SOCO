#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int MX=(1<<20);
string str;
struct TEAM{
    ll score , lim;
    int idx;
    TEAM(){}
    TEAM(ll score , ll lim , int idx):score(score) , lim(lim) , idx(idx){}
}team[MX];
bool operator < (const TEAM&A , const TEAM&B){
    if(A.score != B.score)
        return A.score > B.score;
    else return A.idx < B.idx;
}
ll C ;

int n;
bool check(int rnk){
    priority_queue < ll > S;
    ll rem = C;
    int it = 1;
    for(int j=1;j<=n;j++){
        if(team[j].idx== 1) continue;
        if(team[j].score <= rem) break;
        S.push(-(team[j].lim - team[j].score + 1));
        if(S.size() == rnk){
            rem+= S.top();
            S.pop();
        }
        if(rem < 0) return 0;
    }
    return rem >= 0;
}
int main(){
    scanf("%d",&n);
    for(int j=1;j<=n;j++){
        scanf("%lld %lld",&team[j].score,&team[j].lim);
        team[j].idx = j;
    }
    C = team[1].score;
    sort(team+1 , team+1+n);
    //cout<<team[1].score<<endl;
    int st = 1 , en = n , mid , best;
    while(st <= en){
        mid = (st+en)/2;
        if(check(mid)){
            en = mid-1;
            best = mid;
        }
        else st = mid+1;
    }
    cout<<best<<endl;
}
