#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define Fit(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcounll(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef double ld;
#define eps 1e-9
typedef pair<int, int> II;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI 2 * acos(0)

#define maxn 400005

int n;
string s[maxn];

int d[26][26], num[26];;
int que[maxn], size;

int main()
{
//  freopen("in.txt", "r", stdin);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n;
    For(i, 1, n) cin >> s[i];
    ms(d, 0);
    For(i, 1, n - 1){
    	bool ok = false;
    	for(int j = 0; j < sz(s[i]) && j < sz(s[i + 1]); j++){
    		if(s[i][j] != s[i + 1][j]){
    			ok = true;
    			d[s[i][j] - 'a'][s[i + 1][j] - 'a'] = 1;
    			break;
    		}
    	}
    	if(sz(s[i]) > sz(s[i + 1]) && !ok){
    		cout << "Impossible" << endl;
    		return 0;
    	}
    }

    size = 0;
    ms(num, 0);
    for(int i = 0; i < 26; i++) for(int j = 0; j < 26; j++) num[j] += d[i][j];
    for(int i = 0; i < 26; i++) if(!num[i]) que[size++] = i;
    Rep(i, size){
    	int u = que[i];
    	Rep(j, 26) if(d[u][j]){
    		num[j]--;
    		if(num[j] == 0){
    			que[size++] = j;
    		}
    	}
    }

    if(size != 26){
    	cout << "Impossible" << endl;
    } else{
    	Rep(i, 26) cout << (char)(que[i] + 'a');
    }

    return 0;
}
