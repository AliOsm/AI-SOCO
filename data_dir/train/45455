#define _CRT_SECURE_NO_WARNINGS
#include<bits/stdc++.h>
#include<cmath>
#include<unordered_set>
#include<bitset>
#include<limits>
#include<cstring>
using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define repi(i,a,n) for(int i=a;i<n;i++)
#define mp make_pair
#define fastIO ios::sync_with_stdio(false)
#define read freopen("in.in","r",stdin)
#define write freopen("out.out","w",stdout)
#define scf(xx) scanf("%d",&xx)
#define scfl(xx) scanf("%I64d",&xx)
#define All(a) a.begin(), a.end()


typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int, int> pp;
typedef long double ld;



int n;
ll dp[5005][2600][2];
int a[5555];
ll solve(int i, int k, int f){
	if (k == 0)
		return 0;
	if (i >= n)
		return (ll)1 << 50;
	ll &ret = dp[i][k][f];
	if (ret != -1)
		return ret;
	// leave
	ret = solve(i + 1, k, 0);
	// pick
	int after ;
	if (i == n || a[i + 1] < a[i])
		after = 0;
	else
		after = a[i + 1] - a[i] + 1;
	int before;
	if (i == 0 || a[i - 1] < a[i])
		before = 0;
	else {
		int h = a[i - 1];
		if (f)
			h = min(h, a[i - 2] - 1);
		if (h < a[i])
			before = 0;
		else
			before = h - a[i] + 1;
	}
	ret = min(ret, solve(i + 2, k - 1, 1) + after + before);
	return ret;
}
int main(){
	
	//read; write;
	scf(n);
	rep(i, n)scf(a[i]);
	memset(dp, -1, sizeof dp);
	for (int k = 1; k <= n / 2 + n % 2; k++){
		printf("%I64d ", solve(0, k, 0));
	}
	return 0;
}