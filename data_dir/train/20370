#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define abdelrahman001 ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define F first
#define S second
#define inFile(t) freopen((t),"r",stdin)
#define outFile(t) freopen((t),"w",stdout)
#define pb push_back
#define pf push_front
#define Pb pop_back
#define all(v) (v).begin(),(v).end()
#define allr(v) (v).rbegin(),(v).rend()
#define Pf pop_front
#define sz size
#define MP make_pair
#define Pc __builtin_popcount
#define pi 2*acos(0)
#define BiEdge(v,a,b) (v)[(a)].pb(b),(v)[(b)].pb(a)
#define mod 1000000007
#define point complex<ld>
#define X real()
#define Y imag()
#define pll pair<ll,ll>
#define pii pair<int,int>
#define cross(a,b)(conj(a)*(b)).imag()
#define dot(a,b) (conj(a)*(b)).real()
#define rectangle pair<coordinate,coordinate>
#define line tuple<ll,ll,ll>
#define EPS 1e-7
#define polygon vector<point>
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
int const N = 2*1e5+5,M = 1005;
using namespace std;
ll n,m,arr[M],brr[M];
int main()
{
    abdelrahman001
    cin >> n >> m;
    for(int i = 0;i<n;i++)
        cin >> arr[i];
    for(int i = 0;i<n;i++)
        cin >> brr[i];
    ld low = 0,high = 1e9 + EPS,mid,ans = -1;
    while(fabs(low - high) > EPS)
    {
        mid = low + (high - low)/2;
        ld tmp = mid + m;
        tmp -= tmp/(arr[0])*1.0;
        for(int j = 1;j<n;j++)
            tmp-=(tmp*1.0/(arr[j])*1.0),tmp-=(tmp/(brr[j])*1.0);
        tmp-= tmp/(brr[0])*1.0;
        if(tmp >= m)
            high = mid,ans = mid;
        else
            low = mid;
    }
    if(ans == -1)
        return cout << ans,0;
    cout << fixed << setprecision(6) << ans;
    return 0;
}

