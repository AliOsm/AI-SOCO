#include <bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for (int i = a; i < b; ++i)
#define RFOR(i,a,b) for(int i = a; i >= b;--i)
#define REP(i, n) FOR(i, 0, n)
#define pii pair<int,int>
#define vi vector < int >
#define sz(a) (int)a.size()
#define db(x) cerr << #x << " = " << x << endl
#define db2(x, y) cerr << "(" << #x << ", " << #y << ") = (" << x << ", " << y << ")\n"; 
#define y1 jaksflkajsf
#define pii pair<int,int>
#define f first
#define s second
#define pli pair<ll,int>
#define ld long double
#define ll long long
#define pb push_back
#define left somethingleft
#define right somethingright
#define mp make_pair

const int INF = 1e9+5;
const int inf = 1e9;
const int N = 1e5+55;
const double PI = acos(-1.0);
const int MOD = 1e9 + 7;
const double eps = 1e-10;
vector < int > top;
bool used[N];
vector < pair < int, int > > g[N];
int dp[N];
int n, m;

void dfs(int v, int p, int M) {
	used[v] = true;
	REP(i, sz(g[v])) {
		if (g[v][i].second >= M)
			continue;
		int to = g[v][i].first;
		if (!used[to])
			dfs(to, v, M);
	}
	top.push_back(v);
}
bool can(int M) {
	top.clear();
	REP(i, n) used[i] = false;
	REP(i, n) {
		if (!used[i]) {
			dfs(i, -1, M);
		}
	}
	reverse(top.begin(), top.end());
	REP(i, n) used[i] = false;
	
	RFOR(i, n-1, 0) {
		int v = top[i];
		used[v] = true;
		dp[v] = 1;
		REP(j, sz(g[v])) {
			if (g[v][j].second >= M)
				continue;
			int to = g[v][j].first;
			if (!used[to])
				continue;
			dp[v] = max(dp[v], dp[to] + 1);
		}
	}
	REP(i, n) 
		if (dp[i] == n)
			return true;
	return false;
}
int main() {
	//freopen("input.txt","r",stdin);
	ios :: sync_with_stdio(false);
	cin >> n >> m;
	REP(i, m) {
		int x, y;
		cin>>x>>y;x--;y--;
		g[x].pb(mp(y,i));
	}
	int left=-1,right=m+1;
	while (left+1<right){
		int middle=(left+right)>>1;
		if (can(middle))
			right=middle;
		else
			left=middle;
	}
	if (right==m+1) {
		cout<<"-1"<<endl;
		return 0;
	}
	cout << right << endl;
	return 0;
}