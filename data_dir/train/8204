#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <stack>
#include <memory.h>
#include <list>
#include <numeric>
#include <functional>
#include <complex>

#define ll long long
#define ld long double
#define ull unsigned ll
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()

using namespace std;

const int nax = (int)2e5 + 5;
ll a[nax];

void upd(ll& a, ll b) {
	a = min(a, b);
}

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("dictionary.in", "r", stdin);
	//freopen("dictionary.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	cout.precision(20); cout.setf(ios::fixed);
	int t;
	cin >> t;

	while (t--) {
		ll n, p, k;
		cin >> n >> p >> k;
		for (int i = 1; i <= n; i++) {
			cin >> a[i];
		}

		sort(a + 1, a + n + 1);
		a[0] = 0;

		vector<ll>dp(n + 1, 1e18);
		dp[0] = 0;

		for (int i = 1; i <= n; i++) {
			upd(dp[i], dp[i - 1] + a[i]);
			if (i >= k) {
				upd(dp[i], dp[i - k] + a[i]);
			}
		}

		for (int i = n; i >= 0; i--) {
			if (dp[i] <= p) {
				cout << i << '\n';
				break;
			}
		}
	}
	return 0;
}