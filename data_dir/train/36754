#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define FASTIO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define LL long long 
#define ar32(x) array<int, x> 
#define ar64(x) array<LL, x>
// Infinity xP
const int oo = 1e9 + 5;
// const int MOD = 1e9 + 7;
const LL ooll = 1e18;
const int MOD = 998244353; 
// const int MOD = 1e9 + 7;
const int N = 1e6 + 5;

LL powermod(LL a, LL b) {
    LL pw = 1, res = 1, mul = a;
    while(pw <= b) {
        if (b & pw) res = (res * mul)%MOD;
        mul = (mul * mul)%MOD;
        pw <<= 1;
    }
    return res;
}

int v[N], p[N], mark[N];
void solve() {
    int n, i, k;
    cin >> n >> k;
    for (i=1;i<=n;i++) {
        cin >> v[i];
        p[v[i]] = i;
        mark[i] = 0;
    }
    int l = n + 1, r = -1;
    LL ans = 0, res = 1;
    for (i=n-k+1;i<=n;i++) {
        l = min(l, p[i]);
        r = max(r, p[i]);
        mark[p[i]] = 1;
        ans += i;
    }
    assert(l >= 1 && l <= n & r >= 1 && r <= n);
    int cur = l;
    while(cur < r) {
        cur++; 
        LL cnt = 0;
        while(!mark[cur]) {
            cnt++; 
            cur++;
        }
        // cout << cnt << " ";
        res = (res * 1LL * (cnt + 1))%MOD;
    }
    // cout << '\n';
    cout << ans << " " << res << '\n';

}

int main() {
    FASTIO;
    int t = 1;
    // cin >> t;
    while(t--) solve();
    return 0;
}