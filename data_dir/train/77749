#include <bits/stdc++.h>
using namespace std;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n;
	cin >> n;
	vector<int> a(n);
	map<int, int> cnt;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		cnt[a[i]]++;
	}
	sort(a.begin(), a.end());
	a.resize(unique(a.begin(), a.end()) - a.begin());
	vector<int> ans;
	int sum = 1;
	int front = a[0], back = -1;
	for (int i = 0; i < (int)a.size(); i++) {
		if (cnt[a[i]] > 0 && cnt[a[i] + 1] > 0) {
			sum = 2;
			front = a[i];
			back = a[i] + 1;
			break;
		}
	}
	for (int i = 0, j; i < (int)a.size(); i++) {
		vector<int> res;
		for (j = i; j < (int)a.size(); j++) {
			if (cnt[a[j]] >= 2 && (res.empty() || a[j] == res.back() + 1)) {
				res.push_back(a[j]);
			} else break;
		}
		int tmp = 0, mi = -1, ma = -1;
		for (int x : res) {
			tmp += cnt[x];
		}
		if (!res.empty()) {
			if (cnt[res.front() - 1] > 0) {
				mi = res.front() - 1;
				tmp++;
			}
			if (cnt[res.back() + 1] > 0) {
				ma = res.back() + 1;
				tmp++;
			}
		}
		if (tmp > sum) {
			sum = tmp;
			front = mi;
			back = ma;
			ans = res;
		}
		if(cnt[a[j]] > 1) j--;
		i = j;
	}
	cout << sum << '\n';
	bool first = false;
	if(front != -1) {
		cout << front;
		first = true;
	}
	for (int &x : ans) {
		while (cnt[x] > 1) {
			if(first) cout << ' ';
			else first = true;
			cnt[x]--;
			cout << x;
		}
	}
	if (back != -1) {
		cout << ' ' << back;
	}
	for (int i = (int)ans.size() - 1; i >= 0; i--) {
		cout << ' ' << ans[i];
	}
	cout << '\n';

	return 0;
}