#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
// #define endl '\n';
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define floop(i,a,b) for(int i=a;i<=b;++i)
#define freverse(i,a,b) for(int i=a;i>=b;--i)
const ll mod=1e9+7;
const int maxn=7e6+5;
const int nbits=45;
vector<int>v[maxn];
int globalIdManager,tot[maxn];
ll val[maxn];
ll p[nbits];
int getid(){
    return ++globalIdManager;
}
void insert(ll x){
    int id=0;
    freverse(i,nbits-1,0){
        bool currbit=(x&(p[i]));
        tot[id]++;
        if(v[id].empty()) v[id]=vector<int>(2,0);
        if(v[id][currbit]==0) v[id][currbit]=getid();
        id=v[id][currbit];
    }
    val[id]=x;
    tot[id]++;
}
void remove(ll x){
    int id=0;
    freverse(i,nbits-1,0){
        bool currbit=(x&(p[i]));
        tot[id]--;
        id=v[id][currbit];
    }
    tot[id]--;
}
ll maxor(ll x){
    int id=0;
    freverse(i,nbits-1,0){
        bool currbit=(x&(p[i]));
        if(v[id][1-currbit]!=0 and tot[v[id][1-currbit]]>0) id=v[id][1-currbit]; 
        else id=v[id][currbit];
    }
    return x^(val[id]);
}
int main(){
    IOS;
    p[0]=1;
    for (int i = 1; i < nbits; ++i)
    {
        p[i]=p[i-1]*2ll;
    }
    int n;
    cin>>n;
    ll a[n],dp[n];
    for (int i = 0; i < n; ++i)
    {
        cin>>a[i];
    }
    ll ans=0,prefix=0;
    for(int i=n-1;i>=0;--i){
        if(i+1<n) dp[i]=a[i]^dp[i+1];
        else dp[i]=a[i];
        insert(dp[i]);
        ans=max(ans,dp[i]);
    }
    for (int i = 0; i < n; ++i)
    {
        prefix^=a[i];
        ans=max(ans,prefix);
        remove(dp[i]);
        ans=max(ans,maxor(prefix));
    }
    cout<<ans<<endl;
    return 0;
}