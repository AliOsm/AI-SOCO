#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
ll mod = 1000000007, oo = 1000000009;

void Emsawy() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
}

#define clr(v,d)     memset(v, d, sizeof(v))
#define sz(v)	     ((int)((v).size()))
#define all(v)	     ((v).begin()), ((v).end())
#define allr(v)	     ((v).rbegin()), ((v).rend())
#define V	         vector
#define MP	         make_pair
#define bug(n)           cout<< #n <<" = "<< n << endl;
int dx[]{1, -1, 0, 0, 1, -1, 1, -1};
int dy[]{0, 0, 1, -1, 1, -1, -1, 1};

V<V<int> > adj;
const ll N = 2000 + 5;
int n, m, k, w;
long double X[N], eps = 1e-15;
long double r;
V<pair<long double, long double > > rem;
bool valid(long double x, long double mid){
	for (int i = 0; i < rem.size(); i++){
		long double dis = (x - rem[i].first) * (x - rem[i].first) + (mid - rem[i].second)*(mid - rem[i].second);
		if (dis - (2 * r) * (2 * r) < eps) return 0;
	}
	return 1;
}
long double mx(long double a, long double b){
	if (a - b > eps) return a;
	return b;
}
int main() {

	Emsawy();
	cout << fixed << setprecision(10);
	while (cin >> n >> r){
		for (int i = 0; i < N; i++) X[i] = r;
		for (int i = 0; i < n; i++){
			cin >> w;

			int loop = 200;
			long double s = X[w], e = 1e7;
			while (loop-- > 0){
				long double mid = (s + e) / 2.0;
				if (valid(w, mid)) e = mid;
				else s = mid;
			}
			for (int i = w - r * 2; i <= w + r * 2; i++){
				if (w + r * 2 >= N) break;
				if (i >= 0)
					X[i] = mx(X[i], e);
			}
			cout << e << " ";
			rem.push_back(MP(w, e));
		}
		cout << endl;
	}
	return 0;
}