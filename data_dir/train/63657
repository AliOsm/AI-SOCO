#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <algorithm>
#include <ctime>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <functional>
#include <numeric>

#define f first
#define s second
#define ll long long
#define mp make_pair
#define pb push_back
#define pii pair < int, int >
#define pll pair < long long, long long >
#define forit(it,S) for(typeof(S.begin()) it = S.begin(); it!= S.end(); it++)

using namespace std;
int const maxn = (int)1e5 + 111;
int const inf = (1<<30) - 1;

int a[maxn], b[maxn], n;

void f() {
    reverse(a + 1, a + n + 1);
    sort(b + 1, b + n + 1);
    bool ok = 1;
    for(int i = 1; i <= n; i++) {
        if(a[i] != b[i]) {
            ok = 0;
            break;
        }
    }
    if(ok) {
        printf("yes\n1 %d", n);
        exit(0);
    }
    reverse(a + 1, a + n + 1);
}

void g() {
    sort(b + 1, b + n + 1);
    bool ok = 1;
    for(int i = 1; i <= n; i++) {
        if(a[i] != b[i]) {
            ok = 0;
            break;
        }
    }
    if(ok) {
        printf("yes\n1 1");
        exit(0);
    }
}

int main (){
    #ifdef LOCAL
    freopen ("a.in", "r", stdin);
    freopen ("a.out", "w", stdout);
    #endif



    cin >>n;
    
    for (int i=1;i<=n;i++){
        cin >>a[i];
    }
    for(int i = 1; i <= n; i++) b[i] = a[i];

    sort(b + 1, b + n + 1);

    f();
    g();


    int ind = -1;

    for (int i=2;i<=n;i++){
        if ( a[i] > a[i - 1] ) continue;
        ind = i - 1;
        break;
    }


    int ind2 = -1;

    for(int i = n; i >= 1; i--) {
        if(a[i] > a[i - 1]) continue;
        ind2 = i;
        break;
    }


    reverse(a + ind, a + ind2 + 1);

    for(int i = 1; i <= n; i++) b[i] = a[i];

    sort(b + 1, b + n + 1);

    for(int i = 1; i < n + 1; i++) {
        if(a[i] != b[i]) {
            cout << "no";
            return 0;
        }
    }

    printf("yes\n%d %d", ind, ind2);

    return 0;
}




