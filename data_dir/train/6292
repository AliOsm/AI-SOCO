#include <bits/stdc++.h>

#define fto(i, x, y) for(int i = (x); i <= (y); ++i)
#define fdto(i, x, y) for(int i = (x); i >= (y); --i)
#define ftoa(i, x, y, a) for(int i = (x); i <= (y); i += a)
#define ftoit(it, var) for (__typeof(var.begin()) it = var.begin(); it != var.end(); ++it)

#define ii pair<int, int>
#define mp make_pair
#define FF first
#define SS second

#define vi vector<int>
#define vii vector<ii>
#define ll long long
#define vll vector<ll>

#define eb emplace_back
#define ef emplace_front
#define lb lower_bound
#define ub upper_bound
#define sz(a) (int)a.size()

#define oo 1000000007
#define OO 1000000000000000007LL

using namespace std;

#define Pro "tmp"
#define maxN 407

int f[maxN][maxN][5][5];
int dp[maxN][maxN][5];

int a[maxN];

int main() {
    #ifndef ONLINE_JUDGE
        freopen(Pro".inp", "r", stdin);
        freopen(Pro".out", "w", stdout);
    #endif // ONLINE_JUDGE

    int n, k;
    scanf("%d%d", &n, &k);

    fto (i, 1, n) scanf("%d", &a[i]);
    fto (i, 0, n) {
        fto (j, 0, k) {
            fto (x, 0, 1) {
                dp[i][j][x] = -oo;
                fto (y, 0, 1) f[i][j][x][y] = -oo;
            }
        }
    }
    fto (i, 0, n) dp[i][0][1] = dp[i][0][0] = 0;

    fto (i, 1, n) {
        fto (j, 1, k) {
            if (j > i) break;
            fto (x, 0, 1) {
                fto (y, 0, 1) {
                    int x_ = x ? 1 : -1;
                    int y_ = y ? 1 : -1;

                    if (j == 1) y_ = 0;
                    if (j == k) x_ = 0;

                    f[i][j][x][y] = max(f[i][j][x][y], max(f[i-1][j][x][y], dp[i-1][j-1][1-y])+ (x_*a[i]) + (y_*a[i]));
                }
            }
            fto (x, 0, 1) {
                fto (y, 0, 1) {
                    dp[i][j][x] = max({dp[i][j][x], dp[i-1][j][x], f[i][j][x][y]});
                }
            }
        }
    }

    printf("%d\n", max(dp[n][k][0], dp[n][k][1]));
    return 0;
}
