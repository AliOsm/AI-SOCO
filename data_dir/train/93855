#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <sstream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define pii pair < int, int >
#define pll pair < long long, long long>
#define ull unsigned long long
#define y1 stupid_cmath
#define left stupid_left
#define right stupid_right
#define vi vector <int>
#define sz(a) (int)a.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x) * (x))

const int inf = (int)1e9;
const int mod = inf + 7;
const double eps = 1e-9;
const double pi = acos(-1.0);

int n, a[222];
int deg[222];

ll gcd(ll a, ll b) {
    if ( a== 0 || b == 0) return a + b;
    return gcd(b, a % b);
}

int main(){

    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        scanf("%d", a + i);
        a[i]--;
        deg[a[i]]++;
    }

    int mx = -2;
    for (int i = 0; i < n; i++) {
        mx = max(mx, deg[i]);
    }

    if (mx > 1) {
        cout << -1 << endl;
        return 0;
    }

    vector<int> v;

    vector<int> used(n, 0);

    for (int i = 0; i < n; i++) {
        if (!used[i]) {
            int x = i;
            int cnt = 0;
            while (!used[x]) {
                cnt++;
                used[x] = 1;
                x = a[x];
            }
            if (cnt % 2) v.pb(cnt);
            else v.pb(cnt / 2);
        }
    }

    ll ans = v[0];
    for (int i = 1; i < v.size(); i++) {
        ans = ans / gcd(ans, v[i]) * v[i];
    }

    cout << ans << endl;

    return 0;
}
