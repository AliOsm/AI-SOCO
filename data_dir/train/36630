#include<bits/stdc++.h>
using namespace std;
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);

void dfs(char *a,int i,int j,vector<pair<int,int> > &v,int& n,int& m,bool* b){
	b[i*m+j]=true;//cout<<i<<" "<<j<<endl;
	v.push_back(make_pair(i,j));
	if(i!=0){
		if(a[(i-1)*m+j]=='.'&&b[(i-1)*m+j]==false){
			dfs(a,i-1,j,v,n,m,b);
		}
	}
	if(i!=n-1){
		if(a[(i+1)*m+j]=='.'&&b[(i+1)*m+j]==false){
			dfs(a,i+1,j,v,n,m,b);
		}
	}
	if(j!=0){
		if(a[i*m+j-1]=='.'&&b[i*m+j-1]==false){
			dfs(a,i,j-1,v,n,m,b);
		}
	}
	if(j!=m-1){
		if(a[i*m+j+1]=='.'&&b[i*m+j+1]==false){
			dfs(a,i,j+1,v,n,m,b);
		}
	}
}

int main(){
	fast;
	int n,m,k;
	cin>>n>>m>>k;
	bool k2=false;
	char a[n][m];
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			cin>>a[i][j];
		}
	}
	vector<pair<int,int> > v;
	bool b[n*m]={0};
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(a[i][j]=='.'){
				dfs((char*)a,i,j,v,n,m,b);
				k2=true;
				break;
			}
		}
		if(k2)break;
	}
	for(int i=v.size()-1;i>=0&&k>0;i--){//cout<<"#"<<v[i].first<<" "<<v[i].second<<endl;
		a[v[i].first][v[i].second]='X';
		k--;
	}
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			cout<<a[i][j];
		}
		cout<<endl;
	}
	return 0;
}