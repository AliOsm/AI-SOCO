#include<bits/stdc++.h>
#define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define Alhamdulillah return 0;
#define pb push_back
#define ins(x) insert(x)
#define fi first
#define se second
#define ub upper_bound
#define all(v) v.begin(),v.end()
#define sz(v) ((ll)((v).size()))
#define reset(v,val) memset(v,val,sizeof(v))
#define erep(i, x, n) for ( i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for( i = x; i<(ll)(n); i++)
using namespace std;
typedef     long long int    ll;
long long int mod;
ll dx[]={0,0,1,-1};
ll dy[]={1,-1,0,0};
ll m=1e9+9,n,res,k,ans=0,nbcycle=0;
string s2="zero",ch="",s;
set< ll  > st;
vector< pair<string,ll> >vm;
vector< pair< ll, pair<ll,ll> > > vvv;
vector<pair<ll,ll> >vv,vv2;
vector<ll> v[200005];
ll a[1005][1005],vis[200005],root[200005];



void dfs(ll x,ll nb){
    vis[x]=1;
    root[nb]=x;
    for(ll i=0;i<v[x].size();i++){
        ll y=v[x][i];
        if(!vis[y]){
            dfs(y,nb);
        }
    }
}

void DFS(ll x,ll p){
    vis[x]=1;
    for(ll i=0;i<v[x].size();i++){
        ll y=v[x][i];
        if(a[x][y])continue;
        if(!vis[y]){
            DFS(y,x);
        }
        else if(vis[y]&&y!=p){
            vv.pb({x,y});
            a[x][y]=a[y][x]=1;
            return ;
        }
    }


}



int main(){
In_the_name_of_allah_the_merciful

    ll i=0,x=0,y=0,j=0,z,q,nb0=0,nbp=0,nbn=0,nbmax=0,nbinf=0,mm=5e8,idx=0,ok=0,l=0,r=0,negatif=0,positif=0,l1,r1,d;
    set< ll > ::iterator it,it1;
    char c;
    //freopen("a.txt","r",stdin);
    cin>>n;
    for(i=1;i<n;i++){
        cin>>x>>y;
        v[x].pb(y);
        v[y].pb(x);
    }
    ll nb=0;
    for(i=1;i<=n;i++){
        if(!vis[i]){
            nb++;
            dfs(i,nb);
        }
    }
    ll cur=1;
    for(i=1;i<=n;i++){
        memset(vis,0,sizeof(vis));
        DFS(i,0);
    }
    cout<<vv.size()<<endl;
    for(i=0;i<(ll)vv.size();i++){
        cout<<vv[i].first<<" "<<vv[i].second<<" "<<root[i+1]<<" "<<root[i+2]<<endl;
    }

    Alhamdulillah
 }
