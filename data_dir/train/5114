
#include<bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
using namespace std;
typedef long long ll;
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <ll, int> pli;
typedef pair <db, db> pdd;
typedef vector<int> vi;
#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
#define sz(x) (int)(x.size())
#define ff first
#define ss second
#define endl "\n"
#define int long long int
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p;}
const ll MOD = 1000000007;
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;

int32_t main()
{
    IOS;
    int n;
    cin>>n;
    int a[n+1];
    int b[n+1];vi adj[n+1];int in[n+1]={0};queue<int>q;int u;
    int ans=0;
    for(int i=1;i<=n;i++)
        cin>>a[i];
    for(int i=1;i<=n;i++)
    {cin>>b[i];
        ans+=b[i];
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=i+1;j<=n;j++)
        {
            if((a[i]&a[j])==a[i])
            {
                adj[j].pb(i);
                in[i]++;
            }
            if((a[j]&a[i])==a[j])
            { adj[i].pb(j);in[j]++;
            }
        }
    }
    
    for(int i=1;i<=n;i++)
    {
        if(!in[i])
        {
            q.push(i);
           // ans-=b[i];
        }
    }
    while(!q.empty())
    {
        u=q.front();
        ans-=b[u];
        q.pop();
        for(int v:adj[u])
        {
            if(in[v])
            {
                in[v]--;
                if(!in[v])
                    q.push(v);
            }
        }
    }
    cout<<ans<<endl;
    return 0;
}

