/*
author: orthodoxparadox
08-Sep-2018
17:30:10
*/

#include <bits/stdc++.h>
using namespace std;
#define dbl long double
#define int ll
#define ll long long
#define pii pair<int, int>
#define fup(i, a, n) for (ll i = a; i < n; i++)
#define fdw(i, a, n) for (ll i = n-1; i >= a; i--)
#define fnu for(ll i = 0; i < n; i++)
#define fnd for(ll i = n-1; i >= 0; i--)
#define rev(s) reverse(all(s))
#define oiint ostream_iterator<int>(cout, " ") 
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define endl '\n'
#define all(a) a.begin(), a.end()
#define initialise(a, x) memset(a, x, sizeof(a))
#define onlyunique(v) v.erase(unique(all(v)), v.end()); //only for sorted vector
#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize ("O3")
#pragma GCC optimize ("O2")
#pragma GCC optimize("Ofast")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#define _CRT_SECURE_NO_WARNINGS
#ifdef __APPLE__
#define dbg(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
	cerr << name << " : " << arg1 << endl;}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
	const char* comma = strchr(names + 1, ',');
	cerr.write(names, comma - names) << " : " << arg1 << "  ";
	__f(comma + 1, args...);}
#else
#define dbg(...)
#endif
mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());
int __gcd(int a, int b){return b ? __gcd(b, a%b) : a;}
// for set of pairs
struct pair_hash {inline std::size_t operator()(const std::pair<int, int> & v) const {return v.first*31+v.second;}};
const int mod = 1e9 + 7;

vector<int> binarycut(int x){
	vector<int> v;
	while(x){
		if(x&1) v.pb(1); else v.pb(0);
		x>>=1;}
	reverse(all(v));
	return v;
}

int takemod(int a){return ((a%mod)+mod)%mod;}

int fast_exp(int base, int expo) {
	int res=1;
	while(expo>0) {
		if(expo&1) res=(res*base)%mod;
		base=(base*base)%mod;
		expo>>=1;}
	return res;
}

int modinv(int a){return takemod(fast_exp(takemod(a), mod-2));}

// void siev(int n){
// 	sieve[0]=false; sieve[1]=false;
// 	for(int i=2; i<=sqrtl(n); i++)
// 		if(sieve[i])
// 			for(int j=i; i*j<=n; j++)
// 				sieve[i*j]=false;
// }

signed main()
{
	ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	
	#ifdef __APPLE__
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	freopen("error.txt", "w", stderr);
	#endif
	time_t t1, t2;
	t1 = clock();


	int n, m;
	cin >> n >> m;
	int a[n+1][m+1];
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= m; j++)
		{
			cin >> a[i][j];
		}
	}
	//no switch
	bool f = true;
	for(int i = 1; i <= n; i++)
	{
		int wrong = 0;
		for(int j = 1; j <= m; j++)
		{
			if(a[i][j] != j)
			{
				wrong++;
			}
		}
		if(wrong > 2)
		{
			f = false;
			break;
		}
	}
	if(f)
	{
		cout << "YES";
		return 0;
	}
	for(int r1 = 1; r1 <= m; r1++)
	{
		for(int r2 = r1 + 1; r2 <= m; r2++)
		{
			int b[n+1][m+1];
			for(int i = 1; i <= n; i++)
			{
				for(int j = 1; j <= m; j++)
				{
					b[i][j] = a[i][j];
				}
			}
			for(int i = 1; i <= n; i++)
			{
				swap(b[i][r1], b[i][r2]);
			}
			bool f = true;
			for(int i = 1; i <= n; i++)
			{
				int wrong = 0;
				for(int j = 1; j <= m; j++)
				{
					if(b[i][j] != j) wrong++;
				}
				if(wrong > 2)
				{
					f = false;
					break;
				}
			}
			if(f)
			{
				cout << "YES";
				return 0;
			}
		}
	}
	cout << "NO";
	return 0;
	t2 = clock();
	cerr << "time taken: " << t2-t1;
	return 0;
}