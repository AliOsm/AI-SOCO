#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int maxn=5e5+7;
const int inf=INT_MAX;
const ll inff=1e18;
const ll mod=1e9+7;
#define pii pair<int,int>
#define mkp make_pair
#define F first
#define S second
#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
#define int ll

#ifdef HNO2
#define IOS
#else
#define endl '\n'
#define IOS ios::sync_with_stdio(0); cin.tie(0);
#endif // HNO2

int q;
int n,m,c0,c;
vector<int> v;
int t[maxn],a[maxn],b[maxn];
multimap<int,int> mm;

int32_t main()
{
    IOS
    cin>>q;
    while (q--)
    {
        v.clear();
        mm.clear();
        cin>>n>>m>>c>>c0;
        t[0]=0,a[0]=c0,b[0]=0;
        v.pb(0);
        for (int i=1;i<=n;i++)
        {
            cin>>t[i]>>a[i]>>b[i];
            v.pb(i);
        }
        t[n+1]=m,a[n+1]=inf,b[n+1]=0;
        v.pb(n+1);
        sort(all(v),[&](int x,int y)
             {
                 if (t[x]!=t[y]) return t[x]<t[y];
                 else return a[x]<a[y];
             });
        int sum=0,ok=1,ans=0,now;
        for (int i=0;i<=n+1;i++)
        {
            if (i!=0)
            {
                now=t[v[i]]-t[v[i-1]];
                //cout<<t[v[i]]<<' '<<now<<' '<<sum<<endl;
                if (now>sum)
                {
                    ok=0;
                    break;
                }
                while (now>0)
                {
                    //cout<<now<<endl;
                    if ((*(mm.begin())).S>now)
                    {
                        (*(mm.begin())).S-=now;
                        //cout<<(*(mm.begin())).S<<endl;
                        ans+=now*(*(mm.begin())).F;
                        sum-=now;
                        now=0;
                    }
                    else
                    {
                        ans+=(*(mm.begin())).F*(*(mm.begin())).S;
                        now-=(*(mm.begin())).S;
                        sum-=(*(mm.begin())).S;
                        mm.erase(mm.begin());
                    }
                }
            }
            if (i==n+1) break;
            mm.insert(mkp(b[v[i]],a[v[i]]));
            sum+=a[v[i]];
            now=sum-c;
            if (now>=0) sum=c;
            while (now>0)
            {
                if ((*(--mm.end())).S>now)
                {
                    (*(--mm.end())).S-=now;
                    now=0;
                }
                else
                {
                    now-=(*(--mm.end())).S;
                    mm.erase((--mm.end()));
                }
            }
            //cout<<ans<<endl;
        }
        if (!ok) cout<<-1<<endl;
        else cout<<ans<<endl;
    }
}

