#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define PB push_back
#define MP make_pair

#define rep(i,n) for(int i=0;i<(n);++i)
#define REP(i,n) for(int i=1;i<=(n);++i)
#define FOR(i,l,h) for(int i=(l);i<=(h);++i)
#define FORD(i,h,l) for(int i=(h);i>=(l);--i)
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl
#define tr(it,c) for(VI::iterator it=(c).begin(); it!=(c).end(); ++it)

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long int64;
typedef pair<int,int> pii;

#define X first
#define Y second
typedef pair<int,int> Point;
//typedef pair<double,double> Point;
typedef pair<Point,Point> Seg;
template<class T> inline T sqr(T _t) {return _t*_t;}
template<class T> inline T det(T x1,T y1,T x2,T y2){return x1*y2-x2*y1;}
template<class T> inline T cross(pair<T,T> a,pair<T,T> b,pair<T,T> c){return det(b.X-a.X,b.Y-a.Y,c.X-a.X,c.Y-a.Y);}//ab*ac
template<class T> inline T dist2(pair<T,T> a,pair<T,T> b) { T m=a.X-b.X, n=a.Y-b.Y; return m*m+n*n;}
template<class T> double dist(pair<T,T> a,pair<T,T> b) { return sqrt(double(dist2(a,b))); }
template<class T> inline T dotdet(T x1,T y1,T x2,T y2){return x1*x2+y1*y2;}
template<class T> inline T dot(pair<T,T> a,pair<T,T> b,pair<T,T> c){return dotdet(b.X-a.X,b.Y-a.Y,c.X-a.X,c.Y-a.Y);}//ab*ac
template<class T> double Area(pair<T,T> a,pair<T,T> b,pair<T,T> c){ return double(cross(a,b,c))*0.5; }
istream& operator >> (istream &in, Point &p){in>>p.X>>p.Y;return in;}

int main(void)
{
	ios::sync_with_stdio(false);
	int n,m; cin>>n>>m;
	Point p; cin>>p;
	int k; cin>>k;
	int64 ans=0;
	const int inf=0x3fffffff;
	while(k--)
	{
		Point d; cin>>d;
		int s1,s2;
		if(d.X>0) s1=(n-p.X)/d.X;
		else if(d.X<0) s1=(p.X-1)/abs(d.X);
		else s1=inf;
		if(d.Y>0) s2=(m-p.Y)/d.Y;
		else if(d.Y<0) s2=(p.Y-1)/abs(d.Y);
		else s2=inf;
		int s=min(s1,s2);
		ans += s;
		p.X += s*d.X;
		p.Y += s*d.Y;
	}
	cout<<ans<<endl;
}