// copied by Nurstan Duisengaliev
// skatal
#include <bits/stdc++.h>
 
#define ll long long
#define all(x) x.begin(), x.end()
#define in insert
#define mp make_pair
#define F first
#define S second
#define ppf pop_front
#define pb push_back
#define ppb pop_back
#define pf push_front
#define pii pair <int, int>
#define boost() ios_base::sync_with_stdio(0), cin.tie(0)
#define sz(x) (int)x.size()
 
using namespace std;             
 
const int N = (int)2e5 + 123;
const int mod = (int)1e9 + 7;
const ll INF = (ll)1e18 + 7;
int dp[150][150];
int a[N];
string s;
int n;
int t[N];
void rec (int l, int r) {
	if (dp[l][r] != 0) return;
	for (int i = l; i < r; i ++) {
		rec (l, i);
		rec (i + 1, r);
		if (dp[l][i] != -1 && dp[i + 1][r] != -1 && abs (dp[l][i] - dp[i + 1][r]) == 1) {
			dp[l][r] = min (dp[l][i], dp[i + 1][r]);
			break;
		}
	}
	if (dp[l][r] == 0) dp[l][r] = -1;
}
void solve () {
	cin >> n >> s;
	for (int i = 0; i < sz (s); i ++) {
		a[i + 1] = s[i] - 'a' + 1;
		dp[i + 1][i + 1] = a[i + 1];
	}	
	rec (1, n);
	int maxi = 0;
	for (int i = 1; i <= n; i ++) {
		t[i] = 0;
		for (int j = 1; j <= i; j ++) {
			if (dp[j][i] != -1) t[i] = max (t[i], t[j - 1] + (i - j));
		}
		maxi = max (maxi, t[i]);
	}
	cout << maxi;
}   	
 
main () {
//	freopen (".in", "r", stdin);
//	freopen (".out", "w", stdout);
	boost ();
	int TT = 1;
//    cin >> TT;
	while (TT --) {
		solve ();
	}
	return 0;	
}