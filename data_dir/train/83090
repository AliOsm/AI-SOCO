#include <bits/stdc++.h>
using namespace std;
#define int long long
#define endl '\n'
typedef long long ll;

signed main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin >> n;
    vector<int> arr(n+1);
    for(int i = 1; i <= n; ++i) {
        cin >> arr[i];
    }
    vector<bool> vis(n+1,false);
    vector<vector<int>> cycles;
    for(int i = 1; i <= n; ++i) {
        if(vis[i]) continue;
        int node = i;
        vector<int> cyc;
        while(!vis[node]) {
            cyc.push_back(node);
            vis[node] = true;
            node = arr[node];
        }
        cycles.push_back(cyc);
    }
    /*
    cout << "cycles:\n";
    for(auto &v : cycles) {
        for(auto &x : v) cout << x << " ";
        cout << endl;
    }
    */
    for(auto &v : cycles) {
        if(v.size() == 1) {
            cout << "YES\n";
            for(int i = 1; i <= n; ++i) {
                if(i == v[0]) continue;
                cout << i << " " << v[0] << endl;
            }
            return 0;
        }
    }
    for(auto &v : cycles) {
        if(v.size() == 2) {
            bool good = true;
            for(auto &cyc : cycles) {
                if(cyc.size() == v.size() && cyc == v) continue;
                if(cyc.size() % 2 == 1) {
                    good = false;
                    break;
                }
            }
            if(good) {
                cout << "YES\n";
                cout << v[0] << " " << v[1] << endl;
                for(auto &cyc : cycles) {
                    if(cyc.size() == v.size() && cyc == v) continue;
                    for(int i = 0; i < cyc.size(); i += 2) {
                        cout << cyc[i] << " " << v[0] << endl;
                        cout << cyc[i+1] << " " << v[1] << endl;
                    }
                }

                return 0;
            }
        }
    }
    cout << "NO\n";
}
