#include <bits/stdc++.h>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

typedef long long ll;
typedef unsigned long long ull;

void fastInOut();

const int N = 30;
int n, t[N];
const int di[] = { -1, -1, 0, 1, 1, 1, 0, -1 };
const int dj[] = { 0, 1, 1, 1, 0, -1, -1, -1 };
map<pair<pair<int, int>, pair<int, int> >, bool> vis;
map<pair<int, int>, bool> ret;

void dfs(int idx, int i, int j, int k) {
	pair<pair<int, int>, pair<int, int> > cur = make_pair(make_pair(i, j),
			make_pair(idx, k));
	if (idx == n || vis.find(cur) != vis.end())
		return;
	vis[cur] = 1;
	for (int c = 0; c < t[idx]; ++c) {
		ret[make_pair(i, j)] = 1;
		if (c + 1 != t[idx])
			i += di[k], j += dj[k];
	}
	int kr = (k + 1) % 8, kl = (k + 7) % 8;
	dfs(idx + 1, i + di[kr], j + dj[kr], kr);
	dfs(idx + 1, i + di[kl], j + dj[kl], kl);
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif
	fastInOut();
	cin >> n;
	for (int i = 0; i < n; ++i)
		cin >> t[i];
	dfs(0, 0, 0, 0), cout << ret.size();
	return 0;
}

void fastInOut() {
	ios_base::sync_with_stdio(0);
	cin.tie(NULL), cout.tie(NULL);
}
