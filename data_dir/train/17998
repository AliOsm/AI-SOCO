#include <algorithm>
#include <iostream>
#include <cstring>
#include <complex>
#include <cassert>
#include <cstdlib>
#include <cstdio>
#include <bitset>
#include <vector>
#include <string>
#include <cmath>
#include <ctime>
#include <queue>
#include <list>
#include <map>
#include <set>

#define all(x) (x).begin(), (x).end()
#define type(x) __typeof((x).begin())
#define foreach(it, x) for(type(x) it = (x).begin(); it != (x).end(); it++)

#ifdef KAZAR
    #define eprintf(...) fprintf(stderr,__VA_ARGS__)
#else
    #define eprintf(...) 0
#endif

using namespace std;

template<class T> inline void umax(T &a,T b){if(a<b) a = b ; }
template<class T> inline void umin(T &a,T b){if(a>b) a = b ; }
template<class T> inline T abs(T a){return a>0 ? a : -a;}
template<class T> inline T gcd(T a,T b){return __gcd(a, b);}
template<class T> inline T lcm(T a,T b){return a/gcd(a,b)*b;}

const int inf = 1e9 + 143;
const long long longinf = 1e18 + 143;

inline int read(){int x;scanf(" %d",&x);return x;}

int main(){

#ifdef KAZAR
    freopen("f.input","r",stdin);
    freopen("f.output","w",stdout);
    freopen("error","w",stderr);
#endif


    vector<int> c(10, 0);
    for(int i = 0; i < 6; i++){
        int x = read();
        c[x]++;
    }

    for(int h = 1; h < 10; h++){
        if(c[h] == 0)
            continue;
        c[h]--;
        for(int b = 1; b < 10; b++){
            if(c[b] == 0)
                continue;
            c[b]--;
            int d = 0;
            for(int i = 1; i < 10; i++)
                if(c[i] > 0){
                    ++d;
                }
            if(d == 1){
                if(h < b){
                    puts("Bear");
                    return 0;
                }
                if(h == b){
                    puts("Elephant");
                    return 0;
                }
            }
            c[b]++;
        }
        c[h]++;
    }
    puts("Alien");

    return 0;
}
