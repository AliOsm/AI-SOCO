
// ~/BAU/ACM-ICPC/Teams/OverflowLimitExceeded/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <assert.h>
#include <utility>
#include <functional>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;

const int MOD = 1e9 + 7;

int n, dp[5001][5001];
char s[2];
vector < int > v;

int main() {
#ifdef LOCAL
	freopen("input.txt", "r", stdin);
#endif
	
	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		scanf("%s", s);
		v.push_back(s[0] == 's' ? 0 : 1);
	}

	dp[0][0] = 1;

	for (int i = 1; i < n; i++) {
		if (v[i - 1]) {
			for (int j = 1; j < n; j++)
				dp[i][j] = dp[i-1][j - 1];
		}
		else {
			dp[i][n - 1] = dp[i - 1][n - 1];
			for (int j = n - 2; j >= 0; j--) 
				dp[i][j] = (dp[i][j+1] + dp[i - 1][j]) % MOD;
		}
	}

	int ans = 0;
	for (int j = 0; j < n; j++)
		ans = (ans + dp[n - 1][j]) % MOD;

	printf("%d\n", ans);

	return 0;
}