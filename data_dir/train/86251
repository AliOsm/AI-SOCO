#include <bits/stdc++.h>
using namespace std;
using ll = long long;

const int MAX = 101;
char S[MAX];

ll dp[MAX][MAX];
ll s[MAX][MAX]; // partial sums of dp
int P[MAX]; // previous position with same character
int L[26]; // used to build P


inline ll sum(int id,int l,int r){
	ll q = 0;
	if( l > 0) q = s[id][l-1];
	return s[id][r] - q;
}

int main(){
	int n;
	ll k;
	scanf("%d %lld",&n,&k);
	scanf("%s",S);
	for(int i=1;i<=n;i++){
		P[i] = L[S[i-1] - 'a'];
		L[S[i-1] - 'a'] = i;
	}
	for(int j=1;j<=n;j++){
		if( P[j] == 0){
			dp[1][j] = 1;
		}
	}
	s[0][n] = 1;
	for(int j=1;j<=n;j++){
		s[1][j] = s[1][j-1] + dp[1][j];
	}
	for(int i=2;i<=n;i++){
		for(int j=1;j<=n;j++){
			dp[i][j] = sum(i-1,P[j],j-1);
		}
		for(int j=1;j<=n;j++){
			s[i][j] = s[i][j-1] + dp[i][j];
		}
	}
	ll res = 0;
	for(int i=n;i>=0 && k; i--){
		if( k >= s[i][n] ){
			k-= s[i][n];
			res += s[i][n]* (n-i);
		}
		else{
			res += k*(n-i);
			k=0;
		}
	}
	if( k ){
		printf("-1\n");
	}
	else{
		printf("%lld\n",res);
	}
}

