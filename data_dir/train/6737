#include <bits/stdc++.h>
using namespace std;

const int N = 2e5 + 5;
typedef long long ll;
typedef pair <int, int> pii;

vector <int> g[30];
vector <int> adj[N];
bool vis[N];

void dfs(int v) {
	vis[v] = 1;
	for (auto u : adj[v]) {
		if(!vis[u])	dfs(u);
	}
}

int main() {
	ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
	int n;
	cin >> n;
	for (int i = 0; i < n; i++) {
		string s;
		cin >> s;
		for (int j = 0; j < (int)s.size(); j++) {
			g[s[j] - 'a'].push_back(i);
		}
	}
	for (int j = 0; j < 26; j++) {
		if(g[j].empty())	continue;
		for (int i = 0; i < (int)g[j].size() - 1; i++) {
			adj[g[j][i]].push_back(g[j][i + 1]);
			adj[g[j][i + 1]].push_back(g[j][i]);
		}
	}
	int cnt = 0;
	for (int i = 0; i < n; i++) {
		if(!vis[i])
			dfs(i), cnt++;
	}
	cout << cnt << "\n";
}
