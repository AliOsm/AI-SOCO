#include<bits/stdc++.h>
using namespace std;
const int MAX=1e3+9;
int n,m,k,a[MAX],s,ans,mx;
vector<int> g[MAX],t;
bool mark[MAX];
void dfs(int v)
{
	mark[v]=true,s++;
	for (auto u:g[v]) if (!mark[u]) dfs(u);
}
int main()
{
	ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
	cin>>n>>m>>k;
	for (int i=0;i<k;i++) cin>>a[i],a[i]--;
	for (int i=0,v,u;i<m;i++) cin>>v>>u,v--,u--,g[v].push_back(u),g[u].push_back(v);
	for (int i=0;i<k;i++)
	{
		s=0;
		dfs(a[i]);
		ans+=s*(s-1)/2,mx=max(mx,s);
	}
	ans-=mx*(mx-1)/2;
	for (int i=0;i<n;i++) if (!mark[i]) s=0,dfs(i),mx+=s;
	cout<<ans-m+mx*(mx-1)/2;
	return 0;
}
