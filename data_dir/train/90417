//let's do it
 #include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define inf 1000000000000000000
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define boost1 ios::sync_with_stdio(false);
#define boost2 cin.tie(0);
#define mem(a,val) memset(a,val,sizeof a)
#define endl "\n"
#define maxn 1000001

ll val[maxn],sum[maxn];
vector<ll>v[maxn];

void dfs(ll cur,ll par,ll h)
{
    if(h%2==0)
    {
        ll mini=inf;
        for(ll i=0;i<v[cur].size();i++)
        {
            ll x=v[cur][i];
            if(x==par)
            continue;
            mini=min(mini,sum[x]);
        }
        if(mini==inf)
        {
            val[cur]=0;
            sum[cur]=sum[par];
        }
        else
        {
            val[cur]=mini-sum[par];
            sum[cur]=sum[par]+val[cur];
        }
    }   
    for(ll i=0;i<v[cur].size();i++)
    {
        ll x=v[cur][i];
        if(x==par)
        continue;
        dfs(x,cur,h+1);
    }
}
void dfs1(int cur,int par,int h)
{
    if(h%2)
    {
        if(par==-1)
        val[cur]=sum[cur];
        else
        val[cur]=sum[cur]-sum[par];
    }
    for(ll i=0;i<v[cur].size();i++)
    {
        ll x=v[cur][i];
        if(x==par)
        continue;
        dfs1(x,cur,h+1);
    }
}
void check(ll cur,ll par,ll s)
{
    s+=val[cur];
    if(s!=sum[cur])
    {
        cout<<"-1";
        exit(0);
    }
    for(ll i=0;i<v[cur].size();i++)
    {
        ll x=v[cur][i];
        if(x==par)
        continue;
        check(x,cur,s);
    }
}
int main()
{
    boost1;boost2;
    ll i,j,n,x,y,ans;
    cin>>n;
    for(i=2;i<=n;i++)
    {
        cin>>x;
        v[i].pb(x);
        v[x].pb(i);
    }
    for(i=1;i<=n;i++)
    cin>>sum[i];
    dfs(1,-1,1);
    dfs1(1,-1,1);
    for(i=1;i<=n;i++)
    {
        if(val[i]<0)
        {
            cout<<"-1";
            return 0;
        }
    }
    check(1,-1,0);
    ans=0;
    for(i=1;i<=n;i++)
    ans+=val[i];
    cout<<ans;
    return 0;
}
