#include <bits/stdc++.h>

using namespace std;
#define ll long long
int n, m;
const int N = 1 << 20;
int dp[N];
int g[21][21];

int solve(int mask) {
    if (mask == (1 << m) - 1) return 0;
    int &ret = dp[mask];
    if (ret != -1) return ret;
    int temp = 0;
    for (int i = 0; i < m; i++) {
        if (mask & (1 << i)) {
            for (int j = 0; j < m; j++) {
                if (mask & (1 << j))continue;
                temp += g[i][j];
            }
        }
    }
    ret = 1e8;
    for (int i = 0; i < m; i++) {
        if (mask & (1 << i))continue;
        ret = min(ret, temp + solve(mask | (1 << i)));
    }
    return ret;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    memset(dp, -1, sizeof(dp));
    cin >> n >> m;
    string s;
    cin >> s;
    for (int i = 0; i + 1 < s.size(); i++) {
        g[s[i] - 'a'][s[i + 1] - 'a']++;
        g[s[i + 1] - 'a'][s[i] - 'a']++;
    }

    cout << solve(0) << endl;
    return 0;
}