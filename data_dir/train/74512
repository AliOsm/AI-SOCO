#include <bits/stdc++.h>
#define pb(x) push_back(x)
#define bug cout<<"HERE"<<endl;
#define SSTR( x ) static_cast< std::ostringstream & >( \
        ( std::ostringstream() << std::dec << x ) ).str()
#define clr(x,y) memset(x,y,sizeof(x))
#define all(v) v.begin(),v.end()
#define FOR(i,n) for(int i=0;i<n;++i)
#define FOR1(i,x,n) for(int i=x;i<n;++i)
#define FOR2(i,n) for(int i=n;i>=0;--i)
#define fast 	ios_base::sync_with_stdio(0); cin.tie(0);
#define inp freopen("input.txt", "r", stdin);
#define out freopen("output.txt", "w", stdout);
using namespace std;

typedef long long ll;
struct Team {
    ll ballons , w;
    Team (ll b , ll ww) : ballons(b) , w(ww) {}

    bool operator < (Team other) const {
        return other.ballons < ballons;
    }
};

struct Compare {
    bool operator () (Team const &a , Team const &n) {
        return (a.w - a.ballons) > (n.w - n.ballons) ;
    }
};

typedef vector<int> vi;
typedef priority_queue<Team, std::vector<Team>, Compare > PQ;
typedef priority_queue<int, std::vector<int>, std::greater<int> > PQASC;


int n ;
ll b , w ;
ll limakB , limakW;
vector<Team> teams;
int pos ;
int main() {
    fast
    #ifndef ONLINE_JUDGE
        inp
//        out
    #endif

    cin >> n >> limakB >> limakW;
    FOR (i , n - 1) cin >> b >> w , teams.pb(Team(b,w));
    sort (all(teams));
//    cout << teams[0].ballons ;
    pos = n - 1;
    PQ p ;
    FOR (i , n - 1) if (teams[i].ballons <= limakB) {pos = i ; break;}
    FOR (i , n - 1) if (teams[i].ballons > limakB) p.push(teams[i]);
    int best = pos + 1 ;
    while(!p.empty()) {
        Team cur = p.top(); p.pop();
        ll diff = cur.w - cur.ballons + 1;
        if (limakB < diff) break;
        limakB -= diff;
        for (;pos < n - 1 ; ++ pos) if (teams[pos].ballons <= limakB) break; else {p.push(teams[pos]);}
        best = min (best , (int)p.size() + 1);
    }

    cout << best << "\n";
	return 0;
}
