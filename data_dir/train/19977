#include<bits/stdc++.h>

using namespace std;

bool status[100005];

vector < int > vv;

int ara[300005];

map < int , int > mp;

set < int > st;

void gen()
{
    int i,j,si;

    si=int(sqrt((double)100002));

    for(i=3; i<=si; i+=2)
    {
        for(j=i*i; j<=100002; j+=i+i)
        {
            status[j]=true;
        }
    }

    vv.emplace_back(2);

    for(i=3; i<=100002; i+=2)
    {
        if(!status[i])
        {
            vv.emplace_back(i);
        }
    }
}

int gcd(int a, int b)
{
    if(b==0) return a;

    return gcd(b,a%b);
}

void func(int n)
{
    for(int i=0; i<vv.size() && vv[i]<=sqrt(n); i++)
    {
        if(n%vv[i]==0)
        {
            while(n%vv[i]==0)
            {
                n/=vv[i];
            }

            mp[vv[i]]++;

            st.insert(vv[i]);
        }
    }

    if(n!=1)
    {
        mp[n]++;

        st.insert(n);
    }
}

int main()
{
    int n,i,j,gc;

    gen();

    scanf("%d",&n);

    for(i=1; i<=n; i++)
    {
        scanf("%d",&ara[i]);

        if(i==1) gc=ara[i];

        else gc=gcd(gc,ara[i]);
    }

    int cnt=0;

    for(i=1; i<=n; i++)
    {
        ara[i]/=gc;

        cnt+=(ara[i]==1);
    }

    if(cnt==n)
    {
        printf("-1\n");

        return 0;
    }

    for(i=1; i<=n; i++)
    {
        func(ara[i]);
    }

    set < int > :: iterator it;

    int ans=1e9;

    for(it=st.begin(); it!=st.end(); it++)
    {
        ans=min(ans,n-mp[*it]);
    }

    if(ans==1e9) ans=-1;

    printf("%d\n",ans);

    return 0;

}
