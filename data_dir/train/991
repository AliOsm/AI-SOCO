#include <bits/stdc++.h>
using namespace std;




int adj[500][500];
int vis[500] = {0};
class Solution {
  string ans;
  int n, m;
  bool dfs(int u, bool color = false) {
    if (count(adj[u], adj[u] + n, 1) == 0) return true;
    vis[u] = color + 1;
    ans[u] = color ? 'c' : 'a';
    bool test = true;
    for (int i = 0; i < n; ++i) if (adj[i][u]) {
      if (not vis[i]) {
        test &= dfs(i, !color);
      }
      else if (vis[i] == color + 1) return false;
    }
    return true;
  }
public:
  void run() {
    cin >> n >> m;
    for (int i = 0; i < n; ++i) for (int j = 0; j < n; ++j) adj[i][j] = i != j;
    for (int i = 0; i < m; ++i) {
      int a, b; cin >> a >> b;
      --a, --b;
      adj[a][b] = adj[b][a] = 0;
    }
    bool test = true;
    ans = string(n, 'b');
    for (int i = 0; i < n and test; ++i) if (not vis[i]) test &= dfs(i);
    for (int i = 0; i < n; ++i) for (int j = 0; j < i; ++j) {
      test &= (ans[i] == 'b' or ans[j] == 'b' or ans[i] == ans[j]) xor adj[i][j];
    }
    if (test) {
      cout << "YES\n";
      cout << ans << '\n';
    }
    else {
      cout << "NO\n";
    }
  }
};


int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  Solution().run();
}
