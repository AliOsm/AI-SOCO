#include <bits/stdc++.h>
using namespace std;
int n,k,x,mn=1e9,c[205],p[]={1,2,3};
bool a[205][205],done[205];
bool availble(int idx){
    for(int i=1; i<=n; i++)
        if(a[idx][i] && !done[i])
            return 0;
    return 1;
}
void solve(int mac, int cnt, int cost){
    if(cnt>=n){
        mn=min(mn,cost);
        return ;
    }
    if(cnt)
        cost++;
    int cn=cnt;
    for(int j=1; j<=n; j++){
        for(int i=1; i<=n; i++)
            if(!done[i] && c[i]==p[mac] && availble(i))
                done[i]=1,cn++,cost++;
    }
    solve((mac+1)%3,cn,cost);
}
int main()
{
    ios::sync_with_stdio(0);
    cin>>n;
    for(int i=1; i<=n; i++)
        cin>>c[i];
    for(int i=1; i<=n; i++){
        cin>>k;
        for(int j=0; j<k; j++)
            cin>>x,a[i][x]=1;
    }
    for(int i=0; i<3; i++){
        memset(done,0,sizeof done);
        solve(i,0,0);
    }
    cout<<mn<<endl;
    return 0;
}
