#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<ll,ll> ii;

struct line{
    ll a, b, c;
    line(ll _a, ll _b, ll _c){a = _a; b = _b; c = _c;}
    bool operator <(const line& other) const{
        if(a == other.a){
            if(b == other.b) return c < other.c;
            else return b < other.b;
        }
        else return a < other.a;
    }
    bool operator ==(const line& other) const{
        return a == other.a and b == other.b and c == other.c;
    }
};

vector<line> vec_line;
vector<ii> vec_ponto;

int main(){

    cout.sync_with_stdio(0);
    cin.tie(0);

    ll n; cin >> n;
    
    for(ll i = 0; i < n; i++){
        ll x, y; cin >> x >> y;
        vec_ponto.push_back({x,y});
    }
    for(ll i = 0; i < n; i++)
        for(ll j = i+1; j < n; j++){
            ll x1 = vec_ponto[i].first, y1 = vec_ponto[i].second;
            ll x2 = vec_ponto[j].first, y2 = vec_ponto[j].second;
            ll a = y1-y2, b = x1-x2, c = y1*x2-y2*x1;
            ll g = __gcd(abs(a), __gcd(abs(b),abs(c)));
            a /= g; b /= g; c /= g;
            if(a < 0) a = -a, b = -b, c = -c;
            if(b < 0) a = -a, b = -b, c = -c;
            vec_line.push_back(line(a, b, c));
        }
    sort(vec_line.begin(), vec_line.end());
    vec_line.erase(unique(vec_line.begin(), vec_line.end()), vec_line.end());
    ll res = vec_line.size();
    res = (res*(res-1))/2;

    int pos = 0;
    while(pos < vec_line.size()){
        ll a1 = vec_line[pos].a, b1 = vec_line[pos].b;
        ll aux = 1;
        pos++;
        while(pos < vec_line.size() and vec_line[pos].a == a1 and vec_line[pos].b == b1)
            pos++, aux++;
        res -= (aux*(aux-1))/2;
    }
    cout << res << endl;    
	return 0;
}