#include <bits/stdc++.h>
#define ll long long
#define str string
#define rtn return
#define endl '\n'
#define xx first
#define yy second
#define pb push_back
#define loop(i,a,b) for(ll i=(a); i<(b); i++)
#define rep(i, b) for(ll i=(0); i<(b); i++)
#define rloop(i, a, b) for(ll i=b-1; i>=a; i--)
#define rrep(i, a) for(ll i=(a-1); i>=0; i--)

using namespace std;
const int nu = 1010101;

ll bit1[nu], bit2[nu];
ll a[nu], b[nu];
ll n, ans;

void update1(int in, int val) {
    while (in < nu) {
        bit1[in] += val;
        in += in&-in;
    }
}

void update2(int in, int val) {
    while (in < nu) {
        bit2[in] += val;
        in += in&-in;
    }
}

ll query1(int in) {
    ll ans = 0;
    while (in > 0) {
        ans += bit1[in];
        in -= in&-in;
    }
    rtn ans;
}

ll query2(int in) {
    ll ans = 0;
    while (in > 0) {
        ans += bit2[in];
        in -= in&-in;
    }
    rtn ans;
}

map<ll, int> mp;

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(NULL);
    std::cout.tie(NULL);
    //start
    cin >> n;
    rep (i, n) {
        cin >> a[i+1];
        b[i] = a[i+1];
    }
    sort (b, b + n);
    int cnt = 1;
    rep (i, n) {
        mp[b[i]] = cnt++;
    }
    rloop (i, 1, n) {
        update2(mp[a[i+1]], 1);
    }
    update1(mp[a[1]], 1);
    loop (i, 2, n) {
        ans += (query1(nu) - query1(mp[a[i]])) * query2(mp[a[i]]-1);
        update1(mp[a[i]], 1);
        update2(mp[a[i]], -1);
    }
    cout << ans << endl;
    return 0;
}
