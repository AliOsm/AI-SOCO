#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> void mini(T &l, T r) {l = min(l, r);}
template <class T> void maxi(T &l, T r) {l = max(l, r);}

template <class T> using Tree = tree <T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

string to_string(string s) {
    return '"' + s + '"';
}

string to_string(bool a) {
    return a ? "T" : "F";
}

string to_string(const char* s) {
    return to_string((string) s);
}

template <typename A, typename B>
string to_string(pair<A, B> p) {
    return "(" + to_string(p.first) + ", " + to_string(p.second) + ")";
}

template <typename A>
string to_string(A v) {
    bool first = true;
    string res = "{";
    for (const auto &x : v) {
        if (!first) {
            res += ", ";
        }
        first = false;
        res += to_string(x);
    }
    res += "}";
    return res;
}

void debug_out() { cerr << endl; }

template <typename Head, typename... Tail>
void debug_out(Head H, Tail... T) {
    cerr << " " << to_string(H);
    debug_out(T...);
}

#ifdef LOCAL
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif

#define X first
#define Y second

using ll = long long;
using ld = long double;

const int N = 2e5 + 10;

int n, s;
int a[N];

void run() {
    scanf("%d", &n);
    scanf("%d", &s);
    for (int i = 1; i <= n; ++i) scanf("%d", a + i);
    sort(a + 1, a + n + 1);
    int cnt = 0;
    for (int i = 1; i <= n; ++i) if (a[i] > s) {
        cnt++;
    }
    int cnts = 0;
    for (int i = 1; i <= n; ++i) if (a[i] < s) {
        cnts++;
    }
    ll ans = 0;
    for (int i = n; i >= 1 && cnts > n / 2; --i) if (a[i] < s) {
        ans += s - a[i];
        a[i] = s;
        --cnts;
    }
    for (int i = 1; i <= n && cnt > n / 2; ++i) if (a[i] > s) {
        ans += a[i] - s;
        a[i] = s;
        --cnt;
    }
    ans += abs(a[n / 2 + 1] - s);
    a[n / 2 + 1] = s;
    cout << ans << endl;
    debug(vector <int>(a + 1, a + n + 1));
}

int main() {
    run();
    return 0;
}
