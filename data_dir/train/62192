# include <stdio.h>
# include <bits/stdc++.h>
using namespace std;
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define IOS ios_base :: sync_with_stdio(0);cin.tie(0)
# define p(v) cerr << #v << " = " << v << '\n'
# define p2(v) cerr << #v << " = " << (complex < int > (v.x,v.y)) << '\n'
# define vi vector < int >
# define vll vector < ll >
# define pii pair < int , int >
# define mp make_pair
int main(void)
{
    #ifdef CF
    freopen("input","r",stdin);
    #endif // CF
    srand(time(0));
    fo << fixed << setprecision(7);
    cerr << fixed << setprecision(7);
    int n,m;
    IOS;
    fi>>n>>m;
    static int g[55][55];
    for (int i = 1;i <= 53;++i)
        for (int j = 1;j <= 53;++j)
            g[i][j] = __gcd(i,j);
    static int ans[1 << 20];
    static vector < pair < int , pair < int , int > > > v[1 << 20];
    for (int i = 1;i <= n;++i)
    {
        int k;
        fi>>k;
        for (int j = 0;j < k;++j)
        {
            int vv;
            fi>>vv;
            v[vv].push_back({i,{j,k}});
        }
    }
    static int Last[55];
    static int w[55];
    for (int i = 1;i <= m;++i)
    {
        int cnt = -1,prev = -1;
        memset(Last,-1,sizeof(Last));
        memset(w,-1,sizeof(w));
        for (auto it : v[i])
        {
            if (it.x > prev + 1)
                cnt = it.x;
            prev = it.x;
            for (int T = 1;T <= 50;++T)
                if (Last[T] > 0 && (w[T] % g[T][it.y.y]) != (it.y.x % g[T][it.y.y]))
                    cnt = max(cnt,Last[T] + 1);
            Last[it.y.y] = it.x;
            w[it.y.y] = it.y.x;
            ans[i] = max(ans[i],it.x - cnt + 1);
        }
    }
    for (int i = 1;i <= m;++i)
        fo << ans[i] << '\n';
    cerr << "Time elapsed :" << clock() * 1000.0 / CLOCKS_PER_SEC << " ms" << '\n';
    return 0;
}


