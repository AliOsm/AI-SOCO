#include <iomanip>
#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <ctime>
#include <cstdio>
#include <cmath>
#include <queue>
#include <bitset>
#include <string>
 
#define ll long long
#define mp make_pair
#define pb push_back
 
using namespace std;
 
const int N = 1000010;
const int MOD = 1e9+7;

int n, m;
vector <int> tmp;
vector <pair<int, int> > g[N];
int cnt1[N];
int marked[N];
int f[N];
map <vector<pair<int, int> >, int> cnt;

int product(int a, int b) {
    return (1ll * a * b) % MOD;
}

void mult(int &a, int b) {
    a = (1ll * a * b) % MOD;
}

int main() {
    f[0] = 1;
    for (int i = 1; i < N; i++) f[i] = product(f[i - 1], i);
    scanf("%d%d", &n, &m);
    for (int i = 1; i <= n; i++) {
        int k;
        scanf("%d", &k);
        tmp.clear();
        for (int j = 0; j < k; j++) {
            int x;
            scanf("%d", &x);
            tmp.pb(x);
        }
        for (int j = 0; j < k; j++) cnt1[tmp[j]] = 0;
        for (int j = 0; j < k; j++) cnt1[tmp[j]]++;
        for (int j = 0; j < k; j++) {
            if (marked[tmp[j]] != i) {
                marked[tmp[j]] = i;
                g[tmp[j]].pb(mp(i, cnt1[tmp[j]]));
            }
        }
    }
    for (int i = 1; i <= m; i++) cnt[g[i]]++;
    int ans = 1;
    for (auto p : cnt) {
        const vector <pair<int, int> > &v = p.first;
        //cout << p.second << endl;
        //for (pair  <int, int> x : v) cout << x.first << " " << x.second << endl;
        //cout << endl;
        mult(ans, f[p.second]);
    }
    cout << ans;
	return 0;
}