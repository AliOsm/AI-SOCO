#include <bits/stdc++.h>

#define clr(x) memset((x), 0, sizeof((x)))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define x first
#define y second

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> PII;
typedef pair<ll, ll> PLL;


inline int nxt() {
    int a;
    scanf("%d", &a);
    return a;
}

int n;
int m;
int a[100000];

bool check(long long v) {
    int b[n];
    memcpy(b, a, n * sizeof(int));
    int pos = 0;
    for (int i = 0; i < m && pos < n; ++i) {
        long long t = v;
        t -= pos + 1;
        while (t > 0 && pos < n) {
            long long w = min((long long)b[pos], t);
            b[pos] -= w;
            t -= w;
            if (b[pos] == 0) {
                ++pos;
                --t;
            }
        }
    }
    for (int i = 0; i < n; ++i) {
        if (b[i] != 0) return false;
    }
    return true;
}

void solve(int test) {
    n = nxt();
    m = nxt();
    for (int i = 0; i < n; ++i) {
        a[i] = nxt();
    }
    long long l = 0, r = 1e18;
    while (l < r) {
        long long mi = (l + r) >> 1;
        if (check(mi)) {
            r = mi;
        } else {
            l = mi + 1;
        }
    }
    cout << l << endl;
}

int main() {
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#endif

    int t = 1;//nxt();
    for (int i = 0; i < t; ++i) {
        solve(i + 1);
    }
    return 0;
}