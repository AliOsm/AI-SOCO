#include <iostream>
#include <algorithm>

using namespace std;

typedef long long llint;

const int MAXN = 24;
const llint MOD = 1000000007;

llint a[MAXN], b[MAXN];
llint dp[1 << MAXN];

int main() {
  int n, m;

  cin >> n;
  for (int i = 0; i < n; ++i) {
    cin >> a[i];
  }
  cin >> m;
  for (int i = 0; i < m; ++i) {
    cin >> b[i];
  }

  dp[0] = 0;
  for (int i = 1; i < (1 << n); ++i) {
    int j = __builtin_ctz(i);
    dp[i] = dp[i ^ (1 << j)] + a[j];
  }
  for (int i = 0; i < (1 << n); ++i) {
    for (int j = 0; j < m; ++j) {
      if (dp[i] == b[j]) {
        dp[i] = -1;
        break;
      }
    }
  }
  dp[0] = 1;
  for (int i = 1; i < (1 << n); ++i) {
    if (dp[i] < 0) {
      dp[i] = 0;
    } else {
      dp[i] = 0;
      for (int j = 0; j < n; ++j) {
        if (i & (1 << j)) {
          dp[i] += dp[i ^ (1 << j)];
        }
      }
      dp[i] %= MOD;
    }
  }
  cout << dp[(1 << n) - 1] << endl;

  return 0;
}