#include<iostream>
//#include <bits/stdc++.h>
using namespace std;
#include<algorithm>
#include<map>
#include<vector>
#include <iomanip>
#include <set>
#include<cmath>
#define F first
#define S second
#define pii pair<int,int>
#define pb push_back
#define int long long
#define mp make_pair
#define error(x) cout<<#x<<"="<<(x)<<endl;
#define size(x) (int)x.size();
void sp(double y,int x){cout<<fixed<<setprecision(x)<<y;}
int inf=1e9+10;
int const M=2e5+10;
int const M2=1e6+10;
int const M3=1e3+10;
int mod=1e9+7;
pii chair[M];
int cnt[M],sum,l[M],d[M];
void relax(int i)
{
    i--;
    while(i!=0)
    {
        cnt[chair[i].S]++;
        if(chair[i].F!=chair[i-1].F)
            break;
        i--;
    }
}
int sa(int x,int y){if(x%y==0)return x/y;return x/y+1;}
int binp(int x,int y){int ans=1;int t=x;while(y!=0){if(y%2==1){ans*=t;ans;}y/=2;t*=t;t;}return ans;}
main(){
	ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
	int n;
	cin>>n;
	//int l,d;
	for(int i=1;i<=n;i++)
        cin>>l[i];
    for(int i=1;i<=n;i++)
        cin>>d[i],chair[i]=mp(l[i],d[i]),sum+=d[i];
    sort(chair+1,chair+1+n);
    int now=0;
    int nu=0;
    int ans=inf;
    for(int i=1;i<=n;i++)
    {
        int pick=0;
        if(chair[i].F!=chair[i-1].F)
        {
            now=0;
            nu=0;
            relax(i);
        }
        nu++;
        pick=nu-1;
        now+=chair[i].S;
        int hlp=now;
        for(int j=200;j>=1;j--)
        {
            if(pick-cnt[j]<0)
            {
                hlp+=j*pick;
                break;
            }
            pick-=cnt[j];
            hlp+=j*cnt[j];
        }
        //cerr<<sum<<" "<<hlp<<" "<<now<<endl;
        ans=min(ans,sum-hlp);
    }
    cout<<ans;
}
