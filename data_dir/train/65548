#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
const int maxn = (int) 1e6 + 1;

#define int ll

int n, w;
int x, a[maxn], d[23][maxn], ans[maxn];

int u[maxn];
void build(){
    u[1] = 0;
    for(int i = 2; i <= x; i++){
        u[i] = u[i / 2] + 1;
    }
    for(int i = 1; i <= x; i++){
        d[0][i] = a[i];
    }
    for(int i = 1; i <= u[x] + 1; i++){
        for(int j = 1; j <= x - (1 << i) + 1; j++){
            d[i][j] = max(d[i - 1][j], d[i - 1][j + (1 << (i - 1))]);
        }
    }
}

int get(int l, int r){
    int q = u[r - l + 1];
    return max(d[q][l], d[q][r - (1 << q) + 1]);
}

int z[maxn];

 main(){
    cin >> n >> w;
    for(int i = 1; i <= n; i++){
        cin >> x;
        for(int j = 1; j <= x; j++){
            cin >> a[j];
        }
        build();
        for(int j = 1; j <= x; j++){
            int l = j - (w - x);
            if(l <= 0){
                ans[j] += max(get(1, j), 0ll);
            }
            else {
                ans[j] += get(l, j);
            }
        }
        if(x < w){
            int h = w - x;
            int f = max(get(max(x - h + 1, 1ll), x), 0ll);
            if(x + 1 <= h){
                z[x + 1] += f;
                z[h + 1] -= f;
            }
            for(int j = 1; j <= x; j++){
                if(w - x + j <= x){
                    continue;
                }
                ans[w - x + j] += max(get(j, x), 0ll);
            }
        }
    }
    for(int i = 1; i <= w; i++){
        z[i] += z[i - 1];
        cout << ans[i] + z[i] << " " ;
    }
}
