#include<bits/stdc++.h>
using namespace std;
struct sell_orders
{
    int price,stock;
};
struct buy_orders
{
    int price,stock;
};
bool comp1(sell_orders s1,sell_orders s2)
{
    return s1.price<s2.price;
}
bool comp2(buy_orders b1,buy_orders b2)
{
    return b1.price>b2.price;
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    int n,s;
    cin>>n>>s;
    char d;
    vector<sell_orders>v1,fv1;
    vector<buy_orders>v2,fv2;
    sell_orders sell;
    buy_orders buy;
    while(n--)
    {
        cin>>d;
        if(d=='S')
        {
            cin>>sell.price>>sell.stock;
            v1.push_back(sell);
        }
        else
        {
            cin>>buy.price>>buy.stock;
            v2.push_back(buy);
        }
    }
    sort(v1.begin(),v1.end(),comp1);
    sort(v2.begin(),v2.end(),comp2);
    if(v1.size()>0)
        fv1.push_back(v1[0]);
    if(v2.size()>0)
        fv2.push_back(v2[0]);
    for(int i=1;i<v1.size();i++)
    {
        if(v1[i].price==v1[i-1].price)
            fv1[fv1.size()-1].stock+=v1[i].stock;
        else
            fv1.push_back(v1[i]);
    }
    for(int i=1;i<v2.size();i++)
    {
        if(v2[i].price==v2[i-1].price)
            fv2[fv2.size()-1].stock+=v2[i].stock;
        else
            fv2.push_back(v2[i]);
    }
    int i=(s>fv1.size())?fv1.size()-1:s-1;
    for(;i>=0;i--)
    {
        cout<<'S'<<' '<<fv1[i].price<<' '<<fv1[i].stock<<'\n';   
    }
    s=(s>fv2.size())?fv2.size():s;
    for(i=0;i<s;i++)
    {
        cout<<'B'<<' '<<fv2[i].price<<' '<<fv2[i].stock<<'\n';   
    }
}