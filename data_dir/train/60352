#include <bits/stdc++.h>

using namespace std;
using namespace __gnu_cxx;


#define f first
#define s second
#define sz size()
#define pb push_back
#define mem(a,b,s) for(int i=0 ; i<=s ; ++i) a[i]=b;
#define mem2(a,r,c,b) for(int i=0 ; i<=r ; ++i)    for(int j=0 ; j<=c ; ++j)    a[i][j]=b;
#define all(a) a.begin(),a.end()
#define mp make_pair
#define in insert
#define sc(a) scanf("%d",&a)
#define sc2(a,b)	scanf("%d%d",&a,&b)
#define rep(x,a,b)	for(int x=a ; x<=b ; ++x)
#define irep(x,a,b)	for(int x=a ; x>=b ; --x)

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<pair<int,int> > vii;
typedef set<int> si;
typedef set<pair<int,int> > sii;
typedef map<int,int>	mii;
typedef pair<int,char>	ic;
typedef pair<int,string> is;

const double pi=3.14159265358979323846264338327950288419716939937510582097494459;
const double EPS = 1e-9;
const int MAXN=1e5+10;
const ll MOD=1e9+7;
const int oo=2e9;
const ll OO=1e17;

int dx[]={0,1,0,-1,-1,-1,1,1};
int dy[]={1,0,-1,0,-1,1,-1,1};

int n,m,d;
int dp[2005][2005][2][2];
string l,r;

int solve(int idx=0, int rem=0, bool lst=0, bool rst=0)
{
	if(idx==n)	return (rem==0);

	int &ret=dp[idx][rem][lst][rst];
	if(ret!=-1)	return ret;

	ret=0;
	if(idx&1)
	{
		if(!lst && d<(l[idx]-'0'));
		else if(!rst && d>r[idx]-'0');
		else ret=solve(idx+1, (rem*10+d)%m, lst || (d>(l[idx]-'0')), rst || (d<(r[idx]-'0')) )%MOD;
	}
	else
	{
		for(int i=0 ; i<10 ; ++i)
		{

			if(i==d)	continue;
			if(!lst && i<l[idx]-'0')	continue;
			if(!rst && i>r[idx]-'0')	continue;
			ret+=(solve(idx+1, (rem*10+i)%m, lst || (i>(l[idx]-'0')), rst || (i<(r[idx]-'0'))) %MOD);
			ret%=MOD;
		}
	}
	return ret;
}


int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	//	freopen("In.txt","r",stdin);
	//	freopen("Out.txt","w",stdout);

	memset(dp,-1,sizeof dp);
	cin >> m >> d >> l >> r;
	n=l.sz;
	cout << solve() << endl;
}
