#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"

#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0);}

inline int safe_mul(int x, int y) __attribute__ ((warn_unused_result));

inline void upd(map<long long, int>& m, const long long ind)
{
    auto it = m.find(ind);
    if (it == m.end())
        m[ind] = 1;
    else
        ++it->second;
}

inline long long get(const vector<int>& a, long long need)
{
    map<long long, int> m;

    long long cursum = 0;
    upd(m, cursum);
    long long ans = 0;
    for(int x : a)
    {
        cursum += x;
        auto it = m.find(cursum - need);
        if (it != m.end())
            ans += it->second;
        upd(m, cursum);
    }
    return ans;
}

int main()
{
//    freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    ios_base::sync_with_stdio(false);
    int n, k;
    cin >> n >> k;
    vector<int> a(n);
    for(int& x : a)
        cin >> x;

    long long maxk = 1000000001LL * n;

    if (k == 1)
        FINAL_OUT(get(a, k));
    if (k == -1)
        FINAL_OUT(get(a, 1) + get(a, -1));

    long long ans = 0;
    long long cur = 1;
    while (abs(cur) < maxk)
    {
        ans += get(a, cur);
        cur *= k;
    }
    cout << ans << endl;
}
