#include <stdio.h>
#include <math.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <utility>
#include <stack>
#include <queue>
#include <set>
#include <list>
#include <bitset>
#include <array>

using namespace std;

#define fi first	
#define se second
#define long long long
typedef pair<int,int> ii;

int visited[100003];
vector<int> vec[100003];
vector<int> ans[2];

bool bip = 1;
void dfs(int u, int col)
{
	// printf("%d %d\n", u, col);
	visited[u] = col;
	ans[col].push_back(u);
	for(int v : vec[u])
	{
		if(visited[v] == -1)
			dfs(v, col^1);
		else if(visited[u] == visited[v])
			bip = 0;
	}
}


int main()
{
	// ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	// freopen("input.in", "r", stdin);

	int n, m; scanf("%d %d", &n, &m);
	for(int i = 1; i <= m; i++)
	{
		int u, v;
		scanf("%d %d", &u, &v);
		vec[u].push_back(v);
		vec[v].push_back(u);
	}
	memset(visited, -1, sizeof visited);
	for(int i = 1; i <= n; i++)
		if(visited[i] == -1)
			dfs(i,0);
	if(!bip) printf("-1\n");
	else
	{
		printf("%d\n", (int)ans[0].size());
		for(int i = 0; i < ans[0].size(); i++)
		{
			printf("%d", ans[0][i]);
			if(i < ans[0].size()-1) printf(" ");
		} printf("\n");
		printf("%d\n", (int)ans[1].size());
		for(int i = 0; i < ans[1].size(); i++)
		{
			printf("%d", ans[1][i]);
			if(i < ans[1].size()-1) printf(" ");
		} printf("\n");

	}
}










