#include <bits/stdc++.h>

using namespace std;

const int N = (int)5005;

int dp[N][N];
bool used[N][N];
int can[N][N];
string s;
int n;

int solve(int l, int r) {
  if (l > r) return 0;
  if (l == r) {
    can[l][r] = 1;
    return 1;
  }
  if ((can[l + 1][r - 1] && s[l] == s[r]) || (r - l == 1 && s[l] == s[r])) can[l][r] = 1;
  if (used[l][r]) return dp[l][r];
  used[l][r] = 1;
  int &res = dp[l][r];
  res = res + solve(l + 1, r) + solve(l, r - 1) - solve(l + 1, r - 1) + can[l][r];
  return res;
}

main() {
  cin >> s;
  s = " " + s;
  n = s.size();
  solve(1, n);
  int q; scanf("%d", &q);
  while (q--) {
    int l, r; scanf("%d %d", &l, &r);
    printf("%d\n", solve(l, r));
  }
}
