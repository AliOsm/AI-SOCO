#include <stdio.h>
#include <iostream>
#include <vector>
#include <assert.h>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <stack>
#include <string>
#include <sstream>
#include <memory.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
using namespace std;
typedef long long ll;
const int N = 2e5 + 1;
int n, T;
pair<int, int> v[N];
bool check(double m) {
	double need = m;
	double sum = 0;
	for (int i = 0; i < n; ++i) {
		double take = min(need, v[i].second*1.0);
		need -= take;
		sum += take*v[i].first;
	}
	need = m;
	double sum2 = 0;
	for (int i = 0; i < n; ++i) {
		double take = min(need, v[n - 1 - i].second*1.0);
		need -= take;
		sum2 += take*v[n - 1 - i].first;
	}
	return sum >= T*m - 1e-9 && sum2 <= T*m + 1e-9;
}
int main()
{
	scanf("%d%d", &n, &T);
	double l = 0, r = 0, m, res = 0;
	for (int i = 0; i < n; ++i) {
		scanf("%d", &v[i].second);
		r += v[i].second;
	}
	for (int i = 0; i < n; ++i)
		scanf("%d", &v[i].first);
	sort(v, v + n);
	reverse(v, v + n);
	check(6);
	for (int it = 0; it < 80; ++it) {
		m = (l + r) / 2;
		if (check(m))
			res = l = m;
		else
			r = m;
	}
	printf("%.12lf\n", res);
	return 0;
}