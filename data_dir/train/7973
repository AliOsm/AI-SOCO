#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define ll long long
#define ld long double
using namespace std;
bool vis[200005];
vector<pair<int,int> > ans;
vector< vector<int> >adj(2e5 +5);
int n, m, u, v, ID, id[200005], lo[200005];
void dfs(int node , int parent){
    vis[node] = 1;
    id[node] = lo[node] = ID++;
    for(auto i : adj[node]){
        if(!vis[i]){
            dfs(i,node);
            ans.push_back(make_pair(node, i));
            lo[node] = min(lo[node], lo[i]);
            if(lo[i] > id[node])
                cout << 0, exit(0);
        }
        else if(parent != i){
            lo[node] = min(lo[node], id[i]);
            if(id[node] > id[i])
                ans.push_back(make_pair(node, i));
        }
    }
}
int main()
{
    ios::sync_with_stdio(0);
    cin >> n >> m;
    for(int i = 0; i < m; i++)
        cin >> u >> v, adj[u].push_back(v), adj[v].push_back(u);
    dfs(1, 0);
    for(auto i : ans)
        cout << i.first << " " << i.second << endl;
    return 0;
}
