#include <bits/stdc++.h>
using namespace std;
#define eb emplace_back
#define emp emplace
#define fi first
#define se second
#define INF 0x3f3f3f3f
typedef long long ll;
typedef pair<int, int> ii;

const int N = 312345;

int n, m;
string s;
vector<int> g[N], inv[N];
int vis[N];
int cnt[312345][30];
int mx;

bool cyc;
void check(int u) {
	vis[u] = 1;

	for (int v : g[u]) {
		if (!vis[v]) {
			check(v);
		} else if (vis[v] == 1) {
			cyc = 1;
		}
	}

	vis[u] = 2;
}

void dfs(int u) {
	vis[u] = 1;

	for (int v : g[u]) {
		if (!vis[v]) {
			dfs(v); 
		}
		for (char c = 'a'; c <= 'z'; c++) {
			cnt[u][c-'a'] = max(cnt[u][c-'a'], cnt[v][c-'a']);
		}
	}
	cnt[u][s[u-1]-'a']++;

	for (char c = 'a'; c <= 'z'; c++) {
		mx = max(mx, cnt[u][c-'a']);
	}
}

int main(void) {
	ios_base::sync_with_stdio(false);

	cin >> n >> m;
	cin >> s;

	for (int i = 0; i < m; i++) {
		int a, b; cin >> a >> b;
		g[a].eb(b);
		inv[b].eb(a);
	}

	for (int i = 1; i <= n; i++) {
		if (!vis[i]) check(i);
	}

	if (cyc) {
		cout << -1 << endl;
		return 0;
	}

	memset(vis, 0, sizeof vis);
	for (int i = 1; i <= n; i++) {
		if (!vis[i]) {
			dfs(i);
		}
	}
	
	cout << mx << endl;

	return 0;
}
