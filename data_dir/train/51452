#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define mp          make_pair
#define pii         pair<ll ,ll >
#define vll          vector<ll>
#define all(a)      (a).begin(),(a).end()
#define sz(x)       (ll )x.size()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define ios        	ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
using namespace std;
ll i,j,k,l,n,x,y,parent[100005],visited[100005]={0};
vll a[100005],v,vv;
map<pair<ll,ll> ,ll > m;
void dfs(int node,int p)
{
    parent[node]=p;
    visited[node]=1;
    for(int i=0;i<a[node].size();i++)
        if(!visited[a[node][i]]) dfs(a[node][i],node);
    v.pb(node);
}
int  main()
{
    ios
    cin>>n;
    for(i=0;i<n-1;i++)
    {
        cin>>x>>y>>k;
        a[x].pb(y);a[y].pb(x);
        m[{x,y}]=m[{y,x}]=k;
    }
    dfs(1,1);
    for(i=0;i<v.size();i++)
    {   int node=v[i];
        if(visited[node]==1)
        {
            if(m[{node,parent[node]}]==2)
                {
                    vv.pb(node);
                    visited[parent[node]]=0;
                }

        }
        else visited[parent[node]]=0;

    }
    cout<<vv.size()<<endl;
    for(i=0;i<vv.size();i++) cout<<vv[i]<<" ";
 	return 0;
}
