//bismillahir rahmanir rahim
#include <iostream>
#include <math.h>
#include <string.h>
#include <vector>
#include <stack>
#include <algorithm>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cstdio>
#include <iterator>
#define         ll                         long  long
#define         lf                         double 
#define         pb(x)                      push_back(x)
#define         ull                        unsigned long long
#define         sfl(a)                     scanf("%lld",&a)
#define         sf(a)                      scanf("%d",&a)
#define         pf(a)                      printf("%d\n",a)
#define         pfl(a)                     printf("%lld\n",a)
#define         pdl(a)                     printf("%llf\n",a)
#define         FOR(x,n)                   for(int x=1;x<=n;++x)
#define         vii                        vector< ll > v
#define         pi                         3.14159265359
#define         mex                        10000000
#define         pii                        pair< ll , ll >
#define         mem(m,a)                   memset( m, a,sizeof m)
#define         mp(a,b)        		   make_pair(a,b)
#define		maxn                       100000
#define		mod                        1000000007
#define		INF			   1e17
#define 	f1 			   first
#define		f2			   second
#define		all(v)		           v.begin(),v.end()
#define		PI                         acos(-1)
#define		printminusone              printf("-1\n")
#define		bug			   printf("bug")

using namespace std;

int main(){

	string s;

	cin >> s;

	ll len = s.size();

	ll open=0,close=0,hash=0,left = 0;

	//vector < ll > v;

	//ll op[len+1],cl[len+1];

	for ( ll i = 0; i < len; i++ ){

		if ( s[i] == '(' ){

			open++;

			left++;

			/*

			if  ( i  == 0 ){

				op[i] = 1;

				cl[i] = 0;

				continue;
			}

			op[i] = op[i-1]+1;

			cl[i] = cl[i-1];

			*/
		}

		else if ( s[i] == ')' ){

			if ( left > 0 ){

				left--;
			}

			close++;

			/*

			if ( i == 0 ){

				op[i] = 0;

				cl[i] = 1;

				continue;
			}

			cl[i] = cl[i-1]+1;

			op[i] = op[i-1];

			*/
		}

		else {

			hash++;

			left = 0;
			/*

			v.pb( i );

			if  ( i == 0 ){

				op[i] = 0;

				cl[i] = 1;

				continue;
			}

			op[i] = op[i-1];

			cl[i]  = cl[i-1]+1;

			*/
		}

		if ( open < hash+close ){

			printminusone;

			return 0;
		}
	}

	if ( left > 0){

		printminusone;

		return 0;
	}

	for ( ll i = 1 ; i < hash; i++ ){

		printf("1\n");

		close++;
	}

	pfl ( open-close );

	/*


	ll siz = v.size()-1;

	if ( s[len-1] == '(' or op[len-1]-op[v[siz]] > cl[len-1]-cl[v[siz]] or s[0] == ')'){

		printminusone;

		return 0;
	}

	ll ind;

	ll first = 1;

	ll tot_open = 0,tot_close=0;

	for ( ll i = 0; i <= siz; i++ ){

		ind = v[i];

		while ( ind < len and s[ind] != '('  ){

			ind++;
		}

		ll tmp = ind-1;

		tot_open += op[tmp]-op[first-1];

		tot_close += cl[tmp]-cl[first-1];

		if ( first == 1 ){

			tot_close = cl[tmp];

			tot_open = op[tmp];
		}

		if  ( tot_open < tot_close ){

			printminusone;

			return 0;
		}

		first = ind;

	}

	open = open-close;

	for ( ll i = 1; i < hash; i++ ){

		printf("1\n");

		open--;
	}
		
	pfl ( open );

	*/
}