#include<bits/stdc++.h>
using namespace std;


const int N = 1005;



int n, m, p[2 * N], cl[2 * N], ans[2 * N];
vector < int > g[2 * N];
char a[N][N];
bool b[2 * N][2 * N];
vector < int > order;

int dsu_get(int v){
    return p[v] == v ? v : p[v] = dsu_get(p[v]);
}

void dfss(int v){
    cl[v] = 1;
    for(int to : g[v]){
        if(cl[to] == 0){
            dfss(to);
        }
        else if(cl[to] == 1){
            cout << "No";
            exit(0);
        }
    }
    cl[v] = 2;
}

void dfs(int v){
    for(int to : g[v]){
        if(!ans[to]){
            dfs(to);
        }
        ans[v] = max(ans[v], ans[to]);
    }
    ans[v] += 1;
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n >> m;
    for(int i = 1; i <= n + m; i++){
        p[i] = i;
    }
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= m; j++){
            cin >> a[i][j];
            if(a[i][j] == '='){
                p[dsu_get(i)] = dsu_get(n + j);
            }
        }
    }
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= m; j++){
            if(a[i][j] == '>'){
                int x = dsu_get(i),
                    y = dsu_get(n + j);
                if(!b[x][y]){
                    g[x].push_back(y);
                    b[x][y] = true;
                }
            }
            else if(a[i][j] == '<'){
                int x = dsu_get(i),
                    y = dsu_get(n + j);
                if(!b[y][x]){
                    g[y].push_back(x);
                    b[y][x] = true;
                }
            }
        }
    }
    for(int i = 1; i <= n + m; i++){
        if(!cl[i]){
            dfss(i);
        }
    }
    for(int i = 1; i <= n + m; i++){
        if(!ans[i]){
            dfs(i);
        }
    }
    cout << "Yes\n";
    for(int i = 1; i <= n; i++){
        cout << ans[dsu_get(i)] << " ";
    }
    cout << "\n";
    for(int i = 1; i <= m; i++){
        cout << ans[dsu_get(n + i)] << " ";
    }
}
