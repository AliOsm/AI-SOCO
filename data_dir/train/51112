#include<bits/stdc++.h>
#define xx first
#define yy second
#define mp make_pair
#define pb push_back
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
const int MAXN=10005;
struct node
{
	int x,l,r;
	bool operator < (const node &o)const
	{
		return x<o.x;
	}
	node(int _x=0,int _l=0,int _r=0):x(_x),l(_l),r(_r){}
};
vector<node> X,Y;
pii temp[MAXN];
struct BIT
{
	int c[MAXN];
	inline int lowbit(int x)
	{
		return x&(-x);
	}
	void upd(int pos,int val)
	{
		for(int x=pos;x<MAXN;x+=lowbit(x))
			c[x]+=val;
	}
	int qry(int pos)
	{
		int ret=0;
		for(int x=pos;x;x-=lowbit(x))
			ret+=c[x];
		return ret;
	}
	int qry(int l,int r)
	{
		return qry(r)-qry(l-1);
	}
}bit;
int main()
{
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	int n;
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
		int x1,x2,y1,y2;
		scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
		x1+=5001;x2+=5001;y1+=5001;y2+=5001;
		if(y1==y2) X.pb(node(y1,min(x1,x2),max(x1,x2)));
		else Y.pb(node(x1,min(y1,y2),max(y1,y2)));
	}
	sort(X.begin(),X.end());
	sort(Y.begin(),Y.end());
	ll ans=0;
	for(int i=0;i<(int)X.size();i++)
	{
		int tot=0;
		memset(bit.c,0,sizeof(bit.c));
		for(int j=0;j<(int)Y.size();j++)
		{
			if((X[i].x>=Y[j].l&&X[i].x<=Y[j].r)&&(Y[j].x>=X[i].l&&Y[j].x<=X[i].r))
			{
				bit.upd(Y[j].x,1);
				temp[++tot]=mp(Y[j].r,Y[j].x);
			}
		}
		sort(temp+1,temp+1+tot);
		int now=1;
		for(int j=i+1;j<(int)X.size();j++)
		{
			while(now<=tot&&temp[now].xx<X[j].x)
			{
				bit.upd(temp[now].yy,-1);
				now++;
			}
			int cur=bit.qry(X[j].l,X[j].r);
			ans+=1LL*cur*(cur-1)/2;
		}
	}
	printf("%lld\n",ans);
	return 0;
}
