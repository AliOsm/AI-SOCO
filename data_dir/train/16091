#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <algorithm>
#include <functional>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <tuple>
#include <numeric>
#include <ctime>
#include <random>
using namespace std;
#define ll long long

int A[3][2];

int dp[3][2];

int Get(int n,int m) {
    for(int i=0;i<n;i++) {
        for(int j=0;j<m;j++) {
            if (i==0 && j==0) {
                dp[i][j]=A[i][j];
                continue;
            }
            if (i > 0) {
                dp[i][j]=max(dp[i][j],dp[i-1][j]&A[i][j]);
            }
            if (j > 0) {
                dp[i][j]=max(dp[i][j],dp[i][j-1]&A[i][j]);
            }
            printf("%d %d :: %d\n",i,j,dp[i][j]);
        }
    }
    return dp[n-1][m-1];
}

int GetCorrect() {
    return A[0][0]&A[0][1]&A[1][1]&A[2][1];
}


int main() {
    int x;
    cin>>x;
    
    // a,b
    // c,d
    // 0,m
    
    // (c&d) vs (b&d)
    // (c&d) = (b&d) + x.
    
    
    // (d&m)&b - (d&m)&c = x
    // m&(b&d) - m&(c&d) = x
    
    // a -> all ones
    // c -> highest one
    // b -> x
    // d -> all ones
    // m -> x
    
    int a = (1<<18)-1;
    int d=a;
    int b = x;
    int m = x;
    int c = (1<<17);
    
    
    A[0][0]=a;
    A[0][1]=b;
    A[1][0]=c;
    A[1][1]=d;
    A[2][0]=0;
    A[2][1]=m;
    
    printf("%d %d\n",3,2);
    for(int i=0;i<3;i++) {
        for(int j=0;j<2;j++) {
            printf("%d ",A[i][j]);
        }
        cout << endl;
    }
    
//    
//    cout << Get(3,2) << endl;
//    cout << GetCorrect() << endl;
    
}
