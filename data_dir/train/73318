
/*
 * Author    : raj1307 - Raj Singh
 * Date      : 6.11.19
 */

#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#define _CRT_SECURE_NO_WARNINGS
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <iomanip>
#include <memory.h>
#include <assert.h>
using namespace std;

//#define DEBUG
#ifdef DEBUG
#define deb(...) cerr<<"Line:"<<__LINE__<<" "; __f(#__VA_ARGS__, __VA_ARGS__)
#define debarr(a,n) cerr<<#a<<" : ";for(int i=0;i<n;i++) cerr<<a[i]<<" "; cerr<<endl;
#define print(arr) for (auto it = arr.begin(); it != arr.end(); ++it) cerr << *it << " "; cerr << endl;
#define debmat(mat,row,col) cerr<<#mat<<" :\n";for(int i=0;i<row;i++) {for(int j=0;j<col;j++) cerr<<mat[i][j]<<" ";cerr<<endl;}
template<typename Arg1>
void __f(const char *name, Arg1 &&arg1) {
	cerr<<name<<" : "<<arg1<<endl;
}
template<typename Arg1, typename ... Args>
void __f(const char *names, Arg1 &&arg1, Args &&... args) {
	const char *comma=strchr(names+1,',');
	cerr.write(names,comma-names)<<" : "<<arg1<<" | ";
	__f(comma+1,args...);
}

#else
#define deb(...) {}
#define debarr(a,n) {}
#define debmat(mat,row,col) {}
#define debarr(a,n) {}
#define endl "\n"
#endif

#define fio ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define fr(i, a, b) for(int i = (a); i < (b); ++i)
#define fb(i, b, a) for(int i = (b); i > (a); --i)
#define rep(i, a, b) for(int i = (a); i <= (b); ++i)
#define rr return 
#define mp make_pair
#define pb push_back
#define sz(x) ((int)x.size())
#define int long long
typedef pair<int, int> ii;;
int max(int a,int b){if(a>b) return a; else return b;}
int min(int a,int b){if(a>b) return b; else return a;}
int gcd(int a,int b){ return (b == 0) ? a : gcd(b, a % b);}
inline int lcm(int a,int b){ return a / gcd(a, b) * b;}
inline int normalize(int x,int mod){ x %= mod; if (x < 0) x += mod; return x;}

int dx[4]={0,0,1,-1};
int dy[4]={1,-1,0,0};
const int mod = 1000*1000*1000+7;
//const int mod = 998244353;
const int inf = 1e18 +5;

int powm(int a, int b) {
	int res=1;
	while(b) {
		if(b&1)
			res=(res*a)%mod;
		a=(a*a)%mod;
		b>>=1;
	}
	return res;
}


const int N = 2e5 + 5;


int n,k,cnt,st[N];
pair<int,int>a[N];
int cache[N];


int dp(int pos){

    if(pos>=n)
        return 0;

    int &ans=cache[pos];
    if(ans!=-1)
        return ans;


    ans=1e18;

    int mn=min(a[pos].first,a[pos+1].first);
    int mx=max(a[pos].first,a[pos+1].first);

    fr(i,pos+2,min(n,pos+10)){

        mn=min(mn,a[i].first);
        mx=max(mx,a[i].first);

        ans=min(ans,mx-mn+dp(i+1));
    }
    return ans;


}



void path(int pos){


    if(pos>=n)
        return;

    int mn=min(a[pos].first,a[pos+1].first);
    int mx=max(a[pos].first,a[pos+1].first);
    int ans=cache[pos];
    fr(i,pos+2,min(n,pos+10)){

        mn=min(mn,a[i].first);
        mx=max(mx,a[i].first);

        if(ans==mx-mn+dp(i+1)){
            ++cnt;
            fr(j,pos,i+1) st[a[j].second]=cnt;
            return path(i+1);


        }
    }
}












void solve(){   
            
    cin>>n;
    fr(i,0,n){ cin>>a[i].first; a[i].second=i;}


    sort(a,a+n);

    memset(cache,-1,sizeof(cache));

    int ans=dp(0);
    path(0);
    cout<<ans<<" "<<cnt<<endl;
    fr(i,0,n) cout<<st[i]<<" ";
    
   



    
}




signed main() {
	fio;
	#ifndef ONLINE_JUDGE 
    	freopen("input.txt", "r", stdin); 
    	freopen("output.txt", "w", stdout); 
    	freopen("error.txt", "w", stderr); 
	#endif 
	cout<<fixed<<setprecision(10);
	int t=1;
//	cin>>t;  // UNCOMMENT FOR TEST-CASES

	while(t--) {
		solve();
	}

	
	return 0;
}


