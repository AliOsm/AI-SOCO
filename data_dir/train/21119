#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>
#include <valarray>

typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl



using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		tint p = tint(v.size());
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

tint toNumber (string s)
{
	tint Number;
	if ( ! (istringstream(s) >> Number) )
		Number = 0; // el string vacio lo manda al cero
	return Number;
}

string toString (tint number)
{    
    ostringstream ostr;
    ostr << number;
    return  ostr.str();
}

tint best (tint i, vector<string> &p, vector<tint> &c, vector<tint> &d)
{
	if (d[i] == 1e18)
	{
		
		if (i % 2 == 0)
		{
			
			if (p[i] >= p[i-2])
				d[i] = min(d[i],best(i-2,p,c,d) + c[(i-1)/2]);
			if (p[i] >= p[max(tint(0),i-3)])
				d[i] = min(d[i],best(max(tint(0),i-3),p,c,d) + c[(i-1)/2]);
		}
		else
		{
			if (p[i] >= p[i-1])
				d[i] = min(d[i],best(i-1,p,c,d));
			if (p[i] >= p[max(tint(0),i-2)])
				d[i] = min(d[i],best(max(tint(0),i-2),p,c,d));
		}
	}
	return d[i];
}


int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	tint n;
	while (cin >> n)
	{
		
		vector<tint> c(n);
		forn(i,n)
			cin >> c[i];
		vector<tint> d (2*(n+1),1e18);
		vector<string> p (2*(n+1),"");
		forn(i,n)
		{
			string s;
			cin >> s;
			p[2*i+1] = s;
			reverse(s.begin(),s.end());
			p[2*i+2] = s;
		}    
		//forn(i,2*n+1)
		//	cout << i << " :-> " << p[i] << "\n";
			
		string aux = "~";
		p[2*n+1] = aux;
		d[0] = 0;
		tint ans = best(2*n+1,p,c,d);
		if (ans >= 1e18)
			cout << "-1\n";
		else
			cout << ans << "\n";
	}
	
	return 0;
}
