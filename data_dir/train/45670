#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <sstream>
#include <cassert>
#include <queue>
#include <bitset>
#include <ctime>
using namespace std;
#define forr(i, a, b) for(int i = (a); i < (int) (b); i++)
#define forn(i, n) forr(i, 0, n)
#define db(v) cerr << #v << " = " << v << endl
#define pb push_back
#define sz(x) ((int)x.size())
#define fst first
#define snd second
typedef long long ll;
typedef pair<int, int> ii;
const int MAXN = -1;

int n, k, cnt[3], delta[3];
string s;
vector<int> p[3];

void paint(int c1, int c2){
	sort(p[c1].begin(), p[c1].end());
	bool start = c2 < c1;
	if(!start){
		reverse(p[c1].begin(), p[c1].end());
	}
	
	int howmany = -delta[c1];
	assert(howmany >= 0);
	forn(i, howmany){
		int pos = p[c1][i];
		s[pos] = c2+'0';
		delta[c1]++;
		delta[c2]--;
	}
}

void rep(int who){
	sort(p[who].begin(), p[who].end());
	if(who == 0){
		reverse(p[who].begin(), p[who].end());
		forn(i, sz(p[who])){
			int pos = p[who][i];
			if(delta[2]){
				delta[2]--;
				delta[0]++;
				s[pos] = '2';
			} else if(delta[1]){
				delta[1]--;
				delta[0]++;
				s[pos] = '1';
			} else {
				break;
			}
		}
	} else if(who == 1){
		forn(i, sz(p[who])){
			if(!delta[0]) break;
			int pos = p[who][i];
			s[pos] = '0';
			delta[0]--;
			delta[who]++;
		}
		reverse(p[who].begin(), p[who].end());
		forn(i, sz(p[who])){
			if(!delta[2]) break;
			int pos = p[who][i];
			s[pos] = '2';
			delta[2]--;
			delta[who]++;
		}
	} else {
		forn(i, sz(p[who])){
			int pos = p[who][i];
			if(delta[0]){
				delta[0]--;
				delta[2]++;
				s[pos] = '0';
			} else if(delta[1]){
				delta[1]--;
				delta[2]++;
				s[pos] = '1';
			} else {
				break;
			}
		}
	}
}

int main(){
	while(scanf("%d", &n) >= 1){
		memset(cnt, 0, sizeof(cnt));
		forn(i, 3){
			p[i].clear();
		}
		k = n/3;
		
		cin >> s;
		forn(i, sz(s)){
			int ch = s[i]-'0';
			cnt[ch]++;
			
			p[ch].pb(i);
		}
		
		vector<int> who, bad;
		forn(i, 3){
			delta[i] = k - cnt[i];
			if(delta[i] > 0) who.pb(i);
			if(delta[i] < 0) bad.pb(i);
		}
		
		if(sz(who) == 1){
			int ch = who[0];
			if(ch == 0){
				paint(1, ch);
				paint(2, ch);
			} else if(ch == 1){
				paint(0, ch);
				paint(2, ch);
			} else {
				paint(0, ch);
				paint(1, ch);
			}
		} else if(sz(bad) == 1){
			rep(bad[0]);
		}
		
		cout << s << endl;
	}
	return 0;
}
