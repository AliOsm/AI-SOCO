#include <bits/stdc++.h>
using namespace std;
 
int main(){
    ios_base::sync_with_stdio(false);
    cout.tie(NULL);
    cin.tie(NULL);
    int n,k;
    cin >> n >> k;
    int a[n+1];
    queue<int> q;
    for(int i = 1 ; i <= n ; i += 1){
        char b;
        cin >> b;
        if(b == 'R'){
            a[i] = 1;
        }else{
            a[i] = 0;
        }
        if(i > 1 && a[i] == 0 && a[i-1] == 1){
            q.push(i);
        }
    }// 1 = right   0 = left
    int kk = k;
    int sum = 0;
    vector<vector<int>> anss;
    while(q.size() && kk){
        int f = q.size();
        kk -= 1;
        vector<int> vals;
        while(f--){
            int nxt = q.front();
            q.pop();
            vals.push_back(nxt-1);
            sum += 1;
            if(nxt-1 > 1 && a[nxt-2] == 1){
                q.push(nxt-1);
            }
            if(nxt < n && a[nxt+1] == 0){
                q.push(nxt+1);
            }
            a[nxt] = 1-a[nxt];
            a[nxt-1] = 1-a[nxt-1];
        }
        anss.push_back(vals);
    }
    if(anss.size() > k || sum < k || q.size()){
        cout << -1 << '\n';
        return 0;
    }
    int still = k;
    for(int i = 0 ; i < anss.size() ; i += 1){
        int p = 0;
        while(still > anss.size()-i){
            if(p == anss[i].size()){
                break;
            }
            cout << 1 << " " << anss[i][p] << '\n';
            p += 1;
            still -= 1;
        }
        if(anss[i].size()-p == 0){
            continue;
        }
        cout << anss[i].size()-p << " ";
        for(int j = p ; j < anss[i].size() ; j += 1){
            cout << anss[i][j] << " ";
        }cout << '\n';
        still -= 1;
    }
}