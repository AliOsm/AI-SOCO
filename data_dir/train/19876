#include <cstdio>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <set>
#include <map>
#define INT long long
using namespace std;
struct P{ INT a, b, c, id, v1, v2, v3; } s[100001];
INT n, ans, ida, idb;
bool cmp1(P x, P y){
    if( x.v1 == y.v1 ) 
    {
        if( x.a == y.a ) return x.c < y.c;
        return x.a < y.a;
    }
    return x.v1 < y.v1;
}
bool cmp2(P x, P y){
    if( x.v2 == y.v2 ) 
    {
        if( x.b == y.b ) return x.a < y.a;
        return x.b < y.b;
    }
    return x.v2 < y.v2;
}
bool cmp3(P x, P y){
    if( x.v3 == y.v3 ){
        if( x.c == y.c ) return x.b < y.b;
        return x.c < y.c;
    }
    return x.v3 < y.v3;
}
int main()
{
    ios::sync_with_stdio(false);
    cin>>n;
    for(int i = 0 ; i < n ; i++ )
    {
       cin>>s[i].a>>s[i].b>>s[i].c;
       if( s[i].a > s[i].b ) swap(s[i].a, s[i].b);
       if( s[i].b > s[i].c ) swap(s[i].b, s[i].c);
        if( s[i].a > s[i].b ) swap(s[i].a, s[i].b);
       s[i].id = i+1, s[i].v1 = s[i].a*s[i].b, s[i].v2=s[i].b*s[i].c, s[i].v3 = s[i].a*s[i].c;
       if( ans < min(s[i].a, min(s[i].b, s[i].c)) )
            ans = min(s[i].a, min(s[i].b, s[i].c)), ida = i+1;
    }
    sort(s, s+n, cmp1);
    for(int i = 1 ; i < n ; i++ )
    {
        if( s[i].v1 == s[i-1].v1 and s[i].a == s[i-1].a )
        {
            if( ans < min( s[i].c+s[i-1].c, min(s[i].a, s[i].b) ))
                ans =  min( s[i].c+s[i-1].c, min(s[i].a, s[i].b) ), ida = s[i].id, idb = s[i-1].id;
        }
    }
    sort(s, s+n, cmp2);
    for(int i = 1 ; i < n ; i++ )
    {
        if( s[i].v2 == s[i-1].v2 and s[i].b == s[i-1].b )
        {
            if( ans < min( s[i].a+s[i-1].a, min(s[i].c, s[i].b) ))
                ans =  min( s[i].a+s[i-1].a, min(s[i].c, s[i].b) ), ida = s[i].id, idb = s[i-1].id;
        }
    }
    sort(s, s+n, cmp3);
    for(int i = 1 ; i < n ; i++ )
    {
        if( s[i].v3 == s[i-1].v3 and s[i].c == s[i-1].c )
        {
            if( ans < min( s[i].b+s[i-1].b, min(s[i].a, s[i].c) ))
                ans =  min( s[i].b+s[i-1].b, min(s[i].a, s[i].c) ), ida = s[i].id, idb = s[i-1].id;
        }
    }
    if( idb == 0 ) cout<<"1"<<endl<<ida<<endl;
    else cout<<"2"<<endl<<ida<<" "<<idb<<endl;

}