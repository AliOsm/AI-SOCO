#include <bits/stdc++.h>

using namespace std;

int n , m ,lo , hi;
int arr[1005];
int dp[1005][3][1005];

int Sunny_Leone(int p , int prev , int streak)
{
    if(p == n)
    {
        if(streak < lo)
        {
            return 1000000;
        }
        return 0;
    }
    if(dp[p][prev][streak] != -1)
    {
        return dp[p][prev][streak];
    }
    //cout << p << "  " << prev << "  " << streak << endl;
    int ans = 0;
    if(prev == 0)
    {
        ans = min(arr[p]+Sunny_Leone(p+1,1,1),m-arr[p]+Sunny_Leone(p+1,2,1));
        return ans;
    }
    if(streak >= lo && streak < hi)
    {
        if(prev == 1)
        {
            ans = arr[p]+Sunny_Leone(p+1,1,streak+1);
            ans = min(ans,m-arr[p]+Sunny_Leone(p+1,2,1));
        }
        else
        {
            ans =  m-arr[p]+Sunny_Leone(p+1,2,streak+1);
            ans = min(ans,arr[p]+Sunny_Leone(p+1,1,1));
        }
    }
    else if(streak == hi)
    {

        if(prev == 1)
        {
            ans = m-arr[p]+Sunny_Leone(p+1,2,1);
        }
        else
        {
            ans = arr[p]+Sunny_Leone(p+1,1,1);
        }
    }
    else
    {
        if(prev == 1)
        {
            ans = arr[p] ;
        }
        else
        {
            ans = m-arr[p];
        }
        ans =ans + Sunny_Leone(p+1,prev,streak+1);
    }
    return dp[p][prev][streak] = ans;
}

int main()
{
    scanf("%d %d %d %d",&m,&n,&lo,&hi);
    //getchar();
    string str[1005];
    char ss[1005];
    int i , j , k , cnt = 0;
    for(i = 0 ; i < m ; i++)
    {
        scanf("%s",ss);
        str[i] = std::string(ss);
    }
    for(i = 0 ; i < n ; i++)
    {
        cnt = 0;
        for(j = 0 ; j < m ; j++)
        {
            if(str[j][i] == '.')
            {
                cnt++;
            }
        }
        arr[i] = cnt;
    }

    memset(dp,-1,sizeof(dp));
    int ans = Sunny_Leone(0,0,lo);
    printf("%d\n",ans);

    return 0;
}
