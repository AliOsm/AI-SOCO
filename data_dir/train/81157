#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wunused-result"
#pragma GCC diagnostic ignored "-Wmissing-declarations"

#define FINAL_OUT(x) {cout << x << '\n'; exit(0);}

int const mod = 1e9 + 7;

inline void safe_add(int& x, int y)
{
    x += y;
    if (x >= mod)
        x -= mod;
}


int d[500];

int main()
{
//    freopen("in.txt", "r", stdin);
    ios_base::sync_with_stdio(false);


    int n,k;
    cin >> n >> k;
    string s;
    cin >> s;
    int m = s.length();

    int ans = 1;

    for(int i = 0; i < m; ++i)
    {
        char c = s[i];
        int cur = 1;
        for(char r = 'a'; r <= 'z'; ++r)
        {
            if (r != c)
                safe_add(cur, d[r]);
        }
        safe_add(d[c], cur);
        safe_add(ans, cur);
    }

    set<char> used;

    vector<char> sym;

    for(int i = m - 1; i >= 0; --i)
    {
        if (used.find(s[i]) == used.end())
        {
            sym.push_back(s[i]);
            used.insert(s[i]);
        }
    }

    for(char c = 'a'; c < 'a' + k; ++c)
    {
        if (used.find(c) == used.end())
        {
            sym.push_back(c);
            used.insert(c);
        }
    }
    reverse(sym.begin(), sym.end());

    for(int i = 0; i < n; ++i)
    {
        char c = sym[i % k];
        int cur = 1;
        for(char r = 'a'; r <= 'z'; ++r)
        {
            if (r != c)
                safe_add(cur, d[r]);
        }
        safe_add(d[c], cur);
        safe_add(ans, cur);
    }
    cout << ans << endl;
}

