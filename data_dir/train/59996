#include <bits/stdc++.h>

using namespace std;

#define loop(i, n) for(int i = 0;i < int(n);i++)
#define rloop(i, n) for(int i = int(n);i >= 0;i--)
#define range(i, a, b) for(int i = int(a);i <= int(b);i++)
#define SZ(c) int(c.size())
#define ALL(c) c.begin(), c.end()
#define RALL(c) c.rbegin(), c.rend()
#define PI acos(-1)
#define pb push_back
#define mp make_pair
#define fr first
#define sc second
#define sfi1(v) scanf("%d",&v)
#define sfi2(v1, v2) scanf("%d %d",&v1,&v2)
#define sfi3(v1, v2, v3) scanf("%d %d %d",&v1,&v2,&v3)
#define sfll1(v) scanf("%I64d",&v);
#define sfll2(v1, v2) scanf("%I64d %I64d",&v1,&v2)
#define sfll3(v1, v2, v3) scanf("%I64d %I64d %I64d",&v1,&v2,&v3)
#define endl '\n'

typedef vector<long long> vi;
typedef vector<pair<int, int> > vii;
typedef long long ll;
typedef pair<int, int> pii;


int main() {

#ifndef ONLINE_JUDGE
    freopen("in.in", "r", stdin);
    //freopen("out.in", "w", stdout);
#endif
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int n[2];
    vi v[2];
    loop(j, 2) {
        cin >> n[j];
        v[j].resize(n[j]);
        for (long long &x : v[j])cin >> x;
    }

    ll sum[2] = {0};
    vi t[2];
    loop(j, 2) {
        loop(i, n[j]) {
            range(k, i + 1, n[j] - 1) {
                t[j].pb(2 * (v[j][i] + v[j][k]));
            }
        }
        sort(ALL(t[j]));
        loop(i, n[j])sum[j] += v[j][i];
    }

    ll ZERO = abs(sum[0] - sum[1]);
    ll ONE = 1e18;
    loop(a, n[0]) {
        loop(b, n[1]) {
            ONE = min(ONE, abs((sum[0] - v[0][a] + v[1][b]) - (sum[1] + v[0][a] - v[1][b])));
        }
    }

    ll TWO = 1e18;
    loop(k, 2) {
        loop(i, SZ(t[k])) {
            ll cur = sum[k] - sum[k ^ 1] - t[k][i];
            int idx = lower_bound(ALL(t[k ^ 1]), -cur) - t[k ^ 1].begin();
            if (idx < SZ(t[k ^ 1])) {
                TWO = min(TWO, cur + t[k ^ 1][idx]);
            }
        }
    }


    if (ZERO <= ONE && ZERO <= TWO) {
        cout << ZERO << endl;
        cout << 0 << endl;
        return 0;
    }

    if (ONE <= TWO) {
        cout << ONE << endl;
        cout << 1 << endl;
        loop(a, n[0]) {
            loop(b, n[1]) {
                if (ONE == abs((sum[0] - v[0][a] + v[1][b]) - (sum[1] + v[0][a] - v[1][b]))) {
                    cout << a + 1 << " " << b + 1 << endl;
                    return 0;
                }
            }
        }
    }

    cout << TWO << endl;
    cout << 2 << endl;
    loop(k, 2) {
        loop(i, SZ(t[k])) {
            ll cur = sum[k] - sum[k ^ 1] - t[k][i];
            int idx = lower_bound(ALL(t[k ^ 1]), -cur) - t[k ^ 1].begin();
            if (idx < SZ(t[k ^ 1])) {
                if (TWO == cur + t[k ^ 1][idx]) {
                    int Fa = 0, Fb = 0;
                    int Sa = 0, Sb = 0;
                    loop(r, n[k]) {
                        range(rr, r + 1, n[k] - 1) {
                            if (2 * (v[k][r] + v[k][rr]) == t[k][i]) {
                                Fa = r, Fb = rr;
                            }
                        }
                    }

                    loop(r, n[k ^ 1]) {
                        range(rr, r + 1, n[k ^ 1] - 1) {
                            if (2 * (v[k ^ 1][r] + v[k ^ 1][rr]) == t[k ^ 1][idx]) {
                                Sa = r, Sb = rr;
                            }
                        }
                    }

                    if (k)swap(Fa, Sa), swap(Fb, Sb);
                    cout << Fa + 1 << " " << Sa + 1 << endl;
                    cout << Fb + 1 << " " << Sb + 1 << endl;
                    return 0;
                }
            }
        }
    }


    return 0;
}
