#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
#include <unordered_map>
#include <unordered_set>

using namespace std;
void Emsawy(){
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
}
#define V vector
#define MP make_pair
#define all(v)  ((v).begin()), ((v).end())
#define allr(v) ((v).rbegin()), ((v).rend())
#define clr(v, d) memset(v, d, sizeof(v))
#define sf(x) scanf("%d", &x)
#define sf2(x, y) scanf("%d %d", &x, &y)
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define sfll(x) scanf("%I64d", &x)
#define sfll2(x, y) scanf("%I64d %I64d", &x, &y)
#define sfll3(x, y, z) scanf("%I64d %I64d %I64d", &x, &y, &z)
typedef long long ll;
int dx[]{1, -1, 0, 0, 1, -1, 1, -1};
int dy[]{0, 0, 1, -1, 1, -1, -1, 1};
ll suf(ll x) { return (x * (x + 1)) / 2; }
V<V<pair<int, int> > > adj;
const ll mod = 1e9 + 7, oo = 1e9;
int n, m, g[1001][1001], r[1001][1001], c[1001][1001];

int main()
{
	Emsawy();
	while (cin >> n >> m){
		for (int i = 0; i < n; i++){
			for (int j = 0; j < m; j++){
				cin >> g[i][j];
				r[i][j] = g[i][j];
				c[i][j] = g[i][j];
			}
		}
		for (int i = 0; i < n; i++){
			for (int j = 0; j < m; j++){
				if (i - 1 >= 0) r[i][j] |= r[i - 1][j];
				if (j - 1 >= 0) c[i][j] |= c[i][j - 1];
			}
		}
		int ans = 0;
		for (int i = 0; i < n; i++){
			for (int j = 0; j < m; j++){
				if (g[i][j] == 0){
					if (i - 1 >= 0 && r[i - 1][j]) ans++;
					if (j - 1 >= 0 && c[i][j - 1]) ans++;
				}
			}
		}
		clr(r, 0); clr(c, 0);
		for (int i = 0; i < n; i++){
			for (int j = 0; j < m; j++){
				r[i][j] = (g[i][j] == 1);
				c[i][j] = (g[i][j] == 1);
			}
		}
		for (int i = n - 1; i >= 0; i--){
			for (int j = m - 1; j >= 0; j--){
				if (i + 1 < n) r[i][j] |= r[i + 1][j];
				if (j + 1 < m) c[i][j] |= c[i][j + 1];
			}
		}
		for (int i = 0; i < n; i++){
			for (int j = 0; j < m; j++){
				if (g[i][j] == 0){
					if (i + 1 < n  && r[i + 1][j]) ans++;
					if (j + 1 < m  && c[i][j + 1]) ans++;
				}
			}
		}
		cout << ans << endl;
		clr(r, 0); clr(c, 0);
	}
	return 0;
}