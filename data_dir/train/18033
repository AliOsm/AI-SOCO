#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	const int oo = 1e9;
	
	int n;
	cin >> n;
	
	vector<pii> v(4 * n + 1);
	map<int, int> X, Y;
	
	for(int i = 0; i < 4 * n + 1; i++){
		cin >> v[i].first >> v[i].second;
		X[v[i].first]++;
		Y[v[i].second]++;
	}
		
	int L = oo, R = -oo, D = oo, U = -oo;
	
	for(auto &p : X){
		if(p.second >= 2){
			L = min(L, p.first);
			R = max(R, p.first);	
		}
	}
	
	for(auto &p : Y){
		if(p.second >= 2){
			D = min(D, p.first);
			U = max(U, p.first);	
		}
	}
	
	for(auto &p : v){
		int x = p.first;
		int y = p.second;
		
		if(x != L && x != R && y != D && y != U){
			cout << x << " " << y << endl;
			return 0;
		}
		
		if(x == L || x == R){
			if(y >= D && y <= U){
				continue;
			}
			else{
				cout << x << " " << y << endl;
				return 0;
			}
		}
		
		if(y == D || y == U){
			if(x >= L && x <= R){
				continue;
			}
			else{
				cout << x << " " << y << endl;
				return 0;
			}
		}
	}

	return 0;
}

