#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 100 + 7;
const int M = 20 + 1;
const ll INF = 2e18;

ll dp[1 << M];
int p[N];
int x[N], k[N], mask[N];

bool cmp(int a, int b)
{
	return k[a] < k[b];
}

int main()
{
	ios::sync_with_stdio(false);

	int n, m, b;
	cin >> n >> m >> b;
	for (int i=1; i<=n; i++)
	{
		p[i] = i;
		int q;
		cin >> x[i] >> k[i] >> q;
		for (int j=0; j<q; j++)
		{
			int x;
			cin >> x;
			x--;
			mask[i] |= (1 << x);
		}
	}
	iota(p+1, p+1+n, 1);
	sort(p+1, p+1+n, cmp);
	memset(dp, 63, sizeof dp);
	dp[0] = 0;
	ll ans = INF;
	for (int i=1; i<=n; i++)
	{
		for (int j=(1 << m) - 1; j>=0; j--)
			dp[j] = min(dp[j], dp[j & (~mask[p[i]])] + x[p[i]]) + 1LL * (k[p[i]] - k[p[i-1]]) * b;
		ans = min(ans, dp[(1 << m) - 1]);
	}
	cout << (ans == INF ? - 1 : ans) << "\n";
	return 0;
}


