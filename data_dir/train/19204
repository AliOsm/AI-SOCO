#include <bits/stdc++.h>

#define NIL -1
using namespace std;

typedef long long ll ;

long long n , x, y ;
int a[500010] ;
int p[1000010] ;
map < int , set < int >  > M ;
vector < int > pr ;


map < ll , int > dp ;
int f( ll mask )
{
   // cout << mask << endl;
    if ( !mask ) return 0 ;
    //if ( mask == 1 ) return 1;
    if ( dp.find(mask) != dp.end() ) return dp[mask] ;
    int gr[33] = {} ;
    ll tmp ;
    for ( int i = 1 ; i < 33 ; i++ )
    {
        tmp = (mask >> i) | (mask&((1ll<<(i-1))-1)) ;
        if( tmp == mask ) continue ;
        //if ( mask == 1 )
       //     cout << mask << " " << tmp << endl;
        gr[f(tmp)] = 1;
    }
    for ( int i = 0 ; i < 33 ; i++ ) if ( !gr[i] ) return dp[mask] = i ;
}
string g(int n)
{
    string s = "" ;
    while ( n!= 0 )
        s += (n&1? "1" :"0") , n/= 2;
    reverse(s.begin(),s.end()) ;
    return s;
}
int main()
{

    //ios_base::sync_with_stdio(0) ;
    //cin.tie(0) ;
    for ( ll i = 2 ; i < 1000001 ; ++i )
        if ( !p[i] )
    {
        pr.push_back(i) ;
        for ( ll j = i*i ; j < 1000001 ; j +=i )
            p[j] = 1 ;
    }
    scanf("%I64d",&n) ;

    int cnt ;
    ll nu ;
    for ( int i = 0 ; i < n ; i++ )
    {
        scanf("%I64d",&a[i]) ;
        for ( auto num : pr )
        {
            cnt = 0 ;
            nu = 1;
            while ( a[i]%num == 0 ) cnt++,a[i]/= num , nu *= num;
            if ( cnt ) M[num].insert(cnt) ;
        }
        if ( a[i] != 1 )
            M[a[i]].insert(1) ;
    }
    int ans = 0 ;
    ll mask;
    for  ( auto it : M )
    {
        mask = 0 ;
        for ( auto it2 : it.second )
            mask |= (1ll<<(it2-1)) ;
        ans ^= f(mask) ;
    }
    if ( ans  ) cout << "Mojtaba" ;
    else cout << "Arpa";

    return 0;
}
