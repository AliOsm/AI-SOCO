// KALAM

#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
const int MAXN = 100005;
bool has[MAXN],Mark[MAXN];
int deg[MAXN];
int n,m,x,y,ans;
vector< int > a[MAXN];

void dfs(int v,int cats){
	if(Mark[v])return;
	Mark[v] = true;
	if(has[v]){cats++;}
	else{cats = 0;}
	if(cats > m)return;
	if(deg[v] == 1)ans++;
	for(int i = 0;i < a[v].size();i++){
		dfs(a[v][i],cats);
	}
	
	
}

int main(){
	cin >> n >> m;
	for(int i = 0;i < n;i++)scanf("%d",has + i + 1);
	deg[1] = 10;
	for(int i = 1;i < n;i++){
		scanf("%d%d",&x,&y);
		a[x].push_back(y);deg[x]++;
		a[y].push_back(x);deg[y]++;
	}
	
	dfs(1,0);
	cout << ans;
	
	return 0;
}
