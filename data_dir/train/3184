#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int t;
	cin >> t;
	
	while(t--){
		int n, m, a, b;
		cin >> n >> m >> a >> b;
		
		vector<vector<int>> g(n + 1);
		
		for(int i = 0, a, b; i < m; i++){
			cin >> a >> b;
			g[a].push_back(b);
			g[b].push_back(a);
		}
		
		vector<bool> vis(n + 1);
		
		vis[a] = true;
		queue<int> Q;
		Q.push(a);
		
		ll s1 = 0, s2 = 0;
		
		while(!Q.empty()){
			int u = Q.front();Q.pop();
			for(auto &v : g[u]){
				if(!vis[v] && v != b){
					vis[v] = true;
					Q.push(v);
					s1++;
				}
			}
		}
		
		vis = vector<bool>(n + 1);
		Q.push(b);
		vis[b] = true;
		
		while(!Q.empty()){
			int u = Q.front();Q.pop();
			for(auto &v : g[u]){
				if(!vis[v] && v != a){
					vis[v] = true;
					Q.push(v);
					s2++;
				}
			}
		}
		
		s1 = n - 2 - s1;
		s2 = n - 2 - s2;
		
		cout << s1 * s2 << endl;
		
		
	}

	return 0;
}
