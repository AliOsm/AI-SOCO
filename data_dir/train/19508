#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define mod 1000000007LL
#define IN freopen("pieaters.in","r",stdin)
#define OUT freopen("pieaters.out","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 2

using namespace __gnu_pbds;
using namespace std ;

typedef tree< i64, null_type, less<i64>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef pair<i64, i64> pii;

#define INF 2000000000
#define alpha 26

#define maxn 300010
#define LOG 18

priority_queue < i64 > pq ;
pair<i64,i64> a[maxn] ;

int main()
{
    int n ;

    scanf("%d",&n) ;

    for(int i=1 ; i<=n ; i++) scanf("%lld",&a[i].xx) ;
    for(int i=1 ; i<=n ; i++) scanf("%lld",&a[i].yy) ;

    sort( a+1 , a+n+1 ) ;

    a[n+1] = mp(INF,0) ;

    i64 sum = 0 ;

    i64 ans = 0 ;

    for(int i=1 ; i<=n ; i++)
    {
        int l = i  , r = i ;
        while( r+1 <= n && a[r+1].xx == a[r].xx ) r++ ;

        for(int j=l ; j<=r ; j++)
        {
            sum += a[j].yy ;
            pq.push(a[j].yy) ;
        }

        for(int j=a[r].xx+1 ; j<=a[r+1].xx ; j++)
        {
            if( pq.empty() ) break ;
            sum -= pq.top() ;
            pq.pop() ;
            ans += sum ;
        }

        i = r ;

  //      printf("%d %lld\n",i,ans) ;
    }

    printf("%lld\n",ans) ;

    return 0 ;
}
