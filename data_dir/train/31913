#include <iostream>
#include <string>
#include <cstring>
#include <stdio.h>
#include <iomanip>
#include <math.h>
#include <vector>
#include<cctype>
#include<algorithm>
#include<set>
#include<stack>
#include<map>
#include<time.h>
#include<iterator>
#include <deque>
#include <sstream>
#include<queue>
#include<stdlib.h>
#include<bitset> 
#include <utility>
#include<assert.h>
#include<functional>
#include<limits.h>

#define fn(i,n) for(int (i) = 0;(i) < (n);(i)++)
#define f1n(i,n) for(int (i) = 1;(i) <= (n);(i)++)
#define mk(f,s) make_pair((f),(s))

#define defV(dp,e) memset(dp,e,sizeof dp)

#define ri(n) scanf("%d",&n)
#define rl(n) scanf("%lld",&n)
#define rs(s) scanf("%s",s)

#define PI acos(-1.0)

using namespace std;

typedef long long ll;
typedef pair<int, int > pp;

typedef vector<int  > v1;
typedef vector<ll  > vl;
typedef vector<pp  > vpp;
typedef vector<bool  > vb;
typedef vector<char > vc;
typedef vector<v1 > v2;

int const oo = 1e9, bound = 2e6 + 2, mod = oo + 7, N = 4e5 + 2;
ll const OO = 1e18;

map<pp,pp > sph;
int n,a,b,c;
pair<pp,int> rr[N];
int main() {
	//freopen("input.txt", "r", stdin);
	cin>>n;
	fn(i,n){
	   cin>>a>>b>>c;
	   rr[i]={{a,b},c};
	   sph[{min(a,b),max(a,b)}]=max(sph[{min(a,b),max(a,b)}],{c,i});
	   sph[{min(a,c),max(a,c)}]=max(sph[{min(a,c),max(a,c)}],{b,i});
	   sph[{min(c,b),max(c,b)}]=max(sph[{min(c,b),max(c,b)}],{a,i});
	}
	int r=0;
	pp res={0,0};
	fn(i,n){
	    int a=rr[i].first.first,b=rr[i].first.second,c=rr[i].second;
	    pp x=sph[{min(a,b),max(a,b)}],y=sph[{min(a,c),max(a,c)}],z=sph[{min(c,b),max(c,b)}];
	    int r1=min((x.second==i?0:c)+x.first,min(a,b));
	    int r2=min((y.second==i?0:b)+y.first,min(a,c));
	    int r3=min((z.second==i?0:a)+z.first,min(b,c));
	    if(r1>r){
	        r=r1;
	        res={i+1,x.second+1};
	    }
	    if(r2>r){
	        r=r2;
	        res={i+1,y.second+1};	        
	    }
	    if(r3>r){
	        r=r3;
	        res={i+1,z.second+1};	   
	    } 
//	    cout<<r<<' '<<res.first<<' '<<res.second<<endl;
	}
	if(res.second==res.first)cout<<1<<'\n'<<res.first<<endl;
	else cout<<2<<'\n'<<res.first<<' '<<res.second<<endl;
    return 0;
}



