#include <iostream>
using namespace std;

const int MAXN = 2 * 100 * 1000 + 10;
long long arr[MAXN];
pair <long long, int> dp1[MAXN], dp2[MAXN];

int main()
{
	int n, k;
	cin>> n >> k;

	for(int i = 0; i < n; i ++)
	{
		cin>> arr[i];
		if(i != 0)
			arr[i] += arr[i - 1];
	}

	dp1[k - 1].first = arr[k - 1];
	dp1[k - 1].second = 0; 
	for(int i = k; i < n; i ++)
	{
		if(arr[i] - arr[i - k] > dp1[i - 1].first)
		{
			dp1[i].first = arr[i] - arr[i - k];
			dp1[i].second = i - k + 1;
		}
		else
		{
			dp1[i].first = dp1[i - 1].first;
			dp1[i].second = dp1[i - 1].second;
		}
	}	

	dp2[n - k].first = arr[n - 1] - arr[n - k - 1];
	dp2[n - k].second = n - k;
	for(int i = n - k - 1; i > 0; i --)
	{
		if(arr[i + k - 1] - arr[i - 1] >= dp2[i + 1].first)
		{
			dp2[i].first = arr[i + k - 1] - arr[i - 1];
			dp2[i].second = i;
		}
		else
		{
			dp2[i].first = dp2[i + 1].first;
			dp2[i].second = dp2[i + 1].second;
		}
	}

	long long ans = 0;
	int u = -1, v = -1;
	for(int i = k - 1; i < n - k; i ++)
	{
//		cerr<< i << ": " << dp1[i].first << " " << dp2[i + 1].first << endl;
//		cerr<< dp1[i].second << " " << dp2[i + 1].second << endl;
		if(dp1[i].first + dp2[i + 1].first > ans)
		{
			ans = dp1[i].first + dp2[i + 1].first;
			u = dp1[i].second;
			v = dp2[i + 1].second;
		}
	}

//	for(int i = 0; i < n; i ++)
//		cerr<< i << ": " << arr[i] << "; " << dp1[i].first << " " << dp1[i].second << " , " << dp2[i].first << " " << dp2[i].second << endl;

	cout<< u + 1 << " " << v + 1 << endl;


}