#include <bits/stdc++.h>
#define ld long double
using namespace std;

const int MAXN = 5555  , MOD = 1e9 + 7;

int par [ MAXN ] = {} , mark [ MAXN ] = {} ;

int m [ MAXN ] [ MAXN ] = {} , st [ MAXN ] ={}, en [ MAXN ] ={} , tme = 0 ;

vector < int > a [ MAXN ] , vv ;

char s [ MAXN ] ;


void solve()
{
    int n = vv.size();
    while(vv.size()>3)
    {
        if(m[vv[0]][vv[n-2]])
        {
            cout<<vv[0]<<' '<<vv[n-2] << ' '<<vv[n-1] << endl ;
            exit(0);
        }
        n--;
    }
    cout<<vv[0]<<' '<<vv[1]<<' '<<vv[2]<<endl;
    exit(0);
}

void dfs(int u )
{
    if(mark[u])
        return  ;
    mark[u] = 1 ;
    for(auto v : a[u])
    {
        if(mark[v])
        {
            if(mark[v]==1){
                while(v!=u)
                {
                    vv.push_back(u);
                    u = par[u];
                }
                vv.push_back(v);
                reverse(vv.begin(),vv.end());
                return solve();
            }
            continue;
        }

        par[v] = u ;
        dfs(v);
    }
    mark[u]=2;
}

 main() {

    int n ;
    char ch ;
    cin >> n ;

    for(int i = 1 ; i <= n ; i ++ )
    {
        scanf("%s",&s);
        for(int j = 1 ; j <= n ; j ++ )
        {

            ch=s[j-1];
            if(ch=='1')
                a[i].push_back(j);
            m[i][j] = ch - '0';
        }
    }
    for(int i = 1 ; i <= n ; i ++ )
        dfs(i);
    cout<<-1;



 }
