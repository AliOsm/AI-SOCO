#include<bits/stdc++.h>

#define FI(i,a,b) for(int i=(a);i<=(b);i++)
#define FD(i,a,b) for(int i=(a);i>=(b);i--)

#define LL long long

#define mp make_pair
#define fi first
#define se second
#define PII pair<int,int>

using namespace std;

#define mod 1000000007

int n, k, p, real_val[400005];
map<int, int> M;
PII s[200005];

int fact[200005], inv[200005];

int ncr(int a, int b){
	if(b < 0 || b > a) return 0;
	int res = fact[a];
	res = 1LL * res * inv[b] % mod;
	res = 1LL * res * inv[a - b] % mod;
	return res;
}

int po(int a, int b){
	int c = 1, d = a;
	while(b){
		if(b & 1) c = 1LL * c * d % mod;
		d = 1LL * d * d % mod;
		b >>= 1;
	}
	return c;
}

int vin[400005], vout[400005];

int cur = 0;

int main(){
	fact[0] = inv[0] = 1;
	FI(i, 1, 200000){
		fact[i] = 1LL * fact[i-1] * i % mod;
		inv[i] = po(fact[i], mod - 2);
	}
	
	scanf("%d %d",&n,&k);
	FI(i, 1, n){
		scanf("%d %d",&s[i].fi, &s[i].se);
		if(!M.count(s[i].fi)) M[s[i].fi] = 1;
		if(!M.count(s[i].se)) M[s[i].se] = 1;
	}
	for(map<int, int>::iterator it = M.begin(); it != M.end(); it++){
		int cur = (*it).fi;
		M[cur] = ++p;
		real_val[p] = cur;
	}
	FI(i, 1, n){
		s[i].fi = M[s[i].fi];
		s[i].se = M[s[i].se];
	}
	
	//L bounds
	FI(i, 1, p) vin[i] = vout[i] = 0;
	FI(i, 1, n){
		vin[s[i].fi] ++;
		vout[s[i].se] ++;
	}
	
	LL ans = 0;
	
	FI(i, 1, p){
		while(vin[i]){
			ans = (ans - 1LL * (real_val[i] - 1) * ncr(cur, k - 1) % mod) % mod;
			vin[i]--;
			cur++;
	//		printf("%d: %d\n", i, cur);
		}
		cur -= vout[i];
	}
	
	//R bounds
	FI(i, 1, p) vin[i] = vout[i] = 0;
	FI(i, 1, n){
		vin[s[i].fi] ++;
		vout[s[i].se] ++;
	}
	
	FD(i, p, 1){
		while(vout[i]){
			ans = (ans + 1LL * real_val[i] * ncr(cur, k - 1) % mod) % mod;
			vout[i]--;
			cur++;
		}
		cur -= vin[i];
	}
	printf("%lld\n", (ans + mod) % mod);
	return 0;
}