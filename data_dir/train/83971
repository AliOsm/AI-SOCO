#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstring>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <utility>
#include <cassert>
using namespace std;
#define REP(I,N) for (I=0;I<N;I++)
#define rREP(I,N) for (I=N-1;I>=0;I--)
#define rep(I,S,N) for (I=S;I<N;I++)
#define rrep(I,S,N) for (I=N-1;I>=S;I--)
#define FOR(I,S,N) for (I=S;I<=N;I++)
#define rFOR(I,S,N) for (I=N;I>=S;I--)
#define dbg(x) cout <<#x<<" = "<<x<<" ;  "
#define dbgln(x) cout <<#x<<" = "<<x<<endl
typedef unsigned long long ULL;
typedef long long LL;
const int INF=0x3f3f3f3f;
const LL INFF=0x3f3f3f3f3f3f3f3fll;
const LL M=1e9+7;
const LL maxn=2e6+7;
const double eps=0.00000001;
LL gcd(LL a, LL b) {return b?gcd(b,a%b):a;}
template<typename T>inline T abs(T a) {return a>0?a:-a;}
template<typename T>inline T powMM(T a, T b) {
	T ret=1;
	for (; b; b>>=1ll,a=(LL)a*a%M)
		if (b&1) ret=(LL)ret*a%M;
	return ret;
}

int n;
int A[maxn];
set<int> MP;
bool mark[maxn];
bool isbetter;
int main() {
	int i,j;
    FOR(i,2,2000000) MP.insert(i);
	scanf("%d",&n);
    FOR(i,1,n) scanf("%d",&A[i]);
    FOR(i,1,n){
        if (isbetter) A[i]=*(MP.begin());
        else{
            int T=*(MP.lower_bound(A[i]));
            if (T!=A[i]) isbetter=1,A[i]=T;
        }int T=A[i];
        for (int v=2;v*v<=T;v++) if (T%v==0&&!mark[v]){
            for (int j=v;j<=2000000;j+=v) if (!mark[j]){
                MP.erase(j);mark[j]=1;
            }while (T%v==0) T/=v;
        }if (T!=1&&!mark[T]){
            int v=T;
            for (int j=v;j<=2000000;j+=v) if (!mark[j]){
                MP.erase(j);mark[j]=1;
            }
        }
    }FOR(i,1,n) printf("%d ",A[i]);
	return 0;
}
/*
*/
