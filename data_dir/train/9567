#include <bits/stdc++.h>

using namespace std;

const int INF = 1e9 + 7;

#define pb push_back

map < vector <int>, vector <int> > mp;
queue <vector <int> > q;
vector <int> v;
int main() {
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    int n, a, b, i = 0;
    cin >> n >> a >> b;
    vector <int> x(n);
    for (i = 0; i < n; i++) {
        cin >> x[i];
        x[i]++;
    }
    while (x[0] > 0) {
        x[0] = max(x[0] - b, 0);
        x[1] = max(x[1] - a, 0);
        x[2] = max(x[2] - b, 0);
        v.pb(2);
    }
    while (x[n - 1] > 0) {
        x[n - 1] = max(x[n - 1] - b, 0);
        x[n - 2] = max(x[n - 2] - a, 0);
        x[n - 3] = max(x[n - 3] - b, 0);
        v.pb(n - 1);
    }
    q.push(x);
    mp[x] = v;
    while (!q.empty()) {
        vector <int> v1 = q.front();
        q.pop();
        for (int i = 1; i < n - 1; i++) {
            vector <int> p = v1;
            p[i] = max(p[i] - a, 0);
            p[i - 1] = max(p[i - 1] - b, 0);
            p[i + 1] = max(p[i + 1] - b, 0);
            vector <int> ans = mp[v1];
            ans.pb(i + 1);
            if (mp[p].size() == 0) {
                mp[p] = ans;
                q.push(p);

            }
            if (mp[p].size() > ans.size()) q.push(p);


        }
    }
    vector <int> nul(n, 0);
    v = mp[nul];
    cout << v.size() << endl;
    for (i = 0; i < v.size(); i++)
        cout << v[i] << " ";
}
