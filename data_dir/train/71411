#pragma optimize("Ofast")

#include<bits/stdc++.h>

using namespace std;

using ll = long long int;
using ull = unsigned long long int;
using dd = double;
using ldd = long double;
using si = short int;
using pii = pair<int, int>;
using pll = pair<ll, ll>;

ll get_seed(string s)
{
    ll ans = 0;
    for (int i = 0; i < s.size(); ++i)
        ans += s[i];
    return ans;
}

#define all(x) (x).begin(), (x).end()
#define ff first
#define ss second

// debug defines
#ifdef HOME
    int jjj;
    #define PO cout << "Pomelo" << endl;
    #define OL cout << "Oliva" << endl;
    #define debug(x) cout << #x << " " << x << endl;
    #define debug_p(x) cout << #x << " " << x.ff << " " << x.ss << endl;
    #define debug_v(x) cout << #x << " "; for (auto ii : x) cout << ii << " "; cout << endl;
    #define debug_vp(x) cout << #x << " "; for (auto ii : x) cout << '[' << ii.ff << " " << ii.ss << ']'; cout << endl;
    #define wait() cin >> jjj;
#else
    #define PO 0
    #define OL 0
    #define debug(x) 0
    #define debug_p(x) 0
    #define debug_vp(x) 0
    #define debug_v(x) 0
    #define debug_vp(x) 0
    #define wait() 0
#endif // HOME
// end of debug defines

ll cnt(ll n, ll b)
{
    ll c = 1;
    ll ans = 0;
    while (n / c >= b)
    {
        c *= b;
        ans += n / c;
    }
    return ans;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cout.tie(0);
    cin.tie(0);

    ll n, b;
    cin >> n >> b;
    map<ll, ll> need;
    for (ll i = 2; i * i <= b; ++i)
    {
        while (b % i == 0)
        {
            b /= i;
            need[i]++;
        }
    }
    if (b != 1)
        need[b]++;
    debug_vp(need);
    ll ans = 1e18;
    for (auto j : need)
    {
        ans = min(ans, cnt(n, j.ff) / j.ss);
    }
    cout << ans;

    return 0;
}

