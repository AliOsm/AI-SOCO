#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const int N=18;
ld dp[1<<N];
ld a[N][N];
bool vis[1<<N];
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    cout<<fixed<<setprecision(7);
    int n;
    cin>>n;
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            cin>>a[i][j];
    dp[(1<<n)-1]=1;
    queue<int>Q;
    Q.push((1<<n)-1);
    while(!Q.empty())
    {
        int mask=Q.front();
        Q.pop();
        if(vis[mask]) continue;
        vis[mask]=1;
        int t=mask,C=0;
        while(t)
        {
            if(t&1) C++;
            t>>=1;
        }
        C=(C*(C-1))/2;
        for(int i=0;i<n;i++)
            for(int j=0;j<n;j++)
                if( ((mask>>i)&1) &&   ((mask>>j)&1) &&i!=j )
                {
                    int nw = mask ^ (1<<j);
                    dp[nw]+=dp[mask] * a[i][j] * (ld)1/C;
                    Q.push(nw);
                }
    }
    for(int i=0;i<n;i++)
    {
        cout<<dp[1<<i]<<" ";
    }
    cout<<endl;
    return 0;
}
