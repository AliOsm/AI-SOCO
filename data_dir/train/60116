//satyaki3794
#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <cassert>
#include <cstring>
#include <cmath>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)

using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;

ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}



int n;
int arr[4002], ps[4002], DP1[4002][63][63], DP2[4002][63][63];
bool done1[4002][63][63], done2[4002][63][63];

int dp1(int, int, int);
int dp2(int, int, int);


int dp1(int l, int diff, int last){

    int r = n - ((l-1) + diff);
    if(r < l || l+last-1 > r)   return 0;
    if(done1[l][diff][last])    return DP1[l][diff][last];

    int ans = -MOD;
    if(l+last-1 <= r)
        ans = max(ans, (ps[l+last-1]-ps[l-1]) + dp2(l+last, last-diff, last));
    if(l+(last+1)-1 <= r)
        ans = max(ans, (ps[l+last]-ps[l-1]) + dp2(l+last+1, last+1-diff, last+1));

// cout<<"dp1 "<<l<<" "<<diff<<" "<<last<<", r = "<<r<<" returns "<<ans<<endl;


    done1[l][diff][last] = true;
    return DP1[l][diff][last] = ans;
}


int dp2(int l, int diff, int last){

    int r = n - ((l-1) - diff);

    if(r < l || l+last-1 > r)   return 0;
    if(done2[l][diff][last])    return DP2[l][diff][last];

    int ans = MOD;
    if(r-last+1 >= l)
        ans = min(ans, -(ps[r]-ps[r-last]) + dp1(l, last-diff, last));
    if(r-(last+1)+1 >= l)
        ans = min(ans, -(ps[r]-ps[r-(last+1)]) + dp1(l, last+1-diff, last+1));

// cout<<"dp2 "<<l<<" "<<diff<<" "<<last<<", r = "<<r<<" returns "<<ans<<endl;


    done2[l][diff][last] = true;
    return DP2[l][diff][last] = ans;
}




int main(){

    // ios_base::sync_with_stdio(0);
    // freopen("input.txt", "r", stdin);

    //DP[left][diff][last]
    //diff = number of papers taken by both players, for Igor it is zhenya-igor and opposite for zhenya
    //both diff and last are at most sqrt(N)

    scanf("%d", &n);
    for(int i=1;i<=n;i++){
        scanf("%d", &arr[i]);
        ps[i] = ps[i-1] + arr[i];
    }

    printf("%d\n", dp1(1, 0, 1));
    return 0;
}




