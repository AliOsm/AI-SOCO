
#include<bits/stdc++.h>


using namespace std;

using ll   = long long;
using ii   = pair   < int , int >;
using i3   = pair   < int , ii  >;
using li   = pair   < ll  , int >;
using lii  = pair   < ll  , ii  >;
using pll  = pair   < ll  , ll  >;
using vi   = vector < int       >;
using vl   = vector < ll        >;
using vii  = vector < ii        >;
using vpll = vector < pll       >;
using vi3  = vector < i3        >;
using vlii = vector < lii       >;


const int N = 2e5 + 5;
const ll INF = 1e17 + 7;
const double eps = 1e-9 , PI = acos(-1);



int n , m;
vi v;

ll get(int mid , int r , int l){
    ll res = 0;
    for(int i = l ; i <= r ; i ++){
            res += abs(v[i] - mid);
    }
    return res;
}

ll calc(int x){

    if(x == 1)return INF;
    ll curr = 0;
    for(int i = 1 ; i < v.size() ; i += x){
            int mid = v[(i + i + x - 1) / 2];

            curr += get(mid , i + x - 1 , i);
    }

    return curr;
}

void solve(int testCase){

    scanf("%d" , &n);


    v.push_back(0);
    for(int i = 1 ; i <= n ; i ++){
            int x; scanf("%d" , &x);
            if(x){
                    v.push_back(i);
            }
    }

    int all = v.size() - 1;

    ll ans = INF;
    for(int i = 1 ; i*i <= all ; i ++){
            if(all%i == 0){
                    ans = min(ans , min(calc(i) , calc(all / i)));
            }
    }

    printf("%lld\n" , ans == INF ? -1 : ans);
}

main(){

    int t = 1;
    // scanf("%d" , &t);

    for(int testCase = 1 ; testCase <= t ; testCase ++){
            solve(testCase);
    }

    return 0;
}
