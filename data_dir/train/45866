/* ****GT_18**** */
//Motivational Source->FUHPD

#include<bits/stdc++.h>
#define	MIN(a,b,c)	min(min(a,b),c)
#define	MAX(a,b,c)	max(max(a,b),c)
#define ll          long long
#define itr         vector<ll int>::iterator
#define pb          push_back
#define mp          make_pair
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define endl        '\n'
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
using namespace std;
ll n,m,k;
vi a;
ll ans[5005][5005];
ll dp(ll i,ll left)
{
	if(left==0) return 0;
	if(i>=n-m+1) return (left?-hell:0);
	if(ans[i][left]!=-1) return ans[i][left];
	ll ans1=dp(i+1,left);
	ll ans2;
	if(!i) ans2=dp(i+m,left-1)+a[i+m-1];
	else ans2=dp(i+m,left-1)+a[i+m-1]-a[i-1];
	return ans[i][left]=max(ans1,ans2);
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		cin>>n>>m>>k;
		a.resize(n);
		rep(i,0,n)
		cin>>a[i];
		rep(i,1,n)
		a[i]+=a[i-1];
		memset(ans,-1,sizeof ans);
		cout<<dp(0,k);
	}
	return 0;
}
