#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> PI;
int n;
char str[100010];
vector<int> food,P;
inline bool check(int d){
	int idx=0,idx2=0;
	while(idx<(int)food.size() && idx2<(int)P.size()){
		int Left=max(P[idx2]-d,min(food[idx],P[idx2]));
		int Right=min(n,max(P[idx2]+d-2*(P[idx2]-Left),P[idx2]));
		Right=max(Right,min(n,max(P[idx2]+(d-(P[idx2]-Left))/2,P[idx2])));
		if(Left>food[idx]) return false;
		while(idx<(int)food.size() && Left<=food[idx] && food[idx]<=Right) idx++;
		idx2++;
	}
	return idx>=(int)food.size();
}
int main(){
	scanf("%d%s",&n,str+1);
	for(int i=1;i<=n;i++){
		if(str[i]=='*') food.push_back(i);
		else if(str[i]=='P') P.push_back(i);
	}
	int l=0,r=3*n;
	while(l!=r){
		int mid=(l+r)>>1;
		if(check(mid)) r=mid;
		else l=mid+1;
	}
	printf("%d\n",l);
	return 0;
}