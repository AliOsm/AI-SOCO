#include <bits/stdc++.h>

#define fto(i, x, y) for(int i = (x); i <= (y); ++i)
#define fdto(i, x, y) for(int i = (x); i >= (y); --i)
#define ftoa(i, x, y, a) for(int i = (x); i <= (y); i += a)
#define ftoit(it, var) for (__typeof(var.begin()) it = var.begin(); it != var.end(); ++it)

#define ii pair<ll, ll>
#define mp make_pair
#define FF first
#define SS second

#define vi vector<int>
#define vii vector<ii>
#define ll long long
#define vll vector<ll>

#define eb emplace_back
#define ef emplace_front
#define lb lower_bound
#define ub upper_bound

#define oo 1000000007
#define OO 1000000000000000007LL

using namespace std;

#define Pro "tmp"
#define maxN 100007

vi adj[maxN];
int child[maxN];

int isCentroid[maxN];

void DFS(int u, int p) {
    child[u] = 1;
    fto (i, 0, (int)adj[u].size()-1) {
        int v = adj[u][i];
        if (v == p || isCentroid[v]) continue;
        DFS(v, u);
        child[u] += child[v];
    }
    return;
}

void findCentroid(int u, int p, int sz, int num_centroid) {
    int sum = 0;
    int mx = 0;

    if (sz == 1) {
        isCentroid[u]  = num_centroid;
        return;
    }

    fto (i, 0, (int)adj[u].size()-1) {
        int v = adj[u][i];
        if (isCentroid[v] || v == p) continue;
        sum += child[v];
        mx = max(mx, child[v]);
    }

    mx = max(mx, sz-sum-1);
    if (mx <= sz/2) {
        isCentroid[u] = num_centroid;
        fto (i, 0, (int)adj[u].size()-1) {
            int v = adj[u][i];
            if (isCentroid[v] || v == p) continue;
            DFS(v, u);
            findCentroid(v, u, child[v], num_centroid+1);
        }
        if (p > 0 && !isCentroid[p]) {
            DFS(p, u);
            findCentroid(p, u, sz-sum-1, num_centroid+1);
        }
    }
    else {
        fto (i, 0, (int)adj[u].size()-1) {
            int v = adj[u][i];
            if (isCentroid[v] || v == p) continue;
            findCentroid(v, u, sz, num_centroid);
        }
    }

    return;
}

int main() {
    #ifndef ONLINE_JUDGE
        freopen(Pro".inp", "r", stdin);
        freopen(Pro".out", "w", stdout);
    #endif // ONLINE_JUDGE

    int n;
    scanf("%d", &n);

    fto (i, 1, n-1) {
        int u, v;
        scanf("%d%d", &u, &v);
        adj[u].eb(v);
        adj[v].eb(u);
    }

    DFS(1, -1);
    findCentroid(1, -1, n, 1);

    fto (i, 1, n) printf("%c ", isCentroid[i]+'A'-1);
    return 0;
}

