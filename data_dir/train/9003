#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define Fit(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcountll(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef double ld;
#define eps 1e-9
typedef pair<int, int> II;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI 2 * acos(0)

#define maxn 200005

int n, m;
vector<int> V[maxn], V1[maxn];
int f[maxn], num[maxn], q[maxn], ss, que[maxn], size;
bool flag[maxn], color[maxn];
bool ok;

void go(int u){
    f[u] = 1;
    color[u] = 1;
    Rep(i, sz(V[u])){
        int v = V[u][i];
        if(color[v]) ok = false;
        else if(!f[v]){
            go(v);
        }
    }
    color[u] = 0;
}

int main()
{
//    freopen("in.txt", "r", stdin);
//    freopen("out.txt", "w", stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n >> m;
    ms(num, 0); ms(flag, 0); ms(f, 0); ms(color, 0);
    Rep(run, m){
        int u, v;
        cin >> u >> v;
        V[u].pb(v);
        V1[v].pb(u);
        num[v]++;
    }

    int res = 0;
    For(run, 1, n) if(!flag[run]){
        ss = 0;
        q[ss++] = run;
        flag[run] = 1;
        Rep(i, ss){
            int u = q[i];
            Rep(j, sz(V[u])){
                int v = V[u][j];
                if(!flag[v]){
                    flag[v] = 1;
                    q[ss++] = v;
                }
            }
            Rep(j, sz(V1[u])){
                int v = V1[u][j];
                if(!flag[v]){
                    flag[v] = 1;
                    q[ss++] = v;
                }
            }
        }
        ok = true;
        size = 0;
        Rep(i, ss){
            int u = q[i];
            if(!f[u]){
                go(u);
            }
        }
        res += ss - ok;
    }
    cout << res << endl;

    return 0;
}
