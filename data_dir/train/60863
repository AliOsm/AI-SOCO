#include <iostream>
#include <stack>
#include <set>
#include <vector>
#include <algorithm>
#include <queue>
#include <cstdio>
#include <cstring>
#include <string>
#include <map>

#define inf (1 << 30)
#define INF (1<<45LL)
#define pb push_back
#define mp make_pair
using namespace std;

typedef pair<int, int> pi;
typedef long long ll;

/*
 * 
 *      PUCMM PROGRAMMING FORCE
 * 
 * */


vector<pi> E[200];
bool visited[200];
int dist[200];

void dfs(int n, int color, int height){
    
    dist[n] = height;
    visited[n] = true;
    
    for(int i=0; i < E[n].size(); i++){
        int c = E[n][i].second;
        int v = E[n][i].first;
        
        if(visited[v]) continue;
        if(c != color) continue;
        
        dfs(v,  c, height+1);
    }
}
int main(){

    ios_base::sync_with_stdio(false);
    int n, m;
    
    while(cin >> n >> m){
        
        for(int i=0; i <= n; i++) E[i].clear();
        
        for(int i=0; i < m; i++){
            int s, d, c; cin >> s >> d >> c;
            E[s].pb(mp(d,c));
            E[d].pb(mp(s,c));
        }
        
        int q; cin >> q;
        
        for(int i=0; i < q; i++){
            int s, d; cin >> s >> d;
            
            int ans = 0;
            for(int j=1; j <= m; j++){
                memset(dist, -1, sizeof dist);
                memset(visited, false, sizeof visited);
                dfs(s, j, 0);
                if(dist[d] != -1) ans++;
            }
            cout << ans << endl;
        }
    }
    return 0;
}
