#pragma GCC optimize(2)
#pragma GCC optimize(3)
#pragma GCC optimize(4)
#include<bits/stdc++.h>
using namespace std;
#define y1 y11
#define fi first
#define se second
#define pi acos(-1.0)
#define LL long long
//#define mp make_pair
#define pb push_back
#define ls rt<<1, l, m
#define rs rt<<1|1, m+1, r
#define ULL unsigned LL
#define pll pair<LL, LL>
#define pli pair<LL, int>
#define pii pair<int, int>
#define piii pair<pii, int>
#define pdd pair<double, double>
#define mem(a, b) memset(a, b, sizeof(a))
#define debug(x) cerr << #x << " = " << x << "\n";
#define fio ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
//head

const int N = 2e5 + 10;
int T, n;
struct Node{
    int m, p;
    bool operator < (const Node & rhs) const {
        if(m == rhs.m) return p > rhs.p;
        else return m < rhs.m;
    }
}a[N];
int pre[N];
multiset<int> s;
int main() {
    scanf("%d", &T);
    while(T--) {
        scanf("%d", &n);
        for (int i = 1; i <= n; ++i) scanf("%d %d", &a[i].m, &a[i].p);
        sort(a+1, a+1+n);
        int now = 0;
        LL ans = 0;
        pre[1] = 0;
        for (int i = 2; i <= n; ++i) {
            if(a[i].m == a[i-1].m) pre[i] = pre[i-1];
            else pre[i] = i-1;
        }
        s.clear();
        for (int i = n; i >= 1; --i) {
            s.insert(a[i].p);
            if(pre[i]+now >= a[i].m) ;
            else {
                ++now;
                ans += *s.begin();
                s.erase(s.begin());
            }
        }
        printf("%lld\n", ans);
    }
    return 0;
}
