#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOR(i, a, b) for (int i = a; i < int(b); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define ll long long
#define pii pair<int, int>

ll a, b;
int k;

int gcd(int a, int b) {
	if(b == 0) return a;
	else return gcd(b, a%b);
}

int mcm(int a, int b) {
	return a*(b/gcd(a, b));
}

const int MAX = 1001000;
int L;
ll dp[MAX];

void init() {
	dp[0] = 0ll;
	for(int i = 1; i <= L; i++) {
		dp[i] = dp[i - 1];
		for(int j = 2; j <= k; j++)
			dp[i] = min(dp[i], dp[i - i%j]);
		dp[i]++;
	}
}

ll length() {
	ll mL = (ll)L;
	ll l = a/mL + (a%mL == 0 ? 0ll : 1ll), r = b/mL;
	return r - l;
}

int visited;

ll solve() {
	if(a%L == 0 || a == b) return 0ll;
	dp[a - a] = 0;
	for(ll i = a + 1; ; i++) {
		dp[i - a] = dp[i - a - 1];
		for(ll j = 2; j <= k; j++) {
			ll aux = i - i%j;
			if(aux >= a) dp[i - a] = min(dp[i - a], dp[aux - a]);
		}
		dp[i - a]++;
		if(i%L == 0 || i == b) return dp[i - a];
	}
}


int main() {
	scanf("%lld %lld %d", &b, &a, &k);
	L = 1;
	for(int i = 2; i <= k; i++) L = mcm(L, i);
	//printf("%d\n", L);
	init();
	ll ans1 = 0, ans2 = (length() >= 0 ? length()*dp[L] : 0), ans3 = (length() >= 0 ? dp[b%L] : 0);

	ans1 = solve();
	printf("%lld\n", ans1 + ans2 + ans3);
	
	
}