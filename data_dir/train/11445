#include <bits/stdc++.h>
using namespace std;
int arr[100005];
int prefixsum[100005];
int lastChange[100005];
struct query
{
    int typeOfQuery, Place, Val,curPlace;
};
int main()
{
    int n,m;
    cin >> n >> m;
    for(int i = 1;i <= n;i++)
        scanf("%d",&arr[i]);
    vector<query> myQ(m);
    for(int i = 0;i < m;i++)
    {
        int type,Pl,v;
        scanf("%d",&type);
        myQ[i].typeOfQuery = type;
        myQ[i].curPlace = i+1;
        if(type == 2 || type == 3)
        {
            scanf("%d",&v);
            myQ[i].Val = v;
        } else {
            scanf("%d %d",&Pl,&v);
            myQ[i].Place = Pl;
            myQ[i].Val = v;
        }
        if(type == 2)
            prefixsum[i+1] += v;
    }
    for(int i = 1;i <= m;i++)
        prefixsum[i] += prefixsum[i-1];
    for(int i = 0;i < m;i++)
    {
        if(myQ[i].typeOfQuery == 1)
        {
            arr[myQ[i].Place] = myQ[i].Val;
            lastChange[myQ[i].Place] = myQ[i].curPlace;
            continue;
        } else if(myQ[i].typeOfQuery == 3)
        {
            printf("%d\n",arr[myQ[i].Val] + prefixsum[myQ[i].curPlace] - prefixsum[lastChange[myQ[i].Val]]);
        }
    }
    return 0;
}

