#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef pair<int, int> pi;


int main() {
  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
  string s, t;
  cin >> s >> t;
  for (int i = 0; i < int(s.size()); ++i) if (s[i] == 'C') s[i] = 'B';
  for (int i = 0; i < int(t.size()); ++i) if (t[i] == 'C') t[i] = 'B';
  
  vector<int> as(s.size(), 1), at(t.size(), 1), bs(s.size()+1, 0), bt(t.size()+1, 0);
  
  
  for (int i = 0; i < int(s.size()); ++i){
    if (i != 0) as[i] = as[i-1]+1;
    if (s[i] != 'A') as[i] = 0;
  }
  for (int i = 0; i < int(t.size()); ++i){
    if (i != 0) at[i] = at[i-1]+1;
    if (t[i] != 'A') at[i] = 0;
  }
  
  for (int i = 0; i < int(s.size()); ++i) bs[i+1] = bs[i]+(s[i] == 'B');
  for (int i = 0; i < int(t.size()); ++i) bt[i+1] = bt[i]+(t[i] == 'B');
  
  int q;
  cin >> q;
  for (int i =0; i < q; ++i){
    int a, b, c, d;
    cin >> a >> b >> c >> d;--a;--b;--c;--d;
    int qbo = bs[b+1]-bs[a], qbf = bt[d+1]-bt[c];
    int lao = min(as[b], b-a+1) , laf = min(at[d], d-c+1);
    
    //cerr << "hey" << endl;
    //cerr << a << " " << b << " " << c << " "  << d << endl;
   // cerr << qbo << " " << qbf <<  " "  << lao << " " << laf << endl;
    if (qbo % 2 != qbf % 2 or qbo > qbf or laf > lao){
      cout << 0;
      continue;
    }
    if (qbo == 0 and qbf > 0){
      if (laf == lao) cout << 0;
      else cout << 1;
      continue;
    }
    if (laf%3 == lao%3){
      cout << 1;  
      continue;
    }
    if (qbo + 2 <= qbf){
      cout << 1;
    }
    else cout << 0;
  }
  cout << endl;
  return 0;
}

