#include <bits/stdc++.h>
#include <ext/numeric> // header file that contains power, but it's not standard, it works only in GNU Compilers
using namespace std;
using namespace __gnu_cxx;

int cnt[10];
bool digits[10];

vector<int> solve(int n) {
    memset(cnt, 0, sizeof cnt);
    for (int i = 0; i > -1 && n > 0; i++) {
        cnt[i] = n % 10;
        n /= 10;
    }
    vector<int> ans;
    while (true) {
        memset(digits, false, sizeof digits);
        int minCount = 10;
        for (int i = 0; i < 10; i++) {
            if (cnt[i] != 0) {
                minCount = min(minCount, cnt[i]);
                digits[i] = true;
            }
        }
        if (minCount == 10)
            break;
        int number = 0;
        for (int i = 0; i < 10; i++) {
            if (digits[i]) {
                number += power(10, i); // function power works in O(log n)
            }
        }
        for (int i = 0; i < minCount; i++) {
            ans.push_back(number);
        }
        for (int i = 0; i < 10; i++) {
            if (digits[i])
                cnt[i] -= minCount;
        }
    }
    return ans;
}

int main() {
    int n;
    scanf("%d", &n);
    vector<int> ans = solve(n);
    printf("%d\n", ans.size());
    for (int i = 0; i < ans.size(); i++) {
        if (i > 0)
            printf(" ");
        printf("%d", ans[i]);
    }
    printf("\n");
    return 0;
}
