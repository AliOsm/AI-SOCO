#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll int
#define ld long double
#define pp pair<ll,ll>
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define present(c,x) ((c).find(x) != (c).end())
#define mp make_pair
#define hell 1000000007
#define F first
#define S second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree<pp , null_type , less<pp> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t=1;
void solve()
{
    ll dp[123][123] ;
    memset(dp,0,sizeof(dp));
    ll n ;
    cin >> n ;
    vector<string> v(n) ;
    rep( i , 0 , n ){
        cin >> v[i] ;
        ll s = v[i][0] , e = v[i][sz(v[i])-1] ;
        ll len = sz(v[i]);
        for( ll i = 'a' ; i <= 'z' ; i++ )
        {
            //cout<< "start = " << (char)(i) << " mid = " << (char)(s) << " end = " << (char)(e) << "\n";
            if(dp[i][s]!=0)
                dp[i][e] = max(dp[i][e],dp[i][s]+len);
        }
        dp[s][e]=max(dp[s][e],len);
    }
    ll ans = 0 ;
    for(ll i = 'a' ; i <= 'z' ; i++ )
        ans = max(ans,dp[i][i]);
    cout<<ans;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
