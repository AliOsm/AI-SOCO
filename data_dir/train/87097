#include <bits/stdc++.h>
using namespace std;
#define read            freopen("C:\\Users\\Dell\\Desktop\\in.txt", "r", stdin)
#define write           freopen("C:\\Users\\Dell\\Desktop\\in.txt", "w", stdout)
#define pii             pair<int , int >
#define inf             INT_MAX/3
#define in(a)           scanf("%d", &a)
#define ins(a)          scanf("%s", a)
#define in2(a, b)       scanf("%d%d", &a, &b)
#define in3(a, b, c)    scanf("%d%d%d", &a, &b, &c)
#define pn              printf("\n")
#define pr(a)           printf("%d\n", a)
#define prs(a)          printf("%d ", a)
#define pr2(a, b)       printf("%d %d\n", a, b)
#define pr3(a, b, c)    printf("%d %d %d\n", a, b, c)
#define pcs(a)          printf("Case %d: ", a)
#define MP              make_pair
#define vi              vector<int >
#define _ceil(n, a)     ((n)%(a)==0?((n)/(a)):((n)/(a)+1))
#define cl              clear()
#define sz              size()
#define pb              push_back
#define MEM(a, b)       memset((a), (b), sizeof(a))
#define all(X)          (X).begin(), (X).end ()
#define iter(it, X)     for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
#define ext(a)          {printf("%s\n", a); return 0;}
#define oka(x, y)       ((x)>=0&&(x)<row&&(y)>=0&&(y)<col)
#define isvowel(c)      (c=='a' || c=='e' || c=='i' || c=='o' || c=='u' || c=='A' || c=='E' || c=='I' || c=='O' || c=='U')
#define x               first
#define y               second

typedef long long LL;
//int  dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int  dx[]={1,1,0,-1,-1,-1,0,1,0};int dy[]={0,1,1,1,0,-1,-1,-1,0};//8 direction
//int  dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//bool check(int n, int pos) {return (n & (1<<pos))>>pos;} //typecast 1 in case of int
//int  on(int n, int pos) {return n | (1<<pos);} //typecast 1 in case of int
//int  off(int n, int pos) {return n & ~(1<<pos);} //typecast 1 in case of int
//bool operator < (const data &d) const{return cost<d.cost;} //reverse in priority queue

const int M=200005;
map<int, int>last;
string S;
int A[M];
int main()
{
#ifndef ONLINE_JUDGE
    read;
#endif
    ios_base::sync_with_stdio(false);
    int i, j, k, p, q, maxx=-1, cnt=0;

    cin>>S;
    for (i=0; i<S.sz; i++) A[i]=isvowel(S[i])?-1:2;
    for (i=1; i<S.sz; i++) A[i]+=A[i-1];

    for (i=0; i<S.sz; i++)
    {
        if (A[i]>=0) maxx=max(maxx, i+1);
        else
        {
            if (last[A[i]]!=0) maxx=max(maxx, i-last[A[i]]+1);
            if (last[A[i]-1]!=0) maxx=max(maxx, i-last[A[i]-1]+1);
        }

        if (last[A[i]]==0) last[A[i]]=i+1;
    }

    if (maxx==-1) ext("No solution\n");

    if (A[maxx-1]>=0) cnt=1;
    for (i=maxx; i<S.sz; i++) if (A[i]-A[i-maxx]>=0) cnt++;

    pr2(maxx, cnt);

return 0;
}
