#include <iostream>
#include <vector>
#include <algorithm>
#include <memory>
#include <map>
#include <unordered_map>
#include <set>
#include <queue>
#include <unordered_set>
#include <functional>
#include <climits>
#include <cstring>
#include <cmath>
#include <numeric>
#include <random>
#include <tuple>
#include <chrono>

using namespace std;
using ll = long long;
constexpr ll MOD = 1000000007;
constexpr int N = 200001;

ll dp[N][3];

int get(int n, int mod) {
  if (n - mod < 0) return 0;
  return (n - mod) / 3 + 1;
}

int get(int mod, int l, int r) {
  return get(r, mod) - get(l - 1, mod);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  int n, l, r;
  cin >> n >> l >> r;
  dp[0][0] = get(0, l, r) % MOD;
  dp[0][1] = get(1, l, r) % MOD;
  dp[0][2] = get(2, l, r) % MOD;
  for(int i = 1; i < n; ++i) {
    for(int k1 = 0; k1 < 3; ++k1) {
      for(int k2 = 0; k2 < 3; ++k2) {
        dp[i][(k1 + k2) % 3] += (dp[i - 1][k1] * get(k2, l, r) % MOD) % MOD;
        dp[i][(k1 + k2) % 3] %= MOD;
      }
    }
  }
  cout << dp[n - 1][0] << endl;
  return 0;
}
