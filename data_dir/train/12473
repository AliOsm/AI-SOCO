#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
 
using namespace std;
using namespace __gnu_pbds;
 
#define debug(s) cout << #s << " = " << s << endl
#define all(v) (v).begin(), (v).end()
#define mem(a,val) memset(a, val, sizeof a)
 
#define maxn 100010
#define INF 1e15
#define ff first
#define ss second
#define endl '\n'
typedef long long ll;
 
//typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int tc;
  cin >> tc;
  while (tc--) {
    int n;
    cin >> n;
    vector<int> even, odd;
    for (int i = 0; i < n; ++i) {
      int x;
      cin >> x;
      if (x & 1) odd.push_back(i + 1);
      else even.push_back(i + 1);
    }
    if (!even.empty()) cout << 1 << endl << even[0] << endl;
    else {
      if (odd.size() < 2) cout << "-1" << endl;
      else {
        cout << 2 << endl << odd[0] << " " << odd[1] << endl;
      }
    }
  }
}




