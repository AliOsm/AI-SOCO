#include <bits/stdc++.h>

#define ff first
#define ss second
#define pb push_back

using namespace std;
using ll = long long;
using ii = pair<int, int>;

const int N = 3000005;

int h, g;
int a[N];

bool canrem(int x, int p){
	int l = 2*x;
	int r = 2*x+1;
	if(!a[l] && !a[r]) return p > g;
	if(a[l] > a[r]) return canrem(l, p+1);
	return canrem(r, p+1);
}

void rem(int x){
	int l = 2*x;
	int r = 2*x+1;
	if(!a[l] && !a[r]){
		a[x] = 0;
		return;
	}
	if(a[l] > a[r]){
		a[x] = a[l];
		return rem(l);
	}
	a[x] = a[r];
	return rem(r);
}

ll sum(int x){
	if(!a[x]) return 0;
	int l = 2*x;
	int r = l+1;
	return a[x] + sum(l) + sum(r);
}

void show(int x, int p = 0){
	if(a[x] == 0) return;
	for(int i = 0; i < p; i++){
		cerr << " ";
	}
	cerr << a[x] << endl;
	show(2*x, p+1);
	show(2*x+1, p+1);
}

vector<int> ans;

void solve(int at, int p){
	if(!a[at]) return;
	while(p<=g){
		if(canrem(at, p)){
			rem(at);
			ans.pb(at);
		}
		else{
			int l = 2*at;
			int r = 2*at+1;
			solve(l, p+1);
			solve(r, p+1);
			return;
		}
	}
}

int main(){
	int t;
	scanf("%d", &t);
	while(t--){
		ans.clear();
		scanf("%d %d", &h, &g);
		for(int i = 1; i < (1 << h); i++){
			scanf("%d", a+i);
		}
		solve(1, 1);
		printf("%lld\n", sum(1));
		for(int i : ans){
			printf("%d ",i);
		}
		printf("\n");
		for(int i = 1; i < (1 << h); i++){
			a[i] = 0;
		}
	}
	return 0;
}
