//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >

const int maxn=(int)(2e5+5);
const ll mod=(ll)(1e9+7);
int cnt[3];
int dp[3][maxn];

int get(int r,int i)
{
    int add=(r%3>=i)?1:0;

    return (r/3)+add;
}

int add(ll a,ll b)
{
    return (a+b)%mod;
}

int mul(ll a,ll b)
{
    ll ret=(a*b)%mod;

    return ret;
}

int solve(int s,int idx,int n)
{
    if(idx==n)
    {
        return (s==0?1:0);
    }

    if(dp[s][idx]!=-1)
    {
        return dp[s][idx];
    }

    else
    {
        int ret=0;

        for(int i=0;i<3;i++)
        {
            ret=add(ret,mul(cnt[i],solve((s+i)%3,idx+1,n)));
        }

        dp[s][idx]=ret;return ret;

    }
}

int main()
{
    int n,l,r;cin>>n>>l>>r;

    cnt[0]=(r/3)-((l-1)/3);

    cnt[1]=get(r,1)-get(l-1,1);cnt[2]=get(r,2)-get(l-1,2);

   // cout<<cnt[0]<<" "<<cnt[1]<<" "<<cnt[2]<<endl;

    for(int i=0;i<3;i++)
    {
        for(int j=0;j<maxn;j++)
        {
            dp[i][j]=-1;
        }
    }

    int res=solve(0,0,n);

    cout<<res<<endl;

    return 0;
}
