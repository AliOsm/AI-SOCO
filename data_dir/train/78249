#include<bits/stdc++.h>
#include<ext/numeric>
using namespace std;
using namespace __gnu_cxx;

#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v)  (int)v.size()
#define UNVISITED -1
#define CLR(a,v) memset(a,v,sizeof a)
#define PC(x) __builtin_popcnt(x)

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef unsigned int ui;

const double PI = acos(-1.0);

int dx[] = { 0, 0, 1, -1, -1, -1, 1, 1 };
int dy[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

const int MAX = 1005;
int vis[MAX][MAX], visID = 1, num;
char grid[MAX][MAX];
int n, m, ans[MAX][MAX];

bool valid(int x, int y) {
	return x >= 0 && x < n && y >= 0 && y < m;
}

void dfs(int x, int y) {
	vis[x][y] = visID;
	num++;
	for (int i = 0; i < 4; ++i) {
		int nx = x + dx[i], ny = y + dy[i];
		if (valid(nx, ny) && grid[nx][ny] != '*' && vis[nx][ny] != visID)
			dfs(nx, ny);
	}
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
#endif
	scanf("%d%d", &n, &m);
	map<int, int> nConnect;
	for (int i = 0; i < n; ++i)
		scanf("%s", grid[i]);
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < m; ++j)
			if (grid[i][j] == '.' && !vis[i][j]) {
				num = 0;
				dfs(i, j);
				nConnect[visID++] = num;
			}
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < m; ++j) {
			if (grid[i][j] == '*') {
				int x = 1;
				map<int, bool> mp;
				for (int k = 0; k < 4; ++k) {
					int nx = i + dx[k], ny = j + dy[k];
					if (valid(nx, ny))
						if (grid[nx][ny] == '.' && !mp[vis[nx][ny]]) {
							x += nConnect[vis[nx][ny]];
							mp[vis[nx][ny]] = 1;
						}
				}
				ans[i][j] = x;
			}
		}
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < m; ++j)
			if (grid[i][j] == '*')
				printf("%d", ans[i][j] % 10);
			else
				printf(".");
		printf("\n");
	}
}

