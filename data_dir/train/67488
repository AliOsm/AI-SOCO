#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <algorithm>
#include <map>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <iomanip>
#include <queue>
#include <stack>
#include <cassert>
#include <unordered_map>

using namespace std;

typedef long long ll;

bool bad(int x) {
    int log = 1;
    while(log <= x) log <<= 1;
    log >>= 1;
    return (log != x);
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    
    int n;
    cin >> n;
    
    if(n == 1) {
        cout << "1 0\n";
        return 0;
    }
    
    int ans = 1, mx = -1;
    bool found = false;
    for(int i = 2; i * i <= n; ++i) {
        if(n % i == 0) {
            ans *= i;
            int cur = 0;
            while(n % i == 0) {
                n /= i;
                cur++;
            }
            found |= bad(cur);
            if(mx != -1 && mx != cur)
                found = 1;
            mx = max(mx, cur);
        }
    }
    if(n > 1) {
        if(mx != -1 && mx != 1)
            found = 1;
        mx = max(mx, 1);
        ans *= n;
    }
    if(mx == 1) {
        cout << ans << " " << 0 << endl;
        return 0;
    }
    
    int need = found;
    int log = 1;
    while(log < mx) {
        log <<= 1;
    }
    mx = log;
    while(mx > 1) {
        mx >>= 1;
        need++;
    }
    
    cout << ans << " " << need << endl;
}
