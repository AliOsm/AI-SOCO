# pragma GCC optimize("O3")
# include <bits/stdc++.h>
std::pair<int,int> DR[] = {{-1,0},{0,1},{1,0},{0,-1},{-1,1},{-1,-1},{1,1},{1,-1}};
# define ll long long
# define clock (clock() * 1000.0 / CLOCKS_PER_SEC)
# define rc(s) return cout << s,0
# define _ ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
# define db(x) cerr << #x << " = " << x << '\n'
# define pb push_back
# define mp make_pair
# define all(s) s.begin(),s.end()
# define sz(x) (int)((x).size())
//# define int ll
using namespace std;

struct data
{
    int x,nxt[26],fin;
}tpl;

vector<data>vec;
int idx;
int ans;

void addl(string s)
{
    int curr = 0;
    for(auto it : s)
    {
        if(!vec[curr].nxt[it - 'a']) {
            vec[curr].nxt[it - 'a'] = ++idx;
            vec.pb(tpl);
        }
        curr = vec[curr].nxt[it - 'a'];
        vec[curr].x--;
    }
    vec[curr].fin++;
}


void add(string s)
{
    int curr = 0;
    for(auto it : s)
    {
        if(!vec[curr].nxt[it - 'a']) {
            vec[curr].nxt[it - 'a'] = ++idx;
            vec.pb(tpl);
        }
        curr = vec[curr].nxt[it - 'a'];
        vec[curr].x++;
    }
    if(vec[curr].fin) addl(s);
    vec[curr].fin++;
}

int cnt(string s)
{
    int curr = 0;
    int asznee = 0;
    for(auto it : s)
    {
        if(!vec[curr].nxt[it - 'a']){
            for(int i = 0;i < 26;i++)
        {
            if(vec[curr].nxt[i]) return 0;
        }
            return asznee;
        }
        curr = vec[curr].nxt[it - 'a'];
        if(vec[curr].x == 1) asznee++;
    }
    if(vec[curr].x == 1){
        for(int i = 0;i < 26;i++)
        {
            if(vec[curr].nxt[i]) return 0;
        }
    }
    return asznee;
}

int solve(string s)
{
    if(s == "") return 0;
    int x = min(sz(s),sz(s) - cnt(s) + 2);
    add(s);
    return x;
}

int32_t main(){_
    //freopen("input","r",stdin);
    tpl = {};
    vec.pb(tpl);
    string s;
    while(getline(cin,s)){
        string word = "";
        for(int l = 0;l < sz(s);l++)
        {
            auto it = s[l];
            if(it >= 'a' && it <= 'z')
            {
                word += it;
            }
            else
            {
                ans += solve(word);
                ans ++;
                word = "";
            }
        }
        ans += solve(word);
        ans++;
    }
    rc(ans);
}