#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
typedef long long ll;

const int MAXVAL = 200005;
const ll INFTY = 1LL<<60;
int N;
vector<ll> F[MAXVAL];
ll ans[100100];

int main()
{
    ios::sync_with_stdio(0);

    for (int i = 1; i < MAXVAL; i++)
        for (int j = i; j < MAXVAL; j += i)
            F[j].push_back(i);
    
    cin >> N;
    ll prv = 0;
    for (int i = 2, x; i <= N; i += 2)
    {
        cin >> x;
        ll best = INFTY;
        for (int j = 0; j < F[x].size(); j++)
        {
            ll d1 = F[x][j], d2 = x/F[x][j];
            if (d2 < d1)
                break;
            if (d1 % 2 == d2 % 2 && (d2 - d1)/2 > prv)
                best = min(best, (d2 + d1)/2);
        }
        if (best == INFTY)
        {
            cout << "No\n";
            return 0;
        }
        ans[i - 1] = best*best - x - prv*prv;
        ans[i] = x;
        prv = best;
    }

    cout << "Yes\n";
    for (int i = 1; i <= N; i++)
        cout << ans[i] << " ";
    cout << "\n";

    return 0;
}
