
// Target Expert 

/*
 * Author    : raj1307 - Raj Singh
 * Institute : Jalpaiguri Government Engineering College
 * Date      : 19.09.19
 */

#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#define _CRT_SECURE_NO_WARNINGS
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <iomanip>
#include <memory.h>
#include <assert.h>
using namespace std;


//#define DEBUG
#ifdef DEBUG
#define deb(...) cerr<<"Line:"<<__LINE__<<" "; __f(#__VA_ARGS__, __VA_ARGS__)
#define debarr(a,n) cerr<<#a<<" : ";for(int i=0;i<n;i++) cerr<<a[i]<<" "; cerr<<endl;
#define debmat(mat,row,col) cerr<<#mat<<" :\n";for(int i=0;i<row;i++) {for(int j=0;j<col;j++) cerr<<mat[i][j]<<" ";cerr<<endl;}
template<typename Arg1>
void __f(const char *name, Arg1 &&arg1) {
	cerr<<name<<" : "<<arg1<<endl;
}
template<typename Arg1, typename ... Args>
void __f(const char *names, Arg1 &&arg1, Args &&... args) {
	const char *comma=strchr(names+1,',');
	cerr.write(names,comma-names)<<" : "<<arg1<<" | ";
	__f(comma+1,args...);
}

#else
#define deb(...) {}
#define debarr(a,n) {}
#define debmat(mat,row,col) {}
#define endl "\n"
#endif

#define fio ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define fr(i, a, b) for(int i = (a); i < (b); ++i)
#define fb(i, b, a) for(int i = (b); i > (a); --i)
#define rep(i, a, b) for(int i = (a); i <= (b); ++i)
#define rr return 
#define pb push_back
#define sz(x) ((int)x.size())
#define int long long
typedef pair<int, int> ii; 
int max(int a,int b){if(a>b) return a; else return b;}
int min(int a,int b){if(a>b) return b; else return a;}
int gcd(int a,int b){ return (b == 0) ? a : gcd(b, a % b);}
inline int lcm(int a,int b){ return a / gcd(a, b) * b;}
inline int normalize(int x,int mod){ x %= mod; if (x < 0) x += mod; return x;}

const int mod = 1000*1000*1000+7;
const int INF = 1e18 +5;

int powm(int a, int b) {
	int res=1;
	while(b) {
		if(b&1)
			res=(res*a)%mod;
		a=(a*a)%mod;
		b>>=1;
	}
	return res;
}


const int N = 3e5 + 5;


int cache[N][5];
int n,a[N],b[N];

/*
int dp(int pos,int f){




    if(pos==n-1 and f==3){
        return b[pos];
    }



  



    if(pos==n-1)
        return 0;


    int &ans=cache[pos][f];
    //ans=0;

    if(ans!=-1)
        return ans;

    ans=0;


    if(f==1){

        if(a[pos]==a[pos+1]){

            ans=min(b[pos]+dp(pos+1,2),dp(pos+1,3));


        }
        else{
            ans=dp(pos+1,1);
        }




    }


    else if(f==2){

        if(a[pos]==a[pos-1]+1){

            ans=b[pos]+dp(pos+1,2);

        }

        if(a[pos]==a[pos+1]){


            ans+=dp(pos+1,3);



        }
        else{
            ans=dp(pos+1,1);
        }





    }
    else{

        //if(a[pos]+1==a[pos+1])
        //    ans=

        ans=b[pos]+dp(pos+1,2);

        if(a[pos]+1==a[pos+1])

            ans+=min(b[pos]+dp(pos+1,2),dp(pos+1,3));




    }

    return ans;
















}

*/

int dp(int idx, int prv)
{
    if(prv > 4)
        return 2e18;
    if(idx >n)
        return 0;
    int &ans = cache[idx][prv];
    if(ans != -1)
        return ans;
    ans = 2e18;
    for(int i = 0; i <= 4; i++)
    {
        if(a[idx] + i == a[idx - 1] + prv)
            continue;
        ans = min(ans, b[idx] * i +  dp(idx + 1, i));
    }
    return ans;
 
}





void solve(){   
 
    
    cin>>n;

    fr(i,1,n+1) cin>>a[i]>>b[i];

    
    //memset(cache,-1,sizeof(cache));

    for(int i=1;i<=n;++i){

        for(int j=0;j<5;++j)
            cache[i][j]=-1;


    }


    cout<<dp(1,0)<<endl;

        








    
 
 
}




signed main() {
	fio;
	#ifndef ONLINE_JUDGE 
    	freopen("input.txt", "r", stdin); 
    	freopen("output.txt", "w", stdout); 
    	freopen("error.txt", "w", stderr); 
	#endif 
	cout<<fixed<<setprecision(10);
	int t=1;
	cin>>t;
	while(t--) {
		solve();
	}

	
	return 0;
}

