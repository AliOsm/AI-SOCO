#include <bits/stdc++.h>

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)((x).size())

using namespace std;

typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

const int maxn = (int)1e5 + 5;
const int inf = (int)1e9;
const int mod = (int)1e9 + 7;
const ll INF = (ll)1e18;
const double eps = 1e-9;

int n, m;
vector < int > pos[maxn];
int a[maxn], d[maxn];
pii c[maxn];

bool can(int x) {
	for(int i = 1; i <= m; ++i) {
		int p = upper_bound(all(pos[i]), x) - pos[i].begin();
		if(p == 0) {
			return 0;
		}
		p--;
		c[i] = mp(pos[i][p], i);
	}
	sort(c + 1, c + m + 1);
	ll tot = 0;
	for(int i = 1; i <= m; ++i) {
		if(c[i].f - 1 - (i-1) - tot < a[c[i].s]) {
			return 0;
		}
		tot += a[c[i].s];
	}
	return 1;
}

int main() {
	#ifndef ONLINE_JUDGE
		freopen("in", "r", stdin);
		freopen("out", "w", stdout);
	#endif
		scanf("%d%d", &n, &m);
		for(int i = 1; i <= n; ++i) {
			scanf("%d", d + i);
			pos[d[i]].pb(i);
		}
		for(int i = 1; i <= m; ++i) {
			scanf("%d", a + i);
		}

		int l = 1, r = n, res = -1;
		while(l <= r) {
			int mid = (l + r) >> 1;
			if(can(mid)) res = mid, r = mid - 1;
			else l = mid + 1;
		}

		printf("%d\n", res);

	return 0;
}