#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>

using namespace std;

typedef long long Lint;

const int MAXN = 1e5+5;
const Lint mod = 777777777LL;

int N,M;
int W[4][4];

struct tree{
	int c[4][4];//b,e	
}kd[MAXN*3];

inline void add(int &a,Lint b){
	a%=mod;
	b%=mod;
	a = (a+b+mod)%mod;
}

void pushup(int k){
	
	memset(kd[k].c,0,sizeof kd[k].c);
	
	for(int i=1;i<=3;i++)
		for(int j=1;j<=3;j++)		
			for(int m1=1;m1<=3;m1++) 
				for(int m2=1;m2<=3;m2++)
					if(W[m1][m2])
						add(kd[k].c[i][j],(Lint)kd[2*k].c[i][m1]*kd[2*k+1].c[m2][j]);
			
}

void upd(int k,int b,int e,int v,int t){
	if(b>v || e<v) return;
	if(b==e && b==v){
		memset(kd[k].c,0,sizeof kd[k].c);
		if(t)kd[k].c[t][t] = 1;
		else{
			for(int i=1;i<=3;i++)
				kd[k].c[i][i]=1;
		} 
		return ;
	}
	upd(k*2,b,(b+e)/2,v,t);
	upd(k*2+1,(b+e)/2+1,e,v,t);
	pushup(k);
}

void eval(int k,int b,int e){
	if(b==e){
		for(int i=1;i<=3;i++)
			kd[k].c[i][i]=1;
		return ;	
	}	
	eval(k*2,b,(b+e)/2);
	eval(k*2+1,(b+e)/2+1,e);
	pushup(k);
}

int main(){
	
	cin >> N >> M ; 
	
	for(int i=1;i<=3;i++)
		for(int j=1;j<=3;j++)
			cin >> W[i][j] ;

	eval(1,1,N);

	while(M--){
	
		int v,t;scanf(" %d %d",&v,&t);
		
		upd(1,1,N,v,t);
		
		Lint res = 0LL;
		
		for(int i=1;i<=3;i++)
			for(int j=1;j<=3;j++)
				res = (res+kd[1].c[i][j])%mod;
		
		printf("%d\n",(int)res);
		
	}

	return 0;
}
