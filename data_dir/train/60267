#include <bits/stdc++.h>

using namespace std;

int n, q, parent[1000000], Next[1000000];

int Find(int i)
{
    if (parent[i] == i)
        return i;
    else { parent[i] = Find(parent[i]); return parent[i];}
}

int main()
{
    std::ios::sync_with_stdio(false);
    cin.tie(0);
    cin >> n >> q;
    vector <int> pb;
    for (int i = 0; i < n; ++i)
    {
        parent[i] = i;
        Next[i] = i + 1;
    }
    for (int i = 0; i < q; ++i)
    {
        int type;
        cin >> type;
        int j, k;
        cin >> j >> k;
        --j;
        --k;
        if (type == 3)
        {
            if (Find(j) == Find(k))
                cout << "YES\n";
            else cout << "NO\n";
            continue;
        }
        if (type == 1)
        {
            parent[Find(j)] = Find(k);
            continue;
        }
        int i1;
        pb.clear();
        pb.push_back(j);
        i1 = Next[j];
        while (i1 <= k)
        {
            parent[Find(j)] = parent[Find(i1)];
            pb.push_back(i1);
            i1 = Next[i1];
        }
        for (int j = 0; j < pb.size(); ++j)
            Next[pb[j]] = i1;
    }
    return 0;
}
