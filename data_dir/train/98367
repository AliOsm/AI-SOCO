#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
#define eps 1e-9
typedef pair<int, int> II;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI 2 * acos(0)

#define maxn 10005

int n, l, r, a[maxn], b[maxn];
bool can[maxn][2];
vector<int> V1, V2;

int main(){
    srand(1412);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	  /* freopen("in.txt", "r", stdin); */

    cin >> n >> l >> r;
    For(i, 1, n) cin >> a[i];
    For(i, 1, n) {
      cin >> b[i];
      if(b[i]) V1.pb(a[i]);
      else V2.pb(a[i]);
    }

    ms(can, 0);
    sort(all(V1)); sort(all(V2));
    
    int sum = 0;
    can[0][0] = 1;
    Rep(i, sz(V2)){
      for(int j = sum; j >= 0; j--) if(can[j][0]) can[j + V2[i]][0] = 1;
      sum += V2[i];
    }

    int res = 0;
    for(int i = sz(V1) - 1; i >= -1; i--){
      int vt0 = -1, vt1 = -1;
      for(int j = l; j <= r; j++){
        if(vt0 != -1 && vt1 != -1) break;
        if(can[j][0] && vt0 == -1) vt0 = j;
        if(can[j][1] && vt1 == -1) vt1 = j;
      }

      int RR0 = 0, RR1 = 0;
      for(int j = 0; j <= i; j++){
        if((vt0 > r || vt0 < l) && (vt1 > r || vt1 < l)) break;
        if(vt0 <= r && vt0 >= l){
          RR0++;
          vt0 += V1[j];
        }
        if(vt1 <= r && vt1 >= l){
          RR1++;
          vt1 += V1[j];
        }
      }
      if(vt1 <= r && vt1 >= l) RR1++;
      res = max(res, max(RR0, RR1));
      if(i < 0) break;
      for(int j = sum; j >= 0; j--){
        if(can[j][1]){
          can[j + V1[i]][1] = 1;
        }
        if(can[j][0]){
          can[j + V1[i]][0] = 1;
          can[j][1] = 1;
        }
      }
      
      sum += V1[i];
    }
    cout << res << endl;

    return 0;
}