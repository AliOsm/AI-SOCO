#include<bits/stdc++.h>
using namespace std;

int n;
string s[2][100005]; 
int c[100005];
long long dp[100005][2];

long long sol(int i, int p)
{
    if (dp[i][p] != -1)
        return dp[i][p];
    if (i == n-1)
        return dp[i][p] = min(c[i] + sol(i-1, 1), sol(i-1, 0));
    string af = s[p][i+1];
    dp[i][p] = 10000000000000000ll;
    if (s[0][i] <= af)
        dp[i][p] = min(dp[i][p], sol(i-1, 0));
    if (s[1][i] <= af)
        dp[i][p] = min(dp[i][p], c[i] + sol(i-1, 1));
    return dp[i][p];
}

char S[100005];
int main()
{
    memset(dp, -1, sizeof(dp));
    scanf("%d", &n);
    for (int i = 0; i < n; i++)
        scanf("%d", c+i);
    for (int i = 0; i < n; i++)
    {
        scanf("%s", S);
        s[0][i] = string(S);
        s[1][i] = s[0][i];
        reverse(s[1][i].begin(), s[1][i].end());
    }
        
    long long ans = sol(n-1, 0);
    if (ans > 1000000000000000)
        printf("-1\n");
    else
        printf("%lld\n", ans);
}