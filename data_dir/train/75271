#include <iostream>
#include <vector>
#include <algorithm>
#include <memory>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <functional>
#include <climits>
#include <cstring>

using namespace std;
const int oo = numeric_limits<int>::max() / 2;

int gcd(int a, int b) {
	return (b == 0) ? a : gcd(b, a % b);
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie();

	int n;
	cin >> n;
	vector<int> v(n);
	cin >> v[0];
	int g = v[0];
	for(int i = 1; i < n; ++i) {
		cin >> v[i];
		g = gcd(g, v[i]);
	}
	if (g != 1) {
		cout << -1 << endl;
		return 0;
	}
	int ones = count_if(v.begin(), v.end(), [](const int x) { return x == 1; });
	if (ones > 0) {
		cout << n - ones << endl;
		return 0;
	} 

	int ret = 2 * n;
	for(int i = 0; i < n; ++i) {
		int j = i;
		int g = v[i];
		do {
			g = gcd(g, v[j]);
			++j;
		} while(j < n && g != 1);

		if (g == 1) {
			ret = min(ret, j - i + n - 2);
		}
	}
	cout << ret << endl;
	return 0;
}
