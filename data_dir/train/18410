#include <bits/stdc++.h>

using namespace std;

typedef long long Long;

const int N = 1e5 + 5, MOD = 1e9 + 7;

int n;
Long a[N];
vector<int> edges[N];
map<Long, Long> memo[2][N];

Long solve(int u = 1, int p = 0, Long g = 0, bool flag = true) {
	g = __gcd(g, a[u]);

	if (memo[flag][u].count(g)) {
		return memo[flag][u][g];
	}

	Long& ret = memo[flag][u][g];

	ret = g;

	for (int v : edges[u]) {
		if (v == p) {
			continue;
		}

		ret = (ret + solve(v, u, g, flag)) % MOD;

		if (flag) {
			ret = (ret + solve(v, u, 0, false)) % MOD;
		}
	}

	return ret;
}

int main() {
	cin >> n;

	for (int i = 1; i <= n; ++i) {
		scanf("%lld", a + i);
	}

	for (int i = 2; i <= n; ++i) {
		int u, v;
		scanf("%d %d", &u, &v);
		edges[u].push_back(v);
		edges[v].push_back(u);
	}

	cout << solve();

	return 0;
}