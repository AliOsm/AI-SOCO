#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <climits>
#include <unordered_map>
#include <iterator> 
using namespace std;
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define inf32 INT_MAX
#define inf64 LLONG_MAX
#define PI acos(-1)
#define cos45 cos(PI/4)
#define ld long double
#define inf 1000000
#define pii pair<int, int>
const int mod = (1e9) + 7;
const double eps = 1e-6;
const int siz = 2e5 + 5, siz2 = 1e5 + 5;
int n, par[siz], loc[siz], lev[siz];
vector<int> adj[siz];
bool vis[siz];
int seq[siz];
queue<pair<int, int>> q;
int main()
{
	scanf("%d", &n);
	for (int i = 0; i < n - 1; i++) {
		int u, v;
		scanf("%d%d", &u, &v);
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
	for (int i = 0; i < n; i++) {
		scanf("%d", &seq[i]);
		loc[seq[i]] = i;
	}
	q.push({1, 0});
	lev[1] = 0;
	vis[1] = true;
	loc[0] = -1;
	while (!q.empty()) {
		pair<int, int> p = q.front();
		q.pop();
		for (auto v : adj[p.first]) {
			if (!vis[v]) {
				vis[v] = true;
				par[v] = p.first;
				q.push({v, p.second+1});
				lev[v] = p.second + 1;
			}
		}
	}
	for (int i = 1; i < n; i++) {
		if (lev[seq[i]] < lev[seq[i - 1]] || loc[par[seq[i]]] < loc[par[seq[i - 1]]]) {
			printf("No\n");
			return 0;
		}
	}
	printf("Yes\n");
	return 0;
}