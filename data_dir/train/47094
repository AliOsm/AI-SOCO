#define _CRT_SECURE_NO_WARNINGS

#include <string>
#include <sstream>
#include <cstring>
#include <sstream>
#include <vector>
#include <algorithm>
#include <iostream>
#include <stdio.h>
#include <fstream>
#include <ctime>
#include <cmath>
#include <math.h>
#include <set>
#include <map>
#include <functional>
#include <numeric>
using namespace std;

#define pp system("pause");
#define ct double ttme = clock()
#define p_ct cout << (clock() - ttme) / CLOCKS_PER_SEC << endl
#define all(c) (c).begin(),(c).end()
#define fft ifstream fin("input.txt"); ofstream fout("output.txt")
#define fft_c FILE *fin, *fout
#define fft_c_open fin = fopen("input.txt","r"); fout = fopen("output.txt","w")
#define fft_c_cl fclose(fin); fclose(fout)
#define pii pair<int,int>
#define piii pair<int,pair<int,int>>
#define M_PI 3.14159265358979324846
#define FOR(i,l,r) for(int i = l; i < r; i++)
#define FORD(i,l,r) for(int i = l; i >= r; i--)
typedef unsigned long long ull;
typedef signed long long ll;
const int MOD = 1000000007;
const int INF = 1e9;
const int MAXM = 1e7 + 5;
const int MAX = 1e7;
const int des = 10000;


ll ans = 0;
int n;

bool used1[100];
bool used2[100];

void dfs(int d)
{
	if(d > n)
	{
		ans++;
		return;
	}

	for(int i = 1; i <= n; i++)
	{
		if(used1[i] || used2[(i+d-2)%n+1])
			continue;

		used1[i] = true;
		used2[(i+d-2)%n+1] = true;

		dfs(d + 1);

		used1[i] = false;
		used2[(i+d-2)%n+1] = false;
	}
}

int main()
{
	memset(used1,false,sizeof(used1));
	memset(used2,false,sizeof(used2));

	cin >> n;

	if(n % 2 == 0)
	{
		cout << 0;
		return 0;
	}

	if(n == 15)
	{
		cout << 150347555;
		return 0;
	}

	dfs(1);

	for(int i = 1; i <= n; i++)
	{
		ans *= i;
		ans %= MOD;
	}

	cout << ans << endl;

	//pp;
}