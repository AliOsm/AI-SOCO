#include<bits/stdc++.h>
using namespace std;

int f[5003][5003];
int a[5003];
int ans[100007];

vector< pair< int , int  > >qr[100007];

int tr[20000];

void update(int u, int l, int r, int id, int vl)
{
    if (l==r) {
        tr[u] = max(tr[u], vl);
//        cout << "ar[" << id << "] = " << tr[u] << endl;
        return;
    }

    int mid = (l+r)/2;
    if (id <= mid) update(u*2, l, mid, id, vl);
    else update(u*2+1, mid+1, r, id, vl);

    tr[u] = max(tr[u*2], tr[u*2+1]);
}

int query(int u, int l, int r, int x, int y)
{
    if (r < x || y < l) return 0;
    if (x <= l && r <= y) return tr[u];
    int mid = (l+r)/2;
    return max(query(u*2, l, mid, x, y), query(u*2+1, mid+1, r, x, y));
}

int main()
{
    std::ios_base::sync_with_stdio(false);
    cin.tie(0);

    int n;
    cin >> n;

    for (int i = 0; i < n; i++) {
        cin >> a[i];
        f[i][0] = a[i];
    }

    for (int k = 1; k < n; k++) {
        for (int i = k; i < n; i++) {
            f[i][k] = f[i][k-1]^f[i-1][k-1];
//            cout << "f[" << i << "][" << k << "] = " << f[i][k] << endl;
        }
    }

    int q;
    cin >> q;
    for (int i = 0; i < q; i++) {
        int l, r;
        cin >> l >> r;
        l--;r--;
        qr[r].emplace_back(i, l);
    }

    for (int i = 0; i < n; i++) {
//        cout << "at " << i << endl;
        for (int k = i; k >= 0; k--) {
            update(1, 0, n-1, i-k, f[i][k]);
        }

        for (pair< int , int >p : qr[i]) {
            ans[p.first] = query(1, 0, n-1, p.second, i);
        }
    }

    for (int i = 0; i < q; i++) cout << ans[i] << "\n";


    return 0;
}
