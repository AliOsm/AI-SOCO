#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <set>
#include <list>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
const ll MOD = 1e9 + 7;

priority_queue<int, vector<int>, greater<int> > pq;

struct node {
	int first, secont, nnn;
};

vector<pii> v; queue<node> ma; deque<int> dq;


int main() {
	int n, d, k, num = 0;
	scanf("%d %d %d", &n, &d, &k);
	if (n == 1) return !printf("NO");
	if (d == 1 || k == 1) {
		if (n == 2 && d == 1) {
			printf("YES\n");
			printf("1 2");
			return 0;
		}
		return !printf("NO");
	}
	
	if (d >= n) return !printf("NO");
	for (int i = 1; i <= d + 1; i++) {
		ma.push({ min((d + 1) - i, i - 1), k - 2, ++num });
		if (i != 1) v.push_back({ num - 1, num });
	}
	n -= num;


	int flag = 0;
	if (n == 0) flag = 1;
	node tv;
	while (!ma.empty() && n) {
		tv = ma.front();
		// printf("%d : %d %d\n", tv.nnn, tv.first, tv.secont);

		if (tv.first == 0 || tv.secont == 0) {
			ma.pop();
			continue;
		}

		v.push_back({ tv.nnn, ++num });
		ma.push({ tv.first - 1, k - 1, num });
		ma.push({ tv.first, tv.secont - 1, tv.nnn });
		ma.pop();

		n--;
		if (n == 0) {
			flag = 1;
			break;
		}
	}

	if (!flag) return !printf("NO");
	else {
		printf("YES\n");
		for (int i = 0; i < sz(v); i++)
			printf("%d %d\n", v[i].first, v[i].second);
	}
}