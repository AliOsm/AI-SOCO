#include <bits/stdc++.h>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false); cin.tie(NULL);
  string s;
  while (cin >> s) {
    int sz = (int) s.size(); sz++;
    vector<char> used(sz, ' ');
    vector<int> primes;
    vector<bool> check(sz);
    for (int i = 2; i < sz; i++) {
      if (!check[i]) {
        primes.push_back(i);
        for (int j = i + i; j < sz; j += i) check[j] = true;
      }
    }
    vector<int> freq(26);
    for (auto i : s) freq[i - 'a']++;

    bool ok = true;

    for (int i = 0; i < primes.size(); i++) {
      int cur = primes[i];
      int mx;
      int isclean = -1;
      for (int j = 1; j * cur < sz; j++) {
        if (used[j * cur] != ' ') isclean = j * cur;
      }
      if (isclean == -1) {
        mx = max_element(freq.begin(), freq.end()) - freq.begin();
      } else {
        mx = used[isclean] - 'a';
      }
      for (int j = 1; j * cur < sz; j++) {
        if (used[j * cur] != ' ') continue;
        if (freq[mx] == 0) {
          ok = false; break;
        } else {
            freq[mx]--;
          used[j * cur] = char(mx + 'a');
        }
      }
    } 
    if (!ok) cout << "NO" << endl;
    else {
      int it = 1;
      for (int i = 0; i < 26; i++) {
        while (freq[i] > 0) {
          if (used[it] == ' ') {
            used[it] = char(i + 'a');
            freq[i]--;
          }
          it++;
        }
      }
      cout << "YES" << endl;
      for (int i = 1; i < sz; i++) cout << used[i]; cout << endl;
    }
  }
  return 0;
}