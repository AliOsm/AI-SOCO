#include<bits/stdc++.h>
using namespace std;

typedef pair<int,int> pii;
#define fore(i,ii,iii) for(int i=ii;i<iii;i++)
#define fst first
#define snd second

const int N=2e5+15;
int n,a[N],last,res;
pii cur;
set<pair<int,int>>szPos,posSz;

void debug() {
  cout<<"szPos: ";for(auto it:szPos)cout<<"{"<<-it.fst<<","<<it.snd<<"} ";cout<<endl;
  cout<<"posSz: ";for(auto it:posSz)cout<<"{"<<it.fst<<","<<-it.snd<<"} ";cout<<endl;
}

int main() {
  ios::sync_with_stdio(false);
  cin>>n;
  fore(i,0,n) {
    cin>>a[i];
    if(a[i]!=a[last]) {
      szPos.insert({-(i-last),last});
      posSz.insert({last,-(i-last)});
      last=i;
    }
  }
  szPos.insert({-(n-last),last});
  posSz.insert({last,-(n-last)});
  // cout<<"before: "<<endl;debug();
  while(szPos.size()) {
    res++;
    cur=*(szPos.begin());
    szPos.erase(szPos.begin());
    posSz.erase(posSz.find({cur.snd,cur.fst}));
    auto itR=posSz.lower_bound({cur.snd,cur.fst});
    if((itR!=posSz.begin())&&(itR!=posSz.end())) {
      pii r = *itR;
      auto l=*(--itR);
      if(a[l.fst]==a[r.fst]) {
        posSz.erase(posSz.find(l));
        szPos.erase(szPos.find({l.snd,l.fst}));
        posSz.erase(posSz.find(r));
        szPos.erase(szPos.find({r.snd,r.fst}));
        posSz.insert({l.fst,l.snd+r.snd});
        szPos.insert({l.snd+r.snd,l.fst});
      }
    }
    // cout<<"after step "<<res<<" : "<<endl;debug();
  }
  cout<<res<<endl;
}