#include <bits/stdc++.h>

using namespace std;

const int mxsz = 1500000;
int n;
int a[100010];
char used[mxsz];
int b[100010];
vector<int> sex[mxsz];

bool solve(int v, bool print){
    memset(used, 0, sizeof(used));
    memset(b, 0, sizeof(b));
    for(int i = 0; i < v; i++){
        b[i] = a[i];
        for(auto u: sex[b[i]]){
            if(used[u]){
                return false;
            }
            used[u] = true;
        }
    }
    if(v < n){
        int cur = a[v] + 1;
        for(int i = v; i < n; i++){
            while(true){
                bool ok = true;
                for(auto u: sex[cur]){
                    if(used[u]){
                        ok = false;
                        break;
                    }
                }
                if(ok) break;
                cur++;
            }
            b[i] = cur;
            for(auto u: sex[cur]){
                used[u] = true;
            }
            if(i == v) cur = 2;
        }
    }
    if(print){
        for(int i = 0; i < n; i++) cout << b[i] << ' '; cout << endl;
    }
    return true;
}

main()
{
    ios_base::sync_with_stdio(false);
    for(int i = 2; i <= mxsz; i++){
        for(int j = i; j <= mxsz; j += i){
            sex[j].push_back(i);
        }
    }
    cin >> n;
    for(int i = 0; i < n; i++) cin >> a[i];
    int lo = 0, hi = n;
    while(lo != hi){
        int mi = (lo + hi + 1) >> 1;
        if(solve(mi, false)) lo = mi;
        else hi = mi - 1;
    }
    solve(lo, true);
}
