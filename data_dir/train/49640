#include <iostream>
#include <stdio.h>
#include <map>
#include <algorithm>

using namespace std;

const int N = 100000;

long long a[N], b[N];
int n, m;

bool check(long long r) {
    int li = -1, ri = 0;
    long long xl = 0, xr = 0;
    for(int i = 0; i < n; i++) {
        xl = (li == -1 ? (long long)-2e15 : b[li]);
        xr = (ri != m ? b[ri] : (long long)+2e15);
        while(!(xl <= a[i] && a[i] < xr)) {
            li++;
            ri++;
            xl = (li == -1 ? (long long)-2e15 : b[li]);
            xr = (ri != m ? b[ri] : (long long)+2e15);
        }
//        cout << r << "  = " << xl << " " << xr << "\n";
        if(min(abs(xl - a[i]), abs(xr - a[i])) > r)
            return false;
    }
    return true;
}

int main() {
    scanf("%d%d", &n, &m);
    for(int i = 0; i < n; i++) {
        scanf("%I64d", &a[i]);
    }
    for(int i = 0; i < m; i++) {
        scanf("%I64d", &b[i]);
    }
    sort(a, a + n);
    sort(b, b + m);
    long long l = 0, r = (long long) 2e10;
    while(l < r) {
        long long c = (l + r) / 2LL;
        if(check(c))
            r = c;
        else
            l = c + 1;
    }
//    cout << check(1500000000) << "\n";
    printf("%I64d\n", l);
    return 0;
}
