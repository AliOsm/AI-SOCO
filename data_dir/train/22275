#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
#define pb push_back
typedef int ll;
using namespace std;
ll n;
ll a[200005];
ll q;
vector<ll> p[200005];
vector<pair<ll,ll> > qu[200005];
ll tree[800005];
ll pos[200005];
ll ans[200005];
ll left(ll x)
{
        return x << 1;
}
ll right(ll x)
{
        return (x<<1)+1;
}
void upd(ll id , ll x, ll l, ll r,ll val)
{
        if(l == r)
        {
                tree[id] += val; return;
        }
        ll mid = (l + r)/2;
        if(x <= mid)
                upd(left(id) , x , l ,mid , val);
        else{
                upd(right(id) , x , mid + 1, r, val);
        }

        tree[id] = tree[left(id)] + tree[right(id)];
}

ll qry(ll id ,ll x ,ll y,ll l ,ll r)
{
        if(x == l && y == r)
                return tree[id];
        ll mid = (l + r)/2;

if(l >= x && r <= y) return tree[id];

        if(y <= mid) return qry(left(id) , x , y ,l , mid);
        else if(x > mid) return qry(right(id) , x , y , mid +1 ,r);
        else{

                return qry(left(id) , x , mid ,l , mid) + qry(right(id) , mid+1 , y , mid +1 ,r);
        }
}
int main()
{
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        cin >> n >> q;
        for(ll i=1;i<=n;i++){
                cin >> a[i];
                pos[a[i]] = i;
        }
        for(ll i=1;i<=n;i++){
                for(ll j=i;j<=n;j+=i){
                        ll L = min(pos[i] , pos[j]);
                        ll R = max(pos[i] , pos[j]);
                        p[R].pb(L);
                }
        }
        for(ll i=1;i<=q;i++){
                ll l , r;
                cin >> l >> r;
                qu[r].pb(make_pair(l , i));
        }
        for(ll i=1;i<=n;i++){
                for(auto j : p[i]){
                        upd(1 , j , 1 , n , 1);
                }
                for(auto j : qu[i]){
                        ans[j.second] = qry(1 , j.first , i , 1 , n);
                }

        }
        for(ll i=1;i<=q;i++) cout << ans[i] << endl;
        return 0;
}