#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include<unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#include <math.h>

#define lli long long int
#define ld long double
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);

using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long cmod = 998244353 ;
const long long inf = 1LL << 61;
const int M = 1e6 + 500;
const lli ths = 1LL << 40;
const int NN = 5e5 + 6;

lli ncr[1003][1003];
lli dp[1003];

void pre() {

    for(int i = 0; i < 1003; i ++) {
        ncr[i][0] = ncr[i][i] = 1;
        for(int j = 1; j < i; j ++) {
            ncr[i][j] = ncr[i - 1][j] + ncr[i - 1][j - 1];
            ncr[i][j] %= cmod;
        }
    }
}

void solve()
{
    lli n;
    cin>>n;
    lli a[n];
    for(int i = 0; i < n; i ++)
        cin>>a[i];
    dp[n] = 1;
    for(int i = n - 1; i >= 0; i --) {
        if(a[i] <= 0)
            continue ;
        for(int j = a[i] + i  + 1 ; j <= n; j ++) {
            dp[i] += (dp[j] % cmod * ncr[j - i - 1][a[i]] % cmod) % cmod;
            dp[i] %= cmod;
        }
    }
    lli ans = 0;
    for(int i = 0; i < n; i ++) {
        ans += dp[i];
        ans %= cmod;
    }
    cout<<ans;
    cout<<'\n';
    return ;
}

/*
*/

int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

    pre();

    int t = 1;
//    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
