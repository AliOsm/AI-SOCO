#include <iostream>
#include <vector>
#include <map>
#include <queue>

using namespace std;



int n;
map<int,pair<int,int> > mapa;
priority_queue<pair<int,int> > q;

int main()
{
  ios::sync_with_stdio(false);
  cin>>n;
  for (int i=1;i<=n;i++) {
    int x;
    cin>>x;
    if (int(mapa.size()) and (--mapa.end())->second.second==x)
      (--mapa.end())->second.first++;
    else
      mapa[i]=pair<int,int> (1,x);
  }
  for (map<int,pair<int,int> >::iterator it=mapa.begin();it!=mapa.end();it++) {
    //cout<<"("<<(it->first)<<","<<(it->second.first)<<","<<(it->second.second)<<")";
    q.push(pair<int,int> (it->second.first,-(it->first)));
  }
  //cout<<endl;
  int sol=0;
  while (not q.empty()) {
    pair<int,int> p=q.top();
    q.pop();
    int len=p.first;
    int pos=-p.second;
    if (mapa.count(pos) and mapa[pos].first==len) {
      sol++;
      map<int,pair<int,int> >::iterator itr=mapa.find(pos);
      map<int,pair<int,int> >::iterator it=itr;
      it++;
      mapa.erase(itr);
      if (it!=mapa.end()) {
	int len2=it->second.first;
	int val2=it->second.second;
	if (it!=mapa.begin()) {
	  it--;
	  int &len1=it->second.first;
	  int val1=it->second.second;
	  if (val1==val2) {
	    len1+=len2;
	    q.push(pair<int,int> (len1,-(it->first)));
	    it++;
	    mapa.erase(it);
	  }
	}
      }
    }
  }
  cout<<sol<<endl;
}
