#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
//#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native")
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stdio.h>
#include <cstdio>
#include <math.h>
#include <cmath>
#include <string>
#include <cstring>
#include <queue>
#include <deque>
#include <random>
#include <iomanip>
#include <bitset>
                        
using namespace std;
                        
template<typename T> void uin(T &a, T b) {
    if (b < a) {
        a = b;
    }
}
                        
template<typename T> void uax(T &a, T b) {
    if (b > a) {
        a = b;
    }
}

#define int long long
#define ghost signed
#define left left228
#define right right228
#define complex complex228
#define count count228
#define sin sin228
#define list list228

const int N = 300 * 1000 + 228;

bool mt[N];

void solve() {
	int n, m;
	cin >> n >> m;
	for (int i = 1; i <= 3 * n; ++i) mt[i] = 0;
	vector<int> pars;
	for (int i = 0; i < m; ++i) {
		int u, v;
		cin >> u >> v;
		if (!mt[u] && !mt[v]) {
			mt[u] = mt[v] = 1;
			pars.emplace_back(i + 1);
		}
	}
	vector<int> mis;
	for (int i = 1; i <= 3 * n; ++i) {
		if (!mt[i]) mis.push_back(i);
	}
	if ((int)mis.size() >= n) {
		cout << "IndSet\n";
		while ((int)mis.size() > n) mis.pop_back();
		for (int i : mis) cout << i << " ";
		cout << '\n';
	} else {
		while ((int)pars.size() > n) pars.pop_back();
		cout << "Matching\n";
		for (int i : pars) cout << i << " ";
		cout << '\n';
	}
}

ghost main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
	int t;
	cin >> t;
	while(t--) solve();
    return 0;
} // kek ;
// Ого! Кажетсья это $#@!
 
 
 
 
