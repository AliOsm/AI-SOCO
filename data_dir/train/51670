#include <cstdio>

#include <cmath>

#include <cstring>

#include <iostream>

#include <algorithm>

#include <queue>

#include <vector>

#include <map>



using namespace std;



typedef long long LL;


int num;
int n;
int a[200005],b[100005],nxt[200005];
LL w[100005];
int x,y;
LL dp1[100005][4][3],dp2[100005][4][3];
LL dep[100005],down[100005];
LL ans;
LL up[100005],up2[100005];
void add(int x,int y)
{
    ++num;a[num]=y;nxt[num]=b[x];b[x]=num;
}
void dfs1(int x,int fa)
{
    for (int i=b[x];i!=0;i=nxt[i])
    {
        int y=a[i];
        if (y==fa) continue;
        dfs1(y,x);
        if (dp1[x][1][0]<dep[y])
        {
            dp1[x][3][0]=dp1[x][2][0];dp1[x][3][1]=dp1[x][2][1];
            dp1[x][2][0]=dp1[x][1][0];dp1[x][2][1]=dp1[x][1][1];
            dp1[x][1][0]=dep[y];      dp1[x][1][1]=y;
        }
        else if (dp1[x][2][0]<dep[y])
        {
            dp1[x][3][0]=dp1[x][2][0];dp1[x][3][1]=dp1[x][2][1];
            dp1[x][2][0]=dep[y];      dp1[x][2][1]=y;
        }
        else if (dp1[x][3][0]<dep[y])
        {
            dp1[x][3][0]=dep[y];dp1[x][3][1]=y;
        }
        if (dp2[x][1][0]<down[y])
        {
            dp2[x][2][0]=dp2[x][1][0];dp2[x][2][1]=dp2[x][1][1];
            dp2[x][1][0]=down[y];dp2[x][1][1]=y;
        }
        else if (dp2[x][2][0]<down[y])
        {
            dp2[x][2][0]=down[y];dp2[x][2][1]=y;
        }
    }
    dep[x]=dp1[x][1][0]+w[x];
    down[x]=max(dp2[x][1][0],w[x]+dp1[x][1][0]+dp1[x][2][0]);
}
void dfs2(int x,int fa)
{
    ans=max(ans,up[x]+down[x]);
    for (int i=b[x];i!=0;i=nxt[i])
    {
        int y=a[i];
        if (y==fa) continue;
        up[y]=up[x];
        for (int i=1;i<=2;++i)
        {
            if (dp2[x][i][1]==y) continue;
            up[y]=max(up[y],dp2[x][i][0]);
        }        
        up2[y]=up2[x]+w[x];
        for (int i=1;i<=2;++i)
        {
            if (dp1[x][i][1]==y) continue;
            up2[y]=max(up2[y],dp1[x][i][0]+w[x]);
            up[y]=max(up[y],up2[x]+dp1[x][i][0]+w[x]);
        }
        for (int i=1;i<=3;++i)
            for (int j=i+1;j<=3;++j)
            {
                if (dp1[x][i][1]==y) continue;
                if (dp1[x][j][1]==y) continue;
                up[y]=max(up[y],dp1[x][i][0]+dp1[x][j][0]+w[x]);
            }
        dfs2(y,x);
    }
}

int main()

{
    scanf("%d",&n);
    for (int i=1;i<=n;++i) scanf("%I64d",&w[i]);
    for (int i=1;i<n;++i)
    {
        scanf("%d%d",&x,&y);
        add(x,y);add(y,x);
    }
    dfs1(1,0);
    dfs2(1,0);
    printf("%I64d\n",ans);

    return 0;

}