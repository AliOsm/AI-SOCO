//Be Name Khoda
//no comment...
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
const int MOD = (int)1e9 + 7;
const int MAXN = (int)1e5 + 100;
const int infint = (int)1e9;
const ll inf = (ll)1e18;
ll p[MAXN], a[MAXN], c[MAXN];
map<ll, ll> A, B;
vector<int> G[MAXN];
void dfs(int u, int p, int co)
{
	c[u] = co;
	if(co)
		A[a[u]]++;
	else
		B[a[u]]++;
	for (auto v : G[u])
		if(v != p)
			dfs(v, u, 1 - co);
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n;
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	for (int i = 2; i <= n; i++)
	{	
		cin >> p[i];
		G[i].push_back(p[i]);
		G[p[i]].push_back(i);
	}
	dfs(1, -1, 0);
	ll ans = 0, leaf = 0;
	for (int i = 1; i <= n; i++)
		if(G[i].size() == 1)
			leaf = i;
	ll red = 0;
	for (int i = 1; i <= n; i++)
		if(c[i] == c[leaf])
			ans ^= a[i], red++;
	set<ll> S;
	for (int i = 1; i <= n; i++)
	    S.insert(a[i]);
	ll cnt = 0;
	for (auto u : S)
	{
		cnt += A[u] * B[(ans ^ u)];
	}
	if(ans == 0)
	{
		cnt += red * (red - 1) / 2;
		red = n - red;
		cnt += red * (red - 1) / 2;
	}
	cout << cnt;
		
}
