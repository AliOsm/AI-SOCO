#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int ,int> ii;

int pa[1111];

int find_set(int v) {
    if(pa[v] == v)
        return v;
    else return pa[v] = find_set(pa[v]);
}

void union_set(int a, int b) {
    a = find_set(a);
    b = find_set(b);
    if(a != b) {
        pa[b] = a;
    }
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); 
    cout.tie(0);
    // freopen("input.txt","r",stdin);
    // freopen("output.txt","w",stdout);
    int n;
    cin >> n;
    vector<int> a(n+1);
    for(int i = 1; i <= n; i++) {
        cin >> a[i];
    }
    vector<string> s(n+1);
    for(int i = 1; i <= n; i++) {
        cin >> s[i];
        s[i] = " " + s[i];
    }
    for(int i = 1; i <= n; i++) {
        pa[i] = i;
    }

    for(int i = 1; i<= n; i++) {
        for(int j = 1; j <= n; j++) {
            if(s[i][j] == '1') {
                union_set(i, j);
            }
        }
    }
    vector<int> perm[n+1];
    for(int i = 1; i <= n ;i++) {
        int x = find_set(i);
        perm[x].push_back(a[i]);
    }
    for(int i = 1; i <= n; i++) {
        sort(perm[i].begin(), perm[i].end());
    }
    vector<int> cnt(n+1, 0);
    for(int i = 1; i <= n; i++) {
        int x = find_set(i);
        cout << perm[x][cnt[x]] << " ";
        cnt[x]++;
    }
    return 0;
}