#include <bits/stdc++.h>

using namespace std;

template <class T> T abs(T x) { return x < 0 ? -x : x; }

int gcd(int a, int b) {
  while (b) {
    a %= b;
    swap(a, b);
  }
  return a;
}

long long cross(int xa, int ya, int xb, int yb, int xc, int yc) {
  return 1LL * (xb - xa) * (yc - ya) - 1LL * (yb - ya) * (xc - xa);
}

const int N = 100010;

int x[N];
int y[N];

int main() {
  int n;
  scanf("%d", &n);
  if (n <= 4) {
    puts("YES");
    return 0;
  }
  for (int i = 0; i < n; ++i) {
    scanf("%d %d", x + i, y + i);
  }
  for (int i = 0; i < 3; ++i) {
    set < pair <int, int> > s;
    for (int j = i + 1; j < n; ++j) {
      int dx = x[i] - x[j];
      int dy = y[i] - y[j];
      if (dx < 0) {
        dx *= -1;
        dy *= -1;
      }
      if (dx == 0 && dy < 0) {
        dy *= -1;
      }
      int g = gcd(abs(dx), abs(dy));
      dx /= g;
      dy /= g;
      if (s.count({dx, dy}) != 0) {
        vector <int> w;
        for (int k = 0; k < n; ++k) {
          if (cross(x[i], y[i], x[j], y[j], x[k], y[k]) != 0) {
            w.push_back(k);
          }
        }
        for (int k = 2; k < (int)w.size(); ++k) {
          if (cross(x[w[0]], y[w[0]], x[w[1]], y[w[1]], x[w[k]], y[w[k]]) != 0) {
            puts("NO");
            return 0;
          }
        }
        puts("YES");
        return 0;
      }
      s.emplace(dx, dy);
    }
  }
  puts("NO");
}
