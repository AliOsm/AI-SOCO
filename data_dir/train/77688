#pragma comment(linker, "/stack:64000000")

#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <algorithm>
#include <queue>

using namespace std;

#define REP(i, n) for (int (i) = 0; (i) < (n); (i)++)
#define all(v) (v).begin(), (v).end()
#define sz(v) (int)(v).size()

int r[100000][3];

int main() {
#ifndef ONLINE_JUDGE
	freopen("test.in", "r", stdin);
	freopen("test.out", "w", stdout);
#endif
	int n;
	scanf("%d", &n);
	map <int, int> h;
	REP(i, n) {
		int t;
		scanf("%d", &t);
		h[t]++;
	}
	priority_queue <pair <int, int> > q;
	for (map <int, int>::iterator it = h.begin(); it != h.end(); it++) {
		q.push(make_pair(it->second, it->first));
	}
	int k = 0;
	while (sz(q) >= 3) {
		pair <int, int> a, b, c;
		a = q.top();
		q.pop();
		b = q.top();
		q.pop();
		c = q.top();
		q.pop();
		r[k][0] = a.second;
		r[k][1] = b.second;
		r[k][2] = c.second;
		++k;
		--a.first;
		--b.first;
		--c.first;
		if (a.first != 0) q.push(a);
		if (b.first != 0) q.push(b);
		if (c.first != 0) q.push(c);
	}
	printf("%d\n", k);
	REP(i, k) {
		sort(r[i], r[i] + 3);
		REP(j, 3) {
			printf("%d ", r[i][2 - j]);
		}
		printf("\n");
	}
	return 0;
}