#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define ld long double
#define oo 666666666

const int N = 100005;
int BIT[N];
int LUCKY[N];
int A[N];

bool isLucky(int x)
{
    while(x > 0)
        if(!(x%10==7 || x%10==4))return 0;
    else x/=10;
    return 1;
}

void add(int c, int v)
{
    for(c;c<N;c+=c&-c)
        BIT[c]+=v;
}

int get(int c, int s=0)
{
    for(c;c;c-=c&-c)
        s+=BIT[c];
    return s;
}

int main()
{
    ios::sync_with_stdio(0);cin.tie(0);
    int n,m;
    cin>>n>>m;
    //A[i] will always be <= 1e4, so we will do at most 1e5 * 1e4 updates ~ 2 sec

    for(int i=1; i<100001; i++)
        LUCKY[i]=isLucky(i);

    for(int i=1; i<=n; i++)
    {
        cin>>A[i];
        if(LUCKY[A[i]])add(i,1);
    }

    while(m--)
    {
        string s;
        cin>>s;
        if(s[0]=='c')
        {
            int l,r;
            cin>>l>>r;
            cout<<get(r)-get(l-1)<<"\n";
        }
        else
        {
            int l,r,v;
            cin>>l>>r>>v;
            for(int i=l; i<=r; i++)
            {
                if(LUCKY[A[i]] && !LUCKY[A[i]+v])add(i,-1);
                if(!LUCKY[A[i]] && LUCKY[A[i]+v])add(i,1);
                A[i]+=v;
            }
        }
    }
}
