#include <bits/stdc++.h>

using namespace std;

const int N = 2010;
const int B = 1e9 + 7;

int n, k;
long long a[N], b[N];
long long tmp[N];
long long h[N];

void mul(long long *a, long long *b) {
  memset(tmp, 0, sizeof(tmp));
  for (int i = 1; i <= n; ++i) {
    for (int j = 1; j <= i; ++j) {
      tmp[i] = (tmp[i] + a[j] * b[i - j + 1]) % B;
    }
  }
  for (int i = 1; i <= n; ++i)
    a[i] = tmp[i];
}

void getmatrix() {
  for (int i = 1; i <= n; ++i)
    h[i] = 1;
  memset(b, 0, sizeof(b));
  b[1] = 1;
  int tk = k;
  while (tk) {
    if (tk & 1) mul(b, h);
    mul(h, h);
    tk >>= 1;
  }
}

int main() {
  scanf("%d%d", &n, &k);
  for (int i = 1; i <= n; ++i) {
    scanf("%I64d", a + i);
  }
  getmatrix();
  for (int i = 1; i <= n; ++i) {
    long long x = 0;
    for (int j = 1; j <= i; ++j) {
      x = (x + a[i - j + 1] * b[j]) % B;
    }
    printf("%I64d%c", x, " \n"[i == n]);
  }
  return 0;
}
