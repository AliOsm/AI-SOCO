#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> //
using namespace std;
using namespace __gnu_pbds;

#define si(n) scanf("%d",&n)
#define MAX 300005
#define ll long long
#define f first
#define s second

int n;
map<int,int>mp;

typedef tree<
int,
null_type,
less<int>,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;

ordered_set X;

ll sum[MAX];
map<int,int>id;


int main()
{
   // freopen("input.txt","r",stdin);
    int i,j;
    si(n);
    for(i=1;i<=n;i++){
        int a,b;
        si(a);si(b);
        if(mp[a]==0)mp[a]=a;
        if(mp[b]==0)mp[b]=b;
        swap(mp[a],mp[b]);
    }
    int cc=1,age;
    i=1;
    for(auto x : mp){
        X.insert(x.s);
        id[x.f]=i;
        if(i>1)sum[i]=sum[i-1]+(x.f-age-1);
        age=x.f;
        i++;
    }
    ll ans=0;
    int age_pos;
    i=1;
    for(auto x : mp){
        int pos=(x).f,val=(x).s;

        //if(i==3){cout<<ans<<endl;return 0;}

        if(i>1){
            int cnt=0;
            auto it=X.lower_bound(age_pos+1);
//            if(i==3){
//                cout<<age_pos+1<<endl;
//            }
            if(it!=X.begin()){
                it--;
                //if(i==3)cout<<"here"<<' '<<*it<<endl;
                cnt=X.order_of_key(*it);
                cnt++;
            }
            ll tot=pos-age_pos-1;

            ans+= tot*cnt;
//            if(i==3){
//                cout<<ans<<' '<<tot<<' '<<cnt<<endl;
//            }
            //if(i==3)cout<<cnt<<' '<<tot<<endl;

        }

        auto it=X.lower_bound(val);
        if(it!=X.begin()){
            it--;
            int cnt=X.order_of_key(*it);
            cnt++;
            ans+=cnt;
        }
        X.erase(val);

        //if(i==3)cout<<ans<<endl;


        if(id[val]>id[pos]){
            ll now=sum[id[val]]-sum[id[pos]];
            ans+=now;
        }
        //cout<<pos<<' '<<ans<<endl;

        age_pos=pos;
        i++;
    }
    cout<<ans<<endl;

}
