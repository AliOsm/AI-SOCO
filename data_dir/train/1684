#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <vector>
#include <queue>

using namespace std;

const int N=300010;

typedef long long ll;

#define mp make_pair
#define pb push_back
#define sz(x) (int((x).size()))

int m,n;
vector<int> vt[N];

int mat[N],d[N],vis[N];

void work(int u)
{
	mat[u]^=1;d[u]=0;
	for(int i=0;i<sz(vt[u]);i++)
	{
		int v=vt[u][i];
		if(mat[u]==mat[v])
			d[v]++,d[u]++;
		else d[v]--;
	}
}


int main()
{
	scanf("%d%d",&n,&m);
	for(int i=0;i<m;i++)
	{
		int a,b;
		scanf("%d%d",&a,&b);
		vt[a].pb(b);
		vt[b].pb(a);
		d[a]++;
		d[b]++;
	}
	queue<int> que;
	for(int i=1;i<=n;i++)
	{
		if(d[i]>1)
			que.push(i);
	}
	while(sz(que))
	{
		int u=que.front();
		if(d[u]<=1) {que.pop();continue;}
		if(vis[u]) break;
		que.pop();
		work(u);
		for(int i=0;i<sz(vt[u]);i++)
		{
			int v=vt[u][i];
			if(d[v]>1) que.push(v);
		}
	}
	if(sz(que))
	{
		cout<<-1<<endl;
		return 0;
	}
	for(int i=1;i<=n;i++)
		cout<<mat[i];
	cout<<endl;
    return 0;
}

