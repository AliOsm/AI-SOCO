#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <map>
#include <queue>
#include <set>
#include <iomanip>
#include <deque>
#include <cassert>
#include <ctime>
#include <cstring>
#include <cstdlib>
#include <chrono>
#include <ctime>
#include <random>
#include <stack>
#include <unordered_set>
#include <unordered_map>
using namespace std;

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
typedef long long ll;
typedef long double ld;
#define INF 2001001001001001001
#define MOD 1000000007
int N,arr[3001];
ll cur,ans=INF;

int main()
{
  //ios_base::sync_with_stdio(0);cin.tie(0);
  //freopen (".in","r",stdin);
  //freopen (".out","w",stdout);
  cin>>N;
  for (int i=0;i<N;i++){
    cin>>arr[i];
    arr[i]-=i;
    arr[i]+=N;
    cur+=arr[i];
  }
  multiset<int>mst;
  for (int i=0;i<N;i++){
    mst.insert(arr[i]);
    mst.insert(arr[i]);
    mst.erase(mst.find(*mst.rbegin()));
  }
  ll slope=-N,pre=0;
  for (auto x:mst){
    cur=cur+slope*(x-pre);
    slope++;
    pre=x;
    ans=min(ans,cur);
  }
  cout<<ans<<endl;
  return 0;
}
