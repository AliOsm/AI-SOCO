
#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>
#include <chrono>
#include <random>
#include <array>
#include <unordered_map>
#include <functional>
#include <complex>
#include <numeric>

template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

constexpr long long MAX = 5100000;
constexpr long long INF = 1LL << 60;
constexpr int inf = 1000000007;
//constexpr long long mod = 1000000007LL;
//constexpr long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;

int dh[] = { 1,-1,0,0 };
int dw[] = { 0,0,1,-1 };
int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/

	ll n, m; scanf("%lld %lld", &n, &m);
	vector<string> vs(n); for (int i = 0; i < n; i++) cin >> vs[i];
	{
		bool ok = true;
		for (int i = 0; i < n; i++) for (int j = 0; j < m; j++) if (vs[i][j] == '#') ok = false;
		if (ok) {
			puts("0");
			return 0;
		}
	}
	ll res = 0;
	bool wf = false, hf = false;
	for (int i = 0; i < n; i++) {
		string s = vs[i];
		s.erase(unique(s.begin(), s.end()), s.end());
		if (s == ".") {
			wf = true;
		}
	}
	for (int j = 0; j < m; j++) {
		string s;
		for (int i = 0; i < n; i++) {
			s += vs[i][j];
		}
		s.erase(unique(s.begin(), s.end()), s.end());
		if (s == ".") {
			hf = true;
		}

	}
	
	for (int i = 0; i < n; i++) {
		string s = vs[i];
		s.erase(unique(s.begin(), s.end()), s.end());
		if (s == ".") {
			if (hf) continue;
			else {
				puts("-1");
				return 0;
			}
		}
		bool ok = false;
		for (int i = 0; i < s.size(); i++) {
			if (s[i] == '#') {
				if (!ok) ok = true;
				else {
					puts("-1");
					return 0;
				}
			}
		}
	}

	for (int j = 0; j < m; j++) {
		string s;
		for (int i = 0; i < n; i++) {
			s += vs[i][j];
		}
		s.erase(unique(s.begin(), s.end()), s.end());
		if (s == ".") {
			if (wf) continue;
			else {
				puts("-1");
				return 0;
			}
		}
		bool ok = false;
		for (int i = 0; i < s.size(); i++) {
			if (s[i] == '#') {
				if (!ok) ok = true;
				else {
					puts("-1");
					return 0;
				}
			}
		}
	}
	vector<vector<bool>> used(n, vector<bool>(m, false));
	queue<pair<ll, ll>> q;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (used[i][j]) continue;
			if (vs[i][j] == '.') continue;
			res++;
			q.emplace(i, j);
			used[i][j] = true;
			while (!q.empty()) {
				ll h, w; tie(h, w) = q.front();
				q.pop();
				for (int k = 0; k < 4; k++) {
					int nh = h + dh[k];
					int nw = w + dw[k];
					if (nh < 0 or nh >= n or nw < 0 or nw >= m) continue;
					if (used[nh][nw]) continue;
					if (vs[nh][nw] == '.') continue;
					used[nh][nw] = true;
					q.emplace(nh, nw);
				}
			}
		}
	}
	cout << res << "\n";
	return 0;
}