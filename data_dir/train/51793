/*             
"IF U BELIEVE WHY NOT!!"
                       --Cristiano Ronaldo
*/             
#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
lli M=100000000;   
#define INF 1000000007
#define bip(n) __builtin_popcount(n)
typedef pair<lli,lli> ll;
#define mem(a,x) fill(&a[0], &a[0] + sizeof(a) / sizeof(a[0]), x)
#define mem1(a,x) fill(&a[0][0], &a[0][0] +sizeof(a)/sizeof(a[0][0]),x)
#define mem2(a,x) fill(&a[0][0][0], &a[0][0][0] +sizeof(a)/sizeof(a[0][0][0]),x)
#define fi1 ifstream fin("input.txt")
#define of1 ofstream fout("output.txt")
lli n,k,m;
lli z,q,u,l,r,ax,cx,ay,by,cy,ql,qr,d,x,y;
//unordered_map<pair<ll,lli>,lli> mp;
string s;
char a[505][505];
lli vis[505][505];
lli me(lli a,lli b,lli M)
{
    if(b==0)
    return 1;
    else if(b%2==0)
    return me((a*a)%M,b/2,M);
    else
    return (a%M*me((a*a)%M,(b-1)/2,M)%M)%M;
}
bool cmp(ll a,ll b)
{
    return a.first>b.first;
}
bool cmp1(ll a,ll b)
{
    return a.second<b.second;
}
lli mI(lli a,lli m)
{
    return me(a,m-2,m);
}
bool check(lli m)
{
    cout<<m<<endl;
    queue<char> q,q1;
    map<queue<char>,lli> ml;
    for(int j=0;j<m;j++)
    {
        q.push(s[j]);
    }
    ml[q]++;
    for(int j=n-m;j<n;j++)
    q1.push(s[j]);
    ml[q1]++;
    if(ml[q]==1)
    return false;
    for(int j=m;j<n-m+1;j++)
    {
        q.pop();
        q.push(s[j]);
        ml[q]++;
    }
    if(ml[q]>2)
    return true;
    return false;
}
struct edge
{
    lli x,y,z;
};
int main()
{
cin>>n;
for(int i=1;i<=n;i++)
{
    for(int j=1;j<=n;j++)
    cin>>a[i][j];
}
lli tot=0;
for(int i=1;i<=n;i++)
{
    for(int j=1;j<=n;j++)
    {
        if(a[i][j]=='X')
        {
            if((a[i-1][j-1]==a[i-1][j+1])&&(a[i-1][j-1]==a[i+1][j-1])&&(a[i-1][j-1]==a[i+1][j+1])&&(a[i-1][j-1]=='X'))
            {
                if(vis[i][j]==0)
                {
                vis[i][j]=1;
                if((i>1)&&(j<n))
                tot++;
                }
            }
        }
    }
}
cout<<tot;
}//