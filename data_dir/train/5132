/*******************************\
   Name:    REAJUL HAQUE REAYZ  |
   School:  COMILLA UNIVERSITY  |
            CSE (5TH BATCH)     |
********************************/
#include<bits/stdc++.h>
#define endl "\n"
#define inf 1<<30
#define pi acos(-1.0)
#define pb push_back
#define mp make_pair
#define ss stringstream
#define all(v) v.begin(), v.end()
#define mem(x,y) memset(x , y , sizeof(x))
#define bit_cnt(mask) __builtin_popcount(mask)
using namespace std;
typedef long long ll;
typedef pair < int , int > pii;
typedef pair < ll , ll > pll;
const int MOD = 1000000007; /// 1e9+7
const int MAX = 1111;
ll bigmod(ll n, ll r)
{
    if(r==0) return 1;
    if(r==1) return n;
    if(r%2==0)
    {
        ll ret = bigmod(n, r/2);
        return ((ret%MOD) * (ret%MOD)) % MOD;
    }
    else return ((n%MOD) * (bigmod(n,r-1)%MOD)) % MOD;
}
ll modinverse(ll a){return bigmod(a,MOD-2)%MOD;}
ll lcm(ll a, ll b) {a=abs(a); b=abs(b); return (a/__gcd(a,b))*b;}
ll gcd(ll a, ll b) {a=abs(a); b=abs(b); if(!b) return a; return __gcd(b,a%b);}

int n, m, k, sx, sy, fx, fy;
char s[MAX][MAX];
queue < pii > q;
int dis[MAX][MAX];
int grid[MAX][MAX];
int dx[]={+1,-1,0,0};
int dy[]={0,0,+1,-1};
bool valid(int x, int y){
    if(x>=0 and x<n and y>=0 and y<m and s[x][y]=='.') return true;
    else return false;
}
int bfs(){
    q.push(mp(sx,sy));
    dis[sx][sy]=0;
    while(!q.empty()){
        pii top = q.front(); q.pop();
        for(int i=0; i<4; i++){
            int tx = top.first;
            int ty = top.second;
            for(int j=0; j<k; j++){
                tx += dx[i];
                ty += dy[i];
                if(valid(tx,ty)){
                    if(dis[tx][ty]>dis[top.first][top.second]+1){
                        dis[tx][ty]=dis[top.first][top.second]+1;
                        if(tx==fx and ty==fy) return dis[fx][fy];
                        q.push(mp(tx,ty));
                    }
                }
                else break;
            }
        }
    }
    if(dis[fx][fy]==1e9) return -1;
    else return dis[fx][fy];
}
int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0);
    cin>>n>>m>>k;
    for(int i=0; i<n; i++){
        cin>>s[i];
        for(int j=0; j<m; j++){
            dis[i][j]=1e9;
        }
    }
    cin>>sx>>sy>>fx>>fy;
    sx--, sy--, fx--, fy--;
    cout<<bfs()<<endl;
    return 0;
}
