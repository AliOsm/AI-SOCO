#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define INF 1000000000000000000LL
#define IN freopen("C.in","r",stdin)
#define OUT freopen("output.txt","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 2

using namespace __gnu_pbds;
using namespace std ;

typedef pair<i64, i64> pi ;
typedef tree< pi, null_type, less<pi>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define maxn 1000005

int len[2][maxn] , cum[maxn] ;
char s[maxn] ;
int n ;
int howMany(int x, int y)
{
    if( x>y || x>n || y<1 ) return 0 ;
    return cum[y]-cum[x-1] ;
}

int main()
{
    int i , j , k , l , m  ;

    scanf("%d",&n) ;
    scanf("%s",s+1) ;


    int mx = 0 ;

    for(i=1 ; i<=n ; i++)
    {
        cum[i] = cum[i-1] ;
        if( s[i]=='G' ) cum[i]++ ;

        if( s[i]=='G' ) len[0][i] = len[0][i-1] + 1 ;
        mx = max(mx,len[0][i]) ;
    }
    for(i=n; i>=1 ; i--)
    {
        if( s[i]=='G' ) len[1][i] = 1+ len[1][i+1] ;
    }

    for(i=1 ; i<=n ; i++)
    {
        if( s[i]=='G' ) continue ;

        if( howMany( 1,i-1-len[0][i-1] ) > 0 || howMany( i+1+len[1][i+1],n ) > 0 )
            mx = max( mx , 1 + len[0][i-1] + len[1][i+1] ) ;
        if( howMany(1,i-1) > 0 ) mx = max( mx , len[1][i+1] + 1 ) ;
        if( howMany(i+1,n) > 0 ) mx = max( mx , len[0][i-1] + 1 ) ;

        mx = max( mx , len[0][i-1] + len[1][i+1] ) ;
    }

     printf("%d\n",mx) ;

    return 0 ;
}
