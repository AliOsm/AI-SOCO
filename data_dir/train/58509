/* OMA > teamskiy */

#ifdef LOCAL
  #include <iostream>
  #include <algorithm>
  #include <cstdio>
  #include <cstdlib>
  #include <vector>
  #include <cassert>
  #include <queue>
  #include <iomanip>
  #include <map>
  #include <cassert>
#else
  #include <bits/stdc++.h>
#endif

#define pb push_back
#define mp make_pair

#define f first
#define s second

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int MOD = (int) 1e9 + 7;
const int N = (int) 500 + 7;

int n, m;

vector<int> solve(int len) {
  vector<int> res;
  vector<int> even, odd;
  for (int i = 0; i < len; i += 2)
    even.pb(i);
  for (int i = 1; i < len; i += 2)
    odd.pb(i);
  if (len % 2 == 1) {
    for (auto it : odd) res.pb(it);
    for (auto it : even) res.pb(it);
  } else {
    for (auto it : odd) res.pb(it);
    for (auto it : even) res.pb(it);
  }
  return res;
}

vector<int> solve_flip(int len) {
  vector<int> res;
  vector<int> even, odd;
  for (int i = 0; i < len; i += 2)
    even.pb(i);
  for (int i = 1; i < len; i += 2)
    odd.pb(i);
  if (len % 2 == 1) {
    for (auto it : even) res.pb(it);
    for (auto it : odd) res.pb(it);
  } else {
    reverse(odd.begin(), odd.end());
    reverse(even.begin(), even.end());
    for (auto it : even) res.pb(it);
    for (auto it : odd) res.pb(it);
  }
  return res;
}

int main() {
  #ifdef LOCAL
  freopen("in.txt", "r", stdin);
  #endif

  ios_base::sync_with_stdio(0);
  cin.tie(0);

  cin >> n >> m;
  if (n == 1 && m == 1) {
    cout << "YES\n1";
    return 0;
  }
  if (n == 3 && m == 3) {
    cout << "YES\n";
    cout << "1 5 9\n6 7 3\n4 2 8";
    return 0;
  }
  if (n <= 3 && m <= 3) {
    cout << "NO";
    return 0;
  }
  cout << "YES\n";
  if (n <= m) {
    vector<int> v = solve(m);
    vector<int> vf = solve_flip(m);
    for (int i = 0; i < n; i++) {
      if (i & 1) {
        for (auto it : v)
          cout << it + i * m + 1 << ' ';
      } else {
        for (auto it : vf)
          cout << it + i * m + 1 << ' ';
      }
      cout << "\n";
    }
  } else {
    vector<vector<int>> ans;
    ans.resize(n);
    for (int i = 0; i < n; i++)
      ans[i].resize(m);

    vector<int> v = solve(n);
    vector<int> vf = solve_flip(n);
    for (int j = 0; j < m; j++) {
      if (j & 1) {
        for (int i = 0; i < n; i++) {
          ans[i][j] = v[i] * m + j + 1;
        }
      } else {
        for (int i = 0; i < n; i++) {
          ans[i][j] = vf[i] * m + j + 1;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      for (auto it : ans[i]) cout << it << ' ';
      cout << "\n";
    }
  }

  return 0;
}