#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse2")
#include <bits/stdc++.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);



#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define T pair<int, int>
#define ordered_set tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>

#define endl "\n"
#define Max(x,y,z) max(x,max(y,z))
#define Min(x,y,z) min(x,min(y,z))
#define fr(i,s,e) for(i=s;i<e;i++)
#define rf(i,s,e) for(i=s-1;i>=e;i--)
#define pb push_back
#define eb emblace_back
#define mp make_pair
#define ff first
#define ss second
#define int   long long
#define ll   long long
#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#define vl vector<long long>
#define inf (1LL<<61)
#define vi vector<int> 
#define vii vector< vector<int> >
#define vll vector< vector<long long> >
#define vpi vector< pair<int,int> >   
#define vpl vector< pair<ll,ll> >   
#define viii vector< vector<vector<int> > >
typedef pair<pair<int, int>,int> P;
#define cd complex<double>
#define PI 4*atan(1)
#define mod 1000000007
#define pi 3.14159265358979323846//20 decimals
#define ld long double
#define N 100009


int a,b,c;


ld x_intersection(int y)
{
    return (ld)(-c-b*y)/(ld)a;
}
ld y_intersection(int x)
{
    return (ld)(-c-a*x)/(ld)b;
}

int32_t main()
{
	IOS;
	#ifndef ONLINE_JUDGE
    freopen("int.txt","r",stdin);
    freopen("out.txt","w",stdout);
    #endif
   
    cin>>a>>b>>c;
    int x1,y1,x2,y2;
    cin>>x1>>y1>>x2>>y2;
    ld ans = abs(x1-x2)+abs(y1-y2);
    vector<pair<ld,ld>> v1(2);
    vector<pair<ld,ld>> v2(2);
    if(a==0)
    {
        v1[0].ff=x1;
        v2[0].ff=x2;
        v1[0].ss=(ld)(-c)/(ld)b;
        v2[0].ss=v1[0].ss;
    }
    else
    {
        v1[0].ff=x_intersection(y1);
        v2[0].ff=x_intersection(y2);


        v1[0].ss=y1;
        v2[0].ss=y2;
    }
    if(b==0)
    {
        v1[1].ss=y1;
        v2[1].ss=y2;
        v1[1].ff=(ld)(-c)/(ld)a;
        v2[1].ff=v1[1].ff;
    }
    else
    {
        v1[1].ss=y_intersection(x1);
        v2[1].ss=y_intersection(x2);
        v1[1].ff=x1;
        v2[1].ff=x2;
    }
    for(int i=0;i<2;i++)
    {
        for(int j=0;j<2;j++)
        {
            ld lans = abs(v1[i].ff-x1)+abs(v1[i].ss-y1)+abs(v2[j].ff-x2)+abs(v2[j].ss-y2);
            lans += sqrtl((v1[i].ff-v2[j].ff)*(v1[i].ff-v2[j].ff)+(v1[i].ss-v2[j].ss)*(v1[i].ss-v2[j].ss));
            ans = min(ans,lans);
        }
    }
    cout<<fixed<<setprecision(10);
    cout<<ans;
    return 0;
}