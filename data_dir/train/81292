#include <stdio.h>
#include <vector>
#define pb push_back
using namespace std;

vector <pair <int, int> > v;
vector <pair <int, int> > aux;

void answer(pair <int, int> &a) {
    printf("! %d %d\n", a.first, a.second);
    fflush(stdout);
    return;
}

int query(int a, int b) {
    char s[5];
    printf("? %d %d\n", a, b);
    fflush(stdout);
    scanf(" %s", s);
    if (s[0] == '<') {
        return -1;
    } else {
        return 1;
    }
}

void solve(void) {
    if ((int)v.size() == 1) {
        answer(v[0]);
        return;
    }

    aux.clear();
    for (int i = 0; i < (int)v.size() - 1; i += 2) {
        int a = query(v[i].first, v[i + 1].first);
        int b = query(v[i].second, v[i + 1].second);
        if (a == -1) {
            aux.pb(make_pair(v[i].first, 0));
        } else {
            aux.pb(make_pair(v[i + 1].first, 0));
        }
        if (b == -1) {
            aux.back().second = v[i + 1].second;
        } else {
            aux.back().second = v[i].second;
        }
    }
    if ((int)v.size() & 1) {
        aux.pb(v.back());
    }
    v.clear();
    for (int i = 0; i < (int)aux.size(); i++) {
        v.pb(aux[i]);
    }
    solve();
    return;
}


int main(void) {
    int t;
    int n;

    scanf(" %d", &t);
    while(t--) {
        scanf(" %d", &n);
        v.clear();
        for (int i = 1; i < n; i += 2) {
            int a = query(i, i + 1);
            if (a == -1) {
                v.pb(make_pair(i, i + 1));
            } else {
                v.pb(make_pair(i + 1, i));
            }
        }
        if (n & 1) {
            v.pb(make_pair(n, n));
        }

        solve();
    }
    return 0;
}
