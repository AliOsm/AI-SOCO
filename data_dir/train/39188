#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=1e5+10;
const int mxl=22;
pair<int,int>a[mxl][mx];
int ft[mx];
void upd(int i,int v){
  for(++i;i<mx;i+=(i&-i))ft[i]+=v;
}
int qry(int i){
  int a=0;
  for(++i;i>0;i-=(i&-i))a+=ft[i];
  return a;
}
int rng(int l,int r){
  return qry(r)-qry(l-1);
}
pair<int,int>qry(int l,int r){
  int len=32-__builtin_clz(r-l+1)-1;
  return {
    min(a[len][l].first,a[len][r-(1<<len)+1].first),
    max(a[len][l].second,a[len][r-(1<<len)+1].second)
  };
}
int main(){
  int n;
  scanf("%d",&n);
  n+=2;
  for(int i=0;i<n;i++){
    scanf("%d",&a[0][i].first);
    a[0][i].second=a[0][i].first;
  }
  for(int l=1;l<mxl;l++){
    for(int i=0;i<n;i++){
      a[l][i]=a[l-1][i];
      int j=i+(1<<(l-1));
      if(j<n){
        a[l][i]={
          min(a[l][i].first,a[l-1][j].first),
          max(a[l][i].second,a[l-1][j].second)
        };
      }
    }
  }
  int li=abs(a[0][1].first-a[0][0].first);
  int ls=1e9;
  int ans=-1;
  while(li<=ls){
    int d=(li+ls)>>1;
    memset(ft,0,sizeof ft);
    upd(n-1,1);
    /* 
       i i+1
       ..........[.][.].....[.].......
    */
    for(int i=n-2;i>=0;i--){
      int x=a[0][i].first;
      if(abs(a[0][i].first-a[0][i+1].first)>d)continue;      
      int from=i+1,to=n-1,idx=to;
      while(from<=to){
        int mid=(from+to)>>1;
        auto q=qry(i,mid);
        if(x-d<=q.first && q.second<=x+d){
          idx=mid,from=mid+1;
        }
        else{
          to=mid-1;
        }
      }
      if(rng(i+1,idx)>0)upd(i,1);
    }
    if(qry(0))ans=d,ls=d-1;
    else li=d+1;
  }
  printf("%d\n",ans);
  return 0;
}
