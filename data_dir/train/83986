/// I won't go back on my word, that's my ninja way!
#include<bits/stdc++.h>
using namespace std;
const int N = 2e3+5 ;
int n ,t ;
double p ,mem[N][N] ;
double solve(int remP,int remT){
    if(remP==0) return n;
    if(!remT) return n - remP ;
    double &ret = mem[remP][remT] ;
    if(ret == ret)return ret;
    return ret = solve(remP,remT-1)*(1.0-p) + solve(remP-1,remT-1)*p ;
}
int main(){
    cin >> n >> p >> t ;
    memset(mem,-1,(n+1)*sizeof mem[0]);
    cout << fixed << setprecision(15) << solve(n,t) ;
    return 0 ;
}
