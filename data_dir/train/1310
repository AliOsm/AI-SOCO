#include<bits/stdc++.h>
#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define int long long int 
using namespace std;
vector<int> adj[26];
int visit[26]={};
int state[26]={};
stack<int> st;
void dfs(int s)
{
    visit[s] = 1;
    state[s]=1;
    for(auto it:adj[s])
    {
        if(state[it]==1)
        {
            cout<<"Impossible";
            exit(0);
        }
        if(!visit[it])
            dfs(it);
    }
    st.push(s);
    state[s]=2;
}
signed main()
{
    fast; 
    int n;
    cin>>n;
    vector<string> s(n);
    for(int i=0;i<n;i++)
        cin>>s[i];
    for(int i=0;i<n-1;i++)
    {
        int j;
        for(j=0;j<min(s[i].size(),s[i+1].size());j++)
        {
            if(s[i][j]!=s[i+1][j])
            {
                adj[s[i][j]-'a'].push_back(s[i+1][j]-'a');
                break;
            }
        }
        if(j==s[i+1].size())
        {
            if(s[i].size()>s[i+1].size())
            {
                cout<<"Impossible";
                return 0;
            }
        }
    }
    for(int i=0;i<26;i++)
    {
        if(!visit[i])
            dfs(i);
    }
    while(!st.empty())
    {
        cout<<(char)(st.top()+'a');
        st.pop();
    }
}   