#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
template <class T> ll size(const T &x) { return x.size(); }
#define rep(i,a,b) for(ll i = (a); i < (b); i++)
#define iter(it,c) for(auto it = (c).begin(); it != (c).end();++it)
#define pb push_back
#define fs first
#define sc second
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector<ii> vii;

const ll INF = ~(1<<31);
const double pi = acos(-1);
const double EPS = 1e-9;

string comp;
ll sz;
ll distinct;

ii memo[20][(1<<12)][3];
bool vis[20][(1<<12)][3];

ll mod = 998244353;
ll pw(ll a, ll v) {
	ll start = 1;
	rep(i,0,v) {
		start *= a;
		start %= mod;
	}
	return start;
}


ii num_ways(ll at, ll bitmask, ll isgreater) {
	ll nb = __builtin_popcount(bitmask);
	if(nb > distinct) return ii(0,0);
	if(at >= sz) {
		if(isgreater) return ii(0,0);
		return ii(0,1);
	}
	if(vis[at][bitmask][isgreater]) return memo[at][bitmask][isgreater];

	ll sum = 0;
	ll nm_ws = 0;

	rep(i,at != sz-1 ? 0 : 1,10) {
		if(i == comp[at]-'0') {
			ii asn = num_ways(at+1, bitmask | (1<<i), isgreater);
			if(i != 0 && at != sz-1 && __builtin_popcount(bitmask|(1<<i)) <= distinct) {
				asn.sc += 1;
			}
			asn.sc %= mod;
			asn.fs %= mod;
			sum += asn.fs;
			sum %= mod;
			sum += ((((asn.sc*pw(10,at))%mod)*i)%mod);
			sum %= mod;
			nm_ws += asn.sc;
			nm_ws %= mod;

		} else if(i < comp[at]-'0') {
			ii asn = num_ways(at+1, bitmask | (1<<i), 0);
			if(i != 0 && at != sz-1 && __builtin_popcount(bitmask|(1<<i)) <= distinct) {
				asn.sc += 1;
			}
			asn.sc %= mod;
			asn.fs %= mod;
			sum += asn.fs;
			sum %= mod;
			sum += ((((asn.sc*pw(10,at))%mod)*i)%mod);
			sum %= mod;
			nm_ws += asn.sc;
			nm_ws %= mod;

		} else {
			ii asn = num_ways(at+1, bitmask | (1<<i), 1);
			if(i != 0 && at != sz-1 && __builtin_popcount(bitmask|(1<<i)) <= distinct) {
				asn.sc += 1;
			}
			asn.sc %= mod;
			asn.fs %= mod;
			sum += asn.fs;
			sum %= mod;
			sum += ((((asn.sc*pw(10,at))%mod)*i)%mod);
			sum %= mod;
			nm_ws += asn.sc;
			nm_ws %= mod;

		}
	}
	vis[at][bitmask][isgreater] = true;
	return memo[at][bitmask][isgreater] = ii(sum%mod,nm_ws%mod);
}

ii calc(ll n, ll k) {
	if(n <= 0) return ii(0,0);
	comp = to_string(n);
	reverse(comp.begin(), comp.end());
	memset(vis,0,sizeof(vis));
	sz = comp.size();
	distinct = k;
	return num_ways(0,0,0);
}

int main() {
    cin.sync_with_stdio(false);
	ll L,R,K;
	cin >> L >> R >> K;
	cout << (calc(R,K).fs-calc(L-1,K).fs+mod)%mod << endl;
    return 0;
}


