#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <vector>
#include <algorithm>
#include <cstring>
#include <iostream>
#include <queue>
using namespace std;
#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for(int i=(a);i<=(b);i++)
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)

int nextint()
{
	int t;
	if(scanf("%d",&t)!=1) exit(0);
	return t;
}
const int INF=1000000000;
const int MOD=1000000007;
typedef long long ll;

int testbit(int n, int i)
{
	return (n>>i)&1;
}

int cnt[2][2];

int gcd(int a,int b)
{
	return b?gcd(b,a%b):a;
}

int main()
{
	int w=nextint();
	int h=nextint();
	REP(i,w+1) REP(j,h+1)
	{
		cnt[i&1][j&1]++;
	}
	ll res=0;
	REP(i,(1<<6))
	{
		int px1=testbit(i,0);
		int py1=testbit(i,1);
		int px2=testbit(i,2);
		int py2=testbit(i,3);
		int px3=testbit(i,4);
		int py3=testbit(i,5);
		int used[2][2]={};
		if((px2-px1)*(py3-py1)-(py2-py1)*(px3-px1)==0)
		{
			ll tres=1;
			tres=tres*(cnt[px1][py1]-used[px1][py1])%MOD;
			used[px1][py1]++;
			tres=tres*(cnt[px2][py2]-used[px2][py2])%MOD;
			used[px2][py2]++;
			tres=tres*(cnt[px3][py3]-used[px3][py3])%MOD;
			used[px3][py3]++;
			res=(res+tres)%MOD;
		}
	}

	REP(i,w+1) REP(j,h+1)
	{
		if(i+j!=0)
		{
			int cnt=gcd(i,j)-1;
			ll val=cnt;
			if(i!=0&&j!=0)
				val*=2;
			val*=6;
			res=((res-(w-i+1)*(h-j+1)%MOD*val%MOD)%MOD+MOD)%MOD;
		}
	}
	cout<<res<<endl;
	return 0;
}
