#include <cstdio>

#include <cmath>

#include <cstring>

#include <iostream>

#include <algorithm>

#include <queue>

#include <vector>

#include <map>



using namespace std;



typedef long long LL;


int n,m,a[200005],b[200005],f[500005];
int num,ans,ans1,ans2,dq1,dq2;

int main()

{
    scanf("%d",&n);
    for (int i=1;i<=n;++i) scanf("%d",&a[i]);
    scanf("%d",&m);
    for (int i=1;i<=m;++i) scanf("%d",&b[i]);
    for (int i=1;i<=n;++i)
    {
        ++num;f[num]=a[i];
    }
    for (int i=1;i<=m;++i)
    {
        ++num;f[num]=b[i];
    }
    sort(f+1,f+num+1);
    num=unique(f+1,f+num+1)-(f+1);
    for (int i=1;i<=n;++i) a[i]=lower_bound(f+1,f+num+1,a[i])-f;
    for (int i=1;i<=m;++i) b[i]=lower_bound(f+1,f+num+1,b[i])-f;
    ans=(n-m)*2;ans1=2*n;ans2=2*m;
    sort(a+1,a+n+1);
    sort(b+1,b+m+1);
    for (int i=1;i<=num;++i)
    {
        dq1=lower_bound(a+1,a+n+1,i)-a;
        dq1=(n-dq1+1)*3+(dq1-1)*2;
        dq2=lower_bound(b+1,b+m+1,i)-b;
        dq2=(m-dq2+1)*3+(dq2-1)*2;
        if (dq1-dq2>ans)
        {
            ans=dq1-dq2;
            ans1=dq1;ans2=dq2;
        }
        else
        if (dq1-dq2==ans&&dq1>ans1)
        {
            ans=dq1-dq2;
            ans1=dq1;ans2=dq2;
        }
    }
    printf("%d:%d\n",ans1,ans2);
    return 0;

}