#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
 
using namespace std;
using namespace __gnu_pbds;
 
#define debug(s) cerr << #s << " = " << s << '\n'
#define all(v) (v).begin(), (v).end()
#define mem(a,val) memset(a, val, sizeof a)
 
#define ff first
#define ss second
typedef long long ll;
 
//typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

const int N = 10010;
int n, k, arr[N];
map<int, bool> mp;

int main() {
  int tc;
  scanf("%d", &tc);
  while (tc--) {
    mp.clear();
    scanf("%d %d", &n, &k);
    for (int i = 1; i <= n; ++i) {
      scanf("%d", &arr[i]);
      mp[arr[i]] = 1;
    }
    int cnt = mp.size();
    if (cnt > k) {
      puts("-1");
      continue;
    }
    for (int i = 1; i <= n; ++i) {
      if (cnt == k) break;
      if (!mp[i]) {
        mp[i] = 1;
        cnt++;
      }
    }
    int m = n * cnt;
    printf("%d\n", m);
    while (n--) {
      for (auto p: mp) printf("%d ", p.ff);
    }
    puts("");
  }
}