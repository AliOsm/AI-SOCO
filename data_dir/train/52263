#include <functional>
#include <algorithm>
#include <iostream>
#include <fstream>
#include <cstdlib>
#include <numeric>
#include <iomanip>
#include <cstring>
#include <cassert>
#include <memory>
#include <chrono>
#include <cstdio>
#include <bitset>
#include <vector>
#include <math.h>
#include <queue>
#include <stack>
#include <ctime>
#include <set>
#include <unordered_map>

using namespace std;

#define rep(i,a,n) for (int i=(a);i<(n);i++)
#define per(i,n,a) for (int i=(n)-1;i>=(a);i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second

typedef long long ll;
typedef double ld;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;

template <typename T>
T nextInt() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if (ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return x * p;
}

const int maxn=(int)1e6+10;
const int inf=(int)1e9+5;
const int mod=(int)1e9+7;
const ll llinf=(ll)1e18+5;
const ld pi=acos(-1.0);

int n,k;

int lg[maxn];
int s[maxn][20],t[maxn][20];

int v[maxn],c[maxn],a[maxn];

void build(){
    lg[1]=0;
    rep(i,2,n+1)lg[i]=lg[i/2]+1;
    rep(i,0,n)s[i][0]=v[i]*100,t[i][0]=c[i];
    rep(j,1,20){
        rep(i,0,n-(1<<j)+1){
            s[i][j]=max(s[i][j-1],s[i+(1<<j)/2][j-1]);
            t[i][j]=min(t[i][j-1],t[i+(1<<j)/2][j-1]);
        }
    }
}

int getmax(int l,int r){
    int k=lg[r-l+1];
    return max(s[l][k],s[r-(1<<k)+1][k]);
}
int getmin(int l,int r){
    int k=lg[r-l+1];
    return min(t[l][k],t[r-(1<<k)+1][k]);
}

int main(){

   // freopen("input.txt","r",stdin);
   // freopen("output.txt","w",stdout);
    scanf("%d%d",&n,&k);
    rep(i,0,n){
        scanf("%d",v+i);
    }
    rep(i,0,n)scanf("%d",c+i);
    build();
    rep(i,0,n){
        int lf=i,rg=n-1;
        rep(iter,0,20){
            int mid=(lf+rg)/2;
            if(getmax(i,mid)<=getmin(i,mid)){
                lf=mid;
            }else rg=mid;
        }
        rep(j,max(i,lf-2),min(n,lf+3))
            a[i]=max(a[i],min(getmax(i,j),getmin(i,j)));
    }
    sort(a,a+n);
    ld coeff=1.0*k/n;
    ld res=0.0;
    rep(i,0,n){
        if(n-i-1<k-1)break;
        res+=a[i]*coeff;
        coeff=coeff*(n-i-k)/1.0/(n-i-1);
    }
    printf("%.15f\n",(double)res);
    return 0;
}
