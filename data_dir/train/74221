#include <iostream>
#include <map>
#include <vector>
#include <set>
#include <algorithm>
#include <cmath>
#include <assert.h>
#include <queue>
#include <iomanip>
using namespace std;

#define all(a) (a).begin(), (a).end()

#define x1 kek1
#define y1 kek2

template <typename T, typename T2>
void update(T& a, T2 b) {
    a = min(a, b);
}

long long x1, y1;
long long x2, y2;

int n;

string s;

long long xd, yd;

pair<bool, long long> check(long long k) {
    long long cur_x = x1 + k * xd;
    long long cur_y = y1 + k * yd;

    for (int i = 0; i <= n; ++i) {
        if (abs(cur_x - x2) + abs(cur_y - y2) <= k * n + i) {
            return {1, k * n + i};
        }

        if (i != n) {
            if (s[i] == 'U') {
                ++cur_y;
            }
            if (s[i] == 'D') {
                --cur_y;
            }
            if (s[i] == 'L') {
                --cur_x;
            }
            if (s[i] == 'R') {
                ++cur_x;
            }
        }
    }

    return {0, -1};
}

int main() {
    // freopen("in.txt", "rt", stdin);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    srand(time(0));

    cin >> x1 >> y1;
    cin >> x2 >> y2;

    cin >> n;

    cin >> s;
    for (int i = 0; i < n; ++i) {
        if (s[i] == 'U') {
            ++yd;
        }
        if (s[i] == 'D') {
            --yd;
        }
        if (s[i] == 'L') {
            --xd;
        }
        if (s[i] == 'R') {
            ++xd;
        }
    }

    long long l = 0;
    long long r = (long long)1e10;

    while (r - l > 1) {
        long long c = (l + r) / 2;

        if (check(c).first)
            r = c;
        else
            l = c;
    }

    if (check(l).first) {
        cout << check(l).second << "\n";
    } else if (check(r).first) {
        cout << check(r).second << "\n";
    } else {
        cout << "-1\n";
    }
}
