#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<ll, ll> pii;

const long double eps = 1e-9;

#define MOD 1000000007
#define MAX 200005

typedef complex<double> point;
const double EPS = 1e-9;

int ar[] = {1, -1, 0, 0, 1, 1, -1, -1};
int ac[] = {0, 0, 1, -1, 1, -1, 1, -1};

bool ok(int r, int c) {
    return r > 0 && c > 0;
}

int main() {
#ifdef Adel_SaadEddin_PC
    freopen("input.txt", "r", stdin);
//    freopen("output.out", "w", stdout);
#endif //
    ios_base::sync_with_stdio(false);

    pii src, dst; cin >> src.first >> src.second >> dst.first >> dst.second;

    int n; cin >> n;
    map<pii, bool> vis;
    map<pii, int> dist;

    dist[dst] = -1;

    for(int i = 0; i < n; i++) {
        int r, a, b; cin >> r >> a >> b;

        for(int i = a; i <= b; i++) {
            vis[pii(r, i)] = true;
            dist[pii(r, i)] = -1;
        }
    }

    queue<pii> qu;

    qu.push(src);
    dist[src] = 0;

    while(!qu.empty()) {
        pii p = qu.front();
        qu.pop();

        int r = p.first, c = p.second;

        for(int i = 0; i < 8; i++) {
            int nr = r + ar[i];
            int nc = c + ac[i];

            if(ok(nr, nc)) {
                if(vis[pii(nr, nc)]) {
                    if(dist[pii(nr, nc)] == -1) {
                        dist[pii(nr, nc)] = dist[p] + 1;
                        qu.push(pii(nr, nc));
                    }
                }
            }
        }
    }

    cout << dist[dst] << "\n";

    return 0;
}


