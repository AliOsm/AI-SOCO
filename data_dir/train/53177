#pragma comment(linker, "/STACK:33554432")

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

using namespace std;

typedef long long LL;
typedef vector<int> vint;


int n;

int dp1[3010][3010];
int dp2[3010];
int a[3][3010];


int go(int pos)
{
	int & res = dp2[pos];
	if (res != -1)
		return res;
	res = 0;
	for(int i = pos + 2; i < n; ++i)
		res = max(res, a[0][i] + dp1[pos + 1][i] + go(i));
	res = max(res, dp1[pos + 1][n]);
	return res;
}

int main()
{
	scanf("%d", &n);
	for(int j = 0; j < 3; ++j)
		for(int i = 0; i < n; ++i)
			scanf("%d", &a[j][i]);
	if (n == 1)
	{
		printf("%d\n", a[0][0]);
		return 0;
	}
	for(int i = 1; i < n - 1; ++i)
		dp1[i][i + 1] = a[2][i];
	dp1[0][1] = a[1][0];
	dp1[n - 1][n] = a[1][n - 1];
	for(int i = 2; i <= n; ++i)
		dp1[0][i] = dp1[0][i - 1] + a[1][i - 1];
	for(int i = n - 2; i >= 0; --i)
		dp1[i][n] = dp1[i + 1][n] + a[1][i];
	for(int len = 2; len <= n; ++len)
		for(int i = 1; i < n - len; ++i)
			dp1[i][i + len] = max(dp1[i + 1][i + len] + a[1][i], dp1[i][i + len - 1] + a[1][i + len - 1]);
	memset(dp2, -1, sizeof(dp2));
	int res = 0;
	for(int i = 0; i < n; ++i)
		res = max(res, dp1[0][i] + a[0][i] + go(i));
	printf("%d\n", res);
	return 0;
}