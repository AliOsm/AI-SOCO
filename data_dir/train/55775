#include <iostream>
#include <string>
#include <cstring>
#include <stdio.h>
#include <iomanip>
#include <math.h>
#include <vector>
#include<cctype>
#include<algorithm>
#include<set>
#include<stack>
#include<map>
#include<time.h>
#include<iterator>
#include <deque>
#include <sstream>
#include<queue>
#include<stdlib.h>
#include<bitset> 
#include <utility>
#include<assert.h>
#include<limits.h>

#define fn(i,n) for(int (i) = 0;(i) < (n);(i)++)
#define f1n(i,n) for(int (i) = 1;(i) <= (n);(i)++)
#define mk(f,s) make_pair((f),(s))

#define defV(dp,e) memset(dp,e,sizeof dp)

#define ri(n) scanf("%d",&n)
#define rl(n) scanf("%lld",&n)
#define rs(s) scanf("%s",s)

#define PI acos(-1.0)

using namespace std;

typedef long long ll;
typedef pair<int, int > pp;

typedef vector<int  > v1;
typedef vector<ll  > vl;
typedef vector<pp  > vpp;
typedef vector<bool  > vb;
typedef vector<char > vc;
typedef vector<v1 > v2;

int const bound = 2e6 + 2, N = 5e5 + 2;
ll OO = 1e18;
double eps=1e-6;
int oo = 1e9, mod =oo+7;

v1 nxt[2][26];
int n;
string s;

int main(){
    cin>>n;
    cin>>s;
    fn(i,n){
        if(s[i]>='A'&&s[i]<='Z')nxt[1][s[i]-'A'].push_back(i);
        else nxt[1][s[i]-'A'].push_back(i);
    }
    int mx=0;
    fn(i,n){
        if(s[i]>='A'&&s[i]<='Z')continue;
        int res=1;
        set<char > ins;
        ins.insert(s[i]);
        int j=i-1;
        while(j>-1&&!(s[j]>='A'&&s[j]<='Z')){
            ins.insert(s[j]);
            j--;
        }
        mx=max(mx,(int)ins.size());
    }
    cout<<mx<<endl;
    return 0;
}
