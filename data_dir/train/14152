#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

struct val_ind
{
    int val, ind;
};

bool cmp_val(const val_ind& A, const val_ind& B) { return A.val<B.val; }

const int MAXN=1009;
int n, m;
val_ind v[MAXN];
val_ind v_or[MAXN];
bool removed[MAXN];
vector<int> e[MAXN];

typedef long long ll;

int main()
{
    cin >> n >> m;
    for(int i=1; i<=n; i++)
    {
        cin >> v[i].val;
        v[i].ind=i;
        v_or[i]=v[i];
    }

    int x, y;
    for(int i=0; i<m; i++)
    {
        cin >> x >> y;
        e[x].push_back(y);
        e[y].push_back(x);
    }

    for(int i=1; i<=n; i++) removed[i]=false;

    sort(v+1, v+n+1, cmp_val);
    ll result=0LL;
    for(int i=n; i>=1; i--)
    {
        int curr=v[i].ind;
        removed[curr]=true;
        for(size_t j=0; j<e[curr].size(); j++)
        {
            int ngh=e[curr][j];
            if(!removed[ngh]) result+=v_or[ngh].val;
        }
    }
    cout << result;
    return 0;
}
