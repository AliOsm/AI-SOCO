#include "bits/stdc++.h"
#define MAXN 100009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(__typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second
#define my_little_dodge 46
#define debug(x)  cerr<< #x <<" = "<< x<<endl;
using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
int n,m,ans,par[MAXN],arr[11][MAXN],id[11][MAXN],ata[11*MAXN];
int s[MAXN<<2],L[MAXN<<2][11],R[MAXN<<2][11],last;
int tap(int x){
	if(ata[x]==x)
		return x;
	return tap(ata[x]);	
}
stack<int>st;
bool merge(int x,int y){
	//~ cout<<x<<" "<<y<<endl;
	if((x=tap(x))==(y=tap(y)))
		return 0;
	if(rand()&1)
		swap(x,y);
	st.push(y);	
	ata[y]=x;return 1;
}
int tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return 0;
	if(l<=x and y<=r){
		if(~last){
			for(int i=1;i<=n;i++)
				if(arr[i][x-1]==arr[i][x])
					ans+=merge(R[last][i],L[nd][i]);		
		}
		last=nd;
		return s[nd];
	}
	int mid=(x+y)>>1;
	return tap(l,r,nd<<1,x,mid)+tap(l,r,nd<<1|1,mid+1,y);
}
void build(int nd,int x,int y){
	if(x==y){
		for(int i=1;i<=n;i++)
			L[nd][i]=R[nd][i]=id[i][x];
		s[nd]=par[x];
		return;
	}
	int mid=(x+y)>>1;
	build(nd<<1,x,mid);
	build(nd<<1|1,mid+1,y);
	s[nd]=s[nd<<1]+s[nd<<1|1];
	for(int i=1;i<=n;i++)
		if(arr[i][mid]==arr[i][mid+1])
			s[nd]-=merge(R[nd<<1][i],L[nd<<1|1][i]);
	//~ printf("between [%d,%d]\n",x,y);		
	//~ debug(s[nd]);
	for(int i=1;i<=n;i++){
		L[nd][i]=tap(L[nd<<1][i]);
		R[nd][i]=tap(R[nd<<1|1][i]);
		//~ debug(L[nd][i]);
		//~ debug(R[nd][i]);
	}
}		
int main(){
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif	
	srand((unsigned)time(NULL));
	int q;
	scanf("%d%d%d",&n,&m,&q);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			scanf("%d",&arr[i][j]);
	int node=0;		
	for(int j=1;j<=m;j++){
		int last=node;
		for(int i=1;i<=n;i++){
			if(arr[i][j]!=arr[i-1][j])
				node++;
			id[i][j]=node;	
		}
		par[j]=(node-last);
	}
	//~ wr
	//~ for(int i=1;i<=n;i++){
		//~ for(int j=1;j<=m;j++)
			//~ cout<<id[i][j]<<" ";
		//~ cout<<endl;	
	//~ }
	//~ wr
	for(int i=1;i<=node;i++)
		ata[i]=i;
	build(1,1,m);
	while(!st.empty()){
		int nd=st.top();st.pop();
		ata[nd]=nd;
	}
	while(q--){
		int l,r;
		scanf("%d%d",&l,&r);ans=0;last=-1;
		printf("%d\n",tap(l,r,1,1,m)-ans);
		while(!st.empty()){
			int nd=st.top();st.pop();
			ata[nd]=nd;
		}
	}	
	return 0;
}
