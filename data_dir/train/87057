#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#define oo 987654321
#define INT long long
#define MOD 1000000007
#include <vector>
#include <string>
using namespace std;

string s;
int dt[5001][5001], ans[5001], n;
int dp(int l, int r)
{
    if( l > r ) return 1;
    if( l == r ) return dt[l][r] = 1;
    if( ~dt[l][r] ) return dt[l][r];
    if( s[l] == s[r] ) return dt[l][r] = dp(l+1, r-1);
    return dt[l][r] = 0;
}
int solve(int l, int r)
{
    if( l > r ) return 0;
    if( l == r ) return 0;
    int md = (l+r)/2;
    if( (r-l+1) % 2 == 0 )
    {
        if( dt[l][md] and dt[md+1][r] ) return solve(l, md) + 1;
        return 0;
    }
    else
    {
        if( dt[l][md-1] and dt[md+1][r] ) return solve(l, md-1) + 1;
        return 0;
    }
}
int main()
{
    ios::sync_with_stdio(0);
    memset(dt, -1, sizeof(dt));
    cin>>s; n = s.size();
    for(int i = 0 ; i < n ; i++ )
        for(int j = i ; j < n ; j++ )
            dp(i, j);
    for(int i = 0 ; i < n ; i++ )
        for(int j = i ; j < n ; j++ )
        {
            if( dt[i][j] )
            {
                int p = solve(i,j)+1;
                for(int k = 1 ; k <= p ; k++)
                    ans[k]++;
            }
        }
    for(int i = 1 ; i <= n ; i++ ) cout<<ans[i]<<" ";
}