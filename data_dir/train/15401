#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <string>
#include <cstring>
#include <cstdio>
// Kobe is the GOAT
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
// Stack, Bitmask, Dsu 
using namespace std;

int n, m;
const int MAXN = 200005;
int x[MAXN], t[MAXN];
vector<int> d;

int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> m;

	for(int i = 0; i < n + m; i++)
		cin >> x[i];
	for(int i = 0; i < n + m; i++)
	{
		cin >> t[i];
		if(t[i] == 1)
			d.push_back(x[i]);
	}

	int idx = 0;
	for(int i = 0; i < d.size(); i++)
	{
		int counter = 0;
		if(i == d.size() - 1)
		{
			while(idx < n + m)
			{
				if(t[idx] == 0)
					counter++;
				idx++;
			}
		}
		while(idx < n + m && abs(x[idx] - d[i]) <= abs(x[idx] - d[i + 1]))
		{
			if(t[idx] == 0)
				counter++;
			idx++;
		}
		cout << counter << " ";	
	}
	cout << "\n";
	return 0;
}
