#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>
#include <list>
#include <complex>

#define ll long long
#define ld long double
#define ull unsigned ll
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vpii vector<pii>
#define vvi vector<vector<int>>
#define endl '\n'
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 1e9;
ll LINF = (ll)4e18;
using namespace std;
ll mod = 1e9 + 7;
ll mod2 = 1e9 + 123;
#define M_PI       3.14159265358979323846   // pi

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("divisors.in", "r", stdin);
	//freopen("divisors.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	srand(time(0));
	int n, k;
	cin >> n >> k;
	vi a(n);
	int mx = -1e9;
	forn(i, 0, n) cin >> a[i];
	forn(b, 1, n) {
		int c1 = b, c2 = b;
		vi q = a;
		while (c1 < n) {
			q[c1] = 0;
			c1 += k;
		}
		while (c2>=0) {
			q[c2] = 0;
			c2 -= k;
		}
		int e = 0, e2 = 0;
		forn(i, 0, n) {
			if (q[i] == 1) e++;
			if (q[i] == -1) e2++;
		}
		mx = max(mx, abs(e - e2));
	}
	cout << mx;
	return 0;
}