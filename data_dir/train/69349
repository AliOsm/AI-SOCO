#include<bits/stdc++.h>
using namespace std;
long long n,m,k,q,a[200001][2],b[200001],x,y,dp[200001][2];

long long trans(long long j,long long u,long long i,long long v){
	long long p = lower_bound(b+1,b+q+1,a[j][u])-b,ret=1000000000;
	if(p<=q){
		ret = abs(a[j][u]-b[p]) + abs(a[i][v^1]-b[p]) + abs(a[i][v]-a[i][v^1]);
	}
	p = upper_bound(b+1,b+q+1,a[j][u])-b-1;
	if(p){
		ret=min(ret,abs(a[j][u]-b[p])+abs(a[i][v^1]-b[p])+abs(a[i][v]-a[i][v^1]));
	}
	return ret;
}
int main(){
	cin >> n >> m >> k >> q;
	for(int i = 1 ; i <= n ; i += 1){
		a[i][0] = 1000000000;
		a[i][1] = -1000000000;
	}
	for(int i = 1 ; i <= k ; i += 1){
		cin >> x >> y;
		a[x][0] = min(a[x][0],y);
		a[x][1] = max(a[x][1],y);
	}
	a[1][0]=1;
	a[1][1] = max(a[1][1],1ll);
	for(int i = 1 ; i <= q ; i += 1){
		cin>>b[i];
	}
	sort(b+1,b+q+1);
	for(int i = 0 ; i < 200001 ; i += 1){
		for(int j = 0 ; j < 2 ; j += 1){
			dp[i][j] = 1000000000000000000;
		}
	}
	dp[1][0] = abs(a[1][1]-1) + abs(a[1][1]-a[1][0]);
	dp[1][1] = abs(a[1][1]-1);
	int j = 1;
	for(int i = 2 ; i <= n ; i += 1){
		if(a[i][0] == 1000000000){
			continue;
		}
		for(int v = 0 ; v < 2 ; v += 1){
			for(int u = 0 ; u < 2 ; u += 1){
				dp[i][v]=min(dp[i][v],dp[j][u]+trans(j,u,i,v)+i-j);
			}
		}
		j=i;
	}
	cout << min(dp[j][0],dp[j][1]);
}