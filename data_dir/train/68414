#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <fstream>
#define endl "\n"
#define c0 ios_base :: sync_with_stdio(0); cin.tie (0);
#define s second
#define f first
#define ll long long
#define ull unsigned ll
using namespace std;

const int MaxN = 1e5 + 17;
const ll INF = 1e9 + 17;
const int MOD = 1e9 + 17;
const double eps = 1e-9;

ll a[MaxN], n, Max1, Max = -INF, Sum;
vector < ll int > d;

int main()
{
    #ifdef DEBUG
        freopen (".in", "r", stdin);
        freopen (".out", "w", stdout);
    #endif
    scanf ("%I64d", &n);
    for (int i = 1; i <= n; ++ i)
    {
        scanf ("%I64d", a + i);
        if (i >= 2)
            d.push_back (abs (a[i - 1] - a[i]));
    }
    for (int i = 0; i < d.size(); ++ i)
    {
        if (i % 2 == 0)
            Sum += d[i];
        else
            Sum -= d[i];
        Max = max (Sum - Max1, Max);
        Max1 = min (Max1, Sum);
    }
    Sum = 0;
    Max1 = 0;
    for (int i = 0; i < d.size(); ++ i)
    {
        if (i % 2 == 1)
            Sum += d[i];
        else
            Sum -= d[i];
        Max = max (Sum - Max1, Max);
        Max1 = min (Max1, Sum);
    }
    printf ("%I64d", Max);
    return 0;
    
}
