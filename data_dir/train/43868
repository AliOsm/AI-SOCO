/*-----Deep D. Savani------------
-------DAIICT,INDIA--------------
*/
#include<bits/stdc++.h>
#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define mod 1000000007
#define deb(x) cout<<#x<<" : "<<x<<endl;
#define deb2(x,y) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<endl;
#define deb3(x,y,z) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<"\t"<<#z<<" : "<<z<<endl;
#define nax 1000010
#define FIO ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
typedef long long ll;

using namespace std;

long long modulo(long long base,long long exponent,long long modulus);
long long choose(ll n,ll k);
ll inverse(ll a,ll m);
void build();
ll ncr(ll n,ll r);
vector<ll> fact(nax);


struct edge
{
	ll x,y,z;

	edge(ll x,ll y,ll z): x(x),y(y),z(z) {}

	edge() {}
};

bool comp(edge a,edge b)
{
	return a.z<b.z;
}

ll p[nax];

ll root(ll x)
{
	while(x!=p[x])
	{
		p[x]=p[p[x]];
		x=p[x];
	}
	return x;
}
void unio(ll x,ll y)
{
	ll rx=root(x);
	ll ry=root(y);
	p[ry]=rx;
}



int main() {

    FIO
    //build();

    for(int i=0;i<nax;i++)
    	p[i]=i;

    ll n,m;
    cin>>n>>m;

    vector<edge> a;
    for(int i=0;i<m;i++)
    {
    	ll x,y,z;
    	cin>>x>>y>>z;

    	a.pb(edge(x,y,z));
    }

    sort(a.begin(),a.end(),comp);

    ll i=0;

    ll ans=0;
    while(i<m)
    {
    	ll w=a[i].z;

    	vector<edge> temp;
    	while(i<m && a[i].z==w)
    	{
    		ll x=a[i].x,y=a[i].y;

    		if(root(x)!=root(y))
    		{
    			temp.pb(a[i]);
    		}
    		i++;
    	}

    	for(int j=0;j<temp.size();j++)
    	{
    		ll x=temp[j].x,y=temp[j].y;
    		if(root(x)!=root(y))
    		{
    			unio(x,y);
    		}
    		else
    		{
    			ans++;
    		}
    	}
    }

    cout<<ans<<endl;

}

ll ncr(ll n,ll r)
{
    if(r>n || r<0 || n<0)
        return 0;
    ll ans=fact[n];
    ll temp=(fact[n-r]*fact[r])%mod;
    ans=(ans*inverse(temp,mod))%mod;
    return ans;
}

void build()
{
    fact[0]=1;
    for(ll i=1;i<nax;i++)
        fact[i]=(fact[i-1]*i)%mod;

    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
}

long long modulo(long long base,long long exponent,long long modulus)
{
    if(modulus ==1)
        return 0;

    long long result=1;
    base=base % modulus;
    while(exponent>0)
    {
        if(exponent%2==1)
        {
            result=(result*base) % modulus;

        }
        exponent=exponent>>1;
        base = (base*base) % modulus;
    }
    return result;
}

long long choose(ll n,ll k)
{
    if(k==0)  return 1;
    return (n* choose(n-1,k-1))/k;
}

void EE(ll a,ll b,ll &co1,ll &co2)
{
    if(a%b==0)
    {
        co1=0;
        co2=1;
        return;
    }
    EE(b,a%b,co1,co2);
    ll temp=co1;
    co1=co2;
    co2=temp-co2*(a/b);
}

ll inverse(ll a,ll m)
{
    ll x,y;
    EE(a,m,x,y);
    if(x<0) x+=m;
    return x;
}