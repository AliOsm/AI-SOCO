#include <bits/stdc++.h>

using namespace std;
const int N=2e5+5;
vector<int> adj[N];
vector<int>v[5];
bool vis[N];
void dfs(int u,int f)
{
    vis[u]=1;
    v[f].push_back(u);
    for(auto v:adj[u])
        if(!vis[v])
            dfs(v,!f);
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int t;
    cin>>t;
    while(t--)
    {
        int n,m;cin>>n>>m;
        for(int i=0;i<=n;i++)
            adj[i].clear(),vis[i]=0;
        for(int i=0;i<=3;i++)
            v[i].clear();
        for(int i=0;i<m;i++)
        {
            int u,v;
            cin>>u>>v;
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        dfs(1,0);
        if(v[0].size()<=n/2)
        {
            cout<<v[0].size()<<endl;
            for(auto x:v[0])
                cout<<x<<" ";
            cout<<endl;
            continue;
        }
        else if(v[1].size()<=n/2)
        {
            cout<<v[1].size()<<endl;
            for(auto x:v[1])
                cout<<x<<" ";
            cout<<endl;
            continue;
        }
        else assert(0);
    }
    return 0;
}
