#include <bits/stdc++.h>
#define all(x) (x).begin(),(x).end()
const int INF = (int)1e9+7;
const int NMAX = (int)2e5;
int f(const std::vector<int>& arr, int k, int d) {
    const int n = (int)arr.size();
    static std::pair<int,int> fi[NMAX], se[NMAX], events[2*NMAX];
    for (int i = 0; i < n; i++) {
        fi[i] = {arr[i]-d,0};
        se[i] = {arr[i]+d,1};
    }
    std::merge(fi,fi+n,se,se+n,events);
    int bal = 0;
    for (int i = 0; i < 2 * n; i++) {
        const auto &it = events[i];
        bal += (it.second ? -1 : +1);
        if (bal > k) { return it.first; }
    }
    return -INF;
}
int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0);
    int t; std::cin >> t;
    while (t--) {
        int n, k; std::cin >> n >> k;
        std::vector<int> arr(n);
        for (auto &it : arr) { std::cin >> it; }
        std::sort(all(arr));
        int low = -1, high = (int)1e9;
        while (high - low > 1) {
            int mid = (low + high) / 2;
            if (f(arr, k, mid) > -INF) { high = mid; }
            else { low = mid; }
        }
        std::cout << f(arr, k, high) << "\n";
    }
    return 0;
}