#include<bits/stdc++.h>
using namespace std;
 
typedef long long int ll;
typedef long double ld;
typedef vector<ll> vec;
 
#define LM LLONG_MAX
 
#define ff first
#define ss second
 
#define FAST ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
 
#define M 1000099
#define MOD 1000000007

ll n,k;
string s[2];

void BYE(string p)
{
        cout<<p;
        exit(0);
}

void BFS()
{
        map<pair<ll,ll>,ll> visit,level;
        queue<pair<ll,ll>> Q;
        
        Q.push({0,0});
        visit[{0,0}]=1;
        level[{0,0}]=0;
        
        while(!Q.empty())
        {
                pair<ll,ll> P=Q.front();
                Q.pop();
                
                if(P.ss-1>=0 && visit[{P.ff,P.ss-1}]==0 && (P.ss-1)>level[P] && s[P.ff][P.ss-1]=='-')
                {
                        pair<ll,ll> p={P.ff,P.ss-1};
                        level[p]=level[P]+1;
                        visit[p]=1;
                        Q.push(p);
                }
                if(P.ss+1<n && visit[{P.ff,P.ss+1}]==0 && (P.ss+1)>level[P] && s[P.ff][P.ss+1]=='-')
                {
                        pair<ll,ll> p={P.ff,P.ss+1};
                        level[p]=level[P]+1;
                        visit[p]=1;
                        Q.push(p);
                }
                if(P.ss+k<n && visit[{1-P.ff,P.ss+k}]==0 && (P.ss+k)>level[P] && s[1-P.ff][P.ss+k]=='-')
                {
                        pair<ll,ll> p={1-P.ff,P.ss+k};
                        level[p]=level[P]+1;
                        visit[p]=1;
                        Q.push(p);
                }
                if(P.ss+1>=n || P.ss+k>=n)    BYE("YES");
        }
        
        BYE("NO");
}


int main()
{
        FAST;
        
        cin>>n>>k>>s[0]>>s[1];
        BFS();
        
}