//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int i = 0; i < (n); i++) ni(a[i])
#define nal(a, n) for (int i = 0; i < (n); i++) nl(a[i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define vii vector<pii>
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
typedef long long ll;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
const int MAXN = 1e6 + 5;
const double eps = 1e-9;
using namespace std;
ll dp[MAXN], a[MAXN];

int main()
{
    int n;
    ni(n);
    nal(a, n);
    int l = -1, r = -1;
    for (int i = 1; i < n; i++)
    {
        if (a[i - 1] < a[i])
            r = i - 1;
        else if (a[i - 1] > a[i])
            l = i - 1;
        ll x = a[r + 1] - a[i];
        ll y = a[i] - a[l + 1];
        if (r != -1)
            x += dp[r];
        if (l != -1)
            y += dp[l];
        dp[i] = max(x, y);
        if (r != i - 1)
            dp[i] = max(dp[i], dp[r + 1] + a[r + 2] - a[i]);
        if (l != i - 1)
            dp[i] = max(dp[i], dp[l + 1] + a[i] - a[l + 2]);
    }
    prl(dp[n - 1]);
    return 0;
}
