#include <iostream>
#include <fstream>
#include <cstdio>
#include <climits>
#include <vector>
#include <map>
#include <list>
#include <deque>
#include <stack>
#include <set>
#include <string>
#include <cstring>
#include <algorithm>
#include <bitset>
#include <cmath>

using namespace std;

#define LL long long

typedef struct circ
{
	int x, y, r;
};

bool insideCirc(int a, int b, int x, int y, int r)
{
	if ((a-x)*(a-x) + (b-y)*(b-y) <= r * r)
		return true;
	else
		return false;
}

int main()
{
	int xa, ya, xb, yb;
	cin >> xa >> ya >> xb >> yb;
	if (xa > xb)
		swap(xa, xb);
	if (ya > yb)
		swap(ya, yb);
	int n;
	cin >> n;
	vector<circ> circles(n);
	for(int i = 0; i < n; i++)
		cin	>> circles[i].x >> circles[i].y >> circles[i].r;
	int count = 0;
	for(int i = xa; i <= xb; i+=(xb-xa))
		for(int j = ya; j <= yb; j++)
		{
			bool inside = false;
			for(int k = 0; k < circles.size() && !inside; k++)
				if (insideCirc(i, j, circles[k].x, circles[k].y, circles[k].r))
					inside = true;
			if (!inside)
				count++;
		}
	for(int j = ya; j <= yb; j+=yb-ya)
		for(int i = xa+1; i < xb; i++)
		{
			bool inside = false;
			for(int k = 0; k < circles.size() && !inside; k++)
				if (insideCirc(i, j, circles[k].x, circles[k].y, circles[k].r))
					inside = true;
			if (!inside)
				count++;
		}
	cout << count << endl;
	return 0;
}