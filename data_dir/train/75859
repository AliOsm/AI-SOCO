#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vvi;
typedef vector<pii> vii;
typedef vector<vector<pii> > vvii;
typedef long double ld;
typedef map<int, int> mapii;
typedef map<string, int> mapsi;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(int i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pi  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-9)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) {x, {y, z}}

int arr[705][705], memo[705][705][3];
int n;

int solve(int st, int en, bool side)
{
	if (st > en)
		return 1;
	int root = (side ? en + 1 : st - 1);
	if (st == en)
		return (root < 0 || root >= n || arr[st][root]);
	if (memo[st][en][side] != -1)
		return memo[st][en][side];
	int ret = 0;
	erep(i, st, en)
	{
		if (arr[i][root])
		{
			ret |= (solve(st, i - 1, 1) && solve(i + 1, en, 0));
			if (ret)
				break;
		}
	}
	return memo[st][en][side] = ret;
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> n;
	vi vec(n + 5);
	rep(i, 0, n)
		cin >> vec[i];
	reset(memo, -1);
	erep(i, 0, n)
		erep(j, 0, n)
			arr[i][j] = arr[j][i] = (__gcd(vec[i], vec[j]) > 1);
	if (solve(0, n - 1, 1))
		cout << "Yes\n";
	else
		cout << "No\n";

	return 0;
}
