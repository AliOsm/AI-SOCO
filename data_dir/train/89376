/*
 * hopeless can you hear me calling ?
 */
#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>

using namespace std;

using ii = pair<int,int>;
using ll = long long;
using ull = unsigned long long;

const int N = 1000005;
const int mod = 1000000007;
double g[66][66];	///Prop team i beats team j
double p[7][66];	///Prop team i wins a game in 6th round
double score[7][66];
/*
 * p[i][j] = p[i-1][j] * sum(p[r-1][x] * g[j][x])
 */
int n;
int main() {
#ifdef ONLINE_JUDGE
	ios_base::sync_with_stdio(0);
	cin.tie(0);
#endif
	cin >> n;

	for (int i = 0; i < (1 << n); i++) {
		for (int j = 0; j < (1 << n); j++) {
			int x;
			cin >> x;
			g[i][j] = x / 100.0;
		}
		p[0][i] = 1;
	}
	for (int i = 1; i <= n; i++) {

		for (int j = 0; j < (1 << n); j++) {
			int curBlock = j / (1 << (i - 1));
			curBlock ^= 1;
			curBlock *= (1 << (i-1));
			for (int opp = 0; opp < (1 << (i - 1)); opp++) {
				int x = curBlock + opp;
				p[i][j] += p[i-1][j] * p[i-1][x] * g[j][x];
			}
		}
	}

	for (int i = 1; i <= n; i++) {

		for (int j = 0; j < (1 << n); j++) {
			///if i bet on the j-th team in round i
			///he' score = score[i-1][j] + max( p[i][j] * i * p[i-1][x] + score[i-1][x] ) where x is in the block next to this block in the previous round
			int curBlock = j / (1 << (i - 1));
			curBlock ^= 1;
			curBlock *= (1 << (i-1));
			for (int opp = 0; opp < (1 << (i - 1)); opp++) {
				int x = curBlock + opp;
				score[i][j] = max(score[i][j],
						score[i - 1][j] + score[i - 1][x]
								+ (p[i][j] * (1<<(i-1))));
			}

		}
	}

	double ans = 0;

	for (int i = 0; i < (1 << n); i++)
		ans = max(ans, score[n][i]);

	cout << fixed << setprecision(9) << ans << '\n';

	return 0;
}
