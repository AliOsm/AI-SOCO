/*
LANG: C++
TASK: fc
*/
#include <iostream>
#include <fstream>
#include <algorithm>
#include <iomanip>
#include <random>
#include <ctime>
#include <bitset>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <cmath>
#include <climits>
#include <cstring>
#include <queue>
#include <deque>
#include <list>
#include <stack>
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma GCC optimize("O3")
#define ld long double
#define ull unsigned long long
#define ll long long
#define pb push_back
#define pii pair<int, int>
#define pll pair<ll, ll>
#define all(x) x.begin(), x.end()
#define fast_io cout.tie(0), cin.tie(0), ios_base::sync_with_stdio(0)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
using namespace std;
ld eps = (ld)1 / 1e9;
ll sqr(ll a) { return a * a; };
ll gcd(ll a, ll b) { return !a ? b : gcd(b % a, a); }
ll binpow(ll a, ll b, ll mod) { return b ? (b % 2 ? (a * (sqr(binpow(a, b / 2, mod)) % mod)) % mod : sqr(binpow(a, b / 2, mod)) % mod) : 1; }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool b[101][101], used[101];
int d[101][101], arr[1000001];
vector<ll> vc;

int main()
{
    //freopen("fc.in", "r", stdin), freopen("fc.out", "w", stdout);
    fast_io;
    ll n, m, i, j, v, pr;
    string a;
    cin >> n;
    for (i = 1; i <= n; i++)
    {
        cin >> a;
        for (j = 0; j < n; j++) b[i][j + 1] = a[j] - '0';
    }
    for (i = 1; i <= n; i++)
    {
        queue<pll> q;
        for (j = 1; j <= n; j++) used[j] = 0;
        q.push({i, 0});
        while (!q.empty())
        {
            v = q.front().first, pr = q.front().second;
            q.pop();
            if (used[v]) continue;
            if (!pr) d[i][i] = 0;
            else d[i][v] = d[i][pr] + 1;
            used[v] = 1;
            for (j = 1; j <= n; j++)
                if (!used[j] && b[v][j]) q.push({j, v});
        }
    }
    cin >> m;
    for (i = 1; i <= m; i++) cin >> arr[i];
    vc.pb(arr[1]), pr = 1;
    for (i = 3; i <= m; i++)
    {
        if (d[vc[vc.size() - 1]][arr[i]] < i - pr)
        {
            pr = i - 1;
            vc.pb(arr[i - 1]);
        }
    }
    vc.pb(arr[m]);
    cout << vc.size() << '\n';
    for (i = 0; i < vc.size(); i++) cout << vc[i] << ' ';
    return 0;
}