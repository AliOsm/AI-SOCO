   /*
     
     E-Mail : ahmed.aly.tc@gmail.com
     
     Just For You :)
     
     */
     
    #include <cstring>
    #include <string.h>
    #include <map>
    #include <deque>
    #include <queue>
    #include <stack>
    #include <sstream>
    #include <iostream>
    #include <iomanip>
    #include <cstdio>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #include <algorithm>
    #include <vector>
    #include <set>
    #include <complex>
    #include <list>
     
    using namespace std;
     
    #define pb push_back
    #define all(v) v.begin(),v.end()
    #define rall(v) v.rbegin(),v.rend()
    #define sz size()
    #define rep(i,m) for(int i=0;i<(int)(m);i++)
    #define rep2(i,n,m) for(int i=n;i<(int)(m);i++)
    #define For(it,c) for(__typeof(c.begin()) it=c.begin();it!=c.end();++it)
    #define mem(a,b) memset(a,b,sizeof(a))
    #define mp make_pair
    #define dot(a,b) ((conj(a)*(b)).X)
    #define X real()
    #define Y imag()
    #define length(V) (hypot((V).X,(V).Y))
    #define vect(a,b) ((b)-(a))
    #define cross(a,b) ((conj(a)*(b)).imag())
    #define normalize(v) ((v)/length(v))
    #define rotate(p,about,theta) ((p-about)*exp(point(0,theta))+about)
    #define pointEqu(a,b) (comp(a.X,b.X)==0 && comp(a.Y,b.Y)==0)
     
    typedef stringstream ss;
    typedef pair<int, int> pii;
    typedef vector<pii> vpii;
    typedef vector<string> vs;
    typedef vector<int> vi;
    typedef vector<double> vd;
    typedef vector<vector<int> > vii;
    typedef long long ll;
    typedef long double ld;
    typedef complex<double> point;
    typedef pair<point, point> segment;
    typedef pair<double, point> circle;
    typedef vector<point> polygon;
     
    const int oo = (int) 1e9;
    const double PI = 2 * acos(0);
    const double eps = 1e-9;
     
    inline int comp(const double &a, const double &b) {
    	if (fabs(a - b) < eps)
    		return 0;
    	return a > b ? 1 : -1;
    }
     
    int di[] = { 1, -1, 0, 0, 1, -1, 1, -1 };
    int dj[] = { 0, 0, 1, -1, 1, -1, -1, 1 };
    int diK[] = { -2, -2, -1, 1, 2, 2, 1, -1 };
    int djK[] = { -1, 1, 2, 2, 1, -1, -2, -2 };
     
    int I, J;
     
    inline bool val(const int &i, const int &j) {
    	if (i < 0 || j < 0 || i >= I || j >= J)
    		return false;
    	return true;
    }
     
    int N;
    int n;
     
    int sc[]={25, 18, 15, 12, 10, 8, 6, 4, 2, 1};
    struct pl{
    	string name;
    	int ind[50];
    	int sc;
    	pl(){
    		mem(ind,0);
    		sc=0;
    	}
    };
     
    map<string,pl> m;
     
    pl get(string name){
    	if(m.count(name))
    		return m[name];
    	pl p;
    	p.name=name;
    	m[name]=p;
    	return m[name];
    }
     
    bool c1(const pl &a,const pl &b){
    	if(a.sc!=b.sc)
    		return a.sc>b.sc;
    	rep(i,50)
    		if(a.ind[i]!=b.ind[i])
    			return a.ind[i]>b.ind[i];
    	return 0;
    }
     
    bool c2(const pl &a,const pl &b){
    	if(a.ind[0]!=b.ind[0])
    		return a.ind[0]>b.ind[0];
    	if(a.sc!=b.sc)
    		return a.sc>b.sc;
    	rep(i,50)
    		if(a.ind[i]!=b.ind[i])
    			return a.ind[i]>b.ind[i];
    	return 0;
    }
     
    int main()
    {
        #ifndef ONLINE_JUDGE
        freopen("a.txt","rt",stdin);
        #endif
        cin>>N;
        string s;
        while(N--){
        	cin>>n;
        	rep(i,n){
        		cin>>s;
        		pl p=get(s);
        		p.ind[i]++;
        		if(i<10)
    				p.sc+=sc[i];
        		m[s]=p;
        	}
        }
        vector<pl> v;
        For(it,m)
    		v.pb(it->second);
        /*rep(i,v.sz)
    		cout<<v[i].sc<<endl;*/
        sort(all(v),c1);
        cout<<v[0].name<<endl;
        sort(all(v),c2);
        cout<<v[0].name<<endl;
        return 0;
    }

