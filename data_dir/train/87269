#include <bits/stdc++.h>
using namespace std;

const int size = 1.5e7 + 5;

int n, res, gcd;
int arr[size], prime[size];
map<int, int> cnt;

void sieve() {
    for (int i=2; i <= size; i++)
        prime[i] = i;
    for (int i=2; i*i <= size; i++) {
        if (prime[i] != i)
            continue;
        for (int j=i*i; j<=size; j += i)
            prime[j] = i;
    }
}

int main() {
	sieve();
	scanf("%d", &n);
	for(int i=0 ; i < n ; i++) {
		scanf("%d", arr + i);
		gcd = __gcd(gcd, arr[i]);
	}
    for (int i=0; i<n; i++)
        arr[i] /= gcd;
    for (int i=0; i<n; i++) {
        int x = arr[i];
        while (x > 1) {
            int f = prime[x];
            cnt[f] ++;
            while (x % f == 0)
                x /= f;
        }
    }
    for (auto it : cnt)
        res = max(res, it.second);
    cout << (!res? -1 : n - res);
}