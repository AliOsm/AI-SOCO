#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("fast-math")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("majorhouse.in");ofstream out("majorhouse.out");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

int main() {
    fast;
    ll a; cin>>a;
    vec<ld> m(a);
    vec<ll> l(a), r(a);
    ll sl=0;
    for(int q=0; q<a; q++){
        cin>>m[q];
        if(m[q]==(ll)m[q]){
            l[q] = r[q] = (ll)m[q];
            sl+=l[q];
            continue;
        }
        l[q] = ceil(m[q]);
        r[q] = floor(m[q]);
        if(l[q]>r[q]) swap(l[q], r[q]);
        sl+=l[q];
    }
    for(int q=0; q<a; q++){
        if(sl==0 || l[q]==r[q]){
            cout<<l[q]<<"\n";
            continue;
        }
        sl++;
        cout<<r[q]<<"\n";
    }

}