#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef unsigned int uint;
typedef long double ld;
//#define ll __int128
#define int ll
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ld, ld> pld;
typedef vector<int> vi;
typedef vector< vi > vvi;
typedef vector< vvi > vvvi;
typedef vector<pii> vpi;
typedef vector<ll> vl;
typedef vector<string> vs;
typedef vector<vl> vvl;
typedef vector<vvl> vvvl;
typedef vector<ld> vld;
typedef vector<vld> vvld;

#define inmin(a, b) a = min(a, (b))
#define inmax(a, b) a = max(a, (b))
#define mp(a,b) make_pair(a,b)
#define modsum(a, b) ((a) + (b) >= M ? (a) + (b) - M : (a) + (b))
#define modsubtract(a, b) ((a) - (b) < 0 ? (a) - (b) + M : (a) - (b))
#define modmultiply(a, b) (((a) * (b)) % M)
#define ALL(a) a.begin(),a.end()
#define RALL(a) a.rbegin(),a.rend()
#define sqr(x) ((x) * (x))
#define fori(i, n) for(int i = 0; i < int(n); ++i)
#define cint const int &
#define SZ(a) ((int)(a.size()))
#define watch(x) cout << (#x) << " = " << x << endl;

const double PI = atan2(1, 0) * 2;

const string DIGITS = "0123456789";
const string ALPH = "abcdefghijklmnopqrstuvwxyz";


template<class T>
ostream & operator << (ostream &out, vector<T> &a) {
    out << "{";
    for (auto x : a) out << x << " ";
    return out << "}";
}

void smain();

signed main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);


#ifdef ART_HOME
    freopen("input.txt", "r", stdin);
    clock_t start = clock();
#endif
    cout << setprecision(12) << fixed;
    smain();
#ifdef ART_HOME
    cout << "\n\n\n";
    cout << "TOTAL EXECUTION TIME: " << float(clock() - start) / CLOCKS_PER_SEC << endl;
#endif
}


vi pos;
int ans;

bool may(int s, int f, int c, int r, int v)
{
    int cur_v = v;

    while (s < f && (r || cur_v))
    {
        if (pos[s + 1] - pos[s] <= cur_v / c)
        {
            cur_v -= c * (pos[s + 1] - pos[s]);
            s++;
        } else {
            if (r)
            {
                cur_v = v;
                r--;
            } else
                cur_v = 0;
        }
    }

    return s == f;
}


int stupid(int s, int f, int c, int r)
{
    int lb = max(0LL, ans - 1), rb = 1e18;

    while (rb - lb > 1)
    {
        int m = (lb + rb) >> 1;
        if (may(s, f, c, r, m))
            rb = m;
        else
            lb = m;
    }

    return rb;
}


void smain() {
    int n, m;
    cin >> n >> m;

    pos.resize(n);
    for (int i = 0; i < n; ++i)
        cin >> pos[i];

    vector<tuple<int, int, int, int>> chal(m);

    for (int i = 0; i < m; ++i)
    {
        int s, f, c, r;
        cin >> s >> f >> c >> r;
        s--, f--;

        chal[i] = make_tuple(s, f, c, r);
    }

    srand(time(0));
    random_shuffle(ALL(chal));

    for (int i = 0; i < m; ++i)
    {
        int s, f, c, r;
        tie(s, f, c, r) = chal[i];

        if (!may(s, f, c, r, ans))
            ans = stupid(s, f, c, r);
    }

    cout << ans << '\n';
}