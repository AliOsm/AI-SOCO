#include <bits/stdc++.h>
#define F first
#define S second
using namespace std;
typedef long long ll;
typedef double D;
const ll mod=1e9+7;
const ll inf=(1ll<<61);
const int MX=3e5+9;
vector<int>v[MX],v1[MX],v2[MX];
int a[MX],vis[MX],com[MX],sz[MX];
vector<int>nodes;
void dfs(int x){
	if(vis[x])return;
	vis[x]=1;
	for(int pp:v[x])dfs(pp);
	nodes.push_back(x);
}
void dfs2(int x,int c){
	++sz[c];
	com[x]=c;
	for(int pp:v1[x]){
        if(!com[pp]){
            dfs2(pp,c);
            continue;
        }
        if(com[pp]!=c)v2[c].push_back(com[pp]);
	}
}
int n,m,h,x,y;
int main(){
    cin>>n>>m>>h;
	for(int i=1;i<=n;++i)scanf("%d",&a[i]);
	while(m--){
        scanf("%d%d",&x,&y);
		if((a[x]+1)%h==a[y]){
            v[x].push_back(y);
            v1[y].push_back(x);
		}
		if((a[y]+1)%h==a[x]){
            v[y].push_back(x);
            v1[x].push_back(y);
		}
	}
	for(int i=1;i<=n;i++)dfs(i);
	int cnt=0;
	reverse(nodes.begin(),nodes.end());
	for(int pp:nodes){
		if(com[pp])continue;
		++cnt;
		dfs2(pp,cnt);
	}
	int ans=MX;
	for(int i=cnt;i>=1;i--){
	    for(int pp:v2[i])sz[pp]=sz[i];
		if(ans>sz[i]){
            x=i;
            ans=sz[i];
		}
	}
	cout<<ans<<endl;
	for(int i=1;i<=n;i++){
        if(com[i]==x)cout<<i<<" ";
	}
}
