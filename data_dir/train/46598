/*---> 04 November 2019 <--- > 23:09:47 <---*/
// #pragma GCC optimize("Ofast")
// #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
// #pragma GCC optimize("unroll-loops")
// #pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("O3")
//#pragma GCC target ("sse4")
#include <bits/stdc++.h>
//#include <ext/pb_ds/tree_policy.hpp>
//boot#include <ext/pb_ds/assoc_container.hpp>
//using namespace __gnu_pbds;
using namespace std;
//template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;
#define int long long
#define F first
#define S second
#define mod 1000000007
#define inf (int)1e18+5
#define sz(x) (int)x.size()
#define PI 3.141592653589793238510
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define __ ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define vi vector<int>
#define vpii vector<pair<int,int> > 
#define vvi vector<vector<int> >
#define PRINT_TIME cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s." <<endl;
#define sim template < class c
#define ris return * this
#define dor > debug & operator <<
#define eni(x) sim > typename   enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {
sim > struct rge { c b, e; };
sim > rge<c> range(c i, c j) { return rge<c>{i, j}; }
sim > auto dud(c* x) -> decltype(cerr << *x, 0);
sim > char dud(...);
struct debug {
#ifdef LOCAL
~debug() { cerr << endl; }
eni(!=) cerr << boolalpha << i; ris; }
eni(==) ris << range(begin(i), end(i)); }
sim, class b dor(pair < b, c > d) {
  ris << "(" << d.first << ", " << d.second << ")";
}
sim dor(rge<c> d) {
  *this << "[";
  for (auto it = d.b; it != d.e; ++it)
    *this << ", " + 2 * (it == d.b) << *it;
  ris << "]";
}
#else
sim dor(const c&) { ris; }
#endif
};
#define imie(...) " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] "
typedef long double ld;
typedef pair<int,int> pii;
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
const int N=2e3+5;
int n;
int dp[N][N];
vector<pair<int,int>> factor(int x){
  vector<pair<int,int>> pri;
  int cnt=0;
  while(x%2==0)
    cnt++,x/=2;
  if(cnt)
    pri.push_back({2,cnt});
  for(int i=2;i*i<=x;++i)
      if(x%i==0){
          int t=0;
          while(x%i==0)
          x/=i,t++;
        pri.push_back({i,t});
    }
    else if(i>x)
      break;
    if(x>1)
    pri.push_back({x,1});
  return pri;
}
void tour(vector<pair<int,int>>&v,vector<int>&V,int ind,int cur) {
        if (ind==sz(v))
          V.push_back(cur);
        else{
            int mul=1;
        for(int i=0;i<v[ind].S+1;i++){
                tour(v,V,ind+1,cur*mul);
                mul*=v[ind].F;
        }
    }
}
vector<int> getDivi(int x) {
        vpii v=factor(x);
        vi V;
    tour(v,V,0,1LL);
        sort(all(V));
        return V;
}
int32_t main(){__
	int k;
	cin>>n>>k;
	vvi pre(n+1);
	for(int i=1;i<=n;i++){
		pre[i]=getDivi(i);
	}
	for(int i=1;i<=k;i++){
		for(int j=1;j<=n;j++){
			if(i==1){
				dp[i][j]=1;
				continue;
			}
			vi t=pre[j];
			for(int kk=0;kk<sz(t);kk++){
				dp[i][j]+=dp[i-1][t[kk]];
				dp[i][j]%=mod;
			}
			// debug()<< imie(i) imie(j) imie(dp[i][j]);
		}
	}
	int ans=0;
	for(int i=1;i<=n;i++)
	{
		ans+=dp[k][i];
		ans%=mod;
	}
	cout<<ans<<"\n";
return 0;
}