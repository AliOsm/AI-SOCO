#include <bits/stdc++.h>

#pragma GCC optimize("Ofast")

using namespace std;

typedef long long ll;

typedef long double ld;

typedef unsigned long long ull;

const long long N = 5000;

const long long M = 1e9 + 7;

ll n;

vector < ll > a;
vector < ll > c;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin >> n;
    a.resize(n);
    for (ll i = 0; i < n; i++) {
        cin >> a[i];
    }
    c.push_back(a[0]);
    for (ll i = 1; i < n; i++) {
        if (a[i] != a[i - 1]) {
            c.push_back(a[i]);
        }
    }
    n = (int)c.size();
    ll dp[n][n];
    for (ll i = 0; i < n; i++) {
        dp[i][i] = 0;
    }
    for (ll i = 0; i < n - 1; i++) {
        dp[i][i + 1] = 1;
    }
    for (ll i = 2; i < n; i++) {
        for (ll j = 0; j < n - i; j++) {
            ll l = j;
            ll r = j + i;
            dp[l][r] = min(dp[l + 1][r] , dp[l][r - 1]) + 1;
            if (c[l] == c[r]) {
                dp[l][r] = min(dp[l][r] , dp[l + 1][r - 1] + 1);
            }
        }
    }
    cout << dp[0][n - 1];
    return 0;
}
