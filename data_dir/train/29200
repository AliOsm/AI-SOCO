#include <bits/stdc++.h>
using namespace std;

int n, mn = int(1e9), cur = 0;
vector<vector<pair<int, int> > > g;
vector<int> arr;

void cnt(int v, int p = -1) {
	for(int i = 0; i < g[v].size(); ++i) {
		int to = g[v][i].first,
			t = g[v][i].second;
		if(to == p) {
			continue;
		}
		cnt(to, v);
		if(t == -1) {
			++cur;
		}
	}
}

void dfs(int v, int p = -1) {
	for(int i = 0; i < g[v].size(); ++i) {
		int to = g[v][i].first,
			t = g[v][i].second;
		if(to == p) {
			continue;
		}
		if(t == 1) {
			arr[to] = arr[v] + 1;
		} else {
			arr[to] = arr[v] - 1;
		}
		dfs(to, v);
	}
}

int main (int argc, char *argv[])
{
	scanf("%d", &n);
	g.resize(n);
	for(int i = 0; i < n - 1; ++i) {
		int from, to;
		scanf("%d%d", &from, &to);
		--from;
		--to;
		g[from].push_back(make_pair(to, 1));
		g[to].push_back(make_pair(from, -1));
	}
	arr.resize(n);
	cnt(0);
	arr[0] = cur;
	dfs(0);
	for(int i = 0; i < n; ++i) {
		mn = min(mn, arr[i]);
	}
	printf("%d\n", mn);
	for(int i = 0; i < n; ++i) {
		if(arr[i] == mn) {
			printf("%d ", i + 1);
		}
	}

	return 0;
}

