// KALAM
#include<bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef long long ld;
const int MAXN = 2e5 + 5;
const int MOD = 1e9 + 7;
const int inf = 2e9;

int n,a,b,ans;
string s;
int r[5005][2],l[5005][2];
int main(){
	ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
	cin >> s;
	n = s.size();
	if(s[0] == 'a'){
		l[0][0] = 1;
	}
	else{
		l[0][1] = 1;
	}
	for(int i = 1;i < n;i++){
		if(s[i] == 'a'){
			l[i][0] = l[i - 1][0] + 1;
			l[i][1] = l[i - 1][1];
		}
		else{
			l[i][0] = l[i - 1][0];
			l[i][1] = max(l[i - 1][0],l[i - 1][1]) + 1;
		}
	}
	
	if(s[n - 1] == 'a'){
		r[n - 1][0] = 1;
	}
	else{
		r[n - 1][1] = 1;
	}
	for(int i = n - 2;i > -1;i--){
		if(s[i] == 'a'){
			r[i][0] = r[i + 1][0] + 1 ;
			r[i][1] = r[i + 1][1];
		}
		else{
			r[i][0] = r[i + 1][0];
			r[i][1] = max(r[i + 1][0],r[i + 1][1]) + 1;
		}
	}
	
	for(int i = 0;i < n;i++){
		l[i][0] = max(l[i][1],l[i][0]);r[i + 1][0] = max(r[i + 1][1],r[i + 1][0]);
		ans = max(ans,l[i][0] + r[i + 1][0]);
	}
	cout << ans;
}
