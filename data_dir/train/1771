#include <cstdio>

#include <cmath>

#include <cstring>

#include <iostream>

#include <algorithm>

#include <queue>

#include <vector>

#include <map>



using namespace std;



typedef long long LL;



const int INF=1e9;


int n,d,mod;
int inv[105],ans;
int dp[1005][15];
int powmod(LL a,LL b,LL c)
{
	LL ans=1;
	while (b)
	{
		if (b&1) ans=ans*a%c;
		b/=2;
		a=a*a%c;
	}
	return ans;
}
int add(int &a,int b)
{
	a+=b;
	a%=mod;
	a+=mod;
	a%=mod;
}

int main()

{
	scanf("%d%d",&n,&d);
	scanf("%d",&mod);
	for (int i=1;i<=d;++i) inv[i]=powmod(i,mod-2,mod);
	dp[1][0]=1;
	ans=0;
	for (int k=1;k<=n;++k)
		for (int i=n;i>=2;--i)
		{
			for (int j=d;j>=1;--j)
			{
				int sum=0,now=1,dq;
				if (k>1) dq=dp[k][d-1];
				else dq=1;
				for (int t=0;t<=j&&t*k<i;++t)
				{
					add(sum,1LL*dp[i-t*k][j-t]*now%mod);
					now=1LL*now*(dq+t)%mod*inv[t+1]%mod;
				}
				dp[i][j]=sum;
				if (k==n/2&&i==n&&j==d) add(ans,sum);
			}
		}
	if (n%2==0) add(ans,1LL*-1*dp[n/2][d-1]*(dp[n/2][d-1]-1)/2%mod);
	if (n==2) ans=1;
	if (n==1) ans=1;
	printf("%d\n",ans);

	return 0;

}