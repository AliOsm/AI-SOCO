#include<iostream>
#include<cstdio>
#include<vector>
#include<cmath>
#include<algorithm>
#define inf 1000000000000000
using namespace std;
int pos[300003];
int a[300005];
int b[300005];
int t[12000003];
void build(int *a,int v,int tl,int tr)
{
    if(tl==tr)
    {
        t[v]=a[tl];
        return;
    }
    int tm=((tl+tr)>>1);
    build(a,v*2,tl,tm);
    build(a,v*2+1,tm+1,tr);
    t[v]=t[v*2]+t[v*2+1];
}
int sum(int v,int tl,int tr,int l,int r)
{
    if(l>r)
        return 0;
    if(tl==l && tr==r)
        return t[v];
    int tm=((tl+tr)>>1);
    return sum(v*2,tl,tm,l,min(r,tm))+sum(v*2+1,tm+1,tr,max(l,tm+1),r);
}
void update(int v,int tl,int tr,int pos,int new_val)
{
    if(tl==tr)
    {
        t[v]=new_val;
        return;
    }
    int tm=((tl+tr)>>1);
    if(pos<tm+1)
        update(v*2,tl,tm,pos,new_val);
    else
        update(v*2+1,tm+1,tr,pos,new_val);
    t[v]=t[v*2]+t[v*2+1];
}
int n,q;
int main()
{
    scanf("%d",&n);
    int i;
    int oper,x,y;
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
        a[i]--;
        pos[a[i]]=i;
    }
    for(i=0;i<n-1;i++)
        if(pos[i]>pos[i+1])
            b[i]=1;
    build(b,1,0,n-1);
    scanf("%d",&q);
    for(i=0;i<q;i++)
    {
        scanf("%d",&oper);
        if(oper==1)
        {
            scanf("%d %d",&x,&y);
            x--;
            y--;
            printf("%d\n",1+sum(1,0,n-1,x,y-1));
        }
        else
        {
            scanf("%d %d",&x,&y);
            x--;
            y--;
            pos[a[x]]=y;
            pos[a[y]]=x;
            if(pos[a[x]-1]<pos[a[x]] && a[x]-1>-1)
            {
                b[a[x]-1]=0;
                update(1,0,n-1,a[x]-1,0);
            }
            if(pos[a[x]]<pos[a[x]-1] && a[x]-1>-1)
            {
                b[a[x]-1]=1;
                update(1,0,n-1,a[x]-1,1);
            }
            if(pos[a[x]]>pos[a[x]+1] && a[x]+1<n)
            {
                b[a[x]]=1;
                update(1,0,n-1,a[x],1);
            }
            if(pos[a[x]]<pos[a[x]+1] && a[x]+1<n)
            {
                b[a[x]]=0;
                update(1,0,n-1,a[x],0);
            }
            int temp=x;
            x=y;
            if(pos[a[x]-1]<pos[a[x]] && a[x]-1>-1)
            {
                b[a[x]-1]=0;
                update(1,0,n-1,a[x]-1,0);
            }
            if(pos[a[x]]<pos[a[x]-1] && a[x]-1>-1)
            {
                b[a[x]-1]=1;
                update(1,0,n-1,a[x]-1,1);
            }
            if(pos[a[x]]>pos[a[x]+1] && a[x]+1<n)
            {
                b[a[x]]=1;
                update(1,0,n-1,a[x],1);
            }
            if(pos[a[x]]<pos[a[x]+1] && a[x]+1<n)
            {
                b[a[x]]=0;
                update(1,0,n-1,a[x],0);
            }
            swap(a[temp],a[y]);
        }
    }
    return 0;
}
