//bismillahir rahmanir rahim            //Author:Fayed Anik

#include <bits/stdc++.h> 

using namespace std;


#define         ll                         long  long
#define         lf                         double 
#define         pb(x)                      push_back(x)
#define         ull                        unsigned long long
#define         sfl(a)                     scanf("%lld",&a)
#define         sf(a)                      scanf("%d",&a)
#define         pf(a)                      printf("%d\n",a)
#define         pfl(a)                     printf("%lld\n",a)
#define         pdl(a)                     printf("%llf\n",a)
#define         FOR(x,n)                   for(ll x=1;x<=n;++x)
#define         vii                        vector< ll > v
#define         pi                         3.14159265359
#define         mex                        10000000
#define         pii                        pair< ll , ll >
#define         mem(m,a)                   memset( m, a,sizeof m)
#define         mp(a,b)                    make_pair(a,b)
#define         maxn                       100000
#define         mod                        1000000007
#define         INF                        1e17
#define         f1                         first
#define         f2                         second
#define         all(v)                     v.begin(),v.end()
#define         PI                         acos(-1)
#define         printminusone              printf("-1\n")
#define         bug                        printf("bug")

#define 		lim 					   200001

vector < ll > graph[lim];
ll col[lim];

map < pair<ll,ll> , ll > uv;
vector < pair<ll,ll> > e;

bool dfs( ll r,  ll c ){

		if( col[r] ) return (col[r] == c);
		
		col[r] = c;
		bool ret = true;
		for( ll i = 0 ; i<graph[r].size() ; i++ ){
			ll ch = graph[r][i];
			ret = (ret && dfs( ch, (c==1)?2:1 ) );
			if( c == 1 ) uv[ mp(r,ch) ] = 1;
			else uv[ mp(ch,r) ] = 1;
		}

		return ret;
}

int main(){
	
	ll n,m;
	sfl(n); sfl(m);

	while(m--){
		ll u,v;
		sfl(u);
		sfl(v);
		//uv[ mp(u,v) ] = 1;
		graph[u].pb(v);
		graph[v].pb(u);
		e.pb( mp(u,v) );
	}

	if(  !dfs(1,1) ) printf("NO\n");
	else{
		printf("YES\n");
		for( ll i = 0 ; i<e.size() ; i++ ){
			printf("%lld", uv[ e[i]  ] );
		}
		cout<<endl;
	}

return 0;}

