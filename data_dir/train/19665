#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<ll,ll> ii;

ll n, m;
vector<ll> v;
vector<ii> vec;

bool valid(ll k){
    ll last[200005]; memset(last, 0, sizeof last);
    for(auto par : vec)
        if(par.first <= k)
            last[par.second] = max(last[par.second], par.first);
    vector<ll> need = v;
    vector<vector<ll>> tempo(4e5, vector<ll>());
    for(ll i = 1; i <= n; i++)
        if(last[i] > 0)
            tempo[last[i]].push_back(i-1);
    ll cur = 0;
    for(ll i = 1; i <= k; i++){
        cur++;
        if(i > 2e5) continue;
        for(ll val : tempo[i]){
            if(cur >= need[val]){
                cur -= need[val];
                need[val] = 0;
            }
            else{
                need[val] -= cur;
                cur = 0;
                break;
            }
        }
    }
    long long sum = 0;
    for(ll i = 0; i < n; i++)
        sum += need[i];
    return sum*2 <= cur;
}

int main(){

    cin >> n >> m;
    for(ll i = 0; i < n; i++){
        ll x; cin >> x;
        v.push_back(x);
    }
    for(ll i = 0; i < m; i++){
        ll d, t; cin >> d >> t;
        vec.push_back({d, t});
    }
    // cout << valid(8) << endl;
    ll esq = 1, dir = 5e5, res = 1e9;
    while(esq <= dir){
        ll mid = (esq+dir)/2;
        if(valid(mid)) res = min(res, mid), dir = mid-1;
        else esq = mid+1;
    }
    cout << res << endl;
	return 0;
}
