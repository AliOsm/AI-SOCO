#define _CRT_SECURE_NO_DEPRECATE
#include <cstring>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#include <list>
#include <climits>
#include <cctype>
#include <bitset>
#include <list>
#include <fstream>

using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define allr(v)             ((v).rbegin()), ((v).rend())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define MP                  make_pair
#define lpv(i, v)           for(int i=0;i<sz(v);++i)
#define lpn(i, n)           for(int i=0;i<(int)(n);++i)
#define V  	                vector
#define ss 	                second
#define ff 	                first

typedef unsigned long long          ull;
typedef long long                   ll;
typedef long double                 LD;

ll suf(ll a){ return (a*(a + 1)) / 2; }
const ll  OO = 1e6 + 10, S = 1e9 + 7;
vector<vector<int> >adj, can;

int dx[]{1, -1, 0, 0, 1, -1, 1, -1};
int dy[]{0, 0, 1, -1, 1, -1, -1, 1};

int main()
{
	int n, m;
	while (cin >> n >> m){
		V<int> p, v(n + 1);
		p.push_back(0);
		for (int i = 0; i < n; i++){
			cin >> v[i + 1];
			if (v[i + 1] == 0)
				p.push_back(i + 1);
		}
		p.push_back(n + 1);
		m += 2;
		int now = 0, s = -1, e = -1, mx = 0, st = 0;
		for (int i = 0; i < p.size(); i++){
			if (i - st + 1 <= m){
				if (p[i] - p[st] - 1 > mx)
					mx = p[i] - p[st]  - 1, s = p[st] + 1, e = p[i] - 1;
				if(i - st + 1 == m ) st++;
			}
		}
		cout << mx << endl;
		for (int i = 1; i <= n; i++){
			if (i >= s && i <= e)
				cout << "1 ";
			else cout << v[i] << " ";
		}
		cout << endl;
	}
	return 0;
}
/**/