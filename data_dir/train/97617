/**
*
* Author: MARC
* Lang: GNU C++14
*
**/

#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair < int , int >
#define LS pair < ll , string >

typedef unsigned long long ull;
typedef long double ldbl;
typedef long long ll;
typedef double dbl;

const ldbl E = 2.71828182845904523536;
const ldbl pi = acos(-1);
const dbl eps = 1e-9;
const ll mod = 1e9+7;
const ll inf = 1LL<<30;

/** /////////// ** Code ** /////////// **/

const int N=400100 , M=300;
vector <int>Div;
int frq[M];
char s[N];
int n,odd;

string rearrange(string s){
    string res="";

    for(int i=0 ; i<M ; i++){
        int m=frq[i]/2;
        for(int j=0 ; j<m ; j++)
            res+=char(i);
    }


    string res1=res;
    reverse(res1.begin(),res1.end());
    res+=res1;


    return res;

}

bool ok(int x){
    int y=n/x;
    int mid=y;
    if(odd > y) return 0;
    if((y-odd)&1) return 0;

    printf("%d\n",y);

    if(x == 1){
        for(int i=0 ; i<n ; i++)
            printf("%c ",s[i]);

        return 1;
    }

    string t="";
    for(int i=0 ; i<M ; i++){
        if(frq[i]&1){
            mid--;
            frq[i]--;
            t+=char(i);
        }
    }

    for(int i=0 ; i<M ; i++){
        while(frq[i] && mid > 0){
            mid-=2;
            frq[i]-=2;
            t+=char(i);
            t+=char(i);
        }
    }

    string ans="",ans1="";
    int z=x/2 , p=0;

    for(int i=0 ; i<M ; i++){
        while(frq[i]){
            frq[i]-=2;
            ans+=char(i);
            if(ans.length() == z){
                ans1=ans;
                reverse(ans1.begin(),ans1.end());
                ans+=t[p++];
                ans+=ans1;
                printf("%s ",ans.c_str());
                ans="";
            }
        }
    }



    return 1;

}

int main()
{
    scanf("%d",&n);
    scanf("%s",&s);

    for(int i=0 ; i<n ; i++) frq[s[i]]++;


    for(int i=0 ; i<M ; i++) if(frq[i]&1) odd++;

    if(!odd){
        printf("1\n");
        printf("%s",rearrange(s).c_str());
        return 0;
    }


    for(int i=1 ; i*i<=n ; i++){
        if(n%i == 0){
            if(i&1) Div.push_back(i);
            int j=n/i;
            if(j&1 && j != i) Div.push_back(j);
        }
    }


    sort(Div.begin(),Div.end(),greater<int>() );


    for(auto x:Div)
        if(ok(x)) break;

    return 0;
}
