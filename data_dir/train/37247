#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("Ofast")
#pragma comment(linker, "/STACK:16777216")
#include <set>
#include <map>
#include <deque>
#include <cmath>
#include <queue>
#include <random>
#include <bitset>
#include <time.h>
#include <string>
#include <cstdio>
#include <vector>
#include <cassert>
#include <iomanip>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
//#define endl '\n'
#define mp make_pair
#define pbc push_back
#define pob pop_back()
#define empb emplace_back
#define sp system("pause")
#define queuel queue<long long>
#define all(x) (x).begin(), (x).end()
#define matrix vector<vector<ll>>
#define pin(p) cin >> p.first >> p.second;
#define rev(v) reverse(v.begin(), v.end());
#define mx(a) max_element(a.begin(), a.end());
#define mn(v) min_element(v.begin(), v.end());
#define sout(s, c) for (auto i : s) cout << i << c;
#define pout(p) cout << p.first << " " << p.second;
#define er(v, l, r) erase(v.begin() + l, v.begin() + r);
#define vin(v) for (ll i = 0; i < v.size(); ++i) cin >> v[i];
#define vout(v, c) for (ll i = 0; i < v.size(); ++i) cout << v[i] << c;
#define pushi(v, a) for (ll i = 0; i < a.size(); ++i) v.push_back(a[i]);
#define sin(s, n) for (ll i = 0; i < n; ++i){ll a; cin >> a; s.insert(a);}
#define fastio() ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
using namespace std;
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef vector<vector<char> > fd;
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
const ll INF = 1e18;
const ll inf = 1e9;
const ld PI = acos(-1.0);
const ll mod1 = inf + 7;
const ll mod2 = inf + 9;
const ll MAXN = 200001;
const ld EPS = 1e-7;
//#define int long long
struct point
{
	ld x, y;
};
struct line
{
	ld a, b, c;
};

ld hypot(point a, point b)
{
	return sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) *(a.y - b.y));
}vector<point> a(228228);
signed main()
{
	fastio();
	int n;
	cin >> n;

	int m = 0, p = 0;
	ld mx = -inf, mn = inf;
	for (int i = 0; i < n; ++i)
	{
		cin >> a[i].x >> a[i].y;
		mn = min(a[i].x, mn);
		mx = max(mx, a[i].x);
		if (a[i].y > 0)
		{
			p++;
		}
		else
		{
			m++;
		}
	}
	if (m&&p)
	{
		cout << -1;
		return 0;
	}
	for (int i = 0; i < n; ++i)
	{
		if (a[i].y < 0)
		{
			a[i].y *= -1;
		}
	}
	ld l = 0, r = pow(228,9);
	int x = 0;
	while (x < 228)
	{
		x++;
		ld rad = (l + r) / 2;
		ld bigx = 1e9, smx = -1e9;
		int fl = 0;
		for (int i = 0; i < n; ++i)
		{
			ld now = 2 *a[i].y * rad -  a[i].y*a[i].y;
			if (now < 0)
			{
				l = rad;
				fl = 1;
				break;
			}
			smx = max(smx, (a[i].x - sqrt(now)) / 2); bigx = min(bigx, (a[i].x + sqrt(now)) / 2);
		}
		if (fl)
		{
			continue;
		}
		if (smx <= bigx || abs(smx  -bigx) <=EPS)
		{
			r = rad;
		}
		else
		{
			l = rad;
		}
	}
	cout << fixed << setprecision(10) << r;
}