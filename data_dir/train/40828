#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define pb push_back
#define all(x) x.begin(), x.end()
typedef long long ll; 
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

const int N = 3e3 + 10, mod = 1e9 + 7;

pll dp[N][N];
ll val[N];
vector<int> adj[N];
int n, m;
int sz[N];
pll tmp[N];

pll operator + (pll a, pll b)
{
	pll ans;
	ans.F = a.F + b.F;
	ans.S = a.S + b.S;
	return ans;
}

void dfs(int u, int p)
{
	sz[u] = 1;
	dp[u][0] = {0, val[u]};
	for(auto v : adj[u])
	{
		if(v == p) continue;
		dfs(v, u);
		for(int i = 0; i < sz[u] + sz[v]; i++) tmp[i] = {0, -1e18};
		for(int i = 0; i < sz[u]; i++) for(int j = 0; j <= sz[v]; j++)
		{
			tmp[i + j] = max(tmp[i + j], dp[u][i] + dp[v][j]);
		}
		sz[u] += sz[v];
		for(int i = 0; i < sz[u]; i++) dp[u][i] = tmp[i];
	}
	if(p == -1) return;
	for(int i = sz[u] - 1; i > -1; i--)
	{
		dp[u][i + 1] = max(dp[u][i + 1], {dp[u][i].F + (dp[u][i].S > 0), 0});
	//	cout << u << ' ' << i + 1 << ' ' << dp[u][i + 1].F << ' ' << dp[u][i + 1].S << endl;
	}

	//cout << u << ' ' << 0 << ' ' << dp[u][0].F << ' ' << dp[u][0].S << endl;
}

void solve()
{
	int x;
	cin >> n >> m;
	for(int i = 1; i <= n; i++) cin >> val[i];
	for(int i = 1; i <= n; i++) cin >> x, val[i] = x - val[i];
	for(int i = 1; i < n; i++)
	{
		int x, y;
		cin >> x >> y;
		adj[x].pb(y);
		adj[y].pb(x);
	}
	for(int i = 1; i <= n; i++) for(int j = 0; j <= n; j++) dp[i][j] = {0, -1e18};
	dfs(1, -1);
	cout << dp[1][m - 1].F + (dp[1][m - 1].S > 0) << '\n';
	for(int i = 1; i <= n; i++) adj[i].clear();
}

int32_t main()
{
	ios::sync_with_stdio(0); cin.tie(0);
	int t;
	cin >> t;
	while(t--)
	{
		solve();
	}
}
