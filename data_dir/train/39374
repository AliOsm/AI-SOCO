#include <iostream>
#include <fstream>
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <iomanip>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <sstream>
#include <string>
#include <vector>
using namespace std;

#pragma comment(linker, "/STACK:400000000")

#define EPS 1e-9
#define INF MOD
#define MOD 1000000007LL
#define fir first
#define foreach(it,X) for(it=X.begin();it!=X.end();it++)
#define iss istringstream
#define ite iterator
#define ll long long
#define mp make_pair
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<n;i++)
#define pi pair<int,int>
#define pb push_back
#define sec second
#define sst stringstream
#define sz size()
#define vc vector
typedef vc<int> vi;
typedef vc<ll> vl;
typedef vc<string> vs;

string s;
int n,q;
bool ok[5010][5010];
//int sum1[5010],sum2[5010];
int sum[5010][5010];

int main(){
	cin>>s;
	n=s.sz;
	
	rep(i,n)ok[i][i]=1;
	rep(i,n)ok[i+1][i]=1;
	rep2(i,2,n+1){
		rep(j,n-i+1){
			ok[j][j+i-1] = ok[j+1][j+i-2] && (s[j] == s[j+i-1]);
			//cout<<ok[j][j+i-1]<<endl;
		}
	}
	
	rep(i,n)sum[i][i]=1;
	rep2(i,2,n+1){
		rep(j,n-i+1){
			sum[j][j+i-1] = ok[j][j+i-1] + sum[j][j+i-2] + sum[j+1][j+i-1] - sum[j+1][j+i-2];
			//cout<<j<<" ~ "<<j+i-1<<" : "<<sum[j][j+i-1]<<endl;
		}
	}
	/*
	rep2(i,1,n+1){
		sum1[i]=sum1[i-1];
		rep(j,i) sum1[i] += ok[i-1-j][i-1];
		cout<<i<<" : "<<sum1[i]<<endl;
	}
	rep2(i,1,n+1){
		sum2[i]=sum2[i-1];
		rep(j,n-i+1) sum2[i] += ok[i-1][i-1+j];
		cout<<i<<" : "<<sum2[i]<<endl;
	}*/
	
	cin>>q;
	rep(i,q){
		int l,r;
		scanf("%d %d",&l,&r);//cout<<sum1[r]<<" - "<<sum2[l-1]<<" = ";
		printf("%d\n",/*sum1[r]-sum2[l-1]*/sum[l-1][r-1]);
	}
}
