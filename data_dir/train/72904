#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <cstring>
#include <string>
#include <algorithm>
#include <vector>
#include <set>
#include <queue>
#include <map>
#include <stack>
#include <complex>
#include <random>
#include <bitset>
using namespace std;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const int MAXN = 1000005;
int X2;
int P[MAXN];
vector<int> poss;

int main()
{
    ios::sync_with_stdio(0);

    cin >> X2;
    for (int i = 2; i < MAXN; i++)
        if (P[i] == 0)
            for (int j = i; j < MAXN; j += i)
                P[j] = max(P[j], i);

    for (int i = 2; i*i <= X2; i++)
        if (X2 % i == 0)
        {
            if (P[i] == i)
                poss.push_back(i);
            if (i*i != X2 && P[X2/i] == X2/i)
                poss.push_back(X2/i);
        }

    //for (int i = 0; i < poss.size(); i++)
    //    cout << poss[i] << " ";
    //cout << "\n";

    int best = X2;
    for (int i = 0; i < poss.size(); i++)
    {
        int p = poss[i];
        for (int j = X2 - p + 1; j <= X2; j++)
            if (P[j] != j)
            {
                //cout << "potential: " << j << " " << j - P[j] + 1 << "\n";
                best = min(best, j - P[j] + 1);
            }
    }

    cout << best << "\n";

    return 0;
}
