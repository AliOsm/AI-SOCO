#include <bits/stdc++.h>
using namespace std;
#define int long long
typedef long long ll;


const int mod = 998244353;

const int M = 510;
int arr[M];
int memo[M][M];

int solve(int l, int r) {
    if(l == r+1) return 1;
    if(l > r) return 0;
    if(l == r) return 1;
    if(memo[l][r] != -1) return memo[l][r];
    //cout << "here, range: " << l << ' ' << r << '\n';
    int minColor = M;
    int minPos = -1;
    for(int i = l; i <= r; ++i) {
        if(minColor > arr[i]) {
            minColor = arr[i];
            minPos = i;
        }
    }
    /*
    int res = 0;
    for(int i1 = l; i1 <= minPos; ++i1) {
        for(int i2 = minPos; i2 <= r; ++i2) {
            int temp = solve(l, i1-1)*solve(i1, minPos-1)%mod*solve(minPos+1, i2)%mod*solve(i2+1, r)%mod;
            //cout << "here, adding: " << temp << " to answer, i1,i2: " << i1 << ' ' << i2 << '\n';
            res += temp;
            res %= mod;
        }
    }
    */
    int resLeft = 0;
    for(int i1 = l; i1 <= minPos; ++i1) {
        int temp = solve(l, i1-1)*solve(i1, minPos-1)%mod;
        resLeft += temp;
        resLeft %= mod;
    }
    int resRight = 0;
    for(int i2 = minPos; i2 <= r; ++i2) {
        int temp = solve(minPos+1, i2)%mod*solve(i2+1, r)%mod;
        resRight += resLeft*temp%mod;
        resRight %= mod;
    }
    return memo[l][r] = resRight;
}


signed main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n, m;
    cin >> n >> m;
    for(int i = 1; i <= m; ++i) {
        for(int j = 1; j <= m; ++j) {
            memo[i][j] = -1;
        }
        cin >> arr[i];
    }
    cout << solve(1, m) << '\n';
}
