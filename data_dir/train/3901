#include <iostream>
#include <fstream>
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <iomanip>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <sstream>
#include <string>
#include <vector>
using namespace std;

#pragma comment(linker, "/STACK:400000000")

#define EPS 1e-9
#define INF MOD
#define MOD 1000000007LL
#define fir first
#define foreach(it,X) for(it=X.begin();it!=X.end();it++)
#define iss istringstream
#define ite iterator
#define ll long long
#define mp make_pair
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<n;i++)
#define pi pair<int,int>
#define pb push_back
#define sec second
#define sh(i) (1LL<<i)
#define sst stringstream
#define sz size()
#define vi vector<int>
#define vc vector
#define vl vector<ll>
#define vs vector<string>

int n,m,a[100010],sum[500][100010];
vi v;
map<int,int> M;
map<int,int>::ite it;

int main(){
	cin>>n>>m;
	rep(i,n)cin>>a[i],M[a[i]]++;
	foreach(it,M){
		if(it->fir <= it->sec)v.pb(it->fir);
	}
	rep(i,v.sz){
		sum[i][0]=0;
	}
	rep(i,n){
		rep(j,v.sz){
			sum[j][i+1]=sum[j][i] + (a[i] == v[j]);
		}
	}
	//rep(i,v.sz)cout<<sum[i][n]<<" ";
	rep(i,m){
		int l,r;
		cin>>l>>r;
		int res=0;
		rep(j,v.sz){
			//cout<<v[j]<<endl;
			res += (sum[j][r]-sum[j][l-1])==v[j];
		}
		cout<<res<<endl;
	}
}
