//      ——By DD_BOND 

// #include<bits/stdc++.h>
#include<functional>
#include<algorithm>
#include<iostream>
#include<sstream>
#include<iomanip>
#include<climits>
#include<cstring>
#include<cstdlib>
#include<cstddef>
#include<cstdio>
#include<memory>
#include<vector>
#include<cctype>
#include<random>
#include<string>
#include<cmath>
#include<queue>
#include<deque>
#include<ctime>
#include<stack>
#include<map>
#include<set>

#define fi first
#define se second
#define MP make_pair
#define pb push_back
#define INF 0x3f3f3f3f
#define pi 3.1415926535898
#define lowbit(a)  (a&(-a))
#define lson l,(l+r)/2,rt<<1
#define rson (l+r)/2+1,r,rt<<1|1
#define Min(a,b,c)  min(a,min(b,c))
#define Max(a,b,c)  max(a,max(b,c))
#define debug(x)  cerr<<#x<<"="<<x<<"\n";

using namespace std;

typedef long long ll;
typedef pair<int,int> P;
typedef pair<ll,ll> Pll;
typedef unsigned long long ull;

const ll LLMAX=2e18;
const int MOD=1e9+7;
const double eps=1e-8;
const int MAXN=1e6+10;

inline ll sqr(ll x){ return x*x; }
inline int sqr(int x){ return x*x; }
inline double sqr(double x){ return x*x; }
ll gcd(ll a,ll b){ return b==0? a: __gcd(b,a%b); }
ll exgcd(ll a,ll b,ll &x,ll &y){ ll d; (b==0? (x=1,y=0,d=a): (d=exgcd(b,a%b,y,x),y-=a/b*x)); return d; }
ll qpow(ll a,ll n){ll sum=1;while(n){if(n&1)sum=sum*a%MOD;a=a*a%MOD;n>>=1;}return sum;}
inline int dcmp(double x){  if(fabs(x)<eps) return 0;   return (x>0? 1: -1); }

vector<int>fac;

int main(void)
{
    ios::sync_with_stdio(false);    cin.tie(0);   cout.tie(0);   
    // freopen("/My_Mac/Resource/Project__C++/testdata.in","r",stdin);
    //freopen("/My_Mac/Resource/Project__C++/testdata.out","w",stdout);
    int n;  cin>>n;
    for(int i=2;i*i<=n;i++)
        if(n%i==0){
            fac.pb(i);
            fac.pb(n/i);
        }
    for(int i=0;i<fac.size();i++)
        for(int j=i+1;j<fac.size();j++)
            if((n-1)%gcd(fac[i],fac[j])==0){
                ll d=gcd(fac[i],fac[j]),x,y;
                exgcd(n/fac[i],n/fac[j],x,y);
                x*=(n-1)/d,y*=(n-1)/d;
                if(!(x>=1&&x<fac[i]&&y>=1&&y<fac[j])){
                    if(x>0){
                        ll k=(x-fac[i]+1)/(n/fac[j]/d);
                        if((x-fac[i]+1)%(n/fac[j]/d)) k++;
                        x-=n/fac[j]/d*k,y+=n/fac[i]/d*k;
                    }
                    else{
                        ll k=(y-fac[j]+1)/(n/fac[i]/d);
                        if((y-fac[j]+1)%(n/fac[i]/d)) k++;
                        x+=n/fac[j]/d*k,y-=n/fac[i]/d*k;
                    }
                }
                if(!(x>=1&&x<fac[i]&&y>=1&&y<fac[j]))   continue;
                cout<<"YES\n2"<<endl;
                cout<<x<<' '<<fac[i]<<endl;
                cout<<y<<' '<<fac[j]<<endl;
                return 0;
            }
    cout<<"NO"<<endl;
    return 0;
}