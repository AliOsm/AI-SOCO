		//			- -- --- ---- -----be name khoda----- ---- --- -- -			\\

#include <bits/stdc++.h>

using namespace std;

#define int long long
const int N = 200002, B = 20;

int n, m, k, s[N], l[N], d[N], par[B][N], de[N], h[N], mark[N];
vector <pair<int, int>> t[N];
vector <int> g[N];

void dfs(int v, int dad = 0, int height = 0)
{
	mark[v] = 1;
	h[v] = height;
	de[v] = height;
	par[0][v] = dad;
	for(int b = 1; b < B; b++)
		par[b][v] = par[b - 1][par[b - 1][v]];
	for(auto u : g[v])
		if(!mark[u])
		{
			int weight = 0;
			dfs(u, v, height + 1);
			if(de[u] >= h[u])
				weight = 1;
			de[v] = min(de[v], de[u]);
			t[v].push_back(make_pair(u, weight));
			t[u].push_back(make_pair(v, weight));
		}
		else if(u != dad)
			de[v] = min(de[v], h[u]);
}

void sfd(int v, int dad = 0, int dist = 0)
{
	d[v] = dist;
//	cerr << "dist[" << v << "] = " << dist << endl;
	for(auto u : t[v])
		if(u.first != dad)
			sfd(u.first, v, dist + u.second);
}

int lca(int u, int v)
{
//	cerr << "lca(" << u << ", " << v << ") = ";
	if(h[u] < h[v])
		swap(u, v);
	//	-> h[u] >= h[v]
	if(h[u] != h[v])
		for(int b = B - 1; b >= 0; b--)
			if(h[par[b][u]] >= h[v])
				u = par[b][u];
	if(u == v)
	{
//		cerr << v << endl;
		return v;
	}
	for(int b = B - 1; b >= 0; b--)
		if(par[b][v] != par[b][u])
		{
			v = par[b][v];
			u = par[b][u];
		}
	if(u != v)
	{
		u = par[0][u];
		v = par[0][v];
	}
//	cerr << u << endl;
	return u;
}

 main()
{
	cin >> n >> m;
	while(m--)
	{
		int l, r;
		cin >> l >> r;
		l--;
		r--;
		g[l].push_back(r);
		g[r].push_back(l);
	}
	cin >> k;
	for(int i = 0; i < k; i++)
	{
		cin >> s[i] >> l[i];
		s[i]--;
		l[i]--;
	}
	dfs(0);
	sfd(0);
	for(int i = 0; i < k; i++)
	{
		int ans = d[s[i]] + d[l[i]];
		ans -= d[lca(s[i], l[i])] * 2;
		cout << ans << endl;
	}
}
