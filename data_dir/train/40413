#include<bits/stdc++.h>
#define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define Alhamdulillah return 0;
#define pb(x) push_back(x)
#define ins(x) insert(x)
#define fi first
#define se second
#define lb lower_bound
#define ub upper_bound
#define all(v) (v.begin(),v.end())
#define sz(v) ((ll)((v).size()))
#define reset(v,val) memset(v,val,sizeof(v))
#define erep(i, x, n) for ( i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for( i = x; i<(ll)(n); i++)
using namespace std;
typedef  long long   ll;
const long long  mod=1e9+7;
ll dx[]={0,0,1,-1};
ll dy[]={1,-1,0,-1};
ll m,k,n,a[200005],ans=0,sm=0,res=0,vis[200000]={0},dp[300005]={0},dp2[300000]={0};
multiset<  ll >st1,st2;
string s1="one",s2="zero",s,ch="";
vector<ll>v[200000],vnode,v1[50],v2[50],v3;
vector< pair<ll,ll> >vv;
vector< pair< ll,pair <ll,ll> > > vvv;
priority_queue <ll> pq;
map< pair<ll,ll> , ll >cost;
ll xa,xb,xc,ya,yb,yc,xres;

struct Edge {
    ll u, v, weight;
    bool operator<(Edge const& other) {
        return weight < other.weight;
    }
};

vector<Edge>ve;


int main(){
In_the_name_of_allah_the_merciful

	ll i=0,x,y,j=0,z=0,q,nb0=0,nb=0,nbmax=0,nbinf=0,nb2=0,mm=5e8,idx=0,ok=0,l,r,negatif=0,positif=0,l1,r1,t;
	multiset<  ll > ::iterator it,it1,it2;
	char c;
  //  freopen("a.txt","r",stdin);
    cin>>n>>m;
   for(i=1;i<=m;i++){
    cin>>x>>y>>z;
    Edge e;
    e.u=x;
    e.v=y;
    e.weight=z;
    ve.pb(e);
   }
  sort(ve.begin(),ve.end());
   for(i=0;i<ve.size();i++){
      j=i-1;
      while(j<ve.size()-1&&ve[j+1].weight==ve[i].weight){
        j++;
        dp2[ve[j].v]=0;
      }
      for(k=i;k<=j;k++)dp2[ve[k].v]=max(dp2[ve[k].v],dp[ve[k].u]+1);
      for(k=i;k<=j;k++)dp[ve[k].v]=max(dp[ve[k].v],dp2[ve[k].v]);
        i=j;
   }
   for(i=1;i<=n;i++)ans=max(ans,dp[i]);
   cout<<ans;
Alhamdulillah
 }
