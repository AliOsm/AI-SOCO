// modifing_mod.cpp: ���������� ����� ����� ��� ����������� ����������.
//

//#include "stdafx.h"
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

vector <int> primes;

int gcd(int a, int b) {
	if (a == 0) return b;
	return gcd(b % a, a);
}

int find_lindex(int k) {
	int l = -1, r = primes.size();
	while (r - l > 1) {
		int mid = (l + r) / 2;
		if (primes[mid] >= k) r = mid;
		else l = mid;
	}
	return r;
}

int find_rindex(int k) {
	int l = -1, r = primes.size();
	while (r - l > 1) {
		int mid = (l + r) / 2;
		if (primes[mid] <= k) l = mid;
		else r = mid;
	}
	return l;
}

int main()
{
	int a, b;
	cin >> a >> b;
	int c = gcd(a, b);
	for (int i = 1; i * i <= c; ++i) {
		if (c % i == 0) {
			primes.push_back(i);
			primes.push_back(c / i);
		}
	}
	sort(primes.begin(), primes.end());
	int n;
	cin >> n;
	for (int i = 0; i < n; ++i) {
		int l, r;
		cin >> l >> r;
		int l1 = find_lindex(l), r1 = find_rindex(r);
		if (r1 < l1) cout << "-1\n";
		else cout << primes[r1] << "\n";
	}
	
}

