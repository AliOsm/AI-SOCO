#include <bits/stdc++.h>
using namespace std;

#define all(x) begin(x), end(x)
#define sz(x) (int)(x).size()

using ll = long long;
using pt = pair<ll, ll>;

bool check(const vector<ll>& in) {
	ll n = sz(in);
	ll sumB = 0;
	for (ll i = 0; i < n; i++) {
		sumB += min(in[i], i + 1);
	}
	ll sum = 0;
	for (ll i = 0; i < n; i++) {
		sum += in[i];
		sumB -= min(in[i], i + 1);
		if (sum > (i + 1) * i + sumB) return false;
	}
	return sum % 2 == 0;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	ll y, b, r;
	cin >> y >> b >> r;
	//r > b > y
	y = min({y, b - 1, r - 2});
	cout << 3 * (y + 1) << endl;
	/*ll n;
	cin >> n;
	vector<pt> ps(n);
	for (ll i = 0; i < n; i++) {
		ll x, y;
		cin >> x >> y;
		ps[i] = {x, y};
	}
	vector<pt> vs(n);
	for (ll i = 0; i < n; i++) {
		ll x, y;
		cin >> x >> y;
		vs[i] = {x, y};
	}
	sort(vs.begin(), vs.end());
	for (ll i = 0; i < n; i++) {
		pt res = {ps[0].first + vs[i].first,
				  ps[0].second + vs[i].second};
		vector<pt> vsTest(n);
		for (ll j = 0; j < n; j++) {
			vsTest[j] = {res.first - ps[j].first,
						 res.second - ps[j].second};
		}
		sort(vsTest.begin(), vsTest.end());
		if (vsTest == vs) {
			cout << res.first << " " << res.second << endl;
		}
	}*/
	/*ll n;
	cin >> n;
	set<ll> res;
	auto calc = [&](ll x){
		ll y = n / x;
		ll z = y + x * (n / x) * (n / x - 1) / 2;
		res.insert(z);
	};
	for (ll i = 1; i * i <= n; i++) {
		if (n % i == 0) {
			calc(i);
			calc(n / i);
		}
	}
	for (ll x : res) {
		cout << x << " ";
	}
	cout << endl;*/


	/*ll n;
	cin >> n;
	vector<ll> in(n);
	for (ll i = 0; i < n; i++) {
		cin >> in[i];
	}
	sort(in.begin(), in.end(), greater<ll>());
	ll sumB = 0;
	for (ll i = 0; i < n; i++) {
		sumB += min(in[i], i + 1);
	}
	ll sum = 0;

	ll l = n;
	ll r = 0;
	for (ll i = 0; i < n; i++) {
		sum += in[i];
		sumB -= min(in[i], i + 1);
		bool ok = (sum <= (i + 1) * i + sumB);
		if (!ok) {
			l = min(l, in[i]);
			r = max(r, in[i]);
		}
	}
	cout << l << " " << r << endl;

	bool foundOne = false;
	for (ll i = minRes; i <= maxRes; i++) {
		if ((i + sumDegs.back()) % 2 == 0) {
			foundOne = true;
			cout << i << " ";
		}
	}
	if (!foundOne) {
		cout << -1 << endl;
	}*/
}
