#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
#define N 200010
using namespace std;
typedef long long ll;
int a[N * 2];
int n;
ll ans;
bool maybe[N * 2];
int dp[N * 2];
int cnt[N];
void check (int d) {
	memset(maybe, false, sizeof(maybe));
	for (int j = 0; j < d; ++j) {
		int maxV = 0;
		for (int i = 0; i < n / d; ++i) {
			int tmp = (i * d + j) % n;
			maxV = max(maxV, a[tmp]);
		}
		for (int i = 0; i < n / d; ++i) {
			int tmp = (i * d + j) % n;
			if (a[tmp] >= maxV) {
				maybe[tmp] = true;
				maybe[tmp + n] = true;
			}
		}
	}
	memset(dp, 0, sizeof(dp));
	for (int i = 0; i < 2 * n; ++i) {
		if (i == 0) dp[i] = (maybe[i]);
		else {
			if (maybe[i]) {
				dp[i] = dp[i - 1] + 1;
			} else {
				dp[i] = 0;
			}
		}
		dp[i] = min(dp[i], n - 1);
	}
	memset(cnt, 0, sizeof(cnt));
	for (int i = 1; i <= n / d; ++i) {
		cnt[i] = cnt[i - 1];
		if (__gcd(i, n / d) == 1) {
			cnt[i]++;
		}
	}
	for (int i = n; i < 2 * n; ++i) {
		ans += cnt[dp[i] / d];
	}
}
int main() {
	while (cin>>n) {
		for (int i = 0; i < n; ++i) {
			scanf("%d", a + i);
			a[i + n] = a[i];
		}
		ans = 0LL;
		for (int i = 1; i * i <= n; ++i) {
			if (n % i == 0) {
				check(i);
				if (n / i != i) check(n / i);
			}
        }
		cout<<ans<<endl;
	}
	return 0;
}
