#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#include <string>
#include <cmath>
#include <cstdio>
#include <iomanip>
#include <fstream>
#include <cassert>
#include <cstring>
#include <unordered_set>
#include <unordered_map>
#include <numeric>
#include <ctime>
#include <bitset>
#include <complex>

using namespace std;

const int N = 1e6 + 7;

int sz = 0;
int kek[N];

void add(int x) {
	sz -= (kek[x] > 0);
	kek[x]++;
	sz += (kek[x] > 0);
}

void ers(int x) {
	sz -= (kek[x] > 0);
	kek[x]--;
	sz += (kek[x] > 0);
}

signed main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n, k;
	cin >> n >> k;
	vector<int> a(n);
	for (auto &t : a) {
		cin >> t;
	}
	int ans = -1;
	pair<int, int> tans = {-1, -1};
	int r = -1;
	for (int i = 0; i < n; i++) {
		if (r < i) add(a[i]);
		r = max(r, i);
		while (r + 1 < n) {
			add(a[r + 1]);
			if (sz > k) {
				ers(a[r + 1]);
				break;
			} else {
				r++;
			}
		}
		if (ans < r - i + 1) {
			ans = r - i + 1;
			tans = {i + 1, r + 1};
		}
		ers(a[i]);
	}
	cout << tans.first << ' ' << tans.second << endl;
}
