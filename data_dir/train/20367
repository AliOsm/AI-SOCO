#include <bits/stdc++.h>

using namespace std;
const int N = 3001;
bool isPalindrome[N][N];
int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif
	char buffer[N];
	scanf("%s", buffer);
	string s(buffer);
	vector<int> palindrome[N];
	for (int i = 0; i < s.size(); ++i) {
		isPalindrome[i][i] = true;
		if (i + 1 < s.size())
			isPalindrome[i][i + 1] = s[i] == s[i + 1];
	}
	for (int i = 2; i < s.size(); ++i) {
		for (int j = 0; j + i < s.size(); ++j) {
			isPalindrome[j][j + i] = isPalindrome[j + 1][j + i - 1] && s[j] == s[j + i];
		}
	}
	for (int i = 0; i < s.size(); ++i) {
		for (int j = i; j < s.size(); ++j) {
			if (isPalindrome[i][j]) {
				palindrome[i].push_back(j - i + 1);
			}
		}
	}

	long long cum[N] = {};
	for (int i = 0; i < N; ++i) {
		cum[i] = palindrome[i].size();
		if (i)
			cum[i] += cum[i - 1];
	}
	long long result = 0;
	for (int i = 0; i < s.size(); ++i) {
		for (int j = 0; j < palindrome[i].size(); ++j) {
			result += cum[N - 1] - cum[i + palindrome[i][j] - 1];
		}
	}
	printf("%lld\n", result);
	return 0;
}

