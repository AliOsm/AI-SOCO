/// *********************************************** K
/// B *                                           * H
/// I *    Solved By : Bir Bahadur Khatri(B'ru)   * A
/// R *      Be Positive,be Happy.                * T
/// U *                                           * R
/// *********************************************** I

#include<bits/stdc++.h>

#define LL long long int
#define ULL unsigned LL
#define PI 2.0*acos(0.0)
#define D double
#define sz size()
#define PB push_back
#define cp printf("***** here here here here *****\n");
#define NL printf("\n")
#define CHR getchar()
#define SQR(n) (n*n)
#define xx first
#define yy second
#define MEM(a,val) memset(a,val,sizeof(a))
#define Max(a,b) ((a>b)?a:b)
#define Min(a,b) ((a<b)?a:b)
#define _Max(a,b,c) Max(a,Max(b,c))
#define _Min(a,b,c) Min(a,Min(b,c))
#define S1(a) a=in<int>()
#define S2(a,b) a=in<int>(),b=in<int>()
#define S3(a,b,c) a=in<int>(),b=in<int>(),c=in<int>()
#define SL1(a) a=in<LL>()
#define SL2(a,b) a=in<LL>(),b=in<LL>()
#define SL3(a,b,c) a=in<LL>(),b=in<LL>(),c=in<LL>()
#define F(i,a,b) for(int i=a;i<b; i++)
#define R(i,a,b) for(int i=a-1;i>=b; i--)
#define all(a) a.begin(),a.end()
#define BitCnt(a) __builtin_popcountll(a)
#define InpOut freopen("A.in","r",stdin),freopen("A1.out","w",stdout)
#include <time.h>

using namespace std;
template <typename T> T in(){char ch;T n = 0;bool ng = false;while (1){ch = getchar();if (ch == '-'){ng = true;ch = getchar();break;}if (ch>='0' && ch<='9')     break;}while (1){n = n*10 + (ch - '0');ch = getchar();if (ch<'0' || ch>'9')   break;}return (ng?-n:n);}
template<typename T>inline T Dist(T x1,T y1,T x2, T y2){return sqrt( SQR(x1-x2) + SQR(y1-y2) );}
template<typename T>inline T POW(T B,T P){ if(P==0) return 1; if(P&1) return B*POW(B,P-1);  else return SQR(POW(B,P/2));}
template<typename T>inline T ABS(T a) {if(a<0)return -a;else return a;}
template<typename T>inline T Gcd(T a,T b){if(a<0)return Gcd(-a,b);if(b<0)return Gcd(a,-b);return (b==0)?a:Gcd(b,a%b);}
template<typename T>inline T Lcm(T a,T b) {if(a<0)return Lcm(-a,b);if(b<0)return Lcm(a,-b);return a*(b/Gcd(a,b));}
long long Bigmod(long long base, long long power, long long MOD){long long ret=1;while(power){if(power & 1)ret=(ret*base)%MOD;base=(base*base)%MOD;power>>=1;}return ret;}
long long ModInverse(long long number, long long MOD){return Bigmod(number, MOD-2, MOD);}
int Set(int N,int pos){ return N=N | (1<<pos);}
int Reset(int N,int pos){return N= N & ~(1<<pos);}
bool Chkbit(int N,int pos){return (bool)(N & (1<<pos));}
bool isVowel(char ch){ ch=toupper(ch); if(ch=='A'||ch=='U'||ch=='I'||ch=='O'||ch=='E') return true; return false;}
bool isConst(char ch){if (isalpha(ch) && !isVowel(ch)) return true; return false;}
int toInt(string s)  { int sm; stringstream ss(s); ss>>sm; return sm; }
long long int toLlint(string s) { long long int sm; stringstream ss(s); ss>>sm; return sm;}

///**********************************************************//


///         0123456789
#define MOD 1000000007
#define INF 100000000
/// ==========================================////

struct Matrix {
    LL ar[22][22];
};

int k;

Matrix MUL(Matrix a,Matrix b)
{
    Matrix ans;
    for(int i=0;i<k;i++) {
        for(int j=0;j<k;j++) {
            ans.ar[i][j]=0;
            for(int kk=0;kk<k;kk++) {
                ans.ar[i][j]=( ans.ar[i][j]+a.ar[i][kk]*b.ar[kk][j])%MOD;
            }
        }
    }
    return ans;
}

Matrix Unit;

Matrix Big_Mod(Matrix a,int n)
{
    Matrix ans=Unit;
    while(n) {
        if(n&1) {
            ans=MUL(ans,a);
        }
        a=MUL(a,a);
        n/=2;
    }
    return ans;
}

int a[22][22];


Matrix Base;

int dx[]={1,-1,0,0,0};
int dy[]={0,0,-1,1,0};
int n,m,q;
int Id[22][22];
void MakeBaseMatrix()
{
    for(int i=0;i<k;i++) {
        for(int j=0;j<k;j++) {
            Base.ar[i][j]=0;
        }
    }

    for(int i=0;i<n;i++) {
        for(int j=0;j<m;j++) {
            if( a[i][j] ==0) continue;
            for(int kk=0;kk<5;kk++) {
                int xx=i+dx[kk],yy=j+dy[kk];
                if(xx>=0&&xx<n&&yy>=0&&yy<m ) {
                    Base.ar[ Id[i][j] ][ Id[xx][yy] ]=1;
                }
            }
        }
    }
}


void Dekhi()
{
    int id=0;
    for(int i=0;i<n;i++) {
        for(int j=0;j<m;j++) {
            Id[i][j]=id++;
        }
    }
}

void Prnt(Matrix aa)
{
    for(int i=0;i<k;i++) {
        for(int j=0;j<k;j++) {
            cout<<aa.ar[i][j]<< " ";
        }
        NL;
    }
    NL;
}

int main()
{


    S3(n,m,q);
    k=n*m;
    Matrix now;
    int pv=1;
    for(int i=0;i<k;i++) {
        for(int j=0;j<k;j++) {
            a[i][j]=1;
        }
    }
    Dekhi();

    MEM(now.ar,0);
    for(int i=0;i<k;i++) now.ar[i][i]=1;
    Unit=now;

    //for(int i=1;i<k;i++) now.ar[i][i]=0;

    for(int i=0;i<q;i++) {
        int tp,x,y,t;
        S3(tp,x,y); S1(t);
        x--,y--;
        int baki=(t-pv);
        if(tp==1) {
            MakeBaseMatrix();
            Matrix tp=Big_Mod(Base,baki);
            now=MUL(tp,now);
            //Prnt(now);
            printf("%lld\n",now.ar[ Id[x][y]  ][ 0  ]);
            pv=t;
        }
        else if(tp==2) {
            MakeBaseMatrix();
            Matrix tp=Big_Mod(Base,baki-1);
            //Prnt(tp);
            now=MUL(tp,now);
            //Prnt(now);
            a[x][y]=0;
            pv=t-1;

            //Prnt(Base);
        }
        else {
            MakeBaseMatrix();
            Matrix tp=Big_Mod(Base,baki);
            now=MUL(tp,now);
            //Prnt(now);
            a[x][y]=1;
            pv=t;


        }
    }

    return 0;
}
