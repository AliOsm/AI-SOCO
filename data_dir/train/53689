#include <iostream>
#include <fstream>
#include <string>
#include <cstring>
#include <stdio.h>
#include <iomanip>
#include <cmath>
#include <vector>
#include<cctype>
#include<algorithm>
#include<set>
#include<stack>
#include<map>
#include<stdlib.h>
#include<ctime>
#include<iterator>
#include <deque>
#include <sstream>
#include<queue>
#include<cstdlib>
#include<bitset> 

#define fn(i,n) for(int (i) = 0;(i) < (n);(i)++)
#define f1n(i,n) for(int (i) = 1;(i) <= (n);(i)++)
#define mk(f,s) make_pair((f),(s))

#define ri(n) scanf("%d",&n)
#define rl(n) scanf("%lld",&n)
#define rs(s) scanf("%s",&s)

#define PI 3.1415926535897932384626433832795

using namespace std;
 
typedef long long ll;
typedef pair<int ,int > pp; 

typedef vector<int  > v1;
typedef vector<ll  > vl;
typedef vector<pp  > vpp;
typedef vector<bool  > vb;
typedef vector<char > vc;
typedef vector<v1 > v2;

typedef map<int ,int > mf;
typedef map<int ,vpp > mv;
typedef map<int ,v1 > ad;

int const siz = 1e9,bound = 1e5,mod = siz+7 ;
ll const cnt = 1e14;

vpp aa;
map<int ,vpp > draw;

int main() {
//	freopen("o.txt","w",stdout);
//	freopen("in.txt","r",stdin); 	
//	ios::sync_with_stdio(0);

	int n;
	ri(n);
	aa.push_back(mk(0,0));
	fn(i,n){
		int a;
		ri(a);
		if(i%2 == 1)
			aa.push_back(mk(aa[i].first+a,aa[i].second-a));
		else aa.push_back(mk(aa[i].first+a,aa[i].second+a));
	//	cout<<aa[i+1].first<<" "<<aa[i+1].second<<endl;
 	}

	int h = 0, w = 0,dir = 1;
	fn(i,aa.size() - 1){
		for(;w<aa[i+1].first;w++){
			draw[h].push_back(mk(w,dir));
			h += dir;
		}

		if(dir == -1){ 
			dir = 1;
			h++;
		}else{ 
			dir = -1;
			h--;
		}
	}


	vector<string > ans(draw.size());
	int i = 0;
	for(map<int ,vpp >::reverse_iterator it = draw.rbegin();it != draw.rend();it++){
		int k = 0;
		fn(j,it->second.size()){
		//	cout<<it->first<<" "<<it->second[j].first<<" "<<it->second[j].second<<endl;
			for(;k < it->second[j].first;k++)
				ans[i] += ' ';
			if(it->second[j].second == 1)
				ans[i] += '/';
			else ans[i] += '\\';
			k++;
		}
		while(k < w)
			ans[i] += ' ',k++; 
		i++;
	}

	fn(i,ans.size())
		printf("%s\n",ans[i].c_str());
	return 0;
}