#include <bits/stdc++.h>
#define int long long

using namespace std;

int t[400005];
int a[100005];

void build(int tl,int tr,int v)
{
    if(tl>tr)
        return;
    else if(tl==tr)
    {
        t[v]=a[tl];
    }
    else
    {
        int tm=(tl+tr)/2;
        build(tl,tm,2*v);
        build(tm+1,tr,2*v+1);
        t[v]=__gcd(t[2*v],t[2*v+1]);
    }

}

int get(int tl,int tr,int l,int r,int v)
{
    if(tl>tr||l>r)
        return 0;
    else if(tr<l || tl>r)
        return 0;
    else if(tl==l && tr==r)
        return t[v];
    else
    {
        int tm=(tl+tr)/2;
        return __gcd(get(tl,tm,l,min(tm,r),2*v),get(tm+1,tr,max(tm+1,l),r,2*v+1));
    }
}


signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    int n;
    cin>>n;
    vector<pair<int,int> >v;
    for (int i = 1; i <=n ; ++i) {
        cin>>a[i];
        v.push_back({a[i],i});
    }

    sort(v.begin(),v.end());
    build(1,n,1);
    int m;
    cin>>m;
    while (m--)
    {
     int l,r;
     cin>>l>>r;
     int g=get(1,n,l,r,1);
     vector<pair<int,int> >::iterator low=lower_bound(v.begin(),v.end(),make_pair(g,l));
     vector<pair<int,int> >::iterator up=lower_bound(v.begin(),v.end(),make_pair(g,r+1));
     int sz=up-low;
     cout<<r-l+1-sz<<"\n";
    }

}