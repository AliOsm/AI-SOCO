#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<ld> point;
#define F first
#define S second

int dp[16][1<<16][16], cost[16][16];

int main()
{
	#ifdef DGC
		freopen("a.txt", "r", stdin);
		//freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(0), cin.tie(0);

	int n, m;
	cin >> n >> m;
	vector<vector<int>> a(n, vector<int>(m));
	for (auto &i : a)
		for (auto &j : i)
			cin >> j;

	for (int i = 0; i < n; ++i)
		for (int j = 0; j < n; ++j)
		{
			int c = 1<<30;
			for (int k = 0; k < m; ++k)
				c = min(c, abs(a[i][k]-a[j][k]));
			cost[i][j] = c;
		}

	int ans = 0;
	for (int l = 0; l < n; ++l)
	{
		dp[l][1<<l][l] = 1<<30;
		for (int i = 0; i < 1<<n; ++i)
			for (int k = 0; k < n; ++k)
				if (~i>>k&1)
					for (int j = 0; j < n; ++j)
						dp[l][i|1<<k][k] = max(dp[l][i|1<<k][k], min(dp[l][i][j], cost[j][k]));

		for (int i = 0; i < n; ++i)
		{
			int temp = dp[l][(1<<n)-1][i];
			for (int j = 0; j < m-1; ++j)
				temp = min(temp, abs(a[i][j]-a[l][j+1]));
			ans = max(ans, temp);
		}
	}

	cout << ans << "\n";

	return 0;
}
