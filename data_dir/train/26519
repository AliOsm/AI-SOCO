#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef pair<int, int> pi;

ll mod = 1e9+7;
 
long long fastexp (long long a, long long b, long long n) {
  long long res = 1;
  while (b) {
      if (b & 1) res = res*a%n; 
      a = a*a%n;
      b >>= 1;
  }
  return res;
}

int main() {
  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
  ll n, m, q;
  cin >> n >> m >> q;
  string s, t;
  cin >> s >> t;
  
  if (m > n) {
    while (q--) {
      cout << 0 << "\n";
    }
    return 0;
  }
//   ll p = rand()%100000;
//   ll pm = fastexp(p, m-1, mod);
//   
//   
//   ll hashs = 0, hasht = 0, pr = 1;
//   for (int i = 0; i<  m; i++) {
//     hasht = (hasht + (t[i]-'a')*pr)%mod;
//     pr = pr*p%mod; 
//   }
//   
//   pr = 1;
//   for (int i = 0; i < m; i++) {
//     hashs = (hashs + (s[i]-'a')*pr)%mod;
//     pr = pr*p%mod; 
//   }
//   
//   vector<ll> hash(n, -1);
//   
//   cerr << "ht:" << hasht << endl;
//   hash[0] = hashs;
//   cerr << hash[0] << " ";
//   for (int i = 1; i+m-1 < n; i++) {
//     hash[i] = ((hash[i-1] - (s[i-1]-'a') +mod )*fastexp(p, mod-2, mod)%mod + s[i+m-1]*pm)%mod;
//     cerr << hash[i] << " ";
//   }
//   cerr << endl;
  vector<int> acum(n+1, 0);
  for (int i = 1; i <= n ;i++) {
    acum[i] = acum[i-1];
    if (t==s.substr(i-1, m)) acum[i]++;
  }
  
  while (q--) {
    int l, r;
    cin >> l >> r;
    if (r-l+1 < m) cout << 0 << "\n";
    else cout << acum[r-m+1]-acum[l-1] << "\n";
  }
  return 0;
}

