#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vvi;
typedef vector<pii> vii;
typedef vector<vector<pii> > vvii;
typedef long double ld;
typedef map<int, int> mapii;
typedef map<string, int> mapsi;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pi  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) { x, {y, z } }

int n;

int even(vi vec)
{
	int ret = INT_MAX;
	vi temp;

	erep(i, 1, n)
	{
		if (i & 1)
			continue;
		temp.push_back(i);
	}

	int l = 0, r = (n / 2) - 1;
	while (r < sz(temp))
	{
		int cnt = 0, idx = 0;
		erep(j, l, r)
		{
			cnt += abs(temp[j] - vec[idx]);
			idx++;
		}
		l++, r++;
		ret = min(ret, cnt);
	}
	return ret;
}

int odd(vi vec)
{
	int ret = INT_MAX;
	vi temp;

	erep(i, 1, n)
	{
		if (i & 1)
			temp.push_back(i);
	}

	int l = 0, r = (n / 2) - 1;

	while (r < sz(temp))
	{
		int cnt = 0, idx = 0;
		erep(j, l, r)
		{
			cnt += abs(temp[j] - vec[idx]);
			idx++;
		}
		l++, r++;
		ret = min(ret, cnt);
	}
	return ret;
}

int main()
{
	ios_base::sync_with_stdio(0);
//	cin.tie(0);

	cin >> n;
	vi vec(n / 2);

	rep(i, 0, n/2)
		cin >> vec[i];
	sort(all(vec));

	cout << min(even(vec), odd(vec));

	return 0;
}
