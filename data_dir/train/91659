#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
#define ii pair<int,int>
#define ll long long
#define pll pair<ll,ll>
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 
#define iiordered_set tree<pll, null_type,less<pll>, rb_tree_tag,tree_order_statistics_node_update>
using namespace std;
#define MOD 1000000007
ll power(ll a,ll b, ll m=MOD)
{
    ll res=1;
    while(b>0)
    {
        if(b&1)
            res=(res*a)%MOD;
        a=(a*a)%MOD;
        b>>=1;
    }
    return res;
}
ll inverse(ll a,ll m=MOD)
{
    return power(a,m-2,m);
}
int ceil(int a,int b)
{
    return (a+b-1)/b;
}
#define INFl 1e18
#define vi vector<int>
#define vvi vector<vi>
#define vl vector<long long>
#define vvl vector<vl>
#define vll vector<pll>
#define vii vector<ii>
#define vvii vector<vii>
#define tri pair<int,ii>
#define F first
#define S second
#define forl(i,n) for(int i=0;i<n;i++)
#define fore(i,n) for(int i=1;i<=n;i++)
#define rforl(i,n)  for(int i=n-1;i>=0;i--)
#define rfore(i,n)  for(int i=n;i>=1;i--)
#define CASE(t) cout<<"Case #"<<(t)<<": ";
#define INF 1020000000
#define gcd(a,b) __gcd(a,b)
#define all(x)  x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define print(x)    for(auto it=x.begin();it!=x.end();it++) cout<<*it<<' '; cout<<endl;
#define printii(x)  for(auto it=x.begin();it!=x.end();it++) cout<<it->F<<' '<<it->S<<endl;  
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
ll dp[2][1005][1005];
int main()
{
    fastio;
    int n,m;
    cin>>n>>m;
    fore(i,n)
    fore(j,n)
    {
        if(i<=j)    dp[0][i][j]=1;
    }
    forl(i,m-1)
    {
        for(int x=1;x<=n;x++)
        {
            for(int y=n;y>=x;y--)
            {
                ll sum=dp[1][x-1][y]+dp[1][x][y+1]-dp[1][x-1][y+1]+dp[0][x][y];
                sum%=MOD;
                if(sum<0)   sum+=MOD;
                dp[1][x][y]=sum;           
            }
        }
        for(int x=0;x<1005;x++)
        for(int y=0;y<1005;y++)
        {
            swap(dp[0][x][y],dp[1][x][y]);
            dp[1][x][y]=0;
        }
    }
    ll ans=0;
    for(int x=1;x<=n;x++)
    for(int y=x;y<=n;y++)
        ans+=dp[0][x][y],ans%=MOD;
    cout<<ans<<endl;
}