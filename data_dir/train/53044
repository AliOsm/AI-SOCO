#include<bits/stdc++.h>

using namespace std;

#define in(a,x,y) (a>=x && a<=y)
#define out(a,x,y) (!in(a,x,y))
#define sz(a) ((int)a.size())
#define repv(i,a) for(int i=0;i<sz(a);i++)
#define revv(i,a) for(int i=sz(a)-1;i>=0;i--)
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define rev(i,a,b) for(int i=a;i>=b;i--)
#define countbit(x) __builtin_popcount(x)
#define SET(a) memset(a,-1,sizeof a)
#define CLR(a) memset(a,0,sizeof a)
#define all(a) a.begin(),a.end()
#define pb(a) push_back(a)

//          0123456789
#define lmt 200000
#define MX (lmt + 20 )
#define MOD 1000000007
#define inf 1000000000000000000LL
#define eps 1e-9

int arr[310];
char num[10000];
int dgt;

void func(){

    rev(i,dgt-1,0){
        printf("%c",num[i]);
    }
    puts("");
}

int main()
{
    num[0] = '0';
    rep(i,1,1000){
        num[i] = '0';
    }

    int n,sum;
    cin>>n;
    dgt = 1;
    sum = 0;

    int store;
    rep(i,1,n) {
        cin>>arr[i];
        store = arr[i];

        if(arr[i] > sum){

            int pd = dgt;
            while(dgt*9 < arr[i]) dgt++;

            if(pd  < dgt){

                int tmp = arr[i];
                rep(j,0,dgt-2){

                    if(tmp==1) num[j] = '0';
                    else if(tmp > 9 ){
                        num[j] = '9';
                        tmp -= 9;
                    }
                    else{
                        num[j] = '0' + (tmp-1);
                        tmp = 1;
                    }
                }

                num[dgt-1] = '0'+tmp;
            }
            else{

                arr[i] -= sum;
                rep(j,0,dgt-1){

                    if( num[j] < '9' ){

                        int choto = '9' - num[j];

                        while(arr[i]>0 && choto > 0 ){

                            arr[i]--;
                            choto--;
                            num[j]++;
                        }
                    }

                    if(arr[i]==0) break;
                }
            }
        }
        else if(arr[i]<=sum){


            int tmp = num[0] -'0';
            bool get = false;

            rep(j,1,dgt){
//        cout<<"go";

                int v = num[j] - '0';
                int one = 0 ;
                while(v  <  9){
                    one++;

                    if( sum+one - tmp <= arr[i] ){

//                    cout<<"d -- 00"<< sum+one<<endl;

                        num[j]+= one;
//                        cout<<"ss "<<arr[i]<<endl;

                        sum += (one  - tmp);
                        arr[i]-=sum;

//problem
//                        arr[i] -= tmp;
//                        arr[i]  = store - arr[i];


                        rep(k,0,j-1){
                            int v = min( 9 , arr[i]);
                            num[k] = '0' + v;
                            arr[i]-=v;
                        }

                        get = true;
                    }
                    if(get) break;
                    v++;
                }

                tmp += (num[j]-'0');

                if(j==dgt) {dgt++;break;}
                if(get) break;
            }
        }


        func();

        sum = store;

//        cout<<sum<<" "<<dgt<<endl;
    }
    return 0;
}
