#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define ll long long int
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
ll n,k;
const ll M=2005;
string s[M];
ll rem[M][M];
bool vis[M][M];
void solve()
{
	queue<pair<ll,ll> > q;
	rem[1][1]=k;
	q.push(mp(1,1));
	while(!q.empty())
	{
		vector<pair<ll,ll> > curr;
		pair<ll,ll> tp=q.front();
		ll lvl=tp.ff+tp.ss;
		// cout<<endl<<lvl<<" ";
		while(!q.empty())
		{
			tp=q.front();
			if(vis[tp.ff][tp.ss])
			{
				q.pop();
				continue;
			}
			if(tp.ff+tp.ss==lvl)
			{
				// cout<<tp.ff<<","<<tp.ss<<" ";
				vis[tp.ff][tp.ss]=1;
				curr.pb(tp);
				q.pop();
			}
			else
				break;
		}
		char mn='z';
		// cout<<mn<<" ";
		for(ll i=0;i<curr.size();i++)
		{
			// cout<<mn<<" ".;
			if(rem[curr[i].ff][curr[i].ss])
				mn='a';
			else
				mn=min(mn,s[curr[i].ff][curr[i].ss]);
		}
		cout<<mn;
		for(ll i=0;i<curr.size();i++)
		{
			if(rem[curr[i].ff][curr[i].ss] || s[curr[i].ff][curr[i].ss]==mn)
			{
				if(curr[i].ff+1<=n)
				{
					q.push(mp(curr[i].ff+1,curr[i].ss));
					if(rem[curr[i].ff][curr[i].ss])
					{
						if(s[curr[i].ff][curr[i].ss]=='a')
							rem[curr[i].ff+1][curr[i].ss]=max(rem[curr[i].ff+1][curr[i].ss],rem[curr[i].ff][curr[i].ss]);
						else
							rem[curr[i].ff+1][curr[i].ss]=max(rem[curr[i].ff+1][curr[i].ss],rem[curr[i].ff][curr[i].ss]-1);							
					}
				}
				if(curr[i].ss+1<=n)
				{
					q.push(mp(curr[i].ff,curr[i].ss+1));
					if(rem[curr[i].ff][curr[i].ss])
					{
						if(s[curr[i].ff][curr[i].ss]=='a')
							rem[curr[i].ff][curr[i].ss+1]=max(rem[curr[i].ff][curr[i].ss+1],rem[curr[i].ff][curr[i].ss]);
						else
							rem[curr[i].ff][curr[i].ss+1]=max(rem[curr[i].ff][curr[i].ss+1],rem[curr[i].ff][curr[i].ss]-1);							
					}
				}
			}
		}
	}
	cout<<"\n";
}
int main()
{
	//ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	cin>>n>>k;
	for(ll i=1;i<=n;i++)
	{
		cin>>s[i];		
		s[i].pb('$');
		for(ll j=n;j>=1;j--)
			s[i][j]=s[i][j-1];
	}
	solve();
	// for(ll i=1;i<=n;i++)
	// {
	// 	for(ll j=1;j<=n;j++)
	// 	{
	// 		// cout<<i<<","<<j<<" "<<rem[i][j]<<endl;
	// 	}
	// }
	return 0;
}