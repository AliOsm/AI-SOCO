#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cassert>
#include <ctime>
#include <deque>

using namespace std;

#define forn(i, n) for (int i = 0; i < int(n); i ++)
#define ford(i, n) for (int i = int(n) - 1; i >= 0; i --)
#define mp make_pair
#define pb push_back
#define fs first
#define sc second
#define pi 3.1415926535897932384626433832795l

typedef long long ll;
typedef long double ld;

int n, m, k, p;
int a[1100][1100];
set <pair<ll, int> > s;
ll besta[1100000];
const ll inf = 1000000000000000000ll;

int main(){
#ifdef SG
  freopen ("input.txt", "r", stdin);
//  freopen ("output.txt", "w", stdout);
#endif
    cin >> n >> m >> k >> p;
    forn(i, n) {
        ll sum1 = 0;
        forn(j, m) {
            scanf ("%d", &a[i][j]);
            sum1 += a[i][j];
        }
        s.insert(mp(sum1, i));
    }
    forn(i, k) {
        pair<ll, int> k1 = *(--s.end());    
        if(i == 0) {
            besta[i] = k1.fs;
        } else {
            besta[i] = besta[i - 1] + k1.fs;
        }
        s.erase(k1);
        k1.fs -= 1ll * p * m;
        s.insert(k1);
    }
    s.clear();
    forn(i, m) {
        ll sum1 = 0;
        forn(j, n) {
            sum1 += a[j][i];
        }
        s.insert(mp(sum1, i));
    }
    ll tek = 0;
    ll ans = -inf;
    forn(i, k) {
        ans = max(ans, besta[k - 1 - i] + tek - 1ll * i * 1ll * ((k - i) * p));
        pair<ll, int> k1 = *(--s.end());
        tek += k1.fs;
        s.erase(k1);
        k1.fs -= 1ll * n * p;
        s.insert(k1);
    }
    ans = max(ans, tek);
    cout << ans << endl;

       

    return 0;
}
